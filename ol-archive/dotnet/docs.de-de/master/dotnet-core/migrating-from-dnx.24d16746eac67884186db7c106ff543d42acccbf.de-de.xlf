<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b752e23f37f83a68ef4a7a97108479f7736d53cd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\migrating-from-dnx.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6aafd3ead74fbd4c530d08c20269cec4974ec57</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">defb9cd7a64178a68a21e9fcbf80be48c0ae00d6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Migrating from DNX to .NET Core CLI</source>
          <target state="translated">Migrieren von DNX zur .Net Core-CLI</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Migrating from DNX to .NET Core CLI</source>
          <target state="translated">Migrieren von DNX zur .Net Core-CLI</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Migrating from DNX to .NET Core CLI</source>
          <target state="translated">Migrieren von DNX zur .Net Core-CLI</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Übersicht</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The RC1 release of .NET Core and ASP.NET Core 1.0 introduced DNX tooling.</source>
          <target state="translated">Im RC1-Release von .NET Core und ASP.NET Core 1.0 wurde DNX eingeführt.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The RC2 release of .NET Core and ASP.NET Core 1.0 moved from DNX to the .NET Core CLI.</source>
          <target state="translated">Im RC2-Release von .NET Core und ASP.NET Core 1.0 wurde der Wechsel von DNX auf die NET Core-CLI vollzogen.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>As a slight refresher, let's recap what DNX was about.</source>
          <target state="translated">Lassen Sie uns als kurze Auffrischung noch einmal zusammenfassen, worum es bei DNX ging.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DNX was a runtime and a toolset used to build .NET Core and, more specifically, ASP.NET Core 1.0 applications.</source>
          <target state="translated">DNX war eine Laufzeit und ein Toolset, das zum Erstellen von .NET Core und, genauer gesagt, ASP.NET Core 1.0-Anwendungen verwendet wurde.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It consisted of 3 main pieces:</source>
          <target state="translated">DNX bestand aus 3 Hauptteilen:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>DNVM - an install script for obtaining DNX</source>
          <target state="translated">DNVM – ein Installationsskript zum Abrufen von DNX</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>DNX (Dotnet Execution Runtime) - the runtime that executes your code</source>
          <target state="translated">DNX (Dotnet Execution Runtime) – die Laufzeit, die Ihren Code ausführt</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>DNU (Dotnet Developer Utility) - tooling for managing dependencies, building and publishing your applications</source>
          <target state="translated">DNU (Dotnet Developer Utility) – Tools zum Verwalten von Abhängigkeiten, Erstellen und Veröffentlichen Ihrer Anwendungen</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>With the introduction of the CLI, all of the above are now part of a single toolset.</source>
          <target state="translated">Mit der Einführung der CLI (command line interface, Befehlszeilenschnittstelle) sind alle oben genannten Teile jetzt Bestandteil eines einzigen Toolsets.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>However, since DNX was available in RC1 timeframe, you might have projects that were built using it that you would want to move off to the new CLI tooling.</source>
          <target state="translated">Nachdem DNX im RC1-Zeitrahmen verfügbar war, könnten Sie allerdings noch über Projekte verfügen, die mit DNX erstellt wurden, und die Sie möglicherweise zu den neuen CLI-Tools verschieben möchten.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This migration guide will cover the essentials on how to migrate projects off of DNX and onto .NET Core CLI.</source>
          <target state="translated">Dieses Migrationshandbuch behandelt die Grundlagen, wie Sie Projekte weg von DNX und zur .NET Core-CLI migrieren können.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you are just starting a project on .NET Core from scratch, you can freely skip this document.</source>
          <target state="translated">Wenn Sie ein Projekt auf .NET Core von Grund auf neu erstellen, können Sie dieses Dokument getrost überspringen.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Main changes in the tooling</source>
          <target state="translated">Wichtigste Änderungen in den Tools</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>There are some general changes in the tooling that should be outlined first.</source>
          <target state="translated">Es gibt einige allgemeine Änderungen in den Tools, die zuerst ausgeführt werden sollten.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>No more DNVM</source>
          <target state="translated">DNVM ist nicht mehr vorhanden</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>DNVM, short for <bpt id="p1">*</bpt>DotNet Version Manager<ept id="p1">*</ept> was a bash/PowerShell script used to install a DNX on your machine.</source>
          <target state="translated">DNVM, kurz für <bpt id="p1">*</bpt>DotNet Version Manager<ept id="p1">*</ept> war ein Bash/PowerShell-Skript mit dem ein DNX auf Ihrem Computer installiert wurde.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It helped users get the DNX they need from the feed they specified (or default ones) as well as mark a certain DNX "active", which would put it on the $PATH for the given session.</source>
          <target state="translated">Benutzer konnten dadurch das benötigte DNX von einem von ihnen angegebenen Feed (oder Standard-Feeds) erhalten sowie ein bestimmtes DNX als „aktiv“ markieren, das $PATH für die jeweilige Sitzung als Umgebungsvariable setzte.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This would allow you to use the various tools.</source>
          <target state="translated">Dies ermöglichte die Nutzung der verschiedenen Tools.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>DNVM was discontinued because its feature set was made redundant by changes coming in the .NET Core CLI tools.</source>
          <target state="translated">DNVM wurde eingestellt, da dessen Featuregruppe durch die geplanten Änderungen in den .NET Core-CLI-Tools überflüssig wurde.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The CLI tools come packaged in two main ways, as was explained in the <bpt id="p1">[</bpt>overview document<ept id="p1">](tools/index.md#installation)</ept>:</source>
          <target state="translated">Die CLI-Tools gibt es in zwei Paketen, wie bereits im <bpt id="p1">[</bpt>Übersichtsdokument<ept id="p1">](tools/index.md#installation)</ept> erklärt:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Native installers for a given platform</source>
          <target state="translated">Native Installationsprogramme für eine bestimmte Plattform</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Install script for other situations (like CI servers)</source>
          <target state="translated">Installationsskript für andere Situationen (wie CI-Server)</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Given this, the DNVM install features are not needed.</source>
          <target state="translated">Angesichts dessen werden die Installationsfeatures von DNVM nicht benötigt.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>But what about the runtime selection features?</source>
          <target state="translated">Was ist aber mit den Features zur Auswahl von Laufzeiten?</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You reference a runtime in your <ph id="ph1">`project.json`</ph> by adding a package of a certain version to your dependencies.</source>
          <target state="translated">Sie verweisen auf eine Laufzeit in Ihrer <ph id="ph1">`project.json`</ph>-Datei, indem Sie ein Paket einer bestimmten Version zu Ihren Abhängigkeiten hinzufügen.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>With this change, your application will be able to use the new runtime bits.</source>
          <target state="translated">Durch diese Änderung kann die Anwendung die neuen Laufzeit-Bits verwenden.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Getting these bits to your machine is the same as with the CLI: you install the runtime via one of the native installers it supports or via its install script.</source>
          <target state="translated">Diese Bits auf Ihren Computer zu verschieben ist der gleiche Prozess wie bei der CLI: Sie installieren die Laufzeit über eines der unterstützten nativen Installationsprogramme oder das Installationsskript.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Different commands</source>
          <target state="translated">Unterschiedliche Befehle</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If you were using DNX, you used some commands from one of its three parts (DNX, DNU or DNVM).</source>
          <target state="translated">Wenn Sie DNX verwendet haben, haben Sie bisher einige Befehle aus einem der drei Teile genutzt (DNX, DNU oder DNVM).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>With the CLI, some of these commands change, some are not available and some are the same but have slightly different semantics.</source>
          <target state="translated">Mit der CLI ändern sich manche dieser Befehle, manche sind nicht mehr verfügbar und manche bleiben gleich, verfügen jedoch über eine etwas andere Semantik.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The table below shows the mapping between the DNX/DNU commands and their CLI counterparts.</source>
          <target state="translated">Die folgende Tabelle stellt die Zuordnung zwischen DNX-/DNU-Befehlen und ihren CLI-Gegenstücken dar.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>DNX command</source>
          <target state="translated">DNX-Befehl</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>CLI command</source>
          <target state="translated">CLI-Befehl</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Beschreibung</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>dnx run</source>
          <target state="translated">dnx run</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>dotnet run</source>
          <target state="translated">dotnet run</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Run code from source.</source>
          <target state="translated">Code aus Quelle ausführen.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>dnu build</source>
          <target state="translated">dnu build</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>dotnet build</source>
          <target state="translated">dotnet build</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Build an IL binary of your code.</source>
          <target state="translated">Erstellen einer IL-Binärdatei des Codes.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>dnu pack</source>
          <target state="translated">dnu pack</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>dotnet pack</source>
          <target state="translated">dotnet pack</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Package up a NuGet package of your code.</source>
          <target state="translated">Verpacken eines NuGet-Pakets Ihres Codes.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>dnx <ph id="ph1">\[</ph>command] (for example, "dnx web")</source>
          <target state="translated">dnx <ph id="ph1">\[</ph>command] (z.B. „dnx web“)</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>N/A<ph id="ph1">\*</ph></source>
          <target state="translated">NICHT VERFÜGBAR<ph id="ph1">\*</ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In DNX world, run a command as defined in the project.json.</source>
          <target state="translated">In DNX, Ausführen eines Befehls wie in der Datei „project.json“ definiert.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>dnu install</source>
          <target state="translated">dnu install</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>N/A<ph id="ph1">\*</ph></source>
          <target state="translated">NICHT VERFÜGBAR<ph id="ph1">\*</ph></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the DNX world, install a package as a dependency.</source>
          <target state="translated">In DNX, Installieren eines Pakets als Abhängigkeit.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>dnu restore</source>
          <target state="translated">dnu restore</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>dotnet restore</source>
          <target state="translated">dotnet restore</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Restore dependencies specified in your project.json.</source>
          <target state="translated">Wiederherstellen von Abhängigkeiten, die in der Datei „project.json“ angegeben sind.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>dnu publish</source>
          <target state="translated">dnu publish</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>dotnet publish</source>
          <target state="translated">dotnet publish</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Publish your application for deployment in one of the three forms (portable, portable with native and standalone).</source>
          <target state="translated">Veröffentlichen Ihrer Anwendung für die Bereitstellung in einer der drei Formen (portabel, portabel-nativ und eigenständig).</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>dnu wrap</source>
          <target state="translated">dnu wrap</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>N/A<ph id="ph1">\*</ph></source>
          <target state="translated">NICHT VERFÜGBAR<ph id="ph1">\*</ph></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>In DNX world, wrap a project.json in csproj.</source>
          <target state="translated">In DNX, Umschließen von „project.json“ in „csproj“.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>dnu commands</source>
          <target state="translated">dnu commands</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>N/A<ph id="ph1">\*</ph></source>
          <target state="translated">NICHT VERFÜGBAR<ph id="ph1">\*</ph></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In DNX world, manage the globally installed commands.</source>
          <target state="translated">In DNX, Verwalten der global installierten Befehle.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>(<ph id="ph1">\*</ph>) - these features are not supported in the CLI by design.</source>
          <target state="translated">(<ph id="ph1">\*</ph>) – diese Features werden in der CLI nicht unterstützt (dies ist beabsichtigt).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>DNX features that are not supported</source>
          <target state="translated">DNX-Features, die nicht unterstützt werden</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>As the table above shows, there are features from the DNX world that we decided not to support in the CLI, at least for the time being.</source>
          <target state="translated">Wie in der obigen Tabelle gezeigt, gibt es Features in DNX, die absichtlich nicht in der CLI unterstützt werden, zumindest für den Moment.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This section will go through the most important ones and outline the rationale behind not supporting them as well as workarounds if you do need them.</source>
          <target state="translated">In diesem Abschnitt werden die wichtigsten Features aufgezählt und die Gründe, warum diese nicht unterstützt werden, beschrieben. Außerdem wird beschrieben, wie Sie dies umgehen können, falls Sie die Features benötigen.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Global commands</source>
          <target state="translated">Globale Befehle</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>DNU came with a concept called "global commands".</source>
          <target state="translated">In DNU war ein Konzept namens „globale Befehle“ enthalten.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>These were, essentially, console applications packaged up as NuGet packages with a shell script that would invoke the DNX you specified to run the application.</source>
          <target state="translated">Im Wesentlichen waren dies Konsolenanwendungen, die als NuGet Pakete mit einem Shell-Skript verpackt waren, und das angegebene DNX aufriefen, die Sie zum Ausführen der Anwendung angegeben hatten.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The CLI does not support this concept.</source>
          <target state="translated">Dieses Konzept wird in CLI nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>It does, however, support the concept of adding per-project commands that can be invoked using the familiar <ph id="ph1">`dotnet &lt;command&gt;`</ph> syntax.</source>
          <target state="translated">CLI unterstützt jedoch das Konzept, Befehle pro Projekt hinzuzufügen, die mithilfe der bekannten Syntax <ph id="ph1">`dotnet &lt;command&gt;`</ph> aufgerufen werden können.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>More about this can be found in the <bpt id="p1">[</bpt>extensibility overview<ept id="p1">](tools/index.md#extensibility)</ept>.</source>
          <target state="translated">Weitere Informationen hierzu finden Sie unter <bpt id="p1">[</bpt>extensibility overview (Übersicht über die Erweiterbarkeit)<ept id="p1">](tools/index.md#extensibility)</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Installing dependencies</source>
          <target state="translated">Installieren von Abhängigkeiten</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>As of v1, the .NET Core CLI tools don't have an <ph id="ph1">`install`</ph> command for installing dependencies.</source>
          <target state="translated">Seit V1 verfügen die .NET Core-CLI-Tools nicht mehr über einen Befehl <ph id="ph1">`install`</ph> für das Installieren von Abhängigkeiten.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In order to install a package from NuGet, you would need to add it as a dependency to your <ph id="ph1">`project.json`</ph> file and then run <ph id="ph2">`dotnet restore`</ph>.</source>
          <target state="translated">Wenn Sie ein Paket von NuGet installieren möchten, müssen Sie es als Abhängigkeit zu Ihrer Datei <ph id="ph1">`project.json`</ph> hinzufügen und dann <ph id="ph2">`dotnet restore`</ph> ausführen.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Running your code</source>
          <target state="translated">Ausführen des Codes</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>There are two main ways to run your code.</source>
          <target state="translated">Im Wesentlichen gibt es zwei Möglichkeiten, den Code auszuführen.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>One is from source, with <ph id="ph1">`dotnet run`</ph>.</source>
          <target state="translated">Eine Möglichkeit ist das Ausführen von der Quelle mit dem Befehl <ph id="ph1">`dotnet run`</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Unlike <ph id="ph1">`dnx run`</ph>, this will not do any in-memory compilation.</source>
          <target state="translated">Im Gegensatz zu <ph id="ph1">`dnx run`</ph> führt dieser keine Kompilierung im Speicher durch.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>It will actually invoke <ph id="ph1">`dotnet build`</ph> to build your code and then run the built binary.</source>
          <target state="translated">Stattdessen wird <ph id="ph1">`dotnet build`</ph> aufgerufen, um den Code zu erstellen und dann die erstellte Binärdatei auszuführen.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Another way is using the <ph id="ph1">`dotnet`</ph> itself to run your code.</source>
          <target state="translated">Eine andere Möglichkeit ist das Verwenden von <ph id="ph1">`dotnet`</ph> selbst zum Ausführen des Codes.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This is done by providing a path to your assembly: <ph id="ph1">`dotnet path/to/an/assembly.dll`</ph>.</source>
          <target state="translated">Dies erfolgt durch das Bereitstellen eines Pfads zu Ihrer Assembly: <ph id="ph1">`dotnet path/to/an/assembly.dll`</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Migrating your DNX project to .NET Core CLI</source>
          <target state="translated">Migrieren Ihres DNX-Projekts zur .NET Core-CLI</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>In addition to using new commands when working with your code, there are three major things left in migrating from DNX:</source>
          <target state="translated">Zusätzlich zur Nutzung von neuen Befehlen, wenn Sie mit Code arbeiten, gibt es noch drei weitere wichtige Punkte beim Migrieren von DNX:</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Migrate the <ph id="ph1">`global.json`</ph> file if you have it to be able to use CLI.</source>
          <target state="translated">Migrieren Sie die Datei <ph id="ph1">`global.json`</ph> (wenn diese vorhanden ist) um CLI (Command Line Interface, Befehlszeilenschnittstelle) verwenden zu können.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Migrating the project file (<ph id="ph1">`project.json`</ph>) itself to the CLI tooling.</source>
          <target state="translated">Migrieren der Projektdatei (<ph id="ph1">`project.json`</ph>) selbst zu den CLI-Tools.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Migrating off of any DNX APIs to their BCL counterparts.</source>
          <target state="translated">Migrieren weg von beliebigen DNX-APIs zu ihren BLC-Entsprechungen.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Changing the global.json file</source>
          <target state="translated">Ändern der Datei „global.json“</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`global.json`</ph> file acts like a solution file for both the RC1 and RC2 (or later) projects.</source>
          <target state="translated">Die Datei <ph id="ph1">`global.json`</ph> verhält sich wie eine Projektmappendatei für RC1- und RC2- Projekte (oder höhere).</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In order for the CLI tools (as well as Visual Studio) to differentiate between RC1 and later versions, they use the <ph id="ph1">`"sdk": { "version" }`</ph> property to make the distinction which project is RC1 or later.</source>
          <target state="translated">Damit die CLI-Tools (wie auch Visual Studio) zwischen RC1 und höheren Versionen unterscheiden können, verwenden sie die Eigenschaft <ph id="ph1">`"sdk": { "version" }`</ph>, um zu unterscheiden, welches Projekt RC1 oder höher ist.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`global.json`</ph> doesn't have this node at all, it is assumed to be the latest.</source>
          <target state="translated">Wenn <ph id="ph1">`global.json`</ph> nicht über diesen Knoten verfügt, wird davon ausgegangen, dass die höchste Version verwendet wird.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>In order to update the <ph id="ph1">`global.json`</ph> file, either remove the property or set it to the exact version of the tools that you wish to use, in this case <bpt id="p1">**</bpt>1.0.0-preview2-003121<ept id="p1">**</ept>:</source>
          <target state="translated">Entfernen Sie entweder die Eigenschaft, um die Datei <ph id="ph1">`global.json`</ph> zu aktualisieren, oder stellen Sie sie auf die genaue Version der Tools ein, die Sie verwenden möchten, in diesem Fall <bpt id="p1">**</bpt>1.0.0-preview2-003121<ept id="p1">**</ept>:</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Migrating the project file</source>
          <target state="translated">Migrieren der Projektdatei</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The CLI and DNX both use the same basic project system based on <ph id="ph1">`project.json`</ph> file.</source>
          <target state="translated">Die CLI und DNX verwenden dasselbe grundlegende Projektsystem basierend auf der Datei <ph id="ph1">`project.json`</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The syntax and the semantics of the project file are pretty much the same, with small differences based on the scenarios.</source>
          <target state="translated">Die Syntax und Semantik der Projektdatei sind weitgehend identisch, abgesehen von kleinen Unterschieden abhängig von den Szenarios.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>There are also some changes to the schema which you can see in the <bpt id="p1">[</bpt>schema file<ept id="p1">](http://json.schemastore.org/project)</ept> or in a more friendly <bpt id="p2">[</bpt>project.json reference<ept id="p2">](tools/project-json.md)</ept>.</source>
          <target state="translated">Es gibt auch einige Änderungen am Schema, die Sie in der <bpt id="p1">[</bpt>Schemadatei<ept id="p1">](http://json.schemastore.org/project)</ept> oder in einem benutzerfreundlicheren <bpt id="p2">[</bpt>project.json-Verweis<ept id="p2">](tools/project-json.md)</ept> einsehen können.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If you are building a console application, you need to add the following snippet to your project file:</source>
          <target state="translated">Wenn Sie eine Konsolenanwendung erstellen, müssen Sie den folgenden Ausschnitt zu Ihrer Projektdatei hinzufügen:</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This instructs <ph id="ph1">`dotnet build`</ph> to emit an entry point for your application, effectively making your code runnable.</source>
          <target state="translated">Dies weist <ph id="ph1">`dotnet build`</ph> an, einen Einstiegspunkt für Ihre Anwendung auszugeben, und macht Ihren Code dadurch ausführbar.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If you are building a class library, simply omit the above section.</source>
          <target state="translated">Wenn Sie eine Klassenbibliothek erstellen, lassen Sie einfach den obigen Abschnitt aus.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Of course, once you add the above snippet to your <ph id="ph1">`project.json`</ph> file, you need to add a static entry point.</source>
          <target state="translated">Sobald Sie den oben angezeigten Ausschnitt zu Ihrer Datei <ph id="ph1">`project.json`</ph> hinzugefügt haben, müssen Sie natürlich einen statischen Einstiegspunkt hinzufügen.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>With the move off DNX, the DI services it provided are no longer available and thus this needs to be a basic .NET entry point: <ph id="ph1">`static void Main()`</ph>.</source>
          <target state="translated">Mit dem Wechsel weg von DNX sind die DI-Dienste nicht mehr verfügbar, deswegen muss ein einfacher .NET-Einstiegspunkt hinzugefügt werden: <ph id="ph1">`static void Main()`</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If you have a "commands" section in your <ph id="ph1">`project.json`</ph>, you can remove it.</source>
          <target state="translated">Wenn sich ein Abschnitt „commands“ in Ihrer Datei <ph id="ph1">`project.json`</ph> befindet, können Sie ihn entfernen.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Some of the commands that used to exist as DNU commands, such as Entity Framework CLI commands, are being ported to be per-project extensions to the CLI.</source>
          <target state="translated">Manche der Befehle, die es als DNU-Befehle gab, zum Beispiel Entity Framework-CLI-Befehle, werden als pro Projekt-Erweiterung in die CLI portiert.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>If you built your own commands that you are using in your projects, you need to replace them with CLI extensions.</source>
          <target state="translated">Falls Sie eigene Befehle erstellt haben, die Sie in Ihren Projekten verwenden, müssen Sie diese mit der CLI-Erweiterung ersetzen.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>In this case, the <ph id="ph1">`commands`</ph> node in <ph id="ph2">`project.json`</ph> needs to be replaced by the <ph id="ph3">`tools`</ph> node and it needs to list the tools dependencies as explained in the <bpt id="p1">[</bpt>CLI extensibility section<ept id="p1">](tools/index.md#extensibility)</ept>.</source>
          <target state="translated">In diesem Fall muss der Knoten <ph id="ph1">`commands`</ph> in der Datei <ph id="ph2">`project.json`</ph> durch den Knoten <ph id="ph3">`tools`</ph> ersetzt werden, und er muss die Tool-Abhängigkeiten auflisten, wie im Abschnitt <bpt id="p1">[</bpt>CLI-Erweiterbarkeit<ept id="p1">](tools/index.md#extensibility)</ept> beschrieben.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>After these things are done, you need to decide which type of portability you wish for you app.</source>
          <target state="translated">Nachdem diese Schritte abgeschlossen sind, müssen Sie entscheiden, über welche Art von Portabilität Ihre App verfügen soll.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>With .NET Core, we have invested into providing a spectrum of portability options that you can choose from.</source>
          <target state="translated">Wir haben mit .NET Core darin investiert, Ihnen eine Bandbreite von Optionen zur Portabilität anzubieten, aus denen Sie auswählen können.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>For instance, you may want to have a fully <bpt id="p1">*</bpt>portable<ept id="p1">*</ept> application or you may want to have a <bpt id="p2">*</bpt>self-contained<ept id="p2">*</ept> application.</source>
          <target state="translated">Sie können zum Beispiel zwischen einer voll <bpt id="p1">*</bpt>portablen<ept id="p1">*</ept> Anwendung oder einer <bpt id="p2">*</bpt>eigenständigen<ept id="p2">*</ept> Anwendung wählen.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The portable application option is more like .NET Framework applications work: it needs a shared component to execute it on the target machine (.NET Core).</source>
          <target state="translated">Die Option für die portable Anwendung entspricht eher der Arbeitsweise von .NET Framework-Anwendungen: Sie benötigt eine freigegebene Komponente, um sie auf dem Zielcomputer (.NET Core) auszuführen.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The self-contained application doesn't require .NET Core to be installed on the target, but you have to produce one application for each OS you wish to support.</source>
          <target state="translated">Bei der eigenständigen Anwendung muss .NET Core nicht auf dem Zielcomputer installiert werden. Sie müssen allerdings für jedes Betriebssystem, das Sie unterstützen möchten, eine Anwendung erzeugen.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>These portability types and more are discussed in the <bpt id="p1"> [</bpt>application portability type<ept id="p1">](deploying/index.md)</ept> document.</source>
          <target state="translated">Genauere Informationen zu diesen und weiteren Arten der Portabilität finden Sie im Dokument <bpt id="p1"> [</bpt>application portability type (Typen der Portabilität von Anwendungen) <ept id="p1">](deploying/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Once you make a call on what type of portability you want, you need to change your targeted framework(s).</source>
          <target state="translated">Sobald Sie sich für eine Art der Portabilität entschieden haben, müssen Sie Ihr(e) Zielframework(s) ändern.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>If you were writing applications for .NET Core, you were most likely using <ph id="ph1">`dnxcore50`</ph> as  your targeted framework.</source>
          <target state="translated">Wenn Sie Anwendungen für .NET Core geschrieben haben, haben Sie wahrscheinlich <ph id="ph1">`dnxcore50`</ph> als Zielframework verwendet.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>With the CLI and the changes that the new <bpt id="p1">[</bpt>.NET Standard Library<ept id="p1">](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/net-platform-standard.md)</ept> brought, the framework needs to be one of the following:</source>
          <target state="translated">Mit der CLI und den Änderungen in der neuen <bpt id="p1">[</bpt>.NET Standard Library (.NET-Standardbibliothek)<ept id="p1">](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/net-platform-standard.md)</ept> gibt es folgende Auswahl für das Framework:</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`netcoreapp1.0`</ph> - if you are writing applications on .NET Core (including ASP.NET Core applications)</source>
          <target state="translated"><ph id="ph1">`netcoreapp1.0`</ph> – wenn Sie Anwendungen in .NET Core (einschließlich ASP.NET Core-Anwendungen) schreiben</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`netstandard1.6`</ph> - if you are writing class libraries for .NET Core</source>
          <target state="translated"><ph id="ph1">`netstandard1.6`</ph> – wenn Sie Klassenbibliotheken für .NET Core schreiben</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If you are using other <ph id="ph1">`dnx`</ph> targets, like <ph id="ph2">`dnx451`</ph> you will need to change those as well.</source>
          <target state="translated">Wenn Sie andere <ph id="ph1">`dnx`</ph>-Ziele verwenden, wie z.B. <ph id="ph2">`dnx451`</ph>, müssen diese ebenfalls geändert werden.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dnx451`</ph> should be changed to <ph id="ph2">`net451`</ph>.</source>
          <target state="translated"><ph id="ph1">`dnx451`</ph> sollte in <ph id="ph2">`net451`</ph> geändert werden.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Please refer to the <bpt id="p1">[</bpt>.NET Standard Library document<ept id="p1">](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/net-platform-standard.md)</ept> for more information.</source>
          <target state="translated">Weitere Informationen finden Sie im Dokument <bpt id="p1">[</bpt>.NET Standard Library (.NET-Standardbibliothek)<ept id="p1">](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/net-platform-standard.md)</ept>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Your <ph id="ph1">`project.json`</ph> is now mostly ready.</source>
          <target state="translated">Ihre Datei <ph id="ph1">`project.json`</ph> ist nun weitgehend bereit.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>You need to go through your dependencies list and update the dependencies to their newer versions, especially if you are using ASP.NET Core dependencies.</source>
          <target state="translated">Sie müssen nun Ihre Liste der Abhängigkeiten durchgehen und die Abhängigkeiten auf deren neuere Versionen aktualisieren, besonders, wenn Sie Abhängigkeiten von ASP.NET Core verwenden.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If you were using separate packages for BCL APIs, you can use the runtime package as explained in the <bpt id="p1">[</bpt>application portability type<ept id="p1">](deploying/index.md)</ept> document.</source>
          <target state="translated">Wenn Sie separate Pakete für BLC APIs verwenden, können Sie das Laufzeitpaket verwenden, wie im Dokument <bpt id="p1">[</bpt>application portability type (Arten der Portabilität von Anwendungen)<ept id="p1">](deploying/index.md)</ept> erklärt.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Once you are ready, you can try restoring with <ph id="ph1">`dotnet restore`</ph>.</source>
          <target state="translated">Sobald Sie bereit sind, können Sie eine Wiederherstellung mit <ph id="ph1">`dotnet restore`</ph> ausführen.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Depending on the version of your dependencies, you may encounter errors if NuGet cannot resolve the dependencies for one of the targeted frameworks above.</source>
          <target state="translated">Je nach Version Ihrer Abhängigkeiten könnten Fehler auftreten, wenn NuGet die Abhängigkeiten für eines der oben genannten Zielframeworks nicht lösen kann.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>This is a "point-in-time" problem; as time progresses, more and more packages will include support for these frameworks.</source>
          <target state="translated">Dies ist ein „Zeitpunkt“-Problem; im Lauf der Zeit werden immer mehr Pakete eine Unterstützung dieser Frameworks bieten.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For now, if you run into this, you can use the <ph id="ph1">`imports`</ph> statement within the <ph id="ph2">`framework`</ph> node to specify to NuGet that it can restore the packages targeting the framework within the "imports" statement.</source>
          <target state="translated">Wenn dieses Problem auftritt, können Sie vorläufig die Anweisung <ph id="ph1">`imports`</ph> innerhalb des Knotens <ph id="ph2">`framework`</ph> verwenden, um NuGet mitzuteilen, dass es die Pakete, die das Framework als Ziel haben, innerhalb der „imports“-Anweisung wiederherstellen kann.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The restoring errors you get in this case should provide enough information to tell you which frameworks you need to import.</source>
          <target state="translated">Die Fehler beim Wiederherstellen, die in diesem Fall auftreten, sollten genügend Informationen bereitstellen, damit Sie entscheiden können, welches Framework Sie importieren müssen.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>If you are slightly lost or new to this, in general, specifying <ph id="ph1">`dnxcore50`</ph> and <ph id="ph2">`portable-net45+win8`</ph> in the <ph id="ph3">`imports`</ph> statement should do the trick.</source>
          <target state="translated">Wenn Sie sich hiermit nicht auskennen behebt normalerweise auch das Angeben von <ph id="ph1">`dnxcore50`</ph> und <ph id="ph2">`portable-net45+win8`</ph> in der <ph id="ph3">`imports`</ph>-Anweisung das Problem.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The JSON snippet below shows how this looks like:</source>
          <target state="translated">Der folgende JSON-Ausschnitt zeigt, wie dies aussieht:</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Running <ph id="ph1">`dotnet build`</ph> will show any eventual build errors, though there shouldn't be too many of them.</source>
          <target state="translated">Das Ausführen von <ph id="ph1">`dotnet build`</ph> zeigt mögliche Buildfehler an, auch wenn es nicht zu viele geben sollte.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>After your code is building and running properly, you can test it out with the runner.</source>
          <target state="translated">Wenn Ihr Code ordnungsgemäß erstellt und ausgeführt wird, können Sie ihn ohne Runner testen.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Execute <ph id="ph1">`dotnet &lt;path-to-your-assembly&gt;`</ph> and see it run.</source>
          <target state="translated">Führen Sie <ph id="ph1">`dotnet &lt;path-to-your-assembly&gt;`</ph> aus, und beobachten Sie die Ausführung.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>