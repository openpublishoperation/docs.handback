<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a0563f7437711ddbee309803e97ab653aa160337</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\choosing-core-framework-server.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0143d65276bbfb3dc69e7168da1bb453cca14187</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c698de36e04ed9beb2d8dccd64798dfe154f539f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Choosing between .NET Core and .NET Framework for server apps</source>
          <target state="translated">Wahl zwischen .NET Core und .NET Framework für Server-Apps</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A guide on which flavor of .NET you should consider when building a server app in .NET.</source>
          <target state="translated">Ein Leitfaden für die Auswahl der NET-Konfiguration für die Erstellung einer Server-App in .NET.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core, .NET Framework</source>
          <target state="translated">.NET, .NET Core, .NET Framework</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Choosing between .NET Core and .NET Framework for server apps</source>
          <target state="translated">Wahl zwischen .NET Core und .NET Framework für Server-Apps</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>There are two supported choices of runtime for building server-side applications with .NET: .NET Framework and .NET Core.</source>
          <target state="translated">Bei der Erstellung von serverseitigen Anwendungen mit .NET werden zwei Runtimeoptionen unterstützt: .NET Framework und .NET Core.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Both share a lot of the same .NET platform components and you can share code across the two.</source>
          <target state="translated">Beide nutzen viele gemeinsame .NET-Plattformkomponenten, und bei beiden stimmt ein Teil des Codes überein.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>However, there are fundamental differences between the two and your choice will depend on what you want to accomplish.</source>
          <target state="translated">Allerdings gibt es auch grundlegende Unterschiede. Daher richtet sich Ihre Entscheidung danach, was Sie erreichen möchten.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This article provides guidance on when to use each.</source>
          <target state="translated">Dieser Artikel stellt Anleitungen dazu bereit, welche Variante in welchen Fällen verwendet werden sollte.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You should use .NET Core for your server application when:</source>
          <target state="translated">In folgenden Fällen sollten Sie .NET Core für Ihre Serveranwendung verwenden:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You have cross-platform needs.</source>
          <target state="translated">Es bestehen plattformübergreifende Anforderungen.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You are targeting microservices.</source>
          <target state="translated">Sie möchten Microservices erstellen.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You are using Docker containers.</source>
          <target state="translated">Sie verwenden Docker-Container.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You need high performance and scalable systems.</source>
          <target state="translated">Sie sind auf skalierbare Hochleistungssysteme angewiesen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You need side by side of .NET versions by application.</source>
          <target state="translated">Sie müssen je nach Anwendung verschiedene .NET-Versionen parallel installieren.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You should use .NET Framework for your server application when:</source>
          <target state="translated">In folgenden Fällen sollten Sie .NET Framework für Ihre Serveranwendung verwenden:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Your application currently uses .NET Framework (recommendation is to extend instead of migrating)</source>
          <target state="translated">Sie verwenden für Ihre Anwendung derzeit .NET Framework (empfohlen wird eine Erweiterung anstelle einer Migration).</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You need to use third-party .NET libraries or NuGet packages not available for .NET Core.</source>
          <target state="translated">Sie sind auf die Verwendung von .NET-Bibliotheken von Drittanbietern oder NuGet-Paketen angewiesen, die für .NET Core nicht verfügbar sind.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You need to use .NET technologies that are not available for .NET Core.</source>
          <target state="translated">Sie sind auf die Verwendung von .NET-Technologien angewiesen, die für .NET Core nicht verfügbar sind.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You need to use a platform that doesn’t support .NET Core.</source>
          <target state="translated">Sie müssen eine Plattform verwenden, die .NET Core nicht unterstützt.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When to choose .NET Core</source>
          <target state="translated">In welchen Fällen sollte .NET Core verwendet werden?</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following is a more detailed explanation of the previously-stated reasons for picking .NET Core.</source>
          <target state="translated">Im Folgenden werden die zuvor genannten Gründe für die Entscheidung für .NET Core ausführlicher erläutert.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Cross-platform needs</source>
          <target state="translated">Plattformübergreifende Anforderungen</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Clearly, if your goal is to have an application (web/service) that should be able to run across platforms (Windows, Linux and macOS), the best choice is to use .NET Core.</source>
          <target state="translated">Wenn eine Anwendung (Web/Dienst) plattformübergreifend (Windows, Linux und macOS) ausgeführt werden soll, ist .NET Core eindeutig die beste Wahl.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>.NET Core also supports the previously-mentioned operating systems as your development workstation.</source>
          <target state="translated">.NET Core unterstützt auch die zuvor genannten Betriebssysteme für Ihre Entwicklungsarbeitsstation.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Visual Studio provides an Integrated Development Environment (IDE) for Windows.</source>
          <target state="translated">Visual Studio bietet eine integrierte Entwicklungsumgebung (Integrated Development Environment, IDE) für Windows.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can also use Visual Studio Code on macOS, Linux and Windows which fully support .NET Core, including IntelliSense and debugging.</source>
          <target state="translated">Sie können auch Visual Studio Code unter macOS, Linux und Windows verwenden. Diese Betriebssysteme bieten vollständige Unterstützung für .NET Core – einschließlich IntelliSense und Debugging.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can also target .NET Core with most third-party editors like Sublime, Emacs, VI and can get editor IntelliSense using the open source <bpt id="p1">[</bpt>Omnisharp<ept id="p1">](http://www.omnisharp.net/)</ept> project.</source>
          <target state="translated">Sie können .NET Core auch mit den meisten Editoren von Drittanbietern verwenden, wie z.B. Sublime, Emacs oder VI, und Sie können IntelliSense-Editor-Funktionen mithilfe des Open Source-Projekts <bpt id="p1">[</bpt>Omnisharp<ept id="p1">](http://www.omnisharp.net/)</ept> nutzen.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can also avoid any code editor and directly use the .NET Core command-line tools, available forall supported platforms.</source>
          <target state="translated">Da Sie die .NET Core-Befehlszeilentools direkt verwenden können, die für alle unterstützten Plattformen verfügbar sind, ist ein Code-Editor überflüssig.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Microservices architecture</source>
          <target state="translated">Microservicearchitektur</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>.NET Core is the best candidate if you are embracing a microservices oriented system composed of multiple independent, dynamically scalable, stateful or stateless microservices.</source>
          <target state="translated">.NET Core ist die beste Wahl, wenn Sie ein microservicezentriertes System aufbauen möchten, das aus mehreren unabhängigen, dynamisch skalierbaren, zustandsbehafteten oder zustandslosen Microservices besteht.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>.NET Core is lightweight and its API surface can be minimized to the scope of the microservice.</source>
          <target state="translated">.NET Core benötigt nur wenig Ressourcen, und die API-Oberfläche kann auf den Umfang des jeweiligen Microservice minimiert werden.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A microservices architecture also allows you to mix technologies across a service boundary, enabling a gradual embrace of .NET Core for new microservices that live in conjunction with other microservices or services developed with .NET Framework, Java, Ruby, or other monolithic technologies.</source>
          <target state="translated">Mit einer Microservicearchitektur können Sie außerdem Technologien dienstübergreifend miteinander kombinieren. So ermöglichen Sie eine graduelle Übernahme von .NET Core für neue Microservices, die in Verbindung mit anderen mithilfe von .NET Framework, Java, Ruby oder anderen monolithischen Technologien entwickelten Microservices oder Diensten verwendet werden.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The infrastructure platforms you could use are many.</source>
          <target state="translated">Ihnen steht eine Vielzahl verschiedener Infrastrukturplattformen zur Verfügung.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For large and complex microservice systems, you can use <bpt id="p1">[</bpt>Azure Service Fabric<ept id="p1">](https://azure.microsoft.com/en-us/services/service-fabric/)</ept>.</source>
          <target state="translated">Für große und komplexe Microservicesysteme können Sie <bpt id="p1">[</bpt>Azure Service Fabric<ept id="p1">](https://azure.microsoft.com/en-us/services/service-fabric/)</ept> verwenden.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For stateless microservices you can also use other products like <bpt id="p1">[</bpt>Azure App Service<ept id="p1">](https://azure.microsoft.com/en-us/services/app-service/)</ept>.</source>
          <target state="translated">Für zustandslose Microservices können Sie auch andere Produkte verwenden, z.B. <bpt id="p1">[</bpt>Azure App Service<ept id="p1">](https://azure.microsoft.com/en-us/services/app-service/)</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Microservices alternatives based on Docker also fit any kind of microservices approach, as explained next.</source>
          <target state="translated">Auf Docker basierende Alternativen zu Microservices sind – wie nachstehend erläutert – mit allen Arten von Microservice-Implementierungen kompatibel.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>All these platforms support .NET Core and make them ideal for hosting your microservices.</source>
          <target state="translated">All diese Plattformen unterstützen .NET Core und eignen sich daher ideal zum Hosten Ihrer Microservices.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Containers</source>
          <target state="translated">Container</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Containers are commonly used in conjunction with a microservices architecture, although they can also be used to containerize web apps or services which follow any architectural pattern.</source>
          <target state="translated">Container werden häufig in Verbindung mit einer Microservicearchitektur eingesetzt, obwohl sie auch für Web-Apps oder Dienste mit jedem beliebigen Architekturmuster verwendet werden können.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You will be able to use the .NET Framework for Windows containers, but the modularity and lightweight nature of .NET Core makes it perfect for containers.</source>
          <target state="translated">.NET Framework lässt sich auch für Windows-Container verwenden, allerdings eignet sich .NET Core durch die Modularität und den einfachen Aufbau ideal für Container.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When creating and deploying a container the size of its image is far smaller with .NET Core than .NET Framework.</source>
          <target state="translated">Die Imagegröße eines mit .NET Core erstellten und bereitgestellten Containers ist wesentlich kleiner als bei .NET Framework.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Because it is cross-platform, you can deploy server apps to Linux Docker containers, for example.</source>
          <target state="translated">Aufgrund der plattformübergreifenden Struktur können Sie Server-Apps zum Beispiel in Linux-Docker-Containern bereitstellen.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can then host your Docker containers in your own Linux or Windows infrastructure, or use a cloud service such as <bpt id="p1">[</bpt>Azure Container Service<ept id="p1">](https://azure.microsoft.com/en-us/services/container-service/)</ept> which can manage, orchestrate and scale your container-based application in the cloud.</source>
          <target state="translated">Sie können dann Ihre Docker-Container in Ihrer eigenen Linux- oder Windows-Infrastruktur hosten oder einen Clouddienst nutzen, z.B. <bpt id="p1">[</bpt>Azure Container Service<ept id="p1">](https://azure.microsoft.com/en-us/services/container-service/)</ept>, mit dem Ihre containerbasierte Anwendung in der Cloud verwaltet, orchestriert und skaliert werden kann.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A need for high performance and scalable systems</source>
          <target state="translated">Bedarf an skalierbaren Hochleistungssystemen</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When your system needs the best possible performance and scalability, .NET Core and ASP.NET Core are your best options.</source>
          <target state="translated">Wenn Sie für Ihr System die bestmögliche Leistung und Skalierbarkeit benötigen, sind .NET Core und ASP.NET Core die besten Optionen für Sie.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>ASP.NET Core outperforms ASP.NET by a factor of 10, and it leads other popular industry technologies for microservices such as Java servlets, Go and node.js.</source>
          <target state="translated">ASP.NET Core ist im Vergleich zu ASP.NET um ein Zehnfaches leistungsfähiger und steht im Vergleich zu anderen bekannten Branchentechnologien für Microservices, wie Java Servlets, Go und Node.js, an der Spitze.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This is especially relevant for microservices architectures, where you could have hundreds of microservices running.</source>
          <target state="translated">Dies betrifft insbesondere Microservicearchitekturen, in denen Hunderte von Microservices ausgeführt werden können.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>With ASP.NET Core you’d be able to run your system with a much lower number of servers/VMs, ultimately saving costs in infrastructure and hosting.</source>
          <target state="translated">Mit ASP.NET Core können Sie Ihr System mit einer wesentlich geringeren Anzahl von Servern/VMs ausführen und damit letztendlich Kosten für Infrastruktur und Hosting einsparen.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A need for side by side of .NET versions per application level</source>
          <target state="translated">Bedarf an parallel ausführbaren .NET-Versionen pro Anwendungsebene</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If you want to be able to install applications with dependencies on different versions of frameworks in .NET, you need to use .NET Core, which provides 100% side-by-side.</source>
          <target state="translated">Wenn Sie Anwendungen mit Abhängigkeiten von verschiedenen Frameworkversionen in .NET installieren möchten, müssen Sie .NET Core verwenden, das Ihnen eine vollständig parallele Ausführung ermöglicht.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Easy side-by-side installation of different versions of .NET Core on the same machine allows you to have multiple services on the same server, each of them on its own version of .NET Core, eliminating risks and saving money in application upgrades and IT operations.</source>
          <target state="translated">Die einfache parallele Installation verschiedener Versionen von .NET Core auf demselben Computer ermöglicht Ihnen, mehrere Dienste auf demselben Server zu hosten, wobei jeder dieser Dienste in seiner eigenen Version von .NET Core ausgeführt wird. So vermeiden Sie Risiken und sparen Kosten für Anwendungsupgrades und IT-Vorgänge.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When to choose .NET Framework</source>
          <target state="translated">In welchen Fällen sollte .NET Framework verwendet werden?</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>While .NET Core offers significant benefits for new applications and application patterns, the .NET Framework will continue to be the natural choice for many existing scenarios and as such, it won’t be replaced by .NET Core for all server applications.</source>
          <target state="translated">Während .NET Core erhebliche Vorteile für neue Anwendungen und Anwendungsmuster bietet, ist .NET Framework nach wie vor erste Wahl für viele vorhandene Szenarien. Daher ist eine Verdrängung durch .NET Core für sämtliche Serveranwendungen nicht abzusehen.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Current .NET Framework applications</source>
          <target state="translated">Vorhandene .NET Framework-Anwendungen</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In most cases, you won’t need to migrate your existing applications to .NET Core.</source>
          <target state="translated">In den meisten Fällen müssen Sie Ihre vorhandenen Anwendungen nicht zu .NET Core migrieren.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Instead, a recommended approach is to use .NET Core as you extend an existing application, such as writing a new web service in ASP.NET Core.</source>
          <target state="translated">Stattdessen wird die Verwendung von .NET Core empfohlen, wenn Sie eine vorhandene Anwendung erweitern möchten, z.B. durch Schreiben eines neuen Webdiensts in ASP.NET Core.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A need to use third-party .NET libraries or NuGet packages not available for .NET Core</source>
          <target state="translated">Notwendigkeit von .NET-Bibliotheken von Drittanbietern oder NuGet-Paketen, die für .NET Core nicht verfügbar sind</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Libraries are quickly embracing .NET Standard, which enables sharing code across all .NET flavors including .NET Core.</source>
          <target state="translated">.NET Standard kommt in Bibliotheken immer häufiger zum Einsatz und ermöglicht die gemeinsame Nutzung von Code in allen .NET-Varianten einschließlich .NET Core.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>With .NET Standard 2.0 this will be even easier, as the .NET Core API surface will become significantly bigger and .NET Core applications can directly use existing .NET Framework libraries.</source>
          <target state="translated">Mit .NET Standard 2.0 wird dies noch einfacher, weil die .NET Core API-Oberfläche wesentlich größer wird und .NET Core-Anwendungen vorhandene .NET Framework-Bibliotheken direkt verwenden können.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This transition won’t be immediate, though, so we recommend checking the specific libraries required by your application before making a decision one way or another.</source>
          <target state="translated">Dieser Übergang erfolgt allerdings nicht sofort. Daher wird empfohlen, die Bibliotheken, die für Ihre Anwendungen erforderlich sind, genau zu prüfen, bevor Sie sich für einen Weg entscheiden.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A need to use .NET technologies not available for .NET Core</source>
          <target state="translated">Notwendigkeit von .NET-Technologien, die für .NET Core nicht verfügbar sind</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Some .NET Framework technologies are not available in .NET Core.</source>
          <target state="translated">Einige .NET Framework-Technologien sind in .NET Core nicht verfügbar.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Some of them will be available in later .NET Core releases, but others don’t apply to the new application patterns targeted by .NET Core and may never be available.</source>
          <target state="translated">Manche dieser Technologien werden in höheren .NET Core-Versionen verfügbar sein. Andere können jedoch für die neuen Anwendungsmuster, auf die .NET Core abzielt, nicht verwendet werden und werden möglicherweise nie verfügbar sein.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The following list shows the most common technologies not found in .NET Core 1.0:</source>
          <target state="translated">Die folgende Liste enthält die häufigsten Technologien, die von .NET Core 1.0 nicht unterstützt werden:</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>ASP.NET Web Forms applications: ASP.NET Web Forms is only available on the .NET Framework, so you cannot use ASP.NET Core / .NET Core for this scenario.</source>
          <target state="translated">ASP.NET Web Forms-Anwendungen: ASP.NET Web Forms ist nur in .NET Framework verfügbar, daher können Sie ASP.NET Core bzw. .NET Core für dieses Szenario nicht verwenden.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Currently there are no plans to bring ASP.NET Web Forms to .NET Core.</source>
          <target state="translated">Eine Integration von ASP.NET Web Forms in .NET Core ist zurzeit nicht geplant.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>ASP.NET Web Pages applications: ASP.NET Web Pages are not included in ASP.NET Core 1.0, although it is planned to be included in a future release as explained in the <bpt id="p1">[</bpt>.NET Core roadmap<ept id="p1">](https://github.com/aspnet/Home/wiki/Roadmap)</ept>.</source>
          <target state="translated">ASP.NET Web Pages-Anwendungen: ASP.NET Web Pages ist in ASP.NET Core 1.0 nicht enthalten. Die Integration in künftige Versionen ist jedoch geplant, wie in der <bpt id="p1">[</bpt>Roadmap für .NET Core<ept id="p1">](https://github.com/aspnet/Home/wiki/Roadmap)</ept> erläutert.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>ASP.NET SignalR server/client implementation.</source>
          <target state="translated">Implementierung von ASP.NET SignalR-Server/-Client.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>At .NET Core 1.0 release timeframe (June 2016), ASP.NET SignalR is not available for ASP.NET Core (neither client or server), although it is planned to be included in a future release as explained in the <bpt id="p1">[</bpt>.NET Core roadmap<ept id="p1">](https://github.com/aspnet/Home/wiki/Roadmap)</ept>.</source>
          <target state="translated">Im Veröffentlichungszeitrahmen für .NET Core 1.0 (Juni 2016) ist ASP.NET SignalR für ASP.NET Core nicht verfügbar (weder Client noch Server). Die Integration in künftige Versionen ist jedoch geplant, wie in der <bpt id="p1">[</bpt>Roadmap für .NET Core<ept id="p1">](https://github.com/aspnet/Home/wiki/Roadmap)</ept> erläutert.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Preview state is available at the <bpt id="p1">[</bpt>Server-side<ept id="p1">](https://github.com/aspnet/SignalR-Server)</ept> and <bpt id="p2">[</bpt>Client Library<ept id="p2">](https://github.com/aspnet/SignalR-Client-Net)</ept> GitHub repositories.</source>
          <target state="translated">Die Vorschau ist für die GitHub-Repositorys sowohl für die <bpt id="p1">[</bpt>Serverseite<ept id="p1">](https://github.com/aspnet/SignalR-Server)</ept> als auch für die <bpt id="p2">[</bpt>Clientbibliotheken<ept id="p2">](https://github.com/aspnet/SignalR-Client-Net)</ept> verfügbar.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>WCF services implementation.</source>
          <target state="translated">Implementierung von WCF-Diensten.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Even when there’s a <bpt id="p1">[</bpt>WCF-Client library<ept id="p1">](https://github.com/dotnet/wcf)</ept> to consume WCF services from .NET Core, as of June 2016, WCF server implementation is only available on the .NET Framework.</source>
          <target state="translated">Auch wenn WCF-Dienste über eine <bpt id="p1">[</bpt>WCF-Clientbibliothek<ept id="p1">](https://github.com/dotnet/wcf)</ept> von .NET Core genutzt werden, ist die WCF-Serverimplementierung ab Juni 2016 nur in .NET Framework verfügbar.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This scenario is not part of the current plan for .NET Core but it’s being considered for the future.</source>
          <target state="translated">Dieses Szenario ist nicht Bestandteil der derzeitigen Pläne für .NET Core, wird jedoch für die Zukunft in Betracht gezogen.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Workflow related services: Windows Workflow Foundation (WF), Workflow Services (WCF + WF in a single service) and WCF Data Services (formerly known as “ADO.NET Data Services”) are only available on the .NET Framework and there are no plans to bring them to .NET Core.</source>
          <target state="translated">Workflowbezogene Dienste: Windows Workflow Foundation (WF), Workflow Services (WCF + WF in einem einzigen Dienst) und WCF Data Services (zuvor bekannt als „ADO.NET Data Services“) sind nur in .NET Framework verfügbar, und eine Integration in .NET Core ist nicht geplant.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Language support: Visual Basic and F# don’t currently have tooling support .NET Core, but both will be supported in Visual Studio 2017 and later versions of Visual Studio.</source>
          <target state="translated">Sprachunterstützung: Visual Basic und F# verfügen derzeit über keine Toolunterstützung für .NET Core, beide Sprachen werden jedoch in Visual Studio 2017 und höheren Versionen von Visual Studio unterstützt.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In addition to the official roadmap, there are other frameworks to be ported to .NET Core - For a full list, take a look at CoreFX issues marked as <bpt id="p1">[</bpt>port-to-core<ept id="p1">](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aport-to-core)</ept>.</source>
          <target state="translated">Zusätzlich zur offiziellen Roadmap gibt es andere Frameworks, die in .NET Core portiert werden sollen. Eine vollständige Liste finden Sie auf GitHub bei den „Issues“ zu CoreFX, die als <bpt id="p1">[</bpt>port-to-core<ept id="p1">](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aport-to-core)</ept> gekennzeichnet sind.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Please note that this list doesn’t represent a commitment from Microsoft to bring those components to .NET Core — they are simply capturing the desire from the community to do so.</source>
          <target state="translated">Beachten Sie, dass diese Liste keine Verpflichtung für Microsoft darstellt, diese Komponenten in .NET Core zu integrieren. Die Liste sammelt lediglich die Wünsche der Community, solche Komponenten einzuführen.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>That being said, if you care about any of the components listed above, consider participating in the discussions on GitHub so that your voice can be heard.</source>
          <target state="translated">Wenn Sie sich für eine der oben aufgeführten Komponenten interessieren, können Sie sich gerne auf GitHub an den Diskussionen beteiligen.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>And if you think something is missing, please <bpt id="p1">[</bpt>file a new issue in the CoreFX repository<ept id="p1">](https://github.com/dotnet/corefx/issues/new)</ept>.</source>
          <target state="translated">Wenn Ihrer Ansicht nach noch etwas fehlt, <bpt id="p1">[</bpt>eröffnen Sie im CoreFX Repository ein neues „Issue“<ept id="p1">](https://github.com/dotnet/corefx/issues/new)</ept>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A need to use a platform that doesn’t support .NET Core</source>
          <target state="translated">Notwendigkeit einer Plattform, die .NET Core nicht unterstützt</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Some Microsoft or third-party platforms don’t support .NET Core.</source>
          <target state="translated">Einige Plattformen von Microsoft oder Drittanbietern unterstützen .NET Core nicht.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For example, some Azure services such as Service Fabric Stateful Reliable Services and Service Fabric Reliable Actors require .NET Framework.</source>
          <target state="translated">Zum Beispiel wird für einige Azure-Dienste, wie z.B. Service Fabric Stateful Reliable Services und Service Fabric Reliable Actors, .NET Framework benötigt.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Some other services provide an SDK not yet available for consumption on .NET Core.</source>
          <target state="translated">Einige andere Dienste stellen ein SDK bereit, das noch nicht für die Nutzung in .NET Core verfügbar ist.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This is a transitional circumstance, as all of Azure services use .NET Core.</source>
          <target state="translated">Dies ist allerdings nur vorübergehend der Fall, weil .NET Core von sämtlichen Azure-Diensten verwendet wird.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>In the meantime, you can always use the equivalent REST API instead of the client SDK.</source>
          <target state="translated">In der Zwischenzeit können Sie anstelle des Client-SDKs stets die entsprechende REST-API verwenden.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Further resources</source>
          <target state="translated">Weitere Ressourcen</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core Guide<ept id="p1">](../core/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leitfaden für .NET Core<ept id="p1">](../core/index.md)</ept></target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Porting from .NET Framework to .NET Core<ept id="p1">](../core/porting/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Portieren von .NET Framework zu .NET Core<ept id="p1">](../core/porting/index.md)</ept></target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Framework on Docker Guide<ept id="p1">](../framework/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Leitfaden zu .NET Framework in Docker<ept id="p1">](../framework/index.md)</ept></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Components Overview<ept id="p1">](components.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>.NET-Komponenten – Übersicht<ept id="p1">](components.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>