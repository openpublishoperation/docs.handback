<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-188fee3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4646a7e8c75315bb1a13bc5fddecd77888f6ae69</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\garbagecollection\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c31895eb739a07eca459ee17e73e007e0b8b60f1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0de90e11c1682329a1938222cf9ff14e32a3742a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Garbage Collection</source>
          <target state="translated">recolección de elementos no utilizados</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Garbage Collection</source>
          <target state="translated">recolección de elementos no utilizados</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Garbage collection</source>
          <target state="translated">Recolección de elementos no utilizados</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Garbage collection is one of most important features of the .NET managed code platform.</source>
          <target state="translated">La recolección de elementos no utilizados es una de las características más importantes de la plataforma de código administrado de .NET.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The garbage collector (GC) manages allocating and releasing memory for you.</source>
          <target state="translated">El recolector de elementos no utilizados (GC) administra la asignación y liberación de memoria por usted.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You do not need to how to allocate and release memory or manage the lifetime of the objects that use that memory.</source>
          <target state="translated">No necesita asignar y liberar memoria o administrar la duración de los objetos que usan esa memoria.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An allocation is made any time you <bpt id="p1">_</bpt>new<ept id="p1">_</ept> an object or a value type is boxed.</source>
          <target state="translated">Se realiza una asignación cada vez que tiene un objeto <bpt id="p1">_</bpt>nuevo<ept id="p1">_</ept> y se aplica un tipo de valor.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Allocations are typically very fast.</source>
          <target state="translated">Las asignaciones son normalmente muy rápidas.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When there isn’t enough memory to allocate an object, the GC must collect and dispose of garbage memory to make memory available for new allocations.</source>
          <target state="translated">Cuando no hay memoria suficiente para asignar un objeto, el GC debe recopilar y desechar la memoria de elementos no utilizados para que la memoria esté disponible para nuevas asignaciones.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This process is called “garbage collection”.</source>
          <target state="translated">Este proceso se denomina "recolección de elementos no utilizados".</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The garbage collector serves as an automatic memory manager.</source>
          <target state="translated">El recolector de elementos no utilizados actúa como administrador de memoria automático.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It provides the following benefits:</source>
          <target state="translated">Proporciona las siguientes ventajas:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Enables you to develop your application without having to free memory.</source>
          <target state="translated">Permite desarrollar la aplicación sin tener que liberar memoria.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Allocates objects on the managed heap efficiently.</source>
          <target state="translated">Asigna con eficacia los objetos del montón administrado.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Reclaims objects that are no longer being used, clears their memory, and keeps the memory available for future allocations.</source>
          <target state="translated">Reclama los objetos que ya no se utilizan, borra la memoria correspondiente y mantiene la memoria disponible para asignaciones futuras.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Managed objects automatically get clean content to start with, so their constructors do not have to initialize every data field.</source>
          <target state="translated">Los objetos administrados obtienen automáticamente contenido limpio desde el principio, de modo que sus constructores no tienen que inicializar todos los campos de datos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Provides memory safety by making sure that an object cannot use the content of another object.</source>
          <target state="translated">Proporciona seguridad de memoria, al asegurarse de que un objeto no pueda utilizar el contenido de otro objeto.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The .NET GC is generational and has 3 generations.</source>
          <target state="translated">El GC de .NET es generacional y tiene 3 generaciones.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Each generation has its own heap that it uses for storage of allocated objects.</source>
          <target state="translated">Cada generación tiene su propio montón que usa para el almacenamiento de objetos asignados.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>There is a basic principle that most objects are either short lived or long lived.</source>
          <target state="translated">Hay un principio básico que se centra en que la mayoría de los objetos son de corta o larga duración.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Generation 0 is where objects are first allocated.</source>
          <target state="translated">La generación 0 es donde se asignan primero los objetos.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Objects often don’t live past the first generation, since they are no longer in use (out of scope) by the time the next garbage collection occurs.</source>
          <target state="translated">A menudo, los objetos no duran más de la primera generación, puesto que ya no están en uso (fuera de ámbito) en el momento en que se produce la siguiente recolección de elementos no utilizados.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Generation 0 is quick to collect because its associated heap is small.</source>
          <target state="translated">La recopilación de la generación 0 es más rápida porque su montón asociado es pequeño.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Generation 1 is really a second chance space.</source>
          <target state="translated">La generación 1 es realmente un espacio de segundas oportunidades.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Objects that are short lived but survive the generation 0 collection (often based on coincidental timing) go to generation 1<ph id="ph1">\.</ph> Generation 1 collections are also quick because its associated heap is also small.</source>
          <target state="translated">Los objetos con una duración corta, pero que sobreviven a la recolección de la generación 0 (a menudo basada en intervalos fortuita) pasan a la generación 1<ph id="ph1">\.</ph> Las recolecciones de la generación 1 son rápidas porque su montón asociado también es pequeño.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The first two heaps remain small because objects are either collected or are promoted to the next generation heap.</source>
          <target state="translated">Los dos primeros montones siguen siendo pequeños porque los objetos se recolectan o se promueven en el siguiente montón de la generación.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Generation 2 is where all long lived objects are.</source>
          <target state="translated">La generación 2 es donde se encuentran todos los objetos de larga duración.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The generation 2 heap can grow to be very large, since the objects it contains can survive a long time and there is no generation 3 heap to further promote objects.</source>
          <target state="translated">El montón de la generación 2 puede hacerse muy grande, ya que los objetos que contiene pueden sobrevivir mucho tiempo y no hay ningún montón de generación 3 para promover aún más los objetos.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The GC has an additional heap for large objects called the Large Object Heap (LOH).</source>
          <target state="translated">El GC tiene un montón adicional de objetos grandes, denominado el montón de objetos grandes (LOH).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It is reserved for objects that are 85,000 bytes or greater.</source>
          <target state="translated">Está reservado para objetos de 85 000 bytes o más.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A byte array (Byte[]) with 85k elements would be an example of a large object.</source>
          <target state="translated">Una matriz de bytes (Byte[]) con 85 000 elementos sería un ejemplo de un objeto grande.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Large objects are not allocated to the generational heaps but are allocated directly to the LOH.</source>
          <target state="translated">Los objetos grandes no se asignan a los montones generacionales, sino que se asignan directamente al LOH.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Generation 2 and LOH collections can take noticeable time for programs that have run for a long time or operate over large amounts of data.</source>
          <target state="translated">La generación 2 y las recolecciones LOH pueden tardar cierto tiempo en programas que se han ejecutado durante mucho tiempo o pueden operar con grandes cantidades de datos.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Large server programs are known to have heaps in the 10s of GBs.</source>
          <target state="translated">Los programas de servidor de gran tamaño se distinguen por tener montones que pesan decenas de GB.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The GC employs a variety of techniques to reduce the amount of time that it blocks program execution.</source>
          <target state="translated">El GC emplea una variedad de técnicas para reducir la cantidad de tiempo que bloquea la ejecución del programa.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The primary approach is to do as much garbage collection work as possible on a background thread in a way that does not interfere with program execution.</source>
          <target state="translated">El enfoque principal es hacer todo el trabajo de recolección de elementos no utilizados posible en un subproceso en segundo plano, de modo que no interfiera con la ejecución del programa.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The GC also exposes a few ways for developers to influence its behavior, which can be quite useful to improve performance.</source>
          <target state="translated">El GC también expone algunas formas para que los desarrolladores influyan en su comportamiento, lo que puede ser bastante útil para mejorar el rendimiento.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Related Topics</source>
          <target state="translated">Temas relacionados</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">Título</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Automatic memory management and garbage collection<ept id="p1">](gc.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Administración automática de la memoria y recolección de elementos no utilizados<ept id="p1">](gc.md)</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Introduces the basic concepts of memory management in .NET</source>
          <target state="translated">Presenta los conceptos básicos de administración de memoria de .NET</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Fundamentals of garbage collection<ept id="p1">](fundamentals.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Fundamentos de la recolección de elementos no utilizados<ept id="p1">](fundamentals.md)</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Describes how garbage collection works, how objects are allocated on the managed heap, and other core concepts.</source>
          <target state="translated">Describe cómo funciona la recolección de elementos no utilizados, cómo se asignan los objetos en el montón administrado y otros conceptos básicos.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Induced collections<ept id="p1">](induced.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Colecciones inducidas<ept id="p1">](induced.md)</ept></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Describes how to make a garbage collection occur.</source>
          <target state="translated">Describe cómo hacer que se produzca una recolección de elementos no utilizados.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Latency modes<ept id="p1">](latency.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Modos de latencia<ept id="p1">](latency.md)</ept></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Describes the modes that determine the intrusiveness of garbage collection.</source>
          <target state="translated">Describe los modos que determinan la tendencia a la intrusión de la recolección de elementos no utilizados.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Weak references<ept id="p1">](weak-references.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Referencias débiles<ept id="p1">](weak-references.md)</ept></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Describes features that permit the garbage collector to collect an object while still allowing the application to access that object.</source>
          <target state="translated">Describe las características que permiten al recolector de elementos no utilizados recoger un objeto y, mientras tanto, permitir que la aplicación tenga acceso a ese objeto.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Referencia</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.GC<ept id="p1">](xref:System.GC)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.GC<ept id="p1">](xref:System.GC)</ept></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.GCCollectionMode<ept id="p1">](xref:System.GCCollectionMode)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.GCCollectionMode<ept id="p1">](xref:System.GCCollectionMode)</ept></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Runtime.GCLatencyMode<ept id="p1">](xref:System.Runtime.GCLatencyMode)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Runtime.GCLatencyMode<ept id="p1">](xref:System.Runtime.GCLatencyMode)</ept></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Runtime.GCSettings<ept id="p1">](xref:System.Runtime.GCSettings)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Runtime.GCSettings<ept id="p1">](xref:System.Runtime.GCSettings)</ept></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GCSettings.LargeObjectHeapCompactionMode<ept id="p1">](xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>GCSettings.LargeObjectHeapCompactionMode<ept id="p1">](xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode)</ept></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Object.Finalize<ept id="p1">](xref:System.Object.Finalize)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Object.Finalize<ept id="p1">](xref:System.Object.Finalize)</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.IDisposable<ept id="p1">](xref:System.IDisposable)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.IDisposable<ept id="p1">](xref:System.IDisposable)</ept></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vea también</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Cleaning up unmanaged resources<ept id="p1">](unmanaged.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Limpieza de recursos no administrados<ept id="p1">](unmanaged.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>