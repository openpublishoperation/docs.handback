<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb9940e56b5d0e8f4474584102f2e6167a79f291</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\async.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">baa5e2e22af002166775048ae3fa0350864cda26</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca7bf6a35ecfde23a0cbd6fcec6763cb4bc0270c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Async Overview</source>
          <target state="translated">Vue d’ensemble d’async</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Async Overview</source>
          <target state="translated">Vue d’ensemble d’async</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Async Overview</source>
          <target state="translated">Vue d’ensemble d’async</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Not so long ago, apps got faster simply by buying a newer PC or server and then that trend stopped.</source>
          <target state="translated">Il n’y a pas si longtemps, il suffisait d’acheter un PC ou un serveur plus récent pour que les applications soient plus rapides. Mais ce n’est plus le cas maintenant.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In fact, it reversed.</source>
          <target state="translated">En fait, c’est même tout le contraire.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Mobile phones appeared with 1ghz single core ARM chips and server workloads transitioned to VMs.</source>
          <target state="translated">Les téléphones mobiles utilisent des processeurs ARM 1 GHz à cœur unique et les charges de travail serveur sont passées aux machines virtuelles.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Users still want responsive UI and business owners want servers that scale with their business.</source>
          <target state="translated">Les utilisateurs veulent toujours une interface utilisateur réactive et les chefs d’entreprise veulent des serveurs qui s’adaptent à leur activité.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The transition to mobile and cloud and an internet-connected population of &gt;3B users has resulted in a new set of software patterns.</source>
          <target state="translated">La transition vers le mobile et le cloud ainsi qu’une population de plus de&amp;3; milliards d’utilisateurs connectés à Internet ont donné naissance à un nouvel ensemble de modèles logiciels.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Client applications are expected to be always-on, always-connected and constantly responsive to user interaction (e.g. touch) with high app store ratings!</source>
          <target state="translated">Les applications clientes doivent être toujours actives, toujours connectées, constamment réactives à l’interaction de l’utilisateur (interface tactile, par exemple) et en haut du classement des magasins d’applications !</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Services are expected to handle spikes in traffic by gracefully scaling up and down.</source>
          <target state="translated">Les services doivent gérer les pics de trafic en ayant la possibilité de monter et descendre en puissance facilement.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Async programming is a key technique that makes it straightforward to handle blocking I/O and concurrent operations on multiple cores.</source>
          <target state="translated">La programmation asynchrone est une technique clé qui facilite le blocage des E/S et des opérations simultanées sur plusieurs cœurs.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>.NET provides the capability for apps and services to be responsive and elastic with easy-to-use, language-level asynchronous programming models in C#, VB, and F#.</source>
          <target state="translated">.NET offre aux applications et services la possibilité d’être réactifs et élastiques avec des modèles de programmation en C#, VB et F# asynchrones au niveau du langage et faciles à utiliser.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Why Write Async Code?</source>
          <target state="translated">Pourquoi écrire du code asynchrone ?</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Modern apps make extensive use of file and networking I/O.</source>
          <target state="translated">Les applications modernes utilisent beaucoup d’E/S de fichier et de réseau.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>I/O APIs traditionally block by default, resulting in poor user experiences and hardware utilization unless you want to learn and use challenging patterns.</source>
          <target state="translated">Les API d’E/S se bloquent par défaut, ce qui se traduit par une expérience utilisateur et une utilisation du matériel médiocres, sauf si vous avez l’intention d’apprendre et d’utiliser des modèles complexes.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Async APIs and the language-level asynchronous programming model invert this model, making async execution the default with few new concepts to learn.</source>
          <target state="translated">Les API asynchrones et le modèle de programmation asynchrone au niveau du langage inversent ce modèle en faisant de l’exécution asynchrone la valeur par défaut avec quelques nouveaux concepts à découvrir.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Async code has the following characteritics:</source>
          <target state="translated">Le code asynchrone présente les caractéristiques suivantes :</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Handles more server requests by yielding threads to handle more requests while waiting for I/O requests to return.</source>
          <target state="translated">Il gère davantage de demandes de serveur en cédant des threads pour traiter plus de demandes quand il attend le retour des demande d’E/S.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Enables UIs to be more responsive by yielding threads to UI interaction while waiting for I/O requests and by transitioning long-running work to other CPU cores.</source>
          <target state="translated">Il permet aux interfaces utilisateur d’être plus réactives en cédant des threads à l’interaction de l’interface utilisateur quand il attend les demandes d’E/S et en transmettant les tâches d’exécution longue aux autres cœurs de processeur.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Many of the newer .NET APIs are asynchronous.</source>
          <target state="translated">De nombreuses API .NET plus récentes sont asynchrones.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It’s super easy to write async code in .NET!</source>
          <target state="translated">Il est très facile d’écrire du code asynchrone dans .NET !</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>What’s next?</source>
          <target state="translated">Quelle est la suite ?</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For a deep dive into async concepts and programming, see <bpt id="p1">[</bpt>Async in depth<ept id="p1">](async-in-depth.md)</ept>.</source>
          <target state="translated">Pour une présentation détaillée des concepts et de la programmation asynchrones, consultez <bpt id="p1">[</bpt>Async en détail<ept id="p1">](async-in-depth.md)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>