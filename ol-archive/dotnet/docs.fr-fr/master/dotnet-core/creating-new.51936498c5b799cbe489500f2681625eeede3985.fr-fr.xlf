<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">793b5bc4b26967104459fa2559c6127bb82f3a9d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\creating-new.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">91ddf33b3f9152a3c9e607edb5dbea5b1bbf34f9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6a2166e248abe21ce57893ed1983ee85e7f629b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Creating new strings</source>
          <target state="translated">Création de nouvelles chaînes</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Creating new strings</source>
          <target state="translated">Création de nouvelles chaînes</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Creating new strings</source>
          <target state="translated">Création de nouvelles chaînes</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>.NET  allows strings to be created using simple assignment, and also overloads a class constructor to support string creation using a number of different parameters.</source>
          <target state="translated">Le .NET permet de créer des chaînes à l’aide d’une assignation simple, et surcharge un constructeur de classe pour prendre en charge la création de chaînes à l’aide de plusieurs paramètres différents.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>.NET also provides several methods in the <bpt id="p1">[</bpt>System.String<ept id="p1">](xref:System.String)</ept> class that create new string objects by combining several strings, arrays of strings, or objects.</source>
          <target state="translated">Le .NET fournit également plusieurs méthodes dans la classe <bpt id="p1">[</bpt>System.String<ept id="p1">](xref:System.String)</ept> qui créent des objets String en combinant plusieurs chaînes, tableaux de chaînes ou objets.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Creating Strings Using Assignment</source>
          <target state="translated">Création de chaînes à l’aide d’une affectation</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The easiest way to create a new <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> object is simply to assign a string literal to a <bpt id="p2">[</bpt>String<ept id="p2">](xref:System.String)</ept> object.</source>
          <target state="translated">Le moyen le plus simple de créer un objet <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> consiste à assigner un littéral de chaîne à un objet <bpt id="p2">[</bpt>String<ept id="p2">](xref:System.String)</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Creating Strings Using a Class Constructor</source>
          <target state="translated">Création de chaînes à l’aide d’un constructeur de classe</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can use overloads of the <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> class constructor to create strings from character arrays.</source>
          <target state="translated">Vous pouvez utiliser des surcharges du constructeur de classe <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> pour créer des chaînes à partir de tableaux de caractères.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can also create a new string by duplicating a particular character a specified number of times.</source>
          <target state="translated">Vous pouvez également créer une chaîne en dupliquant un caractère spécifique un nombre spécifié de fois.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Methods that Return Strings</source>
          <target state="translated">Méthodes retournant des chaînes</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following table lists several useful methods that return new string objects.</source>
          <target state="translated">Le tableau suivant présente plusieurs méthodes utiles qui retournent de nouveaux objets String.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Method name</source>
          <target state="translated">Nom de la méthode</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">Utilisation</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.String,System.Object))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.String,System.Object))</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Builds a formatted string from a set of input objects.</source>
          <target state="translated">Génère une chaîne mise en forme à partir d’un ensemble d’objets en entrée.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Concat<ept id="p1">](xref:System.String.Concat(System.String,System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Concat<ept id="p1">](xref:System.String.Concat(System.String,System.String))</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Builds strings from two or more strings.</source>
          <target state="translated">Génère des chaînes à partir de deux ou de plusieurs chaînes.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Join<ept id="p1">](xref:System.String.Join(System.String,System.String[]))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Join<ept id="p1">](xref:System.String.Join(System.String,System.String[]))</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Builds a new string by combining an array of strings.</source>
          <target state="translated">Génère une nouvelle chaîne en combinant un tableau de chaînes.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Insert<ept id="p1">](xref:System.String.Insert(System.Int32,System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Insert<ept id="p1">](xref:System.String.Insert(System.Int32,System.String))</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Builds a new string by inserting a string into the specified index of an existing string.</source>
          <target state="translated">Génère une nouvelle chaîne en insérant une chaîne dans l’index spécifié d’une chaîne existante.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.CopyTo<ept id="p1">](xref:System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.CopyTo<ept id="p1">](xref:System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32))</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Copies specified characters in a string into a specified position in an array of characters.</source>
          <target state="translated">Copie des caractères spécifiés dans une chaîne à une position spécifiée dans un tableau de caractères.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">`String.Format`</ph> method to create formatted strings and concatenate strings representing multiple objects.</source>
          <target state="translated">Vous pouvez utiliser la méthode <ph id="ph1">`String.Format`</ph> pour créer des chaînes mises en forme et concaténer des chaînes représentant plusieurs objets.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This method automatically converts any passed object into a string.</source>
          <target state="translated">Cette méthode convertit automatiquement tout objet passé en une chaîne.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, if your application must display an <bpt id="p1">[</bpt>Int32<ept id="p1">](xref:System.Int32)</ept> value and a <bpt id="p2">[</bpt>DateTime<ept id="p2">](xref:System.DateTime)</ept> value to the user, you can easily construct a string to represent these values using the <ph id="ph1">`Format`</ph> method.</source>
          <target state="translated">Par exemple, si votre application doit afficher une valeur <bpt id="p1">[</bpt>Int32<ept id="p1">](xref:System.Int32)</ept> et une valeur <bpt id="p2">[</bpt>DateTime<ept id="p2">](xref:System.DateTime)</ept> à l’utilisateur, vous pouvez aisément construire une chaîne représentant ces valeurs à l’aide de la méthode <ph id="ph1">`Format`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For information about formatting conventions used with this method, see the section on <bpt id="p1">[</bpt>composite formatting<ept id="p1">](composite-format.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les conventions de mise en forme utilisées avec cette méthode, consultez la section relative à la <bpt id="p1">[</bpt>mise en forme composite<ept id="p1">](composite-format.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`Format`</ph> method to create a string that uses an integer variable.</source>
          <target state="translated">L’exemple suivant utilise la méthode <ph id="ph1">`Format`</ph> pour créer une chaîne utilisant une variable de type integer.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this example, <bpt id="p1">[</bpt>DateTime.Now<ept id="p1">](xref:System.DateTime.Now)</ept> displays the current date and time in a manner specified by the culture associated with the current thread.</source>
          <target state="translated">Dans cet exemple, <bpt id="p1">[</bpt>DateTime.Now<ept id="p1">](xref:System.DateTime.Now)</ept> affiche la date et l’heure actuelles de la manière spécifiée par la culture associée au thread actuel.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Concat</source>
          <target state="translated">Concat</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`String.Concat`</ph> method can be used to easily create a new string object from two or more existing objects.</source>
          <target state="translated">La méthode <ph id="ph1">`String.Concat`</ph> peut être utilisée pour créer facilement un objet chaîne à partir de deux ou de plusieurs objets existants.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>It provides a language-independent way to concatenate strings.</source>
          <target state="translated">Elle offre un moyen de concaténer des chaînes indépendamment du langage.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This method accepts any class that derives from <ph id="ph1">`System.Object`</ph>.</source>
          <target state="translated">Cette méthode accepte toute classe qui dérive de <ph id="ph1">`System.Object`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following example creates a string from two existing string objects and a separating character.</source>
          <target state="translated">L’exemple suivant crée une chaîne à partir de deux objets String existants et d’un caractère à utiliser comme séparateur.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Join</source>
          <target state="translated">Join</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`String.Join`</ph> method creates a new string from an array of strings and a separator string.</source>
          <target state="translated">La méthode <ph id="ph1">`String.Join`</ph> crée une chaîne à partir d’un tableau de chaînes et d’une chaîne de séparation.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This method is useful if you want to concatenate multiple strings together, making a list perhaps separated by a comma.</source>
          <target state="translated">Cette méthode est utile si vous voulez concaténer plusieurs chaînes et en faire une liste éventuellement séparée par une virgule.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The following example uses a space to bind a string array.</source>
          <target state="translated">L’exemple suivant utilise un espace pour lier un tableau de chaînes.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Insert</source>
          <target state="translated">Insert</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`String.Insert`</ph> method creates a new string by inserting a string into a specified position in another string.</source>
          <target state="translated">La méthode <ph id="ph1">`String.Insert`</ph> crée une chaîne en insérant une chaîne à une position spécifiée dans une autre chaîne.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This method uses a zero-based index.</source>
          <target state="translated">Cette méthode utilise un index de base zéro.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following example inserts a string into the fifth index position of <ph id="ph1">`MyString`</ph> and creates a new string with this value.</source>
          <target state="translated">L’exemple suivant insère une chaîne à la cinquième position d’index de <ph id="ph1">`MyString`</ph> et crée une chaîne avec cette valeur.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>CopyTo</source>
          <target state="translated">CopyTo</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`String.CopyTo`</ph> method copies portions of a string into an array of characters.</source>
          <target state="translated">La méthode <ph id="ph1">`String.CopyTo`</ph>copie des fragments d’une chaîne dans un tableau de caractères.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You can specify both the beginning index of the string and the number of characters to be copied.</source>
          <target state="translated">Vous pouvez spécifier l’index de début de la chaîne et le nombre de caractères à copier.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This method takes the source index, an array of characters, the destination index, and the number of characters to copy.</source>
          <target state="translated">Cette méthode utilise l’index source, un tableau de caractères, l’index de destination et le nombre de caractères à copier.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>All indexes are zero-based.</source>
          <target state="translated">Tous les index sont de base zéro.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`CopyTo`</ph> method to copy the characters of the word "Hello" from a string object to the first index position of an array of characters.</source>
          <target state="translated">L’exemple suivant utilise la méthode <ph id="ph1">`CopyTo`</ph> pour copier les caractères du mot « Hello » d’un objet String vers la première position d’un tableau de caractères.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Voir aussi</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic string operations<ept id="p1">](basic-string-operations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Opérations de chaînes de base<ept id="p1">](basic-string-operations.md)</ept></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Composite formatting<ept id="p1">](composite-format.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Mise en forme composite<ept id="p1">](composite-format.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>