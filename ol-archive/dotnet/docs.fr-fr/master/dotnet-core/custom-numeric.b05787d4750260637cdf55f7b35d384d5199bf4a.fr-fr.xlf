<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">017ee2b6feb87841f31660fe6cb76ccbefd5c83b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\custom-numeric.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">edc8e1a409fb5b32f2ab5ecba05528f4b0413738</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f6177e15ce0e26bf509a91d66d188c9e20083da</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings</source>
          <target state="translated">Chaînes de format numériques personnalisées</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings</source>
          <target state="translated">Chaînes de format numériques personnalisées</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings</source>
          <target state="translated">Chaînes de format numériques personnalisées</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can create a custom numeric format string, which consists of one or more custom numeric specifiers, to define how to format numeric data.</source>
          <target state="translated">Vous pouvez créer une chaîne de format numérique personnalisée, qui est composée d'un ou de plusieurs spécificateurs de format numériques personnalisés, pour définir la mise en forme des données numériques.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A custom numeric format string is any format string that is not a <bpt id="p1">[</bpt>standard numeric format string<ept id="p1">](standard-numeric.md)</ept>.</source>
          <target state="translated">Une chaîne de format numérique personnalisée est toute chaîne de format autre qu’une <bpt id="p1">[</bpt>chaîne de format numérique standard<ept id="p1">](standard-numeric.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings are supported by some overloads of the <ph id="ph1">`ToString`</ph> method of all numeric types.</source>
          <target state="translated">Les chaînes de format numérique personnalisées sont prises en charge par certaines surcharges de la méthode <ph id="ph1">`ToString`</ph> de tous les types numériques.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, you can supply a numeric format string to the <bpt id="p1">[</bpt>ToString(String)<ept id="p1">](xref:System.Int32.ToString(System.String))</ept> and <bpt id="p2">[</bpt>ToString(String, IFormatProvider)<ept id="p2">](xref:System.Int32.ToString(System.String,System.IFormatProvider))</ept> methods of the <bpt id="p3">[</bpt>Int32<ept id="p3">](xref:System.Int32)</ept> type.</source>
          <target state="translated">Par exemple, vous pouvez fournir une chaîne de format numérique aux méthodes <bpt id="p1">[</bpt>ToString (String)<ept id="p1">](xref:System.Int32.ToString(System.String))</ept> et <bpt id="p2">[</bpt>ToString (String, IFormatProvider)<ept id="p2">](xref:System.Int32.ToString(System.String,System.IFormatProvider))</ept> du type <bpt id="p3">[</bpt>Int32<ept id="p3">](xref:System.Int32)</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings are also supported by the .NET Framework <bpt id="p1">[</bpt>composite formatting<ept id="p1">](composite-format.md)</ept> feature, which is used by some <ph id="ph1">`Write`</ph> and <ph id="ph2">`WriteLine`</ph> methods of the <bpt id="p2">[</bpt>Console<ept id="p2">](xref:System.Console)</ept> and <bpt id="p3">[</bpt>StreamWriter<ept id="p3">](xref:System.IO.StreamWriter)</ept> classes, the <bpt id="p4">[</bpt>String.Format<ept id="p4">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> method, and the <bpt id="p5">[</bpt>StringBuilder.AppendFormat<ept id="p5">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept> method.</source>
          <target state="translated">Les chaînes de format numériques personnalisées sont également prises en charge par la fonctionnalité de <bpt id="p1">[</bpt>mise en forme composite<ept id="p1">](composite-format.md)</ept> .NET Framework, utilisée par certaines méthodes <ph id="ph1">`Write`</ph> et <ph id="ph2">`WriteLine`</ph> des classes <bpt id="p2">[</bpt>Console<ept id="p2">](xref:System.Console)</ept> et <bpt id="p3">[</bpt>StreamWriter<ept id="p3">](xref:System.IO.StreamWriter)</ept>, la méthode <bpt id="p4">[</bpt>String.Format<ept id="p4">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> et la méthode <bpt id="p5">[</bpt>StringBuilder.AppendFormat<ept id="p5">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following table describes the custom numeric format specifiers and displays sample output produced by each format specifier.</source>
          <target state="translated">Le tableau suivant décrit les spécificateurs de format numériques personnalisés et affiche un exemple de sortie produite par chaque spécificateur de format.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Notes<ept id="p1">](#notes)</ept> section for additional information about using custom numeric format strings, and the <bpt id="p2">[</bpt>Example<ept id="p2">](#example)</ept> section for a comprehensive illustration of their use.</source>
          <target state="translated">Consultez la section <bpt id="p1">[</bpt>Remarques<ept id="p1">](#notes)</ept> pour plus d’informations sur l’utilisation de chaînes de format numériques personnalisées, et la section <bpt id="p2">[</bpt>Exemple<ept id="p2">](#example)</ept> pour obtenir une illustration complète de leur utilisation.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Format specifier</source>
          <target state="translated">Spécificateur de format</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Nom</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Exemples</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>"0"</source>
          <target state="translated">"0"</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Zero placeholder</source>
          <target state="translated">Espace réservé du zéro</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Replaces the zero with the corresponding digit if one is present; otherwise, zero appears in the result string.</source>
          <target state="translated">Remplace le zéro par le chiffre correspondant, le cas échéant ; sinon, le zéro s'affiche dans la chaîne de résultat.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`1234.5678 ("00000") -&gt; 01235`</ph>; <ph id="ph2">`0.45678 ("0.00", en-US) -&gt; 0.46`</ph>; <ph id="ph3">`0.45678 ("0.00", fr-FR) -&gt; 0,46`</ph></source>
          <target state="translated"><ph id="ph1">`1234.5678 ("00000") -&gt; 01235`</ph>; <ph id="ph2">`0.45678 ("0.00", en-US) -&gt; 0.46`</ph>; <ph id="ph3">`0.45678 ("0.00", fr-FR) -&gt; 0,46`</ph></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>"#"</source>
          <target state="translated">"#"</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Digit placeholder</source>
          <target state="translated">Espace réservé de chiffre</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Replaces the "#" symbol with the corresponding digit if one is present; otherwise, no digit appears in the result string.</source>
          <target state="translated">Remplace le symbole « # » par le chiffre correspondant, le cas échéant ; sinon, aucun chiffre ne s'affiche dans la chaîne de résultat.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Note that no digit appears in the result string if the corresponding digit in the input string is a non-significant 0.</source>
          <target state="translated">Notez qu’aucun chiffre n’apparaît dans la chaîne de résultat si le chiffre correspondant dans la chaîne d’entrée est un 0 non significatif.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, 0003 ("####") -&gt; 3.</source>
          <target state="translated">Exemple : 0003 ("####") -&gt; 3.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`1234.5678 ("#####") -&gt; 1235`</ph>; <ph id="ph2">`0.45678 ("#.##", en-US) -&gt; .46`</ph>; <ph id="ph3">`0.45678 ("#.##", fr-FR) -&gt; ,46`</ph></source>
          <target state="translated"><ph id="ph1">`1234.5678 ("#####") -&gt; 1235`</ph>; <ph id="ph2">`0.45678 ("#.##", en-US) -&gt; .46`</ph>; <ph id="ph3">`0.45678 ("#.##", fr-FR) -&gt; ,46`</ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>"."</source>
          <target state="translated">"."</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Decimal point</source>
          <target state="translated">Virgule décimale</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Determines the location of the decimal separator in the result string.</source>
          <target state="translated">Détermine l'emplacement du séparateur décimal dans la chaîne de résultat.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`0.45678 ("0.00", en-US) -&gt; 0.46`</ph>; <ph id="ph2">`0.45678 ("0.00", fr-FR) -&gt; 0,46`</ph></source>
          <target state="translated"><ph id="ph1">`0.45678 ("0.00", en-US) -&gt; 0.46`</ph>; <ph id="ph2">`0.45678 ("0.00", fr-FR) -&gt; 0,46`</ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>","</source>
          <target state="translated">","</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Group separator and number scaling</source>
          <target state="translated">Séparateur de groupes et mise à l'échelle des nombres</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Serves as both a group separator and a number scaling specifier.</source>
          <target state="translated">Sert à la fois de séparateur de groupes et de spécificateur de mise à l'échelle des nombres.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>As a group separator, it inserts a localized group separator character between each group.</source>
          <target state="translated">En tant que séparateur de groupes, il insère un caractère de séparation des groupes localisé entre chaque groupe.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>As a number scaling specifier, it divides a number by 1000 for each comma specified.</source>
          <target state="translated">En tant que spécificateur de mise à l'échelle des nombres, il divise un nombre par 1000 pour chaque virgule spécifiée.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Group separator specifier: <ph id="ph1">`2147483647 ("##,#", en-US) -&gt; 2,147,483,647`</ph>; <ph id="ph2">`2147483647 ("##,#", es-ES) -&gt; 2.147.483.647`</ph>.</source>
          <target state="translated">Spécificateur de séparateur de groupes : <ph id="ph1">`2147483647 ("##,#", en-US) -&gt; 2,147,483,647`</ph> ; <ph id="ph2">`2147483647 ("##,#", es-ES) -&gt; 2.147.483.647`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Scaling specifier: <ph id="ph1">`2147483647 ("#,#,,", en-US) -&gt; 2,147`</ph>; <ph id="ph2">`2147483647 ("#,#,,", es-ES) -&gt; 2.147`</ph></source>
          <target state="translated">Spécificateur de mise à l’échelle : <ph id="ph1">`2147483647 ("#,#,,", en-US) -&gt; 2,147`</ph> ; <ph id="ph2">`2147483647 ("#,#,,", es-ES) -&gt; 2.147`</ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>"%"</source>
          <target state="translated">"%"</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Percentage placeholder</source>
          <target state="translated">Espace réservé de pourcentage</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Multiplies a number by 100 and inserts a localized percentage symbol in the result string.</source>
          <target state="translated">Multiplie un nombre par 100 et insère un symbole de pourcentage localisé dans la chaîne de résultat.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`0.3697 ("%#0.00", en-US) -&gt; %36.97`</ph>; <ph id="ph2">`0.3697 ("%#0.00", el-GR) -&gt; %36,97`</ph>; <ph id="ph3">`0.3697 ("##.0 %", en-US) -&gt; 37.0 %`</ph>; <ph id="ph4">`0.3697 ("##.0 %", el-GR) -&gt; 37,0 %`</ph></source>
          <target state="translated"><ph id="ph1">`0.3697 ("%#0.00", en-US) -&gt; %36.97`</ph>; <ph id="ph2">`0.3697 ("%#0.00", el-GR) -&gt; %36,97`</ph>; <ph id="ph3">`0.3697 ("##.0 %", en-US) -&gt; 37.0 %`</ph>; <ph id="ph4">`0.3697 ("##.0 %", el-GR) -&gt; 37,0 %`</ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>"‰"</source>
          <target state="translated">"‰"</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Per mille placeholder</source>
          <target state="translated">Espace réservé « pour mille »</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Multiplies a number by 1000 and inserts a localized per mille symbol in the result string.</source>
          <target state="translated">Multiplie un nombre par 1000 et insère un symbole « pour mille » localisé dans la chaîne de résultat.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`0.03697 ("#0.00‰", en-US) -&gt; 36.97‰`</ph>; <ph id="ph2">`0.03697 ("#0.00‰", ru-RU) -&gt; 36,97‰`</ph></source>
          <target state="translated"><ph id="ph1">`0.03697 ("#0.00‰", en-US) -&gt; 36.97‰`</ph>; <ph id="ph2">`0.03697 ("#0.00‰", ru-RU) -&gt; 36,97‰`</ph></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>"E0", "E+0", "E-0", "e0", "e+0", "e-0"</source>
          <target state="translated">"E0", "E+0", "E-0", "e0", "e+0", "e-0"</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Exponential notation</source>
          <target state="translated">Notation exponentielle</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If followed by at least one 0 (zero), formats the result using exponential notation.</source>
          <target state="translated">Si le spécificateur est suivi d'au moins un zéro (0), met en forme le résultat à l'aide de la notation exponentielle.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The case of "E" or "e" indicates the case of the exponent symbol in the result string.</source>
          <target state="translated">La casse de « E » ou « e » indique la casse du symbole d'exposant dans la chaîne de résultat.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The number of zeros following the "E" or "e" character determines the minimum number of digits in the exponent.</source>
          <target state="translated">Le nombre des zéros qui suivent le caractère « E » ou « e » détermine le nombre minimal de chiffres dans l'exposant.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A plus sign (+) indicates that a sign character always precedes the exponent.</source>
          <target state="translated">Un signe plus (+) indique qu'un caractère de signe précède toujours l'exposant.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A minus sign (-) indicates that a sign character precedes only negative exponents.</source>
          <target state="translated">Un signe moins (-) indique qu'un caractère de signe précède uniquement les exposants négatifs.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`987654 ("#0.0e0") -&gt; 98.8e4`</ph>; <ph id="ph2">`1503.92311 ("0.0##e+00") -&gt; 1.504e+03`</ph>; <ph id="ph3">`1.8901385E-16 ("0.0e+00") -&gt; 1.9e-16`</ph></source>
          <target state="translated"><ph id="ph1">`987654 ("#0.0e0") -&gt; 98.8e4`</ph>; <ph id="ph2">`1503.92311 ("0.0##e+00") -&gt; 1.504e+03`</ph>; <ph id="ph3">`1.8901385E-16 ("0.0e+00") -&gt; 1.9e-16`</ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Escape character</source>
          <target state="translated">Caractère d'échappement</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Causes the next character to be interpreted as a literal rather than as a custom format specifier.</source>
          <target state="translated">Entraîne l'interprétation du caractère suivant comme un littéral plutôt que comme un spécificateur de format personnalisé.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>'string', "string"</source>
          <target state="translated">'chaîne', "chaîne"</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Literal string delimiter</source>
          <target state="translated">Délimiteur de chaîne littérale</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Indicates that the enclosed characters should be copied to the result string unchanged.</source>
          <target state="translated">Indique que les caractères encadrés doivent être copiés inchangés dans la chaîne de résultat.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>;</source>
          <target state="translated">;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Section separator</source>
          <target state="translated">Séparateur de section</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Defines sections with separate format strings for positive, negative, and zero numbers.</source>
          <target state="translated">Définit des sections avec des chaînes de format distinctes pour les nombres positifs, négatifs et nuls.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`12.345 ("#0.0#;(#0.0#);-\0-") -&gt; 12.35`</ph>; <ph id="ph2">`0 ("#0.0#;(#0.0#);-\0-") -&gt; -0-`</ph>; <ph id="ph3">`-12.345 ("#0.0#;(#0.0#);-\0-") -&gt; (12.35)`</ph>; <ph id="ph4">`12.345 ("#0.0#;(#0.0#)") -&gt; 12.35`</ph>; <ph id="ph5">`0 ("#0.0#;(#0.0#)") -&gt; 0.0 ; -12.345 ("#0.0#;(#0.0#)") -&gt; (12.35)`</ph></source>
          <target state="translated"><ph id="ph1">`12.345 ("#0.0#;(#0.0#);-\0-") -&gt; 12.35`</ph>; <ph id="ph2">`0 ("#0.0#;(#0.0#);-\0-") -&gt; -0-`</ph>; <ph id="ph3">`-12.345 ("#0.0#;(#0.0#);-\0-") -&gt; (12.35)`</ph>; <ph id="ph4">`12.345 ("#0.0#;(#0.0#)") -&gt; 12.35`</ph>; <ph id="ph5">`0 ("#0.0#;(#0.0#)") -&gt; 0.0 ; -12.345 ("#0.0#;(#0.0#)") -&gt; (12.35)`</ph></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Autre</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>All other characters</source>
          <target state="translated">Tous les autres caractères</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The character is copied to the result string unchanged.</source>
          <target state="translated">Le caractère est copié inchangé dans la chaîne de résultat.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The following sections provide detailed information about each of the custom numeric format specifiers.</source>
          <target state="translated">Les sections suivantes fournissent des informations détaillées sur chacun des spécificateurs de format numériques personnalisés.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The "0" Custom Specifier</source>
          <target state="translated">Spécificateur personnalisé "0"</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The "0" custom format specifier serves as a zero-placeholder symbol.</source>
          <target state="translated">Le spécificateur de format personnalisé "0" sert de symbole d'espace réservé du zéro.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If the value that is being formatted has a digit in the position where the zero appears in the format string, that digit is copied to the result string; otherwise, a zero appears in the result string.</source>
          <target state="translated">Si la valeur qui est mise en forme comprend un chiffre à l'emplacement le zéro apparaît dans la chaîne de format, ce chiffre est copié dans la chaîne de résultant ; sinon, un zéro apparaît dans la chaîne de résultat.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The position of the leftmost zero before the decimal point and the rightmost zero after the decimal point determines the range of digits that are always present in the result string.</source>
          <target state="translated">L'emplacement du zéro situé à l'extrême gauche avant le séparateur décimal et du zéro situé à l'extrême droite après le séparateur décimal détermine la plage des chiffres qui sont toujours présents dans la chaîne de résultat.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The "00" specifier causes the value to be rounded to the nearest digit preceding the decimal, where rounding away from zero is always used.</source>
          <target state="translated">Le spécificateur « 00 » provoque l'arrondissement de la valeur au chiffre le plus proche précédant la virgule ; l'arrondissement à une valeur différente de zéro est toujours utilisé.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, formatting 34.5 with "00" would result in the value 35.</source>
          <target state="translated">Par exemple, la mise en forme de 34,5 avec « 00 » produit la valeur 35.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The following example displays several values that are formatted by using custom format strings that include zero placeholders.</source>
          <target state="translated">L'exemple suivant affiche plusieurs valeurs qui sont mises en forme à l'aide de chaînes de format personnalisées incluant des espaces réservés du zéro.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The "#" Custom Specifier</source>
          <target state="translated">Spécificateur personnalisé "#"</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The "#" custom format specifier serves as a digit-placeholder symbol.</source>
          <target state="translated">Le spécificateur de format personnalisé "#" sert de symbole d'espace réservé des chiffres.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If the value that is being formatted has a digit in the position where the "#" symbol appears in the format string, that digit is copied to the result string.</source>
          <target state="translated">Si la valeur qui est mise en forme comprend un chiffre à l'emplacement où le symbole « # » apparaît dans la chaîne de format, ce chiffre est copié dans la chaîne de résultat.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Otherwise, nothing is stored in that position in the result string.</source>
          <target state="translated">Sinon, rien n'est stocké à cet emplacement dans la chaîne résultante.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Note that this specifier never displays a zero that is not a significant digit, even if zero is the only digit in the string.</source>
          <target state="translated">Notez que ce spécificateur n'affiche jamais un zéro qui n'est pas un chiffre significatif, même si le zéro est le seul chiffre de la chaîne.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>It will display zero only if it is a significant digit in the number that is being displayed.</source>
          <target state="translated">Il affichera zéro uniquement s'il s'agit d'un chiffre significatif dans le nombre affiché.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The "##" format string causes the value to be rounded to the nearest digit preceding the decimal, where rounding away from zero is always used.</source>
          <target state="translated">La chaîne de format « ## » provoque l'arrondissement de la valeur au chiffre le plus proche précédant la virgule ; l'arrondissement à une valeur différente de zéro est toujours utilisé.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For example, formatting 34.5 with "##" would result in the value 35.</source>
          <target state="translated">Par exemple, la mise en forme de 34,5 avec « ## » produit la valeur 35.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The following example displays several values that are formatted by using custom format strings that include digit placeholders.</source>
          <target state="translated">L'exemple suivant affiche plusieurs valeurs qui sont mises en forme à l'aide de chaînes de format personnalisées incluant des espaces réservés de chiffres.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To return a result string in which absent digits or leading zeroes are replaced by spaces, use the <bpt id="p1">[</bpt>composite formatting<ept id="p1">](composite-format.md)</ept> feature and specify a field width, as the following example illustrates.</source>
          <target state="translated">Pour retourner une chaîne de résultat dans laquelle les chiffres absents ou les zéros non significatifs sont remplacés par des espaces, utilisez la fonctionnalité de <bpt id="p1">[</bpt>mise en forme composite<ept id="p1">](composite-format.md)</ept> et spécifiez une largeur de champ, comme l’illustre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The "." Custom Specifier</source>
          <target state="translated">Le spécificateur personnalisé "."</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The "." custom format specifier inserts a localized decimal separator into the result string.</source>
          <target state="translated">Le spécificateur de format personnalisé "." insère un séparateur décimal localisé dans la chaîne de résultat.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The first period in the format string determines the location of the decimal separator in the formatted value; any additional periods are ignored.</source>
          <target state="translated">Le premier point de la chaîne de format détermine l'emplacement du séparateur décimal dans la valeur mise en forme. Tout autre point est ignoré.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The character that is used as the decimal separator in the result string is not always a period; it is determined by the <bpt id="p1">[</bpt>NumberDecimalSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator)</ept> property of the <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> object that controls formatting.</source>
          <target state="translated">Le caractère qui est utilisé comme séparateur décimal dans la chaîne de résultat n’est pas toujours un point ; il est déterminé par la propriété <bpt id="p1">[</bpt>NumberDecimalSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator)</ept> de l’objet <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> qui contrôle la mise en forme.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The following example uses the "." format specifier to define the location of the decimal point in several result strings.</source>
          <target state="translated">L'exemple suivant utilise le spécificateur de format "." pour définir l'emplacement de la virgule décimale dans plusieurs chaînes de résultat.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The "," Custom Specifier</source>
          <target state="translated">Spécificateur personnalisé ","</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The "," character serves as both a group separator and a number scaling specifier.</source>
          <target state="translated">Le caractère "," sert à la fois de séparateur de groupes et de spécificateur de mise à l'échelle des nombres.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Group separator: If one or more commas are specified between two digit placeholders (0 or #) that format the integral digits of a number, a group separator character is inserted between each number group in the integral part of the output.</source>
          <target state="translated">Séparateur de groupes : si une ou plusieurs virgules sont spécifiées entre deux espaces réservés de chiffres (0 ou #) qui mettent en forme les chiffres intégraux d'un nombre, un caractère de séparation des groupes est inséré entre chaque groupe de nombres dans la partie intégrale de la sortie.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>NumberGroupSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator)</ept> and <bpt id="p2">[</bpt>NumberGroupSizes<ept id="p2">](xref:System.Globalization.NumberFormatInfo.NumberGroupSizes)</ept> properties of the current <bpt id="p3">[</bpt>NumberFormatInfo<ept id="p3">](xref:System.Globalization.NumberFormatInfo)</ept> object determine the character used as the number group separator and the size of each number group.</source>
          <target state="translated">Les propriétés <bpt id="p1">[</bpt>NumberGroupSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator)</ept> et <bpt id="p2">[</bpt>NumberGroupSizes<ept id="p2">](xref:System.Globalization.NumberFormatInfo.NumberGroupSizes)</ept> de l’objet <bpt id="p3">[</bpt>NumberFormatInfo<ept id="p3">](xref:System.Globalization.NumberFormatInfo)</ept> actuel déterminent le caractère utilisé comme séparateur de groupes de nombres et la taille de chaque groupe de nombres.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For example, if the string "#,#" and the invariant culture are used to format the number 1000, the output is "1,000".</source>
          <target state="translated">Par exemple, si la chaîne « #,# » et la culture indifférente sont utilisées pour mettre en forme le nombre 1000, la sortie est « 1,000 ».</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Number scaling specifier: If one or more commas are specified immediately to the left of the explicit or implicit decimal point, the number to be formatted is divided by 1000 for each comma.</source>
          <target state="translated">Spécificateur de mise à l'échelle des nombres : si une ou plusieurs virgules sont spécifiées immédiatement à gauche du séparateur décimal explicite ou implicite, le nombre à mettre en forme est divisé par 1000 pour chaque virgule.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For example, if the string "0,," is used to format the number 100 million, the output is "100".</source>
          <target state="translated">Par exemple, si la chaîne « 0,, » est utilisée pour mettre en forme le nombre 100 millions, la sortie est « 100 ».</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>You can use group separator and number scaling specifiers in the same format string.</source>
          <target state="translated">Vous pouvez utiliser des spécificateurs de séparateur de groupes et de mise à l'échelle des nombres dans la même chaîne de format.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For example, if the string "#,0,," and the invariant culture are used to format the number one billion, the output is "1,000".</source>
          <target state="translated">Par exemple, si la chaîne « #,0,, » et la culture indifférente sont utilisées pour mettre en forme le nombre&amp;1; milliard, la sortie est « 1,000 ».</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of the comma as a group separator.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la virgule comme séparateur de groupes.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of the comma as a specifier for number scaling.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la virgule comme spécificateur pour la mise à l'échelle des nombres.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The "%" Custom Specifier</source>
          <target state="translated">Spécificateur personnalisé "%"</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A percent sign (%) in a format string causes a number to be multiplied by 100 before it is formatted.</source>
          <target state="translated">Un signe de pourcentage (%) dans une chaîne de format entraîne la multiplication d'un nombre par 100 avant sa mise en forme.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The localized percent symbol is inserted in the number at the location where the % appears in the format string.</source>
          <target state="translated">Le symbole de pourcentage localisé est inséré dans le nombre à l'emplacement où le caractère % apparaît dans la chaîne de format.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The percent character used is defined by the <bpt id="p1">[</bpt>PercentSymbol<ept id="p1">](xref:System.Globalization.NumberFormatInfo.PercentSymbol)</ept> property of the current <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> object.</source>
          <target state="translated">Le caractère de pourcentage utilisé est défini par la propriété <bpt id="p1">[</bpt>PercentSymbol<ept id="p1">](xref:System.Globalization.NumberFormatInfo.PercentSymbol)</ept> de l’objet <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> actuel.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The following example defines several custom format strings that include the "%" custom specifier.</source>
          <target state="translated">L'exemple suivant définit plusieurs chaînes de format personnalisées qui incluent le spécificateur personnalisé "%".</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The "‰" Custom Specifier</source>
          <target state="translated">Spécificateur personnalisé "‰"</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A per mille character (‰ or \u2030) in a format string causes a number to be multiplied by 1000 before it is formatted.</source>
          <target state="translated">Un caractère « pour mille » (‰ ou \u2030) dans une chaîne de format entraîne la multiplication d'un nombre par 1 000 avant sa mise en forme.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The appropriate per mille symbol is inserted in the returned string at the location where the ‰ symbol appears in the format string.</source>
          <target state="translated">Le symbole « pour mille » approprié est inséré dans la chaîne retournée, à l'emplacement où le symbole ‰ apparaît dans la chaîne de format.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The per mille character used is defined by the <bpt id="p1">[</bpt>NumberFormatInfo.PerMilleSymbol<ept id="p1">](xref:System.Globalization.NumberFormatInfo.PerMilleSymbol)</ept> property of the object that provides culture-specific formatting information.</source>
          <target state="translated">Le caractère « pour mille » utilisé est défini par la propriété <bpt id="p1">[</bpt>NumberFormatInfo.PerMilleSymbol<ept id="p1">](xref:System.Globalization.NumberFormatInfo.PerMilleSymbol)</ept> de l’objet qui fournit les informations de mise en forme spécifique à la culture.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The following example defines a custom format string that includes the "‰" custom specifier.</source>
          <target state="translated">L'exemple suivant définit une chaîne de format personnalisée qui inclut le spécificateur personnalisé "‰".</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The "E" and "e" Custom Specifiers</source>
          <target state="translated">Spécificateurs personnalisés « E » et « e »</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If any of the strings "E", "E+", "E-", "e", "e+", or "e-" are present in the format string and are followed immediately by at least one zero, the number is formatted by using scientific notation with an "E" or "e" inserted between the number and the exponent.</source>
          <target state="translated">Si l'une des chaînes "E", "E+", "E-", "e", "e+" ou "e-" est présente dans la chaîne de format et immédiatement suivie d'au moins un zéro, le nombre est mis en forme à l'aide de la notation scientifique, avec un "E" ou un "e" inséré entre le nombre et l'exposant.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The number of zeros following the scientific notation indicator determines the minimum number of digits to output for the exponent.</source>
          <target state="translated">Le nombre de zéros qui suivent l'indicateur de notation scientifique détermine le nombre minimal de chiffres à afficher pour l'exposant.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The "E+" and "e+" formats indicate that a plus sign or minus sign should always precede the exponent.</source>
          <target state="translated">Les formats "E+" et "e+" indiquent qu'un signe plus ou un signe moins doit toujours précéder l'exposant.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The "E", "E-", "e", or "e-" formats indicate that a sign character should precede only negative exponents.</source>
          <target state="translated">Les formats "E", "E-", "e" ou "e-" indiquent qu'un signe ne doit précéder que les exposants négatifs.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The following example formats several numeric values using the specifiers for scientific notation.</source>
          <target state="translated">L'exemple suivant met en forme plusieurs valeurs numériques à l'aide des spécificateurs pour la notation scientifique.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The "<ph id="ph1">\"</ph> Escape Character</source>
          <target state="translated">Caractère d’échappement "<ph id="ph1">\"</ph></target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The "#", "0", ".", ",", "%", and "‰" symbols in a format string are interpreted as format specifiers rather than as literal characters.</source>
          <target state="translated">Les symboles "#", "0", ".", ",", "%" et "‰" dans une chaîne de format sont interprétés comme des spécificateurs de format plutôt que comme des caractères littéraux.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Depending on their position in a custom format string, the uppercase and lowercase "E" as well as the + and - symbols may also be interpreted as format specifiers.</source>
          <target state="translated">En fonction de leur position dans une chaîne de format personnalisée, les "E" majuscules et minuscules ainsi que les symboles + et - peuvent également être interprétés comme des spécificateurs de format.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>To prevent a character from being interpreted as a format specifier, you can precede it with a backslash, which is the escape character.</source>
          <target state="translated">Pour éviter qu'un caractère soit interprété comme un spécificateur de format, vous pouvez le faire précéder d'une barre oblique inverse, qui est le caractère d'échappement.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The escape character signifies that the following character is a character literal that should be included in the result string unchanged.</source>
          <target state="translated">Le caractère d'échappement signifie que le caractère suivant est un caractère littéral qui doit être inclus inchangé dans la chaîne de résultat.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>To include a backslash in a result string, you must escape it with another backslash (<ph id="ph1">\\</ph>).</source>
          <target state="translated">Pour inclure une barre oblique inverse dans une chaîne de résultat, vous devez la placer dans une séquence d'échappement avec une autre barre oblique inverse (<ph id="ph1">\\</ph>).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Some compilers, such as the C# compiler, may also interpret a single backslash character as an escape character.</source>
          <target state="translated">Certains compilateurs, tels que le compilateur C#, peuvent également interpréter une barre oblique inverse unique comme un caractère d’échappement.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>To ensure that a string is interpreted correctly when formatting, you can use the verbatim string literal character (the @ character) before the string in C#, or add another backslash character before each backslash.</source>
          <target state="translated">Pour garantir l’interprétation correcte d’une chaîne lors de la mise en forme, vous pouvez utiliser le caractère littéral de chaîne textuelle (le caractère @) avant la chaîne en C#, ou ajouter une autre barre oblique inverse avant chaque barre oblique inverse.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The following C# example illustrates both approaches.</source>
          <target state="translated">L'exemple C# suivant illustre ces deux approches.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The following example uses the escape character to prevent the formatting operation from interpreting the "#", "0", and "<ph id="ph1">\"</ph> characters as either escape characters or format specifiers.</source>
          <target state="translated">L’exemple suivant utilise le caractère d’échappement pour empêcher l’opération de mise en forme d’interpréter les caractères "#", "0" et "<ph id="ph1">\"</ph> comme des caractères d’échappement ou des spécificateurs de format.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The example uses an additional backslash to ensure that a backslash is interpreted as a literal character.</source>
          <target state="translated">L’exemple utilise une barre oblique inverse supplémentaire pour garantir qu’une barre oblique inverse est interprétée comme un caractère littéral.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The ";" Section Separator</source>
          <target state="translated">Séparateur de section ";"</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The semicolon (;) is a conditional format specifier that applies different formatting to a number depending on whether its value is positive, negative, or zero.</source>
          <target state="translated">Le point-virgule (;) est un spécificateur de format conditionnel qui applique une mise en forme différente à un nombre suivant que sa valeur est positive, négative ou nulle.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>To produce this behavior, a custom format string can contain up to three sections separated by semicolons.</source>
          <target state="translated">Pour entraîner ce comportement, une chaîne de format personnalisée peut contenir jusqu'à trois sections séparées par des points-virgules.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>These sections are described in the following table.</source>
          <target state="translated">Ces sections sont décrites dans le tableau suivant.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Number of sections</source>
          <target state="translated">Nombre de sections</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>One section</source>
          <target state="translated">Une section</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The format string applies to all values.</source>
          <target state="translated">La chaîne de format s'applique à toutes les valeurs.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Two sections</source>
          <target state="translated">Deux sections</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The first section applies to positive values and zeros, and the second section applies to negative values.</source>
          <target state="translated">La première section s'applique aux valeurs positives et aux zéros, et la deuxième section s'applique aux valeurs négatives.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If the number to be formatted is negative, but becomes zero after rounding according to the format in the second section, the resulting zero is formatted according to the first section.</source>
          <target state="translated">Si le nombre à mettre en forme est négatif, mais devient nul après l'arrondissement au format de la deuxième section, le zéro résultant est mis en forme en fonction de la première section.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Three sections</source>
          <target state="translated">Trois sections</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The first section applies to positive values, the second section applies to negative values, and the third section applies to zeros.</source>
          <target state="translated">La première section s'applique aux valeurs positives, la deuxième section s'applique aux valeurs négatives et la troisième section s'applique aux zéros.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The second section can be left empty (by having nothing between the semicolons), in which case the first section applies to all nonzero values.</source>
          <target state="translated">La deuxième section peut rester vide (en n'insérant aucune valeur entre les points-virgules), auquel cas la première section s'applique à toutes les valeurs différentes de zéro.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If the number to be formatted is nonzero, but becomes zero after rounding according to the format in the first or second section, the resulting zero is formatted according to the third section.</source>
          <target state="translated">Si le nombre à mettre en forme est différent de zéro, mais devient nul après l'arrondissement au format de la première ou deuxième section, le zéro résultant est mis en forme en fonction de la troisième section.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Section separators ignore any preexisting formatting associated with a number when the final value is formatted.</source>
          <target state="translated">Les séparateurs de section ignorent toute mise en forme préexistante associée à un nombre lorsque la valeur finale est mise en forme.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>For example, negative values are always displayed without a minus sign when section separators are used.</source>
          <target state="translated">Par exemple, les valeurs négatives sont toujours affichées sans signe moins lorsque des séparateurs de section sont utilisés.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>If you want the final formatted value to have a minus sign, you should explicitly include the minus sign as part of the custom format specifier.</source>
          <target state="translated">Si vous souhaitez que la valeur mise en forme finale soit précédée d'un signe moins, vous devez inclure ce signe explicitement comme élément du spécificateur de format personnalisé.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The following example uses the ";" format specifier to format positive, negative, and zero numbers differently.</source>
          <target state="translated">L'exemple suivant utilise le spécificateur de format ";" pour mettre en forme différemment les nombres positifs, négatifs et nuls.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Floating-Point Infinities and NaN</source>
          <target state="translated">Infinis à virgule flottante et NaN</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Regardless of the format string, if the value of a <bpt id="p1">[</bpt>Single<ept id="p1">](xref:System.Single)</ept> or <bpt id="p2">[</bpt>Double<ept id="p2">](xref:System.Double)</ept> floating-point type is positive infinity, negative infinity, or not a number (NaN), the formatted string is the value of the respective <bpt id="p3">[</bpt>PositiveInfinitySymbol<ept id="p3">](xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol)</ept>, <bpt id="p4">[</bpt>NegativeInfinitySymbol<ept id="p4">](xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol)</ept>, or <bpt id="p5">[</bpt>NaNSymbol<ept id="p5">](xref:System.Globalization.NumberFormatInfo.NaNSymbol)</ept> property that is specified by the currently applicable <bpt id="p6">[</bpt>NumberFormatInfo<ept id="p6">](xref:System.Globalization.NumberFormatInfo)</ept> object.</source>
          <target state="translated">Quelle que soit la chaîne de format, si la valeur d’un type virgule flottante <bpt id="p1">[</bpt>Single<ept id="p1">](xref:System.Single)</ept> ou <bpt id="p2">[</bpt>Double<ept id="p2">](xref:System.Double)</ept> est l’infini positif, l’infini négatif ou une valeur qui n’est pas un nombre, la chaîne mise en forme est, respectivement, la valeur de la propriété <bpt id="p3">[</bpt>PositiveInfinitySymbol<ept id="p3">](xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol)</ept>, <bpt id="p4">[</bpt>NegativeInfinitySymbol<ept id="p4">](xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol)</ept> ou <bpt id="p5">[</bpt>NaNSymbol<ept id="p5">](xref:System.Globalization.NumberFormatInfo.NaNSymbol)</ept> qui est spécifiée par l’objet <bpt id="p6">[</bpt>NumberFormatInfo<ept id="p6">](xref:System.Globalization.NumberFormatInfo)</ept> actuellement applicable.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Rounding and Fixed-Point Format Strings</source>
          <target state="translated">Arrondi et chaînes de format à virgule fixe</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>For fixed-point format strings (that is, format strings that do not contain scientific notation format characters), numbers are rounded to as many decimal places as there are digit placeholders to the right of the decimal point.</source>
          <target state="translated">Pour les chaînes de format à virgule fixe (c'est-à-dire les chaînes de format ne contenant pas de caractères de format de notation scientifique), les nombres sont arrondis au même nombre de décimales que d'espaces réservés de chiffres à droite du séparateur décimal.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If the format string does not contain a decimal point, the number is rounded to the nearest integer.</source>
          <target state="translated">Si la chaîne de format ne contient pas de virgule décimale, le nombre est arrondi à l'entier le plus proche.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>If the number has more digits than there are digit placeholders to the left of the decimal point, the extra digits are copied to the result string immediately before the first digit placeholder.</source>
          <target state="translated">Si le nombre possède plus de chiffres que d'espaces réservés de chiffres à gauche de la virgule décimale, les chiffres supplémentaires sont copiés dans la chaîne résultante immédiatement avant le premier espace réservé de chiffre.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Exemple</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The following example demonstrates two custom numeric format strings.</source>
          <target state="translated">L'exemple suivant présente deux chaînes de format numériques personnalisées.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>In both cases, the digit placeholder (#) displays the numeric data, and all other characters are copied to the result string.</source>
          <target state="translated">Dans les deux cas, l’espace réservé de chiffre (#) affiche les données numériques, et tous les autres caractères sont copiés dans la chaîne de résultat.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Voir aussi</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Globalization.NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Globalization.NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept></target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting types<ept id="p1">](formatting-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Mise en forme des types<ept id="p1">](formatting-types.md)</ept></target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard numeric format strings<ept id="p1">](standard-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Chaînes de format numériques standard<ept id="p1">](standard-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: pad a number with leading zeros<ept id="p1">](pad-number.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guide pratique pour remplir un nombre avec des zéros non significatifs<ept id="p1">](pad-number.md)</ept></target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Composite formatting<ept id="p1">](composite-format.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Mise en forme composite<ept id="p1">](composite-format.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>