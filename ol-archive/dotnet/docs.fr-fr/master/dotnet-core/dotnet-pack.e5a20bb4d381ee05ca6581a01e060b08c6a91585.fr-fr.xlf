<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f0362aa" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d439dc83cc4538b44634197f3dce1bf7ad2ad6c7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\dotnet-pack.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6eeba357ef3925897a6ee8770d49bc85b31bd633</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1fcc11b1d954bf19464ccce6a69c774eaf72b98f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-pack command | Microsoft Docs</source>
          <target state="translated">Commande dotnet-pack | Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-pack command creates NuGet packages for your .NET Core project.</source>
          <target state="translated">La commande dotnet-pack crée des packages NuGet pour votre projet .NET Core.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-pack, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-pack, CLI, commande CLI, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-pack</source>
          <target state="translated">dotnet-pack</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic applies to .NET Core Tools Preview 2.</source>
          <target state="translated">Cette rubrique s'applique aux outils .NET Core Preview 2.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For the .NET Core Tools RC4 version, see the <bpt id="p1">[</bpt>dotnet-pack (.NET Core Tools RC4)<ept id="p1">](../preview3/tools/dotnet-pack.md)</ept> topic.</source>
          <target state="translated">Pour la version RC4 des outils .NET Core, consultez la rubrique <bpt id="p1">[</bpt>dotnet-pack (outils .NET Core RC4)<ept id="p1">](../preview3/tools/dotnet-pack.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Nom</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet-pack`</ph> - Packs the code into a NuGet package.</source>
          <target state="translated"><ph id="ph1">`dotnet-pack`</ph> : Place le code dans un package NuGet.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Résumé</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet pack`</ph> command builds the project and creates NuGet packages.</source>
          <target state="translated">La commande <ph id="ph1">`dotnet pack`</ph> génère le projet et crée les packages NuGet.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The result of this operation is two packages with the <ph id="ph1">`nupkg`</ph> extension.</source>
          <target state="translated">Cette opération entraîne la création de deux packages avec l’extension <ph id="ph1">`nupkg`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>One package contains the code and the other contains the debug symbols.</source>
          <target state="translated">L’un d’eux contient le code et l’autre contient les symboles de débogage.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>NuGet dependencies of the project being packed are added to the nuspec file, so they are able to be resolved when the package is installed.</source>
          <target state="translated">Les dépendances NuGet du projet empaqueté sont ajoutées dans le fichier nuspec, pour pouvoir être résolues lorsque le package est installé.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Project-to-project references are not packaged inside the project.</source>
          <target state="translated">Les références entre projets ne sont pas empaquetées à l’intérieur du projet.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Currently, you need to have a package per project if you have project-to-project dependencies.</source>
          <target state="translated">Vous devez disposer d’un package par projet si vous avez des dépendances entre projets.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet pack`</ph> by default first builds the project.</source>
          <target state="translated"><ph id="ph1">`dotnet pack`</ph> par défaut, génère d’abord le projet.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you wish to avoid this, pass the <ph id="ph1">`--no-build`</ph> option.</source>
          <target state="translated">Pour éviter ce problème, passez l’option <ph id="ph1">`--no-build`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This can be useful in Continuous Integration (CI) build scenarios in which you know the code was just previously built, for example.</source>
          <target state="translated">Cela peut être utile dans les scénarios de build d’intégration continue, pour lesquels vous savez que le code vient d’être créé, par exemple.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">Affiche une aide brève pour la commande.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The project to pack.</source>
          <target state="translated">Projet à empaqueter.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It can be either a path to a <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> file or to a directory.</source>
          <target state="translated">Il peut s’agir du chemin d’un fichier <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> ou d’un répertoire.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If omitted, it will default to the current directory.</source>
          <target state="translated">Si aucune valeur n’est spécifiée, le répertoire actif est choisi par défaut.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Places the built packages in the directory specified.</source>
          <target state="translated">Place les packages générés dans le répertoire spécifié.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Does not build the project before packing.</source>
          <target state="translated">Ne génère pas le projet avant de créer le package.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Places the temporary build artifacts in the specified directory.</source>
          <target state="translated">Place les artefacts de build temporaires dans le répertoire spécifié.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>By default, they go to the <ph id="ph1">`obj`</ph> directory in the current directory.</source>
          <target state="translated">Par défaut, ils sont placés dans le répertoire <ph id="ph1">`obj`</ph> du répertoire actif.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Configuration to use when building the project.</source>
          <target state="translated">Configuration à utiliser lors de la génération du projet.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If not specified, will default to <ph id="ph1">`Debug`</ph>.</source>
          <target state="translated">Si aucune valeur n’est spécifiée, la valeur utilisée par défaut sera <ph id="ph1">`Debug`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Updates the star in <ph id="ph1">`-*`</ph> package version suffix with a specified string.</source>
          <target state="translated">Remplace l’étoile du suffixe de version de package <ph id="ph1">`-*`</ph> par une chaîne spécifiée.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Exemples</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Pack the project in the current directory:</source>
          <target state="translated">Empaquetez le projet dans le répertoire actif :</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Pack the app1 project:</source>
          <target state="translated">Empaquetez le projet app1 :</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Pack the project in the current directory and place the resulting packages into the specified folder:</source>
          <target state="translated">Empaquetez le projet dans le répertoire actif et placez les packages résultants dans le dossier spécifié :</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Pack the project in the current directory into the specified folder and skip the build step:</source>
          <target state="translated">Empaquetez le projet dans le répertoire actif du dossier spécifié et ignorez l’étape de génération :</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Pack the current project and updates the resulting packages version with the given suffix.</source>
          <target state="translated">Empaquetez le projet en cours et mettez à jour la version des packages obtenus avec le suffixe donné.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, version <ph id="ph1">`1.0.0-*`</ph> will be updated to <ph id="ph2">`1.0.0-ci-1234`</ph>.</source>
          <target state="translated">Par exemple, la version <ph id="ph1">`1.0.0-*`</ph> sera remplacée par <ph id="ph2">`1.0.0-ci-1234`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>