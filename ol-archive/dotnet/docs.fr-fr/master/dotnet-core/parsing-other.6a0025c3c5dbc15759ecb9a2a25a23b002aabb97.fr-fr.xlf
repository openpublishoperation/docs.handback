<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db80cc5f37e814f224ff76b14a906bb4d41064fb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\parsing-other.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3cd429d222cddf9e62a8858f819beed957527bee</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1405ab0e971bc580ee83d984b30d55200641d5f1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Parsing other strings in .NET</source>
          <target state="translated">Analyse d’autres chaînes dans .NET</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Parsing other strings in .NET</source>
          <target state="translated">Analyse d’autres chaînes dans .NET</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Parsing other strings in .NET</source>
          <target state="translated">Analyse d’autres chaînes dans .NET</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In addition to numeric and <bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept> strings, you can also parse strings that represent the types <bpt id="p2">[</bpt>Char<ept id="p2">](xref:System.Char)</ept>, <bpt id="p3">[</bpt>Boolean<ept id="p3">](xref:System.Boolean)</ept>, and <bpt id="p4">[</bpt>Enum<ept id="p4">](xref:System.Enum)</ept> into data types.</source>
          <target state="translated">Outre des chaînes numériques et <bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept>, vous pouvez analyser des chaînes qui représentent les types <bpt id="p2">[</bpt>Char<ept id="p2">](xref:System.Char)</ept>, <bpt id="p3">[</bpt>Boolean<ept id="p3">](xref:System.Boolean)</ept> et <bpt id="p4">[</bpt>Enum<ept id="p4">](xref:System.Enum)</ept> dans des types de données.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Char</source>
          <target state="translated">Char</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The static parse method associated with the <bpt id="p1">[</bpt>Char<ept id="p1">](xref:System.Char)</ept> data type is useful for converting a string that contains a single character into its Unicode value.</source>
          <target state="translated">La méthode d’analyse statique associée au type de données <bpt id="p1">[</bpt>Char<ept id="p1">](xref:System.Char)</ept> est utile pour la conversion d’une chaîne qui contient un caractère unique en une valeur Unicode.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following code example parses a string into a Unicode character.</source>
          <target state="translated">L’exemple de code suivant analyse une chaîne en un caractère Unicode.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="translated">Booléen</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Boolean<ept id="p1">](xref:System.Boolean)</ept> data type contains a <bpt id="p2">[</bpt>Parse<ept id="p2">](xref:System.Boolean.Parse(System.String))</ept> method that you can use to convert a string that represents a <ph id="ph1">`Boolean`</ph> value into an actual <ph id="ph2">`Boolean`</ph> type.</source>
          <target state="translated">Le type de données <bpt id="p1">[</bpt>Boolean<ept id="p1">](xref:System.Boolean)</ept> contient une méthode <bpt id="p2">[</bpt>Parse<ept id="p2">](xref:System.Boolean.Parse(System.String))</ept> que vous pouvez utiliser pour convertir une chaîne représentant une valeur <ph id="ph1">`Boolean`</ph> en type <ph id="ph2">`Boolean`</ph> réel.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This method is not case-sensitive and can successfully parse a string containing "True" or "False."</source>
          <target state="translated">Cette méthode ne respecte pas la casse et peut analyser une chaîne contenant « True » ou « False ».</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Parse`</ph> method associated with the <ph id="ph2">`Boolean`</ph> type can also parse strings that are surrounded by white spaces.</source>
          <target state="translated">La méthode <ph id="ph1">`Parse`</ph> associée au type <ph id="ph2">`Boolean`</ph> peut aussi analyser des chaînes entourées d’espaces blancs.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If any other string is passed, a <bpt id="p1">[</bpt>FormatException<ept id="p1">](xref:System.FormatException)</ept> is thrown.</source>
          <target state="translated">Si une autre chaîne est passée, une <bpt id="p1">[</bpt>FormatException<ept id="p1">](xref:System.FormatException)</ept> est levée.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following code example uses the <ph id="ph1">`Parse`</ph> method to convert a string into a <ph id="ph2">`Boolean`</ph> value.</source>
          <target state="translated">L’exemple de code suivant utilise la méthode <ph id="ph1">`Parse`</ph> pour convertir une chaîne en valeur <ph id="ph2">`Boolean`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Enumeration</source>
          <target state="translated">Énumération</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can use the static <bpt id="p1">[</bpt>Parse<ept id="p1">](xref:System.Enum.Parse(System.Type,System.String))</ept> method to initialize an enumeration type to the value of a string.</source>
          <target state="translated">Vous pouvez utiliser la méthode <bpt id="p1">[</bpt>Parse<ept id="p1">](xref:System.Enum.Parse(System.Type,System.String))</ept> statique pour initialiser un type d’énumération avec la valeur d’une chaîne.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This method accepts the enumeration type you are parsing, the string to parse, and an optional <ph id="ph1">`Boolean`</ph> flag indicating whether or not the parse is case-sensitive.</source>
          <target state="translated">Cette méthode accepte le type d’énumération que vous analysez, la chaîne à analyser et un indicateur <ph id="ph1">`Boolean`</ph> facultatif indiquant si l’analyse respecte la casse.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The string you are parsing can contain several values separated by commas, which can be preceded or followed by one or more empty spaces (also called white spaces).</source>
          <target state="translated">La chaîne que vous analysez peut contenir plusieurs valeurs séparées par des virgules, lesquelles peuvent être précédées ou suivies d’un ou plusieurs espaces vides (aussi appelés espaces blancs).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When the string contains multiple values, the value of the returned object is the value of all specified values combined with a bitwise OR operation.</source>
          <target state="translated">Quand la chaîne contient plusieurs valeurs, celle de l’objet retourné est la valeur de toutes les valeurs spécifiées, combinées avec une opération OR au niveau du bit.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`Parse`</ph> method to convert a string representation into an enumeration value.</source>
          <target state="translated">L’exemple suivant utilise la méthode <ph id="ph1">`Parse`</ph> pour convertir une représentation sous forme de chaîne en valeur d’énumération.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>DayOfWeek<ept id="p1">](xref:System.DayOfWeek)</ept> enumeration is initialized to Thursday from a string.</source>
          <target state="translated">L’énumération <bpt id="p1">[</bpt>DayOfWeek<ept id="p1">](xref:System.DayOfWeek)</ept> est initialisée à Thursday à partir d’une chaîne.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Voir aussi</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Parsing strings in .NET<ept id="p1">](parsing-strings.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Analyse de chaînes dans .NET<ept id="p1">](parsing-strings.md)</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting types in .NET<ept id="p1">](formatting-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Mise en forme des types dans .NET<ept id="p1">](formatting-types.md)</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Type conversion in .NET<ept id="p1">](type-conversion.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Conversion de type dans .NET<ept id="p1">](type-conversion.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>