<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d863587fbfee2bf713f8566a3e5b294d49ae50e9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\deploying\creating-nuget-packages.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c39f0e3f60ca0f18f61039965109663a3454702</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55bf9d88e534f923a20a04e22bf6d0c275ece669</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Creating a NuGet Package with Cross Platform Tools</source>
          <target state="translated">Création d’un Package NuGet avec les outils multiplateformes</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Creating a NuGet Package with Cross Platform Tools</source>
          <target state="translated">Création d’un Package NuGet avec les outils multiplateformes</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core, NuGet</source>
          <target state="translated">.NET, .NET Core, NuGet</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>How to Create a NuGet Package with Cross Platform Tools</source>
          <target state="translated">Création d’un Package NuGet avec les outils multiplateformes</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following shows command-line samples using Unix.</source>
          <target state="translated">Voici des exemples de ligne de commande avec Unix.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet pack`</ph> command as shown here works the same way on Windows.</source>
          <target state="translated">La commande <ph id="ph1">`dotnet pack`</ph> montrée ici fonctionne de la même façon sur Windows.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For .NET Core 1.0, libraries are expected to be distributed as NuGet packages.</source>
          <target state="translated">Pour .NET Core 1.0, les bibliothèques doivent être distribuées sous forme de packages NuGet.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This is in fact how all of the .NET Standard libraries are distributed and consumed.</source>
          <target state="translated">Il s’agit en fait de la façon dont toutes les bibliothèques .NET Standard sont distribuées et consommées.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This is most easily done with the <ph id="ph1">`dotnet pack`</ph> command.</source>
          <target state="translated">Cette opération est plus facile avec la commande <ph id="ph1">`dotnet pack`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Imagine that you just wrote an awesome new library that you would like to distribute over NuGet.</source>
          <target state="translated">Imaginez que vous venez d’écrire une nouvelle bibliothèque que vous voulez distribuer via NuGet.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can create a NuGet package with cross platform tools to do exactly that!</source>
          <target state="translated">Pour cela, vous pouvez créer un package NuGet avec les outils multiplateformes.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following example assumes a library called <bpt id="p1">**</bpt>SuperAwesomeLibrary<ept id="p1">**</ept> which targets <ph id="ph1">`netstandard1.0`</ph>.</source>
          <target state="translated">L’exemple suivant suppose une bibliothèque nommée <bpt id="p1">**</bpt>SuperAwesomeLibrary<ept id="p1">**</ept> ciblant <ph id="ph1">`netstandard1.0`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you have transitive dependencies; that is, a project which depends on another project, you'll need to make sure to restore packages for your entire solution with the <ph id="ph1">`dotnet restore`</ph> command before creating a NuGet package.</source>
          <target state="translated">Si vous avez des dépendances transitives (c’est-à-dire dans le cas d’un projet qui dépend d’un autre projet), vous devez veiller à restaurer les packages pour toute votre solution avec la commande <ph id="ph1">`dotnet restore`</ph> avant de créer un package NuGet.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Failing to do so will result in the <ph id="ph1">`dotnet pack`</ph> command to not work properly.</source>
          <target state="translated">Si vous ne le faites pas, la commande <ph id="ph1">`dotnet pack`</ph> ne fonctionne pas correctement.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>After ensuring packages are restored, you can navigate to the directory where a library lives:</source>
          <target state="translated">Après avoir vérifié que les packages sont restaurés, vous pouvez accéder au répertoire où se trouve une bibliothèque :</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Then it's just a single command from the command line:</source>
          <target state="translated">Il s’agit d’une seule commande à partir de la ligne de commande :</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Your <ph id="ph1">`/bin/Debug`</ph> folder will now look like this:</source>
          <target state="translated">Votre dossier <ph id="ph1">`/bin/Debug`</ph> doit maintenant ressembler à ceci :</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Note that this will produce a package which is capable of being debugged.</source>
          <target state="translated">Notez que ceci génère un package qui peut être débogué.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you want to build a NuGet package with release binaries, all you need to do is add the <ph id="ph1">`-c`</ph><ph id="ph2">/</ph><ph id="ph3">`--configuration`</ph> switch and use <ph id="ph4">`release`</ph> as the argument.</source>
          <target state="translated">Si vous voulez générer un package NuGet avec des fichiers binaires compilés, tout ce que vous devez faire est d’ajouter le commutateur <ph id="ph1">`-c`</ph><ph id="ph2">/</ph><ph id="ph3">`--configuration`</ph> et d’utiliser <ph id="ph4">`release`</ph> comme argument.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Your <ph id="ph1">`/bin`</ph> folder will now have a <ph id="ph2">`release`</ph> folder containing your NuGet package with release binaries:</source>
          <target state="translated">Votre dossier <ph id="ph1">`/bin`</ph> a désormais un dossier <ph id="ph2">`release`</ph> contenant votre package NuGet avec les fichiers binaires compilés :</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>And now you have the necessary files to publish a NuGet package!</source>
          <target state="translated">Vous avez maintenant les fichiers nécessaires pour publier un package NuGet !</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Don't confuse <ph id="ph1">`dotnet pack`</ph> with <ph id="ph2">`dotnet publish`</ph></source>
          <target state="translated">Ne confondez pas <ph id="ph1">`dotnet pack`</ph> et <ph id="ph2">`dotnet publish`</ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It is important to note that at no point is the <ph id="ph1">`dotnet publish`</ph> command involved.</source>
          <target state="translated">Il est important de noter qu’à aucun moment, la commande <ph id="ph1">`dotnet publish`</ph> n’est impliquée.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet publish`</ph> command is for deploying applications with all of their dependencies in the same bundle -  not for generating a NuGet package to be distributed and consumed via NuGet.</source>
          <target state="translated">La commande <ph id="ph1">`dotnet publish`</ph> est destinée au déploiement des applications avec toutes leurs dépendances dans le même regroupement, et non pas à la génération d’un package NuGet à distribuer et à consommer via NuGet.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>