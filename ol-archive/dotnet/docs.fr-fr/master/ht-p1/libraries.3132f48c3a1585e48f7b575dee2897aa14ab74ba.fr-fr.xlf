<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">503cf3628ee317f701f467bddc4bcb5998b82af4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\porting\libraries.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b743c7373958ab8c3c389d1e913a132f6b59f512</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ce6b4b0287e09e26cac417d6679fc5bdee3716e0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Porting to .NET Core - Libraries</source>
          <target state="translated">Portage vers .NET Core - Bibliothèques</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Porting to .NET Core - Libraries</source>
          <target state="translated">Portage vers .NET Core - Bibliothèques</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Porting to .NET Core - Libraries</source>
          <target state="translated">Portage vers .NET Core - Bibliothèques</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>With the release of .NET Core 1.0, there is an opportunity to port existing library code so that it can run cross-platform.</source>
          <target state="translated">Avec la version de .NET Core 1.0, vous avez la possibilité de porter le code des bibliothèques existantes pour qu’il puisse s’exécuter sur différentes plateformes.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This article discusses the .NET Standard Library, unavailable technologies, how to account for the smaller number of APIs available on .NET Core 1.0, how to use the tooling that ships with .NET Core SDK Preview 2, and recommended approaches to porting your code.</source>
          <target state="translated">Cet article traite des points suivants : la bibliothèque .NET Standard, les technologies non disponibles, comment faire pour tenir compte du nombre plus réduit d’API disponibles sur .NET Core 1.0, comment utiliser les outils fournis avec .NET Core SDK Preview 2, et les approches recommandées pour le portage de votre code.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Porting is a task that may take time, especially if you have a large codebase.</source>
          <target state="translated">Le portage est une tâche qui peut prendre du temps, en particulier si vous avez un code base de grande taille.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You should also be prepared to adapt the guidance here as needed to best fit your code.</source>
          <target state="translated">Vous devez également être prêt à adapter les conseils donnés ici pour les faire correspondre au mieux à votre code.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Every codebase is different, so this article attempts to frame things in a flexible way, but you may find yourself needing to diverge from the prescribed guidance.</source>
          <target state="translated">Chaque code base est différent : cet article tente donc de structurer les éléments de façon souple, mais il peut être nécessaire de vous éloigner des conseils donnés.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prérequis</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This article assumes you are using Visual Studio 2015 or later on Windows.</source>
          <target state="translated">Cet article suppose que vous utilisez Visual Studio 2015 ou ultérieur sur Windows.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The bits required for building .NET Core code are not available on previous versions of Visual Studio.</source>
          <target state="translated">Les bits nécessaires pour générer le code .NET Core ne sont pas disponibles dans les versions précédentes de Visual Studio.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This article also assumes that you understand the <bpt id="p1">[</bpt>recommended porting process<ept id="p1">](index.md)</ept> and that you have resolved any issues with <bpt id="p2">[</bpt>third-party dependencies<ept id="p2">](third-party-deps.md)</ept>.</source>
          <target state="translated">Cet article suppose également que vous comprenez le <bpt id="p1">[</bpt>processus de portage recommandé<ept id="p1">](index.md)</ept> et que vous avez résolu les problèmes liés aux <bpt id="p2">[</bpt>dépendances tierces<ept id="p2">](third-party-deps.md)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Targeting the .NET Standard Library</source>
          <target state="translated">Ciblage de la bibliothèque .NET Standard</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The best way to build a cross-platform library for .NET Core is to target the <bpt id="p1">[</bpt>.NET Standard Library<ept id="p1">](../../standard/library.md)</ept>.</source>
          <target state="translated">La meilleure façon de générer une bibliothèque multiplateforme pour .NET Core est de cibler la <bpt id="p1">[</bpt>bibliothèque .NET Standard<ept id="p1">](../../standard/library.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The .NET Standard Library is the formal specification of .NET APIs that are intended to be available on all .NET runtimes.</source>
          <target state="translated">La bibliothèque .NET Standard est la spécification formelle des API .NET qui sont destinées à être disponibles sur tous les runtimes .NET.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It is supported by the .NET Core runtime.</source>
          <target state="translated">Elle est prise en charge par le runtime .NET Core.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>What this means is that you'll have to make a tradeoff between APIs you can use and platforms you can support, and pick the version of the .NET Platform Standard that best suits the tradeoff you wish to make.</source>
          <target state="translated">Cela signifie que vous devez trouver un compromis entre les API que vous pouvez utiliser et les plateformes que vous pouvez prendre en charge, et choisir la version de la plateforme .NET Standard qui est la mieux adaptée au compromis que vous voulez faire.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>As of right now, there are 7 different versions to consider: .NET Standard 1.0 through 1.6.</source>
          <target state="translated">Pour l’instant, il existe 7 versions différentes à considérer : .NET Standard 1.0 à 1.6.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you pick a higher version, you get access to more APIs at the cost of running on fewer targets.</source>
          <target state="translated">Si vous choisissez une version ultérieure, vous pouvez accéder à plus d’API avec comme contrepartie une exécution sur moins de cibles.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you pick a lower version, your code can run on more targets but at the cost of fewer APIs available to you.</source>
          <target state="translated">Si vous choisissez une version antérieure, votre code peut s’exécuter sur plus de cibles, mais avec moins d’API à votre disposition.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For your convenience, here is a matrix of each .NET Standard version and each specific area it runs on:</source>
          <target state="translated">Voici une matrice de chaque version de .NET Standard et de chaque plateforme spécifique sur laquelle elle s’exécute :</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Platform Name</source>
          <target state="translated">Nom de la plateforme</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Alias</source>
          <target state="translated">Alias</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>.NET Standard</source>
          <target state="translated">.NET Standard</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>netstandard</source>
          <target state="translated">netstandard</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>1.0</source>
          <target state="translated">1.0</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>1.1</source>
          <target state="translated">1.1</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>1.2</source>
          <target state="translated">1.2</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>1.3</source>
          <target state="translated">1.3</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>1.4</source>
          <target state="translated">1.4</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>1.5</source>
          <target state="translated">1,5</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>1.6</source>
          <target state="translated">1.6</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>.NET Core</source>
          <target state="translated">.NET Core</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>netcoreapp</source>
          <target state="translated">netcoreapp</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>1.0</source>
          <target state="translated">1.0</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>.NET Framework</source>
          <target state="translated">.NET Framework</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>net</source>
          <target state="translated">net</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>4.5</source>
          <target state="translated">4.5</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>4.5.1</source>
          <target state="translated">4.5.1</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>4.6</source>
          <target state="translated">4.6</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>4.6.1</source>
          <target state="translated">4.6.1</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>4.6.2</source>
          <target state="translated">4.6.2</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>4.6.3</source>
          <target state="translated">4.6.3</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Mono/Xamarin Platforms</source>
          <target state="translated">Plateformes Mono/Xamarin</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Universal Windows Platform</source>
          <target state="translated">Plateforme Windows universelle</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>uap</source>
          <target state="translated">uap</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>10.0</source>
          <target state="translated">10.0</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>win</source>
          <target state="translated">win</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>8.0</source>
          <target state="translated">8.0</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>8.1</source>
          <target state="translated">8.1</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Windows Phone</source>
          <target state="translated">Windows Phone</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>wpa</source>
          <target state="translated">wpa</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>8.1</source>
          <target state="translated">8.1</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Windows Phone Silverlight</source>
          <target state="translated">Windows Phone Silverlight</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>wp</source>
          <target state="translated">wp</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>8.0</source>
          <target state="translated">8.0</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A key thing to understand is that <bpt id="p1">**</bpt>a project targeting a lower version cannot reference a project targeting a higher version<ept id="p1">**</ept>.</source>
          <target state="translated">Un point clé à comprendre est qu’<bpt id="p1">**</bpt>un projet ciblant une version antérieure ne peut pas faire référence à un projet ciblant une version ultérieure<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For example, a project targeting the .NET Platform Standard version 1.2 cannot reference projects that target .NET Platform Standard version 1.3 or higher.</source>
          <target state="translated">Par exemple, un projet ciblant .NET Platform Standard version 1.2 ne peut pas faire référence à des projets qui ciblent .NET Platform Standard version 1.3 ou ultérieure.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Projects <bpt id="p1">**</bpt>can<ept id="p1">**</ept> reference lower versions, though, so a project targeting .NET Platform Standard 1.3 can reference a project targeting .NET Platform Standard 1.2 or lower.</source>
          <target state="translated">Les projets <bpt id="p1">**</bpt>peuvent<ept id="p1">**</ept> cependant faire référence à des versions antérieures : un projet ciblant .NET Platform Standard 1.3 peut donc faire référence à un projet ciblant .NET Platform Standard 1.2 ou antérieur.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>It's recommended that you pick the lowest possible .NET Standard version and use that throughout your project.</source>
          <target state="translated">Il est recommandé de choisir la version de .NET Standard la plus ancienne et de l’utiliser dans tout votre projet.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Read more in <bpt id="p1">[</bpt>.NET Platform Standard Library<ept id="p1">](../../standard/library.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Bibliothèque .NET Platform Standard<ept id="p1">](../../standard/library.md)</ept>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Key Technologies Not Yet Available on the .NET Standard or .NET Core</source>
          <target state="translated">Technologies clés non encore disponibles sur .NET Standard ou .NET Core</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You may be using some technologies available for the .NET Framework that are not currently available for .NET Core.</source>
          <target state="translated">Vous utilisez peut-être certaines technologies disponibles pour le .NET Framework qui ne sont pas actuellement disponibles pour .NET Core.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Each of the following sub-sections corresponds to one of those technologies.</source>
          <target state="translated">Chacune des sous-sections suivantes correspond à l’une de ces technologies.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Alternative options are listed if it is feasible for you to adopt them.</source>
          <target state="translated">Les options alternatives sont répertoriées s’il est possible pour vous de les adopter.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>App Domains</source>
          <target state="translated">Domaines de l'application</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>AppDomains can be used for different purposes on the .NET Framework.</source>
          <target state="translated">Les AppDomains peuvent être utilisés avec différents buts sur le .NET Framework.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For code isolation, we recommend separate processes and/or containers as an alternative.</source>
          <target state="translated">Pour l’isolation du code, nous recommandons des processus distincts et/ou des conteneurs comme alternative.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For dynamic loading of assemblies, we recommend the new  <ph id="ph1">@System.Runtime.Loader.AssemblyLoadContext</ph> class.</source>
          <target state="translated">Pour le chargement dynamique d’assemblys, nous vous recommandons de la nouvelle classe <ph id="ph1">@System.Runtime.Loader.AssemblyLoadContext</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Remoting</source>
          <target state="translated">Communication à distance</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For communication across processes, inter-process communication (IPC) mechanisms can be used as an alternative to Remoting, such as <bpt id="p1">[</bpt>Pipes<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/system.io.pipes)</ept> or <bpt id="p2">[</bpt>Memory Mapped Files<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/system.io.memorymappedfiles.memorymappedfile)</ept>.</source>
          <target state="translated">Pour la communication entre processus, les mécanismes de communication entre processus (IPC) peuvent être utilisés comme alternative à la communication à distance, comme les <bpt id="p1">[</bpt>canaux<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/system.io.pipes)</ept> ou les <bpt id="p2">[</bpt>fichiers mappés en mémoire<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/system.io.memorymappedfiles.memorymappedfile)</ept>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Across machines, you can use a network based solution as an alternative, preferably a low-overhead plain text protocol such as HTTP.</source>
          <target state="translated">Entre les machines, vous pouvez utiliser une solution réseau comme alternative, de préférence un protocole en texte brut avec une faible charge, comme HTTP.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>KestrelHttpServer<ept id="p1">](https://github.com/aspnet/KestrelHttpServer)</ept>, the web server used by ASP.NET Core, is an option here.</source>
          <target state="translated"><bpt id="p1">[</bpt>KestrelHttpServer<ept id="p1">](https://github.com/aspnet/KestrelHttpServer)</ept>, le serveur web utilisé par ASP.NET Core, est une option ici.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Remote proxy generation via <bpt id="p1">[</bpt>Castle.Core<ept id="p1">](https://github.com/castleproject/Core)</ept> is also an option to consider.</source>
          <target state="translated">La génération de proxy distant via <bpt id="p1">[</bpt>Castle.Core<ept id="p1">](https://github.com/castleproject/Core)</ept> est également une option à considérer.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Binary Serialization</source>
          <target state="translated">Sérialisation binaire</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>As an alternative to Binary Serialization, there are multiple different serialization technologies to choose.</source>
          <target state="translated">Comme alternative à la sérialisation binaire, vous pouvez choisir entre plusieurs technologies de sérialisation différentes.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You should choose one that fits your goals for formatting and footprint.</source>
          <target state="translated">Vous devez en choisir une qui correspond à vos objectifs de mise en forme et d’encombrement.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Popular choices include:</source>
          <target state="translated">Les choix les plus habituels sont :</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>JSON.NET<ept id="p1">](http://www.newtonsoft.com/json)</ept> for JSON</source>
          <target state="translated"><bpt id="p1">[</bpt>JSON.NET<ept id="p1">](http://www.newtonsoft.com/json)</ept> pour JSON</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">@System.Runtime.Serialization.DataContractSerializer</ph> for both XML and JSON</source>
          <target state="translated"><ph id="ph1">@System.Runtime.Serialization.DataContractSerializer</ph> pour XML et JSON</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">@System.Xml.Serialization.XmlSerializer</ph> for XML</source>
          <target state="translated"><ph id="ph1">@System.Xml.Serialization.XmlSerializer</ph> pour XML</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>protobuf-net<ept id="p1">](https://github.com/mgravell/protobuf-net)</ept> for Protocol Buffers</source>
          <target state="translated"><bpt id="p1">[</bpt>protobuf-net<ept id="p1">](https://github.com/mgravell/protobuf-net)</ept> pour les mémoires tampons des protocoles</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Refer to the linked resources to learn about their benefits and choose the ones for your needs.</source>
          <target state="translated">Reportez-vous aux ressources liées pour en savoir plus sur leurs avantages et choisir celles convenant à vos besoins.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>There are many other serialization formats and technologies out there, many of which are open source.</source>
          <target state="translated">Il existe de nombreux autres formats et technologies de sérialisation, dont bon nombre sont en open source.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Sandboxes</source>
          <target state="translated">Bacs à sable</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>As an alternative to Sandboxing, you can use operating system provided security boundaries, such as user accounts for running processes with the least set of privileges.</source>
          <target state="translated">Comme alternative à l’utilisation d’un bac à sable, vous pouvez utiliser des limites de sécurité fournies par le système d’exploitation, comme les comptes d’utilisateur pour exécuter des processus avec l’ensemble minimal de privilèges.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Overview of <ph id="ph1">`project.json`</ph></source>
          <target state="translated">Vue d’ensemble de <ph id="ph1">`project.json`</ph></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>project.json project model<ept id="p1">](../tools/project-json.md)</ept> is a project model that ships with .NET Core SDK 1.0 Preview 2.</source>
          <target state="translated">Le <bpt id="p1">[</bpt>modèle de projet project.json<ept id="p1">](../tools/project-json.md)</ept> est un modèle de projet fourni avec .NET Core SDK 1.0 Preview 2.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>It offers some benefits you may wish to take advantage of today:</source>
          <target state="translated">Il offre certains avantages dont vous pouvez tirer parti aujourd’hui :</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Simple multitargeting where target-specific assemblies can be generated from a single build.</source>
          <target state="translated">Multiciblage simple où les assemblys spécifiques à une cible peuvent être générés à partir d’une même build.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The ability to easily generate a NuGet package with a build of the project.</source>
          <target state="translated">Possibilité de générer facilement un package NuGet avec une build du projet.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>No need to list files in your project file.</source>
          <target state="translated">Il n’est pas nécessaire de répertorier les fichiers de votre fichier projet.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Unification of NuGet package dependencies and project-to-project dependencies.</source>
          <target state="translated">Unification des dépendances de package NuGet et dépendances de projet à projet.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>While <ph id="ph1">`project.json`</ph> is eventually going to be deprecated, it can be used to build libraries on the .NET Standard today.</source>
          <target state="translated">Alors que <ph id="ph1">`project.json`</ph> sera finalement bientôt déconseillé, il peut être utilisé aujourd’hui pour générer des bibliothèques sur .NET Standard.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The Project File: <ph id="ph1">`project.json`</ph></source>
          <target state="translated">Le fichier de projet : <ph id="ph1">`project.json`</ph></target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>.NET Core projects are defined by a directory containing a <ph id="ph1">`project.json`</ph> file.</source>
          <target state="translated">Les projets .NET Core sont définis par un répertoire contenant un fichier <ph id="ph1">`project.json`</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This file is where aspects of the project are declared, such as package dependencies, compiler configuration, runtime configuration, and more.</source>
          <target state="translated">Ce fichier est l’endroit où les aspects du projet sont déclarées, comme les dépendances du package, la configuration du compilateur, la configuration du runtime, etc.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet restore`</ph> command reads this project file, restores all dependencies of the project, and generates a <ph id="ph2">`project.lock.json`</ph> file.</source>
          <target state="translated">La commande <ph id="ph1">`dotnet restore`</ph>lit ce fichier de projet, restaure toutes les dépendances du projet et génère un fichier <ph id="ph2">`project.lock.json`</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This file contains all the necessary information the build system needs to build the project.</source>
          <target state="translated">Ce fichier contient toutes les informations nécessaires dont a besoin le système de génération pour générer le projet.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>To learn more about the <ph id="ph1">`project.json`</ph> file, read the <bpt id="p1">[</bpt>project.json reference<ept id="p1">](../tools/project-json.md)</ept>.</source>
          <target state="translated">Pour en savoir plus sur le fichier <ph id="ph1">`project.json`</ph>, lisez les <bpt id="p1">[</bpt>informations de référence sur project.json<ept id="p1">](../tools/project-json.md)</ept>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The Solution File: <ph id="ph1">`global.json`</ph></source>
          <target state="translated">Le fichier de solution : <ph id="ph1">`global.json`</ph></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`global.json`</ph> file is an optional file to include in a solution which contains multiple projects.</source>
          <target state="translated">Le fichier <ph id="ph1">`global.json`</ph> est un fichier facultatif à inclure dans une solution qui contient plusieurs projets.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>It typically resides in the root directory of a set of projects.</source>
          <target state="translated">Il se trouve généralement dans le répertoire racine d’un ensemble de projets.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>It can be used to inform the build system of different subdirectories which can contain projects.</source>
          <target state="translated">Il peut être utilisé pour informer le système de génération des différents sous-répertoires qui peuvent contenir des projets.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This is for larger systems composed of several projects.</source>
          <target state="translated">Ceci est destiné aux systèmes de grande taille composés de plusieurs projets.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>For example, you can organize your code into top-level <ph id="ph1">`/src`</ph> and <ph id="ph2">`/test`</ph> folder as such:</source>
          <target state="translated">Par exemple, vous pouvez organiser votre code dans le dossier de plus haut niveau <ph id="ph1">`/src`</ph> et <ph id="ph2">`/test`</ph> comme ceci :</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>You can then have multiple <ph id="ph1">`project.json`</ph> files under their own sub-folders inside <ph id="ph2">`/src`</ph> and <ph id="ph3">`/test`</ph>.</source>
          <target state="translated">Vous pouvez ensuite avoir plusieurs fichiers <ph id="ph1">`project.json`</ph> sous leurs propres sous-dossiers dans <ph id="ph2">`/src`</ph> et <ph id="ph3">`/test`</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>How to Multitarget with <ph id="ph1">`project.json`</ph></source>
          <target state="translated">Comment réaliser un multiciblage avec <ph id="ph1">`project.json`</ph></target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Many libraries multitarget to have as wide of a reach as possible.</source>
          <target state="translated">De nombreuses bibliothèques intègrent le multiciblage de façon à avoir une portée aussi étendue que possible.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>With .NET Core, multitargeting is a "first class citizen", meaning that you can easily generate platform-specific assemblies with a single build.</source>
          <target state="translated">Avec .NET Core, le multiciblage est un « citoyen de première classe », ce qui signifie que vous pouvez facilement générer des assemblys spécifiques à une plateforme avec une même build.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Multitargeting is as simple as adding the correct Target Framework Moniker (TFM) to your <ph id="ph1">`project.json`</ph> file, using the correct dependencies for each target (<ph id="ph2">`dependencies`</ph> for .NET Core and <ph id="ph3">`frameworkAssemblies`</ph> for .NET Framework), and potentially using <ph id="ph4">`#if`</ph> directives to conditionally compile the source code for platform-specific API usage.</source>
          <target state="translated">Le multiciblage consiste simplement à ajouter le moniker du Framework cible à votre fichier <ph id="ph1">`project.json`</ph>, à utiliser les dépendances appropriées pour chaque cible (<ph id="ph2">`dependencies`</ph> pour .NET Core et <ph id="ph3">`frameworkAssemblies`</ph> pour le .NET Framework) et éventuellement à utiliser des directives <ph id="ph4">`#if`</ph> de compilation conditionnelle du code source pour une utilisation de l’API spécifique à la plateforme.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For example, imagine you are building a library where you wanted to perform some network operations, and you wanted that library to run on all .NET Framework versions, a Portable Class Library (PCL) Profile, and .NET Core.</source>
          <target state="translated">Par exemple, imaginez que vous créez une bibliothèque où vous voulez réaliser des opérations réseau, et que vous voulez que la bibliothèque s’exécute sur toutes les versions du .NET Framework, sur un profil de bibliothèque de classes portable et sur .NET Core.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For .NET Core and .NET Framework 4.5+ targets, you may use <ph id="ph1">`System.Net.Http`</ph> library and <ph id="ph2">`async`</ph><ph id="ph3">/</ph><ph id="ph4">`await`</ph>.</source>
          <target state="translated">Pour les cibles .NET Core et .NET Framework 4.5+, vous pouvez utiliser la bibliothèque <ph id="ph1">`System.Net.Http`</ph> et <ph id="ph2">`async`</ph><ph id="ph3">/</ph><ph id="ph4">`await`</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>However, for earlier versions of .NET Framework, those APIs aren't available.</source>
          <target state="translated">Cependant, pour les versions antérieures du .NET Framework, ces API ne sont pas disponibles.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Here's a sample <ph id="ph1">`frameworks`</ph> section for a <ph id="ph2">`project.json`</ph> that targets the .NET Framework versions 2.0, 3.5, 4.0, 4.5, and .NET Standard 1.6:</source>
          <target state="translated">Voici un exemple de section <ph id="ph1">`frameworks`</ph> pour un fichier <ph id="ph2">`project.json`</ph> qui cible le .NET Framework versions 2.0, 3.5, 4.0, 4.5 et .NET Standard 1.6 :</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Note that PCL targets are special: they require you to specify a build definition for the compiler to recognize, and they require you to specify all of the assemblies you use, including <ph id="ph1">`mscorlib`</ph>.</source>
          <target state="translated">Notez que les cibles de la bibliothèque de classes portable sont spéciales : elles nécessitent la spécification d’une définition de build que le compilateur doit reconnaître, ainsi que de tous les assemblys que vous utilisez, notamment <ph id="ph1">`mscorlib`</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Your source code could then use the dependencies like this:</source>
          <target state="translated">Votre code source peut alors utiliser les dépendances comme suit :</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Note that all of the .NET Framework and .NET Standard targets have names recognized by the compiler:</source>
          <target state="translated">Notez que toutes les cibles .NET Framework et .NET Standard ont des noms reconnus par le compilateur :</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>As mentioned above, if you are targeting a PCL, then you will have to specify a build definition for the compiler to understand.</source>
          <target state="translated">Comme mentionné ci-dessus, si vous ciblez une bibliothèque de classes portable, vous devez spécifier une définition de build que le compilateur doit comprendre.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>There is no default definition that the compiler can use.</source>
          <target state="translated">Il n’existe pas définition par défaut que le compilateur peut utiliser.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph1">`project.json`</ph> in Visual Studio</source>
          <target state="translated">Utilisation de <ph id="ph1">`project.json`</ph> dans Visual Studio</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>You have two options for using <ph id="ph1">`project.json`</ph> in Visual Studio:</source>
          <target state="translated">Vous avez deux options pour utiliser <ph id="ph1">`project.json`</ph> dans Visual Studio :</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A new xproj project type.</source>
          <target state="translated">Un nouveau type de projet xproj.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A retargeted PCL project which supports .NET Standard.</source>
          <target state="translated">Un projet de bibliothèque de classes portable reciblé qui prend en charge .NET Standard.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>There are different benefits and drawbacks for each.</source>
          <target state="translated">Il y a différents avantages et inconvénients pour chacune de ces options.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>When to Pick an Xproj Project</source>
          <target state="translated">Quand choisir un projet Xproj</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The new Xproj project system in Visual Studio utilizes the capabilities of the <ph id="ph1">`project.json`</ph>-based project model to offer two major features over existing project types: seamless multitargeting by building multiple assemblies and the ability to directly generate a NuGet package on build.</source>
          <target state="translated">Le nouveau système de projet Xproj dans Visual Studio utilise les fonctionnalités du modèle de projet basé sur <ph id="ph1">`project.json`</ph> pour offrir deux fonctionnalités majeures sur les types de projets existants : le multiciblage intégré via la génération de plusieurs assemblys et la possibilité de générer directement un package NuGet sur la build.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>However, it comes at the cost of lacking certain features you may use, such as:</source>
          <target state="translated">Il présente cependant l’inconvénient de ne pas avoir certaines fonctionnalités que vous pourriez utiliser, comme :</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Support for F# or Visual Basic</source>
          <target state="translated">Prise en charge de F# ou de Visual Basic</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Generating satellite assemblies with localized resource strings</source>
          <target state="translated">Génération d’assemblys satellites avec des chaînes de ressources localisées</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Directly referencing a <ph id="ph1">`.dll`</ph> file on the filesystem</source>
          <target state="translated">Référencement direct d’un fichier <ph id="ph1">`.dll`</ph> sur le système de fichiers</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The ability to reference a csproj-based project in the Reference Manager (depending on the <ph id="ph1">`.dll`</ph> file directly is supported, though)</source>
          <target state="translated">La possibilité de faire référence à un projet csproj dans le gestionnaire de références (la dépendance directe d’un fichier <ph id="ph1">`.dll`</ph> est cependant prise en charge)</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>If your project needs are relatively minimal and you can take advantage of the new features of xproj, you should pick it as your project system.</source>
          <target state="translated">Si les besoins de votre projet sont relativement réduites et que vous pouvez tirer parti des nouvelles fonctionnalités de xproj, vous devez le sélectionner comme système de projet.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>This can be done in Visual Studio as such:</source>
          <target state="translated">Ceci peut être fait dans Visual Studio comme ceci :</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Ensure you are using Visual Studio 2015 or later.</source>
          <target state="translated">Vérifiez que vous utilisez Visual Studio 2015 ou ultérieur.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Select File | New Project.</source>
          <target state="translated">Sélectionnez Fichier | Nouveau projet.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Select ".NET Core" under Visual C#.</source>
          <target state="translated">Sélectionnez « .NET Core » sous Visual C#.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Select the "Class Library (.NET Core)" template.</source>
          <target state="translated">Sélectionnez le modèle « Bibliothèque de classes (.NET Core) ».</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>When to Pick a PCL project</source>
          <target state="translated">Quand choisir un projet de bibliothèque de classes portable</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>You can target .NET Core with the traditional project system in Visual Studio, by creating a Portable Class Library (PCL) and selecting ".NET Core" in the project configuration dialog.</source>
          <target state="translated">Vous pouvez cibler .NET Core avec le système de projet traditionnel dans Visual Studio en créant une bibliothèque de classes portable et en sélectionnant « .NET Core » dans la boîte de dialogue de configuration du projet.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Then you'll need to retarget the project to be based on the .NET Standard:</source>
          <target state="translated">Vous devez ensuite recibler le projet pour qu’il soit basé sur .NET Standard :</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Right-click on the project file in Visual Studio and select Properties.</source>
          <target state="translated">Cliquez avec le bouton droit sur le fichier projet dans Visual Studio et sélectionnez Propriétés.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Under Build, select "Convert to .NET Standard".</source>
          <target state="translated">Sous Build, sélectionnez « Convertir vers .NET Standard ».</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>If you have more advanced project system needs, this should be your choice.</source>
          <target state="translated">Si vous avez des besoins plus avancés en système de projet, ceci doit être votre choix.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Note that if you wish to multitarget by generating platform-specific assemblies like with the <ph id="ph1">`xproj`</ph> project system, you'll need to create a "Bait and Switch" PCL, as described in <bpt id="p1">[</bpt>How to Make Portable Class Libraries Work for You<ept id="p1">](https://blogs.msdn.microsoft.com/dsplaisted/2012/08/27/how-to-make-portable-class-libraries-work-for-you/)</ept>.</source>
          <target state="translated">Notez que si vous voulez multicibler en générant des assemblys spécifiques aux plateformes, par exemple avec le système de projet <ph id="ph1">`xproj`</ph>, vous devez créer une bibliothèque de classes portable qui soit une forme de « leurre », comme décrit dans <bpt id="p1">[</bpt>How to Make Portable Class Libraries Work for You<ept id="p1">](https://blogs.msdn.microsoft.com/dsplaisted/2012/08/27/how-to-make-portable-class-libraries-work-for-you/)</ept>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Retargeting your .NET Framework Code to .NET Framework 4.6.2</source>
          <target state="translated">Reciblage de votre code .NET Framework vers le .NET Framework 4.6.2</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>If your code is not targeting .NET Framework 4.6.2, it's recommended that you retarget.</source>
          <target state="translated">Si votre code ne cible pas le .NET Framework 4.6.2, il est recommandé de recibler.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>This ensures that you can use the latest API alternatives for cases where the .NET Standard can't support existing APIs.</source>
          <target state="translated">Ceci garantit que vous pouvez utiliser les API alternatives les plus récentes pour les cas où .NET Standard ne peut pas prendre en charge les API existantes.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>For each of your projects in Visual Studio you wish to port, do the following:</source>
          <target state="translated">Pour chacun de vos projets dans Visual Studio que vous voulez porter, procédez comme suit :</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Right-click on the project and select Properties</source>
          <target state="translated">Cliquez avec le bouton droit sur le projet et sélectionnez Propriétés.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>In the "Target Framework" dropdown, select ".NET Framework 4.6.2".</source>
          <target state="translated">Dans la liste déroulante Framework cible, sélectionnez « .NET Framework 4.6.2 ».</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Recompile your projects.</source>
          <target state="translated">Recompilez vos projets.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>And that's it!</source>
          <target state="translated">Et voilà !</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Because your projects now target .NET Framework 4.6.2, you can use that version of .NET Framework as your base for porting code.</source>
          <target state="translated">Comme vos projets ciblent maintenant le .NET Framework 4.6.2, vous pouvez utiliser cette version du .NET Framework comme base pour le portage du code.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Determining the Portability of Your Code</source>
          <target state="translated">Détermination de la portabilité de votre code</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The next step is to run the API Portability Analyzer (ApiPort) to generate a portability report that you can begin to analyze.</source>
          <target state="translated">L’étape suivante consiste à exécuter l’outil API Portability Analyzer (ApiPort) pour générer un rapport de portabilité que vous pouvez commencer à analyser.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>You'll need to make sure you understand the <bpt id="p1">[</bpt>API Portability tool (ApiPort)<ept id="p1">](https://github.com/Microsoft/dotnet-apiport/blob/master/docs/HowTo/)</ept> and can generate portability reports for targeting .NET Core.</source>
          <target state="translated">Vérifiez que vous comprenez bien l’<bpt id="p1">[</bpt>outil API Portability (ApiPort)<ept id="p1">](https://github.com/Microsoft/dotnet-apiport/blob/master/docs/HowTo/)</ept> et que vous pouvez générer des rapports de portabilité pour le ciblage de .NET Core.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>How you do this will likely vary based on your needs and personal tastes.</source>
          <target state="translated">La façon dont faites cela va probablement varier selon vos besoins et vos préférences personnelles.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>What follows are a few different approaches - you may find yourself mixing each approach depending on how your code is structured.</source>
          <target state="translated">Voici quelques approches différentes : vous pouvez les mélanger en fonction de la structure de votre code.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Dealing Primarily with the Compiler</source>
          <target state="translated">Approche centrée sur le compilateur</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>This approach may be the best for small projects or projects which don't use many .NET Framework APIs.</source>
          <target state="translated">Cette approche peut être la meilleure pour les petits projets ou les projets qui n’utilisent pas beaucoup d’API du .NET Framework.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The approach is very simple:</source>
          <target state="translated">Elle est très simple :</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Optionally run ApiPort on your project.</source>
          <target state="translated">Exécutez éventuellement ApiPort sur votre projet.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>If ApiPort was ran, take a quick glance at the report.</source>
          <target state="translated">Si ApiPort a été exécuté, regardez rapidement le rapport.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Copy all of your code over into a new .NET Core project.</source>
          <target state="translated">Recopiez tout votre code dans un nouveau projet .NET Core.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Work out compiler errors until it compiles, referring to the portability report if needed.</source>
          <target state="translated">Résolvez les erreurs du compilateur jusqu’à ce qu’il compile, en vous référant au rapport de portabilité si nécessaire.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Repeat as needed.</source>
          <target state="translated">Répétez autant de fois que nécessaire.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Although this approach is very unstructured, the code-focused approach can lead to resolving any issues quickly, and may be the best approach for smaller projects or libraries.</source>
          <target state="translated">Bien que cette approche soit très structurée, l’approche centrée sur le code peut permettre de résoudre les problèmes rapidement et peut être la meilleure approche pour les projets ou les bibliothèques de petite taille.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>A project that contains only data models may be an ideal candidate here.</source>
          <target state="translated">Un projet qui contient seulement des modèles de données peut être ici un candidat idéal.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Staying on the .NET Framework until Portability Issues are Resolved</source>
          <target state="translated">Rester sur le .NET Framework jusqu’à la résolution des problèmes de portabilité</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>This approach may be the best if you prefer to have code that compiles during the entire process.</source>
          <target state="translated">Cette approche peut être la meilleure si vous préférez avoir du code compilé pendant tout le processus.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The approach is as follows:</source>
          <target state="translated">L’approche est la suivante :</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Run ApiPort on a project.</source>
          <target state="translated">Exécutez ApiPort sur un projet.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Address issues by using different APIs which are portable.</source>
          <target state="translated">Résolvez les problèmes en utilisant des API différentes qui sont portables.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Keep note of any areas where you can't use a direct alternative.</source>
          <target state="translated">Prenez note de tous les endroits où vous ne pouvez pas utiliser une alternative directe.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Repeat steps 1-3 for all projects you're porting until you're confident each is ready to be copied over into a .NET Core project.</source>
          <target state="translated">Répétez les étapes 1 à 3 pour tous les projets que vous portez jusqu’à ce que vous soyez certain que chacun est prêt à être copié dans un projet .NET Core.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Copy the code into a new .NET Core projects.</source>
          <target state="translated">Copiez le code dans un nouveau projet .NET Core.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Work out any issues that you've kept note of.</source>
          <target state="translated">Résolvez les problèmes que vous avez notés.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>This careful approach is more structured than simply working out compiler errors, but it is still relatively code-focused and has the benefit of always having code that can compile.</source>
          <target state="translated">Cette approche prudente est plus structurée que simplement solutionner les erreurs de compilation, mais elle est encore relativement centrée sur le code et a comme avantage que le code peut toujours être compilé.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The way you resolve certain issues that couldn't be addressed by just using another API can vary greatly.</source>
          <target state="translated">La façon dont vous résolvez certains problèmes qui n’ont pas pu être traités en utilisant une autre API peut varier considérablement.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>You may find that you need to develop a more comprehensive plan for certain projects, which is covered as the next approach.</source>
          <target state="translated">Il peut être nécessaire de développer un plan plus complet pour certains projets, ce qui est couvert par l’approche suivante.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Developing a Comprehensive Plan of Attack</source>
          <target state="translated">Développement d’un plan d’attaque complet</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>This approach may be best for larger and more complex projects, where restructuring of code or rewriting certain areas may be necessary to support .NET Core.</source>
          <target state="translated">Cette approche peut être la meilleure pour les projets plus grands et plus complexes, où la restructuration du code ou la réécriture de certains éléments peut être nécessaire pour prendre en charge .NET Core.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The approach is as follows:</source>
          <target state="translated">L’approche est la suivante :</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Run ApiPort on a project.</source>
          <target state="translated">Exécutez ApiPort sur un projet.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Understand where in your code each non-portable type is being used and how that affects overall portability.</source>
          <target state="translated">Déterminez les endroits dans votre code où chaque type non portable est utilisé et comment cela affecte la portabilité globale.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>a.</source>
          <target state="translated">a.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Understand the nature of those types.</source>
          <target state="translated">Déterminez la nature de ces types.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Are they small in number, but used frequently?</source>
          <target state="translated">Sont-ils peu nombreux mais fréquemment utilisés ?</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Are they large in number, but used infrequently?</source>
          <target state="translated">Sont-ils nombreux mais peu fréquemment utilisés ?</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Is their use concentrated, or is it spread throughout your code?</source>
          <target state="translated">Leur utilisation est-elle concentrée ou est-elle répartie à travers tout le code ?</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>b.</source>
          <target state="translated">b.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Is it easy to isolate code that isn't portable so you can deal with it more easily?</source>
          <target state="translated">Est-il facile d’isoler le code qui n’est pas portable ? Si oui, vous pouvez donc le traiter plus facilement.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>c.</source>
          <target state="translated">c.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Would you need to refactor your code?</source>
          <target state="translated">Devez-vous refactoriser votre code ?</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>d.</source>
          <target state="translated">d.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>For those types which aren't portable, are there alternative APIs that accomplish the same task?</source>
          <target state="translated">Pour les types qui ne sont pas portables, y a-t-il des API alternatives qui accomplissent la même tâche ?</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>For example, if you're using the <ph id="ph1">`WebClient`</ph> class, you may be able to use the <ph id="ph2">`HttpClient`</ph> class instead.</source>
          <target state="translated">Par exemple, si vous utilisez la classe <ph id="ph1">`WebClient`</ph>, vous pouvez peut-être utiliser la classe <ph id="ph2">`HttpClient`</ph> à la place.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>e.</source>
          <target state="translated">e.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Are there different portable APIs you can use to accomplish a task, even if it's not a drop-in replacement?</source>
          <target state="translated">Existe-t-il des API portables différentes que vous pouvez utiliser pour accomplir une tâche, même si ce n’est pas un remplacement immédiat à opérer ?</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>For example, if you're using <ph id="ph1">`XmlSchema`</ph> to help parse XML, but you don't require XML schema discovery, you could use <ph id="ph2">`System.Linq.Xml`</ph> APIs and hand-parse the data.</source>
          <target state="translated">Par exemple, si vous utilisez <ph id="ph1">`XmlSchema`</ph> pour analyser du code XML, mais vous n’avez pas besoin de la découverte du schéma XML, vous pouvez utiliser <ph id="ph2">`System.Linq.Xml`</ph> et analyser vous-même les données.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>If you have assemblies that are difficult to port, is it worth leaving them on .NET Framework for now?</source>
          <target state="translated">Si vous avez des assemblys difficiles à porter, est-il intéressant de les laisser sur le .NET Framework pour l’instant ?</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Here are some things to consider:</source>
          <target state="translated">Voici quelques éléments à prendre en compte :</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>a.</source>
          <target state="translated">a.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>You may have some functionality in your library that's incompatible with .NET Core because it relies too heavily on .NET Framework- or Windows-specific functionality.</source>
          <target state="translated">Vous pouvez avoir des fonctionnalités dans votre bibliothèque qui ne sont pas compatibles avec .NET Core car elles s’appuient de façon trop importante sur des fonctionnalités spécifiques au .NET Framework ou à Windows.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Is it worth leaving that functionality behind for now and releasing a .NET Core version of your library with less features for the time being?</source>
          <target state="translated">Est-il intéressant de laisser cette fonctionnalité de côté pour l’instant et de publier une version .NET Core de votre bibliothèque avec moins de fonctionnalités pour le moment ?</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>b.</source>
          <target state="translated">b.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Would a refactor help here?</source>
          <target state="translated">Une refactorisation serait-elle utile ici ?</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Is it reasonable to write your own implementation of an unavailable .NET Framework API?</source>
          <target state="translated">Est-il raisonnable d’écrire votre propre implémentation d’une API .NET Framework non disponible ?</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>You could consider instead copying, modifying, and using code from the <bpt id="p1">[</bpt>.NET Framework Reference Source<ept id="p1">](https://github.com/Microsoft/referencesource)</ept>.</source>
          <target state="translated">Vous pouvez envisager à la place de copier, de modifier et d’utiliser du code provenant de la <bpt id="p1">[</bpt>source de référence du .NET Framework<ept id="p1">](https://github.com/Microsoft/referencesource)</ept>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>It's licensed under the <bpt id="p1">[</bpt>MIT License<ept id="p1">](https://github.com/Microsoft/referencesource/blob/master/LICENSE.txt)</ept>, so you have significant freedom in doing this.</source>
          <target state="translated">Il est concédé sous licence <bpt id="p1">[</bpt>MIT<ept id="p1">](https://github.com/Microsoft/referencesource/blob/master/LICENSE.txt)</ept>, de sorte que vous disposez d’une liberté significative pour faire cela.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Just be sure to properly attribute Microsoft in your code!</source>
          <target state="translated">Veillez simplement à mentionner correctement ce qui est propriété de Microsoft dans votre code !</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Repeat this process as needed for different projects.</source>
          <target state="translated">Répétez ce processus si nécessaire pour les différents projets.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Once you have a plan, execute that plan.</source>
          <target state="translated">Une fois que vous avez un plan, exécutez-le.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The analysis phase could take some time depending on how large your codebase is.</source>
          <target state="translated">La phase d’analyse peut prendre un certain temps, selon la taille de votre code base.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Spending time in this phase to thoroughly understand the scope of changes needed and to develop a plan can save you a lot of time in the long run, particularly if you have a more complex codebase.</source>
          <target state="translated">Passer du temps sur cette phase pour déterminer précisément l’étendue des modifications nécessaires et pour développer un plan peut vous économiser beaucoup de temps sur le long terme, en particulier si vous avez un code base plus complexe.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Your plan could involve making significant changes to your codebase while still targeting .NET Framework 4.6.2, making this a more structured version of the previous approach.</source>
          <target state="translated">Votre plan peut impliquer des modifications importantes à votre code base tout en continuant à cibler le .NET Framework 4.6.2, ce qui fait de ceci une version plus structurée de l’approche précédente.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>How you go about executing your plan will be dependent on your codebase.</source>
          <target state="translated">La façon dont vous allez exécuter votre plan dépend de votre code base.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Mixing Approaches</source>
          <target state="translated">Combinaison des approches</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>It's likely that you'll mix the above approaches on a per-project basis.</source>
          <target state="translated">Il est probable que vous allez combiner les approches ci-dessus de façon différente selon les projets.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>You should do what makes the most sense to you and for your codebase.</source>
          <target state="translated">Vous devez faire ce qui a le plus de sens pour vous et pour votre code base.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Porting your Tests</source>
          <target state="translated">Portage de vos tests</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The best way to make sure everything works when you've ported your code is to test your code as you port it to .NET Core.</source>
          <target state="translated">La meilleure façon de vérifier que tout fonctionne quand vous avez porté votre code est de tester votre code quand vous l’avez porté sur .NET Core.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>To do this, you'll need to use a testing framework that will build and run tests for .NET Core.</source>
          <target state="translated">Pour cela, vous devez utiliser un framework de test qui crée et exécute des tests pour .NET Core.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Currently, you have three options:</source>
          <target state="translated">Vous avez actuellement trois options :</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>xUnit<ept id="p1">](https://xunit.github.io/)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>xUnit<ept id="p1">](https://xunit.github.io/)</ept></target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Getting Started<ept id="p1">](http://xunit.github.io/docs/getting-started-dnx.html)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Prise en main<ept id="p1">](http://xunit.github.io/docs/getting-started-dnx.html)</ept></target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Tool to convert an MSTest project to xUnit<ept id="p1">](https://github.com/dotnet/codeformatter/tree/master/src/XUnitConverter)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Outil pour convertir un projet MSTest en xUnit<ept id="p1">](https://github.com/dotnet/codeformatter/tree/master/src/XUnitConverter)</ept></target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>NUnit<ept id="p1">](http://www.nunit.org/)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>NUnit<ept id="p1">](http://www.nunit.org/)</ept></target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Getting Started<ept id="p1">](https://github.com/nunit/docs/wiki/Installation)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Prise en main<ept id="p1">](https://github.com/nunit/docs/wiki/Installation)</ept></target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Blog post about migrating from MSTest to NUnit<ept id="p1">](http://www.florian-rappl.de/News/Page/275/convert-mstest-to-nunit)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Billet de blog sur la migration de MSTest vers NUnit<ept id="p1">](http://www.florian-rappl.de/News/Page/275/convert-mstest-to-nunit)</ept></target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>MSTest<ept id="p1">](https://msdn.microsoft.com/library/ms243147.aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>MSTest<ept id="p1">](https://msdn.microsoft.com/library/ms243147.aspx)</ept></target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Recommended Approach to Porting</source>
          <target state="translated">Approche recommandée pour le portage</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Finally, porting the code itself!</source>
          <target state="translated">Enfin, le portage du code lui-même !</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Ultimately, the actual porting effort will depend heavily on how your .NET Framework code is structured.</source>
          <target state="translated">Au final, le travail de portage réel dépend fortement la structure de votre code .NET Framework.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>That being said, here is a recommended approach which may work well with your codebase.</source>
          <target state="translated">Ceci dit, voici une approche recommandée qui peut bien fonctionner avec votre code base.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>A good way to port your code is to begin with the "base" of your library.</source>
          <target state="translated">Une bonne façon de porter votre code est de commencer par la « base » de votre bibliothèque.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>This may be data models or some other foundational classes and methods that everything else uses directly or indirectly.</source>
          <target state="translated">Il peut s’agir des modèles de données ou bien d’autres classes et méthodes fondamentales utilisées directement ou indirectement par tout le reste.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Port the test project which tests the layer of your library that you're currently porting.</source>
          <target state="translated">Portez le projet de test qui teste la couche de votre bibliothèque que vous portez actuellement.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Copy over the "base" of your library into a new .NET Core project and select the version of the .NET Standard you wish to support.</source>
          <target state="translated">Copiez la « base » de votre bibliothèque dans un nouveau projet .NET Core et sélectionnez la version de .NET Standard que vous voulez prendre en charge.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Make any changes needed to get the code to compile.</source>
          <target state="translated">Apportez les modifications nécessaires pour obtenir le code à compiler.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Much of this may require adding NuGet package dependencies to your <ph id="ph1">`project.json`</ph> file.</source>
          <target state="translated">La plupart de ces modifications peuvent nécessiter l’ajout de dépendances de package NuGet à votre fichier <ph id="ph1">`project.json`</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Run tests and make any needed adjustments.</source>
          <target state="translated">Exécutez les tests et procédez aux ajustements nécessaires.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Pick the next layer of code to port over and repeat steps 2 and 3!</source>
          <target state="translated">Sélectionnez la couche de code suivante à porter et répétez les étapes 2 et 3.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>If you methodically move outward from the base of your library and test each layer as needed, porting will be a systematic process where problems are isolated to one layer of code at a time.</source>
          <target state="translated">Si vous vous déplacez méthodiquement vers l’extérieur depuis la base de votre bibliothèque et que vous testez chaque couche selon ce qui est nécessaire, le portage devient un processus systématique où les problèmes sont isolés dans une seule couche de code à la fois.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>