<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f0362aa" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cef45d986eb9c4a84a03ee942c29a327c23cabf3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\preview3\tools\dependencies.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44e819cc8e6c8f456b5d49afcbc312aeb0996e5a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19c02b54e780dce912e321d93502f5fe1c1899a8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Managing dependencies in .NET Core tooling | Microsoft Docs</source>
          <target state="translated">Gestione delle dipendenze negli strumenti di .NET Core | Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Explains how to manage your dependencies with the .NET Core tools.</source>
          <target state="translated">Viene illustrato come gestire le dipendenze con gli strumenti di .NET Core.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>CLI, extensibility, custom commands, .NET Core</source>
          <target state="translated">interfaccia della riga di comando, estendibilità, comandi personalizzati, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Managing dependencies in .NET Core RC4 tooling</source>
          <target state="translated">Gestione delle dipendenze negli strumenti di .NET Core RC4</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>With the move of .NET Core projects from project.json to csproj and MSBuild, a significant investment also happened that resulted in unification of the project file and assets that allow tracking of depenencies.</source>
          <target state="translated">Con il passaggio dei progetti .NET Core da project.json a csproj e MSBuild, è stato eseguito un investimento significativo che ha comportato l'unificazione del file di progetto e degli asset che consentono il monitoraggio delle dipendenze.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For .NET Core projects this is similar to what project.json did.</source>
          <target state="translated">Per i progetti .NET Core si tratta di un comportamento simile a quello di project.json.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>There is no separate JSON or XML file that tracks NuGet dependencies.</source>
          <target state="translated">Non esiste alcun file JSON o XML separato che tiene traccia delle dipendenze NuGet.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>With this change, we've also introduced another type of <bpt id="p1">*</bpt>reference<ept id="p1">*</ept> into the csproj syntax called the <ph id="ph1">`&lt;PackageReference&gt;`</ph>.</source>
          <target state="translated">Con questa modifica, è stato anche introdotto un altro tipo di <bpt id="p1">*</bpt>riferimento<ept id="p1">*</ept> nella sintassi csproj denominato <ph id="ph1">`&lt;PackageReference&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This document describes the new reference type.</source>
          <target state="translated">Questo documento descrive il nuovo tipo di riferimento.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It also shows how to add a package dependency using this new reference type to your project.</source>
          <target state="translated">Illustra anche come aggiungere al progetto una dipendenza del pacchetto usando questo nuovo tipo di riferimento.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">&lt;PackageReference&gt;</ph> element</source>
          <target state="translated">Nuovo elemento <ph id="ph1">&lt;PackageReference&gt;</ph></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;PackageReference&gt;`</ph> has the following basic structure:</source>
          <target state="translated">L'elemento <ph id="ph1">`&lt;PackageReference&gt;`</ph> ha la struttura di base seguente:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you are familiar with MSBuild, it will look familiar to the other reference types that already exist.</source>
          <target state="translated">Se si ha familiarità con MSBuild, il nuovo elemento risulterà analogo agli altri tipi di riferimento già esistenti.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The key is the <ph id="ph1">`Include`</ph> statement which specifies the package id that you wish to add to the project.</source>
          <target state="translated">La chiave è l'istruzione <ph id="ph1">`Include`</ph> che specifica l'ID del pacchetto da aggiungere al progetto.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;Version&gt;`</ph> child element specifies the version to get.</source>
          <target state="translated">L'elemento figlio <ph id="ph1">`&lt;Version&gt;`</ph> specifica la versione da ottenere.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The versions are specified as per <bpt id="p1">[</bpt>NuGet version rules<ept id="p1">](https://docs.microsoft.com/nuget/create-packages/dependency-versions#version-ranges)</ept>.</source>
          <target state="translated">Le versioni vengono specificate in base alle <bpt id="p1">[</bpt>regole della versione di NuGet<ept id="p1">](https://docs.microsoft.com/nuget/create-packages/dependency-versions#version-ranges)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you are not familiar with the overall <ph id="ph1">`csproj`</ph> syntax, see the <bpt id="p1">[</bpt>MSBuild project reference<ept id="p1">](https://docs.microsoft.com/visualstudio/msbuild/msbuild-project-file-schema-reference)</ept> documentation for more information.</source>
          <target state="translated">Se non si ha familiarità con la sintassi <ph id="ph1">`csproj`</ph>, vedere la <bpt id="p1">[</bpt>documentazione di riferimento del progetto MSBuild<ept id="p1">](https://docs.microsoft.com/visualstudio/msbuild/msbuild-project-file-schema-reference)</ept> per altre informazioni.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Adding a dependency that is available only in a specific target is done using conditions like in the following example:</source>
          <target state="translated">Per aggiungere una dipendenza disponibile solo in una destinazione specifica, usare le condizioni come nell'esempio seguente:</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The above means that the dependency will only be valid if the build is happening for that given target.</source>
          <target state="translated">Quanto descritto sopra indica che la dipendenza sarà valida solo se la compilazione avviene per una specifica destinazione.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`$(TargetFramework)`</ph> in the condition is a MSBuild property that is being set in the project.</source>
          <target state="translated"><ph id="ph1">`$(TargetFramework)`</ph> nella condizione è una proprietà di MSBuild che viene impostata nel progetto.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For most common .NET Core applications, you will not need to do this.</source>
          <target state="translated">Per le applicazioni .NET Core più comuni, non occorre eseguire questa operazione.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Adding a dependency to your project</source>
          <target state="translated">Aggiunta di una dipendenza al progetto</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Adding a dependency to your project is straightforward.</source>
          <target state="translated">L'aggiunta di una dipendenza al progetto è un'operazione semplice.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Here is an example of how to add Json.NET version <ph id="ph1">`9.0.1`</ph> to your project.</source>
          <target state="translated">Di seguito è riportato un esempio che illustra come aggiungere Json.NET versione <ph id="ph1">`9.0.1`</ph> al progetto.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Of course, it is applicable to any other NuGet dependency.</source>
          <target state="translated">Naturalmente, è applicabile a qualsiasi altra dipendenza NuGet.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When you open your project file, you will see two or more <ph id="ph1">`&lt;ItemGroup&gt;`</ph> nodes.</source>
          <target state="translated">Quando si apre il file di progetto, verranno visualizzati due o più nodi <ph id="ph1">`&lt;ItemGroup&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You will notice that one of the nodes already has <ph id="ph1">`&lt;PackageReference&gt;`</ph> elements in it.</source>
          <target state="translated">Si noterà che uno dei nodi dispone già degli elementi <ph id="ph1">`&lt;PackageReference&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can add your new dependency to this node, or create a new one; it is completely up to you as the result will be the same.</source>
          <target state="translated">È possibile aggiungere la nuova dipendenza a questo nodo o crearne una nuova. La scelta tra queste due opzioni è responsabilità dell'utente, il risultato sarà identico.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In this example we will use the default template that is dropped by <ph id="ph1">`dotnet new`</ph>.</source>
          <target state="translated">In questo esempio verrà usato il modello predefinito eliminato da <ph id="ph1">`dotnet new`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This is a simple console application.</source>
          <target state="translated">Si tratta di una semplice applicazione console.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When we open up the project, we first find the <ph id="ph1">`&lt;ItemGroup&gt;`</ph> with already existing <ph id="ph2">`&lt;PackageReference&gt;`</ph> in it.</source>
          <target state="translated">Quando si apre il progetto, è possibile visualizzare <ph id="ph1">`&lt;ItemGroup&gt;`</ph> con <ph id="ph2">`&lt;PackageReference&gt;`</ph> già presente.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>We then add the following to it:</source>
          <target state="translated">Vengono quindi aggiunti gli elementi seguenti:</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>After this, we save the project and run the <ph id="ph1">`dotnet restore`</ph> command to install the dependency.</source>
          <target state="translated">Successivamente, salvare il progetto ed eseguire il comando <ph id="ph1">`dotnet restore`</ph> per installare la dipendenza.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The full project looks like this:</source>
          <target state="translated">Il progetto completo è simile al seguente:</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Removing a dependency from the project</source>
          <target state="translated">Rimozione di una dipendenza dal progetto</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Removing a dependency from the project file involves simply removing the <ph id="ph1">`&lt;PackageReference&gt;`</ph> from the project file.</source>
          <target state="translated">La rimozione di una dipendenza dal file di progetto comporta la semplice rimozione di <ph id="ph1">`&lt;PackageReference&gt;`</ph> dal file di progetto.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>