<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-188fee3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d174d0cb910035340fb317521f3ad930d16853c2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\collections\selecting-a-collection-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d628163fd202ce3144321d8abf63c38d58353414</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e747401547332dd55e89765dc9ee787254c6d728</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Selecting a Collection Class</source>
          <target state="translated">Selezione di una classe Collection</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Selecting a Collection Class</source>
          <target state="translated">Selezione di una classe Collection</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Selecting a Collection Class</source>
          <target state="translated">Selezione di una classe Collection</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Be sure to choose your collection class carefully.</source>
          <target state="translated">Assicurarsi di scegliere con attenzione la classe Collection,</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Using the wrong type can restrict your use of the collection.</source>
          <target state="translated">poiché l'uso del tipo errato può limitare l'uso della raccolta.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The generic and concurrent versions of the collections are to be preferred because of their greater type safety and other improvements.</source>
          <target state="translated">È preferibile usare le versioni generiche e simultanee delle raccolte per via di una maggiore indipendenza dai tipi e di altri miglioramenti.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In general, avoid using the types in the System.Collections namespace unless you are specifically targeting .NET Framework version 1.1.</source>
          <target state="translated">In generale, evitare di usare i tipi nello spazio dei nomi System.Collections a meno che la destinazione specifica non sia .NET Framework versione 1.1.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Consider the following questions:</source>
          <target state="translated">Prendere in considerazione le domande seguenti:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Do you need a sequential list where the element is typically discarded after its value is retrieved?</source>
          <target state="translated">È necessario un elenco sequenziale quando l'elemento viene in genere eliminato dopo che il valore è stato recuperato?</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If yes, consider using the <bpt id="p1">[</bpt>System.Collections.Generic.Queue<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Queue-1)</ept> generic class if you need first-in, first-out (FIFO) behavior.</source>
          <target state="translated">Se la risposta è affermativa ed è necessario un comportamento FIFO (First In First Out), considerare l'uso della classe generica <bpt id="p1">[</bpt>System.Collections.Generic.Queue<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Queue-1)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Consider using the <bpt id="p1">[</bpt>System.Collections.Generic.Stack<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Stack-1)</ept> generic class if you need last-in, first-out (LIFO) behavior.</source>
          <target state="translated">Se è necessario un comportamento LIFO (Last In First Out), considerare l'uso della classe generica <bpt id="p1">[</bpt>System.Collections.Generic.Stack<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Stack-1)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For safe access from multiple threads, use the concurrent versions <bpt id="p1">[</bpt>System.Collections.Concurrent.ConcurrentQueue<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentQueue-1)</ept> and <bpt id="p2">[</bpt>System.Collections.Concurrent.ConcurrentStack<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentStack-1)</ept>.</source>
          <target state="translated">Per un accesso sicuro da più thread, usare le versioni simultanee <bpt id="p1">[</bpt>System.Collections.Concurrent.ConcurrentQueue<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentQueue-1)</ept> e <bpt id="p2">[</bpt>System.Collections.Concurrent.ConcurrentStack<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentStack-1)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If not, consider using the other collections.</source>
          <target state="translated">Se la risposta è negativa, è opportuno usare le altre raccolte.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Do you need to access the elements in a certain order, such as FIFO, LIFO, or random?</source>
          <target state="translated">È necessario accedere agli elementi in un determinato ordine, ad esempio FIFO, LIFO o casuale?</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Collections.Generic.Queue<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Queue-1)</ept> or <bpt id="p2">[</bpt>System.Collections.Concurrent.ConcurrentQueue<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentQueue-1)</ept> generic class offer FIFO access.</source>
          <target state="translated">La classe generica <bpt id="p1">[</bpt>System.Collections.Generic.Queue<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Queue-1)</ept> o <bpt id="p2">[</bpt>System.Collections.Concurrent.ConcurrentQueue<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentQueue-1)</ept> offre l'accesso FIFO.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>When to Use a Thread-Safe Collection<ept id="p1">](threadsafe/when-to-use-a-thread-safe-collection.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>When to Use a Thread-Safe Collection<ept id="p1">](threadsafe/when-to-use-a-thread-safe-collection.md)</ept> (Quando usare una raccolta thread-safe).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Collections.Generic.Stack<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Stack-1)</ept> or<bpt id="p2">[</bpt>System.Collections.Concurrent.ConcurrentStack<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentStack-1)</ept> generic class offer LIFO access.</source>
          <target state="translated">La classe generica <bpt id="p1">[</bpt>System.Collections.Generic.Stack<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Stack-1)</ept> o <bpt id="p2">[</bpt>System.Collections.Concurrent.ConcurrentStack<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentStack-1)</ept> offre l'accesso LIFO.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>When to Use a Thread-Safe Collection<ept id="p1">](threadsafe/when-to-use-a-thread-safe-collection.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>When to Use a Thread-Safe Collection<ept id="p1">](threadsafe/when-to-use-a-thread-safe-collection.md)</ept> (Quando usare una raccolta thread-safe).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Collections.Generic.LinkedList<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.LinkedList-1)</ept> generic class allows sequential access either from the head to the tail, or from the tail to the head.</source>
          <target state="translated">La classe generica <bpt id="p1">[</bpt>System.Collections.Generic.LinkedList<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.LinkedList-1)</ept> consente l'accesso sequenziale dall'inizio alla fine o viceversa.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Do you need to access each element by index?</source>
          <target state="translated">È necessario accedere a ciascun elemento tramite l'indice?</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Collections.Specialized.StringCollection<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.StringCollection)</ept> class and the <bpt id="p2">[</bpt>System.Collections.Generic.List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> generic class offer access to their elements by the zero-based index of the element.</source>
          <target state="translated">La classe <bpt id="p1">[</bpt>System.Collections.Specialized.StringCollection<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.StringCollection)</ept> e la classe generica <bpt id="p2">[</bpt>System.Collections.Generic.List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> consentono l'accesso ai relativi elementi tramite l'indice in base zero dell'elemento.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Collections.Specialized.ListDictionary<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.ListDictionary)</ept> and <bpt id="p2">[</bpt>System.Collections.Specialized.StringDictionary<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.StringDictionary)</ept> classes, and the <bpt id="p3">[</bpt>System.Collections.Generic.Dictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept> and <bpt id="p4">[</bpt>System.Collections.Generic.SortedDictionary<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2)</ept> generic classes offer access to their elements by the key of the element.</source>
          <target state="translated">Le classi <bpt id="p1">[</bpt>System.Collections.Specialized.ListDictionary<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.ListDictionary)</ept> e <bpt id="p2">[</bpt>System.Collections.Specialized.StringDictionary<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.StringDictionary)</ept> e le classi generiche <bpt id="p3">[</bpt>System.Collections.Generic.Dictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept> e <bpt id="p4">[</bpt>System.Collections.Generic.SortedDictionary<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2)</ept> consentono l'accesso ai relativi elementi tramite la chiave dell'elemento.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Collections.Specialized.NameObjectCollectionBase<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.NameObjectCollectionBase)</ept> and <bpt id="p2">[</bpt>System.Collections.Specialized.NameValueCollection<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.NameValueCollection)</ept> classes, and the <bpt id="p3">[</bpt>System.Collections.ObjectModel.KeyedCollection<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.KeyedCollection-2)</ept> and <bpt id="p4">[</bpt>System.Collections.Generic.SortedList<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept> generic classes offer access to their elements by either the zero-based index or the key of the element.</source>
          <target state="translated">Le classi <bpt id="p1">[</bpt>System.Collections.Specialized.NameObjectCollectionBase<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.NameObjectCollectionBase)</ept> e <bpt id="p2">[</bpt>System.Collections.Specialized.NameValueCollection<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.NameValueCollection)</ept> e le classi generiche <bpt id="p3">[</bpt>System.Collections.ObjectModel.KeyedCollection<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.KeyedCollection-2)</ept> e <bpt id="p4">[</bpt>System.Collections.Generic.SortedList<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept> consentono l'accesso ai relativi elementi tramite l'indice in base zero o la chiave dell'elemento.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Will each element contain one value, a combination of one key and one value, or a combination of one key and multiple values?</source>
          <target state="translated">Ogni elemento contiene un valore, una combinazione di una chiave e un valore o una combinazione di una chiave e più valori?</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>One value: Use any of the collections based on the <bpt id="p1">[</bpt>System.Collections.Generic.IList<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IList-1)</ept> generic interface.</source>
          <target state="translated">Un valore: usare una qualsiasi raccolta basata sull'interfaccia generica <bpt id="p1">[</bpt>System.Collections.Generic.IList<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IList-1)</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>One key and one value: Use any of the collections based on the <bpt id="p1">[</bpt>System.Collections.Generic.IDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IDictionary-2)</ept> generic interface.</source>
          <target state="translated">Una chiave e un valore: usare una qualsiasi raccolta basata sull'interfaccia generica <bpt id="p1">[</bpt>System.Collections.Generic.IDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IDictionary-2)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>One value with embedded key: Use the <bpt id="p1">[</bpt>System.Collections.ObjectModel.KeyedCollection<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.KeyedCollection-2)</ept> generic class.</source>
          <target state="translated">Un valore con chiave incorporata: usare la classe generica <bpt id="p1">[</bpt>System.Collections.ObjectModel.KeyedCollection<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.KeyedCollection-2)</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>One key and multiple values: Use the <bpt id="p1">[</bpt>System.Collections.Specialized.NameValueCollection<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.NameValueCollection)</ept> class.</source>
          <target state="translated">Una chiave e più valori: usare la classe <bpt id="p1">[</bpt>System.Collections.Specialized.NameValueCollection<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.NameValueCollection)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Do you need to sort the elements differently from how they were entered?</source>
          <target state="translated">È necessario ordinare gli elementi in modo diverso da come sono stati immessi?</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Collections.Hashtable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept> class sorts its elements by their hash codes.</source>
          <target state="translated">La classe <bpt id="p1">[</bpt>System.Collections.Hashtable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept> ordina gli elementi in base ai rispettivi codici hash.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Collections.Generic.SortedDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2)</ept> and <bpt id="p2">[</bpt>System.Collections.Generic.SortedList<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept> generic classes sort their elements by the key, based on implementations of the <bpt id="p3">[</bpt>System.Collections.IComparer<ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IComparer)</ept> interface and the <bpt id="p4">[</bpt>System.Collections.Generic.IComparer<ph id="ph5">&amp;lt;</ph>T<ph id="ph6">&amp;gt;</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IComparer-1)</ept> generic interface.</source>
          <target state="translated">Le classi generiche <bpt id="p1">[</bpt>System.Collections.Generic.SortedDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2)</ept> e <bpt id="p2">[</bpt>System.Collections.Generic.SortedList<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept> ordinano gli elementi in base alla chiave, in base all'implementazione dell'interfaccia <bpt id="p3">[</bpt>System.Collections.IComparer<ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IComparer)</ept> e dell'interfaccia generica <bpt id="p4">[</bpt>System.Collections.Generic.IComparer<ph id="ph5">&amp;lt;</ph>T<ph id="ph6">&amp;gt;</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IComparer-1)</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic.List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> generic class, provides a <ph id="ph3">`Sort`</ph> method that takes an implementation of the <ph id="ph4">`IComparer&lt;T&gt;`</ph> generic interface as a parameter.</source>
          <target state="translated">La classe generica <bpt id="p1">[</bpt>System.Collections.Generic.List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> offre un metodo <ph id="ph3">`Sort`</ph> che accetta come parametro un'implementazione dell'interfaccia generica <ph id="ph4">`IComparer&lt;T&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Do you need collections that accept only strings?</source>
          <target state="translated">Sono necessarie raccolte che accettano solo stringhe?</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringCollection<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.StringCollection)</ept> (based on <bpt id="p2">[</bpt>System.Collections.IList<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IList)</ept>) and <bpt id="p3">[</bpt>StringDictionary<ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.StringDictionary)</ept> (based on <bpt id="p4">[</bpt>System.Collections.IDictionary<ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept>) are in the <bpt id="p5">[</bpt>System.Collections.Specialized<ept id="p5">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized)</ept> namespace.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringCollection<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.StringCollection)</ept> (in base a <bpt id="p2">[</bpt>System.Collections.IList<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IList)</ept>) e <bpt id="p3">[</bpt>StringDictionary<ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.StringDictionary)</ept> (in base a <bpt id="p4">[</bpt>System.Collections.IDictionary<ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept>) sono presenti nello spazio dei nomi <bpt id="p5">[</bpt>System.Collections.Specialized<ept id="p5">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized)</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In addition, you can use any of the generic collection classes in the <bpt id="p1">[</bpt>System.Collections.Generic<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic)</ept> namespace as strongly typed string collections by specifying the <ph id="ph1">`String`</ph> class for their generic type arguments.</source>
          <target state="translated">È anche possibile usare una qualsiasi classe di raccolte generiche nello spazio dei nomi <bpt id="p1">[</bpt>System.Collections.Generic<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic)</ept> come raccolte di stringhe fortemente tipizzate specificando la classe <ph id="ph1">`String`</ph> per i relativi argomenti di tipo generico.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>LINQ to Objects</source>
          <target state="translated">LINQ to Objects</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>LINQ to Objects enables developers to use LINQ queries to access in-memory objects as long as the object type implements <bpt id="p1">[</bpt>System.Collections.IEnumerable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IEnumerable)</ept> or <bpt id="p2">[</bpt>System.Collections.Generic.IEnumerable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IEnumerable-1)</ept>.</source>
          <target state="translated">LINQ to Objects consente agli sviluppatori di usare le query LINQ per accedere agli oggetti in memoria, a condizione che il tipo dell'oggetto implementi <bpt id="p1">[</bpt>System.Collections.IEnumerable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IEnumerable)</ept> o <bpt id="p2">[</bpt>System.Collections.Generic.IEnumerable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IEnumerable-1)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>LINQ queries provide a common pattern for accessing data, are typically more concise and readable than standard foreach loops, and provide filtering, ordering, and grouping capabilities.</source>
          <target state="translated">Le query LINQ offrono un modello comune per l'accesso ai dati, sono in genere più concise e leggibili dei cicli standard e includono funzioni di filtro, ordinamento e raggruppamento.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Language Integrated Query (LINQ)<ept id="p1">](../../csharp/linq/index.md)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>Language Integrated Query (LINQ)<ept id="p1">](../../csharp/linq/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vedere anche</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Specialized<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Specialized<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized)</ept></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic)</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Thread-Safe Collections<ept id="p1">](threadsafe/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Raccolte thread-safe<ept id="p1">](threadsafe/index.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>