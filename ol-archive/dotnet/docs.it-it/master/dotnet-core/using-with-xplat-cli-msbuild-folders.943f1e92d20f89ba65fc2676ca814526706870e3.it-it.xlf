<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f0362aa" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bcb5ce9772ca2f3e35ebd7ec948d011ec04296e0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\preview3\tutorials\using-with-xplat-cli-msbuild-folders.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a0c627135d005d6ec7bf60563fdd3dc0e40215d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4bcf08f10e0a7cdc23ef3eaa37eb96aded44eadb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Organizing and testing projects with the .NET Core command line (.NET Core Tools RC4) | Microsoft Docs</source>
          <target state="translated">Organizzazione e testing dei progetti con la riga di comando di .NET Core (strumenti di .NET Core RC4) | Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Organizing and testing projects with the .NET Core command line (.NET Core Tools RC4)</source>
          <target state="translated">Organizzazione e testing dei progetti con la riga di comando di .NET Core (strumenti di .NET Core RC4)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Organizing and testing projects with the .NET Core command line (.NET Core Tools RC4)</source>
          <target state="translated">Organizzazione e testing dei progetti con la riga di comando di .NET Core (strumenti di .NET Core RC4)</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic applies to .NET Core Tools RC4.</source>
          <target state="translated">Questo argomento si applica agli strumenti di .NET Core RC4.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For the .NET Core Tools Preview 2 version, see the <bpt id="p1">[</bpt>Getting started with .NET Core on Windows/Linux/macOS using the command line<ept id="p1">](../../tutorials/using-with-xplat-cli.md)</ept> topic.</source>
          <target state="translated">Per gli strumenti dell'anteprima 2 di .NET Core, vedere l'argomento <bpt id="p1">[</bpt>Introduzione all'uso di .NET Core su Windows/Linux/macOS dalla riga di comando<ept id="p1">](../../tutorials/using-with-xplat-cli.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This tutorial follows <bpt id="p1">[</bpt>Getting started with .NET Core on Windows/Linux/macOS using the command line (.NET Core Tools RC4)<ept id="p1">](./using-with-xplat-cli-msbuild.md)</ept> to show how to go beyond simple "hello world" scenarios and pave the way for more advanced and well-organized applications.</source>
          <target state="translated">Questa esercitazione segue <bpt id="p1">[</bpt>Introduzione all'uso di .NET Core su Windows/Linux/macOS dalla riga di comando (strumenti di .NET Core RC4)<ept id="p1">](./using-with-xplat-cli-msbuild.md)</ept> e illustra come superare gli scenari semplici di tipo "hello world" e preparare la strada per applicazioni più avanzate e ben organizzate.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Using folders to organize code</source>
          <target state="translated">Uso di cartelle per organizzare il codice</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Say you wanted to introduce some new types to do work on.</source>
          <target state="translated">Si supponga di voler introdurre alcuni nuovi tipi su cui lavorare.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can do this by adding more files and making sure to give them namespaces you can include in your <ph id="ph1">`Program.cs`</ph> file.</source>
          <target state="translated">A tale scopo è possibile aggiungere altri file assicurandosi di assegnare loro spazi dei nomi che possono essere inclusi nel file <ph id="ph1">`Program.cs`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This works great when the size of your project is relatively small.</source>
          <target state="translated">Questa è un'ottima soluzione quando le dimensioni del progetto sono relativamente piccole.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, if you have a larger app with many different data types and potentially multiple layers, you may wish to organize things logically.</source>
          <target state="translated">Tuttavia, se si ha un'applicazione più grande con molti tipi di dati diversi e potenzialmente più livelli, può essere opportuno organizzare i dati in maniera logica.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This is where folders come into play.</source>
          <target state="translated">A questo punto entrano in gioco le cartelle.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can either follow along with <bpt id="p1">[</bpt>the NewTypes sample project<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/console-apps/NewTypesMsBuild)</ept> that this guide covers, or create your own files and folders.</source>
          <target state="translated">È possibile seguire <bpt id="p1">[</bpt>il progetto di esempio NewTypes<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/console-apps/NewTypesMsBuild)</ept> descritto in questa guida o creare file e cartelle personalizzati.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To begin, create a new folder under the root of your project.</source>
          <target state="translated">Per iniziare, creare una nuova cartella sotto la radice del progetto.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`/Model`</ph> is chosen here.</source>
          <target state="translated"><ph id="ph1">`/Model`</ph> è la cartella scelta in questo esempio.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Now add some new types to the folder:</source>
          <target state="translated">Aggiungere ora alcuni nuovi tipi nella cartella:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Now, just as if they were files in the same directory, give them all the same namespace so you can include them in your <ph id="ph1">`Program.cs`</ph>.</source>
          <target state="translated">Come per i file presenti in una stessa directory, assegnare a tutti i tipi lo stesso spazio dei nomi in modo da poterli includere in <ph id="ph1">`Program.cs`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example: Pet Types</source>
          <target state="translated">Esempio: Tipi di animali domestici</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This example creates two new types, <ph id="ph1">`Dog`</ph> and <ph id="ph2">`Cat`</ph>, and has them implement a common interface, <ph id="ph3">`IPet`</ph>.</source>
          <target state="translated">In questo esempio vengono creati due nuovi tipi, <ph id="ph1">`Dog`</ph> e <ph id="ph2">`Cat`</ph>, che implementano un'interfaccia comune, <ph id="ph3">`IPet`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Folder Structure:</source>
          <target state="translated">Struttura di cartelle:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`IPet.cs`</ph>:</source>
          <target state="translated"><ph id="ph1">`IPet.cs`</ph>:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dog.cs`</ph>:</source>
          <target state="translated"><ph id="ph1">`Dog.cs`</ph>:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Cat.cs`</ph>:</source>
          <target state="translated"><ph id="ph1">`Cat.cs`</ph>:</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Program.cs`</ph>:</source>
          <target state="translated"><ph id="ph1">`Program.cs`</ph>:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`NewTypes.csproj`</ph>:</source>
          <target state="translated"><ph id="ph1">`NewTypes.csproj`</ph>:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>And if you run this:</source>
          <target state="translated">E se si esegue questo codice:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>New pet types can be added (such as a <ph id="ph1">`Bird`</ph>), extending this project.</source>
          <target state="translated">È possibile aggiungere nuovi tipi di animali domestici (come <ph id="ph1">`Bird`</ph>) estendendo il progetto.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Testing your Console App</source>
          <target state="translated">Test dell'applicazione console</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You'll probably be wanting to test your projects at some point.</source>
          <target state="translated">È probabile che a un certo punto si decida di testare i progetti.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Here's a good way to do it:</source>
          <target state="translated">Ecco un buon metodo per eseguire questa operazione:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Move any source of your existing project into a new <ph id="ph1">`src`</ph> folder.</source>
          <target state="translated">Spostare l'origine del progetto esistente in una nuova cartella <ph id="ph1">`src`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">`/test`</ph> directory, then <ph id="ph2">`cd`</ph> into it.</source>
          <target state="translated">Creare una directory <ph id="ph1">`/test`</ph> e quindi <ph id="ph2">`cd`</ph> al suo interno.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Initialize the directory with a <ph id="ph1">`dotnet new -t Xunittest`</ph> command.</source>
          <target state="translated">Inizializzare la directory con un comando <ph id="ph1">`dotnet new -t Xunittest`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This assumes Xunit, but you can also use MS Test by replacing <ph id="ph1">`Xunittest`</ph> with <ph id="ph2">`Mstest`</ph>.</source>
          <target state="translated">In questo caso si presuppone l'uso di Xunit, ma è possibile anche usare MS Test sostituendo <ph id="ph1">`Xunittest`</ph> con <ph id="ph2">`Mstest`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Example: Extending the NewTypes project</source>
          <target state="translated">Esempio: Estensione del progetto NewTypes</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Now that the project system is in place, you can create your test project and start writing tests!</source>
          <target state="translated">Ora che il sistema del progetto è stato creato, è possibile creare il progetto di test e iniziare a scrivere i test.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>From here on out, this guide will use and extend <bpt id="p1">[</bpt>the sample Types project<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/console-apps/NewTypesMsBuild)</ept>.</source>
          <target state="translated">A partire da questo punto, nella guida verrà usato ed esteso <bpt id="p1">[</bpt>il progetto NewTypes di esempio<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/console-apps/NewTypesMsBuild)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Additionally, it will use the <bpt id="p1">[</bpt>Xunit<ept id="p1">](https://xunit.github.io/)</ept> test framework.</source>
          <target state="translated">Inoltre, verrà usato il framework di test <bpt id="p1">[</bpt>xUnit<ept id="p1">](https://xunit.github.io/)</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Feel free to follow along or create your own multi-project system with tests.</source>
          <target state="translated">È possibile proseguire o creare un sistema personalizzato basato su più progetti con test.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The whole project structure should look like this:</source>
          <target state="translated">La struttura dell'intero progetto avrà un aspetto simile al seguente:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>There are two new things to make sure you have in your test project:</source>
          <target state="translated">È necessario verificare che nel progetto di test siano presenti due nuovi elementi:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A correct <ph id="ph1">`NewTypesTests.csproj`</ph> file with the following:</source>
          <target state="translated">Un file <ph id="ph1">`NewTypesTests.csproj`</ph> corretto con i riferimenti seguenti:</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A reference to <ph id="ph1">`xunit`</ph></source>
          <target state="translated">Un riferimento a <ph id="ph1">`xunit`</ph></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A reference to <ph id="ph1">`dotnet-test-xunit`</ph></source>
          <target state="translated">Un riferimento a <ph id="ph1">`dotnet-test-xunit`</ph></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A reference to the namespace corresponding to the code under test</source>
          <target state="translated">Un riferimento allo spazio dei nomi corrispondente al codice sottoposto a test</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This can be built by simply doing <ph id="ph1">`dotnet new -t Xunittest`</ph> from the command-line in the <ph id="ph2">`NewTypesTests`</ph> directory, then adding a project reference to the <ph id="ph3">`NewTypes`</ph> project.</source>
          <target state="translated">Questo riferimento può essere creato semplicemente eseguendo <ph id="ph1">`dotnet new -t Xunittest`</ph> dalla riga di comando nella directory <ph id="ph2">`NewTypesTests`</ph> e quindi aggiungendo un riferimento al progetto <ph id="ph3">`NewTypes`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`NewTypesTests/NewTypesTests.csproj`</ph>:</source>
          <target state="translated"><ph id="ph1">`NewTypesTests/NewTypesTests.csproj`</ph>:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An Xunit test class.</source>
          <target state="translated">Una classe di test xUnit.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`PetTests.cs`</ph>:</source>
          <target state="translated"><ph id="ph1">`PetTests.cs`</ph>:</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Now you can run tests!</source>
          <target state="translated">A questo punto è possibile eseguire i test.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">`dotnet test`</ph><ept id="p1">](../tools/dotnet-test.md)</ept> command runs the test runner you have specified in your project.</source>
          <target state="translated">Il comando <bpt id="p1">[</bpt><ph id="ph1">`dotnet test`</ph><ept id="p1">](../tools/dotnet-test.md)</ept> esegue il Test Runner specificato nel progetto.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Make sure you start at the top-level directory.</source>
          <target state="translated">Assicurarsi di iniziare dalla directory di livello più alto.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Output should look like this:</source>
          <target state="translated">L'output dovrebbe essere simile al seguente:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>