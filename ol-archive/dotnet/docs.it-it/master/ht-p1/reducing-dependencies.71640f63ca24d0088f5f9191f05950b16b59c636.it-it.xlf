<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">caae9f0a32c4378488329fd6d88c1dc7bf96ae9a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\deploying\reducing-dependencies.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f092be6e8b03fa8f1e8c2408f261d26993d078ea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d13aab02bcdf2637f78010cf62e522d32a87ac0f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Reducing Package Dependencies with project.json</source>
          <target state="translated">Riduzione delle dipendenze dei pacchetti con project.json</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Reducing Package Dependencies with project.json</source>
          <target state="translated">Riduzione delle dipendenze dei pacchetti con project.json</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Reducing Package Dependencies with project.json</source>
          <target state="translated">Riduzione delle dipendenze dei pacchetti con project.json</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article covers what you need to know about reducing your package dependencies when authoring <ph id="ph1">`project.json`</ph> libraries.</source>
          <target state="translated">Questo articolo descrive cosa è necessario conoscere sulla riduzione delle dipendenze dei pacchetti durante la creazione di librerie <ph id="ph1">`project.json`</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>By the end of this article, you will learn how to compose your library such that it only uses the dependencies it needs.</source>
          <target state="translated">Al termine dell'articolo, si apprenderà come creare la libreria in modo che usi solo le dipendenze necessarie.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Why it's Important</source>
          <target state="translated">Perché è importante?</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>.NET Core is a product made up of NuGet packages.</source>
          <target state="translated">.NET Core è un prodotto costituito da pacchetti NuGet.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An essential package is the <bpt id="p1">[</bpt>.NET Standard Library metapackage<ept id="p1">](https://www.nuget.org/packages/NETStandard.Library)</ept>, which is a NuGet package composed of other packages.</source>
          <target state="translated">Un pacchetto fondamentale è il <bpt id="p1">[</bpt>metapacchetto della libreria .NET Standard<ept id="p1">](https://www.nuget.org/packages/NETStandard.Library)</ept>, che è un pacchetto NuGet composto da altri pacchetti.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It provides you with the set of packages that are guaranteed to work on multiple .NET implementations, such as .NET Framework, .NET Core and Xamarin/Mono.</source>
          <target state="translated">Fornisce il set di pacchetti in grado di funzionare su più implementazioni di .NET, ad esempio .NET Framework, .NET Core e Xamarin/Mono.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>However, there's a good chance that your library won't use every single package it contains.</source>
          <target state="translated">È tuttavia probabile che la libreria non usi tutti i pacchetti che contiene.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When authoring a library and distributing it over NuGet, it's a best practice to "trim" your dependencies down to only the packages you actually use.</source>
          <target state="translated">Quando si crea una libreria e la si distribuisce tramite NuGet, è opportuno ridurre il numero delle dipendenze ai soli pacchetti che vengono effettivamente usati.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This results in a smaller overall footprint for NuGet packages.</source>
          <target state="translated">In questo modo, si otterrà un impatto minore per i pacchetti NuGet.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>How to do it</source>
          <target state="translated">Come procedere?</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Currently, there is no official <ph id="ph1">`dotnet`</ph> command which trims package references.</source>
          <target state="translated">Attualmente non è disponibile un comando <ph id="ph1">`dotnet`</ph> ufficiale che consenta di ridurre il numero di riferimenti nel pacchetto.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Instead, you'll have to do it manually.</source>
          <target state="translated">È tuttavia possibile eseguire questa operazione manualmente.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The general process looks like the following:</source>
          <target state="translated">Il processo generale è simile al seguente:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Reference <ph id="ph1">`NETStandard.Library`</ph> version <ph id="ph2">`1.6.0`</ph> in a <ph id="ph3">`dependencies`</ph> section of your <ph id="ph4">`project.json`</ph>.</source>
          <target state="translated">Fare riferimento a <ph id="ph1">`NETStandard.Library`</ph> versione <ph id="ph2">`1.6.0`</ph> in una sezione <ph id="ph3">`dependencies`</ph> di <ph id="ph4">`project.json`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Restore packages with <ph id="ph1">`dotnet restore`</ph> from the command line.</source>
          <target state="translated">Ripristinare i pacchetti con <ph id="ph1">`dotnet restore`</ph> dalla riga di comando.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Inspect the <ph id="ph1">`project.lock.json`</ph> file and find the <ph id="ph2">`NETSTandard.Library`</ph> section.</source>
          <target state="translated">Esaminare il file <ph id="ph1">`project.lock.json`</ph> e trovare la sezione <ph id="ph2">`NETSTandard.Library`</ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It's near the beginning of the file.</source>
          <target state="translated">in genere all'inizio del file.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Copy all of the listed packages under <ph id="ph1">`dependencies`</ph>.</source>
          <target state="translated">Copiare tutti i pacchetti elencati in <ph id="ph1">`dependencies`</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Remove the <ph id="ph1">`.NETStandard.Library`</ph> reference and replace it with the copied packages.</source>
          <target state="translated">Rimuovere il riferimento <ph id="ph1">`.NETStandard.Library`</ph> e sostituirlo con i pacchetti copiati.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Remove references to packages you don't need.</source>
          <target state="translated">Rimuovere i riferimenti ai pacchetti non necessari.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can find out which packages you don't need by one of the following ways:</source>
          <target state="translated">È possibile individuare i pacchetti non necessari in uno dei modi seguenti:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Trial and error.</source>
          <target state="translated">Tentativi ed errori.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This involves removing a package, restoring, seeing if your library still compiles, and repeating this process.</source>
          <target state="translated">Questo metodo fa riferimento alla rimozione di un pacchetto, al relativo ripristino, se la libreria continua a eseguire la compilazione, e alla ripetizione del processo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Using a tool such as <bpt id="p1">[</bpt>ILSpy<ept id="p1">](http://ilspy.net)</ept> or <bpt id="p2">[</bpt>.NET Reflector<ept id="p2">](http://www.red-gate.com/products/dotnet-development/reflector)</ept> to peek at references to see what your code is actually using.</source>
          <target state="translated">Tramite uno strumento come <bpt id="p1">[</bpt>ILSpy<ept id="p1">](http://ilspy.net)</ept> o <bpt id="p2">[</bpt>.NET Reflector<ept id="p2">](http://www.red-gate.com/products/dotnet-development/reflector)</ept> per la selezione dei riferimenti in modo da visualizzare quali vengono effettivamente usati dal codice.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can then remove packages which don't correspond to types you're using.</source>
          <target state="translated">A questo punto, è possibile rimuovere i pacchetti che non corrispondono ai tipi in uso.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Esempio</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Imagine that you wrote a library which provided additional functionality to generic collection types.</source>
          <target state="translated">Si supponga di aver scritto una libreria che offre funzionalità aggiuntive per tipi di raccolte generiche.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Such a library would need to depend on packages such as <ph id="ph1">`System.Collections`</ph>, but may not at all depend on packages such as <ph id="ph2">`System.Net.Http`</ph>.</source>
          <target state="translated">Tale libreria deve dipendere da pacchetti come <ph id="ph1">`System.Collections`</ph>, ma può non dipendere da pacchetti come <ph id="ph2">`System.Net.Http`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>As such, it would be good to trim package dependencies down to only what this library required!</source>
          <target state="translated">Di conseguenza, può essere opportuno ridurre le dipendenze dei pacchetti alla quantità necessaria per la libreria.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To trim this library, you start with the <ph id="ph1">`project.json`</ph> file and add a reference to <ph id="ph2">`NETStandard.Library`</ph> version <ph id="ph3">`1.6.0`</ph>.</source>
          <target state="translated">Per ridurre questa libreria, iniziare con il file <ph id="ph1">`project.json`</ph> e aggiungere un riferimento a <ph id="ph2">`NETStandard.Library`</ph> versione <ph id="ph3">`1.6.0`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Next, you restore packages with <ph id="ph1">`dotnet restore`</ph>, inspect the <ph id="ph2">`project.lock.json`</ph> file, and find all the packages restored for <ph id="ph3">`NETSTandard.Library`</ph>.</source>
          <target state="translated">Successivamente, si ripristinano i pacchetti con <ph id="ph1">`dotnet restore`</ph>, si analizza il file <ph id="ph2">`project.lock.json`</ph> e si trovano tutti i pacchetti ripristinati per <ph id="ph3">`NETSTandard.Library`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Here's what the relevant section in the <ph id="ph1">`project.lock.json`</ph> file looks like when targeting <ph id="ph2">`netstandard1.0`</ph>:</source>
          <target state="translated">Di seguito è presentata la specifica sezione del file <ph id="ph1">`project.lock.json`</ph> quando punta a <ph id="ph2">`netstandard1.0`</ph>:</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Next, copy over the package references into the <ph id="ph1">`dependencies`</ph> section of the library's <ph id="ph2">`project.json`</ph> file, replacing the <ph id="ph3">`NETStandard.Library`</ph> reference:</source>
          <target state="translated">Successivamente, sovrascrivere i riferimenti dei pacchetti nella sezione <ph id="ph1">`dependencies`</ph> del file della libreria <ph id="ph2">`project.json`</ph>, sostituendo il riferimento <ph id="ph3">`NETStandard.Library`</ph>:</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>That's quite a lot of packages, many of which which certainly aren't necessary for extending collection types.</source>
          <target state="translated">Si tratta di numerosi pacchetti, molti dei quali certamente non necessari per l'estensione dei tipi di raccolta.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can either remove packages manually or use a tool such as <bpt id="p1">[</bpt>ILSpy<ept id="p1">](http://ilspy.net)</ept> or <bpt id="p2">[</bpt>.NET Reflector<ept id="p2">](http://www.red-gate.com/products/dotnet-development/reflector)</ept> to identify which packages your code actually uses.</source>
          <target state="translated">È possibile rimuovere manualmente i pacchetti o usare uno strumento come <bpt id="p1">[</bpt>ILSpy<ept id="p1">](http://ilspy.net)</ept> o <bpt id="p2">[</bpt>.NET Reflector<ept id="p2">](http://www.red-gate.com/products/dotnet-development/reflector)</ept> per identificare i pacchetti effettivamente usati dal codice.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Here's what a trimmed package could look like:</source>
          <target state="translated">Di seguito un esempio di pacchetto dopo la riduzione delle dipendenze:</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Now, it has a smaller footprint than if it had depended on the <ph id="ph1">`NETStandard.Library`</ph> metapackage.</source>
          <target state="translated">A questo punto, l'impatto è ridotto rispetto a quello che avrebbe se dipendesse dal metapacchetto <ph id="ph1">`NETStandard.Library`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>