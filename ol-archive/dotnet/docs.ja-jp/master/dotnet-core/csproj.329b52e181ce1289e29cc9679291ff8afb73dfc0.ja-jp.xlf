<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b5c25fc" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e67270cf713857a5fea16ebdd0abab774f555808</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\csproj.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09db10cd830b9ce2638f9d3f65389244af876c5c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">50ddfc14bca5f978202608cf2bce8784e63dd6fc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>csproj reference | Microsoft Docs</source>
          <target state="translated">csproj リファレンス | Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn about the differences between existing and .NET Core csproj files</source>
          <target state="translated">既存の csproj ファイルと .NET Core の csproj ファイルの違いについて説明します</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>reference, csproj, .NET Core</source>
          <target state="translated">リファレンス, csproj, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Additions to the csproj format for .NET Core</source>
          <target state="translated">.NET Core の csproj 形式に追加されたもの</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This document outlines the changes that were added to the project files as part of the move from <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> to <bpt id="p2">*</bpt>csproj<ept id="p2">*</ept> and <bpt id="p3">[</bpt>MSBuild<ept id="p3">](https://github.com/Microsoft/MSBuild)</ept>.</source>
          <target state="translated">ここでは、<bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> から <bpt id="p2">*</bpt>csproj<ept id="p2">*</ept> および <bpt id="p3">[</bpt>MSBuild<ept id="p3">](https://github.com/Microsoft/MSBuild)</ept> への移行に伴ってプロジェクト ファイルに追加された変更について説明します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information about general project file syntax and reference, see <bpt id="p1">[</bpt>the MSBuild project file<ept id="p1">](https://docs.microsoft.com/visualstudio/msbuild/msbuild-project-file-schema-reference)</ept> documentation.</source>
          <target state="translated">一般的なプロジェクト ファイルの構文とリファレンスの詳細については、<bpt id="p1">[</bpt>MSBuild プロジェクト ファイル<ept id="p1">](https://docs.microsoft.com/visualstudio/msbuild/msbuild-project-file-schema-reference)</ept>のドキュメントを参照してください。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Implicit package references</source>
          <target state="translated">暗黙的なパッケージ参照</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Metapackages are now implicitly referenced based on the target framework specified in the <ph id="ph1">`&lt;TargetFramework&gt;`</ph> or <ph id="ph2">`&lt;TargetFrameworks&gt;`</ph> property of your project file.</source>
          <target state="translated">メタパッケージは、プロジェクト ファイルの <ph id="ph1">`&lt;TargetFramework&gt;`</ph> または <ph id="ph2">`&lt;TargetFrameworks&gt;`</ph> プロパティに指定されているターゲット フレームワークに基づいて暗黙的に参照されるようになりました。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If the target framework is <ph id="ph1">`netcoreap1.x`</ph>, the proper version of the <ph id="ph2">`Microsoft.NETCore.App`</ph> metapackage is referenced.</source>
          <target state="translated">ターゲット フレームワークが <ph id="ph1">`netcoreap1.x`</ph> の場合、適切なバージョンの <ph id="ph2">`Microsoft.NETCore.App`</ph> メタパッケージが参照されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Otherwise, if the target framework is <ph id="ph1">`netstandard1.x`</ph>, the proper version of the <ph id="ph2">`NetStandard.Library`</ph> metapackage is referenced.</source>
          <target state="translated">またはターゲット フレームワークが <ph id="ph1">`netstandard1.x`</ph> の場合、適切なバージョンの <ph id="ph2">`NetStandard.Library`</ph> メタパッケージが参照されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>As far as the rest of the behavior is concerned, the tools will work as expected and most of the gestures will remain the same (for example, <ph id="ph1">`dotnet restore`</ph>).</source>
          <target state="translated">残りの動作がある場合、ツールは期待どおりに動作し、ほとんどのジェスチャは同じままです (<ph id="ph1">`dotnet restore`</ph> など)。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Recommendations</source>
          <target state="translated">推奨事項</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Since <ph id="ph1">`Microsoft.NETCore.App`</ph> or <ph id="ph2">`NetStandard.Library`</ph> metapackages are now implicitly referenced, the following are our recommended best practices:</source>
          <target state="translated"><ph id="ph1">`Microsoft.NETCore.App`</ph> または <ph id="ph2">`NetStandard.Library`</ph> メタパッケージは暗黙的に参照されるようになったので、ベスト プラクティスとして以下が推奨されます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Never have an explicit reference to the <ph id="ph1">`Microsoft.NETCore.App`</ph> or <ph id="ph2">`NetStandard.Library`</ph> metapackages via the <ph id="ph3">`&lt;PackageReference&gt;`</ph> property in your project file.</source>
          <target state="translated">プロジェクト ファイルの <ph id="ph3">`&lt;PackageReference&gt;`</ph> プロパティ経由で <ph id="ph1">`Microsoft.NETCore.App`</ph> または <ph id="ph2">`NetStandard.Library`</ph> メタパッケージを明示的に参照しないようにします。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you need a specific version of the runtime, you should use the <ph id="ph1">`&lt;RuntimeFrameworkVersion&gt;`</ph> property in your project (for example, <ph id="ph2">`1.0.4`</ph>) instead of referencing the metapackage.</source>
          <target state="translated">特定バージョンのランタイムが必要な場合、メタパッケージを参照するのではなく、プロジェクト内で <ph id="ph1">`&lt;RuntimeFrameworkVersion&gt;`</ph> プロパティを使用します (<ph id="ph2">`1.0.4`</ph> など)。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This might happen if you are using <bpt id="p1">[</bpt>self-contained deployments<ept id="p1">](../deploying/index.md#self-contained-deployments-scd)</ept> and you need a specific patch version of 1.0.0 LTS runtime, for example.</source>
          <target state="translated"><bpt id="p1">[</bpt>自己完結型の展開<ept id="p1">](../deploying/index.md#self-contained-deployments-scd)</ept>を使用し、特定のパッチ バージョンの 1.0.0 LTS ランタイムが必要な場合などにこの問題が発生する可能性があります。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you need a specific version of the <ph id="ph1">`NetStandard.Library`</ph> metapackage, you can use the <ph id="ph2">`&lt;NetStandardImplicitPackageVersion&gt;`</ph> property and set the version you need.</source>
          <target state="translated">特定バージョンの <ph id="ph1">`NetStandard.Library`</ph> メタパッケージが必要な場合、<ph id="ph2">`&lt;NetStandardImplicitPackageVersion&gt;`</ph> プロパティを使用し、必要なバージョンを設定できます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Default compilation includes in .NET Core projects</source>
          <target state="translated">.NET Core プロジェクトの既定のコンパイルの include</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>With the move to the <bpt id="p1">*</bpt>csproj<ept id="p1">*</ept> format in the latest SDK versions, we've moved the default includes and excludes for compile items and embedded resources to the SDK properties files.</source>
          <target state="translated">最新バージョンの SDK の <bpt id="p1">*</bpt>csproj<ept id="p1">*</ept> 形式に移行すると共に、コンパイル項目と、SDK プロパティ ファイルに埋め込みリソースの既定の include と exclude を SDK プロパティ ファイルに移行しました。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This means that you no longer need to specify these items in your project file.</source>
          <target state="translated">つまり、これらの項目をプロジェクト ファイルに指定する必要はなくなりました。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The main reason for doing this is to reduce the clutter on your project file.</source>
          <target state="translated">これを行う主な理由は、プロジェクト ファイルを見やすくするためです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The defaults that are present in the SDK should cover most common use cases, so there is no need to repeat them in every project that you create.</source>
          <target state="translated">SDK の既定値は、最も一般的な使用例に対応しているので、作成するプロジェクトごとに繰り返す必要はありません。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This leads to smaller project files that are much easier to understand as well as edit by hand, if needed.</source>
          <target state="translated">その結果、プロジェクト ファイルが小さくなり、わかりやすく、編集が必要な場合に編集しやすくなります。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following table shows which element and which globs are both included and excluded in the SDK:</source>
          <target state="translated">次の表は、SDK に含まれる、および除外される要素と glob の一覧です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Include glob</source>
          <target state="translated">含まれる glob</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Exclude glob</source>
          <target state="translated">除外される glob</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Remove glob</source>
          <target state="translated">glob の削除</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Compile</source>
          <target state="translated">Compile</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.cs (or other language extensions)</source>
          <target state="translated"><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.cs (または他の言語拡張機能)</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.user;  <ph id="ph5">\*</ph><ph id="ph6">\*</ph><ph id="ph7">/</ph><ph id="ph8">\*</ph>.<ph id="ph9">\*</ph>proj;  <ph id="ph10">\*</ph><ph id="ph11">\*</ph><ph id="ph12">/</ph><ph id="ph13">\*</ph>.sln;  <ph id="ph14">\*</ph><ph id="ph15">\*</ph><ph id="ph16">/</ph><ph id="ph17">\*</ph>.vssscc</source>
          <target state="translated"><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.user;  <ph id="ph5">\*</ph><ph id="ph6">\*</ph><ph id="ph7">/</ph><ph id="ph8">\*</ph>.<ph id="ph9">\*</ph>proj;  <ph id="ph10">\*</ph><ph id="ph11">\*</ph><ph id="ph12">/</ph><ph id="ph13">\*</ph>.sln;  <ph id="ph14">\*</ph><ph id="ph15">\*</ph><ph id="ph16">/</ph><ph id="ph17">\*</ph>.vssscc</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="translated">N/A</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>EmbeddedResource</source>
          <target state="translated">EmbeddedResource</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.resx</source>
          <target state="translated"><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.resx</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.user; <ph id="ph5">\*</ph><ph id="ph6">\*</ph><ph id="ph7">/</ph><ph id="ph8">\*</ph>.<ph id="ph9">\*</ph>proj; <ph id="ph10">\*</ph><ph id="ph11">\*</ph><ph id="ph12">/</ph><ph id="ph13">\*</ph>.sln; <ph id="ph14">\*</ph><ph id="ph15">\*</ph><ph id="ph16">/</ph><ph id="ph17">\*</ph>.vssscc</source>
          <target state="translated"><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.user; <ph id="ph5">\*</ph><ph id="ph6">\*</ph><ph id="ph7">/</ph><ph id="ph8">\*</ph>.<ph id="ph9">\*</ph>proj; <ph id="ph10">\*</ph><ph id="ph11">\*</ph><ph id="ph12">/</ph><ph id="ph13">\*</ph>.sln; <ph id="ph14">\*</ph><ph id="ph15">\*</ph><ph id="ph16">/</ph><ph id="ph17">\*</ph>.vssscc</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="translated">N/A</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">なし</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.user; <ph id="ph5">\*</ph><ph id="ph6">\*</ph><ph id="ph7">/</ph><ph id="ph8">\*</ph>.<ph id="ph9">\*</ph>proj; <ph id="ph10">\*</ph><ph id="ph11">\*</ph><ph id="ph12">/</ph><ph id="ph13">\*</ph>.sln; <ph id="ph14">\*</ph><ph id="ph15">\*</ph><ph id="ph16">/</ph><ph id="ph17">\*</ph>.vssscc</source>
          <target state="translated"><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.user; <ph id="ph5">\*</ph><ph id="ph6">\*</ph><ph id="ph7">/</ph><ph id="ph8">\*</ph>.<ph id="ph9">\*</ph>proj; <ph id="ph10">\*</ph><ph id="ph11">\*</ph><ph id="ph12">/</ph><ph id="ph13">\*</ph>.sln; <ph id="ph14">\*</ph><ph id="ph15">\*</ph><ph id="ph16">/</ph><ph id="ph17">\*</ph>.vssscc</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- </ph><ph id="ph2">\*</ph><ph id="ph3">\*</ph><ph id="ph4">/</ph><ph id="ph5">\*</ph>.cs; <ph id="ph6">\*</ph><ph id="ph7">\*</ph><ph id="ph8">/</ph><ph id="ph9">\*</ph>.resx</source>
          <target state="translated"><ph id="ph1">- </ph><ph id="ph2">\*</ph><ph id="ph3">\*</ph><ph id="ph4">/</ph><ph id="ph5">\*</ph>.cs; <ph id="ph6">\*</ph><ph id="ph7">\*</ph><ph id="ph8">/</ph><ph id="ph9">\*</ph>.resx</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If you have globs in your project and you try to build it using the newest SDK, you'll get the following error:</source>
          <target state="translated">プロジェクトに glob があり、最新の SDK を使用してビルドしようとすると、次のエラーが発生します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Duplicate Compile items were included.</source>
          <target state="translated">重複するコンパイル項目が含まれていました。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The .NET SDK includes Compile items from your project directory by default.</source>
          <target state="translated">.NET SDK には、既定でプロジェクト ディレクトリのコンパイル項目が含まれています。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can either remove these items from your project file, or set the 'EnableDefaultCompileItems' property to 'false' if you want to explicitly include them in your project file.</source>
          <target state="translated">これらの項目をプロジェクト ファイルから削除するか、プロジェクト ファイルに明示的に含める場合は 'EnableDefaultCompileItems' プロパティを 'false' に設定することができます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In order to get around this error, you can either remove the explicit <ph id="ph1">`Compile`</ph> items that match the ones listed on the previous table, or you can set the <ph id="ph2">`&lt;EnableDefaultCompileItems&gt;`</ph> property to <ph id="ph3">`false`</ph>, like this:</source>
          <target state="translated">このエラーを回避するには、前の表にあるものと一致する明示的な <ph id="ph1">`Compile`</ph> 項目を削除するか、次のように <ph id="ph2">`&lt;EnableDefaultCompileItems&gt;`</ph> プロパティを <ph id="ph3">`false`</ph> に設定します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Setting this property to <ph id="ph1">`false`</ph> will override implicit inclusion and the behavior will revert back to the previous SDKs where you had to specify the default globs in your project.</source>
          <target state="translated">このプロパティを <ph id="ph1">`false`</ph> に設定すると、暗黙的な包含がオーバーライドされ、動作は前の SDK に戻り、プロジェクトに既定の glob を指定する必要が生じます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This change does not modify the main mechanics of other includes.</source>
          <target state="translated">この変更で、他の include の主なしくみは変わりません。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>However, if you wish to specify, for example, some files to get published with your app, you can still use the known mechanisms in <bpt id="p1">*</bpt>csproj<ept id="p1">*</ept> for that (for example, the <ph id="ph1">`&lt;Content&gt;`</ph> element).</source>
          <target state="translated">ただし、たとえばアプリで発行する一部のファイルを指定する場合は、<bpt id="p1">*</bpt>csproj<ept id="p1">*</ept> で既知のしくみ (たとえば <ph id="ph1">`&lt;Content&gt;`</ph> 要素) を使用することができます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Recommendation</source>
          <target state="translated">推奨事項</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>With csproj, we recommend that you remove the default globs from your project and only add globs file paths for those artifacts that your app/library needs for various scenarios (runtime, NuGet packaging, etc.)</source>
          <target state="translated">csproj では、プロジェクトから既定の glob を削除し、多様なシナリオ (ランタイム、NuGet パッケージなど) でアプリまたはライブラリが必要とする成果物の glob ファイルのパスのみを追加することをお勧めします。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Additions</source>
          <target state="translated">追加</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Sdk attribute</source>
          <target state="translated">SDK 属性</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;Project&gt;`</ph> element of the <bpt id="p1">*</bpt>.csproj<ept id="p1">*</ept> file has a new attribute called <ph id="ph2">`Sdk`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>.csproj<ept id="p1">*</ept> ファイルの <ph id="ph1">`&lt;Project&gt;`</ph> 要素には、<ph id="ph2">`Sdk`</ph> という新しい属性があります。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Sdk`</ph> specifies which SDK will be used by the project.</source>
          <target state="translated"><ph id="ph1">`Sdk`</ph> は、プロジェクトで使用される SDK を指定します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The SDK, as the <bpt id="p1">[</bpt>layering document<ept id="p1">](cli-msbuild-architecture.md)</ept> describes, is a set of MSBuild <bpt id="p2">[</bpt>tasks<ept id="p2">](https://docs.microsoft.com/visualstudio/msbuild/msbuild-tasks)</ept> and <bpt id="p3">[</bpt>targets<ept id="p3">](https://docs.microsoft.com/visualstudio/msbuild/msbuild-targets)</ept> that can build .NET Core code.</source>
          <target state="translated"><bpt id="p1">[</bpt>レイヤー化のドキュメント<ept id="p1">](cli-msbuild-architecture.md)</ept>で説明されているように、SDK は、.NET Core コードをビルドできる MSBuild <bpt id="p2">[</bpt>タスク<ept id="p2">](https://docs.microsoft.com/visualstudio/msbuild/msbuild-tasks)</ept>および<bpt id="p3">[</bpt>ターゲット<ept id="p3">](https://docs.microsoft.com/visualstudio/msbuild/msbuild-targets)</ept>のセットです。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>We ship two main SDKs with the .NET Core tools:</source>
          <target state="translated">.NET Core ツールには主に&amp;2; つの SDK が付属しています。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The .NET Core SDK with the ID of <ph id="ph1">`Microsoft.NET.Sdk`</ph></source>
          <target state="translated">ID が <ph id="ph1">`Microsoft.NET.Sdk`</ph> の .NET Core SDK</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The .NET Core web SDK with the ID of <ph id="ph1">`Microsoft.NET.Sdk.Web`</ph></source>
          <target state="translated">ID が <ph id="ph1">`Microsoft.NET.Sdk.Web`</ph> の .NET Core Web SDK</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You need to have the <ph id="ph1">`Sdk`</ph> attribute set to one of those IDs on the <ph id="ph2">`&lt;Project&gt;`</ph> element in order to use the .NET Core tools and build your code.</source>
          <target state="translated">.NET Core ツールを使用し、コードをビルドするには、<ph id="ph1">`Sdk`</ph> 属性を <ph id="ph2">`&lt;Project&gt;`</ph> 要素の ID のいずれかに設定する必要があります。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>PackageReference</source>
          <target state="translated">PackageReference</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Item that specifies a NuGet dependency in the project.</source>
          <target state="translated">プロジェクトの NuGet の依存関係を指定する項目。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Include`</ph> attribute specifies the package ID.</source>
          <target state="translated"><ph id="ph1">`Include`</ph> 属性は、パッケージ ID を指定します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">バージョン</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Version`</ph> specifies the version of the package to restore.</source>
          <target state="translated"><ph id="ph1">`Version`</ph> は、復元するパッケージのバージョンを指定します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The element respects the rules of the NuGet versioning scheme.</source>
          <target state="translated">要素は、NuGet のバージョン管理スキームの規則に従います。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>IncludeAssets, ExcludeAssets and PrivateAssets</source>
          <target state="translated">IncludeAssets、ExcludeAssets、PrivateAssets</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`IncludeAssets`</ph> attribute specifies what assets belonging to the package specified by <ph id="ph2">`&lt;PackageReference&gt;`</ph> should be consumed.</source>
          <target state="translated"><ph id="ph1">`IncludeAssets`</ph> 属性は、<ph id="ph2">`&lt;PackageReference&gt;`</ph> で指定されているパッケージに属するアセットのうち、使う必要があるものを指定します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ExcludeAssets`</ph> attribute specifies what assets belonging to the package specified by <ph id="ph2">`&lt;PackageReference&gt;`</ph> should not be consumed.</source>
          <target state="translated"><ph id="ph1">`ExcludeAssets`</ph> 属性は、<ph id="ph2">`&lt;PackageReference&gt;`</ph> で指定されているパッケージに属するアセットのうち、使ってはならないものを指定します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`PrivateAssets`</ph> attribute specifies what assets belonging to the package specified by <ph id="ph2">`&lt;PackageReference&gt;`</ph> should be consumed but that they should not flow to the next project.</source>
          <target state="translated"><ph id="ph1">`PrivateAssets`</ph> 属性は、<ph id="ph2">`&lt;PackageReference&gt;`</ph> で指定されているパッケージに属するアセットで、使う必要はあるが、次のプロジェクトに渡してはならないものを指定します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`PrivateAssets`</ph> is equivalent to the <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept><ph id="ph2">/</ph><bpt id="p2">*</bpt>xproj<ept id="p2">*</ept> <ph id="ph3">`SuppressParent`</ph> element.</source>
          <target state="translated"><ph id="ph1">`PrivateAssets`</ph> は <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept><ph id="ph2">/</ph><bpt id="p2">*</bpt>xproj<ept id="p2">*</ept> <ph id="ph3">`SuppressParent`</ph> 要素と同等です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>These attributes can contain one or more of the following items:</source>
          <target state="translated">これらの属性には、次の項目を&amp;1; つまたは複数含めることができます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Compile`</ph> – the contents of the lib folder are available to compile against.</source>
          <target state="translated"><ph id="ph1">`Compile`</ph> - コンパイルで使用できる lib フォルダーの内容です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Runtime`</ph> – the contents of the runtime folder are distributed.</source>
          <target state="translated"><ph id="ph1">`Runtime`</ph> - 配布する runtime フォルダーの内容です。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ContentFiles`</ph> – the contents of the <bpt id="p1">*</bpt>contentfiles<ept id="p1">*</ept> folder are used.</source>
          <target state="translated"><ph id="ph1">`ContentFiles`</ph> - 使用する <bpt id="p1">*</bpt>contentfiles<ept id="p1">*</ept> フォルダーの内容です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Build`</ph> – the props/targets in the build folder are used.</source>
          <target state="translated"><ph id="ph1">`Build`</ph> - 使用する build フォルダーのプロパティ/ターゲットです。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Native`</ph> – the contents from native assets are copied to the output folder for runtime.</source>
          <target state="translated"><ph id="ph1">`Native`</ph> - ランタイムの output フォルダーにコピーするネイティブ アセットの内容です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Analyzers`</ph> – the analyzers are used.</source>
          <target state="translated"><ph id="ph1">`Analyzers`</ph> - アナライザーが使用されます。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Alternatively, the attribute can contain:</source>
          <target state="translated">代わりに、次の値を属性に含めることもできます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`None`</ph> – none of the assets are used.</source>
          <target state="translated"><ph id="ph1">`None`</ph> - いずれのアセットも使用されません。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`All`</ph> – all assets are used.</source>
          <target state="translated"><ph id="ph1">`All`</ph> - すべてのアセットが使用されます。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>DotnetCliToolReference</source>
          <target state="translated">DotnetCliToolReference</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`&lt;DotnetCliToolReference&gt;`</ph> item element specifies the CLI tool that the user wants to restore in the context of the project.</source>
          <target state="translated"><ph id="ph1">`&lt;DotnetCliToolReference&gt;`</ph> 項目要素は、プロジェクトのコンテキストでユーザーが復元を望む CLI ツールを指定します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>It's a replacement for the <ph id="ph1">`tools`</ph> node in <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>.</source>
          <target state="translated"><bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> の <ph id="ph1">`tools`</ph> ノードに代わるものです。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">バージョン</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Version`</ph> specifies the version of the package to restore.</source>
          <target state="translated"><ph id="ph1">`Version`</ph> は、復元するパッケージのバージョンを指定します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The attribute respect the rules of the NuGet versioning scheme.</source>
          <target state="translated">この属性は、NuGet のバージョン管理スキームの規則に従います。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>RuntimeIdentifiers</source>
          <target state="translated">RuntimeIdentifiers</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;RuntimeIdentifiers&gt;`</ph> element lets you specify a semicolon-delimited list of <bpt id="p1">[</bpt>Runtime Identifiers (RIDs)<ept id="p1">](../rid-catalog.md)</ept> for the project.</source>
          <target state="translated"><ph id="ph1">`&lt;RuntimeIdentifiers&gt;`</ph> 要素では、プロジェクトの<bpt id="p1">[</bpt>ランタイム識別子 (RID)<ept id="p1">](../rid-catalog.md)</ept> のセミコロン区切りリストを指定できます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>RIDs enable publishing a self-contained deployments.</source>
          <target state="translated">RID により、自己完結型の展開を発行できます。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>RuntimeIdentifier</source>
          <target state="translated">RuntimeIdentifier</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;RuntimeIdentifier&gt;`</ph> element allows you to specify only one <bpt id="p1">[</bpt>Runtime Identifier (RID)<ept id="p1">](../rid-catalog.md)</ept> for the project.</source>
          <target state="translated"><ph id="ph1">`&lt;RuntimeIdentifier&gt;`</ph> 要素では、プロジェクトの<bpt id="p1">[</bpt>ランタイム識別子 (RID)<ept id="p1">](../rid-catalog.md)</ept> を&amp;1; つだけ指定できます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>RIDs enable publishing a self-contained deployment.</source>
          <target state="translated">RID により、自己完結型の展開を発行できます。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>PackageTargetFallback</source>
          <target state="translated">PackageTargetFallback</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;PackageTargetFallback&gt;`</ph> element allows you to specify a set of compatible targets to be used when restoring packages.</source>
          <target state="translated"><ph id="ph1">`&lt;PackageTargetFallback&gt;`</ph> 要素では、パッケージの復元時に使用する、互換性のある一連のターゲットを指定できます。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>It's designed to allow packages that use the dotnet <bpt id="p1">[</bpt>TxM (Target x Moniker)<ept id="p1">](https://docs.microsoft.com/nuget/schema/target-frameworks)</ept> to operate with packages that don't declare a dotnet TxM.</source>
          <target state="translated">dotnet <bpt id="p1">[</bpt>TxM (Target x Moniker)<ept id="p1">](https://docs.microsoft.com/nuget/schema/target-frameworks)</ept> を使用するパッケージに、dotnet TxM を宣言しないパッケージで動作することを許可するように設計されています。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If your project uses the dotnet TxM, then all the packages it depends on must also have a dotnet TxM, unless you add the <ph id="ph1">`&lt;PackageTargetFallback&gt;`</ph> to your project in order to allow non-dotnet platforms to be compatible with dotnet.</source>
          <target state="translated">プロジェクトで dotnet TxM を使用せず、依存するすべてのパッケージに dotnet TxM を与える必要がある場合、非 dotnet プラットフォームを dotnet 対応にするためにプロジェクトに <ph id="ph1">`&lt;PackageTargetFallback&gt;`</ph> を追加します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The following example provides the fallbacks for all targets in your project:</source>
          <target state="translated">次の例では、プロジェクトのすべてのターゲットにフォールバックを提供しています。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The following example specifies the fallbacks only for the <ph id="ph1">`netcoreapp1.0`</ph> target:</source>
          <target state="translated">次の例では、<ph id="ph1">`netcoreapp1.0`</ph> ターゲットにのみフォールバックを指定しています。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>NuGet metadata properties</source>
          <target state="translated">NuGet メタデータ プロパティ</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>With the move to MSbuild, we have moved the input metadata that is used when packing a NuGet package from <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> to <bpt id="p2">*</bpt>.csproj<ept id="p2">*</ept> files.</source>
          <target state="translated">MSbuild への移行に伴い、<bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> ファイルから <bpt id="p2">*</bpt>csproj<ept id="p2">*</ept> ファイルに NuGet パッケージをパックするときに使用される入力メタデータを移動しました。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The inputs are MSBuild properties so they have to go within a <ph id="ph1">`&lt;PropertyGroup&gt;`</ph> group.</source>
          <target state="translated">入力は MSBuild プロパティなので、<ph id="ph1">`&lt;PropertyGroup&gt;`</ph> グループ内で行う必要があります。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The following is the list of properties that are used as inputs to the packing process when using the <ph id="ph1">`dotnet pack`</ph> command or the <ph id="ph2">`Pack`</ph> MSBuild target that is part of the SDK.</source>
          <target state="translated">次に示すのは、<ph id="ph1">`dotnet pack`</ph> コマンドまたは SDK の一部である <ph id="ph2">`Pack`</ph> MSBuild ターゲットを使用するときに、パッキング プロセスへの入力として使用されるプロパティの一覧です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>IsPackable</source>
          <target state="translated">IsPackable</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A Boolean value that specifies whether the project can be packed.</source>
          <target state="translated">プロジェクトをパックできるかどうかを示すブール値。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">`true`</ph> です。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>PackageVersion</source>
          <target state="translated">PackageVersion</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Specifies the version that the resulting package will have.</source>
          <target state="translated">結果のパッケージのバージョンを指定します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Accepts all forms of NuGet version string.</source>
          <target state="translated">すべてのフォームの NuGet バージョン文字列を受け入れます。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Default is the value of <ph id="ph1">`$(Version)`</ph>, that is, of the property <ph id="ph2">`Version`</ph> in the project.</source>
          <target state="translated">既定値は <ph id="ph1">`$(Version)`</ph> です。つまり、プロジェクトのプロパティ <ph id="ph2">`Version`</ph> の値です。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>PackageId</source>
          <target state="translated">PackageId</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Specifies the name for the resulting package.</source>
          <target state="translated">結果のパッケージの名前を指定します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>If not specified, the <ph id="ph1">`pack`</ph> operation will default to using the <ph id="ph2">`AssemblyName`</ph> or directory name as the name of the package.</source>
          <target state="translated">指定しない場合、<ph id="ph1">`pack`</ph> 操作の既定では、<ph id="ph2">`AssemblyName`</ph> またはディレクトリ名をパッケージ名として使用します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">タイトル</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A human-friendly title of the package, typically used in UI displays as on nuget.org and the Package Manager in Visual Studio.</source>
          <target state="translated">人が読みやすいパッケージのタイトル。通常、nuget.org と、Visual Studio のパッケージ マネージャーの UI 画面で使用されます。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If not specified, the package ID is used instead.</source>
          <target state="translated">指定しない場合、パッケージ ID が代わりに使用されます。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Authors</source>
          <target state="translated">作成者</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A semicolon-separated list of packages authors, matching the profile names on nuget.org.</source>
          <target state="translated">nuget.org のプロファイル名と一致するパッケージ作成者をセミコロンで区切った一覧。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>These are displayed in the NuGet Gallery on nuget.org and are used to cross-reference packages by the same authors.</source>
          <target state="translated">これらは nuget.org の NuGet ギャラリーに表示され、同じ作成者によるパッケージの相互参照に使用されます。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A long description of the package for UI display.</source>
          <target state="translated">UI 画面用のパッケージの長い説明。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Copyright</source>
          <target state="translated">Copyright</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Copyright details for the package.</source>
          <target state="translated">パッケージの著作権の詳細。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>PackageRequireLicenseAcceptance</source>
          <target state="translated">PackageRequireLicenseAcceptance</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A Boolean value that specifies whether the client must prompt the consumer to accept the package license before installing the package.</source>
          <target state="translated">クライアントがユーザーに対して、パッケージのインストール前にパッケージ ライセンスに同意することを必須にするかどうかを示すブール値。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">`false`</ph> です。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>PackageLicenseUrl</source>
          <target state="translated">PackageLicenseUrl</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>An URL to the license that is applicable to the package.</source>
          <target state="translated">パッケージに適用されるライセンスの URL。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>PackageProjectUrl</source>
          <target state="translated">PackageProjectUrl</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A URL for the package's home page, often shown in UI displays as well as nuget.org.</source>
          <target state="translated">パッケージのホーム ページの URL。多くの場合、UI 画面と nuget.org に表示されます。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>PackageIconUrl</source>
          <target state="translated">PackageIconUrl</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A URL for a 64x64 image with transparent background to use as the icon for the package in UI display.</source>
          <target state="translated">UI 画面のパッケージのアイコンとして使用する背景が透明な 64x64 の画像の URL。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>PackageReleaseNotes</source>
          <target state="translated">PackageReleaseNotes</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Release notes for the package.</source>
          <target state="translated">パッケージのリリース ノート。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>PackageTags</source>
          <target state="translated">PackageTags</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>A semicolon-delimited list of tags that designates the package.</source>
          <target state="translated">パッケージを指定するタグのセミコロン区切りの一覧。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>PackageOutputPath</source>
          <target state="translated">PackageOutputPath</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Determines the output path in which the packed package will be dropped.</source>
          <target state="translated">パックされたパッケージをドロップする出力パスを指定します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Default is <ph id="ph1">`$(OutputPath)`</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">`$(OutputPath)`</ph> です。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>IncludeSymbols</source>
          <target state="translated">IncludeSymbols</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>This Boolean value indicates whether the package should create an additional symbols package when the project is packed.</source>
          <target state="translated">このブール値は、プロジェクトをパックするときに、パッケージが追加のシンボル パッケージを作成するかどうかを指定します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>This package will have a <bpt id="p1">*</bpt>.symbols.nupkg<ept id="p1">*</ept> extension and will copy the PDB files along with the DLL and other output files.</source>
          <target state="translated">このパッケージの拡張子は <bpt id="p1">*</bpt>.symbols.nupkg<ept id="p1">*</ept> になります。DLL や他の出力ファイルと共に PDF ファイルがコピーされます。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>IncludeSource</source>
          <target state="translated">IncludeSource</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This Boolean value indicates whether the pack process should create a source package.</source>
          <target state="translated">このブール値は、パック プロセスでソース パッケージを作成するかどうかを示します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The source package contains the library's source code as well as PDB files.</source>
          <target state="translated">ソース パッケージには、ライブラリのソース コードと PDB ファイルが含まれます。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Source files are put under the <ph id="ph1">`src/ProjectName`</ph> directory in the resulting package file.</source>
          <target state="translated">ソース ファイルは、結果のパッケージ ファイルの <ph id="ph1">`src/ProjectName`</ph> ディレクトリに置かれます。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>IsTool</source>
          <target state="translated">IsTool</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Specifies whether all output files are copied to the <bpt id="p1">*</bpt>tools<ept id="p1">*</ept> folder instead of the <bpt id="p2">*</bpt>lib<ept id="p2">*</ept> folder.</source>
          <target state="translated">すべての出力ファイルを <bpt id="p2">*</bpt>lib<ept id="p2">*</ept> フォルダーではなく <bpt id="p1">*</bpt>tools<ept id="p1">*</ept> フォルダーにコピーするかどうかを指定します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Note that this is different from a <ph id="ph1">`DotNetCliTool`</ph> which is specified by setting the <ph id="ph2">`PackageType`</ph> in the <bpt id="p1">*</bpt>.csproj<ept id="p1">*</ept> file.</source>
          <target state="translated"><bpt id="p1">*</bpt>.csproj<ept id="p1">*</ept> ファイルに <ph id="ph2">`PackageType`</ph> を設定することで指定される <ph id="ph1">`DotNetCliTool`</ph> とは異なります。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>RepositoryUrl</source>
          <target state="translated">RepositoryUrl</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Specifies the URL for the repository where the source code for the package resides and/or from which it's being built.</source>
          <target state="translated">パッケージのソース コードがある、またはビルド元のリポジトリの URL を指定します。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>RepositoryType</source>
          <target state="translated">RepositoryType</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Specifies the type of the repository.</source>
          <target state="translated">リポジトリの種類を指定します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Default is "git".</source>
          <target state="translated">既定値は "git" です。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>NoPackageAnalysis</source>
          <target state="translated">NoPackageAnalysis</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Specifies that pack should not run package analysis after building the package.</source>
          <target state="translated">パッケージのビルド後に、パックでパッケージの分析を実行しないことを指定します。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>MinClientVersion</source>
          <target state="translated">MinClientVersion</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Specifies the minimum version of the NuGet client that can install this package, enforced by nuget.exe and the Visual Studio Package Manager.</source>
          <target state="translated">nuget.exe および Visual Studio パッケージ マネージャーで強制する、このパッケージをインストールできる NuGet クライアントの最小バージョンを指定します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>IncludeBuildOutput</source>
          <target state="translated">IncludeBuildOutput</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This Boolean values specifies whether the build output assemblies should be packed into the <bpt id="p1">*</bpt>.nupkg<ept id="p1">*</ept> file or not.</source>
          <target state="translated">このブール値は、ビルド出力アセンブリを <bpt id="p1">*</bpt>.nupkg<ept id="p1">*</ept> ファイルにパックするかどうかを指定します。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>IncludeContentInPack</source>
          <target state="translated">IncludeContentInPack</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>This Boolean value specifies whether any items that have a type of <ph id="ph1">`Content`</ph> will be included in the resulting package automatically.</source>
          <target state="translated">このブール値は、種類が <ph id="ph1">`Content`</ph> の項目を結果のパッケージに自動的に含めるかどうかを指定します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">`true`</ph> です。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>BuildOutputTargetFolder</source>
          <target state="translated">BuildOutputTargetFolder</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Specifies the folder where to place the output assemblies..</source>
          <target state="translated">出力アセンブリを配置するフォルダーを指定します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The output assemblies (and other output files) are copied into their respective framework folders.</source>
          <target state="translated">出力アセンブリ (および他の出力ファイル) は、各フレームワーク フォルダーにコピーされます。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>ContentTargetFolders</source>
          <target state="translated">ContentTargetFolders</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>This property specifies the default location of where all the content files should go if <ph id="ph1">`PackagePath`</ph> is not specified for them.</source>
          <target state="translated">このプロパティには、<ph id="ph1">`PackagePath`</ph> が指定されていない場合に、すべてのコンテンツ ファイルを配置する既定の場所を指定します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The default value is "content;contentFiles".</source>
          <target state="translated">既定値は "content;contentFiles" です。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>NuspecFile</source>
          <target state="translated">NuspecFile</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Relative or absolute path to the <bpt id="p1">*</bpt>.nuspec<ept id="p1">*</ept> file being used for packing.</source>
          <target state="translated">パックに使用する <bpt id="p1">*</bpt>.nuspec<ept id="p1">*</ept> ファイルの相対パスまたは絶対パス。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">*</bpt>.nuspec<ept id="p1">*</ept> file is specified, it's used <bpt id="p2">**</bpt>exclusively<ept id="p2">**</ept> for packaging information and any information in the projects is not used.</source>
          <target state="translated"><bpt id="p1">*</bpt>.nuspec<ept id="p1">*</ept> ファイルを指定すると、情報のパッケージに<bpt id="p2">**</bpt>のみ<ept id="p2">**</ept>使用され、プロジェクト内の情報は使用されません。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>NuspecBasePath</source>
          <target state="translated">NuspecBasePath</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Base path for the <bpt id="p1">*</bpt>.nuspec<ept id="p1">*</ept> file.</source>
          <target state="translated"><bpt id="p1">*</bpt>.nuspec<ept id="p1">*</ept> ファイルのベース パス。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>NuspecProperties</source>
          <target state="translated">NuspecProperties</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Semicolon separated list of key=value pairs.</source>
          <target state="translated">キー=値ペアのセミコロン区切りの一覧。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>