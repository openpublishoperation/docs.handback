<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">30e53c38bd58e15668e01f2af79defb0a0918192</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\collections\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6fab281fac11b1b446bb73732ce38268e1d88713</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd9b0d3a8b6a2e994920cdb86021b6edebb9638a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Collections and Data Structures</source>
          <target state="translated">コレクションとデータ構造体</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Collections and Data Structures</source>
          <target state="translated">コレクションとデータ構造体</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Collections and Data Structures</source>
          <target state="translated">コレクションとデータ構造体</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Similar data can often be handled more efficiently when stored and manipulated as a collection.</source>
          <target state="translated">多くの場合、類似するデータはコレクションとして格納および操作すると、より効率的に処理できます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>System.Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept> class or the classes in the <bpt id="p2">[</bpt>System.Collections<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept>, <bpt id="p3">[</bpt>System.Collections.Generic<ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic)</ept>, or <bpt id="p4">[</bpt>System.Collections.Concurrent<ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept> namespaces to add, remove, and modify either individual elements or a range of elements in a collection.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept> クラス、または <bpt id="p2">[</bpt>System.Collections<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept>、 <bpt id="p3">[</bpt>System.Collections.Generic<ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic)</ept>、<bpt id="p4">[</bpt>System.Collections.Concurrent<ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept> の各名前空間のクラスを使用して、コレクションの個々の要素または一定の範囲の要素を追加、削除、または変更することができます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>There are two main types of collections; generic collections and non-generic collections.</source>
          <target state="translated">主要なコレクションの型として、ジェネリック コレクションと非ジェネリック コレクションの&amp;2; つがあります。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Generic collections are type-safe at compile time.</source>
          <target state="translated">ジェネリック コレクションはコンパイル時にタイプ セーフです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Because of this, generic collections typically offer better performance.</source>
          <target state="translated">このため、通常、ジェネリック コレクションの方がパフォーマンスが高くなります。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Generic collections accept a type parameter when they are constructed and do not require that you cast to and from the <bpt id="p1">[</bpt>Object<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Object)</ept> type when you add or remove items from the collection.</source>
          <target state="translated">ジェネリック コレクションは構築時に型パラメーターを受け取りますが、項目をコレクションに追加またはコレクションから削除するときに <bpt id="p1">[</bpt>Object<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Object)</ept> 型との間でキャストする必要はありません。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Non-generic collections store items as <bpt id="p1">[</bpt>Object<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Object)</ept> and require casting.</source>
          <target state="translated">非ジェネリック コレクションでは、項目が <bpt id="p1">[</bpt>Object<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Object)</ept> として項目が保存され、キャストが必要です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You may see non-generic collections in older code.</source>
          <target state="translated">以前のコードには非ジェネリック コレクションが含まれている場合があります。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The collections in the <bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept> namespace provide efficient thread-safe operations for accessing collection items from multiple threads.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept> 名前空間のコレクションによって、複数のスレッドからコレクション項目にアクセスするための効率的なスレッド セーフ操作が可能になります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Common collection features</source>
          <target state="translated">一般的なコレクションの機能</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>All collections provide methods for adding, removing or finding items in the collection.</source>
          <target state="translated">すべてのコレクションに、コレクション内の項目を追加、削除、または検索するためのメソッドが用意されています。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In addition, all collections that directly or indirectly implement the <bpt id="p1">[</bpt>ICollection<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ICollection)</ept> interface or the <bpt id="p2">[</bpt>ICollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.ICollection-1)</ept> interface share these features:</source>
          <target state="translated">また、<bpt id="p1">[</bpt>ICollection<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ICollection)</ept> インターフェイスまたは <bpt id="p2">[</bpt>ICollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.ICollection-1)</ept> インターフェイスを直接または間接的に実装するすべてのコレクションで、次の機能を共有しています。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>The ability to enumerate the collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>コレクションを列挙する機能<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>.NET Framework collections either implement <bpt id="p1">[</bpt>System.Collections.IEnumerable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IEnumerable)</ept> or <bpt id="p2">[</bpt>System.Collections.Generic.IEnumerable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IEnumerable-1)</ept> to enable the collection to be iterated through.</source>
          <target state="translated">.NET Framework コレクションは <bpt id="p1">[</bpt>System.Collections.IEnumerable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IEnumerable)</ept> または <bpt id="p2">[</bpt>System.Collections.Generic.IEnumerable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IEnumerable-1)</ept> のどちらかを実装して、コレクションの反復を可能にします。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An enumerator can be thought of as a movable pointer to any element in the collection.</source>
          <target state="translated">列挙子は、コレクション内の任意の要素への移動可能なポインターと考えることができます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach, in`</ph> statement (C#) uses the enumerator exposed by the <ph id="ph2">`GetEnumerator`</ph> method and hides the complexity of manipulating the enumerator.</source>
          <target state="translated"><ph id="ph1">`foreach, in`</ph> ステートメント (C#) では、<ph id="ph2">`GetEnumerator`</ph> メソッドによって公開される列挙子を使用して、列挙子の操作の複雑さを隠しています。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In addition, any collection that implements <bpt id="p1">[</bpt>System.Collections.Generic.IEnumerable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IEnumerable-1)</ept> is considered a queryable type and can be queried with LINQ.</source>
          <target state="translated">また、<bpt id="p1">[</bpt>System.Collections.Generic.IEnumerable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IEnumerable-1)</ept> を実装するコレクションはいずれもクエリ可能型と見なされ、LINQ で照会できます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>LINQ queries provide a common pattern for accessing data.</source>
          <target state="translated">LINQ クエリでは、データにアクセスするための共通パターンが提供されます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>They are typically more concise and readable than standard for each loops, and provide filtering, ordering and grouping capabilities.</source>
          <target state="translated">通常、これらは、標準のループよりも簡潔で読みやすく、フィルター処理、並べ替え、およびグループ化の機能を利用できます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>LINQ queries can also improve performance.</source>
          <target state="translated">さらに、LINQ クエリによってパフォーマンスを向上させることができます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>The ability to copy the collection contents to an array<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>コレクションの内容を配列にコピーする機能<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>All collections can be copied to an array using the <ph id="ph1">`CopyTo`</ph> method; however, the order of the elements in the new array is based on the sequence in which the enumerator returns them.</source>
          <target state="translated"><ph id="ph1">`CopyTo`</ph> メソッドを使用してすべてのコレクションを配列にコピーできます。ただし、新しい配列の要素の順序は、列挙子が返す順序に基づきます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The resulting array is always one-dimensional with a lower bound of zero.</source>
          <target state="translated">結果の配列は、常に下限がゼロの&amp;1; 次元です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In addition, many collection classes contain the following features:</source>
          <target state="translated">また、多くのコレクション クラスに次の機能が含まれています。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Capacity and Count properties<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>容量とカウントのプロパティ<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The capacity of a collection is the number of elements it can contain.</source>
          <target state="translated">コレクションの容量とは、そこに含むことのできる要素の数です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The count of a collection is the number of elements it actually contains.</source>
          <target state="translated">コレクションのカウントとは、実際に含まれている要素の数です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Some collections hide the capacity or the count or both.</source>
          <target state="translated">コレクションによっては、容量またはカウント、あるいはその両方を内部で処理する場合があります。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Most collections automatically expand in capacity when the current capacity is reached.</source>
          <target state="translated">ほとんどのコレクションで、現在の容量に達すると自動的に容量が拡張されます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The memory is reallocated, and the elements are copied from the old collection to the new one.</source>
          <target state="translated">メモリが再割り当てされ、要素は古いコレクションから新しいコレクションにコピーされます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This reduces the code required to use the collection; however, the performance of the collection might be negatively affected.</source>
          <target state="translated">これにより、コレクションを使用するために必要なコードが削減されます。ただし、コレクションのパフォーマンスに悪影響を及ぼす可能性があります。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, for <bpt id="p1">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept>, if <ph id="ph3">`Count`</ph> is less than <ph id="ph4">`Capacity`</ph>, adding an item is an O(1) operation.</source>
          <target state="translated">たとえば、<bpt id="p1">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> では、<ph id="ph3">`Count`</ph> が <ph id="ph4">`Capacity`</ph> 未満の場合、項目の追加は O(1) 操作になります。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the capacity needs to be increased to accommodate the new element, adding an item becomes an O(n) operation, where n is <ph id="ph1">`Count`</ph>.</source>
          <target state="translated">容量を増やして新しい要素を格納する必要がある場合、項目の追加は O(n) 操作になります。ここで、n は <ph id="ph1">`Count`</ph> です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The best way to avoid poor performance caused by multiple reallocations is to set the initial capacity to be the estimated size of the collection.</source>
          <target state="translated">複数の再割り当てによるパフォーマンスの低下を回避するには、初期容量をコレクションの見積もりサイズに設定しておくことが最善の方法です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>BitArray<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.BitArray)</ept> is a special case; its capacity is the same as its length, which is the same as its count.</source>
          <target state="translated"><bpt id="p1">[</bpt>BitArray<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.BitArray)</ept> は特殊なケースで、その容量はその長さと同じで、長さはそのカウントと同じです。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>A consistent lower bound<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>一貫した下限<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The lower bound of a collection is the index of its first element.</source>
          <target state="translated">コレクションの下限とは、最初の要素のインデックスです。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>All indexed collections in the <bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept> namespaces have a lower bound of zero, meaning they are 0-indexed.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept> 名前空間のすべてのインデックス付きコレクションの下限がゼロです。つまり、インデックスがゼロから始まります。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept> has a lower bound of zero by default, but a different lower bound can be defined when creating an instance of the <ph id="ph1">`Array`</ph> class using <ph id="ph2">`Array.CreateInstance`</ph>.</source>
          <target state="translated"><bpt id="p1">[</bpt>Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept> の下限は既定でゼロですが、<ph id="ph2">`Array.CreateInstance`</ph> を使用して <ph id="ph1">`Array`</ph> クラスのインスタンスを作成する場合には、別の下限を定義できます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Synchronization for access from multiple threads<ept id="p1">**</ept> (<bpt id="p2">[</bpt>System.Collections<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept> classes only).</source>
          <target state="translated"><bpt id="p1">**</bpt>複数のスレッドからのアクセスの同期<ept id="p1">**</ept> (<bpt id="p2">[</bpt>System.Collections<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept> クラスのみ)。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Non-generic collection types in the <bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept> namespace provide some thread safety with synchronization; typically exposed through the <ph id="ph1">`SyncRoot`</ph> and <ph id="ph2">`IsSynchronized`</ph> members.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept> 名前空間の非ジェネリック コレクション型では、同期によるスレッド セーフが提供され、通常、<ph id="ph1">`SyncRoot`</ph> メンバーと <ph id="ph2">`IsSynchronized`</ph> メンバーを介して公開されます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>These collections are not thread-safe by default.</source>
          <target state="translated">既定では、これらのコレクションはスレッド セーフではありません。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you require scalable and efficient multi-threaded access to a collection, use one of the classes in the <bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept> namespace or consider using an immutable collection.</source>
          <target state="translated">拡張性が高く効率的な、コレクションへのマルチスレッド アクセスが必要な場合は、<bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept> 名前空間のいずれかのクラスを使用するか、変更できないコレクションを使用することを検討します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Thread-Safe Collections<ept id="p1">](threadsafe/index.md)</ept>.</source>
          <target state="translated">詳しくは、「<bpt id="p1">[</bpt>スレッド セーフなコレクション<ept id="p1">](threadsafe/index.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Choosing a collection</source>
          <target state="translated">コレクションの選択</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In general, you should use generic collections.</source>
          <target state="translated">通常は、ジェネリック コレクションを使用します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following table describes some common collection scenarios and the collection classes you can use for those scenarios.</source>
          <target state="translated">次の表では、一般的なコレクションのシナリオとこれらのシナリオに使用できるコレクション クラスについて説明します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If you are new to generic collections, this table will help you choose the generic collection that works the best for your task.</source>
          <target state="translated">ジェネリック コレクションに対する知識がない場合、このテーブルは、タスクに最適なジェネリック コレクションを選択するのに役立ちます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>I want to…</source>
          <target state="translated">やりたいこと</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Generic collection option(s)</source>
          <target state="translated">ジェネリック コレクションのオプション</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Non-generic collection option(s)</source>
          <target state="translated">非ジェネリック コレクションのオプション</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Store items as key/value pairs for quick look-up by key</source>
          <target state="translated">キーによるクイック検索用のキー/値のペアとして項目を保存する</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic.Dictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic.Dictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hashtable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Hashtable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Access items by index</source>
          <target state="translated">インデックスで項目にアクセスする</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic.List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic.List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept>, <bpt id="p2">[</bpt>System.Collections.ArrayList<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ArrayList)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept>, <bpt id="p2">[</bpt>System.Collections.ArrayList<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ArrayList)</ept></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Use items first-in-first-out (FIFO)</source>
          <target state="translated">先入れ先出し (FIFO) で項目を使用する</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic.Queue<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Queue-1)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic.Queue<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Queue-1)</ept></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Queue<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Queue)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Queue<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Queue)</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Use data Last-In-First-Out (LIFO)</source>
          <target state="translated">後入れ先出し (LIFO) でデータを使用する</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic.Stack<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Stack-1)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic.Stack<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Stack-1)</ept></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Stack<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Stack)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Stack<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Stack)</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Access items sequentially</source>
          <target state="translated">項目に順次アクセスする</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic.LinkedList<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.LinkedList-1)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic.LinkedList<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.LinkedList-1)</ept></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>No recommendation</source>
          <target state="translated">推奨しません</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Receive notifications when items are removed or added to the collection.</source>
          <target state="translated">項目がコレクションから削除またはコレクションに追加されるときに通知を受け取る。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>(implements <bpt id="p1">[</bpt>INotifyPropertyChanged<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.ComponentModel.INotifyPropertyChanged)</ept> and <bpt id="p2">[</bpt>INotifyCollectionChanged<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.INotifyCollectionChanged)</ept>)</source>
          <target state="translated">(<bpt id="p1">[</bpt>INotifyPropertyChanged<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.ComponentModel.INotifyPropertyChanged)</ept> および <bpt id="p2">[</bpt>INotifyCollectionChanged<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.INotifyCollectionChanged)</ept> を実装)</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.ObjectModel.ObservableCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.ObservableCollection-1)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.ObjectModel.ObservableCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.ObservableCollection-1)</ept></target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>No recommendation</source>
          <target state="translated">推奨しません</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Use a sorted collection</source>
          <target state="translated">Sorted コレクションを使用する</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic.SortedList<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic.SortedList<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept></target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.SortedList<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.SortedList)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.SortedList<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.SortedList)</ept></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Manage efficient storage and access of unique elements</source>
          <target state="translated">一意の要素の効率的な格納とアクセスを管理する</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic.HashSet<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.HashSet-1)</ept>, <bpt id="p2">[</bpt>System.Collections.Generic.SortedSet<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedSet-1)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic.HashSet<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.HashSet-1)</ept>, <bpt id="p2">[</bpt>System.Collections.Generic.SortedSet<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedSet-1)</ept></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>No recommendation</source>
          <target state="translated">推奨しません</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Related Topics</source>
          <target state="translated">関連トピック</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">タイトル</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Selecting a Collection Class<ept id="p1">](selecting-a-collection-class.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>コレクション クラスの選択<ept id="p1">](selecting-a-collection-class.md)</ept></target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Describes the different collections and helps you select one for your scenario.</source>
          <target state="translated">さまざまなコレクションについて説明し、いずれかのシナリオを選択できるよう支援します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Commonly Used Collection Types<ept id="p1">](commonly-used-collection-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>一般的に使用されるコレクション型<ept id="p1">](commonly-used-collection-types.md)</ept></target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Describes commonly used generic and nongeneric collection types such as <bpt id="p1">[</bpt>System.Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept>, <bpt id="p2">[</bpt>System.Collections.Generic.List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept>, and <bpt id="p3">[</bpt>System.Collections.Generic.Dictionary<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept>、<bpt id="p2">[</bpt>System.Collections.Generic.List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept>、<bpt id="p3">[</bpt>System.Collections.Generic.Dictionary<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept> などの、一般的に使用されるジェネリックおよび非ジェネリックのコレクション型について説明します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>When to Use Generic Collections<ept id="p1">](when-to-use-generic-collections.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>ジェネリック コレクションの使用に適した状況<ept id="p1">](when-to-use-generic-collections.md)</ept></target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Discusses the use of generic collection types.</source>
          <target state="translated">ジェネリック コレクション型の使用について説明します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Comparisons and Sorts Within Collections<ept id="p1">](comparisons-and-sorts-within-collections.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>コレクション内での比較と並べ替え<ept id="p1">](comparisons-and-sorts-within-collections.md)</ept></target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Discusses the use of equality comparisons and sorting comparisons in collections.</source>
          <target state="translated">コレクションでの等価比較と並べ替え比較の使用について説明します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Sorted Collection Types<ept id="p1">](sorted-collection-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Sorted コレクション型<ept id="p1">](sorted-collection-types.md)</ept></target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Describes sorted collections performance and characteristics.</source>
          <target state="translated">並べ替えられたコレクションのパフォーマンスと特性について説明します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hashtable and Dictionary Collection Types<ept id="p1">](hashtable-and-dictionary-collection-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Hashtable コレクション型と Dictionary コレクション型<ept id="p1">](hashtable-and-dictionary-collection-types.md)</ept></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Describes the features of generic and non-generic hash-based dictionary types.</source>
          <target state="translated">ジェネリックと非ジェネリックのハッシュをベースにしたディクショナリ型の機能について説明します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Thread-Safe Collections<ept id="p1">](threadsafe/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>スレッドセーフなコレクション<ept id="p1">](threadsafe/index.md)</ept></target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Describes collection types such as <bpt id="p1">[</bpt>System.Collections.Concurrent.BlockingCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.BlockingCollection-1)</ept> and <bpt id="p2">[</bpt>System.Collections.Concurrent.ConcurrentBag<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentBag-1)</ept> that support safe and efficient concurrent access from multiple threads.</source>
          <target state="translated">複数のスレッドからの安全で効率的な同時アクセスをサポートする <bpt id="p1">[</bpt>System.Collections.Concurrent.BlockingCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.BlockingCollection-1)</ept> や <bpt id="p2">[</bpt>System.Collections.Concurrent.ConcurrentBag<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentBag-1)</ept> などのコレクション型について説明します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">参照</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept></target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept></target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic)</ept></target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Specialized<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Specialized<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized)</ept></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Linq<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Linq)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Linq<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Linq)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>