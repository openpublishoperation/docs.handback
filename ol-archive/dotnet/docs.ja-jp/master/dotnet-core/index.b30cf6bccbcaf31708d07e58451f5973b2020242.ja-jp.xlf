<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">636c86fed9952542a256c075eb9e388b70cff174</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\versions\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">01bf1d460133b249179f1a0fdee6b343cb6298e5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab4b7b03e2d80dcce3797240e18146b05d8feeee</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>.NET Core Versioning</source>
          <target state="translated">.NET Core バージョン管理</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>.NET Core Versioning</source>
          <target state="translated">.NET Core バージョン管理</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>.NET Core Versioning</source>
          <target state="translated">.NET Core バージョン管理</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>.NET Core is a platform of <bpt id="p1">[</bpt>NuGet packages<ept id="p1">](../packages.md)</ept>, of frameworks and distributed as a unit.</source>
          <target state="translated">.NET Core は、フレームワークの <bpt id="p1">[</bpt>NuGet パッケージ<ept id="p1">](../packages.md)</ept>のプラットフォームであり、ユニットとして配布されます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Each of these platform layers can be versioned separately for product agility and to accurately describe product changes.</source>
          <target state="translated">これらのプラットフォームの各レイヤーは、製品のアジリティ向上のため、および製品の変更を正確に記述するために、個別にバージョン管理できます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>While there is significant versioning flexibility, there is a desire to version the platform as a unit to make the product easier to understand.</source>
          <target state="translated">バージョン管理には大きな柔軟性がありますが、製品を理解しやすいように、プラットフォームをユニットとしてバージョン管理することが望まれています。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The product is in some respects unique, being described and delivered via a package manager (NuGet) as packages.</source>
          <target state="translated">この製品はいくつかの点でユニークであり、パッケージ マネージャー (NuGet) によってパッケージとして記述され提供されています。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>While you typically acquire .NET Core as a standalone SDK, the SDK is largely a convenience experience over NuGet packages and therefore not distinct from packages.</source>
          <target state="translated">通常は .NET Core をスタンドアロン SDK として取得しますが、SDK は主に NuGet パッケージを便利に体験できるものであり、パッケージと異なるものではありません。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>As a result, versioning is first and foremost in terms of packages and other versioning experiences follow from there.</source>
          <target state="translated">したがって、最初にパッケージの観点からバージョン管理が行われ、以降にその他のバージョン管理が続きます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Semantic Versioning</source>
          <target state="translated">セマンティック バージョン管理</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>.NET Core uses <bpt id="p1">[</bpt>Semantic Versioning (SemVer)<ept id="p1">](http://semver.org/)</ept>, adopting the use of major.minor.patch versioning, using the various parts of the version number to describe the degree and kind of change.</source>
          <target state="translated">.NET Core は<bpt id="p1">[</bpt>セマンティック バージョン管理 (SemVer)<ept id="p1">](http://semver.org/)</ept> を使用して、major.minor.patch バージョン管理を採用し、バージョン番号のさまざまな部分を使用して変更の度合いと種類を記述します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following versioning template is generally applied to .NET Core.</source>
          <target state="translated">通常、.NET Core には次のバージョン管理テンプレートが適用されます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>There are cases where it has been adapted to fit with existing versioning.</source>
          <target state="translated">既存のバージョン管理に適合するように調整されているケースもあります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>These cases are described later in this document.</source>
          <target state="translated">これらのケースについては、このドキュメントの後の部分で説明されています。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, frameworks are only intended to represent platform and API capabilities, which aligns with major/minor versioning.</source>
          <target state="translated">たとえば、フレームワークはプラットフォームおよび API の機能を表すことのみを想定しており、メジャー/マイナー バージョン管理に適合します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Versioning Form</source>
          <target state="translated">バージョン管理フォーム</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>MAJOR.MINOR.PATCH[-PRERELEASE-BUILDNUMBER]</source>
          <target state="translated">MAJOR.MINOR.PATCH[-PRERELEASE-BUILDNUMBER]</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Decision Tree</source>
          <target state="translated">デシジョン ツリー</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>MAJOR when:</source>
          <target state="translated">次の場合は MAJOR です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>drop support for a platform</source>
          <target state="translated">プラットフォームのサポートをドロップする</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>adopt a newer MAJOR version of an existing dependency</source>
          <target state="translated">既存の依存関係のさらに新しい MAJOR バージョンを採用する</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>disable a compatibility quirk off by default</source>
          <target state="translated">互換性の独自設定のオフを既定で無効にする</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>MINOR when:</source>
          <target state="translated">次の場合は MINOR です。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>add public API surface area</source>
          <target state="translated">パブリック API アクセス領域を追加する</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>add new behavior</source>
          <target state="translated">新しいビヘイビアーを追加する</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>adopt a newer MINOR version of an existing dependency</source>
          <target state="translated">既存の依存関係のさらに新しい MINOR バージョンを採用する</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>introduce a new dependency</source>
          <target state="translated">新しい依存関係を導入する</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>PATCH when:</source>
          <target state="translated">次の場合は PATCH です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>make bug fixes</source>
          <target state="translated">バグ修正を行う</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>add support for a newer platform</source>
          <target state="translated">より新しいプラットフォームのサポートを追加する</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>adopt a newer PATCH version of an existing dependency</source>
          <target state="translated">既存の依存関係のさらに新しい PATCH バージョンを採用する</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>any other change (not otherwise captured)</source>
          <target state="translated">(キャプチャされていない) その他のすべての変更</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When determining what to increment when there are multiple changes, choose the highest kind of change.</source>
          <target state="translated">複数の変更がある場合に何をインクリメントするかを判断するときは、最新の変更を選択します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Versioning Scheme</source>
          <target state="translated">バージョン管理スキーム</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>.NET Core can be defined as and will version in the following way:</source>
          <target state="translated">.NET Core は、次の項目として定義でき、次の方法でバージョン管理されます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A runtime and framework implementation, distributed as packages.</source>
          <target state="translated">パッケージとして配布されるランタイムおよびフレームワークの実装。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Each package is versioned independently, particularly for patch versioning.</source>
          <target state="translated">特に修正プログラムのバージョン管理において、各パッケージは個別にバージョン管理されます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A set of metapackages that reference fine-grained packages as a versioned unit.</source>
          <target state="translated">バージョン管理されたユニットとして詳細なパッケージを参照するメタパッケージのセット。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Metapackages are versioned separately from packages.</source>
          <target state="translated">メタパッケージは、パッケージとは別個にバージョン管理されます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A set of frameworks (for example, <ph id="ph1">`netstandard`</ph>) that represent a progressively larger API set, described in a set of versioned snapshots.</source>
          <target state="translated">バージョン管理されたスナップショットのセットに記述されている、段階的に大きくなる API セットを表すフレームワークのセット (たとえば、<ph id="ph1">`netstandard`</ph>)。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Packages</source>
          <target state="translated">パッケージ</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Library packages evolve and version independently.</source>
          <target state="translated">ライブラリ パッケージは独立して進化し、バージョン管理されます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Packages that overlap with .NET Framework System.<ph id="ph1">\*</ph></source>
          <target state="translated">.NET Framework システム<ph id="ph1">\*</ph></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>assemblies typically use 4.x versions, aligning with the .NET Framework 4.x versioning (a historical choice).</source>
          <target state="translated">アセンブリと重複するパッケージは、通常は 4.x バージョンを使用し、.NET Framework 4.x のバージョン管理 (履歴選択) に適合します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Packages that do not overlap with the .NET Framework libraries (for example, <bpt id="p1">[</bpt>System.Reflection.Metadata<ept id="p1">](https://www.nuget.org/packages/System.Reflection.Metadata)</ept>) typically start at 1.0 and increment from there.</source>
          <target state="translated">.NET Framework ライブラリと重複しないパッケージ (たとえば、<bpt id="p1">[</bpt>System.Reflection.Metadata<ept id="p1">](https://www.nuget.org/packages/System.Reflection.Metadata)</ept>) は、通常は 1.0 から開始し、インクリメントしていきます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The packages described by <bpt id="p1">[</bpt>NETStandard.Library<ept id="p1">](https://www.nuget.org/packages/NETStandard.Library)</ept> are treated specially due to being at the base of the platform.</source>
          <target state="translated"><bpt id="p1">[</bpt>NETStandard.Library<ept id="p1">](https://www.nuget.org/packages/NETStandard.Library)</ept> によって記述されるパッケージは、プラットフォームのベースに位置するので、特別に扱われます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>NETStandard.Library packages will typically version as a set, since they have implementation-level dependencies between them.</source>
          <target state="translated">NETStandard.Library パッケージは、それらの間に実装レベルの依存関係があるため、通常はセットとしてバージョン管理されます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>APIs will only be added to NETStandard.Library packages as part of major or minor .NET Core releases, since doing so would require adding a new <ph id="ph1">`netstandard`</ph> version.</source>
          <target state="translated">API は、.NET Core のメジャーまたはマイナー リリースの一部としてのみ、NETStandard.Library パッケージに追加されます。このような追加では、新しい <ph id="ph1">`netstandard`</ph> バージョンの追加が必要となるためです。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This is in addition to SemVer requirements.</source>
          <target state="translated">これは SemVer 要件の追加要件です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Metapackages</source>
          <target state="translated">メタパッケージ</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Versioning for .NET Core metapackages is based on the framework that they map to.</source>
          <target state="translated">.NET Core メタパッケージのバージョン管理は、マップ先のフレームワークに基づいています。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The metapackages adopt the highest version number of the framework (for example, netstandard1.6) it maps to in its package closure.</source>
          <target state="translated">メタパッケージは、マップ先のフレームワークの最新のバージョン番号 (たとえば、netstandard1.6) をそのパッケージ クロージャに採用します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The patch version for the metapackage is used to represent updates to the metapackage to reference updated packages.</source>
          <target state="translated">更新されたパッケージを参照するメタパッケージの更新は、メタパッケージの修正プログラム バージョンを使用して表されます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Patch versions will never include an updated framework version.</source>
          <target state="translated">修正プログラム バージョンには、更新されたフレームワーク バージョンが含まれることはありません。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>As a result, the metapackages are not strictly SemVer compliant because their versioning scheme doesn't represent the degree of change in the underlying packages, but primarily the API level.</source>
          <target state="translated">したがって、メタパッケージは、厳密には SemVer 準拠であると言えません。そのバージョン管理スキームが、基になるパッケージでの変更の度合いを表さず、主に API レベルであるためです。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>There are two primary metapackages for .NET Core.</source>
          <target state="translated">.NET Core には、次の&amp;2; の主なメタパッケージがあります。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NETStandard.Library<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>NETStandard.Library<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>v1.6 as of .NET Core 1.0 (these versions won't typically or intentionally match).</source>
          <target state="translated">.NET Core 1.0 の場合は v1.6 (これらのバージョンは、通常、または意図的に一致しません)。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Maps to the <ph id="ph1">`netstandard`</ph> framework.</source>
          <target state="translated"><ph id="ph1">`netstandard`</ph> フレームワークにマップされます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Describes the packages that are considered required for modern app development and that .NET platforms must implement to be considered a <bpt id="p1">[</bpt>.NET Standard<ept id="p1">](../../standard/library.md)</ept> platform.</source>
          <target state="translated">.NET プラットフォームが <bpt id="p1">[</bpt>.NET 標準<ept id="p1">](../../standard/library.md)</ept>プラットフォームと見なされるために実装しなければならない、最新のアプリ開発に必要と考えられるパッケージを記述します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Microsoft.NETCore.App<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Microsoft.NETCore.App<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>v1.0 as of .NET Core 1.0 (these versions will match).</source>
          <target state="translated">.NET Core 1.0 の場合は v1.0 (これらのバージョンは一致します)。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Maps to the <ph id="ph1">`netcoreapp`</ph> framework.</source>
          <target state="translated"><ph id="ph1">`netcoreapp`</ph> フレームワークにマップされます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Describes the packages in the .NET Core distribution.</source>
          <target state="translated">.NET Core 配布に含まれるパッケージを記述します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Note: <bpt id="p1">[</bpt><ph id="ph1">`Microsoft.NETCore.Portable.Compatibility`</ph><ept id="p1">](https://www.nuget.org/packages/Microsoft.NETCore.Portable.Compatibility)</ept> is another .NET Core metapackage.</source>
          <target state="translated">注: <bpt id="p1">[</bpt><ph id="ph1">`Microsoft.NETCore.Portable.Compatibility`</ph><ept id="p1">](https://www.nuget.org/packages/Microsoft.NETCore.Portable.Compatibility)</ept> は、別の .NET Core メタパッケージです。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>It doesn't map to a particular framework, so versions like a package.</source>
          <target state="translated">特定のフレームワークにマップされないので、パッケージのようにバージョン管理されます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Frameworks</source>
          <target state="translated">フレームワーク</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Framework versions are updated when new APIs are added.</source>
          <target state="translated">フレームワーク バージョンは、新しい API が追加されると更新されます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>They have no concept of patch version, since they represent API shape and not implementation concerns.</source>
          <target state="translated">これらは API のシェイプを表し、実装には関係しないので、修正プログラム バージョンの概念はありません。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Major and minor versioning will follow the SemVer rules specified earlier.</source>
          <target state="translated">メジャーおよびマイナー バージョン管理は、前に指定した SemVer 規則に従います。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`netcoreapp`</ph> framework is tied to the .NET Core distribution.</source>
          <target state="translated"><ph id="ph1">`netcoreapp`</ph> フレームワークは、.NET Core 配布に関連付けられており、</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It will follow the version numbers used by .NET Core.</source>
          <target state="translated">.NET Core で使用されるバージョン番号に従います。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For example, when .NET Core 2.0 is released, it will target <ph id="ph1">`netcoreapp2.0`</ph>.</source>
          <target state="translated">たとえば、.NET Core 2.0 がリリースされると、<ph id="ph1">`netcoreapp2.0`</ph> をターゲットとします。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`netstandard`</ph> framework will not match the versioning scheme of any .NET runtime, given that it is equally applicable to all of them.</source>
          <target state="translated"><ph id="ph1">`netstandard`</ph> フレームワークは、すべての .NET ランタイムに等しく適用できるので、そのいずれのバージョン管理スキームとも一致しません。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Versioning in Practice</source>
          <target state="translated">実際のバージョン管理</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>There are commits and PRs on .NET Core repos on GitHub on a daily basis, resulting in new builds of many libraries.</source>
          <target state="translated">GitHub の .NET Core リポジトリでは、コミットおよび PR が毎日発生し、多くのライブラリの新しいビルドが生成されます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>It is not practical to create new public versions of .NET Core for every change.</source>
          <target state="translated">変更が行われるたびに、.NET Core の新しいパブリック バージョンを作成するのは実用的ではありません。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Instead, changes will be aggregated over some loosely-defined period of time (for example, weeks or months) before making a new public stable .NET Core version.</source>
          <target state="translated">代わりに、.NET Core の新しいパブリック安定バージョンを作成する前に、大まかに定義された期間 (たとえば、数週間や数か月) にわたって、変更が集計されます。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A new version of .NET Core could mean several things:</source>
          <target state="translated">.NET Core の新しいバージョンは、次の複数の意味を持ちます。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>New versions of packages and metapackages.</source>
          <target state="translated">パッケージおよびメタパッケージの新しいバージョン。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>New versions of various frameworks, assuming the addition of new APIs.</source>
          <target state="translated">新しい API の追加を仮定した場合の、さまざまなフレームワークの新しいバージョン。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>New version of the .NET Core distribution.</source>
          <target state="translated">.NET Core 配布の新しいバージョン。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Shipping a patch release</source>
          <target state="translated">修正プログラム リリースの配布</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>After shipping a .NET Core v1.0.0 stable version, patch-level changes (no new APIs) are made to .NET Core libraries to fix bugs and improve performance and reliability.</source>
          <target state="translated">.NET Core v1.0.0 の安定バージョンを配布した後は、バグを修正してパフォーマンスと信頼性を高めるために、.NET Core ライブラリに対して修正プログラム レベルの変更 (新しい API なし) が行われます。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The various metapackages are updated to reference the updated .NET Core library packages.</source>
          <target state="translated">更新された .NET Core ライブラリ パッケージを参照するように、さまざまなメタパッケージが更新されます。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The metapackages are versioned as patch updates (x.y.z).</source>
          <target state="translated">メタパッケージは、修正プログラムの更新 (x.y.z) としてバージョン管理されます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Frameworks are not updated.</source>
          <target state="translated">フレームワークは更新されません。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A new .NET Core distribution is released with a matching version number to the <ph id="ph1">`Microsoft.NETCore.App`</ph> metapackage.</source>
          <target state="translated">新しい .NET Core 配布は、<ph id="ph1">`Microsoft.NETCore.App`</ph> メタパッケージと一致するバージョン番号でリリースされます。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You can see patch updates demonstrated in the project.json examples below.</source>
          <target state="translated">次の project.json の例に示す修正プログラムの更新を参照してください。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Shipping a minor release</source>
          <target state="translated">マイナー リリースの配布</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>After shipping a .NET Core v1.0.0 stable version, new APIs are added to .NET Core libraries to enable new scenarios.</source>
          <target state="translated">.NET Core v1.0.0 の安定バージョンを配布した後は、新しいシナリオを有効にするために .NET Core ライブラリに新しい API が追加されます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The various metapackages are updated to reference the updated .NET Core library packages.</source>
          <target state="translated">更新された .NET Core ライブラリ パッケージを参照するように、さまざまなメタパッケージが更新されます。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The metapackages are versioned as patch updates (x.y) to match the higher framework version.</source>
          <target state="translated">メタパッケージは、より新しいフレームワーク バージョンと一致するように、修正プログラムの更新 (x.y) としてバージョン管理されます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The various frameworks are updated to describe the new APIs.</source>
          <target state="translated">新しい API を記述するように、さまざまなフレームワークが更新されます。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A new .NET Core distribution is released with a matching version number to the <ph id="ph1">`Microsoft.NETCore.App`</ph> metapackage.</source>
          <target state="translated">新しい .NET Core 配布は、<ph id="ph1">`Microsoft.NETCore.App`</ph> メタパッケージと一致するバージョン番号でリリースされます。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>You can see minor updates demonstrated in the project.json examples below.</source>
          <target state="translated">次の project.json の例に示すマイナー更新を参照してください。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Shipping a major release</source>
          <target state="translated">メジャー リリースの配布</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Given a .NET Core v1.y.z stable version, new APIs are added to .NET Core libraries to enable major new scenarios.</source>
          <target state="translated">.NET Core v1.y.z の安定バージョンを配布した後は、新しい主要なシナリオを有効にするために .NET Core ライブラリに新しい API が追加されます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Perhaps, support is dropped for a platform.</source>
          <target state="translated">たとえば、プラットフォームのサポートがドロップされます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The various metapackages are updated to reference the updated .NET Core library packages.</source>
          <target state="translated">更新された .NET Core ライブラリ パッケージを参照するように、さまざまなメタパッケージが更新されます。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Microsoft.NETCore.App`</ph> metapackage and the <ph id="ph2">`netcore`</ph> framework are versioned as a major update (x.).</source>
          <target state="translated"><ph id="ph1">`Microsoft.NETCore.App`</ph> メタパッケージと <ph id="ph2">`netcore`</ph> フレームワークは、メジャー更新 (x.) としてバージョン管理されます。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`NETStandard.Library`</ph> metapackage is likely  versioned as a minor update (x.y) since it applies to multiple .NET implementations.</source>
          <target state="translated"><ph id="ph1">`NETStandard.Library`</ph> メタパッケージは、複数の .NET 実装に適用されるので、マイナー更新 (x.y) としてバージョン管理される可能性があります。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A new .NET Core distribution would be released with a matching version number to the <ph id="ph1">`Microsoft.NETCore.App`</ph> metapackage.</source>
          <target state="translated">新しい .NET Core 配布は、<ph id="ph1">`Microsoft.NETCore.App`</ph> メタパッケージと一致するバージョン番号でリリースされます。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can see major updates demonstrated in the project.json metapackage reference in the example below.</source>
          <target state="translated">次の例の project.json メタパッケージ リファレンスに示すメジャー更新を参照してください。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>