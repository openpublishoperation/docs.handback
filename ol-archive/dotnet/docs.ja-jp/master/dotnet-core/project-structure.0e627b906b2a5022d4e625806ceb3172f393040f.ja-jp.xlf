<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-188fee3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ed2fdad2a784f4e4ce1f8a660b5bb151935fd2d4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\porting\project-structure.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">204625bb2ae84b6998273c38d97149cc94c4fbeb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f3daa0c397107ac459cfd6c7a251347248ec29b1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Organizing Your Project to Support .NET Framework and .NET Core</source>
          <target state="translated">プロジェクトを整理し、.NET Framework と .NET Core をサポートする</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Organizing Your Project to Support .NET Framework and .NET Core</source>
          <target state="translated">プロジェクトを整理し、.NET Framework と .NET Core をサポートする</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Organizing Your Project to Support .NET Framework and .NET Core</source>
          <target state="translated">プロジェクトを整理し、.NET Framework と .NET Core をサポートする</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article is to help project owners who want to compile their solution against .NET Framework and .NET Core side-by-side.</source>
          <target state="translated">この記事は、プロジェクト所有者が横並びの .NET Framework と .NET Core に対してソリューションをコンパイルするときに役立ちます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It provides several options to organize projects to help developers achieve this goal.</source>
          <target state="translated">プロジェクトを整理するためのオプションを提供し、開発者を支援します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Here are some typical scenarios to consider when you are deciding how to setup your project layout with .NET Core.</source>
          <target state="translated">ここでは、.NET Core でプロジェクト レイアウトを設定する方法について決定するときに考慮する典型的なシナリオを紹介します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>They may not cover everything you want; prioritize based on your project's needs.</source>
          <target state="translated">プロジェクトのニーズに基づいて選択されており、すべてを網羅していないかもしれません。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Combine existing projects and .NET Core projects into single projects<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt><ept id="p3">option-xproj]</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>既存のプロジェクトと .NET Core プロジェクトを結合し、シングル プロジェクトを作成する<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt><ept id="p3">option-xproj]</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>What this is good for:<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>効果:<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Simplifying your build process by compiling a single project rather than compiling multiple projects, each targeting a different .NET Framework version or platform.</source>
          <target state="translated">複数のプロジェクトをコンパイルするのではなく、シングル プロジェクトをコンパイルすることでビルド プロセスをシンプルにします。それぞれ、異なる .NET Framework バージョンまたはプラットフォームをターゲットにします。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Simplifying source file management for multi-targeted projects because you have to manage a single project file.</source>
          <target state="translated">ターゲットが複数のプロジェクトのソース ファイル管理をシンプルにします。シングル プロジェクト ファイルを管理することになります。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When adding/removing source files, the alternatives require you to manually sync these with your other projects.</source>
          <target state="translated">ソース ファイルの追加/削除時、代替方法では、これらを他のプロジェクトと手動で同期する必要があります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Easily generating a NuGet package for consumption.</source>
          <target state="translated">使用する NuGet パッケージを簡単に生成します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Allows you to write code for a specific .NET Framework version in your libraries through the use of compiler directives.</source>
          <target state="translated">コンパイラ ディレクティブを利用することで、ライブラリの特定の .NET Framework バージョンに対してコードを記述できます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Unsupported scenarios:<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>サポートされていないシナリオ:<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Does not allow developers without Visual Studio 2015 to open existing projects.</source>
          <target state="translated">Visual Studio 2015 を持っていない開発者は既存のプロジェクトを開くことができません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To support older versions of Visual Studio, <bpt id="p1">[</bpt>keeping your project files in different folders<ept id="p1">](#support-vs)</ept> is a better option.</source>
          <target state="translated">旧バージョンの Visual Studio をサポートするには、<bpt id="p1">[</bpt>プロジェクト ファイルを異なるフォルダーで保持する<ept id="p1">](#support-vs)</ept>ことが推奨されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Does not allow you to share your .NET Core library across different project types in the same solution file.</source>
          <target state="translated">同じソリューション ファイルの異なるプロジェクト ファイルをまたいで .NET Core ライブラリを共有することはできません。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To support this, <bpt id="p1">[</bpt>creating a Portable Class Library<ept id="p1">](#support-pcl)</ept> is a better option.</source>
          <target state="translated">これをサポートするには、<bpt id="p1">[</bpt>ポータブル クラス ライブラリを作成する<ept id="p1">](#support-pcl)</ept>ことが推奨されます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Does not allow for project build or load modifications that are supported by MSBuild Targets and Tasks.</source>
          <target state="translated">MSBuild のターゲットやタスクでサポートされるプロジェクト ビルドや読み込み変更は許可されません。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To support this, <bpt id="p1">[</bpt>creating a Portable Class Library<ept id="p1">](#support-pcl)</ept> is a better option.</source>
          <target state="translated">これをサポートするには、<bpt id="p1">[</bpt>ポータブル クラス ライブラリを作成する<ept id="p1">](#support-pcl)</ept>ことが推奨されます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="support-vs"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept><bpt id="p2">[</bpt><bpt id="p3">**</bpt>Keep existing projects and new .NET Core projects separate<ept id="p3">**</ept><ept id="p2">]</ept><bpt id="p4">[</bpt><ept id="p4">option-xproj-folder]</ept></source>
          <target state="translated"><bpt id="p1">&lt;a name="support-vs"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept><bpt id="p2">[</bpt><bpt id="p3">**</bpt>既存のプロジェクトと新しい .NET Core プロジェクトを別々に保存する<ept id="p3">**</ept><ept id="p2">]</ept><bpt id="p4">[</bpt><ept id="p4">option-xproj-folder]</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>What this is good for:<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>効果:<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Continuing to support development on existing projects without having to upgrade for developers/contributors who may not have Visual Studio 2015.</source>
          <target state="translated">既存のプロジェクトで引き続き開発をサポートします。Visual Studio 2015 を所有していない開発者/貢献者はアップグレードする必要がありません。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Decreasing the possibility in creating new bugs in existing projects because no code churn is required in those projects.</source>
          <target state="translated">既存のプロジェクトで新しいバグが発生する可能性が減ります。既存のプロジェクトではコード チャーンが要求されないためです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="support-pcl"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept><bpt id="p2">[</bpt><bpt id="p3">**</bpt>Keep existing projects and create Portable Class Libraries (PCLs) targeting .NET Core<ept id="p3">**</ept><ept id="p2">]</ept><bpt id="p4">[</bpt><ept id="p4">option-pcl]</ept></source>
          <target state="translated"><bpt id="p1">&lt;a name="support-pcl"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept><bpt id="p2">[</bpt><bpt id="p3">**</bpt>既存のプロジェクトを保持し、.NET Core をターゲットにするポータブル クラス ライブラリ (PCL) を作成する<ept id="p3">**</ept><ept id="p2">]</ept><bpt id="p4">[</bpt><ept id="p4">option-pcl]</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>What this is good for:<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>効果:<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Referencing your .NET Core libraries in desktop and/or web projects targeting the full .NET Framework in the same solution.</source>
          <target state="translated">デスクトップまたは Web プロジェクトで .NET Core ライブラリを参照し、同じソリューションの完全 .NET Framework をターゲットにします。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Supporting modifications in the project build or load process.</source>
          <target state="translated">プロジェクト ビルドまたは読み込みプロセスで変更をサポートします。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>These modifications could be the inclusion of MSBuild Tasks and Targets in your <ph id="ph1">`*.csproj`</ph> file.</source>
          <target state="translated">変更とは、たとえば、<ph id="ph1">`*.csproj`</ph> ファイルに MSBuild のタスクやターゲットを追加することです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Unsupported scenarios:<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>サポートされていないシナリオ:<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Does not allow you to write code for a specific .NET Framework version because the <bpt id="p1">[</bpt>predefined preprocessor symbols<ept id="p1">]</ept><bpt id="p2">[</bpt><ept id="p2">how-to-multitarget]</ept> are not supported.</source>
          <target state="translated">特定の .NET Framework バージョンのコードを記述することはできません。<bpt id="p1">[</bpt>定義プリプロセッサ記号<ept id="p1">]</ept><bpt id="p2">[</bpt><ept id="p2">how-to-multitarget]</ept>がサポートされていないためです。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Consider the repository below:</source>
          <target state="translated">次のリポジトリを考慮してください。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Existing project<ept id="p1">][example-initial-project]</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>既存のプロジェクト<ept id="p1">][example-initial-project]</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Source Code<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt><ept id="p3">example-initial-project-code]</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>ソース コード<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt><ept id="p3">example-initial-project-code]</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>There are several different ways to add support for .NET Core for this repository depending on the constraints and complexity of existing projects which are described below.</source>
          <target state="translated">下に説明する既存のプロジェクトの制約や複雑性にもよりますが、このリポジトリのために .NET Core のサポートを追加する方法がいくつかあります。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Replace Existing Projects with a Multi-targeted .NET Core Project (xproj)</source>
          <target state="translated">既存のプロジェクトとターゲットが複数ある .NET Core Project (xproj) を置換します</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The repository can be reorganized so that any existing <ph id="ph1">`*.csproj`</ph> files are removed and a single <ph id="ph2">`*.xproj`</ph> file is created that targets multiple frameworks.</source>
          <target state="translated">リポジトリを再整理できます。既存の <ph id="ph1">`*.csproj`</ph> ファイルが削除され、複数のフレームワークをターゲットにするシングル <ph id="ph2">`*.xproj`</ph> ファイルが作成されます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This is a great option because a single project is able to compile for different frameworks.</source>
          <target state="translated">異なるフレームワークに対してシングル プロジェクトでコンパイルできるので、この方法が推奨されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>It also has the power to handle different compilation options, dependencies, etc.</source>
          <target state="translated">さまざまなコンパイル オプション、依存関係などを処理することもできます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>per targeted framework.</source>
          <target state="translated">対象のフレームワークごとに。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Create an xproj that targets multiple frameworks<ept id="p1">][example-xproj]</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>複数のフレームワークをターゲットにする xproj の作成<ept id="p1">][example-xproj]</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Source Code<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt><ept id="p3">example-xproj-code]</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>ソース コード<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt><ept id="p3">example-xproj-code]</ept></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Changes to note are:</source>
          <target state="translated">注目するべき変更点:</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Addition of <ph id="ph1">`global.json`</ph></source>
          <target state="translated"><ph id="ph1">`global.json`</ph> の追加</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Replacement of <ph id="ph1">`packages.config`</ph> and <ph id="ph2">`*.csproj`</ph> with <ph id="ph3">`project.json`</ph> and <ph id="ph4">`*.xproj`</ph></source>
          <target state="translated"><ph id="ph1">`packages.config`</ph> および <ph id="ph2">`*.csproj`</ph> を <ph id="ph3">`project.json`</ph> および <ph id="ph4">`*.xproj`</ph> に置換</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Changes in the <bpt id="p1">[</bpt>Car's project.json<ept id="p1">]</ept><bpt id="p2">[</bpt><ept id="p2">example-xproj-projectjson]</ept> and its <bpt id="p3">[</bpt>test project<ept id="p3">]</ept><bpt id="p4">[</bpt><ept id="p4">example-xproj-projectjson-test]</ept> to support building for the existing .NET Framework as well as others</source>
          <target state="translated"><bpt id="p1">[</bpt>Car の project.json<ept id="p1">]</ept><bpt id="p2">[</bpt><ept id="p2">example-xproj-projectjson]</ept> とその<bpt id="p3">[</bpt>テスト プロジェクト<ept id="p3">]</ept><bpt id="p4">[</bpt><ept id="p4">example-xproj-projectjson-test]</ept> を、既存の .NET Framework などのビルドをサポートするように変更</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Create a Portable Class Library (PCL) to target .NET Core</source>
          <target state="translated">ポータブル クラス ライブラリ (PCL) を作成し、.NET Core をターゲットにします。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If existing projects contain complex build operations or properties in their <ph id="ph1">`*.csproj`</ph> file, it may be easier to create a PCL.</source>
          <target state="translated">既存のプロジェクトの <ph id="ph1">`*.csproj`</ph> ファイルに複雑なビルド操作やプロパティが含まれる場合、PCL を簡単に作成できることがあります。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Source Code<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt><ept id="p3">example-pcl-code]</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>ソース コード<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt><ept id="p3">example-pcl-code]</ept></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Changes to note are:</source>
          <target state="translated">注目するべき変更点:</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Renaming <ph id="ph1">`project.json`</ph> to <ph id="ph2">`{project-name}.project.json`</ph></source>
          <target state="translated"><ph id="ph1">`project.json`</ph> の名前を <ph id="ph2">`{project-name}.project.json`</ph> に変更</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This prevents potential conflict in Visual Studio when trying to restore packages for the libraries in the same directory.</source>
          <target state="translated">これにより、Visual Studio で、同じディレクトリのライブラリのパッケージを復元しようとしたときの競合が回避されます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>NuGet FAQ<ept id="p1">](https://docs.nuget.org/consume/nuget-faq#working-with-packages)</ept> under "<bpt id="p2">_</bpt>I have multiple projects in the same folder, how can I use separate packages.config or project.json files for each project?<ept id="p2">_</ept>".</source>
          <target state="translated">詳細については、<bpt id="p1">[</bpt>NuGet FAQ<ept id="p1">](https://docs.nuget.org/consume/nuget-faq#working-with-packages)</ept> の "<bpt id="p2">_</bpt>I have multiple projects in the same folder, how can I use separate packages.config or project.json files for each project?<ept id="p2">_</ept>" (同じフォルダーに複数のプロジェクトがあります。プロジェクトごとに別々の packages.config ファイルまたは project.json ファイルを利用できますか。) を参照してください。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Alternative<ept id="p1">**</ept>: Create the PCL in another folder and reference the original source code to avoid this issue.</source>
          <target state="translated"><bpt id="p1">**</bpt>代替方法<ept id="p1">**</ept>: 別のフォルダーで PCL を作成し、元のソース コードを参照することでこの問題を回避します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Placing the PCL in another folder has an added benefit that users who do not have Visual Studio 2015 can still work on the older projects without loading the new solution.</source>
          <target state="translated">別のフォルダーに PCL を置くことには長所があります。Visual Studio 2015 を所有していないユーザーも新しいソリューションを読み込まずに古いプロジェクトを使用できます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To target .NET Standard after creating the PCL, in Visual Studio, open the <bpt id="p1">**</bpt>Project's Properties<ept id="p1">**</ept>.</source>
          <target state="translated">PCL の作成後、.NET Standard をターゲットにするには、Visual Studio で、<bpt id="p1">**</bpt>プロジェクトのプロパティ<ept id="p1">**</ept>を開きます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Under the <bpt id="p1">**</bpt>Targets<ept id="p1">**</ept> section, click on the link <bpt id="p2">**</bpt>"Target .NET Platform Standard"<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>[ターゲット]<ept id="p1">**</ept> セクションで、<bpt id="p2">**</bpt>"Target .NET Platform Standard"<ept id="p2">**</ept> (.NET Platform Standard をターゲットにする) リンクをクリックします。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This change can be reversed by repeating the same steps.</source>
          <target state="translated">同じ手順を繰り返せば、この変更を元に戻すことができます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Keep Existing Projects and Create a .NET Core Project</source>
          <target state="translated">既存のプロジェクトを保持し、.NET Core プロジェクトを作成します</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If there are existing projects that target older frameworks, you may want to leave these projects untouched and use a .NET Core project to target future frameworks.</source>
          <target state="translated">古いフレームワークをターゲットにする既存のプロジェクトがあるとき、そのようなプロジェクトをそのまま残し、.NET Core プロジェクトを利用して今後のフレームワークをターゲットにすると効率的な場合があります。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>.NET Core project with existing PCL in different folder<ept id="p1">][example-xproj-different-folder]</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>別のフォルダーに既存の PCL がある .NET Core プロジェクト<ept id="p1">][example-xproj-different-folder]</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Source Code<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt><ept id="p3">example-xproj-different-code]</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>ソース コード<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt><ept id="p3">example-xproj-different-code]</ept></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Changes to note are:</source>
          <target state="translated">注目するべき変更点:</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The .NET Core and existing projects are kept in separate folders.</source>
          <target state="translated">.NET Core と既存のプロジェクトを別々のフォルダーに保存します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This avoids the package restore issue that was mentioned above due to multiple project.json/package.config files being in the same folder.</source>
          <target state="translated">これにより、複数の project.json/package.config ファイルが同じフォルダーに存在することに起因する前述のパッケージ復元問題が回避されます。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Keeping projects in separate folders avoids forcing you to have Visual Studio 2015 (due to project.json).</source>
          <target state="translated">プロジェクトを別々のフォルダーに保存すれば、(project.json により) Visual Studio 2015 を所有する必要がありません。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You can create a separate solution that only opens the old projects.</source>
          <target state="translated">古いプロジェクトだけを開く別個のソリューションを作成できます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Please see <bpt id="p1">[</bpt>.NET Core porting documentation<ept id="p1">]</ept><bpt id="p2">[</bpt><ept id="p2">porting-doc]</ept> for more guidance on moving to project.json and xproj.</source>
          <target state="translated">project.json と xproj に移行する方法に関する詳細については、<bpt id="p1">[</bpt>.NET Core の移植に関するドキュメント<ept id="p1">]</ept><bpt id="p2">[</bpt><ept id="p2">porting-doc]</ept>のページを参照してください。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">example-initial-project]: media/project-structure/project.png</ept><bpt id="p2"> "</bpt>Existing project<ept id="p2">"</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><ept id="p1">example-initial-project]: media/project-structure/project.png</ept><bpt id="p2"> "</bpt>既存のプロジェクト<ept id="p2">"</ept></target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">example-xproj]: media/project-structure/project.xproj.png</ept><bpt id="p2"> "</bpt>Create an xproj that targets multiple frameworks<ept id="p2">"</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><ept id="p1">example-xproj]: media/project-structure/project.xproj.png</ept><bpt id="p2"> "</bpt>複数のフレームワークをターゲットにする xproj の作成<ept id="p2">"</ept></target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">example-xproj-different-folder]: media/project-structure/project.xproj.different.png</ept><bpt id="p2"> "</bpt>.NET Core project with existing PCL in different folder<ept id="p2">"</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><ept id="p1">example-xproj-different-folder]: media/project-structure/project.xproj.different.png</ept><bpt id="p2"> "</bpt>別のフォルダーに既存の PCL がある .NET Core プロジェクト<ept id="p2">"</ept></target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">example-pcl]: media/project-structure/project.pcl.png</ept><bpt id="p2"> "</bpt>PCL Targeting .NET Core<ept id="p2">"</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><ept id="p1">example-pcl]: media/project-structure/project.pcl.png</ept><bpt id="p2"> "</bpt>.NET Core をターゲットにする PCL<ept id="p2">"</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>