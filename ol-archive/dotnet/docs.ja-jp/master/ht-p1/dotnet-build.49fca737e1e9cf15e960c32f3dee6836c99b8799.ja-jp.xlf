<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">344f8154c63bbb3c5ce6840bc7c7b1659950c223</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\dotnet-build.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cbe282d85480e3be8c7eac12a67d8149a6ddee1e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5bdd9beb29e92606c01dbd67a6946977e2782fb9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-build command | .NET Core SDK</source>
          <target state="translated">dotnet-build コマンド | .NET Core SDK</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-build command builds a project and all of its dependencies.</source>
          <target state="translated">dotnet-build コマンドは、プロジェクトとそのすべての依存関係をします。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-build, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-build, CLI, CLI コマンド, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-build</source>
          <target state="translated">dotnet-build</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">名前</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>dotnet-build -- Builds a project and all of its dependencies</source>
          <target state="translated">dotnet-build -- プロジェクトとそのすべての依存関係をビルドします。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet build`</ph> command builds multiple source file from a source project and its dependencies into a binary.</source>
          <target state="translated"><ph id="ph1">`dotnet build`</ph> コマンドは、ソース プロジェクトとその依存関係から複数のソース ファイルをバイナリにビルドします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>By default, the resulting binary is in Intermediate Language (IL) and has a DLL extension.</source>
          <target state="translated">既定では、結果のバイナリは中間言語 (IL) になり、拡張子は DLL になります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet build`</ph> also drops a <ph id="ph2">`\*.deps`</ph> file which outlines what the host needs to run the application.</source>
          <target state="translated"><ph id="ph1">`dotnet build`</ph> は、ホストがアプリケーションを実行するために必要なものの概要を示す <ph id="ph2">`\*.deps`</ph> ファイルのドロップも行います。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Building requires the existence of a lock file, which means that you have to run <bpt id="p1">[</bpt><ph id="ph1">`dotnet restore`</ph><ept id="p1">](dotnet-restore.md)</ept> prior to building your code.</source>
          <target state="translated">ビルドにはロック ファイルが必要です。つまり、コードをビルドする前に <bpt id="p1">[</bpt><ph id="ph1">`dotnet restore`</ph><ept id="p1">](dotnet-restore.md)</ept> を実行する必要があります。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Before any compilation begins, the <ph id="ph1">`build`</ph> verb analyzes the project and its dependencies for incremental safety checks.</source>
          <target state="translated">すべてのコンパイルが始まる前に、<ph id="ph1">`build`</ph> 動詞で安全性のインクリメンタル チェックのためにプロジェクトとその依存関係が分析されます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If all checks pass, then build proceeds with incremental compilation of the project and its dependencies; otherwise, it falls back to non-incremental compilation.</source>
          <target state="translated">すべてのチェックをパスした場合、ビルドはプロジェクトとその依存関係のインクリメンタル コンパイルに進みます。それ以外の場合は、非インクリメンタル コンパイルに戻ります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Via a profile flag, users can choose to receive additional information on how they can improve their build times.</source>
          <target state="translated">プロファイル フラグを使用することで、ユーザーはビルド時間を向上させる方法に関する追加情報を受信するように選択できます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>All projects in the dependency graph that need compilation must pass the following safety checks in order for the compilation process to be incremental:</source>
          <target state="translated">コンパイル プロセスをインクリメンタルに行うには、コンパイルを必要とする依存関係グラフのすべてのプロジェクトが以下の安全性チェックをパスする必要があります。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>not use pre/post compile scripts</source>
          <target state="translated">プリコンパイル/ポストコンパイル スクリプトを使用しない</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>not load compilation tools from PATH (for example, resgen, compilers)</source>
          <target state="translated">パスからコンパイル ツール (resgen、コンパイラなど) を読み込まない</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>use only known compilers (csc, vbc, fsc)</source>
          <target state="translated">既知のコンパイラ (csc、vbc、fsc) のみを使用する</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In order to build an executable application instead of a library, you need a <bpt id="p1">[</bpt>special configuration<ept id="p1">](project-json.md#emitentrypoint)</ept> section in your project.json file:</source>
          <target state="translated">ライブラリではなく、実行可能なアプリケーションをビルドするには、project.json ファイルに<bpt id="p1">[</bpt>特別な構成<ept id="p1">](project-json.md#emitentrypoint)</ept>セクションが必要です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">オプション</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">コマンドの短いヘルプを印刷します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Directory in which to place the built binaries.</source>
          <target state="translated">ビルド済みバイナリを配置するディレクトリ。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You also need to define <ph id="ph1">`--framework`</ph> when you specify this option.</source>
          <target state="translated">このオプションを指定する場合は、<ph id="ph1">`--framework`</ph> を定義する必要もあります。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Directory in which to place temporary outputs.</source>
          <target state="translated">一時出力を配置するディレクトリ。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Compiles for a specific framework.</source>
          <target state="translated">特定のフレームワーク用にコンパイルします。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The framework needs to be defined in the <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md#frameworks)</ept> file.</source>
          <target state="translated">フレームワークは <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md#frameworks)</ept> ファイルに定義する必要があります。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Defines a configuration under which to build.</source>
          <target state="translated">ビルドに使用する構成を定義します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If omitted, it defaults to <ph id="ph1">`Debug`</ph>.</source>
          <target state="translated">省略した場合は、既定で <ph id="ph1">`Debug`</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Target runtime to build for.</source>
          <target state="translated">ビルドのターゲット ランタイムです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For a list of Runtime Identifiers (RIDs) you can use, see the <bpt id="p1">[</bpt>RID catalog<ept id="p1">](../rid-catalog.md)</ept>.</source>
          <target state="translated">使用できるランタイム ID (RID) については、<bpt id="p1">[</bpt>RID カタログ<ept id="p1">](../rid-catalog.md)</ept>に関するページを参照してください。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Defines what <ph id="ph1">`*`</ph> should be replaced with in the version field in the <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md#version)</ept> file.</source>
          <target state="translated"><bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md#version)</ept> ファイルのバージョン フィールドで <ph id="ph1">`*`</ph> を置き換える必要がある値を定義します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The format follows NuGet's version guidelines.</source>
          <target state="translated">形式は NuGet のバージョン ガイドラインに従います。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Prints out the incremental safety checks that users need to address in order for incremental compilation to be automatically turned on.</source>
          <target state="translated">インクリメンタル コンパイルを自動的に有効にするために、ユーザーが行う必要のある安全性のインクリメンタル チェックを印刷します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Marks the build as unsafe for incremental build.</source>
          <target state="translated">インクリメンタル ビルドとして安全でないビルドをマークします。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This turns off incremental compilation and forces a clean rebuild of the project dependency graph.</source>
          <target state="translated">これにより、インクリメンタル コンパイルは無効になり、プロジェクトの依存関係グラフのクリーン再ビルドが強制的に行われます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Ignores project-to-project references and only builds the root project specified to build.</source>
          <target state="translated">プロジェクト間参照を無視し、ビルド対象として指定されたルート プロジェクトのみをビルドします。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Build a project and its dependencies:</source>
          <target state="translated">プロジェクトとその依存関係をビルドします。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Build a project and its dependencies using Release configuration:</source>
          <target state="translated">リリース構成を使用して、プロジェクトとその依存関係をビルドします。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Build a project and its dependencies for a specific runtime (in this example, Ubuntu 16.04):</source>
          <target state="translated">特定のランタイム (この例では、Ubuntu 16.04) 用にプロジェクトとその依存関係をビルドします。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>