<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">150d70e3f0a80f7f6e733abee3691a0fe420919f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\preview3\tools\dotnet-migrate.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5b0e7d2b371b668a4468266413254ac79dbf207</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">16025fb07bcad16cf2afa1f9ff0d8e532cc1427b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-migrate command | .NET Core SDK</source>
          <target state="translated">dotnet-migrate コマンド | .NET Core SDK</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-migrate command migrates a project and all of its dependencies.</source>
          <target state="translated">dotnet-migrate コマンドは、プロジェクトとそのすべての依存関係を移行します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-migrate, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-migrate, CLI, CLI コマンド, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-migrate</source>
          <target state="translated">dotnet-migrate</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">名前</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>dotnet-migrate -- Migrates a Preview 2 .NET Core project to Preview 3 .NET Core project</source>
          <target state="translated">dotnet-migrate -- Preview 2 .NET Core プロジェクトを Preview 3 .NET Core プロジェクトに移行します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet migrate`</ph> command will migrate a valid Preview 2 <ph id="ph2">`project.json`</ph> based project to a valid Preview 3 <ph id="ph3">`csproj`</ph> project.</source>
          <target state="translated"><ph id="ph1">`dotnet migrate`</ph> コマンドは、有効な Preview 2 <ph id="ph2">`project.json`</ph> ベースのプロジェクトを有効な Preview 3 <ph id="ph3">`csproj`</ph> プロジェクトに移行します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>By default, the command will migrate the root project and any project references that the root project contains.</source>
          <target state="translated">既定では、このコマンドは、ルート プロジェクトとルート プロジェクトに含まれるすべてのプロジェクト参照を移行します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This behavior can be disabled using the <ph id="ph1">`--skip-project-references`</ph> option at runtime.</source>
          <target state="translated">この動作は、実行時に <ph id="ph1">`--skip-project-references`</ph> オプションを使用して、無効にすることができます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Migration can be done on either:</source>
          <target state="translated">移行は次のいずれかで実行できます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A single project by specifying the <ph id="ph1">`project.json`</ph> file to migrate</source>
          <target state="translated">1 つのプロジェクト。移行する <ph id="ph1">`project.json`</ph> ファイルを指定する</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>All of the directories specified in the <ph id="ph1">`global.json`</ph> file by passing in a path to the <ph id="ph2">`global.json`</ph> file</source>
          <target state="translated"><ph id="ph1">`global.json`</ph> ファイルに指定されたすべてのディレクトリ。<ph id="ph2">`global.json`</ph> ファイルへのパスを渡す</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>On all sub-directories of the given directory recursively</source>
          <target state="translated">再帰的に特定のディレクトリのすべてのサブディレクトリ</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The migrate command will keep the migrated <ph id="ph1">`project.json`</ph> file inside a <ph id="ph2">`backup`</ph> directory which it will create if it doesn't exist.</source>
          <target state="translated">移行コマンドは、<ph id="ph2">`backup`</ph> ディレクトリ内に移行された <ph id="ph1">`project.json`</ph> ファイルを保持します。ディレクトリが存在しない場合は作成されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This can be overriden using the <ph id="ph1">`--skip-backup`</ph> option.</source>
          <target state="translated">これは、<ph id="ph1">`--skip-backup`</ph> オプションを使用すると、オーバーライドされます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>By default, the migration operation will output the state of the migration process to standard output (STDOUT).</source>
          <target state="translated">既定では、移行操作は、標準出力 (STDOUT) に移行プロセスの状態を出力します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you use the <ph id="ph1">`--report-file`</ph> option, that output will also be saved to a file that you specify.</source>
          <target state="translated"><ph id="ph1">`--report-file`</ph> オプションを使用する場合、出力は指定したファイルにも保存されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>As of Preview 3, the <ph id="ph1">`dotnet migrate`</ph> command only supports valid Preview 2 <ph id="ph2">`project.json`</ph> files.</source>
          <target state="translated">Preview 3 の時点で、<ph id="ph1">`dotnet migrate`</ph> コマンドは、有効な Preview 2 <ph id="ph2">`project.json`</ph> ファイルのみをサポートしています。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This means that you cannot use it to migrate old DNX or Preview 1 <ph id="ph1">`project.json`</ph> files directly to csproj; you first need to migrate them to Preview 2 project.json files and then to csproj files.</source>
          <target state="translated">つまり、このコマンドを使用して、古い DNX や Preview 1 <ph id="ph1">`project.json`</ph> ファイルを直接 csproj に移行することはできません。最初に Preview 2 project.json ファイルに移行して、csproj ファイルに移行する必要があります。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In the future, we will add support for Preview 1 projects.</source>
          <target state="translated">今後、Preview 1 プロジェクトのサポートも追加する予定です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">オプション</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">コマンドの短いヘルプを印刷します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Template csproj file to use for migration.</source>
          <target state="translated">移行に使用するテンプレートの csproj ファイル。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>By default, the same template as the one dropped by <ph id="ph1">`dotnet new`</ph> will be used.</source>
          <target state="translated">既定では、使用される <ph id="ph1">`dotnet new`</ph> によってドロップされるテンプレートと同じテンプレートです。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The version of the sdk package that will be referenced in the migrated app.</source>
          <target state="translated">移行されたアプリで参照される sdk パッケージのバージョン。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The default is the version of the sdk in dotnet new.</source>
          <target state="translated">既定は、dotnet new 内の sdk のバージョンです。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The path to the xproj file to use.</source>
          <target state="translated">使用する xproj ファイルへのパス。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Required when there is more than one xproj in a project directory.</source>
          <target state="translated">プロジェクト ディレクトリに複数の xproj がある場合に必要です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Skip migrating project references.</source>
          <target state="translated">プロジェクト参照の移行をスキップします。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>By default project references are migrated recursively.</source>
          <target state="translated">既定では、プロジェクト参照は再帰的に移行されます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Output migration report to a file in addition to the console.</source>
          <target state="translated">移行レポートをコンソールだけでなく、ファイルに出力します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Output migration report file as json rather than user messages.</source>
          <target state="translated">ユーザー メッセージではなく、json として移行レポート ファイルを出力します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Skip moving project.json, global.json, and <ph id="ph1">\*</ph>.xproj to a <ph id="ph2">`backup`</ph> directory after successful migration.</source>
          <target state="translated">移行が成功した後に、project.json、global.json、および <ph id="ph1">\*</ph>.xproj の <ph id="ph2">`backup`</ph> ディレクトリへの移動をスキップします。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Migrate a project in the current directory and all of its project to project dependencies:</source>
          <target state="translated">現在のディレクトリのプロジェクトとそのプロジェクト間の依存関係をすべて移行します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Migrate all projects that <ph id="ph1">`global.json`</ph> file points to:</source>
          <target state="translated"><ph id="ph1">`global.json`</ph> ファイルがポイントするすべてのプロジェクトを移行します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Migrate only the current project and no project to project dependencies and use a specific SDK version:</source>
          <target state="translated">現在のプロジェクトのみを移行し、プロジェクト間の依存関係は移行しません。特定の SDK バージョンを使用します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>