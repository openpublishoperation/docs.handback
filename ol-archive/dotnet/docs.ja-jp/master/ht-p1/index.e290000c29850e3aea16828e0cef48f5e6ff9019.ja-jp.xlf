<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b6b38aa7f59002dcfbb229ce6522df67b611028</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">51d85d4a1a8987cad00d52188931fd6d20e3f794</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">294100657d3c5bf03489378ac2996c9e3eb58259</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>.NET Core</source>
          <target state="translated">.NET Core</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>.NET Core</source>
          <target state="translated">.NET Core</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>.NET Core</source>
          <target state="translated">.NET Core</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Check out the <bpt id="p1">[</bpt>"Getting Started" tutorials<ept id="p1">](getting-started.md)</ept> to learn how to create a simple .NET Core application.</source>
          <target state="translated">「<bpt id="p1">[</bpt>Getting Started<ept id="p1">](getting-started.md)</ept>」 (概要) では、単純な .NET Core アプリケーションを作成する方法を学習できます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It only takes a few minutes to get your first app up and running.</source>
          <target state="translated">最初のアプリを、ほんの数分で起動および実行できます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>.NET Core is a general purpose development platform maintained by Microsoft and the .NET community on <bpt id="p1">[</bpt>GitHub<ept id="p1">](https://github.com/dotnet/core)</ept>.</source>
          <target state="translated">.NET Core は、<bpt id="p1">[</bpt>GitHub<ept id="p1">](https://github.com/dotnet/core)</ept> で Microsoft および .NET コミュニティによって管理される一般的な開発プラットフォームです。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It is cross-platform, supporting Windows, macOS and Linux, and can be used in device, cloud, and embedded/IoT scenarios.</source>
          <target state="translated">クロスプラットフォームであり、Windows、macOS、Linux をサポートし、デバイス、クラウド、および埋め込み/IoT シナリオで使用できます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following characteristics best define .NET Core:</source>
          <target state="translated">.NET Core の典型的な特性は次のとおりです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Flexible deployment:<ept id="p1">**</ept> Can be included in your app or installed side-by-side user- or machine-wide.</source>
          <target state="translated"><bpt id="p1">**</bpt>柔軟な展開:<ept id="p1">**</ept> アプリに含めることも、ユーザー全体またはコンピューター全体に side-by-side (横並び) にインストールすることもできます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Cross-platform:<ept id="p1">**</ept> Runs on Windows, macOS and Linux; can be ported to other OSes.</source>
          <target state="translated"><bpt id="p1">**</bpt>クロスプラットフォーム:<ept id="p1">**</ept> Windows、macOS、Linux で実行され、他の OS に移植できます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>supported Operating Systems (OS)<ept id="p1">](https://github.com/dotnet/core/blob/master/roadmap.md)</ept>, CPUs and application scenarios will grow over time, provided by Microsoft, other companies, and individuals.</source>
          <target state="translated"><bpt id="p1">[</bpt>サポートされるオペレーティング システム (OS)<ept id="p1">](https://github.com/dotnet/core/blob/master/roadmap.md)</ept>、CPU、およびアプリケーションのシナリオは Microsoft、その他の企業、および個人によって提供され、時間の経過に伴って増加します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Command-line tools:<ept id="p1">**</ept>  All product scenarios can be exercised at the command-line.</source>
          <target state="translated"><bpt id="p1">**</bpt>コマンドライン ツール:<ept id="p1">**</ept> 製品のすべてのシナリオは、コマンドラインで実行できます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Compatible:<ept id="p1">**</ept> .NET Core is compatible with .NET Framework, Xamarin and Mono, via the <bpt id="p2">[</bpt>.NET Standard Library<ept id="p2">](../standard/library.md)</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>互換性:<ept id="p1">**</ept> .NET Core は、<bpt id="p2">[</bpt>.NET 標準ライブラリ<ept id="p2">](../standard/library.md)</ept>経由で .NET Framework、Xamarin、Mono と互換性があります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Open source:<ept id="p1">**</ept> The .NET Core platform is open source, using MIT and Apache 2 licenses.</source>
          <target state="translated"><bpt id="p1">**</bpt>オープン ソース:<ept id="p1">**</ept> .NET Core プラットフォームはオープン ソースであり、MIT および Apache 2 ライセンスを使用します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Documentation is licensed under <bpt id="p1">[</bpt>CC-BY<ept id="p1">](http://creativecommons.org/licenses/by/4.0/)</ept>.</source>
          <target state="translated">ドキュメントは <bpt id="p1">[</bpt>CC-BY<ept id="p1">](http://creativecommons.org/licenses/by/4.0/)</ept> 下でライセンス付与されています。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>.NET Core is a <bpt id="p1">[</bpt>.NET Foundation<ept id="p1">](http://www.dotnetfoundation.org/)</ept> project.</source>
          <target state="translated">.NET Core は <bpt id="p1">[</bpt>.NET Foundation<ept id="p1">](http://www.dotnetfoundation.org/)</ept> プロジェクトです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Supported by Microsoft:<ept id="p1">**</ept> .NET Core is supported by Microsoft, per <bpt id="p2">[</bpt>.NET Core Support<ept id="p2">](https://www.microsoft.com/net/core/support/)</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Microsoft によるサポート:<ept id="p1">**</ept> .NET Core は、<bpt id="p2">[</bpt>.NET Core サポート<ept id="p2">](https://www.microsoft.com/net/core/support/)</ept>ごとに Microsoft によってサポートされます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Composition</source>
          <target state="translated">コンポジション</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>.NET Core is composed of the following parts:</source>
          <target state="translated">.NET Core は、次の部分で構成されます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>.NET runtime<ept id="p1">](https://github.com/dotnet/coreclr)</ept>, which provides a type system, assembly loading, a garbage collector, native interop and other basic services.</source>
          <target state="translated"><bpt id="p1">[</bpt>.NET ランタイム<ept id="p1">](https://github.com/dotnet/coreclr)</ept>。型システム、アセンブリ読み込み、ガベージ コレクター、ネイティブ相互運用機能、およびその他の基本的なサービスを提供します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A set of <bpt id="p1">[</bpt>framework libraries<ept id="p1">](https://github.com/dotnet/corefx)</ept>, which provide primitive data types, app composition types and fundamental utilities.</source>
          <target state="translated">一連の<bpt id="p1">[</bpt>フレームワーク ライブラリ<ept id="p1">](https://github.com/dotnet/corefx)</ept>。プリミティブ データ型、アプリ コンポジションの種類、および基本的なユーティリティを提供します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>set of SDK tools<ept id="p1">](https://github.com/dotnet/cli)</ept> and <bpt id="p2">[</bpt>language compilers<ept id="p2">](https://github.com/dotnet/roslyn)</ept> that enable the base developer experience, available in the <bpt id="p3">[</bpt>.NET Core SDK<ept id="p3">](sdk.md)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>SDK ツールのセット<ept id="p1">](https://github.com/dotnet/cli)</ept>と<bpt id="p2">[</bpt>言語コンパイラ<ept id="p2">](https://github.com/dotnet/roslyn)</ept>。<bpt id="p3">[</bpt>.NET Core SDK<ept id="p3">](sdk.md)</ept> に含まれており、ベース開発者エクスペリエンスを有効にします。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The 'dotnet' app host, which is used to launch .NET Core apps.</source>
          <target state="translated">'dotnet' アプリケ ホスト。.NET Core アプリの起動に使用されます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>It selects the runtime and hosts the runtime, provides an assembly loading policy and launches the app.</source>
          <target state="translated">ランタイムの選択、ランタイムのホスト、アセンブリ読み込みポリシーの提供、およびアプリの起動を行います。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The same host is also used to launch SDK tools in much the same way.</source>
          <target state="translated">同じホストが、ほぼ同じ方法で SDK ツールの起動にも使用されます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Languages</source>
          <target state="translated">言語</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The C# and F# languages (Visual Basic is coming) can be used to write applications and libraries for .NET Core.</source>
          <target state="translated">.NET Core のアプリケーションとライブラリを記述するには、C# および F# 言語を使用できます (Visual Basic も間もなく使用可能になります)。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The compilers run on .NET Core, enabling you to develop for .NET Core anywhere it runs.</source>
          <target state="translated">コンパイラは .NET Core 上で実行され、任意の実行場所で .NET Core 用の開発を可能にします。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In general, you will not use the compilers directly, but indirectly using the SDK tools.</source>
          <target state="translated">一般的に、コンパイラは直接使用せず、SDK ツールを使用して間接的に使用します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The C# and F# compilers and the .NET Core tools are or can be integrated into several text editors and IDEs, including Visual Studio, <bpt id="p1">[</bpt>Visual Studio Code<ept id="p1">](https://marketplace.visualstudio.com/items?itemName=ms-vscode.csharp)</ept>, Sublime Text and Vim, making .NET Core development an option in your favorite coding environment and OS.</source>
          <target state="translated">C# および F# コンパイラと .NET Core ツールは、 Visual Studio、<bpt id="p1">[</bpt>Visual Studio Code<ept id="p1">](https://marketplace.visualstudio.com/items?itemName=ms-vscode.csharp)</ept>、Sublime Text、Vim などの複数のテキスト エディターおよび IDE に統合されているか、または統合することができます。これにより、任意のコーディング環境および OS で .NET Core 開発を行うことができます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This integration is provided, in part, by the good folks of the <bpt id="p1">[</bpt>OmniSharp project<ept id="p1">](http://www.omnisharp.net/)</ept>.</source>
          <target state="translated">この統合は、1 つには <bpt id="p1">[</bpt>OmniSharp プロジェクト<ept id="p1">](http://www.omnisharp.net/)</ept>の優れた要員によって提供されます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>.NET APIs and Compatibility</source>
          <target state="translated">.NET API と互換性</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>.NET Core can be thought of as a cross-platform version of the .NET Framework, at the layer of the .NET Framework Base Class Libraries (BCL).</source>
          <target state="translated">.NET Core は、.NET Framework 基本クラス ライブラリ (BCL) のレイヤーでは .NET Framework のクロスプラットフォーム バージョンとして考えることができます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>It implements the <bpt id="p1">[</bpt>.NET Standard Library<ept id="p1">](../standard/library.md)</ept> specification.</source>
          <target state="translated">これは <bpt id="p1">[</bpt>.NET 標準ライブラリ<ept id="p1">](../standard/library.md)</ept>仕様を実装します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>.NET Core provides a subset of the APIs that are available in the .NET Framework or Mono/Xamarin.</source>
          <target state="translated">.NET Core は、.NET Framework または Mono/Xamarin で使用可能な API のサブセットを提供します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In some cases, types are not fully implemented (some members are not available or have been moved).</source>
          <target state="translated">場合によっては、型は完全には実装されません (一部のメンバーが使用できないか、移動されています)。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Look at the <bpt id="p1">[</bpt>.NET Core roadmap<ept id="p1">](https://github.com/dotnet/core/blob/master/roadmap.md)</ept> to learn more about the .NET Core API roadmap.</source>
          <target state="translated">.NET Core API ロードマップの詳細については、「<bpt id="p1">[</bpt>.NET Core Roadmap<ept id="p1">](https://github.com/dotnet/core/blob/master/roadmap.md)</ept>」 (.NET Core ロードマップ) を参照してください。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Relationship to the .NET Standard Library</source>
          <target state="translated">.NET 標準ライブラリとの関係</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>.NET Standard Library<ept id="p1">](../standard/library.md)</ept> is an API spec that describes the consistent set of .NET APIs that developers can expect in each .NET implementation.</source>
          <target state="translated"><bpt id="p1">[</bpt>.NET 標準ライブラリ<ept id="p1">](../standard/library.md)</ept>は、開発者が各 .NET 実装で予想できる .NET API の一貫性のあるセットを表す API 仕様です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>.NET implementations need to implement this spec in order to be considered .NET Standard Library compliant and to support libraries that target the .NET Standard Library.</source>
          <target state="translated">.NET 実装では、.NET 標準ライブラリ準拠と見なされるとともに、標準ライブラリをターゲットとするライブラリをサポートするために、この仕様を実装する必要があります。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>.NET Core implements the .NET Standard Library, and therefore supports .NET Standard Libraries.</source>
          <target state="translated">.NET Core は .NET 標準ライブラリを実装するので、.NET 標準ライブラリをサポートしています。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Workloads</source>
          <target state="translated">作業負荷</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>By itself, .NET Core includes a single application model -- console apps -- which is useful for tools, local services and text-based games.</source>
          <target state="translated">.NET Core 自体には 1 つのアプリケーション モデル (コンソール アプリ) が含まれており、ツール、ローカル サービス、およびテキストベースのゲームに便利です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Additional application models have been built on top of .NET Core to extend its functionality, such as:</source>
          <target state="translated">次のような機能を拡張するために、.NET Core の上に追加のアプリケーション モデルがビルドされています。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ASP.NET Core<ept id="p1">](http://asp.net)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>ASP.NET Core<ept id="p1">](http://asp.net)</ept></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows 10 Universal Windows Platform (UWP)<ept id="p1">](https://developer.microsoft.com/windows)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Windows 10 ユニバーサル Windows プラットフォーム (UWP)<ept id="p1">](https://developer.microsoft.com/windows)</ept></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Xamarin.Forms<ept id="p1">](https://www.xamarin.com/forms)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Xamarin.Forms<ept id="p1">](https://www.xamarin.com/forms)</ept></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Open Source</source>
          <target state="translated">オープン ソース</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core<ept id="p1">](https://github.com/dotnet/core)</ept> is open source (MIT license) and was contributed to the <bpt id="p2">[</bpt>.NET Foundation<ept id="p2">](http://dotnetfoundation.org)</ept> by Microsoft in 2014.</source>
          <target state="translated"><bpt id="p1">[</bpt>.NET Core<ept id="p1">](https://github.com/dotnet/core)</ept> はオープン ソース (MIT ライセンス) であり、2014 年に Microsoft によって <bpt id="p2">[</bpt>.NET Foundation<ept id="p2">](http://dotnetfoundation.org)</ept> に提供されたものです。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>It is now one of the most active .NET Foundation projects.</source>
          <target state="translated">現在では、最もアクティブな .NET Foundation プロジェクトの 1 つとなっています。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>It can be freely adopted by individuals and companies, including for personal, academic or commercial purposes.</source>
          <target state="translated">個人、学術、商用などの目的で、個人および企業が自由に採用できます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Multiple companies use .NET Core as part of apps, tools, new platforms and hosting services.</source>
          <target state="translated">複数の企業が、アプリ、ツール、新しいプラットフォーム、およびホスティング サービスの一部として .NET Core を使用しています。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Some of these companies make significant contributions to .NET Core on GitHub and provide guidance on the product direction as part of the <bpt id="p1">[</bpt>.NET Foundation Technical Steering Group<ept id="p1">](http://www.dotnetfoundation.org/blog/tsg-welcome)</ept>.</source>
          <target state="translated">これらの企業の一部は、GitHub の .NET Core に多大な貢献をしており、<bpt id="p1">[</bpt>.NET Foundation テクニカル ステアリング グループ<ept id="p1">](http://www.dotnetfoundation.org/blog/tsg-welcome)</ept>の一員として製品の方向性に関するガイダンスを提供しています。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Acquisition</source>
          <target state="translated">取得</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>.NET Core is distributed in two main ways, as packages on NuGet.org and as standalone distributions.</source>
          <target state="translated">.NET Core は、NuGet.org でのパッケージとスタンドアロンでの配布という 2 つの主な方法で配布されます。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Distributions</source>
          <target state="translated">分布</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can download .NET Core at the <bpt id="p1">[</bpt>.NET Core Getting Started<ept id="p1">](https://www.microsoft.com/net/core)</ept> page.</source>
          <target state="translated">.NET Core は、「<bpt id="p1">[</bpt>.NET Core Getting Started<ept id="p1">](https://www.microsoft.com/net/core)</ept>」 (.NET Core の概要) ページでダウンロードできます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Microsoft .NET Core<ept id="p1">*</ept> distribution includes the CoreCLR runtime, associated libraries, a console application host and the <ph id="ph1">`dotnet`</ph> app launcher.</source>
          <target state="translated"><bpt id="p1">*</bpt>Microsoft .NET Core<ept id="p1">*</ept> 配布には、CoreCLR ランタイム、関連付けられているライブラリ、コンソール アプリケーション ホスト、および <ph id="ph1">`dotnet`</ph> アプリ ランチャーが含まれています。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>It is described by the <bpt id="p1">[</bpt><ph id="ph1">`Microsoft.NETCore.App`</ph><ept id="p1">](https://www.nuget.org/packages/Microsoft.NETCore.App)</ept> metapackage.</source>
          <target state="translated">これは <bpt id="p1">[</bpt><ph id="ph1">`Microsoft.NETCore.App`</ph><ept id="p1">](https://www.nuget.org/packages/Microsoft.NETCore.App)</ept> メタパッケージで記述されます。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>Microsoft .NET Core SDK<ept id="p1">*</ept> distribution includes .NET Core and a set of tools for restoring NuGet packages and compiling and building apps.</source>
          <target state="translated"><bpt id="p1">*</bpt>Microsoft .NET Core SDK<ept id="p1">*</ept> 配布には、.NET Core と、NuGet パッケージの復元およびアプリのコンパイルとビルドのためのツール セットが含まれています。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Typically, you will first install the .NET Core SDK to get started with .NET Core development.</source>
          <target state="translated">通常、.NET Core 開発を開始するには、最初に .NET Core SDK をインストールします。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You may choose to install additional .NET Core (perhaps pre-release) builds.</source>
          <target state="translated">追加の .NET Core (たとえばプレリリース版) ビルドをインストールすることもできます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Packages</source>
          <target state="translated">パッケージ</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core Packages<ept id="p1">](packages.md)</ept> contain the .NET Core runtime and libraries (reference assemblies and implementations).</source>
          <target state="translated"><bpt id="p1">[</bpt>.NET Core パッケージ<ept id="p1">](packages.md)</ept>には、.NET Core ランタイムおよびライブラリ (参照アセンブリおよび実装) が含まれています。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">[</bpt>System.Net.Http<ept id="p1">](https://www.nuget.org/packages/System.Net.Http/)</ept>.</source>
          <target state="translated">たとえば、<bpt id="p1">[</bpt>System.Net.Http<ept id="p1">](https://www.nuget.org/packages/System.Net.Http/)</ept> です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core Metapackages<ept id="p1">](packages.md)</ept> describe various layers and app-models by referencing the appropriate set of versioned library packages.</source>
          <target state="translated"><bpt id="p1">[</bpt>.NET Core メタパッケージ<ept id="p1">](packages.md)</ept>は、バージョン管理されたライブラリ パッケージの適切なセットを参照することで、さまざまなレイヤーおよびアプリモデルを記述します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Architecture</source>
          <target state="translated">アーキテクチャ</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>.NET Core is a cross-platform .NET implementation.</source>
          <target state="translated">.NET Core は、クロスプラットフォーム .NET 実装です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The primary architectural concerns unique to .NET Core are related to providing platform-specific implementations for supported platforms.</source>
          <target state="translated">.NET Core に固有の主要なアーキテクチャの問題は、サポートされているプラットフォームでプラットフォーム固有の実装を提供することに関連します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Environments</source>
          <target state="translated">環境</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>.NET Core is supported by Microsoft on Windows, macOS and Linux.</source>
          <target state="translated">.NET Core は、Microsoft Windows、macOS、Linux でサポートされています。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>On Linux, Microsoft primarily supports .NET Core running on Red Hat Enterprise Linux (RHEL) and Debian distribution families.</source>
          <target state="translated">Linux 上で Microsoft は、Red Hat Enterprise Linux (RHEL) および Debian 配布ファミリで実行されている .NET Core を主にサポートしています。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>.NET Core currently supports X64 CPUs.</source>
          <target state="translated">現在、.NET Core は X64 CPU をサポートしています。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>On Windows, X86 is also supported.</source>
          <target state="translated">Windows では、X86 もサポートされています。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>ARM64 and ARM32 are in progress.</source>
          <target state="translated">ARM64 および ARM32 は進行中です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>.NET Core Roadmap<ept id="p1">](https://github.com/dotnet/core/blob/master/roadmap.md)</ept> provides more detailed information on workload and OS and CPU environment support and plans.</source>
          <target state="translated">「<bpt id="p1">[</bpt>.NET Core Roadmap<ept id="p1">](https://github.com/dotnet/core/blob/master/roadmap.md)</ept>」 (.NET Core ロードマップ) は、ワークロードと OS および CPU の環境サポートと計画に関する詳細情報を提供します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Other companies or groups may support .NET Core for other app types and environment.</source>
          <target state="translated">他の企業やグループは、他のアプリの種類および環境に対して .NET Core をサポートする場合があります。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Designed for Adaptability</source>
          <target state="translated">適応できる設計</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>.NET Core has been built as a very similar but unique product relative to other .NET products.</source>
          <target state="translated">.NET Core は、その他の .NET 製品と非常に似ているがユニークな製品としてビルドされています。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>It has been designed to enable broad adaptability to new platforms, for new workloads and with new compiler toolchains.</source>
          <target state="translated">新しいワークロード用に新しいコンパイラ ツールチェーンにより、新しいプラットフォームへの広範な適応性を可能にするように設計されています。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>It has several OS and CPU ports in progress and may be ported to many more.</source>
          <target state="translated">進行中の複数の OS および CPU ポートがあり、さらに多くの OS に移植できます。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>An example is the <bpt id="p1">[</bpt>LLILC<ept id="p1">](https://github.com/dotnet/llilc)</ept> project, which is an early prototype of native compilation for .NET Core via the <bpt id="p2">[</bpt>LLVM<ept id="p2">](http://llvm.org/)</ept> compiler.</source>
          <target state="translated">例として、<bpt id="p2">[</bpt>LLVM<ept id="p2">](http://llvm.org/)</ept> コンパイラによる .NET Core のネイティブ コンパイルの初期プロトタイプである、<bpt id="p1">[</bpt>LLILC<ept id="p1">](https://github.com/dotnet/llilc)</ept> プロジェクトがあります。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The product is broken into several pieces, enabling the various parts to be adapted to new platforms on different schedules.</source>
          <target state="translated">この製品は複数の部分に分割されており、さまざまなスケジュールで新しいプラットフォームにさまざまな部分を適応させることができます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The runtime and platform-specific foundational libraries must be ported as a unit.</source>
          <target state="translated">ランタイムとプラットフォーム固有の基本的なライブラリは、ユニットとして移植する必要があります。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Platform-agnostic libraries should work as-is on all platforms, by construction.</source>
          <target state="translated">プラットフォームに依存しないライブラリは、構造により、すべてのプラットフォームでそのまま機能します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>There is a project bias to reducing platform-specific implementations to increase developer efficiency, preferring platform-neutral C# code whenever an algorithm or API can be implemented in-full or in-part that way.</source>
          <target state="translated">開発者の効率性を高めるために、プロジェクトではプラットフォーム固有の実装を低減する傾向にあり、その方向でアルゴリズムまたは API を完全または部分的に実装できる場合は、プラットフォームに依存しない C# コードが常に優先されます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>People commonly ask how .NET Core is implemented in order to support multiple operating systems.</source>
          <target state="translated">ユーザーから、複数のオペレーティング システムをサポートするには .NET Core をどのように実装すべきかという質問をよく受けます。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>They typically ask if there are separate implementations or if <bpt id="p1">[</bpt>conditional compilation<ept id="p1">](https://en.wikipedia.org/wiki/Conditional_compilation)</ept> is used.</source>
          <target state="translated">多いのは、個別の実装を行うのか、または<bpt id="p1">[</bpt>条件付きコンパイル<ept id="p1">](https://en.wikipedia.org/wiki/Conditional_compilation)</ept>を使用するのかという質問です。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>It's both, with a strong bias towards conditional compilation.</source>
          <target state="translated">どちらも正しいですが、条件付きコンパイルが特に好まれる傾向にあります。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>You can see in the chart below that the vast majority of <bpt id="p1">[</bpt>CoreFX<ept id="p1">](https://github.com/dotnet/corefx)</ept> is platform-neutral code that is shared across all platforms.</source>
          <target state="translated">次の図に示すように、 <bpt id="p1">[</bpt>CoreFX<ept id="p1">](https://github.com/dotnet/corefx)</ept> の大部分は、すべてのプラットフォーム間で共有されているプラットフォームに依存しないコードです。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Platform-neutral code can be implemented as a single portable assembly that be used on all platforms.</source>
          <target state="translated">プラットフォームに依存しないコードは、すべてのプラットフォームで使用される 1 つのポータブル アセンブリとして実装できます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>CoreFX: Lines of Code per Platform</source>
          <target state="translated">CoreFX: プラットフォームごとのコードの行</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Windows and Unix implementations are similar in size.</source>
          <target state="translated">Windows 実装と Unix 実装はほぼ同じサイズです。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Windows has a larger implementation since CoreFX implements some Windows-only features, such as <bpt id="p1">[</bpt>Microsoft.Win32.Registry<ept id="p1">](https://github.com/dotnet/corefx/tree/master/src/Microsoft.Win32.Registry)</ept> but does not yet implement any Unix-only concepts.</source>
          <target state="translated">CoreFX は、<bpt id="p1">[</bpt>Microsoft.Win32.Registry<ept id="p1">](https://github.com/dotnet/corefx/tree/master/src/Microsoft.Win32.Registry)</ept> などの Windows 専用の機能をいくつか実装しますが、Unix 専用の概念はまだ実装しないので、Windows の実装の方が大きくなります。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>You will also see that the majority of the Linux and macOS implementations are shared across a Unix implementation, while the Linux- and macOS-specific implementations are roughly similar in size.</source>
          <target state="translated">また、Linux 実装と macOS 実装の大部分は Unix 実装全体で共有されており、Linux 固有の実装と macOS 固有の実装はほぼ同じサイズです。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>There are a mix of platform-specific and platform-neutral libraries in .NET Core.</source>
          <target state="translated">.NET Core には、プラットフォーム固有のライブラリとプラットフォームに依存しないライブラリが混在しています。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>You can see the pattern in a few examples:</source>
          <target state="translated">このパターンは次のいくつかの例に見られます。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CoreCLR<ept id="p1">](https://github.com/dotnet/coreclr)</ept> is platform-specific.</source>
          <target state="translated"><bpt id="p1">[</bpt>CoreCLR<ept id="p1">](https://github.com/dotnet/coreclr)</ept> はプラットフォーム固有です。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>It's built in C/C++, so is platform-specific by construction.</source>
          <target state="translated">C/C++ でビルドされるので、構造によりプラットフォーム固有です。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.IO<ept id="p1">](https://github.com/dotnet/corefx/tree/master/src/System.IO)</ept> and <bpt id="p2">[</bpt>System.Security.Cryptography.Algorithms<ept id="p2">](https://github.com/dotnet/corefx/tree/master/src/System.Security.Cryptography.Algorithms)</ept> are platform-specific, given that the storage and cryptography APIs differ significantly on each OS.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.IO<ept id="p1">](https://github.com/dotnet/corefx/tree/master/src/System.IO)</ept> と <bpt id="p2">[</bpt>System.Security.Cryptography.Algorithms<ept id="p2">](https://github.com/dotnet/corefx/tree/master/src/System.Security.Cryptography.Algorithms)</ept> は、記憶域および暗号化 API が各 OS で大幅に異なるので、プラットフォーム固有です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://github.com/dotnet/corefx/tree/master/src/System.Collections)</ept> and <bpt id="p2">[</bpt>System.Linq<ept id="p2">](https://github.com/dotnet/corefx/tree/master/src/System.Linq)</ept> are platform-neutral, given that they create and operate over data structures.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://github.com/dotnet/corefx/tree/master/src/System.Collections)</ept> と <bpt id="p2">[</bpt>System.Linq<ept id="p2">](https://github.com/dotnet/corefx/tree/master/src/System.Linq)</ept> は、データ構造上で作成および操作を行うので、プラットフォームに依存しません。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Comparisons to other .NET Platforms</source>
          <target state="translated">その他の .NET プラットフォームとの比較</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>It is perhaps easiest to understand the size and shape of .NET Core by comparing it to existing .NET platforms.</source>
          <target state="translated">.NET Core のサイズとシェイプは、既存の .NET プラットフォームと比較するとよくわかります。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Comparison with .NET Framework</source>
          <target state="translated">.NET Framework との比較</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The .NET platform was first announced by Microsoft in 2000 and then evolved from there.</source>
          <target state="translated">.NET プラットフォームは、最初に 2000 年に Microsoft によって発表され、進化してきました。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The .NET Framework has been the primary .NET product produced by Microsoft during that 15+ year span.</source>
          <target state="translated">.NET Framework はその後 15 年以上にわたり、Microsoft によって製造される主要な .NET 製品となっています。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The major differences between .NET Core and the .NET Framework:</source>
          <target state="translated">.NET Core と .NET Framework の主な違いは、次のとおりです。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>App-models<ept id="p1">**</ept> -- .NET Core does not support all the .NET Framework app-models, in part because many of them are built on Windows technologies, such as WPF (built on top of DirectX).</source>
          <target state="translated"><bpt id="p1">**</bpt>アプリモデル<ept id="p1">**</ept> -- .NET Core は、すべての .NET Framework アプリモデルをサポートするわけではありません。その理由の 1 つは、それらの多くが WPF (DirectX の上にビルドされる) などの Windows テクノロジに基づいてビルドされることにあります。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The console and ASP.NET Core app-models are supported by both .NET Core and .NET Framework.</source>
          <target state="translated">コンソールおよび ASP.NET Core アプリモデルは、.NET Core と .NET Framework の両方でサポートされています。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>APIs<ept id="p1">**</ept> -- .NET Core contains many of the same, but fewer, APIs as the .NET Framework, and with a different factoring (assembly names are different; type shape differs in key cases).</source>
          <target state="translated"><bpt id="p1">**</bpt>API<ept id="p1">**</ept> -- .NET Core には、.NET Framework と同じ API の多くが含まれており (ただし、数はそれよりも少ない)、異なるファクタリングを使用します (アセンブリ名が異なります。主要なケースでは型シェイプが異なります)。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>These differences currently typically require changes to port source to .NET Core.</source>
          <target state="translated">現在、これらの違いにより、通常は .NET Core のポート ソースへの変更が必要となります。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>.NET Core implements the <bpt id="p1">[</bpt>.NET Standard Library<ept id="p1">](../standard/library.md)</ept> API, which will grow to include more of the .NET Framework BCL API over time.</source>
          <target state="translated">.NET Core は <bpt id="p1">[</bpt>.NET 標準ライブラリ<ept id="p1">](../standard/library.md)</ept> API を実装します。この API は、時間の経過に伴って .NET Framework BCL API のより多くの部分を含めるようにサイズが増加します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Subsystems<ept id="p1">**</ept> -- .NET Core implements a subset of the subsystems in the .NET Framework, with the goal of a simpler implementation and programming model.</source>
          <target state="translated"><bpt id="p1">**</bpt>サブシステム<ept id="p1">**</ept> -- .NET Core は、より単純な実装とプログラミング モデルを目的として、.NET Framework 内のサブシステムのサブセットを実装します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For example, Code Access Security (CAS) is not supported, while reflection is supported.</source>
          <target state="translated">たとえば、コード アクセス セキュリティ (CAS) はサポートされていませんが、リフレクションはサポートされています。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms<ept id="p1">**</ept> -- The .NET Framework supports Windows and Windows Server while .NET Core also supports macOS and Linux.</source>
          <target state="translated"><bpt id="p1">**</bpt>プラットフォーム<ept id="p1">**</ept> -- .NET Framework は Windows と Windows Server をサポートしており、.NET Core は macOS と Linux もサポートしています。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Open Source<ept id="p1">**</ept> -- .NET Core is open source, while a <bpt id="p2">[</bpt>read-only subset of the .NET Framework<ept id="p2">](https://github.com/microsoft/referencesource)</ept> is open source.</source>
          <target state="translated"><bpt id="p1">**</bpt>オープン ソース<ept id="p1">**</ept> -- .NET Core はオープン ソースであり、<bpt id="p2">[</bpt>.NET Framework の読み取り専用のサブセット<ept id="p2">](https://github.com/microsoft/referencesource)</ept>はオープン ソースです。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>While .NET Core is unique and has significant differences to the .NET Framework and other .NET platforms, it is straightforward to share code, using either source or binary sharing techniques.</source>
          <target state="translated">.NET Core はユニークな製品で、.NET Framework およびその他の .NET プラットフォームとは大きな違いがあり、ソースまたはバイナリの共有技術を使用してコードを簡単に共有できます。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Comparison with Mono</source>
          <target state="translated">Mono との比較</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Mono<ept id="p1">](http://www.mono-project.com/)</ept> is the original cross-platform and <bpt id="p2">[</bpt>open source<ept id="p2">](https://github.com/mono/mono)</ept> .NET implementation, first shipping in 2004.</source>
          <target state="translated"><bpt id="p1">[</bpt>Mono<ept id="p1">](http://www.mono-project.com/)</ept> は、オリジナルのクロスプラットフォームおよび<bpt id="p2">[</bpt>オープン ソース<ept id="p2">](https://github.com/mono/mono)</ept>の .NET 実装であり、2004 年に登場しました。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>It can be thought of as a community clone of the .NET Framework.</source>
          <target state="translated">.NET Framework のコミュニティの複製として考えることができます。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The Mono project team relied on the open <bpt id="p1">[</bpt>.NET standards<ept id="p1">](https://github.com/dotnet/coreclr/blob/master/Documentation/project-docs/dotnet-standards.md)</ept> (notably ECMA 335) published by Microsoft in order to provide a compatible implementation.</source>
          <target state="translated">Mono プロジェクト チームは、互換性のある実装を提供するために、Microsoft によって発行されたオープン <bpt id="p1">[</bpt>.NET 標準<ept id="p1">](https://github.com/dotnet/coreclr/blob/master/Documentation/project-docs/dotnet-standards.md)</ept> (特に ECMA 335) に依存していました。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The major differences between .NET Core and Mono:</source>
          <target state="translated">.NET Core と .NET Mono の主な違いは、次のとおりです。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>App-models<ept id="p1">**</ept> -- Mono supports a subset of the .NET Framework app-models (for example, Windows Forms) and some additional ones (for example, <bpt id="p2">[</bpt>Xamarin.iOS<ept id="p2">](https://www.xamarin.com/platform)</ept>) through the Xamarin product.</source>
          <target state="translated"><bpt id="p1">**</bpt>アプリモデル<ept id="p1">**</ept> -- Mono は、Xamarin 製品を介して .NET Framework アプリモデル (たとえば、Windows フォーム) のサブセットおよびいくつかの追加のアプリモデル (たとえば、<bpt id="p2">[</bpt>Xamarin.iOS<ept id="p2">](https://www.xamarin.com/platform)</ept>) をサポートしています。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>.NET Core doesn't support these.</source>
          <target state="translated">.NET Core はこれらをサポートしていません。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>APIs<ept id="p1">**</ept> -- Mono supports a <bpt id="p2">[</bpt>large subset<ept id="p2">](http://docs.go-mono.com/?link=root%3a%2fclasslib)</ept> of the .NET Framework APIs, using the same assembly names and factoring.</source>
          <target state="translated"><bpt id="p1">**</bpt>API<ept id="p1">**</ept> -- Mono は、.NET Framework API の<bpt id="p2">[</bpt>大規模なサブセット<ept id="p2">](http://docs.go-mono.com/?link=root%3a%2fclasslib)</ept>をサポートしており、同じアセンブリ名およびファクタリングを使用します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platforms<ept id="p1">**</ept> -- Mono supports many platforms and CPUs.</source>
          <target state="translated"><bpt id="p1">**</bpt>プラットフォーム<ept id="p1">**</ept> -- Mono は、さまざまなプラットフォームおよび CPU をサポートしています。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Open Source<ept id="p1">**</ept> -- Mono and .NET Core both use the MIT license and are .NET Foundation projects.</source>
          <target state="translated"><bpt id="p1">**</bpt>オープン ソース<ept id="p1">**</ept> --Mono と .NET Core は両方とも MIT ライセンスを使用しており、.NET Foundation プロジェクトです。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Focus<ept id="p1">**</ept> -- The primary focus of Mono in recent years is mobile platforms, while .NET Core is focused on cloud workloads.</source>
          <target state="translated"><bpt id="p1">**</bpt>フォーカス<ept id="p1">**</ept> -- 近年、Mono はモバイル プラットフォームに重点を置いており、.NET Core はクラウド ワークロードを重視しています。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>