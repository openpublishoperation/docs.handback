<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9d6bb1d45b9a6cb88334050669a4c064e53d54e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\testing\using-mstest-on-windows.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d0b889def7c2a7fe5e0e328fc65218e643d5f863</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b04b5d47e4d51551c2585d8936423ad631df264e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Use MSTest with .NET Core on Windows</source>
          <target state="translated">Windows で MSTest と .NET Core を使用する</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to use MSTest with .NET Core on Windows, using Visual Studio 2015</source>
          <target state="translated">Visual Studio 2015 を使用して、Windows で MSTest と .NET Core を使用する方法</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>MSTest, .NET, .NET Core</source>
          <target state="translated">MSTest, .NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Unit testing with MSTest and .NET Core on Windows, using Visual Studio 2015</source>
          <target state="translated">Visual Studio 2015 を使用して、Windows で MSTest と .NET Core を使用して単体テストを行う</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>While xUnit could be a better choice when targeting multiple platforms, with .NET Core on Windows is also possible to use MSTest.</source>
          <target state="translated">複数のプラットフォームを対象とする場合は XUnit の方が適していますが、Windows の .NET Core でも MSTest を使用できます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">必須コンポーネント</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Follow the instructions on <bpt id="p1">[</bpt>Getting started with .NET Core on Windows<ept id="p1">](../tutorials/using-on-windows.md)</ept> to create the library project.</source>
          <target state="translated">「<bpt id="p1">[</bpt>Getting started with .NET Core on Windows<ept id="p1">](../tutorials/using-on-windows.md)</ept>」 (Windows で .NET Core を使用する) の指示に従って、ライブラリ オブジェクトを作成します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Writing the test project using MSTest</source>
          <target state="translated">MSTest を使用するテスト プロジェクトの作成</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, open the context menu for the <bpt id="p1">**</bpt>Solution<ept id="p1">**</ept> node and choose <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>, <bpt id="p3">**</bpt>New Solution Folder<ept id="p3">**</ept>.</source>
          <target state="translated">ソリューション エクスプローラーで、<bpt id="p1">**</bpt>[ソリューション]<ept id="p1">**</ept> ノードのコンテキスト メニューを開き、<bpt id="p2">**</bpt>[追加]<ept id="p2">**</ept>、<bpt id="p3">**</bpt>[新しいソリューション フォルダー]<ept id="p3">**</ept> の順に選択します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Name the folder "test".</source>
          <target state="translated">フォルダーの名前を "test" にします。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This is only a solution folder, not a physical folder.</source>
          <target state="translated">これはソリューション フォルダーであり、物理フォルダーではありません。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Open the context menu for the <bpt id="p1">**</bpt>test<ept id="p1">**</ept> folder and choose <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>test<ept id="p1">**</ept> フォルダーのコンテキスト メニューを開き、<bpt id="p2">**</bpt>[追加]<ept id="p2">**</ept> の</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>New Project<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>[新しいプロジェクト]<ept id="p1">**</ept> を選択します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog, choose <bpt id="p2">**</bpt>Console Application (.NET Core)<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>[新しいプロジェクト]<ept id="p1">**</ept> ダイアログ ボックスで、<bpt id="p2">**</bpt>[コンソール アプリケーション (.NET Core)]<ept id="p2">**</ept> を選択します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Name it "TestLibrary" and explicitly put it under the <ph id="ph1">`Golden\test`</ph> path.</source>
          <target state="translated">"TestLibrary" という名前を付けて、<ph id="ph1">`Golden\test`</ph> パスの下に置きます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The project needs to be a console application, not a class library.</source>
          <target state="translated">クラス ライブラリではなくコンソール アプリケーションのプロジェクトを作成する必要があります。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> project, open the context menu for the <bpt id="p2">**</bpt>References<ept id="p2">**</ept> node and choose <bpt id="p3">**</bpt>Add Reference<ept id="p3">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> プロジェクトで、<bpt id="p2">**</bpt>[参照]<ept id="p2">**</ept> ノードのコンテキスト メニューを開き、<bpt id="p3">**</bpt>[参照の追加]<ept id="p3">**</ept> を選択します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Reference Manager<ept id="p1">**</ept> dialog, check <bpt id="p2">**</bpt>Library<ept id="p2">**</ept> under the <bpt id="p3">**</bpt>Projects<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Solution<ept id="p4">**</ept> node, and then click <bpt id="p5">**</bpt>OK<ept id="p5">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>[参照マネージャー]<ept id="p1">**</ept> ダイアログ ボックスで、<bpt id="p3">**</bpt>[プロジェクト]<ept id="p3">**</ept>、<bpt id="p4">**</bpt>[ソリューション]<ept id="p4">**</ept> ノードの <bpt id="p2">**</bpt>[ライブラリ]<ept id="p2">**</ept> をオンにして、<bpt id="p5">**</bpt>[OK]<ept id="p5">**</ept> をクリックします。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> project, open the <ph id="ph1">`project.json`</ph> file, and replace <ph id="ph2">`"Library": "1.0.0-*"`</ph> with <ph id="ph3">`"Library": {"target": "project"}`</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> プロジェクトで <ph id="ph1">`project.json`</ph> ファイルを開き、<ph id="ph2">`"Library": "1.0.0-*"`</ph> を <ph id="ph3">`"Library": {"target": "project"}`</ph> に置き換えます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This is to avoid the resolution of the <ph id="ph1">`Library`</ph> project to a NuGet package with the same name.</source>
          <target state="translated">これは、<ph id="ph1">`Library`</ph> プロジェクトが同じ名前の NuGet パッケージに解決されるのを防ぐためです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Explicitly setting the target to "project" ensures that the tooling will first search for a project with that name, and not a package.</source>
          <target state="translated">target を "project" に明示的に設定することで、ツールはパッケージではなくその名前のプロジェクトを最初に検索します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Open the context menu for the <bpt id="p1">**</bpt>References<ept id="p1">**</ept> node and choose <bpt id="p2">**</bpt>Manage NuGet Packages<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>[参照]<ept id="p1">**</ept> ノードのコンテキスト メニューを開き、<bpt id="p2">**</bpt>[NuGet パッケージの管理]<ept id="p2">**</ept> を選択します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Choose "nuget.org" as the <bpt id="p1">**</bpt>Package source<ept id="p1">**</ept>, and choose the <bpt id="p2">**</bpt>Browse<ept id="p2">**</ept> tab.</source>
          <target state="translated"><bpt id="p1">**</bpt>[パッケージ ソース]<ept id="p1">**</ept> として "nuget.org" を選択し、<bpt id="p2">**</bpt>[参照]<ept id="p2">**</ept> タブを選択します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Check the <bpt id="p1">**</bpt>Include prerelease<ept id="p1">**</ept> checkbox, and then browse for <bpt id="p2">**</bpt>MSTest.TestFramework<ept id="p2">**</ept> version 1.0.1-preview or newer, and then click <bpt id="p3">**</bpt>Install<ept id="p3">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>[プレリリースを含める]<ept id="p1">**</ept> チェック ボックスをオンにし、<bpt id="p2">**</bpt>MSTest.TestFramework<ept id="p2">**</ept> のバージョン 1.0.1-preview 以降を参照して、<bpt id="p3">**</bpt>[インストール]<ept id="p3">**</ept> をクリックします。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Browse for <bpt id="p1">**</bpt>dotnet-test-mstest<ept id="p1">**</ept> version 1.1.1-preview or newer, and then click <bpt id="p2">**</bpt>Install<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>dotnet-test-mstest<ept id="p1">**</ept> バージョン 1.1.1-preview 以降を参照して、<bpt id="p2">**</bpt>[インストール]<ept id="p2">**</ept> をクリックします。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Edit <ph id="ph1">`project.json`</ph> to add <ph id="ph2">`"testRunner": "mstest",`</ph> after the <ph id="ph3">`"version"`</ph> section.</source>
          <target state="translated"><ph id="ph1">`project.json`</ph> を編集し、<ph id="ph3">`"version"`</ph> セクションの後に <ph id="ph2">`"testRunner": "mstest",`</ph> を追加します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">`LibraryTests.cs`</ph> class file to the <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> project, add the <ph id="ph2">`using`</ph> directives <ph id="ph3">`Microsoft.VisualStudio.TestTools.UnitTesting;`</ph> and <ph id="ph4">`using Library;`</ph> to the top of the file, and add the following code to the class:</source>
          <target state="translated"><ph id="ph1">`LibraryTests.cs`</ph> クラス ファイルを <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> プロジェクトに追加し、<ph id="ph2">`using`</ph> ディレクティブの <ph id="ph3">`Microsoft.VisualStudio.TestTools.UnitTesting;`</ph> と <ph id="ph4">`using Library;`</ph> をファイルの先頭に追加して、次のコードをクラスに追加します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Optionally, delete the <ph id="ph1">`Program.cs`</ph> file from the <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> project, and remove <ph id="ph2">`"buildOptions": {"emitEntryPoint": true},`</ph> from <ph id="ph3">`project.json`</ph>.</source>
          <target state="translated">必要に応じて、<ph id="ph1">`Program.cs`</ph> ファイルを <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> プロジェクトから削除し、<ph id="ph2">`"buildOptions": {"emitEntryPoint": true},`</ph> を <ph id="ph3">`project.json`</ph> から削除します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You should now be able to build the solution.</source>
          <target state="translated">ソリューションをビルドできるようになります。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Test<ept id="p1">**</ept> menu, choose <bpt id="p2">**</bpt>Windows<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Test Explorer<ept id="p3">**</ept>, and in Test Explorer choose <bpt id="p4">**</bpt>Run All<ept id="p4">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>[テスト]<ept id="p1">**</ept> メニューで <bpt id="p2">**</bpt>[Windows]<ept id="p2">**</ept>、<bpt id="p3">**</bpt>[テスト エクスプローラー]<ept id="p3">**</ept> の順に選択し、テスト エクスプローラーで <bpt id="p4">**</bpt>[すべて実行]<ept id="p4">**</ept> を選択します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The test should pass.</source>
          <target state="translated">テストで問題がないことを確認します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>