<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e8453b78827d8c02f29135ddfb832956ab40f3c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\stringbuilder.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f6877522a7496b27ba84fba00bbe002ae5273ea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d25c5c3056bd02863ba86bfb42f9daf68cac4c08</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using the StringBuilder class</source>
          <target state="translated">StringBuilder クラスの使用</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Using the StringBuilder class</source>
          <target state="translated">StringBuilder クラスの使用</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Using the StringBuilder class</source>
          <target state="translated">StringBuilder クラスの使用</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> object is immutable.</source>
          <target state="translated"><bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> オブジェクトは、変更できません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Every time you use one of the methods in the <bpt id="p1">[</bpt>System.String<ept id="p1">](xref:System.String)</ept> class, you create a new string object in memory, which requires a new allocation of space for that new object.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.String<ept id="p1">](xref:System.String)</ept> クラスのメソッドのいずれかを使用するたびに、新しい文字列オブジェクトをメモリ内に作成します。その際、その新しいオブジェクトに対して領域を新たに割り当てる必要があります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In situations where you need to perform repeated modifications to a string, the overhead associated with creating a new <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> object can be costly.</source>
          <target state="translated">文字列に対して何度も変更を実行する必要がある場合、新しい <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> オブジェクトの作成に関連したオーバーヘッドが高コストになる可能性があります。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Text.StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class can be used when you want to modify a string without creating a new object.</source>
          <target state="translated">新しいオブジェクトを作成せずに文字列を変更したい場合は、<bpt id="p1">[</bpt>System.Text.StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> クラスを使用することができます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, using the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class can boost performance when concatenating many strings together in a loop.</source>
          <target state="translated">たとえば、ループで多数の文字列を連結する場合に、<bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> クラスを使用してパフォーマンスを向上させることができます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Importing the System.Text Namespace</source>
          <target state="translated">System.Text 名前空間のインポート</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class is found in the <bpt id="p2">[</bpt>System.Text<ept id="p2">](xref:System.Text)</ept> namespace.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> は <bpt id="p2">[</bpt>System.Text<ept id="p2">](xref:System.Text)</ept> 名前空間にあります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To avoid having to provide a fully qualified type name in your code, you can import the <bpt id="p1">[</bpt>System.Text<ept id="p1">](xref:System.Text)</ept> namespace:</source>
          <target state="translated">完全修飾型名をコードに指定しなくてもすむように、<bpt id="p1">[</bpt>System.Text<ept id="p1">](xref:System.Text)</ept> 名前空間をインポートすることができます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Instantiating a StringBuilder Object</source>
          <target state="translated">StringBuilder オブジェクトのインスタンス化</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can create a new instance of the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class by initializing your variable with one of the overloaded constructor methods, as illustrated in the following example.</source>
          <target state="translated">以下の例に示すように、オーバーロードされたコンストラクター メソッドの 1 つで変数を初期化することにより、<bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> クラスの新しいインスタンスを作成することができます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Setting the Capacity and Length</source>
          <target state="translated">容量と長さの設定</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Although the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> is a dynamic object that allows you to expand the number of characters in the string that it encapsulates, you can specify a value for the maximum number of characters that it can hold.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> は、カプセル化する文字列内の文字数を拡張できるようにする動的オブジェクトですが、保持可能な最大文字数の値を指定することができます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This value is called the capacity of the object and should not be confused with the length of the string that the current <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> holds.</source>
          <target state="translated">この値を、オブジェクトの容量と呼びます。これを現行の <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> が保持する文字列の長さと混同すべきではありません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, you might create a new instance of the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class with the string "Hello", which has a length of 5, and you might specify that the object has a maximum capacity of 25.</source>
          <target state="translated">たとえば、"Hello" という長さ 5 の文字列を持つ <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> クラスの新しいインスタンスを作成するときに、オブジェクトの最大容量として 25 を指定することができます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When you modify the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>, it does not reallocate size for itself until the capacity is reached.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> を変更する際、容量に達するまでは、自動再割り当ては発生しません。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When this occurs, the new space is allocated automatically and the capacity is doubled.</source>
          <target state="translated">容量に達すると、新しい領域が自動的に割り当てられ、容量が 2 倍になります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can specify the capacity of the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class using one of the overloaded constructors.</source>
          <target state="translated">オーバーロードされたコンストラクターのいずれかを使用して、<bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> クラスの容量を指定することができます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following example specifies that the <ph id="ph1">`MyStringBuilder`</ph> object can be expanded to a maximum of 25 spaces.</source>
          <target state="translated">次の例は、<ph id="ph1">`MyStringBuilder`</ph> オブジェクトを最大 25 の領域に拡張できることを示しています。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Additionally, you can use the read/write <bpt id="p1">[</bpt>Capacity<ept id="p1">](xref:System.Text.StringBuilder.Capacity)</ept> property to set the maximum length of your object.</source>
          <target state="translated">また、<bpt id="p1">[</bpt>Capacity<ept id="p1">](xref:System.Text.StringBuilder.Capacity)</ept> の読み取り/書き込みプロパティを使用して、オブジェクトの最大長を設定することができます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>Capacity<ept id="p1">](xref:System.Text.StringBuilder.Capacity)</ept> property to define the maximum object length.</source>
          <target state="translated">次の例では、<bpt id="p1">[</bpt>Capacity<ept id="p1">](xref:System.Text.StringBuilder.Capacity)</ept> プロパティを使用して、オブジェクトの最大長を定義しています。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>EnsureCapacity<ept id="p1">](xref:System.Text.StringBuilder.EnsureCapacity(System.Int32))</ept> method can be used to check the capacity of the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>EnsureCapacity<ept id="p1">](xref:System.Text.StringBuilder.EnsureCapacity(System.Int32))</ept> メソッドを使用して、現行 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> の容量を確認することができます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If the capacity is greater than the passed value, no change is made; however, if the capacity is smaller than the passed value, the current capacity is changed to match the passed value.</source>
          <target state="translated">容量が渡された値よりも大きい場合、変更は行われません。しかし、容量が渡された値より小さい場合は、渡された値と一致するよう現行の容量が変更されます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> property can also be viewed or set.</source>
          <target state="translated"><bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> プロパティを表示または設定することもできます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you set the <bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> property to a value that is greater than the <bpt id="p2">[</bpt>Capacity<ept id="p2">](xref:System.Text.StringBuilder.Capacity)</ept> property, the <bpt id="p3">[</bpt>Capacity<ept id="p3">](xref:System.Text.StringBuilder.Capacity)</ept> property is automatically changed to the same value as the <bpt id="p4">[</bpt>Length<ept id="p4">](xref:System.Text.StringBuilder.Length)</ept> property.</source>
          <target state="translated"><bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> プロパティを、<bpt id="p2">[</bpt>Capacity<ept id="p2">](xref:System.Text.StringBuilder.Capacity)</ept> プロパティより大きな値に設定する場合、<bpt id="p3">[</bpt>Capacity<ept id="p3">](xref:System.Text.StringBuilder.Capacity)</ept> プロパティは <bpt id="p4">[</bpt>Length<ept id="p4">](xref:System.Text.StringBuilder.Length)</ept> プロパティと同じ値に自動的に変更されます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Setting the <bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> property to a value that is less than the length of the string within the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> shortens the string.</source>
          <target state="translated"><bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> プロパティを、現行の <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 内の文字列の長さより小さい値に設定すると、文字列は短縮されます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Modifying the StringBuilder String</source>
          <target state="translated">StringBuilder 文字列の変更</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following table lists the methods you can use to modify the contents of a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> の内容の変更に使用できるメソッドを次の表に一覧表示します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Method name</source>
          <target state="translated">メソッド名</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">使用</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.Append<ept id="p1">](xref:System.Text.StringBuilder.Append(System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Append<ept id="p1">](xref:System.Text.StringBuilder.Append(System.Char))</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Appends information to the end of the current <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">現行の <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> の末尾に情報を追加します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Replaces a format specifier passed in a string with formatted text.</source>
          <target state="translated">文字列に渡される書式指定子を、書式設定されたテキスト文字列で置き換えます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.Insert<ept id="p1">](xref:System.Text.StringBuilder.Insert(System.Int32,System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Insert<ept id="p1">](xref:System.Text.StringBuilder.Insert(System.Int32,System.Char))</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Inserts a string or object into the specified index of the current <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">現行の <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> の指定されたインデックスに、文字列またはオブジェクトを挿入します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Removes a specified number of characters from the current <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">現行の <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> から、指定された文字数を削除します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Replaces a specified character at a specified index.</source>
          <target state="translated">指定されたインデックスで、指定された文字を置き換えます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Append</source>
          <target state="translated">追加</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder.Append<ept id="p1">](xref:System.Text.StringBuilder.Append(System.Char))</ept> method can be used to add text or a string representation of an object to the end of a string represented by the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Append<ept id="p1">](xref:System.Text.StringBuilder.Append(System.Char))</ept> メソッドを使用して、現行 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> によって表される文字列の末尾にオブジェクトのテキストまたは文字列形式を追加することができます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following example initializes a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> to "Hello World" and then appends some text to the end of the object.</source>
          <target state="translated">次の例では、<bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> を "Hello World" に初期設定し、テキストをオブジェクトの末尾に追加しています。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Space is allocated automatically as needed.</source>
          <target state="translated">領域は、必要に応じて自動的に割り当てられます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>AppendFormat</source>
          <target state="translated">AppendFormat</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept> method adds text to the end of the <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept> メソッドは、<bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> オブジェクトの末尾にテキストを追加します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It supports the composite formatting feature (for more information, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](composite-format.md)</ept>) by calling the <bpt id="p2">[</bpt>IFormattable<ept id="p2">](xref:System.IFormattable)</ept> implementation of the object or objects to be formatted.</source>
          <target state="translated">これは、書式設定される 1 つ以上のオブジェクトの <bpt id="p2">[</bpt>IFormattable<ept id="p2">](xref:System.IFormattable)</ept> 実装を呼び出すことにより、複合書式機能をサポートしています (詳細については、<bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](composite-format.md)</ept> を参照してください)。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Therefore, it accepts the standard format strings for numeric, date and time, and enumeration values, the custom format strings for numeric and date and time values, and the format strings defined for custom types.</source>
          <target state="translated">そのため、数値、日時、および列挙の値に対して標準書式文字列を受け取り、数値と日時の値、およびカスタム型に定義されている書式文字列に対してカスタム書式文字列を受け取ります。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>(For information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](formatting-types.md)</ept>.) You can use this method to customize the format of variables and append those values to a <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">(書式設定については、「<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](formatting-types.md)</ept>」を参照してください。)このメソッドを使用して、変数の書式をカスタマイズし、その値を <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> に追加することができます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following example uses the AppendFormat method to place an integer value formatted as a currency value at the end of a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated">次の例では、AppendFormat メソッドを使用して、<bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> オブジェクトの末尾に、通貨値として書式設定されている整数値を挿入しています。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Insert</source>
          <target state="translated">挿入</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder.Insert<ept id="p1">](xref:System.Text.StringBuilder.Insert(System.Int32,System.Char))</ept> method adds a string or object to a specified position in the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Insert<ept id="p1">](xref:System.Text.StringBuilder.Insert(System.Int32,System.Char))</ept> メソッドは、現行の <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> オブジェクトの指定された位置に、文字列またはオブジェクトを追加します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following example uses this method to insert a word into the sixth position of a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated">次の例では、このメソッドを使用して、<bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> オブジェクトの 6 番目の位置に単語を挿入しています。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Remove</source>
          <target state="translated">削除</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>StringBuilder.Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept> method to remove a specified number of characters from the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> object, beginning at a specified zero-based index.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept> メソッドを使用して、現行の <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> オブジェクトから指定された文字数を削除します (0 から始まる指定されたインデックスで開始します)。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept> method to shorten a <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated">次の例では、<bpt id="p1">[</bpt>Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept> メソッドを使用して、<bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> オブジェクトを短縮しています。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Replace</source>
          <target state="translated">置換</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder.Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept> | Replaces a specified character at a specified index.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept> | 指定されたインデックスで、指定された文字を置き換えます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>method can be used to replace characters within the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object with another specified character.</source>
          <target state="translated">メソッドを使用して、<bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> オブジェクト内の文字を、指定された別の文字で置き換えることができます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept> | Replaces a specified character at a specified index.</source>
          <target state="translated">次の例では、<bpt id="p1">[</bpt>Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept> | 指定されたインデックスで、指定された文字を置き換えます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>method to search a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object for all instances of the exclamation point character (!) and replace them with the question mark character (?).</source>
          <target state="translated">メソッドを使用して、感嘆符 (!) のすべてのインスタンスを求めて <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> オブジェクトを検索し、疑問符 (?) で置き換えています。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Converting a StringBuilder Object to a String</source>
          <target state="translated">文字列への StringBuilder オブジェクトの変換</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You must convert the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object to a <bpt id="p2">[</bpt>String<ept id="p2">](xref:System.String)</ept> object before you can pass the string represented by the <bpt id="p3">[</bpt>StringBuilder<ept id="p3">](xref:System.Text.StringBuilder)</ept> object to a method that has a <bpt id="p4">[</bpt>String<ept id="p4">](xref:System.String)</ept> parameter or display it in the user interface.</source>
          <target state="translated"><bpt id="p3">[</bpt>StringBuilder<ept id="p3">](xref:System.Text.StringBuilder)</ept> オブジェクトで表される文字列を <bpt id="p4">[</bpt>String<ept id="p4">](xref:System.String)</ept> パラメーターを持つメソッドに渡すかそれをユーザー インターフェイスに表示するには、事前に <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> オブジェクトを <bpt id="p2">[</bpt>String<ept id="p2">](xref:System.String)</ept> オブジェクトに変換する必要があります。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You do this conversion by calling the <bpt id="p1">[</bpt>StringBuilder.ToString<ept id="p1">](xref:System.Text.StringBuilder.ToString)</ept> method.</source>
          <target state="translated">この変換は、<bpt id="p1">[</bpt>StringBuilder.ToString<ept id="p1">](xref:System.Text.StringBuilder.ToString)</ept> メソッドを呼び出すことによって行います。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The following example calls a number of <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> methods and then calls the <bpt id="p2">[</bpt>StringBuilder.ToString<ept id="p2">](xref:System.Text.StringBuilder.ToString)</ept> method to display the string.</source>
          <target state="translated">次の例では、いくつかの <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> メソッドを呼び出し、その後、<bpt id="p2">[</bpt>StringBuilder.ToString<ept id="p2">](xref:System.Text.StringBuilder.ToString)</ept> メソッドを呼び出して文字列を表示しています。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Text.StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Text.StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic string operations<ept id="p1">](basic-string-operations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>基本的な文字列操作<ept id="p1">](basic-string-operations.md)</ept></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting types<ept id="p1">](formatting-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>型の書式設定<ept id="p1">](formatting-types.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>