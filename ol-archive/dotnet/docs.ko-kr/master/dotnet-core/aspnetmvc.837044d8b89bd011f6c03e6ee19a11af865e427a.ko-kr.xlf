<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f0362aa" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6534435823e32aa5c61802ccc587c2761a3fe893</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\docker\aspnetmvc.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">653f4b38b717540dbdb2dedf91321d0e01babc4a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">071b0fc8344db6a8184d8f5ddae87618430a767f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Migrating ASP.NET MVC Applications to Windows Containers</source>
          <target state="translated">ASP.NET MVC 응용 프로그램을 Windows 컨테이너로 마이그레이션</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to take an existing ASP.NET MVC application and run it in a Windows Docker Container</source>
          <target state="translated">기존 ASP.NET MVC 응용 프로그램을 가져와 Windows Docker 컨테이너에서 실행하는 방법을 알아봅니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Windows Containers, Docker, ASP.NET MVC</source>
          <target state="translated">Windows 컨테이너, Docker, ASP.NET MVC</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Migrating ASP.NET MVC Applications to Windows Containers</source>
          <target state="translated">ASP.NET MVC 응용 프로그램을 Windows 컨테이너로 마이그레이션</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Running an existing .NET Framework-based application in a Windows container doesn't require any changes to your app.</source>
          <target state="translated">Windows 컨테이너에서 기존 .NET Framework 기반 응용 프로그램을 실행하려면 앱을 변경할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To run your app in a Windows container you create a Docker image containing your app and start the container.</source>
          <target state="translated">Windows 컨테이너에서 앱을 실행하려면 앱을 포함하는 Docker 이미지를 만들고 컨테이너를 시작합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This topic explains how to take an existing <bpt id="p1">[</bpt>ASP.NET MVC application<ept id="p1">](http://www.asp.net/mvc)</ept> and deploy it in a Windows container.</source>
          <target state="translated">이 항목에서는 기존 <bpt id="p1">[</bpt>ASP.NET MVC 응용 프로그램<ept id="p1">](http://www.asp.net/mvc)</ept>을 가져오고 Windows 컨테이너에 배포하는 방법을 설명합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You start with an existing ASP.NET MVC app, then build the published assets using Visual Studio.</source>
          <target state="translated">기존 ASP.NET MVC 앱으로 시작한 다음 Visual Studio를 사용하여 게시된 자산을 빌드합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You use Docker to create the image that contains and runs your app.</source>
          <target state="translated">Docker를 사용하여 앱을 포함하고 실행하는 이미지를 만듭니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You'll browse to the site running in a Windows container and verify the app is working.</source>
          <target state="translated">Windows 컨테이너에서 실행 중인 사이트로 이동하고 앱이 작동하는지 확인합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This article assumes a basic understanding of Docker.</source>
          <target state="translated">이 문서에서는 Docker에 대한 기본적인 지식이 있다고 가정합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can learn about Docker by reading the <bpt id="p1">[</bpt>Docker Overview<ept id="p1">](https://docs.docker.com/engine/understanding-docker/)</ept>.</source>
          <target state="translated">Docker에 대해 알아보려면 <bpt id="p1">[</bpt>Docker Overview<ept id="p1">](https://docs.docker.com/engine/understanding-docker/)</ept>(Docker 개요)를 읽어보세요.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The app you'll run in a container is a simple website that answers questions randomly.</source>
          <target state="translated">컨테이너에서 실행할 앱은 임의로 질문에 대답하는 간단한 웹 사이트입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This app is a basic MVC application with no authentication or database storage; it lets you focus on moving the web tier to a container.</source>
          <target state="translated">이 앱은 인증이나 데이터베이스 저장소가 없는 기본 MVC 응용 프로그램으로, 웹 계층을 컨테이너로 이동하는 데 집중할 수 있게 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Future topics will show how to move and manage persistent storage in containerized applications.</source>
          <target state="translated">이후 항목에서는 컨테이너화된 응용 프로그램에서 영구 저장소를 이동 및 관리하는 방법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Moving your application involves these steps:</source>
          <target state="translated">응용 프로그램 이동 과정은 다음 단계로 이루어집니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Creating a publish task to build the assets for an image.<ept id="p1">](#publish-script)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>이미지에 대한 자산을 빌드하는 게시 태스크 만들기<ept id="p1">](#publish-script)</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Building a Docker image that will run your application.<ept id="p1">](#build-the-image)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>응용 프로그램을 실행할 Docker 이미지 빌드<ept id="p1">](#build-the-image)</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Starting a Docker container that runs your image.<ept id="p1">](#start-a-container)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>이미지를 실행하는 Docker 컨테이너 시작<ept id="p1">](#start-a-container)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Verifying the application using your browser.<ept id="p1">](#verify-in-the-browser)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>브라우저를 사용하여 응용 프로그램 확인<ept id="p1">](#verify-in-the-browser)</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>finished application<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/docker/MVCRandomAnswerGenerator)</ept> is on GitHub.</source>
          <target state="translated"><bpt id="p1">[</bpt>완료된 응용 프로그램<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/docker/MVCRandomAnswerGenerator)</ept>은 GitHub에 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">필수 구성 요소</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The development machine must be running</source>
          <target state="translated">개발 컴퓨터가 실행 중이어야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows 10 Anniversary Update<ept id="p1">](https://www.microsoft.com/en-us/software-download/windows10/)</ept> (or higher) or <bpt id="p2">[</bpt>Windows Server 2016<ept id="p2">](https://www.microsoft.com/en-us/cloud-platform/windows-server)</ept> (or higher).</source>
          <target state="translated"><bpt id="p1">[</bpt>Windows 10 1주년 업데이트<ept id="p1">](https://www.microsoft.com/en-us/software-download/windows10/)</ept> 이상 또는 <bpt id="p2">[</bpt>Windows Server 2016<ept id="p2">](https://www.microsoft.com/en-us/cloud-platform/windows-server)</ept> 이상</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Docker for Windows<ept id="p1">](https://docs.docker.com/docker-for-windows/)</ept> - version Stable 1.13.0 or 1.12 Beta 26 (or newer versions)</source>
          <target state="translated"><bpt id="p1">[</bpt>Windows용 Docker<ept id="p1">](https://docs.docker.com/docker-for-windows/)</ept> - 안정적인 버전 1.13.0 또는 1.12 베타 26 이상 버전</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Visual Studio 2015<ept id="p1">](https://www.visualstudio.com/en-us/visual-studio-homepage-vs.aspx)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>Visual Studio 2015<ept id="p1">](https://www.visualstudio.com/en-us/visual-studio-homepage-vs.aspx)</ept></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If you are using Windows Server 2016, follow the instructions for <bpt id="p1">[</bpt>Container Host Deployment - Windows Server<ept id="p1">](https://msdn.microsoft.com/virtualization/windowscontainers/deployment/deployment)</ept>.</source>
          <target state="translated">Windows Server 2016을 사용하는 경우 <bpt id="p1">[</bpt>컨테이너 호스트 배포 - Windows Server<ept id="p1">](https://msdn.microsoft.com/virtualization/windowscontainers/deployment/deployment)</ept>에 대한 지침을 따르세요.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>After installing and starting Docker,  right-click on the tray icon and select <bpt id="p1">**</bpt>Switch to Windows containers<ept id="p1">**</ept>.</source>
          <target state="translated">Docker를 설치 및 시작한 후 트레이 아이콘을 마우스 오른쪽 단추로 클릭하고 <bpt id="p1">**</bpt>Switch to Windows containers<ept id="p1">**</ept>(Windows 컨테이너로 전환)를 선택합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This is required to run Docker images based on Windows.</source>
          <target state="translated">이를 위해서는 Windows를 기반으로 하는 Docker 이미지를 실행해야 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This command takes a few seconds to execute:</source>
          <target state="translated">이 명령을 실행하는 데 몇 초 정도 걸립니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Windows Container<ept id="p1">][windows-container]</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Windows 컨테이너<ept id="p1">][windows-container]</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Publish script</source>
          <target state="translated">게시 스크립트</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Collect all the assets that you need to load into a Docker image in one place.</source>
          <target state="translated">Docker 이미지로 로드해야 하는 자산을 모두 한 곳에 수집합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can use the Visual Studio <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> command to create a publish profile for your app.</source>
          <target state="translated">Visual Studio <bpt id="p1">**</bpt>게시<ept id="p1">**</ept> 명령을 사용하여 앱에 대한 게시 프로필을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This profile will put all the assets in one directory tree that you copy to your target image later in this tutorial.</source>
          <target state="translated">이 프로필은 이 자습서의 뒷부분에서 대상 이미지에 복사할 모든 자산을 디렉터리 트리 하나에 배치합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Publish Steps<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>게시 단계<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Right click on the web project in Visual Studio, and select <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept>.</source>
          <target state="translated">Visual Studio에서 웹 프로젝트를 마우스 오른쪽 단추로 클릭하고 <bpt id="p1">**</bpt>게시<ept id="p1">**</ept>를 선택합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Custom profile button<ept id="p1">**</ept>, and then select <bpt id="p2">**</bpt>File System<ept id="p2">**</ept> as the method.</source>
          <target state="translated"><bpt id="p1">**</bpt>Custom profile button<ept id="p1">**</ept>(사용자 지정 프로필 단추)을 클릭하고 <bpt id="p2">**</bpt>파일 시스템<ept id="p2">**</ept>을 방법으로 선택합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Choose the directory.</source>
          <target state="translated">디렉터리를 선택합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>By convention, the downloaded sample uses <ph id="ph1">`bin/PublishOutput`</ph>.</source>
          <target state="translated">규칙에 따라 다운로드한 샘플은 <ph id="ph1">`bin/PublishOutput`</ph>을 사용합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Publish Connection<ept id="p1">][publish-connection]</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>게시 연결<ept id="p1">][publish-connection]</ept></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>File Publish Options<ept id="p1">**</ept> section of the <bpt id="p2">**</bpt>Settings<ept id="p2">**</ept> tab.</source>
          <target state="translated"><bpt id="p2">**</bpt>설정<ept id="p2">**</ept> 탭의 <bpt id="p1">**</bpt>File Publish Options<ept id="p1">**</ept>(파일 게시 옵션) 섹션을 엽니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Precompile during publishing<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>게시 중 미리 컴파일<ept id="p1">**</ept>을 선택합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This optimization means that you'll be compiling views in the Docker container, you are copying the precompiled views.</source>
          <target state="translated">이 최적화는 Docker 컨테이너의 뷰를 컴파일하며 미리 컴파일된 뷰를 복사함을 의미합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Publish Settings<ept id="p1">][publish-settings]</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>게시 설정<ept id="p1">][publish-settings]</ept></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept>, and Visual Studio will copy all the needed assets to the destination folder.</source>
          <target state="translated"><bpt id="p1">**</bpt>게시<ept id="p1">**</ept>를 클릭하면 Visual Studio에서 필요한 모든 자산을 대상 폴더에 복사합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Build the image</source>
          <target state="translated">이미지 빌드</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Define your Docker image in a Dockerfile.</source>
          <target state="translated">Dockerfile에서 Docker 이미지를 정의합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The Dockerfile contains instructions for the base image, additional components, the app you want to run, and other configuration images.</source>
          <target state="translated">Dockerfile에는 기본 이미지, 추가 구성 요소, 실행할 앱 및 기타 구성 이미지에 대한 지침이 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The Dockerfile is the input to the <ph id="ph1">`docker build`</ph> command, which creates the image.</source>
          <target state="translated">Dockerfile은 이미지를 만드는 <ph id="ph1">`docker build`</ph> 명령에 대한 입력입니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You will build an image based on the <ph id="ph1">`microsft/aspnet`</ph> image located on <bpt id="p1">[</bpt>Docker Hub<ept id="p1">](https://hub.docker.com/r/microsoft/aspnet/)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>Docker 허브<ept id="p1">](https://hub.docker.com/r/microsoft/aspnet/)</ept>에 있는 <ph id="ph1">`microsft/aspnet`</ph> 이미지를 기반으로 해서 이미지를 빌드합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The base image, <ph id="ph1">`microsoft/aspnet`</ph>, is a Windows Server image.</source>
          <target state="translated">기본 이미지인 <ph id="ph1">`microsoft/aspnet`</ph>은 Windows Server 이미지입니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In contains Windows Server Core, IIS and ASP.NET 4.6.2.</source>
          <target state="translated">Windows Server Core, IIS 및 ASP.NET 4.6.2를 포함합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When you run this image in your container, it will automatically start IIS and installed websites.</source>
          <target state="translated">컨테이너에서 이 이미지를 실행하면 IIS 및 설치된 웹 사이트가 자동으로 시작됩니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The Dockerfile that creates your image looks like this:</source>
          <target state="translated">이미지를 만드는 Dockerfile은 다음과 같이 표시됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>There is no <ph id="ph1">`ENTRYPOINT`</ph> command in this Dockerfile.</source>
          <target state="translated">이 Dockerfile에는 <ph id="ph1">`ENTRYPOINT`</ph> 명령이 없습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You don't need one.</source>
          <target state="translated">해당 명령은 필요하지 않습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The base image ensures that IIS starts when the container starts.</source>
          <target state="translated">기본 이미지에서는 컨테이너를 시작할 때 IIS가 시작되도록 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Run the Docker build command to create the image that runs your ASP.NET app.</source>
          <target state="translated">Docker 빌드 명령을 실행하여 ASP.NET 앱을 실행하는 이미지를 만듭니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To do this, open a PowerShell window and type the following command in the solution directory:</source>
          <target state="translated">이렇게 하려면 PowerShell 창을 열고 솔루션 디렉터리에서 다음 명령을 입력합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This command will build the new image using the instructions in your Dockerfile.</source>
          <target state="translated">이 명령은 Dockerfile의 지침을 사용하여 새 이미지를 빌드합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This may include pulling the base image from <bpt id="p1">[</bpt>Docker Hub<ept id="p1">](http://hub.docker.com)</ept>, and then adding your app to that image.</source>
          <target state="translated">이 과정에 <bpt id="p1">[</bpt>Docker Hub<ept id="p1">](http://hub.docker.com)</ept>에서 기본 이미지를 끌어온 다음 해당 이미지에 앱이 추가될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Once that command completes, you can run the <ph id="ph1">`docker images`</ph> command to see information on the new image:</source>
          <target state="translated">명령이 완료되면 <ph id="ph1">`docker images`</ph> 명령을 실행하여 새 이미지에 대한 정보를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The IMAGE ID will be different on your machine.</source>
          <target state="translated">사용자 컴퓨터의 이미지 ID는 다릅니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Now, let's run the app.</source>
          <target state="translated">이제 앱을 실행해 보겠습니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Start a container</source>
          <target state="translated">컨테이너 시작</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Start a container by executing the following <ph id="ph1">`docker run`</ph> command:</source>
          <target state="translated">다음 <ph id="ph1">`docker run`</ph> 명령을 실행하여 컨테이너를 시작합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`-d`</ph> argument tells Docker to start the image in detached mode.</source>
          <target state="translated"><ph id="ph1">`-d`</ph> 인수는 분리된 모드로 이미지를 시작하도록 Docker에 지정합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>That means the Docker image runs disconnected from the current shell.</source>
          <target state="translated">즉, Docker 이미지가 현재 셸에서 연결이 끊긴 상태로 실행됩니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`-p 8000:8000`</ph> argument tells Docker how to map incoming ports.</source>
          <target state="translated"><ph id="ph1">`-p 8000:8000`</ph> 인수는 수신 포트를 매핑하는 방법을 Docker에 지정합니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In this example, we're using port 8000 on both the host and the container.</source>
          <target state="translated">이 예제에서는 호스트와 컨테이너 둘 다에서 포트 8000을 사용합니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`--name randomanswers`</ph> gives a name to the running container.</source>
          <target state="translated"><ph id="ph1">`--name randomanswers`</ph>는 실행 중인 컨테이너에 이름을 제공합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You can use this name instead of the container ID in most commands.</source>
          <target state="translated">대부분의 명령에서 컨테이너 ID 대신 이 이름을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`mvcrandomanswers`</ph> is the name of the image to start.</source>
          <target state="translated"><ph id="ph1">`mvcrandomanswers`</ph>는 시작할 이미지의 이름입니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Verify in the browser</source>
          <target state="translated">브라우저에서 확인</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>With the current release, you can't browse to <ph id="ph1">`http://localhost`</ph>.</source>
          <target state="translated">현재 릴리스에서는 <ph id="ph1">`http://localhost`</ph>로 이동할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This is a known behavior in WinNAT, and it will be resolved in the future.</source>
          <target state="translated">이 문제는 WinNAT에서 알려진 동작이며 앞으로 해결될 예정입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Until that is addressed, you need to use the IP address of the container.</source>
          <target state="translated">문제가 해결될 때까지 컨테이너의 IP 주소를 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Once the container starts, find its IP address so that you can connect to your running container from a browser:</source>
          <target state="translated">컨테이너가 시작되면 브라우저에서 실행 중인 컨테이너에 연결할 수 있도록 해당 IP 주소를 찾습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Connect to the running container using the IPv4 address and the configured port (8000), <ph id="ph1">`http://172.31.194.61:8000`</ph> in the example shown.</source>
          <target state="translated">IPv4 주소와 구성된 포트(8000)(표시된 예제에서는 <ph id="ph1">`http://172.31.194.61:8000`</ph>)를 사용하여 실행 중인 컨테이너에 연결합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Type that URL into your browser, and you should see the running site.</source>
          <target state="translated">해당 URL을 브라우저에 입력하면 실행 중인 사이트가 표시됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Some VPN or proxy software may prevent you from navigating to your site.</source>
          <target state="translated">일부 VPN 또는 프록시 소프트웨어가 사이트로 이동하지 못하도록 차단할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can temporarily disable it to make sure your container is working.</source>
          <target state="translated">일시적으로 사용하지 않도록 설정하여 컨테이너가 작동하는지 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The sample directory on GitHub contains a <bpt id="p1">[</bpt>PowerShell script<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/docker/MVCRandomAnswerGenerator/run.ps1)</ept> that executes these commands for you.</source>
          <target state="translated">GitHub의 샘플 디렉터리에는 이러한 명령을 자동으로 실행하는 <bpt id="p1">[</bpt>PowerShell 스크립트<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/docker/MVCRandomAnswerGenerator/run.ps1)</ept>가 들어 있습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Open a PowerShell window, change directory to your solution directory, and type:</source>
          <target state="translated">PowerShell 창을 열고 디렉터리를 솔루션 디렉터리로 변경한 후 다음을 입력합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The command above builds the image, displays the list of images on your machine, starts a container, and displays the IP address for that container.</source>
          <target state="translated">위 명령은 이미지를 빌드하고 컴퓨터에 있는 이미지 목록을 표시하며 컨테이너를 시작하고 해당 컨테이너의 IP 주소를 표시합니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>To stop your container, issue a <ph id="ph1">`docker
stop`</ph> command:</source>
          <target state="translated">컨테이너를 중지하려면 <ph id="ph1">`docker
stop`</ph> 명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>To remove the container, issue a <ph id="ph1">`docker rm`</ph> command:</source>
          <target state="translated">컨테이너를 제거하려면 <ph id="ph1">`docker rm`</ph> 명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">windows-container]: media/aspnetmvc/SwitchContainer.png</ept><bpt id="p2"> "</bpt>Switch to Windows Container<ept id="p2">"</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><ept id="p1">windows-container]: media/aspnetmvc/SwitchContainer.png</ept><bpt id="p2"> "</bpt>Windows 컨테이너로 전환<ept id="p2">"</ept></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">publish-connection]: media/aspnetmvc/PublishConnection.png</ept><bpt id="p2"> "</bpt>Publish to File System<ept id="p2">"</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><ept id="p1">publish-connection]: media/aspnetmvc/PublishConnection.png</ept><bpt id="p2"> "</bpt>파일 시스템에 게시<ept id="p2">"</ept></target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">publish-settings]: media/aspnetmvc/PublishSettings.png</ept><bpt id="p2"> "</bpt>Publish Settings<ept id="p2">"</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><ept id="p1">publish-settings]: media/aspnetmvc/PublishSettings.png</ept><bpt id="p2"> "</bpt>게시 설정<ept id="p2">"</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>