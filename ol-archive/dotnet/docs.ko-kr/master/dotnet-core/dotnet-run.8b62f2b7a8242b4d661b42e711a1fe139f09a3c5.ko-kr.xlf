<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f0362aa" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e14cd14bc3d5ed86c841e46dc80c2649f239a82</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\dotnet-run.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ed55ac52f2e39808a61316515955f4afd640023</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4337f7b3ff9269ebdf9ecd5ded583717ee783e3f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-run command | Microsoft Docs</source>
          <target state="translated">dotnet-run 명령 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-run command provides a convenient option to run your application from the source code.</source>
          <target state="translated">dotnet-run 명령은 소스 코드에서 응용 프로그램을 실행하는 편리한 옵션을 제공합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-run, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-run, CLI, CLI 명령, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-run</source>
          <target state="translated">dotnet-run</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic applies to .NET Core Tools Preview 2.</source>
          <target state="translated">이 항목은 .NET Core Tools Preview 2에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For the .NET Core Tools RC4 version, see the <bpt id="p1">[</bpt>dotnet-run (.NET Core Tools RC4)<ept id="p1">](../preview3/tools/dotnet-run.md)</ept> topic.</source>
          <target state="translated">.NET Core 도구 RC4 버전의 경우 <bpt id="p1">[</bpt>dotnet-run(.NET Core 도구 RC4)<ept id="p1">](../preview3/tools/dotnet-run.md)</ept> 항목을 참조하세요.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">이름</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet-run`</ph> - Runs source code 'in-place' without any explicit compile or launch commands.</source>
          <target state="translated"><ph id="ph1">`dotnet-run`</ph> - 명시적 컴파일이나 시작 명령을 사용하지 않고 소스 코드를 '현재 위치'에서 실행합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">개요</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet run`</ph> command provides a convenient option to run your application from the source code with one command.</source>
          <target state="translated"><ph id="ph1">`dotnet run`</ph> 명령은 하나의 명령을 사용하여 소스 코드에서 응용 프로그램을 실행하는 편리한 옵션을 제공합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>It compiles source code, generates an output program and then runs that program.</source>
          <target state="translated">이 명령은 소스 코드를 컴파일하고 출력 프로그램을 생성한 다음 해당 프로그램을 실행합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This command is useful for fast iterative development and can also be used to run a source-distributed program (for example, a website).</source>
          <target state="translated">또한 빠른 반복 개발에 유용하며 소스 분산 프로그램(예: 웹 사이트)을 실행하는 데 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This command relies on <bpt id="p1">[</bpt>dotnet build<ept id="p1">](dotnet-build.md)</ept> to build source inputs to a .NET assembly, before launching the program.</source>
          <target state="translated">이 명령은 <bpt id="p1">[</bpt>dotnet build<ept id="p1">](dotnet-build.md)</ept>를 사용하여 프로그램을 시작하기 전에 소스 입력을 .NET 어셈블리로 빌드합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The requirements for this command and the handling of source inputs are all inherited from the build command.</source>
          <target state="translated">이 명령 및 소스 입력 처리에 대한 요구 사항은 모두 빌드 명령에서 상속됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The documentation for the build command provides more information on those requirements.</source>
          <target state="translated">빌드 명령에 대한 설명서는 이러한 요구 사항에 대한 자세한 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Output files are written to the child <bpt id="p1">*</bpt>bin<ept id="p1">*</ept> folder, which will be created if it doesn't exist.</source>
          <target state="translated">출력 파일은 자식 <bpt id="p1">*</bpt>bin<ept id="p1">*</ept> 폴더에 기록되며, 이 폴더가 없을 경우 생성합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Files will be overwritten as needed.</source>
          <target state="translated">필요에 따라 파일을 덮어씁니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Temporary files are written to the child <bpt id="p1">*</bpt>obj<ept id="p1">*</ept> folder.</source>
          <target state="translated">임시 파일은 자식 <bpt id="p1">*</bpt>obj<ept id="p1">*</ept> 폴더에 기록됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In case of a project with multiple specified frameworks, <ph id="ph1">`dotnet run`</ph> will first select the .NET Core frameworks.</source>
          <target state="translated">여러 프레임워크가 지정된 프로젝트의 경우 <ph id="ph1">`dotnet run`</ph>은 먼저 .NET Core 프레임워크를 선택합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If those do not exist, it will error out.</source>
          <target state="translated">이러한 프레임워크가 없을 경우 오류가 출력됩니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To specify other frameworks, use the <ph id="ph1">`--framework`</ph> argument.</source>
          <target state="translated">다른 프레임워크를 지정하려면 <ph id="ph1">`--framework`</ph> 인수를 사용합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet run`</ph> command must be used in the context of projects, not built assemblies.</source>
          <target state="translated"><ph id="ph1">`dotnet run`</ph> 명령은 빌드된 어셈블리가 아닌 프로젝트의 컨텍스트에서 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If you're trying to run a portable application DLL instead, you should use <bpt id="p1">[</bpt>dotnet<ept id="p1">](dotnet.md)</ept> without any command like in the following example:</source>
          <target state="translated">이식 가능한 응용 프로그램 DLL을 대신 실행하려는 경우에는 다음 예제와 같이 다른 명령 없이 <bpt id="p1">[</bpt>dotnet<ept id="p1">](dotnet.md)</ept>을 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information about the <ph id="ph1">`dotnet`</ph> driver, see the <bpt id="p1">[</bpt>.NET Core Command Line Tools (CLI)<ept id="p1">](index.md)</ept> topic.</source>
          <target state="translated"><ph id="ph1">`dotnet`</ph> 드라이버에 대한 자세한 내용은 <bpt id="p1">[</bpt>.NET Core 명령줄 도구(CLI)<ept id="p1">](index.md)</ept> 항목을 참조하세요.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">옵션</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Delimits arguments to <ph id="ph1">`dotnet run`</ph> from arguments for the application being run.</source>
          <target state="translated">실행 중인 응용 프로그램에 대한 인수에서 <ph id="ph1">`dotnet run`</ph>에 대한 인수를 구분합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>All arguments after this one will be passed to the application being run.</source>
          <target state="translated">이 인수 다음의 모든 인수가 실행 중인 응용 프로그램에 전달됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">명령에 대한 간단한 도움말을 출력합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`-f`</ph>, <ph id="ph2">`--framework &lt;FRAMEWORK_IDENTIFIER&gt;`</ph></source>
          <target state="translated"><ph id="ph1">`-f`</ph>, <ph id="ph2">`--framework &lt;FRAMEWORK_IDENTIFIER&gt;`</ph></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Runs the application for a given framework identifier (FID).</source>
          <target state="translated">지정된 FID(프레임워크 식별자)에 대한 응용 프로그램을 실행합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`-c`</ph>, <ph id="ph2">`--configuration &lt;Debug|Release&gt;`</ph></source>
          <target state="translated"><ph id="ph1">`-c`</ph>, <ph id="ph2">`--configuration &lt;Debug|Release&gt;`</ph></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Configuration to use when publishing.</source>
          <target state="translated">게시할 때 사용할 구성입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`Debug`</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">`Debug`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`-p`</ph>, <ph id="ph2">`--project [PATH]`</ph></source>
          <target state="translated"><ph id="ph1">`-p`</ph>, <ph id="ph2">`--project [PATH]`</ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Specifies which project to run.</source>
          <target state="translated">실행할 프로젝트를 지정합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>It can be a path to a <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> file or to a directory containing a <bpt id="p2">[</bpt>project.json<ept id="p2">](project-json.md)</ept> file.</source>
          <target state="translated"><bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> 파일 또는 <bpt id="p2">[</bpt>project.json<ept id="p2">](project-json.md)</ept> 파일을 포함하는 디렉터리에 대한 경로일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It defaults to current directory if not specified.</source>
          <target state="translated">지정하지 않으면 현재 디렉터리로 기본 설정됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Run the project in the current directory: <ph id="ph1">`dotnet run`</ph></source>
          <target state="translated">현재 디렉터리에 있는 프로젝트를 실행합니다.<ph id="ph1">`dotnet run`</ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Run the specified project:</source>
          <target state="translated">지정된 프로젝트를 실행합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Run the project in the current directory (the <ph id="ph1">`--help`</ph> argument in this example is passed to the application being run, since the <ph id="ph2">`--`</ph> argument was used):</source>
          <target state="translated">현재 디렉터리에 있는 프로젝트를 실행합니다. <ph id="ph2">`--`</ph> 인수가 사용되었으므로 이 예제의 <ph id="ph1">`--help`</ph> 인수는 실행 중인 응용 프로그램에 전달됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>