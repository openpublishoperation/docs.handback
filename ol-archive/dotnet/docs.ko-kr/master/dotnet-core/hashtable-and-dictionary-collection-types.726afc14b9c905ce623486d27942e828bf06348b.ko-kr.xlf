<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58c87f9e86b5b97feb654e92a56f81940c201a6a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\collections\hashtable-and-dictionary-collection-types.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">62779ff6b36cf782994f96f047173a2ab0f05af1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66d63339143196d0d5e113c3561f0275e8ebe597</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Hashtable and Dictionary Collection Types</source>
          <target state="translated">Hashtable 및 Dictionary 컬렉션 형식</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Hashtable and Dictionary Collection Types</source>
          <target state="translated">Hashtable 및 Dictionary 컬렉션 형식</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Hashtable and Dictionary Collection Types</source>
          <target state="translated">Hashtable 및 Dictionary 컬렉션 형식</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Collections.Hashtable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept> class, and the <bpt id="p2">[</bpt>System.Collections.Generic.Dictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept> and <bpt id="p3">[</bpt>System.Collections.Concurrent.ConcurrentDictionary<ph id="ph3">&lt;T&gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept> generic classes implement the <bpt id="p4">[</bpt>System.Collections.IDictionary<ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept> interface.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Hashtable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept> 클래스와 <bpt id="p2">[</bpt>System.Collections.Generic.Dictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept> 및 <bpt id="p3">[</bpt>System.Collections.Concurrent.ConcurrentDictionary<ph id="ph3">&lt;T&gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept> 제네릭 클래스는 <bpt id="p4">[</bpt>System.Collections.IDictionary<ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept> 인터페이스를 구현합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Dictionary&lt;T&gt;`</ph> generic class also implements the <bpt id="p1">[</bpt>IDictionary<ph id="ph2">&amp;lt;</ph>TKey, TValue<ph id="ph3">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IDictionary-2)</ept> generic interface.</source>
          <target state="translated">또한 <ph id="ph1">`Dictionary&lt;T&gt;`</ph> 제네릭 클래스는 <bpt id="p1">[</bpt>IDictionary<ph id="ph2">&amp;lt;</ph>TKey, TValue<ph id="ph3">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IDictionary-2)</ept> 제네릭 인터페이스를 구현합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Therefore, each element in these collections is a key-and-value pair.</source>
          <target state="translated">따라서 이러한 컬렉션의 각 요소는 한 쌍의 키-값입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Hashtable`</ph> object consists of buckets that contain the elements of the collection.</source>
          <target state="translated"><ph id="ph1">`Hashtable`</ph> 개체는 컬렉션 요소를 포함하는 버킷으로 구성됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A bucket is a virtual subgroup of elements within the <ph id="ph1">`Hashtable`</ph>, which makes searching and retrieving easier and faster than in most collections.</source>
          <target state="translated">버킷은 <ph id="ph1">`Hashtable`</ph> 내 요소의 가상 하위 그룹으로, 대부분의 컬렉션보다 더 쉽고 빠르게 검색하고 가져올 수 있게 해줍니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Each bucket is associated with a hash code, which is generated using a hash function and is based on the key of the element.</source>
          <target state="translated">각 버킷은 해시 함수를 사용하여 생성되고 요소의 키를 기반으로 하는 해시 코드와 연결됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The generic <bpt id="p1">[</bpt>HashSet<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.HashSet-1)</ept> class is an unordered collection for containing unique elements.</source>
          <target state="translated">제네릭 <bpt id="p1">[</bpt>HashSet<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.HashSet-1)</ept> 클래스는 고유 요소를 포함하는 순서가 지정되지 않은 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A hash function is an algorithm that returns a numeric hash code based on a key.</source>
          <target state="translated">해시 함수는 키를 기준으로 숫자 해시 코드를 반환하는 알고리즘입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The key is the value of some property of the object being stored.</source>
          <target state="translated">키는 저장되는 개체의 일부 속성 값입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A hash function must always return the same hash code for the same key.</source>
          <target state="translated">해시 함수는 동일한 키에 대해 항상 동일한 해시 코드를 반환해야 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It is possible for a hash function to generate the same hash code for two different keys, but a hash function that generates a unique hash code for each unique key results in better performance when retrieving elements from the hash table.</source>
          <target state="translated">해시 함수는 두 개의 서로 다른 키에 대해 동일한 해시 코드를 생성할 수 있지만 각 고유 키에 대해 고유한 해시 코드를 생성하는 해시 함수를 통해 해시 테이블에서 요소를 검색할 때 성능이 더 낫습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Each object that is used as an element in a <ph id="ph1">`Hashtable`</ph> must be able to generate a hash code for itself by using an implementation of the <ph id="ph2">`GetHashCode`</ph> method.</source>
          <target state="translated"><ph id="ph1">`Hashtable`</ph>에서 요소로 사용되는 각 개체는 <ph id="ph2">`GetHashCode`</ph> 메서드 구현을 사용하여 자체 해시 코드를 생성할 수 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When an object is added to a <ph id="ph1">`Hashtable`</ph>, it is stored in the bucket that is associated with the hash code that matches the object's hash code.</source>
          <target state="translated">개체가 <ph id="ph1">`Hashtable`</ph>에 추가된 경우 개체의 해시 코드와 일치하는 해시 코드와 연결된 버킷에 저장됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When a value is being searched for in the <ph id="ph1">`Hashtable`</ph>, the hash code is generated for that value, and the bucket associated with that hash code is searched.</source>
          <target state="translated"><ph id="ph1">`Hashtable`</ph>에서 값을 검색하는 경우 해당 값에 대한 해시 코드가 생성되고 해당 해시 코드와 연결된 버킷이 검색됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, a hash function for a string might take the ASCII codes of each character in the string and add them together to generate a hash code.</source>
          <target state="translated">예를 들어 문자열에 대한 해시 함수는 문자열에 포함된 각 문자의 ASCII 코드를 받은 다음 함께 결합하여 해시 코드를 생성합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The string "picnic" would have a hash code that is different from the hash code for the string "basket"; therefore, the strings "picnic" and "basket" would be in different buckets.</source>
          <target state="translated">문자열 "picnic"은 문자열 "basket"의 해시 코드와 다른 해시 코드를 가지므로 문자열 "picnic"과 "basket"은 다른 버킷에 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In contrast, "stressed" and "desserts" would have the same hash code and would be in the same bucket.</source>
          <target state="translated">반면, "stressed"와 "desserts"는 동일한 해시 코드를 가지므로 동일한 버킷에 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Dictionary&lt;T&gt;`</ph> and <ph id="ph2">`ConcurrentDictionary&lt;T&gt;`</ph> classes have the same functionality as the <ph id="ph3">`Hashtable`</ph> class.</source>
          <target state="translated"><ph id="ph1">`Dictionary&lt;T&gt;`</ph> 및 <ph id="ph2">`ConcurrentDictionary&lt;T&gt;`</ph>클래스는 <ph id="ph3">`Hashtable`</ph> 클래스와 동일한 기능을 갖습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Dictionary&lt;T&gt;`</ph> of a specific type (other than <ph id="ph2">`Object`</ph>) provides better performance than a <ph id="ph3">`Hashtable`</ph> for value types.</source>
          <target state="translated">특정 형식(<ph id="ph2">`Object`</ph> 이외)의 <ph id="ph1">`Dictionary&lt;T&gt;`</ph>는 값 형식의 <ph id="ph3">`Hashtable`</ph>보다 더 나은 성능을 제공합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This is because the elements of <ph id="ph1">`Hashtable`</ph> are of type <ph id="ph2">`Object`</ph>; therefore, boxing and unboxing typically occur when you store or retrieve a value type.</source>
          <target state="translated">이는 <ph id="ph1">`Hashtable`</ph>의 요소가 <ph id="ph2">`Object`</ph> 형식이기 때문입니다. 따라서 boxing 및 unboxing은 일반적으로 값 형식을 저장하거나 검색할 때 발생합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ConcurrentDictionary&lt;T&gt;`</ph> class should be used when multiple threads might be accessing the collection simultaneously.</source>
          <target state="translated"><ph id="ph1">`ConcurrentDictionary&lt;T&gt;`</ph>클래스는 여러 스레드가 컬렉션에 동시에 액세스할 수 있는 경우에 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hashtable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Hashtable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IDictionary<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>IDictionary<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Dictionary<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Dictionary<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic.IDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IDictionary-2)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic.IDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IDictionary-2)</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Concurrent.ConcurrentDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Concurrent.ConcurrentDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Commonly Used Collection Types<ept id="p1">](commonly-used-collection-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>일반적으로 사용되는 컬렉션 형식<ept id="p1">](commonly-used-collection-types.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>