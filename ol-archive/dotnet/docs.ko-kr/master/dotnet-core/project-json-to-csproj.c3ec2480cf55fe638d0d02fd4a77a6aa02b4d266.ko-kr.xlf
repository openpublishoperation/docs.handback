<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b5c25fc" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">beaae03add6f90692189325c0e1cff5ab761abb5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\project-json-to-csproj.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">903208aeebd0af4c5fb9a91e202fb6b6f6850599</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">313ee5e727767a0daeac6af79542c80b5521a6e8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>project.json and csproj comparison - .NET Core | Microsoft Docs</source>
          <target state="translated">project.json 및 csproj 비교 - .NET Core | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>See a mapping between project.json and csproj elements.</source>
          <target state="translated">project.json 및 csproj e요소 간 매핑을 참조하세요.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>project.json, csproj, .NET Core, MSBuild</source>
          <target state="translated">project.json, csproj, .NET Core, MSBuild</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A mapping between project.json and csproj properties</source>
          <target state="translated">project.json 및 csproj 속성 간 매핑</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By <bpt id="p1">[</bpt>Nate McMaster<ept id="p1">](http://github.com/natemcmaster)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Nate McMaster<ept id="p1">](http://github.com/natemcmaster)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>During the development of the .NET Core tooling, an important design change was made to no longer support <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> files and instead move the .NET Core projects to the MSBuild/csproj format.</source>
          <target state="translated">.NET Core 도구 개발 중 중요한 디자인 변경으로 인해 <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> 파일이 더 이상 지원되지 않으며 대신 .NET Core 프로젝트를 MSBuild/csproj 형식으로 전환합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This article shows how the settings in <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> are represented in the MSBuild/csproj format so you can learn how to use the new format and understand the changes made by the migration tools when you're upgrading your project to the latest version of the tooling.</source>
          <target state="translated">이 문서에서는 프로젝트를 최신 버전의 도구로 업그레이드할 때, 새 형식을 사용하는 방법을 배우고 마이그레이션 도구에서 수행한 변경 내용을 이해할 수 있도록 <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>의 설정이 MSBuild/csproj 형식으로 표시되는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The csproj format</source>
          <target state="translated">csproj 형식</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The new format, <ph id="ph1">\*</ph>.csproj, is an XML-based format.</source>
          <target state="translated">새 형식인 <ph id="ph1">\*</ph>.csproj는 XML 기반 형식입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following example shows the root node of a .NET Core project using the <ph id="ph1">`Microsoft.NET.Sdk`</ph>.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`Microsoft.NET.Sdk`</ph>를 사용하는 .NET Core 프로젝트의 루트 노드를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For web projects, the SDK used is <ph id="ph1">`Microsoft.NET.Sdk.Web`</ph>.</source>
          <target state="translated">웹 프로젝트의 경우 사용되는 SDK는 <ph id="ph1">`Microsoft.NET.Sdk.Web`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Common top-level properties</source>
          <target state="translated">일반적인 최상위 속성</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="translated">name</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>No longer supported.</source>
          <target state="translated">더 이상 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In csproj, this is determined by the project filename, which is defined by the directory name.</source>
          <target state="translated">csproj에서는 디렉터리 이름으로 정의되는 프로젝트 파일 이름으로 결정됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`MyProjectName.csproj`</ph>.</source>
          <target state="translated">예를 들어, <ph id="ph1">`MyProjectName.csproj`</ph>을 입력합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>By default, the project filename also specifies the value of the <ph id="ph1">`&lt;AssemblyName&gt;`</ph> and <ph id="ph2">`&lt;PackageId&gt;`</ph> properties.</source>
          <target state="translated">기본적으로 프로젝트 파일 이름은 <ph id="ph1">`&lt;AssemblyName&gt;`</ph> 및 <ph id="ph2">`&lt;PackageId&gt;`</ph> 속성의 값도 지정합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;AssemblyName&gt;`</ph> will have a different value then <ph id="ph2">`&lt;PackageId&gt;`</ph> if <ph id="ph3">`buildOptions\outputName`</ph> property was defined in project.json.</source>
          <target state="translated"><ph id="ph3">`buildOptions\outputName`</ph> 속성이 project.json에서 정의된 경우 <ph id="ph1">`&lt;AssemblyName&gt;`</ph>에는 <ph id="ph2">`&lt;PackageId&gt;`</ph>와 다른 값이 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Other common build options<ept id="p1">](#other-common-build-options)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>기타 일반적인 빌드 옵션<ept id="p1">](#other-common-build-options)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>version</source>
          <target state="translated">version</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`VersionPrefix`</ph> and <ph id="ph2">`VersionSuffix`</ph> properties:</source>
          <target state="translated"><ph id="ph1">`VersionPrefix`</ph> 및 <ph id="ph2">`VersionSuffix`</ph> 속성을 사용합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can also use the <ph id="ph1">`Version`</ph> property, but this may override version settings during packaging:</source>
          <target state="translated"><ph id="ph1">`Version`</ph> 속성을 사용할 수도 있지만, 패키징 중 버전 설정이 재정의될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Other common root-level options</source>
          <target state="translated">기타 일반적인 루트 수준 옵션</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>frameworks</source>
          <target state="translated">frameworks</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>One target framework</source>
          <target state="translated">단일 대상 프레임워크</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Multiple target frameworks</source>
          <target state="translated">여러 대상 프레임워크</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`TargetFrameworks`</ph> property to define your list of target frameworks.</source>
          <target state="translated"><ph id="ph1">`TargetFrameworks`</ph> 속성을 사용하여 대상 프레임워크의 목록을 정의합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Use semi-colon to separate multiple framework values.</source>
          <target state="translated">세미콜론을 사용하여 여러 프레임워크 값을 구분합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>dependencies</source>
          <target state="translated">종속성</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the dependency is a <bpt id="p1">**</bpt>project<ept id="p1">**</ept> and not a package, the format is different.</source>
          <target state="translated">종속성이 <bpt id="p1">**</bpt>프로젝트<ept id="p1">**</ept>이고 패키지가 아닌 경우 형식이 다릅니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>dependency type<ept id="p1">](#dependency-type)</ept> section.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>종속성 유형<ept id="p1">](#dependency-type)</ept> 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>NETStandard.Library metapackage</source>
          <target state="translated">NETStandard.Library metapackage</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Microsoft.NETCore.App metapackage</source>
          <target state="translated">Microsoft.NETCore.App metapackage</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Note that the <ph id="ph1">`&lt;RuntimeFrameworkVersion&gt;`</ph> value in the migrated project is determined by the version of the SDK you have installed.</source>
          <target state="translated">마이그레이션된 프로젝트에서 <ph id="ph1">`&lt;RuntimeFrameworkVersion&gt;`</ph> 값은 설치한 SDK의 버전에 따라 결정됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Top-level dependencies</source>
          <target state="translated">최상위 종속성</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Per-framework dependencies</source>
          <target state="translated">프레임워크별 종속성</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>imports</source>
          <target state="translated">가져오기</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>dependency type</source>
          <target state="translated">종속성 유형</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>type: project</source>
          <target state="translated">type: project</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This will break the way that <ph id="ph1">`dotnet pack --version-suffix $suffix`</ph> determines the dependency version of a project reference.</source>
          <target state="translated"><ph id="ph1">`dotnet pack --version-suffix $suffix`</ph>가 프로젝트 참조의 종속성 버전을 결정하는 방법이 중단됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>type: build</source>
          <target state="translated">type: build</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>type: platform</source>
          <target state="translated">type: platform</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>There is no equivalent in csproj.</source>
          <target state="translated">csproj에는 동일한 항목이 없습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>runtimes</source>
          <target state="translated">runtimes</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Standalone apps (self-contained deployment)</source>
          <target state="translated">독립 실행형 앱(자체 포함 배포)</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In project.json, defining a <ph id="ph1">`runtimes`</ph> section means the app was standalone during build and publish.</source>
          <target state="translated">project.json에서 <ph id="ph1">`runtimes`</ph> 섹션 정의는 앱이 빌드 및 게시 중 독립 실행형이었음을 의미합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In MSBuild, all projects are <bpt id="p1">*</bpt>portable<ept id="p1">*</ept> during build, but can be published as standalone.</source>
          <target state="translated">MSBuild에서 모든 프로젝트는 빌드 중 <bpt id="p1">*</bpt>이식 가능<ept id="p1">*</ept>하지만 독립 실행형으로 게시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Self-contained deployments (SCD)<ept id="p1">](../deploying/index.md#self-contained-deployments-scd)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>SCD(자체 포함 배포)<ept id="p1">](../deploying/index.md#self-contained-deployments-scd)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>tools</source>
          <target state="translated">도구</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`imports`</ph> on tools are not supported in csproj.</source>
          <target state="translated">도구의 <ph id="ph1">`imports`</ph>는 csproj에서 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Tools that need imports will not work with the new <ph id="ph1">`Microsoft.NET.Sdk`</ph>.</source>
          <target state="translated">imports가 필요한 도구는 새 <ph id="ph1">`Microsoft.NET.Sdk`</ph>와 작동하지 않습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>buildOptions</source>
          <target state="translated">buildOptions</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>See also <bpt id="p1">[</bpt>Files<ept id="p1">](#files)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>파일<ept id="p1">](#files)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>emitEntryPoint</source>
          <target state="translated">emitEntryPoint</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`emitEntryPoint`</ph> was <ph id="ph2">`false`</ph>, the value of <ph id="ph3">`OutputType`</ph> is converted to <ph id="ph4">`Library`</ph>, which is the default value:</source>
          <target state="translated"><ph id="ph1">`emitEntryPoint`</ph>가 <ph id="ph2">`false`</ph>인 경우 <ph id="ph3">`OutputType`</ph> 값은 기본값인 <ph id="ph4">`Library`</ph>로 변환됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>keyFile</source>
          <target state="translated">keyFile</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`keyFile`</ph> element expands to three properties in MSBuild:</source>
          <target state="translated"><ph id="ph1">`keyFile`</ph> 요소는 MSBuild의 세 가지 속성으로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Other common build options</source>
          <target state="translated">기타 일반적인 빌드 옵션</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>packOptions</source>
          <target state="translated">packOptions</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>See also <bpt id="p1">[</bpt>Files<ept id="p1">](#files)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>파일<ept id="p1">](#files)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Common pack options</source>
          <target state="translated">일반적인 팩 옵션</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>There is no equivalent for the <ph id="ph1">`owners`</ph> element in MSBuild.</source>
          <target state="translated">MSBuild에는 <ph id="ph1">`owners`</ph> 요소에 대해 동일한 요소가 없습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`summary`</ph>, you can use the MSBuild <ph id="ph2">`&lt;Description&gt;`</ph> property, even though the value of <ph id="ph3">`summary`</ph> is not migrated automatically to that property, since that property is mapped to the <bpt id="p1">[</bpt><ph id="ph4">`description`</ph><ept id="p1">](#-other-common-root-level-options)</ept> element.</source>
          <target state="translated"><ph id="ph1">`summary`</ph>의 경우, <ph id="ph3">`summary`</ph> 값이 자동으로 해당 속성에 마이그레이션되지 않은 경우에도 속성이 <bpt id="p1">[</bpt> <ph id="ph4">`description`</ph> <ept id="p1">](#-other-common-root-level-options)</ept> 요소로 매핑되므로 MSBuild <ph id="ph2">`&lt;Description&gt;`</ph> 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>scripts</source>
          <target state="translated">스크립트</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Their equivalent in MSBuild are <bpt id="p1">[</bpt>targets<ept id="p1">](https://docs.microsoft.com/visualstudio/msbuild/msbuild-targets)</ept>:</source>
          <target state="translated">MSBuild에서 해당하는 요소는 <bpt id="p1">[</bpt>targets<ept id="p1">](https://docs.microsoft.com/visualstudio/msbuild/msbuild-targets)</ept>입니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>runtimeOptions</source>
          <target state="translated">runtimeOptions</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>All settings in this group, except for the "System.GC.Server" property, are placed into a file called <bpt id="p1">*</bpt>runtimeconfig.template.json<ept id="p1">*</ept> in the project folder, with options lifted to the root object during the migration process:</source>
          <target state="translated">"System.GC.Server" 속성을 제외하고, 이 그룹의 모든 설정은 마이그레이션 프로세스 중 루트 개체에 적용된 옵션과 함께 프로젝트 폴더에서 <bpt id="p1">*</bpt>runtimeconfig.template.json<ept id="p1">*</ept>이라는 파일에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The "System.GC.Server" property is migrated into the csproj file:</source>
          <target state="translated">"System.GC.Server" 속성은 csproj 파일로 마이그레이션됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>However, you can set all those values in the csproj as well as MSBuild properties:</source>
          <target state="translated">그러나 MSBuild 속성뿐만 아니라 csproj에서 모든 해당 값을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>shared</source>
          <target state="translated">공유</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Not supported in csproj.</source>
          <target state="translated">csproj에서 지원되지 않습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You must instead create include content files in your <bpt id="p1">*</bpt>.nuspec<ept id="p1">*</ept> file.</source>
          <target state="translated">대신 <bpt id="p1">*</bpt>.nuspec<ept id="p1">*</ept> 파일에 콘텐츠 파일을 포함해야 합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Including content files<ept id="p1">](https://docs.microsoft.com/nuget/schema/nuspec#including-content-files)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>콘텐츠 파일 포함<ept id="p1">](https://docs.microsoft.com/nuget/schema/nuspec#including-content-files)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>files</source>
          <target state="translated">파일</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>, build and pack could be extended to compile and embed from different folders.</source>
          <target state="translated"><bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>에서 빌드 및 팩을 확장하여 컴파일하고 다른 폴더에서 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In MSBuild, this is done using <bpt id="p1">[</bpt>items<ept id="p1">](https://docs.microsoft.com/visualstudio/msbuild/common-msbuild-project-items)</ept>.</source>
          <target state="translated">MSBuild에서는 <bpt id="p1">[</bpt>항목<ept id="p1">](https://docs.microsoft.com/visualstudio/msbuild/common-msbuild-project-items)</ept>을 사용하여 수행합니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The following example is a common conversion:</source>
          <target state="translated">다음 예제는 일반적인 변환입니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Many of default globbing patterns are added automatically by the .NET Core SDK.</source>
          <target state="translated">많은 기본 와일드카드 사용 패턴이 .NET Core SDK에 의해 자동으로 추가됩니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Default Compile Item Values<ept id="p1">](https://aka.ms/sdkimplicititems)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>기본 컴파일 항목 값<ept id="p1">](https://aka.ms/sdkimplicititems)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>All MSBuild <ph id="ph1">`ItemGroup`</ph> elements support <ph id="ph2">`Include`</ph>, <ph id="ph3">`Exclude`</ph>, and <ph id="ph4">`Remove`</ph>.</source>
          <target state="translated">모든 MSBuild <ph id="ph1">`ItemGroup`</ph> 요소는 <ph id="ph2">`Include`</ph>, <ph id="ph3">`Exclude`</ph> 및 <ph id="ph4">`Remove`</ph>를 지원합니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Package layout inside the .nupkg can be modified with <ph id="ph1">`PackagePath="path"`</ph>.</source>
          <target state="translated">.nupkg 내의 패키지 레이아웃은 <ph id="ph1">`PackagePath="path"`</ph>를 사용하여 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Except for <ph id="ph1">`Content`</ph>, most item groups require explicitly adding <ph id="ph2">`Pack="true"`</ph> to be included in the package.</source>
          <target state="translated"><ph id="ph1">`Content`</ph>를 제외하고, 대부분의 항목 그룹은 패키지에 포함되도록 <ph id="ph2">`Pack="true"`</ph>를 명시적으로 추가해야 합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Content`</ph> will be put in the <bpt id="p1">*</bpt>content<ept id="p1">*</ept> folder in a package since the MSBuild <ph id="ph2">`&lt;IncludeContentInPack&gt;`</ph> property is set to <ph id="ph3">`true`</ph> by default.</source>
          <target state="translated">MSBuild <ph id="ph2">`&lt;IncludeContentInPack&gt;`</ph> 속성이 기본적으로 <ph id="ph3">`true`</ph>로 설정되어 있기 때문에 <ph id="ph1">`Content`</ph>는 패키지의 <bpt id="p1">*</bpt>content<ept id="p1">*</ept> 폴더에 놓입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Including content in a package<ept id="p1">](https://docs.microsoft.com/nuget/schema/msbuild-targets#including-content-in-a-package)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>패키지에 콘텐츠 포함<ept id="p1">](https://docs.microsoft.com/nuget/schema/msbuild-targets#including-content-in-a-package)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`PackagePath="%(Identity)"`</ph> is a short way of setting package path to the project-relative file path.</source>
          <target state="translated"><ph id="ph1">`PackagePath="%(Identity)"`</ph>는 패키지 경로를 프로젝트 상대 파일 경로에 설정하는 간단한 방법입니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>testRunner</source>
          <target state="translated">testRunner</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>xUnit</source>
          <target state="translated">xUnit</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>MSTest</source>
          <target state="translated">MSTest</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>project.json reference<ept id="p1">](project-json.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>project.json 참조<ept id="p1">](project-json.md)</ept></target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>High-level overview of changes in CLI<ept id="p1">](../tools/cli-msbuild-architecture.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>CLI의 변경 내용에 대한 대략적인 개요<ept id="p1">](../tools/cli-msbuild-architecture.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>