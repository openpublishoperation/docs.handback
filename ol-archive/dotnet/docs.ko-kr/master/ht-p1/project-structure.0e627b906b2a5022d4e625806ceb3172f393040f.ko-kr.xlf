<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca63b25bb5f5e98167aaa8b74a7204fcd77b3523</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\porting\project-structure.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e42ed4d3466e439f8e86e8c6644058bd8161a30</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24a8963905ade2ea04b56ee1dd45f22772f5f721</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Organizing Your Project to Support .NET Framework and .NET Core</source>
          <target state="translated">.NET Framework 및 .NET Core를 지원하도록 프로젝트 구성</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Organizing Your Project to Support .NET Framework and .NET Core</source>
          <target state="translated">.NET Framework 및 .NET Core를 지원하도록 프로젝트 구성</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Organizing Your Project to Support .NET Framework and .NET Core</source>
          <target state="translated">.NET Framework 및 .NET Core를 지원하도록 프로젝트 구성</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article is to help project owners who want to compile their solution against .NET Framework and .NET Core side-by-side.</source>
          <target state="translated">이 문서는 .NET Framework 및 .NET Core에 대해 솔루션을 나란히 컴파일하려는 프로젝트 소유자를 위해 작성되었습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It provides several options to organize projects to help developers achieve this goal.</source>
          <target state="translated">개발자가 이러한 목표를 달성할 수 있도록 프로젝트를 구성하는 몇 가지 옵션이 제공됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Here are some typical scenarios to consider when you are deciding how to setup your project layout with .NET Core.</source>
          <target state="translated">.NET Core를 사용하여 프로젝트 레이아웃을 설정하는 방법을 결정할 때 고려해야 할 몇 가지 일반적인 시나리오는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>They may not cover everything you want; prioritize based on your project's needs.</source>
          <target state="translated">여기에서 모든 것을 다루지는 못할 수 있습니다. 프로젝트 요구에 따라 우선 순위를 정하세요.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Combine existing projects and .NET Core projects into single projects<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>option-xproj<ept id="p3">]</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>기존 프로젝트와 .NET Core 프로젝트를 단일 프로젝트로 결합<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>option-xproj<ept id="p3">]</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>What this is good for:<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>좋은 점:<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Simplifying your build process by compiling a single project rather than compiling multiple projects, each targeting a different .NET Framework version or platform.</source>
          <target state="translated">각각 다른 .NET Framework 버전 또는 플랫폼을 대상으로 하는 여러 프로젝트를 컴파일하는 것이 아니라 단일 프로젝트를 컴파일함으로써 빌드 프로세스를 간소화합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Simplifying source file management for multi-targeted projects because you have to manage a single project file.</source>
          <target state="translated">단일 프로젝트 파일을 관리해야 하므로 다중 대상 프로젝트에 대한 소스 파일 관리를 간소화합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When adding/removing source files, the alternatives require you to manually sync these with your other projects.</source>
          <target state="translated">소스 파일을 추가/제거할 때 대체 방법에서는 이를 다른 프로젝트와 수동으로 동기화해야 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Easily generating a NuGet package for consumption.</source>
          <target state="translated">사용할 NuGet 패키지를 쉽게 생성합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Allows you to write code for a specific .NET Framework version in your libraries through the use of compiler directives.</source>
          <target state="translated">컴파일러 지시문을 사용하여 라이브러리에서 특정 .NET Framework 버전에 대한 코드를 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Unsupported scenarios:<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>지원되지 않는 시나리오:<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Does not allow developers without Visual Studio 2015 to open existing projects.</source>
          <target state="translated">개발자가 Visual Studio 2015 없이 기존 프로젝트를 열 수 없습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To support older versions of Visual Studio, <bpt id="p1">[</bpt>keeping your project files in different folders<ept id="p1">](#support-vs)</ept> is a better option.</source>
          <target state="translated">Visual Studio의 이전 버전을 지원하려면 <bpt id="p1">[</bpt>프로젝트 파일을 서로 다른 폴더에 유지<ept id="p1">](#support-vs)</ept>하는 것이 더 낫습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Does not allow you to share your .NET Core library across different project types in the same solution file.</source>
          <target state="translated">동일한 솔루션 파일의 서로 다른 프로젝트 형식 간에 .NET Core 라이브러리를 공유할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To support this, <bpt id="p1">[</bpt>creating a Portable Class Library<ept id="p1">](#support-pcl)</ept> is a better option.</source>
          <target state="translated">이를 지원하려면 <bpt id="p1">[</bpt>이식 가능한 클래스 라이브러리를 만드는 것<ept id="p1">](#support-pcl)</ept>이 더 낫습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Does not allow for project build or load modifications that are supported by MSBuild Targets and Tasks.</source>
          <target state="translated">MSBuild 대상 및 작업에서 지원하는 프로젝트 빌드나 로드 수정이 허용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To support this, <bpt id="p1">[</bpt>creating a Portable Class Library<ept id="p1">](#support-pcl)</ept> is a better option.</source>
          <target state="translated">이를 지원하려면 <bpt id="p1">[</bpt>이식 가능한 클래스 라이브러리를 만드는 것<ept id="p1">](#support-pcl)</ept>이 더 낫습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><g id="p1" ctype="x-a" name="support-vs" /><bpt id="p2">[</bpt><bpt id="p3">**</bpt>Keep existing projects and new .NET Core projects separate<ept id="p3">**</ept><ept id="p2">]</ept><bpt id="p4">[</bpt>option-xproj-folder<ept id="p4">]</ept></source>
          <target state="translated"><g id="p1" ctype="x-a" name="support-vs"></g><bpt id="p2">[</bpt><bpt id="p3">**</bpt>기존 프로젝트와 새로운 .NET Core 프로젝트를 별도로 유지<ept id="p3">**</ept><ept id="p2">]</ept><bpt id="p4">[</bpt>option-xproj-folder<ept id="p4">]</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>What this is good for:<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>좋은 점:<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Continuing to support development on existing projects without having to upgrade for developers/contributors who may not have Visual Studio 2015.</source>
          <target state="translated">Visual Studio 2015가 없는 개발자/참가자의 경우 업그레이드하지 않고 기존 프로젝트에 대한 개발을 계속 지원할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Decreasing the possibility in creating new bugs in existing projects because no code churn is required in those projects.</source>
          <target state="translated">기존 프로젝트에서 코드 변동이 필요하지 않으므로 새 버그가 발생할 가능성이 줄어듭니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><g id="p1" ctype="x-a" name="support-pcl" /><bpt id="p2">[</bpt><bpt id="p3">**</bpt>Keep existing projects and create Portable Class Libraries (PCLs) targeting .NET Core<ept id="p3">**</ept><ept id="p2">]</ept><bpt id="p4">[</bpt>option-pcl<ept id="p4">]</ept></source>
          <target state="translated"><g id="p1" ctype="x-a" name="support-pcl"></g><bpt id="p2">[</bpt><bpt id="p3">**</bpt>기존 프로젝트를 유지하고 .NET Core를 대상으로 하는 PCL(이식 가능한 클래스 라이브러리) 만들기<ept id="p3">**</ept><ept id="p2">]</ept><bpt id="p4">[</bpt>option-pcl<ept id="p4">]</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>What this is good for:<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>좋은 점:<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Referencing your .NET Core libraries in desktop and/or web projects targeting the full .NET Framework in the same solution.</source>
          <target state="translated">동일한 솔루션의 전체 .NET Framework를 대상으로 하는 데스크톱 및/또는 웹 프로젝트에서 .NET Core 라이브러리를 참조합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Supporting modifications in the project build or load process.</source>
          <target state="translated">프로젝트 빌드 또는 로드 프로세스에서 수정을 지원합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>These modifications could be the inclusion of MSBuild Tasks and Targets in your <ph id="ph1">`*.csproj`</ph> file.</source>
          <target state="translated">이러한 수정은 <ph id="ph1">`*.csproj`</ph> 파일에서 MSBuild 작업 및 대상에 포함될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Unsupported scenarios:<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>지원되지 않는 시나리오:<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Does not allow you to write code for a specific .NET Framework version because the <bpt id="p1">[</bpt>predefined preprocessor symbols<ept id="p1">]</ept><bpt id="p2">[</bpt>how-to-multitarget<ept id="p2">]</ept> are not supported.</source>
          <target state="translated"><bpt id="p1">[</bpt>미리 정의된 전처리기 기호<ept id="p1">]</ept><bpt id="p2">[</bpt>how-to-multitarget<ept id="p2">]</ept>가 지원되지 않으므로 특정 .NET Framework 버전에 대한 코드를 쓸 수 없습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Consider the repository below:</source>
          <target state="translated">아래 리포지토리를 고려하세요.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Existing project</source>
          <target state="translated">기존 프로젝트</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Source Code<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>example-initial-project-code<ept id="p3">]</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>소스 코드<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>example-initial-project-code<ept id="p3">]</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>There are several different ways to add support for .NET Core for this repository depending on the constraints and complexity of existing projects which are described below.</source>
          <target state="translated">아래에서 설명하는 기존 프로젝트의 제약 조건 및 복잡성에 따라 이 리포지토리에 대한 .NET Core의 지원을 추가하는 여러 가지 방법이 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Replace Existing Projects with a Multi-targeted .NET Core Project (xproj)</source>
          <target state="translated">기존 프로젝트를 멀티 타기팅 .NET Core 프로젝트(xproj)와 교체</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The repository can be reorganized so that any existing <ph id="ph1">`*.csproj`</ph> files are removed and a single <ph id="ph2">`*.xproj`</ph> file is created that targets multiple frameworks.</source>
          <target state="translated">기존 <ph id="ph1">`*.csproj`</ph> 파일을 제거하고 여러 프레임워크를 대상으로 하는 단일 <ph id="ph2">`*.xproj`</ph> 파일을 만들도록 리포지토리를 재구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This is a great option because a single project is able to compile for different frameworks.</source>
          <target state="translated">서로 다른 프레임워크에 대해 단일 프로젝트를 컴파일할 수 있으므로 이는 좋은 옵션입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>It also has the power to handle different compilation options, dependencies, etc.</source>
          <target state="translated">또한 대상 프레임워크에 대해 서로 다른 컴파일 옵션, 종속성 등을 처리할 수도</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>per targeted framework.</source>
          <target state="translated">있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Create an xproj that targets multiple frameworks</source>
          <target state="translated">여러 프레임워크를 대상으로 하는 xproj 만들기</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Source Code<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>example-xproj-code<ept id="p3">]</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>소스 코드<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>example-xproj-code<ept id="p3">]</ept></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Changes to note are:</source>
          <target state="translated">주목할 변경 사항은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Addition of <ph id="ph1">`global.json`</ph></source>
          <target state="translated">추가: <ph id="ph1">`global.json`</ph></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Replacement of <ph id="ph1">`packages.config`</ph> and <ph id="ph2">`*.csproj`</ph> with <ph id="ph3">`project.json`</ph> and <ph id="ph4">`*.xproj`</ph></source>
          <target state="translated"><ph id="ph1">`packages.config`</ph> 및 <ph id="ph2">`*.csproj`</ph>를 다음으로 교체: <ph id="ph3">`project.json`</ph> 및 <ph id="ph4">`*.xproj`</ph></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Changes in the <bpt id="p1">[</bpt>Car's project.json<ept id="p1">]</ept><bpt id="p2">[</bpt>example-xproj-projectjson<ept id="p2">]</ept> and its <bpt id="p3">[</bpt>test project<ept id="p3">]</ept><bpt id="p4">[</bpt>example-xproj-projectjson-test<ept id="p4">]</ept> to support building for the existing .NET Framework as well as others</source>
          <target state="translated">기존 .NET Framework 및 기타에 대한 빌드를 지원하도록 <bpt id="p1">[</bpt>Car의 project.json<ept id="p1">]</ept><bpt id="p2">[</bpt>example-xproj-projectjson<ept id="p2">]</ept> 및 <bpt id="p3">[</bpt>테스트 프로젝트<ept id="p3">]</ept><bpt id="p4">[</bpt>example-xproj-projectjson-test<ept id="p4">]</ept>에서 변경된 사항</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Create a Portable Class Library (PCL) to target .NET Core</source>
          <target state="translated">.NET Core를 대상으로 하는 PCL(이식 가능한 클래스 라이브러리) 만들기</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If existing projects contain complex build operations or properties in their <ph id="ph1">`*.csproj`</ph> file, it may be easier to create a PCL.</source>
          <target state="translated">기존 프로젝트가 <ph id="ph1">`*.csproj`</ph> 파일에 복잡한 빌드 작업 또는 속성을 포함하는 경우 PCL을 만드는 것이 더 쉬울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Source Code<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>example-pcl-code<ept id="p3">]</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>소스 코드<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>example-pcl-code<ept id="p3">]</ept></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Changes to note are:</source>
          <target state="translated">주목할 변경 사항은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Renaming <ph id="ph1">`project.json`</ph> to <ph id="ph2">`{project-name}.project.json`</ph></source>
          <target state="translated"><ph id="ph1">`project.json`</ph> 이름을 다음으로 바꾸기: <ph id="ph2">`{project-name}.project.json`</ph></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This prevents potential conflict in Visual Studio when trying to restore packages for the libraries in the same directory.</source>
          <target state="translated">이렇게 하면 동일한 디렉터리의 라이브러리에 대한 패키지를 복원하려고 시도할 때 Visual Studio 내 충돌 가능성이 해소됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>NuGet FAQ<ept id="p1">](https://docs.nuget.org/consume/nuget-faq#working-with-packages)</ept> under "<bpt id="p2">_</bpt>I have multiple projects in the same folder, how can I use separate packages.config or project.json files for each project?<ept id="p2">_</ept>".</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>NuGet FAQ<ept id="p1">](https://docs.nuget.org/consume/nuget-faq#working-with-packages)</ept>의 "<bpt id="p2">_</bpt>I have multiple projects in the same folder, how can I use separate packages.config or project.json files for each project?(동일한 폴더에 여러 프로젝트가 있는데, 각 프로젝트에 대해 어떻게 별도의 packages.config 또는 project.json 파일을 사용하나요?)<ept id="p2">_</ept>"를 참조하세요.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Alternative<ept id="p1">**</ept>: Create the PCL in another folder and reference the original source code to avoid this issue.</source>
          <target state="translated"><bpt id="p1">**</bpt>대안<ept id="p1">**</ept>: 이 문제를 방지하려면 또 다른 폴더에 PCL을 만들고 원래 소스 코드를 참조합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Placing the PCL in another folder has an added benefit that users who do not have Visual Studio 2015 can still work on the older projects without loading the new solution.</source>
          <target state="translated">PCL을 또 다른 폴더에 두면 Visual Studio 2015를 가지고 있지 않은 사용자도 새 솔루션을 로드하지 않은 채 이전 프로젝트에서 작업할 수 있다는 이점이 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To target .NET Standard after creating the PCL, in Visual Studio, open the <bpt id="p1">**</bpt>Project's Properties<ept id="p1">**</ept>.</source>
          <target state="translated">Visual Studio에서 PCL을 만든 후 .NET 표준을 대상으로 지정하려면 <bpt id="p1">**</bpt>프로젝트의 속성<ept id="p1">**</ept>을 엽니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Under the <bpt id="p1">**</bpt>Targets<ept id="p1">**</ept> section, click on the link <bpt id="p2">**</bpt>"Target .NET Platform Standard"<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>대상<ept id="p1">**</ept> 섹션 아래에서 <bpt id="p2">**</bpt>".NET 플랫폼 표준을 대상으로 지정"<ept id="p2">**</ept>을 클릭합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This change can be reversed by repeating the same steps.</source>
          <target state="translated">동일한 단계를 반복하면 이 변경 내용을 되돌릴 수 있습니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Keep Existing Projects and Create a .NET Core Project</source>
          <target state="translated">기존 프로젝트를 유지하고 .NET Core 프로젝트 만들기</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If there are existing projects that target older frameworks, you may want to leave these projects untouched and use a .NET Core project to target future frameworks.</source>
          <target state="translated">이전 프레임워크를 대상으로 하는 기존 프로젝트가 있는 경우, 이러한 프로젝트는 그대로 두고 이후 프레임워크를 대상으로 하는 .NET Core를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>.NET Core project with existing PCL in different folder</source>
          <target state="translated">다른 폴더에 기존 PCL이 있는 .NET Core 프로젝트</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><bpt id="p2">**</bpt>Source Code<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>example-xproj-different-code<ept id="p3">]</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><bpt id="p2">**</bpt>소스 코드<ept id="p2">**</ept><ept id="p1">]</ept><bpt id="p3">[</bpt>example-xproj-different-code<ept id="p3">]</ept></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Changes to note are:</source>
          <target state="translated">주목할 변경 사항은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The .NET Core and existing projects are kept in separate folders.</source>
          <target state="translated">.NET Core와 기존 프로젝트가 별도의 폴더에 유지됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This avoids the package restore issue that was mentioned above due to multiple project.json/package.config files being in the same folder.</source>
          <target state="translated">따라서 여러 project.json/package.config 파일이 동일한 폴더에 있어서 발생하는 위에서 언급한 패키지 복원 문제가 해소됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Keeping projects in separate folders avoids forcing you to have Visual Studio 2015 (due to project.json).</source>
          <target state="translated">프로젝트를 별도의 폴더에 유지하면 project.json 때문에 Visual Studio 2015를 가지고 있어야 할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You can create a separate solution that only opens the old projects.</source>
          <target state="translated">이전 프로젝트만 여는 별도 솔루션을 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Please see <bpt id="p1">[</bpt>.NET Core porting documentation<ept id="p1">]</ept><bpt id="p2">[</bpt>porting-doc<ept id="p2">]</ept> for more guidance on moving to project.json and xproj.</source>
          <target state="translated">project.json 및 xproj로의 이전에 대한 자세한 지침은 <bpt id="p1">[</bpt>.NET Core 이식 문서<ept id="p1">]</ept><bpt id="p2">[</bpt>porting-doc<ept id="p2">]</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>porting-doc<ept id="p1">]: index.md</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>porting-doc<ept id="p1">]: index.md</ept></target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>example-initial-project<ept id="p1">]: media/project-structure/project.png</ept><bpt id="p2"> "</bpt>Existing project<ept id="p2">"</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>example-initial-project<ept id="p1">]: media/project-structure/project.png</ept><bpt id="p2"> "</bpt>기존 프로젝트<ept id="p2">"</ept></target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>example-initial-project-code<ept id="p1">]: https://github.com/dotnet/docs/tree/master/samples/framework/libraries/migrate-library/</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>example-initial-project-code<ept id="p1">]: https://github.com/dotnet/docs/tree/master/samples/framework/libraries/migrate-library/</ept></target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>example-xproj<ept id="p1">]: media/project-structure/project.xproj.png</ept><bpt id="p2"> "</bpt>Create an xproj that targets multiple frameworks<ept id="p2">"</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>example-xproj<ept id="p1">]: media/project-structure/project.xproj.png</ept><bpt id="p2"> "</bpt>다중 프레임워크를 대상으로 하는 xproj 만들기<ept id="p2">"</ept></target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>example-xproj-code<ept id="p1">]: https://github.com/dotnet/docs/tree/master/samples/framework/libraries/migrate-library-xproj/</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>example-xproj-code<ept id="p1">]: https://github.com/dotnet/docs/tree/master/samples/framework/libraries/migrate-library-xproj/</ept></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>example-xproj-projectjson<ept id="p1">]: https://github.com/dotnet/docs/tree/master/samples/framework/libraries/migrate-library-xproj/src/Car/project.json</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>example-xproj-projectjson<ept id="p1">]: https://github.com/dotnet/docs/tree/master/samples/framework/libraries/migrate-library-xproj/src/Car/project.json</ept></target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>example-xproj-projectjson-test<ept id="p1">]: https://github.com/dotnet/docs/tree/master/samples/framework/libraries/migrate-library-xproj/tests/Car.Tests/project.json</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>example-xproj-projectjson-test<ept id="p1">]: https://github.com/dotnet/docs/tree/master/samples/framework/libraries/migrate-library-xproj/tests/Car.Tests/project.json</ept></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>example-xproj-different-folder<ept id="p1">]: media/project-structure/project.xproj.different.png</ept><bpt id="p2"> "</bpt>.NET Core project with existing PCL in different folder<ept id="p2">"</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>example-xproj-different-folder<ept id="p1">]: media/project-structure/project.xproj.different.png</ept><bpt id="p2"> "</bpt>다른 폴더에 기존 PCL이 있는 .NET Core 프로젝트<ept id="p2">"</ept></target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>example-xproj-different-code<ept id="p1">]: https://github.com/dotnet/docs/tree/master/samples/framework/libraries/migrate-library-xproj-keep-csproj/</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>example-xproj-different-code<ept id="p1">]: https://github.com/dotnet/docs/tree/master/samples/framework/libraries/migrate-library-xproj-keep-csproj/</ept></target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>example-pcl<ept id="p1">]: media/project-structure/project.pcl.png</ept><bpt id="p2"> "</bpt>PCL Targeting .NET Core<ept id="p2">"</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>example-pcl<ept id="p1">]: media/project-structure/project.pcl.png</ept><bpt id="p2"> "</bpt>.NET Core를 대상으로 하는 PCL<ept id="p2">"</ept></target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>example-pcl-code<ept id="p1">]: https://github.com/dotnet/docs/tree/master/samples/framework/libraries/migrate-library-pcl</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>example-pcl-code<ept id="p1">]: https://github.com/dotnet/docs/tree/master/samples/framework/libraries/migrate-library-pcl</ept></target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>option-xproj<ept id="p1">]: #replace-existing-projects-with-a-multi-targeted-net-core-project-xproj</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>option-xproj<ept id="p1">]: #replace-existing-projects-with-a-multi-targeted-net-core-project-xproj</ept></target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>option-pcl<ept id="p1">]: #create-a-portable-class-library-pcl-to-target-net-core</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>option-pcl<ept id="p1">]: #create-a-portable-class-library-pcl-to-target-net-core</ept></target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>option-xproj-folder<ept id="p1">]: #keep-existing-projects-and-create-a-net-core-project</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>option-xproj-folder<ept id="p1">]: #keep-existing-projects-and-create-a-net-core-project</ept></target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>how-to-multitarget<ept id="p1">]: ../tutorials/libraries.md#how-to-multitarget</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>how-to-multitarget<ept id="p1">]: ../tutorials/libraries.md#how-to-multitarget</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>