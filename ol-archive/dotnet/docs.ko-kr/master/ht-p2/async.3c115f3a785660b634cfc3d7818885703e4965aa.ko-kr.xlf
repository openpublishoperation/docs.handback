<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">033d5e8eb317a17a8f121ff37c2731c3d24999f0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\async.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74d71d4e2aa585e11dc262a435752fd4363fefda</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca7bf6a35ecfde23a0cbd6fcec6763cb4bc0270c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Async Overview</source>
          <target state="translated">비동기 개요</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Async Overview</source>
          <target state="translated">비동기 개요</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Async Overview</source>
          <target state="translated">비동기 개요</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Not so long ago, apps got faster simply by buying a newer PC or server and then that trend stopped.</source>
          <target state="translated">얼마 전만 해도 최신 PC 또는 서버를 구입하기만 해도 앱 속도가 빨라졌지만 이러한 추세는 중단되었습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In fact, it reversed.</source>
          <target state="translated">사실 반대가 되었다고 해야 맞습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Mobile phones appeared with 1ghz single core ARM chips and server workloads transitioned to VMs.</source>
          <target state="translated">1ghz 싱글 코어 ARM 칩이 탑재되고 서버 작업이 VM으로 전환된 휴대폰이 출시되었습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Users still want responsive UI and business owners want servers that scale with their business.</source>
          <target state="translated">그래도 사용자는 여전히 응답성이 뛰어난 UI를 원하고 비즈니스 소유자는 비즈니스에 맞게 확장되는 서버를 원합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The transition to mobile and cloud and an internet-connected population of &gt;3B users has resulted in a new set of software patterns.</source>
          <target state="translated">모바일 및 클라우드로의 전환과 인터넷 연결 사용자 수가 30억 명을 넘어서면서 일련의 새로운 소프트웨어 패턴이 생겼습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Client applications are expected to be always-on, always-connected and constantly responsive to user interaction (e.g. touch) with high app store ratings!</source>
          <target state="translated">클라이언트 응용 프로그램은 항상 켜져 있고, 항상 연결되어 있으며, 지속적으로 사용자 조작(예: 터치)에 빠르게 응답해야 하고, 앱 스토어 등급이 높아야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Services are expected to handle spikes in traffic by gracefully scaling up and down.</source>
          <target state="translated">서비스는 적절하게 확장 및 축소하여 트래픽 급증을 처리해야 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Async programming is a key technique that makes it straightforward to handle blocking I/O and concurrent operations on multiple cores.</source>
          <target state="translated">비동기 프로그래밍은 다중 코어에서 차단 I/O 및 동시 작업을 간단하게 처리할 수 있게 해주는 주요 기술입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>.NET provides the capability for apps and services to be responsive and elastic with easy-to-use, language-level asynchronous programming models in C#, VB, and F#.</source>
          <target state="translated">.NET에서는 앱과 서비스가 C#, VB 및 F#으로 작성된 사용하기 쉬운 언어 수준의 비동기 프로그래밍 모델을 사용하여 응답성 및 탄력성을 유지할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Why Write Async Code?</source>
          <target state="translated">비동기 코드를 작성하는 이유</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Modern apps make extensive use of file and networking I/O.</source>
          <target state="translated">최신 앱은 파일 및 네트워킹 I/O를 광범위하게 사용합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>I/O APIs traditionally block by default, resulting in poor user experiences and hardware utilization unless you want to learn and use challenging patterns.</source>
          <target state="translated">이전에는 I/O API가 기본적으로 차단되어, 어려운 패턴을 배우고 사용하지 않을 경우 사용자 환경 및 하드웨어 사용률이 좋지 않았습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Async APIs and the language-level asynchronous programming model invert this model, making async execution the default with few new concepts to learn.</source>
          <target state="translated">비동기 API 및 언어 수준의 비동기 프로그래밍 모델은 이 모델을 뒤집어 새로운 개념을 배우지 않고도 기본적으로 비동기 실행을 사용할 수 있게 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Async code has the following characteritics:</source>
          <target state="translated">비동기 코드에는 다음과 같은 특성이 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Handles more server requests by yielding threads to handle more requests while waiting for I/O requests to return.</source>
          <target state="translated">I/O 요청이 반환되기를 기다리는 동안 추가 요청을 처리할 수 있도록 스레드를 양도하여 더 많은 서버 요청을 처리합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Enables UIs to be more responsive by yielding threads to UI interaction while waiting for I/O requests and by transitioning long-running work to other CPU cores.</source>
          <target state="translated">I/O 요청을 기다리는 동안 UI 조작에 스레드를 양도하고 장기 실행 작업을 다른 CPU 코어로 전환하여 UI 응답성을 개선합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Many of the newer .NET APIs are asynchronous.</source>
          <target state="translated">대부분의 최신 .NET API는 비동기입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It’s super easy to write async code in .NET!</source>
          <target state="translated">.NET에서 비동기 코드를 작성하는 것은 매우 쉽습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>What’s next?</source>
          <target state="translated">새로운 기능</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For a deep dive into async concepts and programming, see <bpt id="p1">[</bpt>Async in depth<ept id="p1">](async-in-depth.md)</ept>.</source>
          <target state="translated">비동기 개념 및 프로그래밍의 심층 탐구는 <bpt id="p1">[</bpt>비동기에 대한 자세한 설명<ept id="p1">](async-in-depth.md)</ept>을 참조하세요.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>