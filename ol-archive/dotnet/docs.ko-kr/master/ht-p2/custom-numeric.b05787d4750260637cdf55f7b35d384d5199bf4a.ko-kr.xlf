<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e36c0117f6f011589299fa59a8abd139870c2257</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\custom-numeric.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5724ebc47e4c46c835461b323e34a5701828103b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b12538c59f2c15ef904a3b6e5790831a0f1d9f4a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings</source>
          <target state="translated">사용자 지정 숫자 형식 문자열</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings</source>
          <target state="translated">사용자 지정 숫자 형식 문자열</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings</source>
          <target state="translated">사용자 지정 숫자 형식 문자열</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can create a custom numeric format string, which consists of one or more custom numeric specifiers, to define how to format numeric data.</source>
          <target state="translated">하나 이상의 사용자 지정 숫자 서식 지정자로 구성된 사용자 지정 숫자 서식 문자열을 만들어 숫자 데이터의 서식을 지정하는 방법을 정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A custom numeric format string is any format string that is not a <bpt id="p1">[</bpt>standard numeric format string<ept id="p1">](standard-numeric.md)</ept>.</source>
          <target state="translated">사용자 지정 숫자 형식 문자열은 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](standard-numeric.md)</ept>이 아닌 모든 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings are supported by some overloads of the <ph id="ph1">`ToString`</ph> method of all numeric types.</source>
          <target state="translated">사용자 지정 숫자 서식 문자열은 모든 숫자 형식의 <ph id="ph1">`ToString`</ph> 메서드를 오버로드하여 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, you can supply a numeric format string to the <bpt id="p1">[</bpt>ToString(String)<ept id="p1">](xref:System.Int32.ToString(System.String))</ept> and <bpt id="p2">[</bpt>ToString(String, IFormatProvider)<ept id="p2">](xref:System.Int32.ToString(System.String,System.IFormatProvider))</ept> methods of the <bpt id="p3">[</bpt>Int32<ept id="p3">](xref:System.Int32)</ept> type.</source>
          <target state="translated">예를 들어 <bpt id="p3">[</bpt>Int32<ept id="p3">](xref:System.Int32)</ept> 형식의 <bpt id="p1">[</bpt>ToString(String)<ept id="p1">](xref:System.Int32.ToString(System.String))</ept> 및 <bpt id="p2">[</bpt>ToString(String, IFormatProvider)<ept id="p2">](xref:System.Int32.ToString(System.String,System.IFormatProvider))</ept> 메서드에 숫자 형식 문자열을 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings are also supported by the .NET Framework <bpt id="p1">[</bpt>composite formatting<ept id="p1">](composite-format.md)</ept> feature, which is used by some <ph id="ph1">`Write`</ph> and <ph id="ph2">`WriteLine`</ph> methods of the <bpt id="p2">[</bpt>Console<ept id="p2">](xref:System.Console)</ept> and <bpt id="p3">[</bpt>StreamWriter<ept id="p3">](xref:System.IO.StreamWriter)</ept> classes, the <bpt id="p4">[</bpt>String.Format<ept id="p4">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> method, and the <bpt id="p5">[</bpt>StringBuilder.AppendFormat<ept id="p5">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept> method.</source>
          <target state="translated"><bpt id="p2">[</bpt>Console<ept id="p2">](xref:System.Console)</ept> 및 <bpt id="p3">[</bpt>StreamWriter<ept id="p3">](xref:System.IO.StreamWriter)</ept> 클래스의 일부 <ph id="ph1">`Write`</ph> 및 <ph id="ph2">`WriteLine`</ph> 메서드, <bpt id="p4">[</bpt>String.Format<ept id="p4">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> 메서드, <bpt id="p5">[</bpt>StringBuilder.AppendFormat<ept id="p5">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept> 메서드에서 사용되는 .NET Framework <bpt id="p1">[</bpt>복합 형식 지정<ept id="p1">](composite-format.md)</ept> 기능에서도 사용자 지정 숫자 형식 문자열을 지원합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following table describes the custom numeric format specifiers and displays sample output produced by each format specifier.</source>
          <target state="translated">다음 표에서는 사용자 지정 숫자 서식 지정자 및 각 서식 지정자로 생성되는 샘플 출력을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Notes<ept id="p1">](#notes)</ept> section for additional information about using custom numeric format strings, and the <bpt id="p2">[</bpt>Example<ept id="p2">](#example)</ept> section for a comprehensive illustration of their use.</source>
          <target state="translated">사용자 지정 숫자 형식 문자열을 사용하는 방법에 대한 추가 정보는 <bpt id="p1">[</bpt>참고<ept id="p1">](#notes)</ept> 섹션을 참조하고, 이러한 사용을 자세히 보여 주는 예제는 <bpt id="p2">[</bpt>예제<ept id="p2">](#example)</ept> 섹션을 참조하세요.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Format specifier</source>
          <target state="translated">형식 지정자</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">이름</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>"0"</source>
          <target state="translated">"0"</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Zero placeholder</source>
          <target state="translated">0 자리 표시자</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Replaces the zero with the corresponding digit if one is present; otherwise, zero appears in the result string.</source>
          <target state="translated">해당 숫자가 있을 경우 0을 해당 숫자로 바꾸고, 그렇지 않으면 결과 문자열에 0을 표시합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`1234.5678 ("00000") -&gt; 01235`</ph>; <ph id="ph2">`0.45678 ("0.00", en-US) -&gt; 0.46`</ph>; <ph id="ph3">`0.45678 ("0.00", fr-FR) -&gt; 0,46`</ph></source>
          <target state="translated"><ph id="ph1">`1234.5678 ("00000") -&gt; 01235`</ph>; <ph id="ph2">`0.45678 ("0.00", en-US) -&gt; 0.46`</ph>; <ph id="ph3">`0.45678 ("0.00", fr-FR) -&gt; 0,46`</ph></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>"#"</source>
          <target state="translated">"#"</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Digit placeholder</source>
          <target state="translated">10진수 자리 표시자</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Replaces the "#" symbol with the corresponding digit if one is present; otherwise, no digit appears in the result string.</source>
          <target state="translated">해당 숫자가 있을 경우 "#" 기호를 해당 숫자로 바꾸고, 그렇지 않으면 결과 문자열에 숫자를 표시하지 않습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Note that no digit appears in the result string if the corresponding digit in the input string is a non-significant 0.</source>
          <target state="translated">입력 문자열의 해당 숫자가 의미 없는 0인 경우 결과 문자열에 숫자를 표시하지 않습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, 0003 ("####") -&gt; 3.</source>
          <target state="translated">예를 들어 0003 ("####") -&gt; 3입니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`1234.5678 ("#####") -&gt; 1235`</ph>; <ph id="ph2">`0.45678 ("#.##", en-US) -&gt; .46`</ph>; <ph id="ph3">`0.45678 ("#.##", fr-FR) -&gt; ,46`</ph></source>
          <target state="translated"><ph id="ph1">`1234.5678 ("#####") -&gt; 1235`</ph>; <ph id="ph2">`0.45678 ("#.##", en-US) -&gt; .46`</ph>; <ph id="ph3">`0.45678 ("#.##", fr-FR) -&gt; ,46`</ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>"."</source>
          <target state="translated">"."</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Decimal point</source>
          <target state="translated">소수점</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Determines the location of the decimal separator in the result string.</source>
          <target state="translated">결과 문자열에서 소수 구분 기호의 위치를 결정합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`0.45678 ("0.00", en-US) -&gt; 0.46`</ph>; <ph id="ph2">`0.45678 ("0.00", fr-FR) -&gt; 0,46`</ph></source>
          <target state="translated"><ph id="ph1">`0.45678 ("0.00", en-US) -&gt; 0.46`</ph>; <ph id="ph2">`0.45678 ("0.00", fr-FR) -&gt; 0,46`</ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>","</source>
          <target state="translated">","</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Group separator and number scaling</source>
          <target state="translated">그룹 구분 기호 및 숫자 배율</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Serves as both a group separator and a number scaling specifier.</source>
          <target state="translated">그룹 구분 기호 지정자와 숫자 크기 조정 지정자로 모두 사용됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>As a group separator, it inserts a localized group separator character between each group.</source>
          <target state="translated">그룹 구분 기호로 사용될 경우 각 그룹 사이에 지역화된 그룹 구분 기호 문자를 삽입합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>As a number scaling specifier, it divides a number by 1000 for each comma specified.</source>
          <target state="translated">숫자 크기 조정 지정자로 사용될 경우 숫자를 쉼표 단위로 끊어서 1000으로 나눕니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Group separator specifier: <ph id="ph1">`2147483647 ("##,#", en-US) -&gt; 2,147,483,647`</ph>; <ph id="ph2">`2147483647 ("##,#", es-ES) -&gt; 2.147.483.647`</ph>.</source>
          <target state="translated">그룹 구분 기호 지정자: <ph id="ph1">`2147483647 ("##,#", en-US) -&gt; 2,147,483,647`</ph>; <ph id="ph2">`2147483647 ("##,#", es-ES) -&gt; 2.147.483.647`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Scaling specifier: <ph id="ph1">`2147483647 ("#,#,,", en-US) -&gt; 2,147`</ph>; <ph id="ph2">`2147483647 ("#,#,,", es-ES) -&gt; 2.147`</ph></source>
          <target state="translated">크기 조정 지정자: <ph id="ph1">`2147483647 ("#,#,,", en-US) -&gt; 2,147`</ph>; <ph id="ph2">`2147483647 ("#,#,,", es-ES) -&gt; 2.147`</ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>"%"</source>
          <target state="translated">"%"</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Percentage placeholder</source>
          <target state="translated">백분율 자리 표시자</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Multiplies a number by 100 and inserts a localized percentage symbol in the result string.</source>
          <target state="translated">숫자에 100을 곱하고 결과 문자열에 지역화된 백분율 기호를 삽입합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`0.3697 ("%#0.00", en-US) -&gt; %36.97`</ph>; <ph id="ph2">`0.3697 ("%#0.00", el-GR) -&gt; %36,97`</ph>; <ph id="ph3">`0.3697 ("##.0 %", en-US) -&gt; 37.0 %`</ph>; <ph id="ph4">`0.3697 ("##.0 %", el-GR) -&gt; 37,0 %`</ph></source>
          <target state="translated"><ph id="ph1">`0.3697 ("%#0.00", en-US) -&gt; %36.97`</ph>; <ph id="ph2">`0.3697 ("%#0.00", el-GR) -&gt; %36,97`</ph>; <ph id="ph3">`0.3697 ("##.0 %", en-US) -&gt; 37.0 %`</ph>; <ph id="ph4">`0.3697 ("##.0 %", el-GR) -&gt; 37,0 %`</ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>"‰"</source>
          <target state="translated">"‰"</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Per mille placeholder</source>
          <target state="translated">천분율 자리 표시자</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Multiplies a number by 1000 and inserts a localized per mille symbol in the result string.</source>
          <target state="translated">숫자에 1000을 곱하고 결과 문자열에 지역화된 천분율 기호를 삽입합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`0.03697 ("#0.00‰", en-US) -&gt; 36.97‰`</ph>; <ph id="ph2">`0.03697 ("#0.00‰", ru-RU) -&gt; 36,97‰`</ph></source>
          <target state="translated"><ph id="ph1">`0.03697 ("#0.00‰", en-US) -&gt; 36.97‰`</ph>; <ph id="ph2">`0.03697 ("#0.00‰", ru-RU) -&gt; 36,97‰`</ph></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>"E0", "E+0", "E-0", "e0", "e+0", "e-0"</source>
          <target state="translated">"E0", "E+0", "E-0", "e0", "e+0", "e-0"</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Exponential notation</source>
          <target state="translated">지수 표기법</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If followed by at least one 0 (zero), formats the result using exponential notation.</source>
          <target state="translated">적어도 하나의 0이 뒤에 오면 지수 표기법을 사용하여 결과의 서식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The case of "E" or "e" indicates the case of the exponent symbol in the result string.</source>
          <target state="translated">"E" 또는 "e" 문자는 결과 문자열에 표시되는 지수 기호의 대/소문자를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The number of zeros following the "E" or "e" character determines the minimum number of digits in the exponent.</source>
          <target state="translated">"E" 또는 "e" 문자 뒤에 오는 0의 수에 따라 지수의 최소 자릿수가 결정됩니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A plus sign (+) indicates that a sign character always precedes the exponent.</source>
          <target state="translated">더하기 기호(+)는 기호 문자가 항상 지수 앞에 온다는 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A minus sign (-) indicates that a sign character precedes only negative exponents.</source>
          <target state="translated">빼기 기호(-)는 기호 문자가 음의 지수 앞에만 온다는 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`987654 ("#0.0e0") -&gt; 98.8e4`</ph>; <ph id="ph2">`1503.92311 ("0.0##e+00") -&gt; 1.504e+03`</ph>; <ph id="ph3">`1.8901385E-16 ("0.0e+00") -&gt; 1.9e-16`</ph></source>
          <target state="translated"><ph id="ph1">`987654 ("#0.0e0") -&gt; 98.8e4`</ph>; <ph id="ph2">`1503.92311 ("0.0##e+00") -&gt; 1.504e+03`</ph>; <ph id="ph3">`1.8901385E-16 ("0.0e+00") -&gt; 1.9e-16`</ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Escape character</source>
          <target state="translated">이스케이프 문자</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Causes the next character to be interpreted as a literal rather than as a custom format specifier.</source>
          <target state="translated">뒤에 오는 문자가 사용자 지정 형식 지정자가 아닌 리터럴로 해석되도록 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>'string', "string"</source>
          <target state="translated">'string', "string"</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Literal string delimiter</source>
          <target state="translated">리터럴 문자열 구분 기호</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Indicates that the enclosed characters should be copied to the result string unchanged.</source>
          <target state="translated">괄호로 묶인 문자가 변경되지 않은 상태로 결과 문자열에 복사되어야 함을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>;</source>
          <target state="translated">;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Section separator</source>
          <target state="translated">섹션 구분 기호</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Defines sections with separate format strings for positive, negative, and zero numbers.</source>
          <target state="translated">양수, 음수 및 0에 따라 별도의 서식 문자열을 사용하여 섹션을 정의합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`12.345 ("#0.0#;(#0.0#);-\0-") -&gt; 12.35`</ph>; <ph id="ph2">`0 ("#0.0#;(#0.0#);-\0-") -&gt; -0-`</ph>; <ph id="ph3">`-12.345 ("#0.0#;(#0.0#);-\0-") -&gt; (12.35)`</ph>; <ph id="ph4">`12.345 ("#0.0#;(#0.0#)") -&gt; 12.35`</ph>; <ph id="ph5">`0 ("#0.0#;(#0.0#)") -&gt; 0.0 ; -12.345 ("#0.0#;(#0.0#)") -&gt; (12.35)`</ph></source>
          <target state="translated"><ph id="ph1">`12.345 ("#0.0#;(#0.0#);-\0-") -&gt; 12.35`</ph>; <ph id="ph2">`0 ("#0.0#;(#0.0#);-\0-") -&gt; -0-`</ph>; <ph id="ph3">`-12.345 ("#0.0#;(#0.0#);-\0-") -&gt; (12.35)`</ph>; <ph id="ph4">`12.345 ("#0.0#;(#0.0#)") -&gt; 12.35`</ph>; <ph id="ph5">`0 ("#0.0#;(#0.0#)") -&gt; 0.0 ; -12.345 ("#0.0#;(#0.0#)") -&gt; (12.35)`</ph></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">기타</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>All other characters</source>
          <target state="translated">다른 모든 문자</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The character is copied to the result string unchanged.</source>
          <target state="translated">문자가 변경되지 않은 상태로 결과 문자열에 복사됩니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The following sections provide detailed information about each of the custom numeric format specifiers.</source>
          <target state="translated">다음 단원에서는 각 사용자 지정 숫자 서식 지정자에 대해 자세히 설명합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The "0" Custom Specifier</source>
          <target state="translated">"0" 사용자 지정 지정자</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The "0" custom format specifier serves as a zero-placeholder symbol.</source>
          <target state="translated">"0" 사용자 지정 지정자는 0 자리 표시자 기호로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If the value that is being formatted has a digit in the position where the zero appears in the format string, that digit is copied to the result string; otherwise, a zero appears in the result string.</source>
          <target state="translated">서식을 지정할 값이 서식 문자열의 0이 표시된 위치에 숫자를 가지고 있으면 해당 숫자가 결과 문자열로 복사되고, 그렇지 않으면 결과 문자열에 0이 표시됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The position of the leftmost zero before the decimal point and the rightmost zero after the decimal point determines the range of digits that are always present in the result string.</source>
          <target state="translated">소수점 앞 가장 왼쪽의 0과 소수점 뒤 가장 오른쪽 0의 위치는 결과 문자열에 항상 표시될 자릿수의 범위를 결정합니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The "00" specifier causes the value to be rounded to the nearest digit preceding the decimal, where rounding away from zero is always used.</source>
          <target state="translated">"00" 지정자를 사용하면 해당 값이 소수점 뒤 첫째 자리에서 반올림되며 항상 0 이상의 정수 값으로 표시됩니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, formatting 34.5 with "00" would result in the value 35.</source>
          <target state="translated">예를 들어, 34.5의 서식을 "00"으로 지정하면 결과는 35가 됩니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The following example displays several values that are formatted by using custom format strings that include zero placeholders.</source>
          <target state="translated">다음 예제에서는 0 자리 표시자가 포함된 사용자 지정 서식 문자열을 사용하여 여러 가지 값을 표시합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The "#" Custom Specifier</source>
          <target state="translated">"#" 사용자 지정 지정자</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The "#" custom format specifier serves as a digit-placeholder symbol.</source>
          <target state="translated">"#" 사용자 지정 지정자는 숫자 표시자 기호로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If the value that is being formatted has a digit in the position where the "#" symbol appears in the format string, that digit is copied to the result string.</source>
          <target state="translated">서식을 지정할 값이 서식 문자열의 "#" 기호가 표시된 위치에 숫자를 가지고 있으면 해당 숫자가 결과 문자열로 복사되고,</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Otherwise, nothing is stored in that position in the result string.</source>
          <target state="translated">그렇지 않으면 결과 문자열의 해당 위치에 아무 것도 저장되지 않습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Note that this specifier never displays a zero that is not a significant digit, even if zero is the only digit in the string.</source>
          <target state="translated">0이 유효 자릿수가 아니면 이 지정자는 문자열에서 0이 유일한 숫자라 할지라도 0을 표시하지 않습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>It will display zero only if it is a significant digit in the number that is being displayed.</source>
          <target state="translated">표시되는 숫자에서 0이 유효 자릿수이면 이 지정자는 0을 표시합니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The "##" format string causes the value to be rounded to the nearest digit preceding the decimal, where rounding away from zero is always used.</source>
          <target state="translated">"##" 서식 문자열을 사용하면 해당 값이 소수점 뒤 첫째 자리에서 반올림되며 항상 0 이상의 정수로 표시됩니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For example, formatting 34.5 with "##" would result in the value 35.</source>
          <target state="translated">예를 들어, 34.5의 서식을 "##"으로 지정하면 결과는 35가 됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The following example displays several values that are formatted by using custom format strings that include digit placeholders.</source>
          <target state="translated">다음 예제에서는 숫자 자리 표시자가 포함된 사용자 지정 서식 문자열을 사용하여 여러 가지 값을 표시합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To return a result string in which absent digits or leading zeroes are replaced by spaces, use the <bpt id="p1">[</bpt>composite formatting<ept id="p1">](composite-format.md)</ept> feature and specify a field width, as the following example illustrates.</source>
          <target state="translated">빈 숫자나 선행 0이 공백으로 대체되는 결과 문자열을 반환하려면 다음 예제와 같이 <bpt id="p1">[</bpt>복합 형식 지정<ept id="p1">](composite-format.md)</ept> 기능을 사용하고 필드 너비를 지정합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The "." Custom Specifier</source>
          <target state="translated">"." 사용자 지정 지정자</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The "." custom format specifier inserts a localized decimal separator into the result string.</source>
          <target state="translated">"." 사용자 지정 서식 지정자는 결과 문자열에 지역화된 소수 구분 기호를 삽입합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The first period in the format string determines the location of the decimal separator in the formatted value; any additional periods are ignored.</source>
          <target state="translated">서식 문자열의 첫째 마침표 문자는 서식이 지정될 값에서 소수 구분 기호의 위치를 결정하며, 다른 마침표 문자는 무시됩니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The character that is used as the decimal separator in the result string is not always a period; it is determined by the <bpt id="p1">[</bpt>NumberDecimalSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator)</ept> property of the <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> object that controls formatting.</source>
          <target state="translated">결과 문자열에서 소수 구분 기호로 사용되는 문자가 항상 마침표는 아니며 형식 지정을 제어하는 <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> 개체의 <bpt id="p1">[</bpt>NumberDecimalSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator)</ept> 속성에서 결정됩니다.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The following example uses the "." format specifier to define the location of the decimal point in several result strings.</source>
          <target state="translated">다음 예제에서는 "." 서식 지정자를 사용하여 여러 결과 문자열에서 소수점의 위치를 정의합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The "," Custom Specifier</source>
          <target state="translated">"," 사용자 지정 지정자</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The "," character serves as both a group separator and a number scaling specifier.</source>
          <target state="translated">"," 문자는 그룹 구분 기호 지정자와 숫자 크기 조정 지정자로 사용됩니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Group separator: If one or more commas are specified between two digit placeholders (0 or #) that format the integral digits of a number, a group separator character is inserted between each number group in the integral part of the output.</source>
          <target state="translated">그룹 구분 기호 지정자: 두 개의 10진수 자리 표시자(0 또는 #) 사이에 정수 계열 자릿수의 서식을 지정하는 하나 이상의 쉼표 문자가 지정된 경우 정수 계열 출력 부분의 각 숫자 그룹 사이에 그룹 구분 문자가 삽입됩니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>NumberGroupSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator)</ept> and <bpt id="p2">[</bpt>NumberGroupSizes<ept id="p2">](xref:System.Globalization.NumberFormatInfo.NumberGroupSizes)</ept> properties of the current <bpt id="p3">[</bpt>NumberFormatInfo<ept id="p3">](xref:System.Globalization.NumberFormatInfo)</ept> object determine the character used as the number group separator and the size of each number group.</source>
          <target state="translated">현재 <bpt id="p3">[</bpt>NumberFormatInfo<ept id="p3">](xref:System.Globalization.NumberFormatInfo)</ept> 개체의 <bpt id="p1">[</bpt>NumberGroupSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator)</ept> 및 <bpt id="p2">[</bpt>NumberGroupSizes<ept id="p2">](xref:System.Globalization.NumberFormatInfo.NumberGroupSizes)</ept> 속성은 숫자 그룹 구분 기호로 사용되는 문자와 각 숫자 그룹의 크기를 결정합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For example, if the string "#,#" and the invariant culture are used to format the number 1000, the output is "1,000".</source>
          <target state="translated">예를 들어, 문자열 "#,#"과 고정 문화권을 사용하여 숫자 1000의 서식을 지정할 경우 "1,000"이 출력됩니다.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Number scaling specifier: If one or more commas are specified immediately to the left of the explicit or implicit decimal point, the number to be formatted is divided by 1000 for each comma.</source>
          <target state="translated">숫자 크기 조정 지정자: 명시적 또는 암시적 소수점의 바로 왼쪽에 하나 이상의 쉼표가 지정된 경우 서식이 지정될 숫자는 쉼표 단위로 끊어서 1000으로 나뉩니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For example, if the string "0,," is used to format the number 100 million, the output is "100".</source>
          <target state="translated">예를 들어, 문자열 "0,,"을 사용하여 숫자 100000000의 서식을 지정할 경우 "100"이 출력됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>You can use group separator and number scaling specifiers in the same format string.</source>
          <target state="translated">동일한 서식 문자열에 그룹 구분 기호와 숫자 크기 조정 지정자를 함께 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For example, if the string "#,0,," and the invariant culture are used to format the number one billion, the output is "1,000".</source>
          <target state="translated">예를 들어, 문자열 "#,0,,"과 고정 문화권을 사용하여 숫자 1000000000의 서식을 지정할 경우 "1,000"이 출력됩니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of the comma as a group separator.</source>
          <target state="translated">다음 예제에서는 쉼표를 그룹 구분 기호로 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of the comma as a specifier for number scaling.</source>
          <target state="translated">다음 예제에서는 쉼표를 숫자 크기 조정 지정자로 사용하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The "%" Custom Specifier</source>
          <target state="translated">"%" 사용자 지정 지정자</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A percent sign (%) in a format string causes a number to be multiplied by 100 before it is formatted.</source>
          <target state="translated">서식 문자열에 백분율 기호(%)가 있으면 서식이 지정되기 전에 해당 수에 100이 곱해집니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The localized percent symbol is inserted in the number at the location where the % appears in the format string.</source>
          <target state="translated">서식 문자열에서 %가 표시된 위치에 있는 숫자에는 지역화된 백분율 기호가 삽입됩니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The percent character used is defined by the <bpt id="p1">[</bpt>PercentSymbol<ept id="p1">](xref:System.Globalization.NumberFormatInfo.PercentSymbol)</ept> property of the current <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> object.</source>
          <target state="translated">사용되는 퍼센트 문자는 현재 <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> 개체의 <bpt id="p1">[</bpt>PercentSymbol<ept id="p1">](xref:System.Globalization.NumberFormatInfo.PercentSymbol)</ept> 속성에 의해 정의됩니다.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The following example defines several custom format strings that include the "%" custom specifier.</source>
          <target state="translated">다음 예제에서는 "%" 사용자 지정 지정자가 포함된 여러 가지 사용자 지정 서식 문자열을 정의합니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The "‰" Custom Specifier</source>
          <target state="translated">"‰" 사용자 지정 지정자</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A per mille character (‰ or \u2030) in a format string causes a number to be multiplied by 1000 before it is formatted.</source>
          <target state="translated">서식 문자열에 천분율 문자(‰ 또는 \u2030)가 있으면 서식이 지정되기 전에 해당 수에 1000이 곱해집니다.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The appropriate per mille symbol is inserted in the returned string at the location where the ‰ symbol appears in the format string.</source>
          <target state="translated">서식 문자열에서 ‰가 표시된 위치에 있는 반환된 문자열에는 적절한 천분율 기호가 삽입됩니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The per mille character used is defined by the <bpt id="p1">[</bpt>NumberFormatInfo.PerMilleSymbol<ept id="p1">](xref:System.Globalization.NumberFormatInfo.PerMilleSymbol)</ept> property of the object that provides culture-specific formatting information.</source>
          <target state="translated">사용되는 1000분의 1 문자는 문화권별 형식 지정 정보를 제공하는 개체의 <bpt id="p1">[</bpt>NumberFormatInfo.PerMilleSymbol<ept id="p1">](xref:System.Globalization.NumberFormatInfo.PerMilleSymbol)</ept> 속성에서 정의됩니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The following example defines a custom format string that includes the "‰" custom specifier.</source>
          <target state="translated">다음 예제에서는 "‰" 사용자 지정 지정자가 포함된 사용자 지정 서식 문자열을 정의합니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The "E" and "e" Custom Specifiers</source>
          <target state="translated">"E" 및 "e" 사용자 지정 지정자</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If any of the strings "E", "E+", "E-", "e", "e+", or "e-" are present in the format string and are followed immediately by at least one zero, the number is formatted by using scientific notation with an "E" or "e" inserted between the number and the exponent.</source>
          <target state="translated">서식 문자열에 "E", "E+", "E-", "e", "e+" 또는 "e-" 문자열이 표시되고 바로 뒤에 적어도 하나의 0이 오면, 해당 수와 지수 사이에 "E" 또는 "e"가 삽입되는 과학적 표기법으로 서식이 지정됩니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The number of zeros following the scientific notation indicator determines the minimum number of digits to output for the exponent.</source>
          <target state="translated">과학적 표기법 표시기 뒤에 오는 0의 개수는 이 숫자의 지수로 나타낼 최소 자릿수를 결정합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The "E+" and "e+" formats indicate that a plus sign or minus sign should always precede the exponent.</source>
          <target state="translated">"E+" 및 "e+" 서식은 더하기 기호나 빼기 기호가 항상 지수 앞에 와야 한다는 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The "E", "E-", "e", or "e-" formats indicate that a sign character should precede only negative exponents.</source>
          <target state="translated">"E", "E-", "e" 또는 "e-" 서식은 기호 문자가 음의 지수 앞에만 와야 한다는 것을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The following example formats several numeric values using the specifiers for scientific notation.</source>
          <target state="translated">다음 예제에서는 과학적 표기법 지정자를 사용하여 여러 가지 숫자 값에 서식을 지정합니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The "<ph id="ph1">\"</ph> Escape Character</source>
          <target state="translated">"<ph id="ph1">\"</ph> 이스케이프 문자</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The "#", "0", ".", ",", "%", and "‰" symbols in a format string are interpreted as format specifiers rather than as literal characters.</source>
          <target state="translated">서식 문자열의 "#", "0", ".", ",", "%" 및 "‰" 기호는 리터럴 문자가 아닌 서식 지정자로 해석됩니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Depending on their position in a custom format string, the uppercase and lowercase "E" as well as the + and - symbols may also be interpreted as format specifiers.</source>
          <target state="translated">사용자 지정 서식 문자열에서 이러한 문자가 있는 위치에 따라 대문자 및 소문자 "E"와 + 및 - 기호도 서식 지정자로 해석될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>To prevent a character from being interpreted as a format specifier, you can precede it with a backslash, which is the escape character.</source>
          <target state="translated">문자가 서식 지정자로 해석되지 않도록 하려면 해당 문자 앞에 이스케이프 문자인 백슬래시를 삽입하면 됩니다.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The escape character signifies that the following character is a character literal that should be included in the result string unchanged.</source>
          <target state="translated">이스케이프 문자는 뒤에 오는 문자가 변경되지 않은 상태로 결과 문자열에 포함되어야 하는 문자 리터럴임을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>To include a backslash in a result string, you must escape it with another backslash (<ph id="ph1">\\</ph>).</source>
          <target state="translated">결과 문자열에 백슬래시를 포함하려면 <ph id="ph1">\\</ph>처럼 두 개의 백슬래시를 연속해서 입력해야 합니다.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Some compilers, such as the C# compiler, may also interpret a single backslash character as an escape character.</source>
          <target state="translated">C# 컴파일러 같은 일부 컴파일러에서는 하나의 백슬래시 문자가 이스케이프 문자로 해석될 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>To ensure that a string is interpreted correctly when formatting, you can use the verbatim string literal character (the <ph id="ph1">@</ph> character) before the string in C#, or add another backslash character before each backslash.</source>
          <target state="translated">형식을 지정할 때 문자열이 올바로 해석되도록 하려면 해당 문자열 앞에 축자 문자열 리터럴 문자(<ph id="ph1">@</ph> 문자)를 사용하거나(C#의 경우) 각 백슬래시 앞에 또 다른 백슬래시 문자를 추가하면 됩니다.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The following C# example illustrates both approaches.</source>
          <target state="translated">다음 C# 예제에서는 이 두 가지 방법을 모두 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The following example uses the escape character to prevent the formatting operation from interpreting the "#", "0", and "<ph id="ph1">\"</ph> characters as either escape characters or format specifiers.</source>
          <target state="translated">다음 예제에서는 이스케이프 문자를 사용하여 형식 지정 작업에서 "#", "0" 및 "<ph id="ph1">\"</ph> 문자가 이스케이프 문자나 형식 지정자로 해석되지 않도록 합니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The example uses an additional backslash to ensure that a backslash is interpreted as a literal character.</source>
          <target state="translated">예제에서는 추가 백슬래시를 사용하여 백슬래시가 리터럴 문자로 해석되도록 합니다.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The ";" Section Separator</source>
          <target state="translated">";" 섹션 구분 기호</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The semicolon (;) is a conditional format specifier that applies different formatting to a number depending on whether its value is positive, negative, or zero.</source>
          <target state="translated">세미콜론(;)은 해당 값이 양수인지 여부에 따라 서로 다른 서식을 숫자에 적용하는 조건부 서식 지정자입니다.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>To produce this behavior, a custom format string can contain up to three sections separated by semicolons.</source>
          <target state="translated">이렇게 하려면 사용자 지정 서식 문자열에 세미콜론으로 구분된 최대 세 개의 섹션이 포함되어야 합니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>These sections are described in the following table.</source>
          <target state="translated">다음 표에서는 이러한 섹션에 대해 설명합니다.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Number of sections</source>
          <target state="translated">섹션 수</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>One section</source>
          <target state="translated">한 섹션</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The format string applies to all values.</source>
          <target state="translated">형식 문자열이 모든 값에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Two sections</source>
          <target state="translated">두 섹션</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The first section applies to positive values and zeros, and the second section applies to negative values.</source>
          <target state="translated">첫째 섹션은 양수 값과 0에 적용되고, 둘째 섹션은 음수 값에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If the number to be formatted is negative, but becomes zero after rounding according to the format in the second section, the resulting zero is formatted according to the first section.</source>
          <target state="translated">서식을 지정할 수가 음수였는데 둘째 섹션의 서식에 따라 반올림한 후에 0이 된 경우, 결과값 0은 첫째 섹션에 따라 서식이 지정됩니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Three sections</source>
          <target state="translated">세 섹션</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The first section applies to positive values, the second section applies to negative values, and the third section applies to zeros.</source>
          <target state="translated">첫째 섹션은 양수 값에 적용되고, 둘째 섹션은 음수 값에 적용되며, 셋째 섹션은 0에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The second section can be left empty (by having nothing between the semicolons), in which case the first section applies to all nonzero values.</source>
          <target state="translated">세미콜론 사이에 아무 것도 없어서 둘째 섹션이 비어 있는 경우에는 첫째 섹션을 0이 아닌 모든 값에 적용합니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If the number to be formatted is nonzero, but becomes zero after rounding according to the format in the first or second section, the resulting zero is formatted according to the third section.</source>
          <target state="translated">서식을 지정할 수가 0이 아니었는데 첫째 또는 둘째 섹션의 서식에 따라 반올림한 후에 0이 된 경우, 결과값 0은 셋째 섹션에 따라 서식이 지정됩니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Section separators ignore any preexisting formatting associated with a number when the final value is formatted.</source>
          <target state="translated">섹션 구분 기호는 마지막 값의 서식을 지정할 때 숫자와 연관된 기존 서식을 무시합니다.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>For example, negative values are always displayed without a minus sign when section separators are used.</source>
          <target state="translated">예를 들어, 섹션 구분 기호가 사용되면 음수 값은 항상 빼기 기호 없이 표시됩니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>If you want the final formatted value to have a minus sign, you should explicitly include the minus sign as part of the custom format specifier.</source>
          <target state="translated">마지막에 서식을 지정한 값에 빼기 기호를 붙이려면 빼기 기호를 사용자 지정 서식 지정자의 일부로 명시적으로 포함시켜야 합니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The following example uses the ";" format specifier to format positive, negative, and zero numbers differently.</source>
          <target state="translated">다음 예제에서는 ";" 서식 지정자를 사용하여 양수, 음수 및 0의 서식을 각각 다르게 지정합니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">노트</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Floating-Point Infinities and NaN</source>
          <target state="translated">부동 소수점 무한대 및 NaN</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Regardless of the format string, if the value of a <bpt id="p1">[</bpt>Single<ept id="p1">](xref:System.Single)</ept> or <bpt id="p2">[</bpt>Double<ept id="p2">](xref:System.Double)</ept> floating-point type is positive infinity, negative infinity, or not a number (NaN), the formatted string is the value of the respective <bpt id="p3">[</bpt>PositiveInfinitySymbol<ept id="p3">](xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol)</ept>, <bpt id="p4">[</bpt>NegativeInfinitySymbol<ept id="p4">](xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol)</ept>, or <bpt id="p5">[</bpt>NaNSymbol<ept id="p5">](xref:System.Globalization.NumberFormatInfo.NaNSymbol)</ept> property that is specified by the currently applicable <bpt id="p6">[</bpt>NumberFormatInfo<ept id="p6">](xref:System.Globalization.NumberFormatInfo)</ept> object.</source>
          <target state="translated">형식 문자열에 관계없이 <bpt id="p1">[</bpt>Single<ept id="p1">](xref:System.Single)</ept> 또는 <bpt id="p2">[</bpt>Double<ept id="p2">](xref:System.Double)</ept> 부동 소수점 형식의 값이 양의 무한대, 음의 무한대 또는 NaN(Not a Number)이면 형식이 지정된 문자열은 각각 현재 적용 가능한 <bpt id="p6">[</bpt>NumberFormatInfo<ept id="p6">](xref:System.Globalization.NumberFormatInfo)</ept> 개체에서 지정하는 해당 <bpt id="p3">[</bpt>PositiveInfinitySymbol<ept id="p3">](xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol)</ept>, <bpt id="p4">[</bpt>NegativeInfinitySymbol<ept id="p4">](xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol)</ept> 또는 <bpt id="p5">[</bpt>NaNSymbol<ept id="p5">](xref:System.Globalization.NumberFormatInfo.NaNSymbol)</ept> 속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Rounding and Fixed-Point Format Strings</source>
          <target state="translated">반올림 및 고정 소수점 서식 문자열</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>For fixed-point format strings (that is, format strings that do not contain scientific notation format characters), numbers are rounded to as many decimal places as there are digit placeholders to the right of the decimal point.</source>
          <target state="translated">고정 소수점 서식 문자열, 즉 과학적 표기법 서식 문자가 들어 있지 않은 서식 문자열의 경우 소수점 오른쪽에 있는 10진수 자리 표시자와 같은 개수의 소수 자릿수만큼 숫자가 반올림됩니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If the format string does not contain a decimal point, the number is rounded to the nearest integer.</source>
          <target state="translated">서식 문자열에 소수점이 없으면 숫자는 가장 근접한 정수로 반올림됩니다.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>If the number has more digits than there are digit placeholders to the left of the decimal point, the extra digits are copied to the result string immediately before the first digit placeholder.</source>
          <target state="translated">숫자의 자릿수가 소수점 왼쪽의 10진수 자리 표시자보다 많으면, 초과 숫자가 결과 문자열의 첫째 10진수 자리 표시자 바로 앞에 복사됩니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The following example demonstrates two custom numeric format strings.</source>
          <target state="translated">다음 예제에서는 두 개의 사용자 지정 숫자 서식 문자열을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>In both cases, the digit placeholder (#) displays the numeric data, and all other characters are copied to the result string.</source>
          <target state="translated">두 경우 모두, 숫자 자리 표시자(#)는 숫자 데이터를 표시하고 다른 모든 문자는 결과 문자열에 복사됩니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Globalization.NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Globalization.NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept></target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting types<ept id="p1">](formatting-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>형식 서식 지정<ept id="p1">](formatting-types.md)</ept></target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard numeric format strings<ept id="p1">](standard-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>표준 숫자 서식 문자열<ept id="p1">](standard-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: pad a number with leading zeros<ept id="p1">](pad-number.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 숫자 앞에 0으로 채우기<ept id="p1">](pad-number.md)</ept></target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Composite formatting<ept id="p1">](composite-format.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>복합 서식 지정<ept id="p1">](composite-format.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>