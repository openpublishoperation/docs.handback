<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">926195e48e9653525a502cf9403ae9c205bd0fe3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\define-custom.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8a578b2399cfe91b7acaa018b32cc2f442e7ad7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5bdd8d227d37de24dd1d9e937ff8bb1cf15c0ee2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: define and use custom numeric format providers</source>
          <target state="translated">방법: 사용자 지정 숫자 형식 공급자 정의 및 사용</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to define and use custom numeric format providers</source>
          <target state="translated">사용자 지정 숫자 형식 공급자를 정의 및 사용하는 방법</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>How to: define and use custom numeric format providers</source>
          <target state="translated">방법: 사용자 지정 숫자 형식 공급자 정의 및 사용</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>.NET gives you extensive control over the string representation of numeric values.</source>
          <target state="translated">.NET에서는 숫자 값의 문자열 표현을 광범위하게 제어할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It supports the following features for customizing the format of numeric values:</source>
          <target state="translated">숫자 값의 형식을 사용자 지정하기 위한 다음과 같은 기능을 지원합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Standard numeric format strings, which provide a predefined set of formats for converting numbers to their string representation.</source>
          <target state="translated">숫자를 해당 문자열 표현으로 변환하기 위한 미리 정의된 형식 집합을 제공하는 표준 숫자 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can use them with any numeric formatting method, such as <bpt id="p1">[</bpt>Decimal.ToString(String<ept id="p1">](xref:System.Decimal.ToString(System.String))</ept>, that has a format parameter.</source>
          <target state="translated">format 매개 변수가 있는 숫자 형식 지정 메서드(예: <bpt id="p1">[</bpt>Decimal.ToString(String<ept id="p1">](xref:System.Decimal.ToString(System.String))</ept>)와 함께 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Standard numeric format strings<ept id="p1">](standard-numeric.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>표준 숫자 형식 문자열<ept id="p1">](standard-numeric.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings, which provide a set of symbols that can be combined to define custom numeric format specifiers.</source>
          <target state="translated">함께 결합되어 사용자 지정 숫자 형식 지정자를 정의할 수 있는 기호 집합을 제공하는 사용자 지정 숫자 형식 문자열입니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>They can also be used with any numeric formatting method, such as <bpt id="p1">[</bpt>Decimal.ToString(String<ept id="p1">](xref:System.Decimal.ToString(System.String))</ept>, that has a format parameter.</source>
          <target state="translated">format 매개 변수가 있는 숫자 형식 지정 메서드(예: <bpt id="p1">[</bpt>Decimal.ToString(String<ept id="p1">](xref:System.Decimal.ToString(System.String))</ept>)와 함께 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Custom numeric format strings<ept id="p1">](custom-numeric.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>사용자 지정 숫자 형식 문자열<ept id="p1">](custom-numeric.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Custom <bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> or <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> objects, which define the symbols and format patterns used in displaying the string representations of numeric values.</source>
          <target state="translated">숫자 값의 문자열 표현을 표시하는 데 사용되는 기호 및 형식 패턴을 정의하는 사용자 지정 <bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> 또는 <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use them with any numeric formatting method, such as <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Int32.ToString(System.IFormatProvider))</ept>, that has a <bpt id="p2">*</bpt>provider<ept id="p2">*</ept> parameter.</source>
          <target state="translated"><bpt id="p2">*</bpt>provider<ept id="p2">*</ept> 매개 변수가 있는 숫자 형식 지정 메서드(예: <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Int32.ToString(System.IFormatProvider))</ept>)와 함께 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Typically, the <bpt id="p1">*</bpt>provider<ept id="p1">*</ept> parameter is used to specify culture-specific formatting.</source>
          <target state="translated">일반적으로 <bpt id="p1">*</bpt>provider<ept id="p1">*</ept> 매개 변수는 문화권별 형식 지정에 사용됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In some cases (such as when an application must display a formatted account number, an identification number, or a postal code) these three techniques are inappropriate.</source>
          <target state="translated">응용 프로그램에서 형식이 지정된 계정 번호, ID 번호 또는 우편 번호를 표시해야 하는 경우와 같이 이 세 가지 방법이 부적절한 경우도 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>.NET also enables you to define a formatting object that is neither a <bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> nor a <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> object to determine how a numeric value is formatted.</source>
          <target state="translated">.NET에서는 <bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> 또는 <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> 개체가 아닌 형식 지정 개체를 정의하여 숫자 값의 형식 지정 방법을 결정할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This topic provides the step-by-step instructions for implementing such an object, and provides an example that formats telephone numbers.</source>
          <target state="translated">이 항목에서는 이러한 개체를 구현하기 위한 단계별 지침을 제공하고 전화 번호 형식을 지정하는 예제를 제공합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To define a custom format provider</source>
          <target state="translated">사용자 지정 형식 공급자를 정의하려면</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Define a class that implements the <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> and <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> interfaces.</source>
          <target state="translated"><bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 및 <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> 인터페이스를 구현하는 클래스를 정의합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Implement the <bpt id="p1">[</bpt>IFormatProvider.GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> method.</source>
          <target state="translated"><bpt id="p1">[</bpt>IFormatProvider.GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 메서드를 구현합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> is a callback method that the formatting method (such as the <bpt id="p2">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p2">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> method) invokes to retrieve the object that is actually responsible for performing custom formatting.</source>
          <target state="translated"><bpt id="p1">[</bpt>GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept>은 형식 지정 메서드(예: <bpt id="p2">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p2">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> 메서드)가 실제로 사용자 지정 형식 지정을 수행하는 개체를 검색하기 위해 호출하는 콜백 메서드입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A typical implementation of <bpt id="p1">[</bpt>GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> does the following:</source>
          <target state="translated">일반적인 <bpt id="p1">[</bpt>GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 구현에서는 다음 작업을 수행합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>a.</source>
          <target state="translated">a.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Determines whether the <bpt id="p1">[</bpt>Type<ept id="p1">](xref:System.Type)</ept> object passed as a method parameter represents an <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> interface.</source>
          <target state="translated">메서드 매개 변수로 전달되는 <bpt id="p1">[</bpt>Type<ept id="p1">](xref:System.Type)</ept> 개체가 <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> 인터페이스를 나타내는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>b.</source>
          <target state="translated">b.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the parameter does represent the <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> interface, <bpt id="p2">[</bpt>GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> returns an object that implements the <bpt id="p3">[</bpt>ICustomFormatter<ept id="p3">](xref:System.ICustomFormatter)</ept> interface that is responsible for providing custom formatting.</source>
          <target state="translated">매개 변수가 <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> 인터페이스를 나타내지 않는 경우 <bpt id="p2">[</bpt>GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept>은 사용자 지정 형식 지정을 제공하는 <bpt id="p3">[</bpt>ICustomFormatter<ept id="p3">](xref:System.ICustomFormatter)</ept> 인터페이스를 구현하는 개체를 반환합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Typically, the custom formatting object returns itself.</source>
          <target state="translated">일반적으로 사용자 지정 형식 지정 개체 자체가 반환됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>c.</source>
          <target state="translated">c.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the parameter does not represent the <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> interface, <bpt id="p2">[</bpt>GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">매개 변수가 <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> 인터페이스를 나타내지 않는 경우 <bpt id="p2">[</bpt>GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept>은 <ph id="ph1">`null`</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Implement the <bpt id="p1">[</bpt>ICustomFormatter.Format<ept id="p1">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> method.</source>
          <target state="translated"><bpt id="p1">[</bpt>ICustomFormatter.Format<ept id="p1">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> 메서드를 구현합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This method is called by the <bpt id="p1">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> method and is responsible for returning the string representation of a number.</source>
          <target state="translated">이 메서드는 <bpt id="p1">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> 메서드에서 호출되며 숫자의 문자열 표현을 반환합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Implementing the method typically involves the following:</source>
          <target state="translated">일반적으로 메서드를 구현하는 과정은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>a.</source>
          <target state="translated">a.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Optionally, make sure that the method is legitimately intended to provide formatting services by examining the <bpt id="p1">*</bpt>provider<ept id="p1">*</ept> parameter.</source>
          <target state="translated">필요에 따라 <bpt id="p1">*</bpt>provider<ept id="p1">*</ept> 매개 변수를 검사하여 메서드가 형식 지정 서비스를 제공하기에 적합한지 확인합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For formatting objects that implement both <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> and <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept>, this involves testing the <bpt id="p3">*</bpt>provider<ept id="p3">*</ept> parameter for equality with the current formatting object.</source>
          <target state="translated"><bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 및 <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept>를 둘 다 구현하는 형식 지정 개체의 경우 <bpt id="p3">*</bpt>provider<ept id="p3">*</ept> 매개 변수가 현재 형식 지정 개체와 같은지 테스트해야 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>b.</source>
          <target state="translated">b.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Determine whether the formatting object should support custom format specifiers.</source>
          <target state="translated">형식 지정 개체가 사용자 지정 형식 지정자를 지원해야 하는지 여부를 결정합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>(For example, an "N" format specifier might indicate that a U.S. telephone number should be output in NANP format, and an "I" might indicate output in ITU-T Recommendation E.123 format.) If format specifiers are used, the method should handle the specific format specifier.</source>
          <target state="translated">예를 들어 "N" 형식 지정자는 미국 전화 번호가 NANP 형식으로, "I" 형식 지정자는 ITU-T 권장 E.123 형식으로 출력되어야 함을 나타낼 수 있습니다. 형식 지정자가 사용된 경우 메서드에서 특정 형식 지정자를 처리해야 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>It is passed to the method in the format parameter.</source>
          <target state="translated">지정자는 메서드의 format 매개 변수에 전달됩니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If no specifier is present, the value of the <bpt id="p1">*</bpt>format<ept id="p1">*</ept> parameter is <bpt id="p2">[</bpt>String.Empty<ept id="p2">](xref:System.String#System_String_Empty)</ept>.</source>
          <target state="translated">지정자가 없는 경우 <bpt id="p1">*</bpt>format<ept id="p1">*</ept> 매개 변수 값은 <bpt id="p2">[</bpt>String.Empty<ept id="p2">](xref:System.String#System_String_Empty)</ept>입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>c.</source>
          <target state="translated">c.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Retrieve the numeric value passed to the method as the <bpt id="p1">*</bpt>arg<ept id="p1">*</ept> parameter.</source>
          <target state="translated">메서드에 <bpt id="p1">*</bpt>arg<ept id="p1">*</ept> 매개 변수로 전달되는 숫자 값을 검색합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Perform whatever manipulations are required to convert it to its string representation.</source>
          <target state="translated">문자열 표현으로 변환하는 데 필요한 조작을 수행합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>d.</source>
          <target state="translated">d.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Return the string representation of the <bpt id="p1">*</bpt>arg<ept id="p1">*</ept> parameter.</source>
          <target state="translated"><bpt id="p1">*</bpt>arg<ept id="p1">*</ept> 매개 변수의 문자열 표현을 반환합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To use a custom numeric formatting object</source>
          <target state="translated">사용자 지정 숫자 형식 지정 개체를 사용하려면</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Create a new instance of the custom formatting class.</source>
          <target state="translated">사용자 지정 형식 지정 클래스의 새 인스턴스를 만듭니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Call the <bpt id="p1">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> formatting method, passing it the custom formatting object, the formatting specifier (or <bpt id="p2">[</bpt>String.Empty<ept id="p2">](xref:System.String.Empty)</ept>, if one is not used), and the numeric value to be formatted.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> 형식 지정 메서드를 호출하고 사용자 지정 형식 지정 개체, 형식 지정자(또는 사용하지 않는 경우 <bpt id="p2">[</bpt>String.Empty<ept id="p2">](xref:System.String.Empty)</ept>) 및 형식을 지정할 숫자 값을 전달합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following example defines a custom numeric format provider named <ph id="ph1">`TelephoneFormatter`</ph> that converts a number that represents a U.S. telephone number to its NANP or E.123 format.</source>
          <target state="translated">다음 예제에서는 미국 전화 번호를 나타내는 숫자를 NANP 또는 E.123 형식으로 변환하는 <ph id="ph1">`TelephoneFormatter`</ph>라는 사용자 지정 숫자 형식 공급자를 정의합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The method handles two format specifiers, "N" (which outputs the NANP format) and "I" (which outputs the international E.123 format).</source>
          <target state="translated">메서드는 두 가지 형식 지정자 "N"(NANP 형식 출력)과 "I"(국제 E.123 형식 출력)를 처리합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The custom numeric format provider can be used only with the <bpt id="p1">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> method.</source>
          <target state="translated">사용자 지정 숫자 형식 공급자는 <bpt id="p1">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> 메서드에만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The other overloads of numeric formatting methods (such as <ph id="ph1">`ToString`</ph>) that have a parameter of type <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> all pass the <bpt id="p2">[</bpt>IFormatProvider.GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> implementation a <bpt id="p3">[</bpt>Type<ept id="p3">](xref:System.Type)</ept> object that represents the <bpt id="p4">[</bpt>NumberFormatInfo<ept id="p4">](xref:System.Globalization.NumberFormatInfo)</ept> type.</source>
          <target state="translated"><bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 형식의 매개 변수가 있는 숫자 형식 지정 메서드의 다른 오버로드(예: <ph id="ph1">`ToString`</ph>)는 모두 <bpt id="p4">[</bpt>NumberFormatInfo<ept id="p4">](xref:System.Globalization.NumberFormatInfo)</ept> 형식을 나타내는 <bpt id="p3">[</bpt>Type<ept id="p3">](xref:System.Type)</ept> 개체를 <bpt id="p2">[</bpt>IFormatProvider.GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 구현에 전달합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In return, they expect the method to return a <bpt id="p1">[</bpt>NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept> object.</source>
          <target state="translated">반환 시 메서드가 <bpt id="p1">[</bpt>NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept> 개체를 반환할 것으로 예상합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If it does not, the custom numeric format provider is ignored, and the <bpt id="p1">[</bpt>NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept> object for the current culture is used in its place.</source>
          <target state="translated">반환하지 않을 경우 사용자 지정 숫자 형식 공급자는 무시되고 현재 문화권에 대한 <bpt id="p1">[</bpt>NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept> 개체가 대신 사용됩니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the example, the <ph id="ph1">`TelephoneFormatter.GetFormat`</ph> method handles the possibility that it may be inappropriately passed to a numeric formatting method by examining the method parameter and returning <bpt id="p1">*</bpt>null<ept id="p1">*</ept> if it represents a type other than <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept>.</source>
          <target state="translated">예제에서 <ph id="ph1">`TelephoneFormatter.GetFormat`</ph> 메서드는 메서드 매개 변수를 검사하고 <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> 이외의 다른 형식을 나타내는 경우 <bpt id="p1">*</bpt>null<ept id="p1">*</ept>을 반환하여 숫자 형식 지정 메서드에 부적절하게 전달될 수 있는 가능성을 처리합니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If a custom numeric format provider supports a set of format specifiers, make sure you provide a default behavior if no format specifier is supplied in the format item used in the <bpt id="p1">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> method call.</source>
          <target state="translated">사용자 지정 숫자 형식 공급자가 형식 지정자 집합을 지원하는 경우 <bpt id="p1">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> 메서드 호출에 사용된 형식 항목에 형식 지정자가 제공되지 않은 경우의 기본 동작을 제공해야 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In the example, "N" is the default format specifier.</source>
          <target state="translated">예제에서는 "N"이 기본 형식 지정자입니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This allows for a number to be converted to a formatted telephone number by providing an explicit format specifier.</source>
          <target state="translated">이렇게 하면 명시적 형식 지정자를 제공하여 숫자를 형식이 지정된 전화 번호로 변환할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The following example illustrates such a method call.</source>
          <target state="translated">다음 예제에서는 이러한 메서드 호출을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>But it also allows the conversion to occur if no format specifier is present.</source>
          <target state="translated">그러나 형식 지정자가 없는 경우에도 변환을 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following example illustrates such a method call.</source>
          <target state="translated">다음 예제에서는 이러한 메서드 호출을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If no default format specifier is defined, your implementation of the <bpt id="p1">[</bpt>ICustomFormatter.Format<ept id="p1">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> method should include code such as the following so that .NET can provide formatting that your code does not support.</source>
          <target state="translated">기본 형식 지정자가 정의되어 있지 않으면 .NET이 코드에서 지원하지 않는 형식 지정을 제공할 수 있도록 <bpt id="p1">[</bpt>ICustomFormatter.Format<ept id="p1">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> 메서드 구현에서 다음과 같은 코드를 포함해야 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In the case of this example, the method that implements <bpt id="p1">[</bpt>ICustomFormatter.Format<ept id="p1">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> is intended to serve as a callback method for the <bpt id="p2">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p2">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> method.</source>
          <target state="translated">이 예제의 경우 <bpt id="p1">[</bpt>ICustomFormatter.Format<ept id="p1">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept>을 구현하는 메서드가 <bpt id="p2">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p2">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> 메서드의 콜백 메서드 역할을 합니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Therefore, it examines the <bpt id="p1">*</bpt>formatProvider<ept id="p1">*</ept> parameter to determine whether it contains a reference to the current <ph id="ph1">`TelephoneFormatter`</ph> object.</source>
          <target state="translated">따라서 메서드는 <bpt id="p1">*</bpt>formatProvider<ept id="p1">*</ept> 매개 변수를 검사하여 현재 <ph id="ph1">`TelephoneFormatter`</ph> 개체에 대한 참조가 있는지 여부를 확인합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>However, the method can also be called directly from code.</source>
          <target state="translated">그러나 코드에서 메서드를 직접 호출할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In that case, you can use the <bpt id="p1">*</bpt>formatProvider <ept id="p1">*</ept>parameter to provide a <bpt id="p2">[</bpt>CultureInfo<ept id="p2">](xref:System.Globalization.CultureInfo)</ept> or <bpt id="p3">[</bpt>NumberFormatInfo<ept id="p3">](xref:System.Globalization.NumberFormatInfo)</ept> object that supplies culture-specific formatting information.</source>
          <target state="translated">이 경우 <bpt id="p1">*</bpt>formatProvider<ept id="p1">*</ept> 매개 변수를 사용하여 문화권별 형식 지정 정보를 제공하는 <bpt id="p2">[</bpt>CultureInfo<ept id="p2">](xref:System.Globalization.CultureInfo)</ept> 또는 <bpt id="p3">[</bpt>NumberFormatInfo<ept id="p3">](xref:System.Globalization.NumberFormatInfo)</ept> 개체를 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Performing formatting operations<ept id="p1">](performing-formatting-operations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>서식 지정 작업 수행<ept id="p1">](performing-formatting-operations.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>