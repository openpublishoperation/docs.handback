<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c42a4ac5fcd889eedea27b54b249f48c4848c88</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\stringbuilder.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f6877522a7496b27ba84fba00bbe002ae5273ea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aab02137b0f4e0f0f04e185726ddceb0050b1f52</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using the StringBuilder class</source>
          <target state="translated">StringBuilder 클래스 사용</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Using the StringBuilder class</source>
          <target state="translated">StringBuilder 클래스 사용</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Using the StringBuilder class</source>
          <target state="translated">StringBuilder 클래스 사용</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> object is immutable.</source>
          <target state="translated"><bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> 개체는 변경할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Every time you use one of the methods in the <bpt id="p1">[</bpt>System.String<ept id="p1">](xref:System.String)</ept> class, you create a new string object in memory, which requires a new allocation of space for that new object.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.String<ept id="p1">](xref:System.String)</ept> 클래스에서 메서드 중 하나를 사용할 때마다 메모리에서 새 문자열 개체가 만들어지므로, 해당 새 개체에 대한 공간이 새로 할당됩니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In situations where you need to perform repeated modifications to a string, the overhead associated with creating a new <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> object can be costly.</source>
          <target state="translated">문자열을 반복적으로 수정해야 하는 경우 새 <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> 개체 만들기와 연결된 오버헤드로 인해 비용이 증가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Text.StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class can be used when you want to modify a string without creating a new object.</source>
          <target state="translated">새 개체를 만들지 않고 문자열을 수정하려는 경우 <bpt id="p1">[</bpt>System.Text.StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 클래스를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, using the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class can boost performance when concatenating many strings together in a loop.</source>
          <target state="translated">예를 들어 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 클래스를 사용하면 루프에서 많은 문자열을 연결할 때 성능이 향상될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Importing the System.Text Namespace</source>
          <target state="translated">System.Text 네임스페이스 가져오기</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class is found in the <bpt id="p2">[</bpt>System.Text<ept id="p2">](xref:System.Text)</ept> namespace.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 클래스는 <bpt id="p2">[</bpt>System.Text<ept id="p2">](xref:System.Text)</ept> 네임스페이스에서 발견됩니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To avoid having to provide a fully qualified type name in your code, you can import the <bpt id="p1">[</bpt>System.Text<ept id="p1">](xref:System.Text)</ept> namespace:</source>
          <target state="translated">코드에서 정규화된 형식 이름을 제공할 필요가 없도록 하려면 <bpt id="p1">[</bpt>System.Text<ept id="p1">](xref:System.Text)</ept> 네임스페이스를 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Instantiating a StringBuilder Object</source>
          <target state="translated">StringBuilder 개체 인스턴스화</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can create a new instance of the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class by initializing your variable with one of the overloaded constructor methods, as illustrated in the following example.</source>
          <target state="translated">다음 예제와 같이 오버로드된 생성자 메서드 중 하나로 변수를 초기화하여 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 클래스의 새 인스턴스를 만들 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Setting the Capacity and Length</source>
          <target state="translated">용량 및 길이 설정</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Although the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> is a dynamic object that allows you to expand the number of characters in the string that it encapsulates, you can specify a value for the maximum number of characters that it can hold.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>는 캡슐화되는 문자열에서 문자 수를 확장할 수 있는 동적 개체이지만, 보관할 수 있는 최대 문자 수 값을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This value is called the capacity of the object and should not be confused with the length of the string that the current <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> holds.</source>
          <target state="translated">이 값을 개체의 용량이라고 하며, 현재 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>에 보관된 문자열의 길이와 혼동하지 마세요.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, you might create a new instance of the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class with the string "Hello", which has a length of 5, and you might specify that the object has a maximum capacity of 25.</source>
          <target state="translated">예를 들어 길이가 5인 "Hello" 문자열을 사용하여 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 클래스의 새 인스턴스를 만들고 개체의 최대 용량을 25로 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When you modify the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>, it does not reallocate size for itself until the capacity is reached.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>를 수정할 경우 용량에 도달할 때까지 자체 크기를 다시 할당할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When this occurs, the new space is allocated automatically and the capacity is doubled.</source>
          <target state="translated">이 경우 새 공간이 자동으로 할당되고 용량이 두 배로 증가합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can specify the capacity of the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class using one of the overloaded constructors.</source>
          <target state="translated">오버로드된 생성자 중 하나를 사용하여 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 클래스의 용량을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following example specifies that the <ph id="ph1">`MyStringBuilder`</ph> object can be expanded to a maximum of 25 spaces.</source>
          <target state="translated">다음 예에서는 <ph id="ph1">`MyStringBuilder`</ph> 개체를 최대 25개 공간으로 확장할 수 있도록 지정합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Additionally, you can use the read/write <bpt id="p1">[</bpt>Capacity<ept id="p1">](xref:System.Text.StringBuilder.Capacity)</ept> property to set the maximum length of your object.</source>
          <target state="translated">또한 읽기/쓰기 <bpt id="p1">[</bpt>Capacity<ept id="p1">](xref:System.Text.StringBuilder.Capacity)</ept> 속성을 사용하여 개체의 최대 길이를 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>Capacity<ept id="p1">](xref:System.Text.StringBuilder.Capacity)</ept> property to define the maximum object length.</source>
          <target state="translated">다음 예에서는 <bpt id="p1">[</bpt>Capacity<ept id="p1">](xref:System.Text.StringBuilder.Capacity)</ept> 속성을 사용하여 최대 개체 길이를 정의합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>EnsureCapacity<ept id="p1">](xref:System.Text.StringBuilder.EnsureCapacity(System.Int32))</ept> method can be used to check the capacity of the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>EnsureCapacity<ept id="p1">](xref:System.Text.StringBuilder.EnsureCapacity(System.Int32))</ept> 메서드를 사용하여 현재 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept>의 용량을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If the capacity is greater than the passed value, no change is made; however, if the capacity is smaller than the passed value, the current capacity is changed to match the passed value.</source>
          <target state="translated">용량이 전달된 값보다 크면 변경되지 않고, 용량이 전달된 값보다 작으면 현재 용량이 전달된 값과 일치하도록 변경됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> property can also be viewed or set.</source>
          <target state="translated"><bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> 속성을 보거나 설정할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you set the <bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> property to a value that is greater than the <bpt id="p2">[</bpt>Capacity<ept id="p2">](xref:System.Text.StringBuilder.Capacity)</ept> property, the <bpt id="p3">[</bpt>Capacity<ept id="p3">](xref:System.Text.StringBuilder.Capacity)</ept> property is automatically changed to the same value as the <bpt id="p4">[</bpt>Length<ept id="p4">](xref:System.Text.StringBuilder.Length)</ept> property.</source>
          <target state="translated"><bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> 속성을 <bpt id="p2">[</bpt>Capacity<ept id="p2">](xref:System.Text.StringBuilder.Capacity)</ept> 속성보다 큰 값으로 설정하면 <bpt id="p3">[</bpt>Capacity<ept id="p3">](xref:System.Text.StringBuilder.Capacity)</ept> 속성이 <bpt id="p4">[</bpt>Length<ept id="p4">](xref:System.Text.StringBuilder.Length)</ept> 속성과 동일한 값으로 자동으로 변경됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Setting the <bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> property to a value that is less than the length of the string within the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> shortens the string.</source>
          <target state="translated"><bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> 속성을 현재 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 내의 문자열 길이보다 작은 값으로 설정하면 문자열이 단축됩니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Modifying the StringBuilder String</source>
          <target state="translated">StringBuilder 문자열 수정</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following table lists the methods you can use to modify the contents of a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">다음 표에서는 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>의 내용을 수정하는 데 사용할 수 있는 메서드를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Method name</source>
          <target state="translated">메서드 이름</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">기능</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.Append<ept id="p1">](xref:System.Text.StringBuilder.Append(System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Append<ept id="p1">](xref:System.Text.StringBuilder.Append(System.Char))</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Appends information to the end of the current <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">현재 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>의 끝에 정보를 추가합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Replaces a format specifier passed in a string with formatted text.</source>
          <target state="translated">문자열에 전달된 서식 지정자를 서식 있는 텍스트로 바꿉니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.Insert<ept id="p1">](xref:System.Text.StringBuilder.Insert(System.Int32,System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Insert<ept id="p1">](xref:System.Text.StringBuilder.Insert(System.Int32,System.Char))</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Inserts a string or object into the specified index of the current <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">현재 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>의 지정된 인덱스에 문자열 또는 개체를 삽입합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Removes a specified number of characters from the current <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">현재 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>에서 지정된 수의 문자를 제거합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Replaces a specified character at a specified index.</source>
          <target state="translated">지정된 인덱스에서 지정된 문자를 바꿉니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Append</source>
          <target state="translated">추가</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder.Append<ept id="p1">](xref:System.Text.StringBuilder.Append(System.Char))</ept> method can be used to add text or a string representation of an object to the end of a string represented by the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Append<ept id="p1">](xref:System.Text.StringBuilder.Append(System.Char))</ept> 메서드를 사용하여 현재 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept>에 표시되는 문자열의 끝에 개체의 문자열 표현이나 텍스트를 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following example initializes a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> to "Hello World" and then appends some text to the end of the object.</source>
          <target state="translated">다음 예에서는 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>를 "Hello World"로 초기화한 다음 개체의 끝에 일부 텍스트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Space is allocated automatically as needed.</source>
          <target state="translated">필요한 경우 공간이 자동으로 할당됩니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>AppendFormat</source>
          <target state="translated">AppendFormat</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept> method adds text to the end of the <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept> 메서드는 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 개체의 끝에 텍스트를 추가합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It supports the composite formatting feature (for more information, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](composite-format.md)</ept>) by calling the <bpt id="p2">[</bpt>IFormattable<ept id="p2">](xref:System.IFormattable)</ept> implementation of the object or objects to be formatted.</source>
          <target state="translated">서식 지정할 개체의 <bpt id="p2">[</bpt>IFormattable<ept id="p2">](xref:System.IFormattable)</ept> 구현을 호출하여 복합 서식 지정 기능을 지원합니다. 자세한 내용은 <bpt id="p1">[</bpt>복합 서식 지정<ept id="p1">](composite-format.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Therefore, it accepts the standard format strings for numeric, date and time, and enumeration values, the custom format strings for numeric and date and time values, and the format strings defined for custom types.</source>
          <target state="translated">따라서 숫자, 날짜 및 시간, 열거형 값에 대한 표준 서식 문자열, 숫자, 날짜 및 시간 값에 대한 사용자 지정 서식 문자열, 사용자 지정 형식에 대해 정의된 서식 문자열을 허용합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>(For information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](formatting-types.md)</ept>.) You can use this method to customize the format of variables and append those values to a <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">서식 지정에 대한 자세한 내용은 <bpt id="p1">[</bpt>서식 지정 형식<ept id="p1">](formatting-types.md)</ept>을 참조하세요. 이 메서드를 사용하여 변수의 서식을 사용자 지정하고 해당 값을 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept>에 추가할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following example uses the AppendFormat method to place an integer value formatted as a currency value at the end of a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated">다음 예에서는 [AppendFormat] 메서드를 사용하여 통화 값으로 서식 지정된 정수 값을 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 개체의 끝에 배치합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Insert</source>
          <target state="translated">Insert</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder.Insert<ept id="p1">](xref:System.Text.StringBuilder.Insert(System.Int32,System.Char))</ept> method adds a string or object to a specified position in the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Insert<ept id="p1">](xref:System.Text.StringBuilder.Insert(System.Int32,System.Char))</ept> 메서드는 현재 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 개체의 지정된 위치에 문자열 또는 개체를 추가합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following example uses this method to insert a word into the sixth position of a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated">다음 예에서는 이 메서드를 사용하여 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 개체의 여섯 번째 위치에 단어를 삽입합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Remove</source>
          <target state="translated">제거</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>StringBuilder.Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept> method to remove a specified number of characters from the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> object, beginning at a specified zero-based index.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept> 메서드를 사용하여 지정된 0부터 시작하는 인덱스를 기준으로 현재 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 개체에서 지정된 수의 문자를 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept> method to shorten a <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated">다음 예에서는 <bpt id="p1">[</bpt>Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept> 메서드를 사용하여 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 개체를 단축합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Replace</source>
          <target state="translated">바꾸기</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder.Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept> | Replaces a specified character at a specified index.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept> | 지정된 인덱스에서 지정된 문자를 바꿉니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>method can be used to replace characters within the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object with another specified character.</source>
          <target state="translated">메서드는 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 개체 내의 문자를 다른 지정된 문자로 바꾸는 데 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept> | Replaces a specified character at a specified index.</source>
          <target state="translated">다음 예제에서는 <bpt id="p1">[</bpt>Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept>를 사용합니다. | 지정된 인덱스에서 지정된 문자를 바꿉니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>method to search a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object for all instances of the exclamation point character (!) and replace them with the question mark character (?).</source>
          <target state="translated">메서드는 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 개체에서 느낌표 문자(!)의 모든 인스턴스를 검색한 다음 물음표 문자(?)로 바꿉니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Converting a StringBuilder Object to a String</source>
          <target state="translated">StringBuilder 개체를 문자열로 변환</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You must convert the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object to a <bpt id="p2">[</bpt>String<ept id="p2">](xref:System.String)</ept> object before you can pass the string represented by the <bpt id="p3">[</bpt>StringBuilder<ept id="p3">](xref:System.Text.StringBuilder)</ept> object to a method that has a <bpt id="p4">[</bpt>String<ept id="p4">](xref:System.String)</ept> parameter or display it in the user interface.</source>
          <target state="translated"><bpt id="p3">[</bpt>StringBuilder<ept id="p3">](xref:System.Text.StringBuilder)</ept> 개체에서 표시하는 문자열을 <bpt id="p4">[</bpt>String<ept id="p4">](xref:System.String)</ept> 매개 변수를 가진 메서드에 전달하거나 사용자 인터페이스에 표시하려면 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 개체를 <bpt id="p2">[</bpt>String<ept id="p2">](xref:System.String)</ept> 개체로 변환해야 합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You do this conversion by calling the <bpt id="p1">[</bpt>StringBuilder.ToString<ept id="p1">](xref:System.Text.StringBuilder.ToString)</ept> method.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.ToString<ept id="p1">](xref:System.Text.StringBuilder.ToString)</ept> 메서드를 호출하여 이 변환을 수행합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The following example calls a number of <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> methods and then calls the <bpt id="p2">[</bpt>StringBuilder.ToString<ept id="p2">](xref:System.Text.StringBuilder.ToString)</ept> method to display the string.</source>
          <target state="translated">다음 예에서는 다양한 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 메서드를 호출한 다음 <bpt id="p2">[</bpt>StringBuilder.ToString<ept id="p2">](xref:System.Text.StringBuilder.ToString)</ept> 메서드를 호출하여 문자열을 표시합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Text.StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Text.StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic string operations<ept id="p1">](basic-string-operations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>기본적인 문자열 작업<ept id="p1">](basic-string-operations.md)</ept></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting types<ept id="p1">](formatting-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>형식 서식 지정<ept id="p1">](formatting-types.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>