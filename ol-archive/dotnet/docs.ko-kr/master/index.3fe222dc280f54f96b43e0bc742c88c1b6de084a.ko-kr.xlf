<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f2831f21654d9eb1523cd80166b674e7c41d8bb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\collections\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0908869b85d7c8e914074c87cec1f8c3ff0e9b82</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6b5b1653721dbcd7ef9a9f9f3dd474fc838b3612</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Collections and Data Structures</source>
          <target state="translated">컬렉션 및 데이터 구조</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Collections and Data Structures</source>
          <target state="translated">컬렉션 및 데이터 구조</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Collections and Data Structures</source>
          <target state="translated">컬렉션 및 데이터 구조</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Similar data can often be handled more efficiently when stored and manipulated as a collection.</source>
          <target state="translated">비슷한 데이터는 컬렉션으로 저장 및 조작하면 보다 효율적으로 처리할 수 있는 경우가 많습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>System.Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept> class or the classes in the <bpt id="p2">[</bpt>System.Collections<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept>, <bpt id="p3">[</bpt>System.Collections.Generic<ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic)</ept>, or <bpt id="p4">[</bpt>System.Collections.Concurrent<ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept> namespaces to add, remove, and modify either individual elements or a range of elements in a collection.</source>
          <target state="translated"><bpt id="p2">[</bpt>System.Collections<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept>, <bpt id="p3">[</bpt>System.Collections.Generic<ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic)</ept> 또는 <bpt id="p4">[</bpt>System.Collections.Concurrent<ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept> 네임스페이스에서 <bpt id="p1">[</bpt>System.Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept> 클래스를 사용하여 개별 요소나 컬렉션의 요소 범위를 추가, 제거 및 수정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>There are two main types of collections; generic collections and non-generic collections.</source>
          <target state="translated">컬렉션에는 제네릭 컬렉션과 제네릭이 아닌 컬렉션의 두 가지 기본 유형이 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Generic collections are type-safe at compile time.</source>
          <target state="translated">제네릭 컬렉션은 컴파일 타임 시 형식이 안전합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Because of this, generic collections typically offer better performance.</source>
          <target state="translated">이로 인해 제네릭 컬렉션은 일반적으로 성능이 더 뛰어납니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Generic collections accept a type parameter when they are constructed and do not require that you cast to and from the <bpt id="p1">[</bpt>Object<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Object)</ept> type when you add or remove items from the collection.</source>
          <target state="translated">제네릭 컬렉션은 생성 시 형식 매개 변수를 허용하며, 컬렉션에서 항목을 추가하거나 제거할 때 <bpt id="p1">[</bpt>Object<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Object)</ept> 형식 간에 캐스팅을 수행하지 않아도 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Non-generic collections store items as <bpt id="p1">[</bpt>Object<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Object)</ept> and require casting.</source>
          <target state="translated">제네릭이 아닌 컬렉션은 <bpt id="p1">[</bpt>Object<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Object)</ept>로 항목을 저장하고 캐스팅을 수행해야 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You may see non-generic collections in older code.</source>
          <target state="translated">이전 코드에는 제네릭이 아닌 컬렉션이 포함되어 있는 경우도 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The collections in the <bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept> namespace provide efficient thread-safe operations for accessing collection items from multiple threads.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept> 네임스페이스의 컬렉션은 여러 스레드에서 컬렉션 항목에 액세스하기 위한 효율적이고 스레드로부터 안전한 작업을 제공합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Common collection features</source>
          <target state="translated">일반 컬렉션 기능</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>All collections provide methods for adding, removing or finding items in the collection.</source>
          <target state="translated">모든 컬렉션은 컬렉션의 항목 추가, 제거 또는 찾기를 위한 방법을 제공합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In addition, all collections that directly or indirectly implement the <bpt id="p1">[</bpt>ICollection<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ICollection)</ept> interface or the <bpt id="p2">[</bpt>ICollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.ICollection-1)</ept> interface share these features:</source>
          <target state="translated">또한 직접/간접적으로 <bpt id="p1">[</bpt>ICollection<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ICollection)</ept> 인터페이스 또는 <bpt id="p2">[</bpt>ICollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.ICollection-1)</ept> 인터페이스 공유를 구현하는 모든 컬렉션은 다음 기능을 공유합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>The ability to enumerate the collection<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>컬렉션을 열거하는 기능<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>.NET Framework collections either implement <bpt id="p1">[</bpt>System.Collections.IEnumerable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IEnumerable)</ept> or <bpt id="p2">[</bpt>System.Collections.Generic.IEnumerable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IEnumerable-1)</ept> to enable the collection to be iterated through.</source>
          <target state="translated">.NET Framework 컬렉션은 <bpt id="p1">[</bpt>System.Collections.IEnumerable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IEnumerable)</ept> 또는 <bpt id="p2">[</bpt>System.Collections.Generic.IEnumerable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IEnumerable-1)</ept>를 구현하여 컬렉션을 반복할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An enumerator can be thought of as a movable pointer to any element in the collection.</source>
          <target state="translated">열거자는 컬렉션의 모든 요소에 대한 이동 가능 포인터라고 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`foreach, in`</ph> statement (C#) uses the enumerator exposed by the <ph id="ph2">`GetEnumerator`</ph> method and hides the complexity of manipulating the enumerator.</source>
          <target state="translated"><ph id="ph1">`foreach, in`</ph> 문(C#)은 <ph id="ph2">`GetEnumerator`</ph> 메서드가 노출하는 열거자를 사용하며 해당 열거자를 조작하는 복잡한 작업을 숨깁니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In addition, any collection that implements <bpt id="p1">[</bpt>System.Collections.Generic.IEnumerable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IEnumerable-1)</ept> is considered a queryable type and can be queried with LINQ.</source>
          <target state="translated">또한 <bpt id="p1">[</bpt>System.Collections.Generic.IEnumerable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IEnumerable-1)</ept>을 구현하는 모든 컬렉션은 쿼리 가능 형식으로 간주할 수 있으며 LINQ를 사용하여 쿼리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>LINQ queries provide a common pattern for accessing data.</source>
          <target state="translated">LINQ 쿼리는 데이터 액세스를 위한 일반 패턴을 제공합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>They are typically more concise and readable than standard for each loops, and provide filtering, ordering and grouping capabilities.</source>
          <target state="translated">이러한 쿼리는 대개 루프 각각의 표준보다 간결하고 읽기 쉬우며 필터링, 순서 지정 및 그룹화 기능을 제공합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>LINQ queries can also improve performance.</source>
          <target state="translated">또한 LINQ 쿼리를 통해 성능을 향상시킬 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>The ability to copy the collection contents to an array<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>컬렉션의 내용을 배열에 복사하는 기능<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>All collections can be copied to an array using the <ph id="ph1">`CopyTo`</ph> method; however, the order of the elements in the new array is based on the sequence in which the enumerator returns them.</source>
          <target state="translated"><ph id="ph1">`CopyTo`</ph> 메서드를 사용하면 모든 컬렉션을 배열에 복사할 수 있습니다. 그러나 새 배열의 요소 순서는 열거자가 요소를 반환하는 시퀀스를 기준으로 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The resulting array is always one-dimensional with a lower bound of zero.</source>
          <target state="translated">결과 배열은 항상 1차원이며 하한은 0입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In addition, many collection classes contain the following features:</source>
          <target state="translated">또한 다수의 컬렉션 클래스에는 다음 기능도 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Capacity and Count properties<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Capacity 및 Count 속성<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The capacity of a collection is the number of elements it can contain.</source>
          <target state="translated">컬렉션의 용량은 컬렉션에 포함할 수 있는 요소의 수이고,</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The count of a collection is the number of elements it actually contains.</source>
          <target state="translated">컬렉션의 카운트는 컬렉션에 실제로 포함되어 있는 요소의 수입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Some collections hide the capacity or the count or both.</source>
          <target state="translated">용량이나 카운트 중 하나 또는 둘 다를 숨기는 컬렉션도 있습니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Most collections automatically expand in capacity when the current capacity is reached.</source>
          <target state="translated">대부분의 컬렉션은 현재 용량에 도달하면 자동으로 용량을 확장합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The memory is reallocated, and the elements are copied from the old collection to the new one.</source>
          <target state="translated">이때 메모리가 다시 할당되며 요소는 이전 컬렉션에서 새 컬렉션으로 복사됩니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This reduces the code required to use the collection; however, the performance of the collection might be negatively affected.</source>
          <target state="translated">따라서 컬렉션을 사용하는 데 필요한 코드는 감소하지만 컬렉션 성능이 저하될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, for <bpt id="p1">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept>, if <ph id="ph3">`Count`</ph> is less than <ph id="ph4">`Capacity`</ph>, adding an item is an O(1) operation.</source>
          <target state="translated">예를 들어 <bpt id="p1">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept>의 경우 <ph id="ph3">`Count`</ph>가 <ph id="ph4">`Capacity`</ph>보다 작으면 항목을 추가하는 것은 O(1) 작업이 됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If the capacity needs to be increased to accommodate the new element, adding an item becomes an O(n) operation, where n is <ph id="ph1">`Count`</ph>.</source>
          <target state="translated">새 요소를 포함할 수 있도록 용량을 늘려야 하는 경우 항목을 추가하는 것은 O(n) 작업이 됩니다. 여기서 n은 <ph id="ph1">`Count`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The best way to avoid poor performance caused by multiple reallocations is to set the initial capacity to be the estimated size of the collection.</source>
          <target state="translated">메모리가 여러 번 다시 할당되어 성능이 저하되는 현상을 방지하는 가장 좋은 방법은 초기 용량을 컬렉션의 예상 크기로 설정하는 것입니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>BitArray<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.BitArray)</ept> is a special case; its capacity is the same as its length, which is the same as its count.</source>
          <target state="translated"><bpt id="p1">[</bpt>BitArray<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.BitArray)</ept>는 해당 용량과 길이 및 카운트가 모두 같은 특수한 경우입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>A consistent lower bound<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>일관된 하한<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The lower bound of a collection is the index of its first element.</source>
          <target state="translated">컬렉션의 하한은 첫 번째 요소의 인덱스입니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>All indexed collections in the <bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept> namespaces have a lower bound of zero, meaning they are 0-indexed.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept> 네임스페이스의 모든 인덱싱된 컬렉션은 하한이 0입니다. 즉, 0부터 인덱싱됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept> has a lower bound of zero by default, but a different lower bound can be defined when creating an instance of the <ph id="ph1">`Array`</ph> class using <ph id="ph2">`Array.CreateInstance`</ph>.</source>
          <target state="translated">기본적으로 <bpt id="p1">[</bpt>Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept>의 하한은 0이지만 <ph id="ph2">`Array.CreateInstance`</ph>를 사용하여 <ph id="ph1">`Array`</ph> 클래스의 인스턴스를 만들 때 다른 하한을 정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Synchronization for access from multiple threads<ept id="p1">**</ept> (<bpt id="p2">[</bpt>System.Collections<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept> classes only).</source>
          <target state="translated"><bpt id="p1">**</bpt>여러 스레드로부터의 액세스를 위한 동기화<ept id="p1">**</ept>(<bpt id="p2">[</bpt>System.Collections<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept> 클래스에만 해당됨).</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Non-generic collection types in the <bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept> namespace provide some thread safety with synchronization; typically exposed through the <ph id="ph1">`SyncRoot`</ph> and <ph id="ph2">`IsSynchronized`</ph> members.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept> 네임스페이스의 제네릭이 아닌 컬렉션 형식은 동기화와 관련하여 어느 정도의 스레드 보안을 제공합니다(일반적으로 <ph id="ph1">`SyncRoot`</ph> 및 <ph id="ph2">`IsSynchronized`</ph> 구성원을 통해 노출됨).</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>These collections are not thread-safe by default.</source>
          <target state="translated">이러한 컬렉션은 기본적으로 스레드로부터 안전하지 않습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you require scalable and efficient multi-threaded access to a collection, use one of the classes in the <bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept> namespace or consider using an immutable collection.</source>
          <target state="translated">확장 가능하며 효율적인 다중 스레드 방식으로 컬렉션에 액세스해야 하는 경우에는 <bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept> 네임스페이스의 클래스 중 하나를 사용하거나 변경할 수 없는 컬렉션을 사용하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Thread-Safe Collections<ept id="p1">](threadsafe/index.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>스레드로부터 안전한 컬렉션<ept id="p1">](threadsafe/index.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Choosing a collection</source>
          <target state="translated">컬렉션 선택</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>In general, you should use generic collections.</source>
          <target state="translated">일반적으로는 제네릭 컬렉션을 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following table describes some common collection scenarios and the collection classes you can use for those scenarios.</source>
          <target state="translated">다음 표에는 몇 가지 일반적인 컬렉션 시나리오와 이러한 시나리오에서 사용할 수 있는 컬렉션 클래스에 대해 설명합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If you are new to generic collections, this table will help you choose the generic collection that works the best for your task.</source>
          <target state="translated">제네릭 컬렉션을 처음 사용하는 경우 이 표의 내용을 참조하여 작업에 가장 적합한 제네릭 컬렉션을 선택할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>I want to…</source>
          <target state="translated">수행할 작업</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Generic collection option(s)</source>
          <target state="translated">제네릭 컬렉션 옵션</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Non-generic collection option(s)</source>
          <target state="translated">제네릭이 아닌 컬렉션 옵션</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Store items as key/value pairs for quick look-up by key</source>
          <target state="translated">키별로 빠르게 조회할 수 있도록 항목을 키/값 쌍으로 저장</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic.Dictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic.Dictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hashtable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Hashtable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Access items by index</source>
          <target state="translated">인덱스별로 항목 액세스</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic.List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic.List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept>, <bpt id="p2">[</bpt>System.Collections.ArrayList<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ArrayList)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept>, <bpt id="p2">[</bpt>System.Collections.ArrayList<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ArrayList)</ept></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Use items first-in-first-out (FIFO)</source>
          <target state="translated">FIFO(선입 선출) 방식으로 항목 사용</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic.Queue<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Queue-1)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic.Queue<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Queue-1)</ept></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Queue<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Queue)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Queue<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Queue)</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Use data Last-In-First-Out (LIFO)</source>
          <target state="translated">LIFO(후입 선출) 방식으로 데이터 사용</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic.Stack<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Stack-1)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic.Stack<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Stack-1)</ept></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Stack<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Stack)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Stack<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Stack)</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Access items sequentially</source>
          <target state="translated">순서대로 항목 액세스</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic.LinkedList<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.LinkedList-1)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic.LinkedList<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.LinkedList-1)</ept></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>No recommendation</source>
          <target state="translated">권장 사항 없음</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Receive notifications when items are removed or added to the collection.</source>
          <target state="translated">항목을 컬렉션에 추가하거나 컬렉션에서 제거할 때 알림이 표시됩니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>(implements <bpt id="p1">[</bpt>INotifyPropertyChanged<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.ComponentModel.INotifyPropertyChanged)</ept> and <bpt id="p2">[</bpt>INotifyCollectionChanged<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.INotifyCollectionChanged)</ept>)</source>
          <target state="translated">(implements <bpt id="p1">[</bpt>INotifyPropertyChanged<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.ComponentModel.INotifyPropertyChanged)</ept> and <bpt id="p2">[</bpt>INotifyCollectionChanged<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized.INotifyCollectionChanged)</ept>)</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.ObjectModel.ObservableCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.ObservableCollection-1)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.ObjectModel.ObservableCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.ObservableCollection-1)</ept></target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>No recommendation</source>
          <target state="translated">권장 사항 없음</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Use a sorted collection</source>
          <target state="translated">정렬된 컬렉션 사용</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic.SortedList<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic.SortedList<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept></target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.SortedList<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.SortedList)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.SortedList<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.SortedList)</ept></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Manage efficient storage and access of unique elements</source>
          <target state="translated">고유한 요소의 효율적인 저장 및 액세스 관리</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic.HashSet<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.HashSet-1)</ept>, <bpt id="p2">[</bpt>System.Collections.Generic.SortedSet<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedSet-1)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic.HashSet<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.HashSet-1)</ept>, <bpt id="p2">[</bpt>System.Collections.Generic.SortedSet<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedSet-1)</ept></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>No recommendation</source>
          <target state="translated">권장 사항 없음</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Related Topics</source>
          <target state="translated">관련 항목</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">제목</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Selecting a Collection Class<ept id="p1">](selecting-a-collection-class.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Collection 클래스 선택<ept id="p1">](selecting-a-collection-class.md)</ept></target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Describes the different collections and helps you select one for your scenario.</source>
          <target state="translated">다양한 컬렉션에 대해 설명하고 시나리오에 맞는 컬렉션을 선택하는 데 도움이 되는 정보를 제공합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Commonly Used Collection Types<ept id="p1">](commonly-used-collection-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>일반적으로 사용되는 컬렉션 형식<ept id="p1">](commonly-used-collection-types.md)</ept></target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Describes commonly used generic and nongeneric collection types such as <bpt id="p1">[</bpt>System.Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept>, <bpt id="p2">[</bpt>System.Collections.Generic.List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept>, and <bpt id="p3">[</bpt>System.Collections.Generic.Dictionary<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept>, <bpt id="p2">[</bpt>System.Collections.Generic.List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> 및 <bpt id="p3">[</bpt>System.Collections.Generic.Dictionary<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept>와 같이 일반적으로 사용되는 제네릭 및 제네릭이 아닌 컬렉션 형식을 설명합니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>When to Use Generic Collections<ept id="p1">](when-to-use-generic-collections.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>제네릭 컬렉션 사용 기준<ept id="p1">](when-to-use-generic-collections.md)</ept></target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Discusses the use of generic collection types.</source>
          <target state="translated">제네릭 컬렉션 형식의 사용을 설명합니다.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Comparisons and Sorts Within Collections<ept id="p1">](comparisons-and-sorts-within-collections.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>컬렉션 내에서 비교 및 정렬<ept id="p1">](comparisons-and-sorts-within-collections.md)</ept></target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Discusses the use of equality comparisons and sorting comparisons in collections.</source>
          <target state="translated">컬렉션에서 같음 비교 및 정렬 비교를 사용하는 방법을 설명합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Sorted Collection Types<ept id="p1">](sorted-collection-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Sorted 컬렉션 형식<ept id="p1">](sorted-collection-types.md)</ept></target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Describes sorted collections performance and characteristics.</source>
          <target state="translated">정렬된 컬렉션의 성능 및 특징에 대해 설명합니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Hashtable and Dictionary Collection Types<ept id="p1">](hashtable-and-dictionary-collection-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Hashtable 및 Dictionary 컬렉션 형식<ept id="p1">](hashtable-and-dictionary-collection-types.md)</ept></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Describes the features of generic and non-generic hash-based dictionary types.</source>
          <target state="translated">제네릭 및 제네릭이 아닌 해시 기반 사전 형식의 기능을 설명합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Thread-Safe Collections<ept id="p1">](threadsafe/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>스레드로부터 안전한 컬렉션<ept id="p1">](threadsafe/index.md)</ept></target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Describes collection types such as <bpt id="p1">[</bpt>System.Collections.Concurrent.BlockingCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.BlockingCollection-1)</ept> and <bpt id="p2">[</bpt>System.Collections.Concurrent.ConcurrentBag<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentBag-1)</ept> that support safe and efficient concurrent access from multiple threads.</source>
          <target state="translated">여러 스레드에서 안전하고 효율적인 동시 액세스를 지원하는 <bpt id="p1">[</bpt>System.Collections.Concurrent.BlockingCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.BlockingCollection-1)</ept> 및 <bpt id="p2">[</bpt>System.Collections.Concurrent.ConcurrentBag<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentBag-1)</ept>과 같은 컬렉션 형식을 설명합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">참조</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Array<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept></target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept></target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic)</ept></target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Specialized<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Specialized<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Specialized)</ept></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Linq<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Linq)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Linq<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Linq)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>