<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8c3a58f97c9cb70e168a055cd874ee10ebb08c54</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\samples-and-tutorials\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions" />
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47375ecab8a05cd7690d4e84edb94a8c695b66c3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bdd674151586519f42884beb65faea83be5a03d7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Samples and Tutorials</source>
          <target state="translated">샘플 및 자습서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Samples and Tutorials</source>
          <target state="translated">샘플 및 자습서</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET</source>
          <target state="translated">.NET</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Samples and Tutorials</source>
          <target state="translated">샘플 및 자습서</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>We've got a rich catalog of samples and tutorials that you can use to learn more about .NET.</source>
          <target state="translated">.NET에 대해 자세히 알아보는 데 사용할 수 있는 샘플 및 자습서의 풍부한 카탈로그가 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This area contains samples and tutorials for .NET Core, and the C# Language.</source>
          <target state="translated">이 영역에는 .NET Core 및 C# 언어에 대한 샘플과 자습서가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can find great resources to learn the F# programming language on the <bpt id="p1">[</bpt>F# Foundation's site<ept id="p1">](http://fsharp.org/learn.html)</ept>.</source>
          <target state="translated">F# 프로그래밍 언어를 학습하는 데 유용한 리소스는 <bpt id="p1">[</bpt>F# Foundation 사이트<ept id="p1">](http://fsharp.org/learn.html)</ept>에서 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can find great resources for learning ASP.NET Core on the <bpt id="p1">[</bpt>ASP.NET site<ept id="p1">](https://docs.asp.net/en/latest/tutorials/index.html)</ept>.</source>
          <target state="translated">ASP.NET Core를 학습하는 데 유용한 리소스는 <bpt id="p1">[</bpt>ASP.NET 사이트<ept id="p1">](https://docs.asp.net/en/latest/tutorials/index.html)</ept>에서 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In addition, if you are interested in exploring C# using an online playground, try these <bpt id="p1">[</bpt>interactive tutorials<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=817234)</ept>.</source>
          <target state="translated">또한 온라인 실습을 사용하여 C#을 살펴보려는 경우 이러한 <bpt id="p1">[</bpt>대화형 자습서<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=817234)</ept>를 시도해 보세요.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>General</source>
          <target state="translated">일반</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Samples</source>
          <target state="translated">샘플</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Unit Testing in .NET Core using dotnet test<ept id="p2">](../core/testing/unit-testing-with-dotnet-test.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>dotnet 테스트를 사용한 .NET Core의 유닛 테스트<ept id="p2">](../core/testing/unit-testing-with-dotnet-test.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This guide shows how to create an ASP.NET Core web application and the associated unit tests.</source>
          <target state="translated">이 가이드에서는 ASP.NET Core 웹 응용 프로그램 및 관련 단위 테스트를 만드는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It will start by creating a simple web service application and then add tests, and continue by creating more tests to guide implementing new features.</source>
          <target state="translated">먼저 간단한 웹 서비스 응용 프로그램을 만든 다음 테스트를 추가하고 새 기능의 구현 과정을 안내하는 추가 테스트를 만들어 계속 진행합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The completed code is available <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/getting-started/unit-testing-using-dotnet-test)</ept>.</source>
          <target state="translated">완성된 코드는 <bpt id="p1">[</bpt>GitHub의 core-docs 리포지토리<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/getting-started/unit-testing-using-dotnet-test)</ept>에서 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Tutorials</source>
          <target state="translated">자습서</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Writing .NET Core console apps using the CLI tools: A step-by-step guide<ept id="p2">](../core/tutorials/using-with-xplat-cli.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>CLI 도구를 사용하여 .NET Core 콘솔 앱 작성: 단계별 가이드<ept id="p2">](../core/tutorials/using-with-xplat-cli.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This guide will show you how to use the .NET Core CLI tooling to build cross-platform console apps.</source>
          <target state="translated">이 가이드에서는 .NET Core CLI 도구를 사용하여 플랫폼 간 콘솔 앱을 빌드하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It will start with the most basic console app and eventually span multiple projects, including testing.</source>
          <target state="translated">가장 기본적인 콘솔 앱으로 시작하여 테스트를 비롯한 여러 프로젝트로 확장됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You'll add these features step-by-step, building on what you've already seen and built.</source>
          <target state="translated">이러한 기능을 단계별로 추가하며, 이미 확인하고 빌드한 것 위에서 빌드하게 됩니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/console-apps)</ept>.</source>
          <target state="translated">빌드할 코드의 완성된 버전은 <bpt id="p1">[</bpt>GitHub의 core-docs 리포지토리<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/console-apps)</ept>에 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Writing Libraries with Cross Platform Tools<ept id="p2">](../core/tutorials/libraries.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>플랫폼 간 도구로 라이브러리 작성<ept id="p2">](../core/tutorials/libraries.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This sample covers how you can write libraries for .NET using cross-platform CLI tools.</source>
          <target state="translated">이 샘플에서는 플랫폼 간 CLI 도구를 사용하여 .NET용 라이브러리를 작성하는 방법을 다룹니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>They provide an efficient and low-level experience that works across any supported OS.</source>
          <target state="translated">지원되는 운영 체제에서 작동하는 효율적인 하위 수준 환경을 제공합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The completed code is available <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/libraries/frameworks-library)</ept>.</source>
          <target state="translated">완성된 코드는 <bpt id="p1">[</bpt>GitHub의 core-docs 리포지토리<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/libraries/frameworks-library)</ept>에서 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>C# Language</source>
          <target state="translated">C# 언어</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Samples</source>
          <target state="translated">샘플</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Iterators<ept id="p2">](../csharp/iterators.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>반복기<ept id="p2">](../csharp/iterators.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This sample demonstrates the syntax and features for creating and consuming C# iterators.</source>
          <target state="translated">이 샘플에서는 C# 반복기를 만들고 사용하기 위한 구문 및 기능을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/iterators)</ept>.</source>
          <target state="translated">빌드할 코드의 완성된 버전은 <bpt id="p1">[</bpt>GitHub의 core-docs 리포지토리<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/iterators)</ept>에 있습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Indexers<ept id="p2">](../csharp/indexers.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>인덱서<ept id="p2">](../csharp/indexers.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This sample demonstrates the syntax and features for C# indexers.</source>
          <target state="translated">이 샘플에서는 C# 인덱서에 대한 구문 및 기능을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/indexers)</ept>.</source>
          <target state="translated">빌드할 코드의 완성된 버전은 <bpt id="p1">[</bpt>GitHub의 core-docs 리포지토리<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/indexers)</ept>에 있습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Delegates and Events<ept id="p2">](../csharp/delegates-events.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>대리자 및 이벤트<ept id="p2">](../csharp/delegates-events.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This sample demonstrates the syntax and features for C# delegates and events.</source>
          <target state="translated">이 샘플에서는 C# 대리자와 이벤트에 대한 구문 및 기능을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/delegates-and-events)</ept>.</source>
          <target state="translated">빌드할 코드의 완성된 버전은 <bpt id="p1">[</bpt>GitHub의 core-docs 리포지토리<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/delegates-and-events)</ept>에 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A second sample, focused on events is also in the <bpt id="p1">[</bpt>same repository<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/events)</ept>.</source>
          <target state="translated">이벤트에 중점을 두는 두 번째 샘플도 <bpt id="p1">[</bpt>동일한 리포지토리<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/events)</ept>에 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Expression Trees<ept id="p2">](../csharp/expression-trees.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>식 트리<ept id="p2">](../csharp/expression-trees.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This sample demonstrates many of the problems that can be solved by using Expression Trees.</source>
          <target state="translated">이 샘플에서는 식 트리를 사용하여 해결할 수 있는 여러 가지 문제를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/expression-trees)</ept>.</source>
          <target state="translated">빌드할 코드의 완성된 버전은 <bpt id="p1">[</bpt>GitHub의 core-docs 리포지토리<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/expression-trees)</ept>에 있습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>LINQ Samples<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>LINQ 샘플<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>These series of samples demonstrate many of the features of Language Integrated Query.</source>
          <target state="translated">이러한 일련의 샘플에서는 Language-Integrated Query의 여러 가지 기능을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/linq/csharp)</ept>.</source>
          <target state="translated">빌드할 코드의 완성된 버전은 <bpt id="p1">[</bpt>GitHub의 core-docs 리포지토리<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/linq/csharp)</ept>에 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Tutorials</source>
          <target state="translated">자습서</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Console Application<ept id="p2">](../csharp/tutorials/console-teleprompter.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>콘솔 응용 프로그램<ept id="p2">](../csharp/tutorials/console-teleprompter.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This tutorial demonstrates Console I/O, the structure of a Console application, and the basics of the Task based asynchronous programming model.</source>
          <target state="translated">이 자습서에서는 콘솔 I/O, 콘솔 응용 프로그램의 구조 및 태스크 기반 비동기 프로그래밍 모델의 기본 사항을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/getting-started/console-teleprompter)</ept>.</source>
          <target state="translated">빌드할 코드의 완성된 버전은 <bpt id="p1">[</bpt>GitHub의 core-docs 리포지토리<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/getting-started/console-teleprompter)</ept>에 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>REST Client<ept id="p2">](../csharp/tutorials/console-webapiclient.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>REST 클라이언트<ept id="p2">](../csharp/tutorials/console-webapiclient.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This tutorial demonstrates web communications, JSON serialization, and Object Oriented features in the C# language.</source>
          <target state="translated">이 자습서에서는 C# 언어의 웹 통신, JSON serialization 및 개체 지향 기능에 대해 설명합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/getting-started/console-webapiclient)</ept>.</source>
          <target state="translated">빌드할 코드의 완성된 버전은 <bpt id="p1">[</bpt>GitHub의 core-docs 리포지토리<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/getting-started/console-webapiclient)</ept>에 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Working with LINQ<ept id="p2">](../csharp/tutorials/working-with-linq.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>LINQ 작업<ept id="p2">](../csharp/tutorials/working-with-linq.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This tutorial demonstrates many of the features of LINQ and the language elements that support it.</source>
          <target state="translated">이 자습서에서는 LINQ의 다양한 기능과 LINQ를 지원하는 언어 요소를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/getting-started/console-linq)</ept>.</source>
          <target state="translated">빌드할 코드의 완성된 버전은 <bpt id="p1">[</bpt>GitHub의 core-docs 리포지토리<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/getting-started/console-linq)</ept>에 있습니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Microservices hosted in Docker<ept id="p2">](../csharp/tutorials/microservices.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Docker에서 호스트되는 마이크로 서비스<ept id="p2">](../csharp/tutorials/microservices.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This tutorial demonstrates building an ASP.NET Core microservice and hosting it in Docker.</source>
          <target state="translated">이 자습서에서는 ASP.NET Core 마이크로 서비스를 빌드하고 Docker에서 호스트하는 과정을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/getting-started/WeatherMicroservice)</ept>.</source>
          <target state="translated">빌드할 코드의 완성된 버전은 <bpt id="p1">[</bpt>GitHub의 core-docs 리포지토리<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/getting-started/WeatherMicroservice)</ept>에 있습니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Deploying to Containers</source>
          <target state="translated">컨테이너에 배포</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Running ASP.NET MVC Applications in Windows Docker Containers<ept id="p2">](../framework/docker/aspnetmvc.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Windows Docker 컨테이너에서 ASP.NET MVC 응용 프로그램 실행<ept id="p2">](../framework/docker/aspnetmvc.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This tutorial demonstrates how to deploy an existing ASP.NET MVC application in a Windows Docker Container.</source>
          <target state="translated">이 자습서에서는 Windows Docker 컨테이너에 기존 ASP.NET MVC 응용 프로그램을 배포하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/docker/MVCRandomAnswerGenerator)</ept>.</source>
          <target state="translated">빌드할 코드의 완성된 버전은 <bpt id="p1">[</bpt>GitHub의 core-docs 리포지토리<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/docker/MVCRandomAnswerGenerator)</ept>에 있습니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Running .NET Framework Console Applications in Windows Containers<ept id="p2">](../framework/docker/console.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Windows 컨테이너에서 .NET Framework 콘솔 응용 프로그램 실행<ept id="p2">](../framework/docker/console.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This tutorial demonstrates how to deploy and existing console application in a Windows container.</source>
          <target state="translated">이 자습서에서는 Windows 컨테이너에 기존 콘솔 응용 프로그램을 배포하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/docker/ConsoleRandomAnswerGenerator)</ept>.</source>
          <target state="translated">빌드할 코드의 완성된 버전은 <bpt id="p1">[</bpt>GitHub의 core-docs 리포지토리<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/docker/ConsoleRandomAnswerGenerator)</ept>에 있습니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>