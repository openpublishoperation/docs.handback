<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d15667bd55e69fd822684df9a81cc2c996ca039f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\language-reference\operators\toc.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">p1-ht</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">214e1abdc015cdf56410ded07c0f974a42fa580a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7db7ef5e03801b84e236912c6543a315b16fef91</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>C# Operators<ept id="p1">](index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>C# 연산자<ept id="p1">](index.md)</ept></target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>[] Operator<ept id="p1">](index-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>[] 연산자<ept id="p1">](index-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>() Operator<ept id="p1">](invocation-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>() 연산자<ept id="p1">](invocation-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>. Operator<ept id="p1">](member-access-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>. 연산자<ept id="p1">](member-access-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>:: Operator<ept id="p1">](namespace-alias-qualifer.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>:: 연산자<ept id="p1">](namespace-alias-qualifer.md)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>+ Operator<ept id="p1">](addition-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>+ 연산자<ept id="p1">](addition-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>- Operator<ept id="p1">](subtraction-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>- 연산자<ept id="p1">](subtraction-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>* Operator<ept id="p1">](multiplication-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>* 연산자<ept id="p1">](multiplication-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>/ Operator<ept id="p1">](division-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>/ 연산자<ept id="p1">](division-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>% Operator<ept id="p1">](modulus-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>% 연산자<ept id="p1">](modulus-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>&amp; Operator<ept id="p1">](and-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>&amp; 연산자<ept id="p1">](and-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>| Operator<ept id="p1">](or-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>| 연산자<ept id="p1">](or-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>^ Operator<ept id="p1">](xor-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>^ 연산자<ept id="p1">](xor-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>! Operator<ept id="p1">](logical-negation-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>! 연산자<ept id="p1">](logical-negation-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>~ Operator<ept id="p1">](bitwise-complement-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>~ 연산자<ept id="p1">](bitwise-complement-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>= Operator<ept id="p1">](assignment-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>= 연산자<ept id="p1">](assignment-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>&lt; Operator<ept id="p1">](less-than-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>&lt; 연산자<ept id="p1">](less-than-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>&gt; Operator<ept id="p1">](greater-than-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>&gt; 연산자<ept id="p1">](greater-than-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>?: Operator<ept id="p1">](conditional-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>?: 연산자<ept id="p1">](conditional-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>++ Operator<ept id="p1">](increment-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>++ 연산자<ept id="p1">](increment-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>-- Operator<ept id="p1">](decrement-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>-- 연산자<ept id="p1">](decrement-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>&amp;&amp; Operator<ept id="p1">](conditional-and-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>&amp;&amp; 연산자<ept id="p1">](conditional-and-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>|| Operator<ept id="p1">](conditional-or-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>|| 연산자<ept id="p1">](conditional-or-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>&lt;&lt; Operator<ept id="p1">](left-shift-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>&lt;&lt; 연산자<ept id="p1">](left-shift-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>&gt;&gt; Operator<ept id="p1">](right-shift-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>&gt;&gt; 연산자<ept id="p1">](right-shift-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>== Operator<ept id="p1">](equality-comparison-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>== 연산자<ept id="p1">](equality-comparison-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>!= Operator<ept id="p1">](not-equal-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>!= 연산자<ept id="p1">](not-equal-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>&lt;= Operator<ept id="p1">](less-than-equal-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>&lt;= 연산자<ept id="p1">](less-than-equal-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>&gt;= Operator<ept id="p1">](greater-than-equal-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>&gt;= 연산자<ept id="p1">](greater-than-equal-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>+= Operator<ept id="p1">](addition-assignment-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>+= 연산자<ept id="p1">](addition-assignment-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>-= Operator<ept id="p1">](subtraction-assignment-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>-= 연산자<ept id="p1">](subtraction-assignment-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>*= Operator<ept id="p1">](multiplication-assignment-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>*= 연산자<ept id="p1">](multiplication-assignment-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>/= Operator<ept id="p1">](division-assignment-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>/= 연산자<ept id="p1">](division-assignment-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>%= Operator<ept id="p1">](modulus-assignment-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>%= 연산자<ept id="p1">](modulus-assignment-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>&amp;= Operator<ept id="p1">](and-assignment-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>&amp;= 연산자<ept id="p1">](and-assignment-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>|= Operator<ept id="p1">](or-assignment-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>|= 연산자<ept id="p1">](or-assignment-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>^= Operator<ept id="p1">](xor-assignment-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>^= 연산자<ept id="p1">](xor-assignment-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>&lt;&lt;= Operator<ept id="p1">](left-shift-assignment-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>&lt;&lt;= 연산자<ept id="p1">](left-shift-assignment-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>&gt;&gt;= Operator<ept id="p1">](right-shift-assignment-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>&gt;&gt;= 연산자<ept id="p1">](right-shift-assignment-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>-&gt; Operator<ept id="p1">](dereference-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>-&gt; 연산자<ept id="p1">](dereference-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>?? Operator<ept id="p1">](null-conditional-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>?? 연산자<ept id="p1">](null-conditional-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>=&gt; Operator<ept id="p1">](lambda-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>=&gt; 연산자<ept id="p1">](lambda-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Null-conditional Operators (C# and Visual Basic)<ept id="p1">](null-conditional-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Null 조건부 연산자(C# 및 Visual Basic)<ept id="p1">](null-conditional-operators.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>