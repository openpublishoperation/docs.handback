<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec5619e164be44205060d790ba1dc66e261faf92</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\assembly-format.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6fec0761f8c0fe47b715caa0f978bbdcd050132</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8d15d44ca3191cc1e0e54fe0234341b0299397c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>.NET Assembly File Format</source>
          <target state="translated">Formato de arquivo do Assembly .NET</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>.NET Assembly File Format</source>
          <target state="translated">Formato de arquivo do Assembly .NET</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>.NET Assembly File Format</source>
          <target state="translated">Formato de arquivo do Assembly .NET</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The .NET platform defines a binary file format - “assembly” - that is used to fully-describe and contain .NET programs.</source>
          <target state="translated">A plataforma .NET define um formato de arquivo binário – "assembly" – que é usado para descrever completamente e conter programas .NET.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Assemblies are used for the programs themselves as well as any dependent libraries.</source>
          <target state="translated">Os assemblies são usados para os programas em si, bem como todas as bibliotecas dependentes.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A .NET program can be executed as one of more assemblies, with no other required artifacts, beyond the appropriate .NET runtime.</source>
          <target state="translated">Um programa .NET pode ser executado como um de mais assemblies, com nenhum outro artefato necessário, além do tempo de execução do .NET apropriado.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Native dependencies, including operating system APIs, are a separate concern and are not contained within the .NET assembly format, although are sometimes described with this format (for example, WinRT).</source>
          <target state="translated">As dependências nativas, incluindo APIs do sistema operacional, são uma preocupação separada e não estão contidas no formato de assembly do .NET, embora, às vezes, sejam descritas com esse formato (por exemplo, WinRT).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Each CLI component carries the metadata for declarations, implementations, and references specific to that component.</source>
          <target state="translated">Cada componente de CLI carrega os metadados para declarações, implementações e referências específicas para esse componente.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Therefore, the component-specific metadata is referred to as component metadata, and the resulting component is said to be self-describing – from ECMA 335 I.9.1, Components and assemblies.</source>
          <target state="translated">Portanto, os metadados específicos do componente são conhecidos como metadados de componente e o componente resultante deve ser autodescritivo – do ECMA 335 I.9.1, Componentes e assemblies.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The format is fully specified and standardized as ECMA 335.</source>
          <target state="translated">O formato é totalmente especificado e padronizado como ECMA 335.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>All .NET compilers and runtimes use this format.</source>
          <target state="translated">Todos os tempos de execução e compiladores .NET usam esse formato.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The presence of a documented and infrequently updated binary format has been a major benefit (arguably a requirement) for interoperatibility.</source>
          <target state="translated">A presença de um formato binário documentado e atualizado raramente foi uma grande vantagem (sem dúvida, um requisito) da interoperabilidade.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The format was last updated in a substantive way in 2005 (.NET 2.0) to accommodate generics and processor architecture.</source>
          <target state="translated">O formato foi atualizado de forma substancial pela última vez em 2005 (.NET 2.0) para acomodar os genéricos e a arquitetura do processador.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The format is CPU- and OS-agnostic.</source>
          <target state="translated">O formato é independente de CPU e sistema operacional.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It has been used as part of .NET runtimes that target many chips and CPUs.</source>
          <target state="translated">Ele tem sido usado como parte de tempos de execução do .NET que visam muitos chips e CPUs.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>While the format itself has Windows heritage, it is implementable on any operating system.</source>
          <target state="translated">Embora o formato em si tenha patrimônio do Windows, é implementável em qualquer sistema operacional.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It’s arguably most significant choice for OS interoperability is that most values are stored in little-endian format.</source>
          <target state="translated">Sua escolha indiscutivelmente mais significativa para a interoperabilidade do sistema operacional é que a maioria dos valores é armazenada no formato little endian.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It doesn’t have a specific affinity to machine pointer size (for example, 32-bit, 64-bit).</source>
          <target state="translated">Ele não tem uma afinidade específica para o tamanho do ponteiro de computador (por exemplo, 32 bits, 64 bits).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The .NET assembly format is also very descriptive about the structure of a given program or library.</source>
          <target state="translated">O formato do assembly .NET também é muito descritivo sobre a estrutura de um determinado programa ou biblioteca.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It describes the internal components of an assembly, specifically: assembly references and types defined and their internal structure.</source>
          <target state="translated">Ele descreve os componentes internos de um assembly, especificamente: referências de assembly e tipos definidos e suas estruturas internas.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Tools or APIs can read and process this information for display or to make programmatic decisions.</source>
          <target state="translated">APIs ou ferramentas podem ler e processar essas informações para exibição ou para tomar decisões de programação.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Formatar</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The .NET binary format is based on the Windows <bpt id="p1">[</bpt>PE file<ept id="p1">](http://en.wikipedia.org/wiki/Portable_Executable)</ept> format.</source>
          <target state="translated">O formato binário do .NET se baseia no formato de <bpt id="p1">[</bpt>arquivo PE<ept id="p1">](http://en.wikipedia.org/wiki/Portable_Executable)</ept> do Windows.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In fact, .NET class libraries are conformant Windows PEs, and appear on first glance to be Windows dynamic link libraries (DLLs) or application executables (EXEs).</source>
          <target state="translated">Na verdade, as bibliotecas de classes do .NET são compatíveis com PEs do Windows e, a primeira vista, parecem ser DLLs (bibliotecas de vínculo dinâmico) do Windows ou EXEs (executáveis) de aplicativo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This is a very useful characteristic on Windows, where they can masquerade as native executable binaries and get some of the same treatment (for example, OS load, PE tools).</source>
          <target state="translated">Essa é uma característica muito útil no Windows, no qual elas podem se mascarar como binários executáveis nativos e obter parte do mesmo tratamento (por exemplo, o carregamento do sistema operacional, ferramentas PE).</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Assembly headers</source>
          <target state="translated">Cabeçalhos de assembly</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Assembly Headers from ECMA 335 II.25.1, Structure of the runtime file format.</source>
          <target state="translated">Cabeçalhos de assembly do ECMA 335 II.25.1, Estrutura do formato de arquivo do tempo de execução.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Processing the Assemblies</source>
          <target state="translated">Processando os assemblies</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It is possible to write tools or APIs to process assemblies.</source>
          <target state="translated">É possível escrever APIs ou ferramentas para processar assemblies.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Assembly information enables making programmatic decisions at runtime, re-writing assemblies, providing API IntelliSense in an editor and generating documentation.</source>
          <target state="translated">As informações do assembly permitem tomar decisões de programação no tempo de execução, reescrever os assemblies, fornecer o IntelliSense de API em um editor e gerar a documentação.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Reflection<ept id="p1">](https://msdn.microsoft.com/library/system.reflection.aspx)</ept> and <bpt id="p2">[</bpt>Mono.Cecil<ept id="p2">](http://www.mono-project.com/docs/tools+libraries/libraries/Mono.Cecil/)</ept> are good examples of tools that are frequently used for this purpose.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Reflection<ept id="p1">](https://msdn.microsoft.com/library/system.reflection.aspx)</ept> e <bpt id="p2">[</bpt>Mono.Cecil<ept id="p2">](http://www.mono-project.com/docs/tools+libraries/libraries/Mono.Cecil/)</ept> são bons exemplos de ferramentas que frequentemente são usadas para essa finalidade.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>