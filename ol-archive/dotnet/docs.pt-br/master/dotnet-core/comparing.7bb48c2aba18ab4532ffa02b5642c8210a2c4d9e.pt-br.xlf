<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47ee37886fa2662a89730e9d52ee04987e37da2f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\comparing.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3aeee026d9f0ea2e26a1046cdf56947244e4cb89</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e38260c2022fae2c9830d20fd6e648d4e819c0c0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Comparing strings</source>
          <target state="translated">Comparando cadeias de caracteres</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Comparing strings</source>
          <target state="translated">Comparando cadeias de caracteres</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Comparing strings</source>
          <target state="translated">Comparando cadeias de caracteres</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>.NET provides several methods to compare the values of strings.</source>
          <target state="translated">O .NET fornece vários métodos para comparar os valores de cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The following table lists and describes the value-comparison methods.</source>
          <target state="translated">A tabela a seguir lista e descreve os métodos de comparação de valores.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Method name</source>
          <target state="translated">Nome do método</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">Use</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Compares the values of two strings.</source>
          <target state="translated">Compara os valores das duas cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">Retorna um valor inteiro.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Compares two strings without regard to local culture.</source>
          <target state="translated">Compara duas cadeias de caracteres sem considerar a cultura local.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">Retorna um valor inteiro.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Compares the current string object to another string.</source>
          <target state="translated">Compara o objeto atual de cadeia de caracteres a outra cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">Retorna um valor inteiro.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.StartsWith<ept id="p1">](xref:System.String.StartsWith(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.StartsWith<ept id="p1">](xref:System.String.StartsWith(System.String))</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Determines whether a string begins with the string passed.</source>
          <target state="translated">Determina se uma cadeia de caracteres começa com a cadeia de caracteres passada.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value.</source>
          <target state="translated">Representa um valor Booliano.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.EndsWith<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.EndsWith<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Determines whether a string ends with the string passed.</source>
          <target state="translated">Determina se uma cadeia de caracteres termina com a cadeia de caracteres passada.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value.</source>
          <target state="translated">Representa um valor Booliano.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Equals<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Equals<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Determines whether two strings are the same.</source>
          <target state="translated">Determina se duas cadeias de caracteres são iguais.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value.</source>
          <target state="translated">Representa um valor Booliano.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.IndexOf<ept id="p1">](xref:System.String.IndexOf(System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.IndexOf<ept id="p1">](xref:System.String.IndexOf(System.Char))</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns the index position of a character or string, starting from the beginning of the string you are examining.</source>
          <target state="translated">Retorna a posição do índice de um caractere ou uma cadeia de caracteres, começando do início da cadeia de caracteres que você está examinando.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">Retorna um valor inteiro.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.LastIndexOf<ept id="p1">](xref:System.String.LastIndexOf(System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.LastIndexOf<ept id="p1">](xref:System.String.LastIndexOf(System.Char))</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns the index position of a character or string, starting from the end of the string you are examining.</source>
          <target state="translated">Retorna a posição do índice de um caractere ou uma cadeia de caracteres, começando do fim da cadeia de caracteres que você está examinando.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">Retorna um valor inteiro.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Compare</source>
          <target state="translated">Comparar</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The static <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method provides a thorough way of comparing two strings.</source>
          <target state="translated">O método estático <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> fornece uma maneira completa de comparar duas cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This method is culturally aware.</source>
          <target state="translated">Esse método é cultural.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can use this function to compare two strings or substrings of two strings.</source>
          <target state="translated">Você pode usar essa função para comparar duas cadeias de caracteres ou subcadeias de duas cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Additionally, overloads are provided that regard or disregard case and cultural variance.</source>
          <target state="translated">Além disso, sobrecargas são fornecidas para considerar ou ignorar a variação cultural ou de caso.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following table shows the three integer values that this method might return.</source>
          <target state="translated">A tabela a seguir mostra os três valores inteiros que esse método pode retornar.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Return value</source>
          <target state="translated">Valor retornado</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Condition</source>
          <target state="translated">Condição</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A negative integer</source>
          <target state="translated">Um inteiro negativo</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The first string precedes the second string in the sort order, or the first string is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">A primeira cadeia de caracteres precede a segunda cadeia de caracteres na ordem de classificação ou a primeira cadeia de caracteres é <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The first string and the second string are equal, or both strings are <ph id="ph1">`null`</ph>.</source>
          <target state="translated">A primeira cadeia de caracteres e a segunda cadeia de caracteres são iguais ou ambas são <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A positive integer, or 1</source>
          <target state="translated">Um número inteiro positivo ou 1</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The first string follows the second string in the sort order, or the second string is null.</source>
          <target state="translated">A primeira cadeia de caracteres precede a segunda cadeia de caracteres na ordem de classificação ou a segunda cadeia de caracteres é nula.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method is primarily intended for use when ordering or sorting strings.</source>
          <target state="translated">O método <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> destina-se principalmente para uso em ordenação ou classificação de cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You should not use the <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method to test for equality (that is, to explicitly look for a return value of 0 with no regard for whether one string is less than or greater than the other).</source>
          <target state="translated">Você não deve usar o método <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> para testar a igualdade (ou seja, para procurar explicitamente um valor retornado de 0 sem considerar se uma cadeia de caracteres é menor que ou maior que a outra).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Instead, to determine whether two strings are equal, use the <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept> method.</source>
          <target state="translated">Em vez disso, para determinar se duas cadeias de caracteres são iguais, use o método <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method to determine the relative values of two strings.</source>
          <target state="translated">O exemplo a seguir usa o método <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> para determinar os valores relativos das duas cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`-1`</ph> to the console.</source>
          <target state="translated">Este exemplo exibe <ph id="ph1">`-1`</ph> no console.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>CompareOrdinal</source>
          <target state="translated">CompareOrdinal</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method compares two string objects without considering the local culture.</source>
          <target state="translated">O método <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> compara dois objetos de cadeia de caracteres sem considerar a cultura local.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The return values of this method are identical to the values returned by the <ph id="ph1">`Compare`</ph> method in the previous table.</source>
          <target state="translated">Os valores de retorno desse método são idênticos aos valores retornados pelo método <ph id="ph1">`Compare`</ph> na tabela anterior.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method is primarily intended for use when ordering or sorting strings.</source>
          <target state="translated">O método <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> destina-se principalmente para uso em ordenação ou classificação de cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You should not use the <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method to test for equality (that is, to explicitly look for a return value of 0 with no regard for whether one string is less than or greater than the other).</source>
          <target state="translated">Você não deve usar o método <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> para testar a igualdade (ou seja, para procurar explicitamente um valor retornado de 0 sem considerar se uma cadeia de caracteres é menor ou maior que a outra).</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Instead, to determine whether two strings are equal, use the <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept> method.</source>
          <target state="translated">Em vez disso, para determinar se duas cadeias de caracteres são iguais, use o método <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`CompareOrdinal`</ph> method to compare the values of two strings.</source>
          <target state="translated">O exemplo a seguir usa o método <ph id="ph1">`CompareOrdinal`</ph> para comparar os valores de duas cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`-32`</ph> to the console.</source>
          <target state="translated">Este exemplo exibe <ph id="ph1">`-32`</ph> no console.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>CompareTo</source>
          <target state="translated">CompareTo</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method compares the string that the current string object encapsulates to another string or object.</source>
          <target state="translated">O método <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> compara a cadeia de caracteres que o objeto atual de cadeia de caracteres encapsula com outro objeto ou cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The return values of this method are identical to the values returned by the <ph id="ph1">`String.Compare`</ph> method in the previous table.</source>
          <target state="translated">Os valores de retorno desse método são idênticos aos valores retornados pelo método <ph id="ph1">`String.Compare`</ph> na tabela anterior.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method is primarily intended for use when ordering or sorting strings.</source>
          <target state="translated">O método <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> destina-se principalmente para uso em ordenação ou classificação de cadeias de caracteres.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You should not use the <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method to test for equality (that is, to explicitly look for a return value of 0 with no regard for whether one string is less than or greater than the other).</source>
          <target state="translated">Você não deve usar o método <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> para testar a igualdade (ou seja, para procurar explicitamente um valor retornado de 0 sem considerar se uma cadeia de caracteres é menor ou maior que a outra).</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Instead, to determine whether two strings are equal, use the <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept> method.</source>
          <target state="translated">Em vez disso, para determinar se duas cadeias de caracteres são iguais, use o método <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`String.CompareTo`</ph> method to compare the <ph id="ph2">`string1`</ph> object to the <ph id="ph3">`string2`</ph> object.</source>
          <target state="translated">O exemplo a seguir usa o método <ph id="ph1">`String.CompareTo`</ph> para comparar o objeto <ph id="ph2">`string1`</ph> ao objeto <ph id="ph3">`string2`</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`-1`</ph> to the console.</source>
          <target state="translated">Este exemplo exibe <ph id="ph1">`-1`</ph> no console.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="translated">Igual a</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.Equals<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method can easily determine if two strings are the same.</source>
          <target state="translated">O método <bpt id="p1">[</bpt>String.Equals<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> pode facilmente determinar se duas cadeias de caracteres são as mesmas.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This case-sensitive method returns a <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph> Boolean value.</source>
          <target state="translated">Esse método que diferencia maiúsculas de minúsculas retorna um valor Booliano <ph id="ph1">`true`</ph> ou <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>It can be used from an existing class, as illustrated in the next example.</source>
          <target state="translated">Ele pode ser usado de uma classe existente, conforme ilustrado no exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`Equals`</ph> method to determine whether a string object contains the phrase "Hello World".</source>
          <target state="translated">O exemplo a seguir usa o método <ph id="ph1">`Equals`</ph> para determinar se um objeto de cadeia de caracteres contém a frase "Hello World".</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`true`</ph> to the console.</source>
          <target state="translated">Este exemplo exibe <ph id="ph1">`true`</ph> no console.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This method can also be used as a static method.</source>
          <target state="translated">Esse método também pode ser usado como um método estático.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The following example compares two string objects using a static method.</source>
          <target state="translated">O exemplo a seguir compara dois objetos de cadeia de caracteres usando um método estático.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`true`</ph> to the console.</source>
          <target state="translated">Este exemplo exibe <ph id="ph1">`true`</ph> no console.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>StartsWith and EndsWith</source>
          <target state="translated">StartsWith e EndsWith</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>String.StartsWith<ept id="p1">](xref:System.String.StartsWith(System.String))</ept> method to determine whether a string object begins with the same characters that encompass another string.</source>
          <target state="translated">Você pode usar o método <bpt id="p1">[</bpt>String.StartsWith<ept id="p1">](xref:System.String.StartsWith(System.String))</ept> para determinar se um objeto de cadeia de caracteres começa com os mesmos caracteres que englobam outra cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This case-sensitive method returns <ph id="ph1">`true`</ph> if the current string object begins with the passed string and <ph id="ph2">`false`</ph> if it does not.</source>
          <target state="translated">Esse método que diferencia maiúsculas de minúsculas retorna <ph id="ph1">`true`</ph> se o objeto atual de cadeia de caracteres começa com a cadeia de caracteres passada e <ph id="ph2">`false`</ph> se não existir.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The following example uses this method to determine if a string object begins with "Hello".</source>
          <target state="translated">O exemplo a seguir usa esse método para determinar se um objeto de cadeia de caracteres começa com "Hello".</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`true`</ph> to the console.</source>
          <target state="translated">Este exemplo exibe <ph id="ph1">`true`</ph> no console.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.EndsWith<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method compares a passed string to the characters that exist at the end of the current string object.</source>
          <target state="translated">O método <bpt id="p1">[</bpt>String.EndsWith<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> compara uma cadeia de caracteres passada com os caracteres que existem no final do objeto de cadeia de caracteres atual.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>It also returns a Boolean value.</source>
          <target state="translated">Ele também retorna um valor Booliano.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The following example checks the end of a string using the <ph id="ph1">`EndsWith`</ph> method.</source>
          <target state="translated">O exemplo a seguir verifica o fim de uma cadeia de caracteres usando o método <ph id="ph1">`EndsWith`</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`false`</ph> to the console.</source>
          <target state="translated">Este exemplo exibe <ph id="ph1">`false`</ph> no console.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>IndexOf and LastIndexOf</source>
          <target state="translated">IndexOf e LastIndexOf</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>String.IndexOf<ept id="p1">](xref:System.String.IndexOf(System.Char))</ept> method to determine the position of the first occurrence of a particular character within a string.</source>
          <target state="translated">Você pode usar o método <bpt id="p1">[</bpt>String.IndexOf<ept id="p1">](xref:System.String.IndexOf(System.Char))</ept> para determinar a posição da primeira ocorrência de um determinado caractere dentro de uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This case-sensitive method starts counting from the beginning of a string and returns the position of a passed character using a zero-based index.</source>
          <target state="translated">Esse método que diferencia maiúsculas de minúsculas inicia a contagem do início de uma cadeia de caracteres e retorna a posição de um caractere passado usando um índice baseado em zero.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If the character cannot be found, a value of –1 is returned.</source>
          <target state="translated">Se o caractere não for encontrado, um valor de -1 será retornado.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`IndexOf`</ph> method to search for the first occurrence of the '<ph id="ph2">`l`</ph>' character in a string.</source>
          <target state="translated">O exemplo a seguir usa o método <ph id="ph1">`IndexOf`</ph> para pesquisar a primeira ocorrência do caractere '<ph id="ph2">`l`</ph>' em uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`2`</ph> to the console.</source>
          <target state="translated">Este exemplo exibe <ph id="ph1">`2`</ph> no console.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.LastIndexOf<ept id="p1">](xref:System.String.LastIndexOf(System.Char))</ept> method is similar to the <ph id="ph1">`String.IndexOf`</ph> method except that it returns the position of the last occurrence of a particular character within a string.</source>
          <target state="translated">O método <bpt id="p1">[</bpt>String.LastIndexOf<ept id="p1">](xref:System.String.LastIndexOf(System.Char))</ept> é semelhante ao método <ph id="ph1">`String.IndexOf`</ph>, exceto que ele retorna a posição da última ocorrência de um determinado caractere dentro de uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>It is case-sensitive and uses a zero-based index.</source>
          <target state="translated">Ele diferencia maiúsculas de minúsculas e usa um índice baseado em zero.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`LastIndexOf`</ph> method to search for the last occurrence of the '<ph id="ph2">`l`</ph>' character in a string.</source>
          <target state="translated">O exemplo a seguir usa o método <ph id="ph1">`LastIndexOf`</ph> para pesquisar a última ocorrência do caractere '<ph id="ph2">`l`</ph>' em uma cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`9`</ph> to the console.</source>
          <target state="translated">Este exemplo exibe <ph id="ph1">`9`</ph> no console.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Both methods are useful when used in conjunction with the <bpt id="p1">[</bpt>String.Remove<ept id="p1">](xref:System.String.Remove(System.Int32))</ept> method.</source>
          <target state="translated">Os dois métodos são úteis quando usados em conjunto com o método <bpt id="p1">[</bpt>String.Remove<ept id="p1">](xref:System.String.Remove(System.Int32))</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>You can use either the <ph id="ph1">`IndexOf`</ph> or <ph id="ph2">`LastIndexOf`</ph> methods to retrieve the position of a character, and then supply that position to the <ph id="ph3">`Remove method`</ph> in order to remove a character or a word that begins with that character.</source>
          <target state="translated">Você pode usar tanto o método <ph id="ph1">`IndexOf`</ph> quanto o <ph id="ph2">`LastIndexOf`</ph> para recuperar a posição de um caractere e, em seguida, fornecer essa posição para o <ph id="ph3">`Remove method`</ph> para remover um caractere ou uma palavra que começa com esse caractere.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic string operations<ept id="p1">](basic-string-operations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operações básicas de cadeias de caracteres<ept id="p1">](basic-string-operations.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>