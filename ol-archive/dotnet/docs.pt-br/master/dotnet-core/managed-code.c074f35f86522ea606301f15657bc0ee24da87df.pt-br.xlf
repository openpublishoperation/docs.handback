<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f761c4fc24b8d22d8d1f8116745ebb3f6583378</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\managed-code.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">513b6ebcb3c3c63aeea316754c129ca9772f5fac</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">00f4918a9530160bdb8a002b1989eb1eb8df4ec7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>What is “managed code”?</source>
          <target state="translated">O que é “código gerenciado”?</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>What is “managed code”?</source>
          <target state="translated">O que é “código gerenciado”?</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>What is “managed code”?</source>
          <target state="translated">O que é “código gerenciado”?</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When working with .NET Framework, you will often encounter the term “managed code”.</source>
          <target state="translated">Ao trabalhar com o .NET Framework, geralmente você encontrará o termo “código gerenciado”.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This document will explain what this term means and additional information around it.</source>
          <target state="translated">Este documento explicará o que esse termo significa e obterá informações adicionais sobre ele.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To put it very simply, managed code is just that: code whose execution is managed by a runtime.</source>
          <target state="translated">Em resumo, código gerenciado é exatamente isso: código cuja execução é gerenciada por um tempo de execução.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In this case, the runtime in question is called the <bpt id="p1">**</bpt>Common Language Runtime<ept id="p1">**</ept> or CLR, regardless of the implementation (<bpt id="p2">[</bpt>Mono<ept id="p2">](http://www.mono-project.com/)</ept> or .NET Framework or .NET Core).</source>
          <target state="translated">Nesse caso, o tempo de execução em questão é chamado de <bpt id="p1">**</bpt>Common Language Runtime<ept id="p1">**</ept> ou CLR, independentemente da implementação (<bpt id="p2">[</bpt>Mono<ept id="p2">](http://www.mono-project.com/)</ept> ou do .NET Framework ou .NET Core).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CLR is in charge of taking the managed code, compiling it into machine code and then executing it.</source>
          <target state="translated">CLR é responsável por pegar o código gerenciado, compilá-lo em código de computador e, em seguida, executá-lo.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>On top of that, runtime provides several important services such as automatic memory management, security boundaries, type safety etc.</source>
          <target state="translated">Além disso, o tempo de execução fornece vários serviços importantes, como gerenciamento automático de memória, limites de segurança, segurança de digitação etc.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Contrast this to the way you would run a C/C++ program, also called “unmanaged code”.</source>
          <target state="translated">Compare isso à maneira pela qual você executaria um programa C/C++, também chamado de "código não gerenciado".</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In the unmanaged world, the programmer is in charge of pretty much everything.</source>
          <target state="translated">No mundo não gerenciado, o programador é responsável por quase tudo.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The actual program is, essentially, a binary that the operating system (OS) loads into memory and starts.</source>
          <target state="translated">O programa real é, essencialmente, um binário que o sistema operacional (SO) carrega na memória e inicia.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Everything else, from memory management to security considerations are a burden of the programmer.</source>
          <target state="translated">Tudo, desde o gerenciamento da memória até as considerações de segurança, é responsabilidade do programador.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Managed code is written in one of the high-level languages that can be run on top of the .NET platform, such as C#, Visual Basic, F# and others.</source>
          <target state="translated">Código gerenciado é gravado em uma das linguagens de alto nível que podem ser executadas na plataforma do .NET, como C#, Visual Basic, F# e outros.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When you compile code written in those languages with their respective compiler, you don’t get machine code.</source>
          <target state="translated">Quando você compila o código gravado nessas linguagens com seu respectivo compilador, não obtém o código do computador.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You get <bpt id="p1">**</bpt>Intermediate Language<ept id="p1">**</ept> code which the runtime then compiles and executes.</source>
          <target state="translated">Você obtém o código de <bpt id="p1">**</bpt>Linguagem intermediária<ept id="p1">**</ept> que o tempo de execução compila e executa.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>C++ is the one exception to this rule, as it can also produce native, unmanaged binaries that run on Windows.</source>
          <target state="translated">C++ é a única exceção a essa regra, já que também pode produzir binários nativos e não gerenciados que são executados no Windows.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Intermediate Language &amp; execution</source>
          <target state="translated">Linguagem intermediária e execução</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>What is “Intermediate Language” (or IL for short)?</source>
          <target state="translated">O que é "Linguagem Intermediária" (ou IL)?</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It is a product of compilation of code written in high-level .NET languages.</source>
          <target state="translated">É um produto de compilação de código gravado em linguagens .NET de alto nível.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Once you compile your code written in one of these languages, you will get a binary that is made out of IL.</source>
          <target state="translated">Quando você compila o código gravado em uma dessas linguagens, obtém um binário composto de IL.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It is important to note that the IL is independent from any specific language that runs on top of the runtime; there is even a separate specification for it that you can read if you’re so inclined.</source>
          <target state="translated">É importante observar que a IL é independente de qualquer linguagem específica executada em tempo de execução; há até mesmo uma especificação separada para que você pode ler se desejar.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Once you produce IL from your high-level code, you will most likely want to run it.</source>
          <target state="translated">Depois de gerar a IL do código de alto nível, execute-o.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This is where the CLR takes over and starts the process of <bpt id="p1">**</bpt>Just-In-Time<ept id="p1">**</ept> compiling, or <bpt id="p2">**</bpt>JIT-ing<ept id="p2">**</ept> your code from IL to machine code that can actually be run on a CPU.</source>
          <target state="translated">Aqui, a CLR assume e inicia o processo de compilação <bpt id="p1">**</bpt>Just-In-Time<ept id="p1">**</ept> ou <bpt id="p2">**</bpt>colocando em compilação JIT<ept id="p2">**</ept> seu código da IL no código do computador, que pode ser executado em uma CPU.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In this way, the CLR knows exactly what your code is doing and can effectively <bpt id="p1">_</bpt>manage<ept id="p1">_</ept> it.</source>
          <target state="translated">Dessa forma, a CLR sabe exatamente o que o código está fazendo e pode, efetivamente, <bpt id="p1">_</bpt>gerenciá<ept id="p1">_</ept>-lo.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Intermediate Language is sometimes also called Common Intermediate Language (CIL) or Microsoft Intermediate Language (MSIL).</source>
          <target state="translated">A Linguagem intermediária também é chamada CIL (Common Intermediate Language) ou MSIL (Microsoft Intermediate Language).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Unmanaged code interoperability</source>
          <target state="translated">Interoperabilidade de código não gerenciado</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Of course, the CLR allows passing the boundaries between managed and unmanaged world, and there is a lot of code that does that, even in the <bpt id="p1">[</bpt>Base Class Libraries<ept id="p1">](framework-libraries.md)</ept>.</source>
          <target state="translated">Naturalmente, a CLR permite passar os limites entre o mundo gerenciado e o não gerenciado e há muitos códigos que fazem isso, mesmo nas <bpt id="p1">[</bpt>Bibliotecas de classes base<ept id="p1">](framework-libraries.md)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This is called <bpt id="p1">**</bpt>interoperability<ept id="p1">**</ept> or just <bpt id="p2">**</bpt>interop<ept id="p2">**</ept> for short.</source>
          <target state="translated">Isso é chamado de <bpt id="p1">**</bpt>interoperabilidade<ept id="p1">**</ept> ou apenas <bpt id="p2">**</bpt>interop<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>These provisions would allow you to, for example, wrap up an unmanaged library and call into it.</source>
          <target state="translated">Essas condições permitiriam, por exemplo, resumir uma biblioteca não gerenciada e chamá-la.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>However, it is important to note that once you do this, when the code passes the boundaries of the runtime, the actual management of the execution is again in the hand of unmanaged code, and thus falls under the same restrictions.</source>
          <target state="translated">No entanto, é importante observar que quando você faz isso, quando o código passa os limites do tempo de execução, o gerenciamento real da execução está novamente no código não gerenciado e, portanto, se enquadra nas mesmas restrições.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Similar to this, C# is one language that allows you to use unmanaged constructs such as pointers directly in code by utilizing what is known as <bpt id="p1">**</bpt>unsafe context<ept id="p1">**</ept> which designates a piece of code for which the execution is not managed by the CLR.</source>
          <target state="translated">Semelhante a isso, C# é uma linguagem que permite que você use construções não gerenciadas como ponteiros diretamente no código, utilizando o que é conhecido como <bpt id="p1">**</bpt>contexto inseguro<ept id="p1">**</ept> que designa um trecho de código para o qual a execução não é gerenciada pela CLR.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>More resources</source>
          <target state="translated">Mais recursos</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Framework Conceptual Overview<ept id="p1">](https://msdn.microsoft.com/library/zw4w595w.aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Visão geral conceitual do .NET Framework<ept id="p1">](https://msdn.microsoft.com/library/zw4w595w.aspx)</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Unsafe Code and Pointers<ept id="p1">](https://msdn.microsoft.com/library/t2yzs44b.aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Código não seguro e ponteiros<ept id="p1">](https://msdn.microsoft.com/library/t2yzs44b.aspx)</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Interoperability (C# Programming guide)<ept id="p1">](https://msdn.microsoft.com/library/ms173184.aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Interoperabilidade (Guia de Programação em C#)<ept id="p1">](https://msdn.microsoft.com/library/ms173184.aspx)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>