<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0ca64c3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9cb957973e68129194c998c88e398351b48819ec</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\packages.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1540136a04d932d6e14de4c38fca2901c1fa40c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">20b4eb0db47e407af02bedba6c10724129d958d1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Packages, Metapackages and Frameworks</source>
          <target state="translated">Pacotes, Metapacotes e Estruturas</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Packages, Metapackages and Frameworks</source>
          <target state="translated">Pacotes, Metapacotes e Estruturas</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Packages, Metapackages and Frameworks</source>
          <target state="translated">Pacotes, Metapacotes e Estruturas</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>.NET Core is a platform made of NuGet packages.</source>
          <target state="translated">O .NET Core é uma plataforma composta por pacotes NuGet.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Some product experiences benefit from fine-grained definition of packages while others from coarse-grained.</source>
          <target state="translated">Algumas experiências de produtos aproveitam melhor a definição refinada de pacotes, enquanto para outros a alta granularidade é melhor.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To accommodate this duality, the product is distributed as a fine-grained set of packages and then described in coarser chunks with a package type informally called a "metapackage".</source>
          <target state="translated">Para acomodar esse dualidade, o produto é distribuído como um conjunto refinado de pacotes, sendo então descrito como blocos mais volumosos com um tipo de pacote chamado informalmente de “metapacote”.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Each of the .NET Core packages support being run on multiple .NET runtimes, represented as frameworks.</source>
          <target state="translated">Cada um dos pacotes .NET Core dá suporte à execução de vários tempos de execução .NET, representados como estruturas.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Some of those frameworks are traditional frameworks, like <ph id="ph1">`net46`</ph>, representing the .NET Framework.</source>
          <target state="translated">Algumas dessas estruturas são tradicionais, como o <ph id="ph1">`net46`</ph>, que representa o .NET Framework.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Another set is new frameworks that can be thought of as "package-based frameworks", which establish a new model for defining frameworks.</source>
          <target state="translated">Outro conjunto são as novas estruturas que podem ser consideradas como "estruturas baseadas em pacote", que estabelecem um novo modelo para definir estruturas.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>These package-based frameworks are entirely formed and defined as packages, forming a strong relationship between packages and frameworks.</source>
          <target state="translated">Essas estruturas baseadas em pacote são totalmente formadas e definidas como pacotes, criando uma forte relação entre pacotes e estruturas.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Packages</source>
          <target state="translated">Pacotes</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>.NET Core is split into a set of packages, which provide primitives, higher-level data types, app composition types and common utilities.</source>
          <target state="translated">O .NET Core é dividido em um conjunto de pacotes, que fornecem tipos de dados primitivos de nível superior, tipos de composição de aplicativos e utilitários comuns.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Each of these packages represent a single assembly of the same name.</source>
          <target state="translated">Cada um desses pacotes representa um único assembly de mesmo nome.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">[</bpt>System.Runtime<ept id="p1">](https://www.nuget.org/packages/System.Runtime)</ept> contains System.Runtime.dll.</source>
          <target state="translated">Por exemplo, <bpt id="p1">[</bpt>System.Runtime<ept id="p1">](https://www.nuget.org/packages/System.Runtime)</ept> contém System.Runtime.dll.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>There are advantages to defining packages in a fine-grained manner:</source>
          <target state="translated">Há vantagens em definir pacotes de forma refinada:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Fine-grained packages can ship on their own schedule with relatively limited testing of other packages.</source>
          <target state="translated">Pacotes refinados podem ser fornecidos em seu próprio cronograma, com testes relativamente limitados de outros pacotes.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Fine-grained packages can provide differing OS and CPU support.</source>
          <target state="translated">Pacotes refinados podem fornecer suporte a sistemas operacionais e CPUs diferentes.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Fine-grained packages can have dependencies specific to only one library.</source>
          <target state="translated">Pacotes refinados podem ter dependências específicas em apenas uma biblioteca.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Apps are smaller because unreferenced packages don't become part of the app distribution.</source>
          <target state="translated">Os aplicativos são menores, pois os pacotes não referenciados não se tornam parte da distribuição do aplicativo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Some of these benefits are only used in certain circumstances.</source>
          <target state="translated">Alguns desses benefícios são usados somente em determinadas circunstâncias.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, NET Core packages will typically ship on the same schedule with the same platform support.</source>
          <target state="translated">Por exemplo, pacotes .NET Core geralmente são fornecidos no mesmo cronograma que o suporte de plataforma.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the case of servicing, fixes can be distributed and installed as small single package updates.</source>
          <target state="translated">No caso de manutenção, as correções podem ser distribuídas e instaladas como atualizações de único pacote pequeno.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Due to the narrow scope of change, the validation and time to make a fix available is limited to what is needed for a single library.</source>
          <target state="translated">Devido ao escopo restrito de alteração, a validação e o tempo para disponibilizar uma correção ficam limitados ao que é necessário para uma única biblioteca.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following is a list of the key NuGet packages for .NET Core:</source>
          <target state="translated">Veja a seguir uma lista dos principais pacotes NuGet para .NET Core:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Runtime<ept id="p1">](https://www.nuget.org/packages/System.Runtime)</ept> - The most fundamental .NET Core package, including <bpt id="p2">[</bpt>Object<ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Object)</ept>, <bpt id="p3">[</bpt>String<ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.String)</ept>, <bpt id="p4">[</bpt>Array<ept id="p4">](http://docs.microsoft.com/dotnet/core/api/System.Array)</ept>, <bpt id="p5">[</bpt>Action<ept id="p5">](http://docs.microsoft.com/dotnet/core/api/System.Action)</ept> and <bpt id="p6">[</bpt>IList<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p6">](http://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IList-1)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Runtime<ept id="p1">](https://www.nuget.org/packages/System.Runtime)</ept> – O pacote mais fundamental do .NET Core, incluindo <bpt id="p2">[</bpt>Object<ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Object)</ept>, <bpt id="p3">[</bpt>String<ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.String)</ept>, <bpt id="p4">[</bpt>Array<ept id="p4">](http://docs.microsoft.com/dotnet/core/api/System.Array)</ept>, <bpt id="p5">[</bpt>Action<ept id="p5">](http://docs.microsoft.com/dotnet/core/api/System.Action)</ept> e <bpt id="p6">[</bpt>IList<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p6">](http://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IList-1)</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://www.nuget.org/packages/System.Collections)</ept> - A set of (primarily) generic collections, including <bpt id="p2">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> and <bpt id="p3">[</bpt>Dictionary<ph id="ph3">&amp;lt;</ph>K,V<ph id="ph4">&amp;gt;</ph><ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://www.nuget.org/packages/System.Collections)</ept> – Um conjunto de coleções (primariamente) genéricas, incluindo <bpt id="p2">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> e <bpt id="p3">[</bpt>Dictionary<ph id="ph3">&amp;lt;</ph>K,V<ph id="ph4">&amp;gt;</ph><ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Net.Http<ept id="p1">](https://www.nuget.org/packages/System.Net.Http)</ept> - A set of types for HTTP network communication, including <bpt id="p2">[</bpt>HttpClient<ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Net.Http.HttpClient)</ept> and <bpt id="p3">[</bpt>HttpResponseMessage<ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.Net.Http.HttpResponseMessage)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Net.Http<ept id="p1">](https://www.nuget.org/packages/System.Net.Http)</ept> – Um conjunto de tipos para comunicação de rede HTTP, incluindo <bpt id="p2">[</bpt>HttpClient<ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Net.Http.HttpClient)</ept> e <bpt id="p3">[</bpt>HttpResponseMessage<ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.Net.Http.HttpResponseMessage)</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.IO.FileSystem<ept id="p1">](https://www.nuget.org/packages/System.IO.FileSystem)</ept> - A set of types for reading and writing to local or networked disk-based storage, including <bpt id="p2">[</bpt>File<ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.IO.File)</ept> and <bpt id="p3">[</bpt>Directory<ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.IO.Directory)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.IO.FileSystem<ept id="p1">](https://www.nuget.org/packages/System.IO.FileSystem)</ept> – Um conjunto de tipos para leitura e gravação para o armazenamento de disco local ou em rede, incluindo <bpt id="p2">[</bpt>File<ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.IO.File)</ept> e <bpt id="p3">[</bpt>Directory<ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.IO.Directory)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Linq<ept id="p1">](https://www.nuget.org/packages/System.Linq)</ept> - A set of types for querying objects, including Enumerable and <bpt id="p2">[</bpt>ILookup<ph id="ph1">&amp;lt;</ph>TKey, TElement<ph id="ph2">&amp;gt;</ph><ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Linq.ILookup-2)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Linq<ept id="p1">](https://www.nuget.org/packages/System.Linq)</ept> – Um conjunto de tipos para consultar os objetos, inclusive Enumerable e <bpt id="p2">[</bpt>ILookup<ph id="ph1">&amp;lt;</ph>TKey, TElement<ph id="ph2">&amp;gt;</ph><ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Linq.ILookup-2)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Reflection<ept id="p1">](https://www.nuget.org/packages/System.Reflection)</ept> - A set of types for loading, inspecting and activating types, including <bpt id="p2">[</bpt>Assembly<ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Reflection.Assembly)</ept>, <bpt id="p3">[</bpt>TypeInfo<ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.Reflection.TypeInfo)</ept> and <bpt id="p4">[</bpt>MethodInfo<ept id="p4">](http://docs.microsoft.com/dotnet/core/api/System.Reflection.MethodInfo)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Reflection<ept id="p1">](https://www.nuget.org/packages/System.Reflection)</ept> – Um conjunto de tipos para carregar, inspecionar e ativar tipos, incluindo <bpt id="p2">[</bpt>Assembly<ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Reflection.Assembly)</ept>, <bpt id="p3">[</bpt>TypeInfo<ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.Reflection.TypeInfo)</ept> e <bpt id="p4">[</bpt>MethodInfo<ept id="p4">](http://docs.microsoft.com/dotnet/core/api/System.Reflection.MethodInfo)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Typically, rather than including packages in your projects on a package-by-package basis, it is far easier to include a <bpt id="p1">*</bpt>metapackage<ept id="p1">*</ept>, which is a set of packages that are often used together.</source>
          <target state="translated">Normalmente, em vez de incluir um pacote de cada vez nos projetos, é muito mais fácil incluir um <bpt id="p1">*</bpt>metapacote<ept id="p1">*</ept>, que é um conjunto de pacotes que costumam ser usados juntos.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>(For more information on metapackages, see the following section.) However, when you need a single package, you can include it as in the example below, which references the <bpt id="p1">[</bpt>System.Runtime<ept id="p1">](https://www.nuget.org/packages/System.Runtime/)</ept> package.</source>
          <target state="translated">(Para obter mais informações sobre metapacotes, consulte a seção a seguir.) No entanto, quando você precisa de um único pacote, é possível incluí-lo como no exemplo a seguir, que referencia o pacote <bpt id="p1">[</bpt>System.Runtime<ept id="p1">](https://www.nuget.org/packages/System.Runtime/)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Metapackages</source>
          <target state="translated">Metapacotes</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Metapackages are a NuGet package convention for describing a set of packages that are meaningful together.</source>
          <target state="translated">Metapacotes são uma convenção de pacotes NuGet para descrever um conjunto de pacotes que são significativos juntos.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>They represent this set of packages by making them dependencies.</source>
          <target state="translated">Eles representam esse conjunto de pacotes tornando-os dependências.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>They can optionally establish a framework for this set of packages by specifying a framework.</source>
          <target state="translated">Opcionalmente, eles podem estabelecer uma estrutura para esse conjunto de pacotes especificando-a.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Previous versions of the .NET Core tools (both project.json and csproj-based tools) by default specified both a framework and a metapackage.</source>
          <target state="translated">Por padrão, as versões anteriores das ferramentas do .NET Core (ferramentas baseadas em project.json e csproj) especificavam uma estrutura e um metapacote.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Currently, however, the metapackage is implicitly referenced by the target framework, so that each metapackage is tied to a target framework.</source>
          <target state="translated">Atualmente, no entanto, o metapacote é referenciado implicitamente pela estrutura de destino, para que cada metapacote seja vinculado a uma estrutura de destino.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">`netstandard1.6`</ph> framework references the NetStandard.Library version 1.6.0 metapackage.</source>
          <target state="translated">Por exemplo, a estrutura <ph id="ph1">`netstandard1.6`</ph> referencia o metapacote NetStandard.Library versão 1.6.0.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Similarly, the <ph id="ph1">`netcoreapp1.1`</ph> framework references the Microsoft.NETCore.App Version 1.1.0 metapackage.</source>
          <target state="translated">Da mesma forma, a estrutura <ph id="ph1">`netcoreapp1.1`</ph> referencia o metapacote Microsoft.NETCore.App Versão 1.1.0.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Implicit metapackage package reference in the .NET Core SDK<ept id="p1">](https://github.com/dotnet/core/blob/master/release-notes/1.0/sdk/1.0-rc3-implicit-package-refs.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>Referência implícita de pacote de metapacote no SDK do .NET Core<ept id="p1">](https://github.com/dotnet/core/blob/master/release-notes/1.0/sdk/1.0-rc3-implicit-package-refs.md)</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Targeting a framework and implicitly referencing a metapackage means that you in effect are adding a reference to each of its dependent packages as a single gesture.</source>
          <target state="translated">Definir uma estrutura como destino e referenciar um metapacote implicitamente significa que você, na verdade, está adicionando uma referência a cada um de seus pacotes dependentes como um único gesto.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>That makes all of the libraries in those packages available for IntelliSense (or similar experience) and for publishing your app.</source>
          <target state="translated">Isso disponibiliza todas as bibliotecas nesses pacotes para o IntelliSense (ou uma experiência semelhante) e para publicação do aplicativo.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>There are advantages to using metapackages:</source>
          <target state="translated">Há vantagens em usar metapacotes:</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Provides a convenient user experience to reference a large set of fine-grained packages.</source>
          <target state="translated">Fornece uma experiência de usuário conveniente para fazer referência a um grande conjunto de pacotes refinados.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Defines a set of packages (including specific versions) that are tested and work well together.</source>
          <target state="translated">Define um conjunto de pacotes (incluindo versões específicas) que são testados e funcionam bem em conjunto.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The .NET Standard Library metapackage is:</source>
          <target state="translated">O metapacote da Biblioteca Padrão do .NET é:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>NETStandard.Library<ept id="p1">](https://www.nuget.org/packages/NETStandard.Library)</ept> - Describes the libraries that are part of the ".NET Standard Library".</source>
          <target state="translated"><bpt id="p1">[</bpt>NETStandard.Library<ept id="p1">](https://www.nuget.org/packages/NETStandard.Library)</ept> – Descreve as bibliotecas que fazem parte da “.NET Standard Library”.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Applies to all .NET implementations (for example, .NET Framework, .NET Core and Mono) that support the .NET Standard Library.</source>
          <target state="translated">Aplica-se a todas as implementações do .NET (por exemplo, .NET Framework, .NET Core e Mono) que dão suporte à .NET Standard Library.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Establishes the 'netstandard' framework.</source>
          <target state="translated">Estabelece a estrutura “netstandard”.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The key .NET Core metapackages are:</source>
          <target state="translated">Os principais metapacotes do .NET Core são:</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft.NETCore.App<ept id="p1">](https://www.nuget.org/packages/Microsoft.NETCore.App)</ept> - Describes the libraries that are part of the .NET Core distribution.</source>
          <target state="translated"><bpt id="p1">[</bpt>Microsoft.NETCore.App<ept id="p1">](https://www.nuget.org/packages/Microsoft.NETCore.App)</ept> – Descreve as bibliotecas que fazem parte da distribuição do .NET Core.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Establishes the <bpt id="p1">[</bpt><ph id="ph1">`.NETCoreApp`</ph> framework<ept id="p1">](https://github.com/dotnet/core-setup/blob/master/pkg/projects/Microsoft.NETCore.App/Microsoft.NETCore.App.pkgproj)</ept>.</source>
          <target state="translated">Estabelece a estrutura <bpt id="p1">[</bpt><ph id="ph1">`.NETCoreApp`</ph><ept id="p1">](https://github.com/dotnet/core-setup/blob/master/pkg/projects/Microsoft.NETCore.App/Microsoft.NETCore.App.pkgproj)</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Depends on the smaller <ph id="ph1">`NETStandard.Library`</ph>.</source>
          <target state="translated">Conta com o <ph id="ph1">`NETStandard.Library`</ph> menor.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft.NETCore.Portable.Compatibility<ept id="p1">](https://www.nuget.org/packages/Microsoft.NETCore.Portable.Compatibility)</ept> - A set of compatibility facades that enable mscorlib-based Portable Class Libraries (PCLs) to run on .NET Core.</source>
          <target state="translated"><bpt id="p1">[</bpt>Microsoft.NETCore.Portable.Compatibility<ept id="p1">](https://www.nuget.org/packages/Microsoft.NETCore.Portable.Compatibility)</ept> – Um conjunto de fachadas de compatibilidade que permitem que PCLs (Bibliotecas de Classes Portáteis) baseadas em mscorlib sejam executadas no .NET Core.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Frameworks</source>
          <target state="translated">Estruturas</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>.NET Core packages each support a set of runtime frameworks.</source>
          <target state="translated">Cada pacote do .NET Core dá suporte a um conjunto de estruturas de tempo de execução.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Frameworks describe an available API set (and potentially other characteristics) that you can rely on when you target a given framework.</source>
          <target state="translated">As estruturas descrevem um conjunto de APIs disponível (e possivelmente outras características) com os quais você pode contar ao direcionar uma determinada estrutura.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>They are versioned as new APIs are added.</source>
          <target state="translated">Eles têm controle de versão à medida que novas APIs são adicionadas.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">[</bpt>System.IO.FileSystem<ept id="p1">](https://www.nuget.org/packages/System.IO.FileSystem)</ept> supports the following frameworks:</source>
          <target state="translated">Por exemplo, <bpt id="p1">[</bpt>System.IO.FileSystem<ept id="p1">](https://www.nuget.org/packages/System.IO.FileSystem)</ept> dá suporte às seguintes estruturas:</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>.NETFramework,Version=4.6</source>
          <target state="translated">.NETFramework,Version=4.6</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>.NETStandard,Version=1.3</source>
          <target state="translated">.NETStandard,Version=1.3</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>6 Xamarin platforms (for example, xamarinios10)</source>
          <target state="translated">Plataformas&amp;6; Xamarin (por exemplo, xamarinios10)</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>It is useful to contrast the first two of these frameworks, since they are examples of the two different ways that frameworks are defined.</source>
          <target state="translated">É útil comparar essas duas primeiras estruturas, visto que elas são exemplos de duas formas diferentes de definir estruturas.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`.NETFramework,Version=4.6`</ph> framework represents the available APIs in the .NET Framework 4.6.</source>
          <target state="translated">A estrutura <ph id="ph1">`.NETFramework,Version=4.6`</ph> representa as APIs disponíveis no .NET Framework 4.6.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can produce libraries  compiled with the .NET Framework 4.6 reference assemblies and then distribute those libraries in NuGet packages in a net46 lib folder.</source>
          <target state="translated">Você pode gerar bibliotecas compiladas com os assemblies de referência do .NET Framework 4.6 e distribuí-las em pacotes NuGet em uma pasta lib net46.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>It will be used for apps that target the .NET Framework 4.6 or that are compatible with it.</source>
          <target state="translated">Ela será usada para aplicativos destinados ao .NET Framework 4.6 ou que são compatíveis com ele.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This is how all frameworks have traditionally worked.</source>
          <target state="translated">Essa é a maneira como todas as estruturas tradicionalmente funcionam.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`.NETStandard,Version=1.3`</ph> framework is a package-based framework.</source>
          <target state="translated">A estrutura <ph id="ph1">`.NETStandard,Version=1.3`</ph> é uma estrutura baseada em pacote.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>It relies on packages that target the framework to define and expose APIs in terms of the framework.</source>
          <target state="translated">Ela se baseia em pacotes direcionados para a estrutura definir e expor as APIs com relação à estrutura.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Package-based Frameworks</source>
          <target state="translated">Estruturas baseadas em pacote</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>There is a two-way relationship between frameworks and packages.</source>
          <target state="translated">Há uma relação bidirecional entre estruturas e pacotes.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The first part is defining the APIs available for a given framework, for example <ph id="ph1">`netstandard1.3`</ph>.</source>
          <target state="translated">A primeira parte é definir as APIs disponíveis para uma determinada estrutura, por exemplo <ph id="ph1">`netstandard1.3`</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Packages that target <ph id="ph1">`netstandard1.3`</ph> (or compatible frameworks, like <ph id="ph2">`netstandard1.0`</ph>) define the APIs available for <ph id="ph3">`netstandard1.3`</ph>.</source>
          <target state="translated">Pacotes direcionados a <ph id="ph1">`netstandard1.3`</ph> (ou estruturas compatíveis, como o <ph id="ph2">`netstandard1.0`</ph>) definem as APIs disponíveis para <ph id="ph3">`netstandard1.3`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>That may sound like a circular definition, but it isn't.</source>
          <target state="translated">Isso pode parecer uma definição circular, mas não é.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>By virtue of being "package-based", the API definition for the framework comes from packages.</source>
          <target state="translated">Por ser "baseada em pacote", a definição da API para a estrutura vem dos pacotes.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The framework itself doesn't define any APIs.</source>
          <target state="translated">A estrutura em si não define nenhuma APIs.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The second part of the relationship is asset selection.</source>
          <target state="translated">A segunda parte da relação é a seleção de ativo.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Packages can contain assets for multiple frameworks.</source>
          <target state="translated">Pacotes podem conter ativos para várias estruturas.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Given a reference to a set of packages and/or metapackages, the framework is needed to determine which asset should be selected, for example <ph id="ph1">`net46`</ph> or <ph id="ph2">`netstandard1.3`</ph>.</source>
          <target state="translated">Dada uma referência a um conjunto de pacotes e/ou metapacotes, a estrutura é necessária para determinar qual ativo será selecionado, por exemplo <ph id="ph1">`net46`</ph> ou <ph id="ph2">`netstandard1.3`</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>It is important to select the correct asset.</source>
          <target state="translated">É importante selecionar o ativo correto.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>For example, a <ph id="ph1">`net46`</ph> asset is not likely to be compatible with .NET Framework 4.0 or .NET Core 1.0.</source>
          <target state="translated">Por exemplo, um ativo <ph id="ph1">`net46`</ph> provavelmente não é compatível com .NET Framework 4.0 ou .NET Core 1.0.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Package-based Framework Composition</source>
          <target state="translated">Composição de estrutura baseada em pacote</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You can see this relationship in the image above.</source>
          <target state="translated">Você pode ver essa relação na imagem acima.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>API<ept id="p1">*</ept> targets and defines the <bpt id="p2">*</bpt>framework<ept id="p2">*</ept>.</source>
          <target state="translated">A <bpt id="p1">*</bpt>API<ept id="p1">*</ept> é voltada para a <bpt id="p2">*</bpt>estrutura<ept id="p2">*</ept> e a define.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>framework<ept id="p1">*</ept> is used for <bpt id="p2">*</bpt>asset selection<ept id="p2">*</ept>.</source>
          <target state="translated">A <bpt id="p1">*</bpt>estrutura<ept id="p1">*</ept> é usada para <bpt id="p2">*</bpt>seleção de ativo<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>asset<ept id="p1">*</ept> gives you the API.</source>
          <target state="translated">O <bpt id="p1">*</bpt>ativo<ept id="p1">*</ept> fornece a API.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The two primary package-based frameworks used with .NET Core are:</source>
          <target state="translated">As duas principais estruturas baseadas em pacote usadas com o .NET Core são:</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>.NET Standard</source>
          <target state="translated">.NET Standard</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The .NET Standard (target framework moniker: <ph id="ph1">`netstandard`</ph>) framework represents the APIs defined by and built on top of the <bpt id="p1">[</bpt>.NET Standard Library<ept id="p1">](../standard/library.md)</ept>.</source>
          <target state="translated">A estrutura Padrão do .NET (moniker de estrutura de destino: <ph id="ph1">`netstandard`</ph>) representa as APIs definidas pela <bpt id="p1">[</bpt>Biblioteca Padrão do .NET<ept id="p1">](../standard/library.md)</ept> e criadas com base nela.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Libraries that are intended to run on multiple runtimes should target this framework.</source>
          <target state="translated">Bibliotecas destinadas à execução em vários tempos de execução devem ter essa estrutura como destino.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>They will be supported on any .NET Standard compliant runtime, such as .NET Core, .NET Framework and Mono/Xamarin.</source>
          <target state="translated">Elas terão suporte em qualquer tempo de execução compatível com.NET Standard, como .NET Core, .NET Framework e Mono/Xamarin.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Each of these runtimes supports a set of .NET Standard versions, depending on which APIs they implement.</source>
          <target state="translated">Cada um desses tempos de execução dá suporte a um conjunto de versões do .NET Standard, dependendo de quais APIs eles implementam.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`netstandard`</ph> framework implicitly references the <ph id="ph2">`NETStandard.Library`</ph> metapackage.</source>
          <target state="translated">A estrutura <ph id="ph1">`netstandard`</ph> referencia implicitamente o metapacote <ph id="ph2">`NETStandard.Library`</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For example, the following MSBuild project file indicates that the project targets <ph id="ph1">`netstandard1.6`</ph>, which references the .NET Standard Library version 1.6 metapackage.</source>
          <target state="translated">Por exemplo, o arquivo de projeto do MSBuild a seguir indica que o projeto tem <ph id="ph1">`netstandard1.6`</ph> como destino, que referencia o metapacote da Biblioteca Padrão do .NET versão 1.6.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>However, the framework and metapackage references in the project file do not need to match, and you can use the <ph id="ph1">`&lt;NetStandardImplicitPackageVersion&gt;`</ph> element in your project file to specify a framework version that is lower than the metapackage version.</source>
          <target state="translated">No entanto, as referências de estrutura e de metapacote no arquivo de projeto não precisam ser correspondentes e é possível usar o elemento <ph id="ph1">`&lt;NetStandardImplicitPackageVersion&gt;`</ph> no arquivo de projeto para especificar uma versão de estrutura inferior à versão do metapacote.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For example, the following project file is valid.</source>
          <target state="translated">Por exemplo, o arquivo de projeto a seguir é válido.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>It may seem strange to target <ph id="ph1">`netstandard1.3`</ph> but use the 1.6.0 version of <ph id="ph2">`NETStandard.Library`</ph>.</source>
          <target state="translated">Pode parecer estranho apontar para <ph id="ph1">`netstandard1.3`</ph>, mas use a versão 1.6.0 do <ph id="ph2">`NETStandard.Library`</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>It is a valid use-case, since the metapackage maintains support for older <ph id="ph1">`netstandard`</ph> versions.</source>
          <target state="translated">Esse é um caso de uso válido, pois o metapacote mantém o suporte para versões mais antigas do <ph id="ph1">`netstandard`</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>It could be the case you've standardized on the 1.6.0 version of the metapackage and use it for all your libraries, which target a variety of <ph id="ph1">`netstandard`</ph> versions.</source>
          <target state="translated">Pode ser o caso de você já ter padronizado a versão 1.6.0 do metapacote e tê-la usado para todas as suas bibliotecas, que são voltadas para diversas versões do <ph id="ph1">`netstandard`</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>With this approach, you only need to restore <ph id="ph1">`NETStandard.Library`</ph> 1.6.0 and not earlier versions.</source>
          <target state="translated">Com essa abordagem, você só precisará restaurar a <ph id="ph1">`NETStandard.Library`</ph> 1.6.0 e não versões anteriores.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The reverse would not be valid: targeting <ph id="ph1">`netstandard1.6`</ph> with the 1.3.0 version of <ph id="ph2">`NETStandard.Library`</ph>.</source>
          <target state="translated">O inverso não seria válido: direcionar <ph id="ph1">`netstandard1.6`</ph> com a versão 1.3.0 do <ph id="ph2">`NETStandard.Library`</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>You cannot target a higher framework with a lower metapackage, since the lower version metapackage will not expose any assets for that higher framework.</source>
          <target state="translated">Você não pode direcionar uma estrutura mais elevada com um metapacote menos elevado, visto que a versão do metapacote inferior não exporá os ativos para essa estrutura superior.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The versioning scheme for metapackages asserts that metapackages match the highest version of the framework they describe.</source>
          <target state="translated">O esquema de controle de versão para metapacotes declara que os metapacotes correspondem à versão mais alta da estrutura descrita por eles.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>By virtue of the versioning scheme, the first version of <ph id="ph1">`NETStandard.Library`</ph> is v1.6.0 given that it contains <ph id="ph2">`netstandard1.6`</ph> assets.</source>
          <target state="translated">Devido a esse esquema de controle de versão, a primeira versão do <ph id="ph1">`NETStandard.Library`</ph> é v1.6.0, já que ele contém ativos <ph id="ph2">`netstandard1.6`</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>v1.3.0 is used in the example above, for symmetry with the example above, but does not actually exist.</source>
          <target state="translated">A versão&amp;1;.3.0 é usada no exemplo acima para fins de simetria, mas não existe na verdade.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>.NET Core Application</source>
          <target state="translated">.NET Core Application</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The .NET Core Application (TFM: <ph id="ph1">`netcoreapp`</ph>) framework represents the packages and associated APIs that come with the .NET Core distribution and the console application model that it provides.</source>
          <target state="translated">A estrutura .NET Core Application (TFM: <ph id="ph1">`netcoreapp`</ph>) representa os pacotes e APIs associadas que são fornecidos com a distribuição do .NET Core e o modelo de aplicativo de console que ela fornece.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>.NET Core apps must use this framework, due to targeting the console application model, as should libraries that intended to run only on .NET Core.</source>
          <target state="translated">Aplicativos .NET Core devem usar essa estrutura, devido ao direcionamento do modelo de aplicativo de console, assim como as bibliotecas que devem ser executados apenas em .NET Core.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Using this framework restricts apps and libraries to running only on .NET Core.</source>
          <target state="translated">Usar essa estrutura restringe a bibliotecas à execução apenas no .NET Core.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Microsoft.NETCore.App`</ph> metapackage targets the <ph id="ph2">`netcoreapp`</ph> framework.</source>
          <target state="translated">O metapacote <ph id="ph1">`Microsoft.NETCore.App`</ph> é direcionado para a estrutura <ph id="ph2">`netcoreapp`</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>It provides access to ~60 libraries, ~40 provided by the <ph id="ph1">`NETStandard.Library`</ph> package and ~20 more in addition.</source>
          <target state="translated">Ele fornece acesso a ~60 bibliotecas, ~&amp;40; fornecida pelo pacote <ph id="ph1">`NETStandard.Library`</ph> e mais ~20 adicionais.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>You can reference additional libraries that target <ph id="ph1">`netcoreapp`</ph> or compatible frameworks, such as <ph id="ph2">`netstandard`</ph>, to get access to additional APIs.</source>
          <target state="translated">Você pode referenciar outras bibliotecas direcionadas ao <ph id="ph1">`netcoreapp`</ph> ou estruturas compatíveis, como o <ph id="ph2">`netstandard`</ph>, para obter acesso a APIs adicionais.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Most of the additional libraries provided by <ph id="ph1">`Microsoft.NETCore.App`</ph> also target <ph id="ph2">`netstandard`</ph> given that their dependencies are satisfied by other <ph id="ph3">`netstandard`</ph> libraries.</source>
          <target state="translated">A maioria das bibliotecas adicionais fornecidas pelo <ph id="ph1">`Microsoft.NETCore.App`</ph> também são direcionadas para <ph id="ph2">`netstandard`</ph>, considerando que suas dependências foram atendidas por outras bibliotecas <ph id="ph3">`netstandard`</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>That means that <ph id="ph1">`netstandard`</ph> libraries can also reference those packages as dependencies.</source>
          <target state="translated">Isso significa que bibliotecas <ph id="ph1">`netstandard`</ph> também podem fazer referência a esses pacotes como dependências.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>