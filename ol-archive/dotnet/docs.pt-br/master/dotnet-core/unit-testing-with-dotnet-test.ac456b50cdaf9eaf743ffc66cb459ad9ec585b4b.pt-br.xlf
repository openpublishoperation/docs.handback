<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b5c25fc" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cd860241f5f20b6a4f1ccfec60e0c9cd5079152a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\testing\unit-testing-with-dotnet-test.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3c82dffc8e200be96467dc35105d3c832b0c5d39</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e8f442ab61448a9951f2ca8b104f67b74b595a4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Unit Testing in .NET Core using dotnet test | Microsoft Docs</source>
          <target state="translated">Teste de unidade no .NET Core usando dotnet test | Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Unit Testing in .NET Core using dotnet test</source>
          <target state="translated">Testes de unidade no .NET Core usando o teste dotnet</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Unit Testing in .NET Core using dotnet test</source>
          <target state="translated">Testes de unidade no .NET Core usando o teste dotnet</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By <bpt id="p1">[</bpt>Steve Smith<ept id="p1">](http://ardalis.com)</ept> and <bpt id="p2">[</bpt>Bill Wagner<ept id="p2">](https://github.com/BillWagner)</ept></source>
          <target state="translated">Por <bpt id="p1">[</bpt>Steve Smith<ept id="p1">](http://ardalis.com)</ept> e <bpt id="p2">[</bpt>Bill Wagner<ept id="p2">](https://github.com/BillWagner)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>View or download sample code<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/getting-started/unit-testing-using-dotnet-test)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Exibir ou baixar o código de exemplo<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/getting-started/unit-testing-using-dotnet-test)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Creating the Projects</source>
          <target state="translated">Criando os Projetos</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Writing Libraries with Cross Platform Tools<ept id="p1">](../tutorials/libraries.md)</ept> has information on organizing multi-project solutions for both the source and the tests.</source>
          <target state="translated"><bpt id="p1">[</bpt>Criando bibliotecas com as Ferramentas de Plataforma Cruzada<ept id="p1">](../tutorials/libraries.md)</ept> traz informações sobre como organizar soluções de vários projetos para a fonte e os testes.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This article follows those conventions.</source>
          <target state="translated">Este artigo segue as convenções.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The final project structure will be something like this:</source>
          <target state="translated">A estrutura do projeto final será semelhante a esta:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creating the source project</source>
          <target state="translated">Criando o projeto de origem</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Start in the <ph id="ph1">`unit-testing-using-dotnet-test`</ph> directory, create the <ph id="ph2">`PrimeService`</ph> directory.</source>
          <target state="translated">Comece no diretório <ph id="ph1">`unit-testing-using-dotnet-test`</ph> e crie o diretório <ph id="ph2">`PrimeService`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>CD into that directory, and run <ph id="ph1">`dotnet new classib`</ph> to create the source project.</source>
          <target state="translated">Execute CD nesse diretório e execute <ph id="ph1">`dotnet new classib`</ph> para criar o projeto de origem.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Rename <ph id="ph1">`Class1.cs`</ph> as <ph id="ph2">`PrimeService.cs`</ph>.</source>
          <target state="translated">Renomeie <ph id="ph1">`Class1.cs`</ph> como <ph id="ph2">`PrimeService.cs`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To use test-driven development (TDD), you'll create a failing implementation of the <ph id="ph1">`PrimeService`</ph> class:</source>
          <target state="translated">Para usar TDD (Desenvolvimento Orientado por Testes), você criará uma implementação com falha da classe <ph id="ph1">`PrimeService`</ph>:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Creating the test project</source>
          <target state="translated">Criando o projeto de teste</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Next, cd back into the 'unit-testing-using-dotnet-test' directory, and create the <ph id="ph1">`PrimeServices.Tests`</ph> directory.</source>
          <target state="translated">Em seguida, execute cd de volta ao diretório “unit-testing-using-dotnet-test” e crie o diretório <ph id="ph1">`PrimeServices.Tests`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CD into the <ph id="ph1">`PrimeService.Tests`</ph> directory and create a new project using <ph id="ph2">`dotnet new xunit`</ph>.</source>
          <target state="translated">Execute CD no diretório <ph id="ph1">`PrimeService.Tests`</ph> e crie um novo projeto usando <ph id="ph2">`dotnet new xunit`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet xunit`</ph> creates a test project that uses xUnit as the test library.</source>
          <target state="translated"><ph id="ph1">`dotnet xunit`</ph> cria um projeto de teste que usa xUnit como a biblioteca de teste.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The generated template configured the test runner in the PrimeServiceTests.csproj:</source>
          <target state="translated">O modelo gerado configurou o executor de teste no PrimeServiceTests.csproj:</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The test project requires other packages to create and run unit tests.</source>
          <target state="translated">O projeto de teste requer outros pacotes para criar e executar testes de unidade.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet new`</ph> added xUnit, and the xUnit runner.</source>
          <target state="translated"><ph id="ph1">`dotnet new`</ph> adicionou xUnit e o executor de xUnit.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You need to add the PrimeService package as another dependency to the project.</source>
          <target state="translated">É necessário adicionar o pacote PrimeService como outra dependência ao projeto.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can do that using the <ph id="ph1">`dotnet`</ph> CLI:</source>
          <target state="translated">É possível fazer isso usando a CLI <ph id="ph1">`dotnet`</ph>:</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Or, you can directly edit the <ph id="ph1">`PrimeService.Tests.csproj`</ph> file.</source>
          <target state="translated">Se preferir, é possível editar diretamente o arquivo <ph id="ph1">`PrimeService.Tests.csproj`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Directly under the first <ph id="ph1">`&lt;ItemGroup&gt;`</ph> node, add another <ph id="ph2">`&lt;ItemGroup&gt;`</ph> node with a reference to the library project:</source>
          <target state="translated">Diretamente sob o primeiro nó <ph id="ph1">`&lt;ItemGroup&gt;`</ph>, adicione outro nó <ph id="ph2">`&lt;ItemGroup&gt;`</ph> com uma referência ao projeto de biblioteca:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can see the entire file in the <bpt id="p1">[</bpt>samples repository<ept id="p1">](https://github.com/dotnet/docs/blob/master/samples/core/getting-started/unit-testing-using-dotnet-test/PrimeService.Tests/PrimeService.Tests.csproj)</ept> on GitHub.</source>
          <target state="translated">Você pode ver o arquivo inteiro no <bpt id="p1">[</bpt>repositório de exemplos<ept id="p1">](https://github.com/dotnet/docs/blob/master/samples/core/getting-started/unit-testing-using-dotnet-test/PrimeService.Tests/PrimeService.Tests.csproj)</ept> no GitHub.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>After this initial structure is in place, you can write your first test.</source>
          <target state="translated">Depois que essa estrutura inicial estiver em vigor, você poderá criar seu primeiro teste.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Once you verify that first unit test, everything is configured and should run smoothly as you add features and tests.</source>
          <target state="translated">Depois de verificar esse primeiro teste de unidade, tudo estará configurado e deverá ser executado sem problemas ao adicionar recursos e testes.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Creating the first test</source>
          <target state="translated">Criando o primeiro teste</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Before building the library or the tests, you need to run <ph id="ph1">`dotnet restore`</ph> in both the <ph id="ph2">`PrimeService`</ph> and <ph id="ph3">`PrimeService.Tests`</ph> directories.</source>
          <target state="translated">Antes de compilar a biblioteca ou os testes, é necessário executar <ph id="ph1">`dotnet restore`</ph> nos diretórios <ph id="ph2">`PrimeService`</ph> e <ph id="ph3">`PrimeService.Tests`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This command restores all the necessary NuGet packages for each project.</source>
          <target state="translated">Este comando restaura todos os pacotes NuGet necessários para cada projeto.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The TDD approach calls for writing one failing test, then making it pass, then repeating the process.</source>
          <target state="translated">A abordagem de TDD pede a criação de um teste com falha para então fazê-lo passar e depois repetindo o processo.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>So, let's write that one failing test.</source>
          <target state="translated">Portanto, vamos escrever esse teste com falha.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Remove <ph id="ph1">`UnitTest1.cs`</ph> from the <ph id="ph2">`PrimeService.Tests`</ph> directory, and create a new C# file named <ph id="ph3">`PrimeService_IsPrimeShould.cs`</ph> with the following content:</source>
          <target state="translated">Remova <ph id="ph1">`UnitTest1.cs`</ph> do diretório <ph id="ph2">`PrimeService.Tests`</ph> e crie um novo arquivo C# chamado <ph id="ph3">`PrimeService_IsPrimeShould.cs`</ph> com o seguinte conteúdo:</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`[Fact]`</ph> attribute denotes a method as a single test.</source>
          <target state="translated">O atributo <ph id="ph1">`[Fact]`</ph> indica um método como um único teste.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Save this file, then run <ph id="ph1">`dotnet build`</ph> to build the test project.</source>
          <target state="translated">Salve esse arquivo e execute <ph id="ph1">`dotnet build`</ph> para compilar o projeto de teste.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you have not already built the <ph id="ph1">`PrimeService`</ph> project, the build system will detect that and build it because it is a dependency of the test project.</source>
          <target state="translated">Se você ainda não criou o projeto <ph id="ph1">`PrimeService`</ph>, o sistema de build detectará isso e o compilará, pois ele é uma dependência do projeto de teste.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Now, execute <ph id="ph1">`dotnet test`</ph> to run the tests from the console.</source>
          <target state="translated">Agora, execute <ph id="ph1">`dotnet test`</ph> para executar os testes no console.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The xUnit test runner has the program entry point to run your tests from the Console.</source>
          <target state="translated">O executor de teste de xUnit tem o ponto de entrada do programa para executar os testes por meio do Console.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet test`</ph> starts the test runner, and provides a command line argument to the testrunner indicating the assembly that contains your tests.</source>
          <target state="translated"><ph id="ph1">`dotnet test`</ph> inicia o executor de teste e fornece um argumento de linha de comando para o testrunner indicando o assembly que contém seus testes.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Your test fails.</source>
          <target state="translated">O teste falha.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You haven't created the implementation yet.</source>
          <target state="translated">Você ainda não criou a implementação.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Write the simplest code to make this one test pass:</source>
          <target state="translated">Escreva o código mais simples para fazer um teste ser aprovado:</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Adding More Features</source>
          <target state="translated">Adicionando mais recursos</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Now, that you've made one test pass, it's time to write more.</source>
          <target state="translated">Agora que você fez um teste ser aprovado, é hora de escrever mais.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>There are a few other simple cases for prime numbers: 0, -1.</source>
          <target state="translated">Existem alguns outros casos simples de números primos: 0, -1.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You could add those as new tests, with the <ph id="ph1">`[Fact]`</ph> attribute, but that quickly becomes tedious.</source>
          <target state="translated">Você pode adicioná-los como novos testes, com o atributo <ph id="ph1">`[Fact]`</ph>, porém isso se torna entediante rapidamente.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>There are other xUnit attributes that enable you to write a suite of similar tests.</source>
          <target state="translated">Há outros atributos de xUnit que permitem escrever um pacote de testes semelhantes.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Theory`</ph> represents a suite of tests that execute the same code, but have different input arguments.</source>
          <target state="translated">Um <ph id="ph1">`Theory`</ph> representa um pacote de testes que executa o mesmo código, mas têm diferentes argumentos de entrada.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">`[InlineData]`</ph> attribute to specify values for those inputs.</source>
          <target state="translated">Você pode usar o atributo <ph id="ph1">`[InlineData]`</ph> para especificar valores para essas entradas.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Instead of creating new tests, leverage these two attributes to create a single theory that tests some values less than 2, which is the lowest prime number:</source>
          <target state="translated">Em vez de criar novos testes, aproveite esses dois atributos para criar uma única teoria que testa alguns valores menores que 2, que é o menor número primo:</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Sample_TestCode<ept id="p2">]</ept><bpt id="p3">(../../../samples/core/getting-started/unit-testing-using-dotnet-test/PrimeService.Tests/PrimeService_IsPrimeShould.cs#Sample_TestCode "</bpt>First tests<ept id="p3">")</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Sample_TestCode<ept id="p2">]</ept><bpt id="p3">(../../../samples/core/getting-started/unit-testing-using-dotnet-test/PrimeService.Tests/PrimeService_IsPrimeShould.cs#Sample_TestCode "</bpt>Primeiros testes<ept id="p3">")</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Now, these tests all pass.</source>
          <target state="translated">Agora, todos os testes são aprovados.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You continue to iterate by adding more tests, more theories, and more code in the main library.</source>
          <target state="translated">Você continuar a iterar adicionando mais testes, mais teorias e mais código da biblioteca principal.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You'll quickly end up with the <bpt id="p1">[</bpt>finished version of the tests<ept id="p1">](https://github.com/dotnet/docs/blob/master/samples/core/getting-started/unit-testing-using-dotnet-test/test/PrimeService.Tests/PrimeService_IsPrimeShould.cs)</ept> and the <bpt id="p2">[</bpt>complete implementation of the library<ept id="p2">](https://github.com/dotnet/docs/blob/master/samples/core/getting-started/unit-testing-using-dotnet-test/src/PrimeService/PrimeService.cs)</ept>.</source>
          <target state="translated">Você acabará rapidamente com a <bpt id="p1">[</bpt>versão concluída dos testes<ept id="p1">](https://github.com/dotnet/docs/blob/master/samples/core/getting-started/unit-testing-using-dotnet-test/test/PrimeService.Tests/PrimeService_IsPrimeShould.cs)</ept> e a <bpt id="p2">[</bpt>implementação completa da biblioteca<ept id="p2">](https://github.com/dotnet/docs/blob/master/samples/core/getting-started/unit-testing-using-dotnet-test/src/PrimeService/PrimeService.cs)</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You've built a small library and a set of unit tests for that library.</source>
          <target state="translated">Você criou uma pequena biblioteca e um conjunto de testes de unidade para essa biblioteca.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You've structured this solution so that adding new packages and tests will be seamless, and you can concentrate on the problem at hand.</source>
          <target state="translated">Você estruturou essa solução para que a adição de novos pacotes de testes seja simples, assim você pode se concentrar no problema em questão.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The tools will run automatically.</source>
          <target state="translated">As ferramentas serão executadas automaticamente.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>