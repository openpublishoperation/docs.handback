<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">150d70e3f0a80f7f6e733abee3691a0fe420919f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\preview3\tools\dotnet-migrate.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5b0e7d2b371b668a4468266413254ac79dbf207</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">16025fb07bcad16cf2afa1f9ff0d8e532cc1427b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-migrate command | .NET Core SDK</source>
          <target state="translated">Comando dotnet-migrate | SDK do .NET Core</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-migrate command migrates a project and all of its dependencies.</source>
          <target state="translated">O comando dotnet-migrate migra um projeto e todas as suas dependências.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-migrate, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-migrate, CLI, comando da CLI, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-migrate</source>
          <target state="translated">dotnet-migrate</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Nome</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>dotnet-migrate -- Migrates a Preview 2 .NET Core project to Preview 3 .NET Core project</source>
          <target state="translated">dotnet-migrate – migra um projeto da Visualização 2 do .NET Core para um projeto da Visualização 3 do .NET Core</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Sinopse</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet migrate`</ph> command will migrate a valid Preview 2 <ph id="ph2">`project.json`</ph> based project to a valid Preview 3 <ph id="ph3">`csproj`</ph> project.</source>
          <target state="translated">O comando <ph id="ph1">`dotnet migrate`</ph> migrará um projeto válido <ph id="ph2">`project.json`</ph> baseado na Visualização 2 para um projeto válido <ph id="ph3">`csproj`</ph> da Visualização 3.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>By default, the command will migrate the root project and any project references that the root project contains.</source>
          <target state="translated">Por padrão, o comando migrará o projeto raiz e as referências de projeto que o projeto raiz contém.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This behavior can be disabled using the <ph id="ph1">`--skip-project-references`</ph> option at runtime.</source>
          <target state="translated">Esse comportamento pode ser desabilitado usando a opção <ph id="ph1">`--skip-project-references`</ph> no tempo de execução.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Migration can be done on either:</source>
          <target state="translated">A migração pode ser feita em:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A single project by specifying the <ph id="ph1">`project.json`</ph> file to migrate</source>
          <target state="translated">Um único projeto, especificando o arquivo <ph id="ph1">`project.json`</ph> a ser migrado</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>All of the directories specified in the <ph id="ph1">`global.json`</ph> file by passing in a path to the <ph id="ph2">`global.json`</ph> file</source>
          <target state="translated">Todos os diretórios especificados no arquivo <ph id="ph1">`global.json`</ph>, passando um caminho para o arquivo <ph id="ph2">`global.json`</ph></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>On all sub-directories of the given directory recursively</source>
          <target state="translated">Em todos os subdiretórios do diretório especificado, recursivamente</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The migrate command will keep the migrated <ph id="ph1">`project.json`</ph> file inside a <ph id="ph2">`backup`</ph> directory which it will create if it doesn't exist.</source>
          <target state="translated">O comando de migração manterá o arquivo migrado <ph id="ph1">`project.json`</ph> dentro de um diretório <ph id="ph2">`backup`</ph>, que será criado se ainda não existir.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This can be overriden using the <ph id="ph1">`--skip-backup`</ph> option.</source>
          <target state="translated">Isso pode ser substituído usando a opção <ph id="ph1">`--skip-backup`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>By default, the migration operation will output the state of the migration process to standard output (STDOUT).</source>
          <target state="translated">Por padrão, a operação de migração produzirá o estado do processo de migração para a saída padrão (STDOUT).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you use the <ph id="ph1">`--report-file`</ph> option, that output will also be saved to a file that you specify.</source>
          <target state="translated">Se você usar a opção <ph id="ph1">`--report-file`</ph>, essa saída também será salva em um arquivo que você especificar.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>As of Preview 3, the <ph id="ph1">`dotnet migrate`</ph> command only supports valid Preview 2 <ph id="ph2">`project.json`</ph> files.</source>
          <target state="translated">Em relação à Visualização 3, o comando <ph id="ph1">`dotnet migrate`</ph> dá suporte somente a arquivos <ph id="ph2">`project.json`</ph> válidos da Visualização 2.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This means that you cannot use it to migrate old DNX or Preview 1 <ph id="ph1">`project.json`</ph> files directly to csproj; you first need to migrate them to Preview 2 project.json files and then to csproj files.</source>
          <target state="translated">Isso significa que não é possível usá-lo para migrar DNX antigo ou arquivos <ph id="ph1">`project.json`</ph> da Visualização 1 diretamente para o csproj; primeiro, é necessário migrá-los para arquivos project.json da Visualização 2 e, em seguida, para arquivos csproj.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In the future, we will add support for Preview 1 projects.</source>
          <target state="translated">No futuro, haverá suporte para projetos da Visualização 1.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Opções</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">Imprime uma ajuda breve para o comando.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Template csproj file to use for migration.</source>
          <target state="translated">Arquivo csproj de modelo a ser usado para migração.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>By default, the same template as the one dropped by <ph id="ph1">`dotnet new`</ph> will be used.</source>
          <target state="translated">Por padrão, o mesmo modelo removido pelo <ph id="ph1">`dotnet new`</ph> será usado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The version of the sdk package that will be referenced in the migrated app.</source>
          <target state="translated">A versão do pacote do sdk que será referenciado no aplicativo migrado.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The default is the version of the sdk in dotnet new.</source>
          <target state="translated">O padrão é a versão do sdk no novo dotnet.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The path to the xproj file to use.</source>
          <target state="translated">O caminho para o arquivo xproj a ser usado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Required when there is more than one xproj in a project directory.</source>
          <target state="translated">Necessário quando há mais de um xproj em um diretório do projeto.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Skip migrating project references.</source>
          <target state="translated">Ignorar referências de projeto migradas.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>By default project references are migrated recursively.</source>
          <target state="translated">Por padrão, referências de projeto são migradas recursivamente.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Output migration report to a file in addition to the console.</source>
          <target state="translated">Relatório de migração de saída em um arquivo além do console.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Output migration report file as json rather than user messages.</source>
          <target state="translated">Arquivo de relatório de migração de saída como json em vez de mensagens de usuário.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Skip moving project.json, global.json, and <ph id="ph1">\*</ph>.xproj to a <ph id="ph2">`backup`</ph> directory after successful migration.</source>
          <target state="translated">Ignorar movimentação de project.json, global.json, de <ph id="ph1">\*</ph>.xproj para um diretório <ph id="ph2">`backup`</ph> após a migração bem-sucedida.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Exemplos</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Migrate a project in the current directory and all of its project to project dependencies:</source>
          <target state="translated">Migre um projeto no diretório atual e todas as dependências projeto a projeto:</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Migrate all projects that <ph id="ph1">`global.json`</ph> file points to:</source>
          <target state="translated">Migre todos os projetos que apontados pelo arquivo <ph id="ph1">`global.json`</ph>:</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Migrate only the current project and no project to project dependencies and use a specific SDK version:</source>
          <target state="translated">Migre apenas o projeto atual e não as dependências projeto a projeto e use uma versão específica do SDK:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>