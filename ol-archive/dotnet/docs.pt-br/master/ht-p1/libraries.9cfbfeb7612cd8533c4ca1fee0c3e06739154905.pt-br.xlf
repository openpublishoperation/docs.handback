<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de44f103bef6006dd1a952c48c1e172f6277a95b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tutorials\libraries.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6f2b04e8d5c448a63da146c4d53652c491dd6280</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc2affac42c561e4630e4e5f6d52ededbb77a46e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Developing Libraries with Cross Platform Tools</source>
          <target state="translated">Desenvolvendo bibliotecas com as Ferramentas de Plataforma Cruzada</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Developing Libraries with Cross Platform Tools</source>
          <target state="translated">Desenvolvendo bibliotecas com as Ferramentas de Plataforma Cruzada</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Developing Libraries with Cross Platform Tools</source>
          <target state="translated">Desenvolvendo bibliotecas com as Ferramentas de Plataforma Cruzada</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Some details are subject to change as the toolchain evolves.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Alguns detalhes estão sujeitos a alterações à medida que a cadeia de ferramentas evolui.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This article covers how to write libraries for .NET using cross-platform CLI tools.</source>
          <target state="translated">Esse artigo aborda como escrever bibliotecas para .NET usando as ferramentas de plataforma cruzada da CLI.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The CLI provides an efficient and low-level experience that works across any supported OS.</source>
          <target state="translated">A CLI fornece uma experiência eficiente e de baixo nível que funciona em qualquer sistema operacional com suporte.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can still build libraries with Visual Studio, and if that is your preferred experience <bpt id="p1">[</bpt>refer to the Visual Studio guide<ept id="p1">](libraries-with-vs.md)</ept>.</source>
          <target state="translated">Você ainda pode criar bibliotecas com o Visual Studio e, se essa for sua experiência preferida, <bpt id="p1">[</bpt>consultar o guia do Visual Studio<ept id="p1">](libraries-with-vs.md)</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Pré-requisitos</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You need <bpt id="p1">[</bpt>the .NET Core SDK and CLI<ept id="p1">](https://www.microsoft.com/net/core)</ept> installed on your machine.</source>
          <target state="translated">Você precisa da <bpt id="p1">[</bpt>CLI e do SDK do .NET Core<ept id="p1">](https://www.microsoft.com/net/core)</ept> instalados no seu computador.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For the sections of this document dealing with .NET Framework versions or Portable Class Libraries (PCL), you need the <bpt id="p1">[</bpt>.NET Framework<ept id="p1">](http://getdotnet.azurewebsites.net/)</ept> installed on a Windows machine.</source>
          <target state="translated">Para as seções deste documento que tratam de versões do .NET Framework ou de PCL (Bibliotecas de Classes Portáteis), é necessário ter o <bpt id="p1">[</bpt>.NET Framework<ept id="p1">](http://getdotnet.azurewebsites.net/)</ept> instalado em um computador Windows.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Additionally, if you wish to support older .NET Framework targets, you need to install targeting/developer packs for older framework versions from the <bpt id="p1">[</bpt>.NET target platforms page<ept id="p1">](http://getdotnet.azurewebsites.net/target-dotnet-platforms.html)</ept>.</source>
          <target state="translated">Além disso, se você quiser dar suporte a destinos do .NET Framework mais antigos, você precisará instalar pacotes de direcionamento/desenvolvedor para versões mais antigas de estrutura na <bpt id="p1">[</bpt>página de plataformas de destino do .NET<ept id="p1">](http://getdotnet.azurewebsites.net/target-dotnet-platforms.html)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Refer to this table:</source>
          <target state="translated">Consulte esta tabela:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>.NET Framework Version</source>
          <target state="translated">Versão do .NET Framework</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>What to download</source>
          <target state="translated">O que baixar</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>4.6.1</source>
          <target state="translated">4.6.1</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.6.1 Targeting Pack</source>
          <target state="translated">Pacote de Direcionamento do .NET Framework 4.6.1</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>4.6</source>
          <target state="translated">4.6</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.6 Targeting Pack</source>
          <target state="translated">Pacote de Direcionamento do .NET Framework 4.6</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>4.5.2</source>
          <target state="translated">4.5.2</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.5.2 Developer Pack</source>
          <target state="translated">Pacote de Desenvolvedor do .NET Framework 4.5.2</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>4.5.1</source>
          <target state="translated">4.5.1</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.5.1 Developer Pack</source>
          <target state="translated">Pacote de Desenvolvedor do .NET Framework 4.5.1</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>4.5</source>
          <target state="translated">4.5</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Windows Software Development Kit for Windows 8</source>
          <target state="translated">Software Development Kit do Windows (SDK do Windows) para Windows 8</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>4.0</source>
          <target state="translated">4.0</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Windows SDK for Windows 7 and .NET Framework 4</source>
          <target state="translated">SDK do Windows para Windows 7 e .NET Framework 4</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>2.0, 3.0, and 3.5</source>
          <target state="translated">2.0, 3.0 e 3.5</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>.NET Framework 3.5 SP1 Runtime (or Windows 8+ version)</source>
          <target state="translated">Tempo de Execução do .NET Framework 3.5 SP1 (ou versão do Windows 8 ou superior)</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>How to target the .NET Standard</source>
          <target state="translated">Como direcionar para o .NET Standard</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you're not quite familiar with the .NET Standard, refer to <bpt id="p1">[</bpt>the .NET Standard Library<ept id="p1">](../../standard/library.md)</ept> to learn more.</source>
          <target state="translated">Se você não estiver bem familiarizada com o .NET Standard, consulte a <bpt id="p1">[</bpt>.NET Standard Library<ept id="p1">](../../standard/library.md)</ept> para saber mais.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In that article, there is a table which maps .NET Standard versions to various implementations:</source>
          <target state="translated">Nesse artigo, há uma tabela que mapeia as versões do .NET Standard para várias implementações:</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Platform Name</source>
          <target state="translated">Nome da Plataforma</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Alias</source>
          <target state="translated">Alias</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>.NET Standard</source>
          <target state="translated">.NET Standard</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>netstandard</source>
          <target state="translated">netstandard</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>1.0</source>
          <target state="translated">1.0</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>1.1</source>
          <target state="translated">1.1</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>1.2</source>
          <target state="translated">1.2</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>1.3</source>
          <target state="translated">1.3</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>1.4</source>
          <target state="translated">1.4</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>1.5</source>
          <target state="translated">1.5</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>1.6</source>
          <target state="translated">1.6</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>.NET Core</source>
          <target state="translated">.NET Core</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>netcoreapp</source>
          <target state="translated">netcoreapp</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>1.0</source>
          <target state="translated">1.0</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>.NET Framework</source>
          <target state="translated">.NET Framework</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>net</source>
          <target state="translated">net</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>4.5</source>
          <target state="translated">4.5</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>4.5.1</source>
          <target state="translated">4.5.1</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>4.6</source>
          <target state="translated">4.6</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>4.6.1</source>
          <target state="translated">4.6.1</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>4.6.2</source>
          <target state="translated">4.6.2</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>4.6.3</source>
          <target state="translated">4.6.3</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Mono/Xamarin Platforms</source>
          <target state="translated">Plataformas Mono/Xamarin</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Universal Windows Platform</source>
          <target state="translated">Plataforma Universal do Windows</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>uap</source>
          <target state="translated">uap</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>10.0</source>
          <target state="translated">10.0</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>win</source>
          <target state="translated">win</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>8.0</source>
          <target state="translated">8.0</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>8.1</source>
          <target state="translated">8.1</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Windows Phone</source>
          <target state="translated">Windows Phone</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>wpa</source>
          <target state="translated">wpa</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>8.1</source>
          <target state="translated">8.1</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Windows Phone Silverlight</source>
          <target state="translated">Windows Phone Silverlight</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>wp</source>
          <target state="translated">wp</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>8.0</source>
          <target state="translated">8.0</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Here's what this table means for the purposes of creating a library:</source>
          <target state="translated">Veja aqui o que essa tabela significa para fins de criação de uma biblioteca:</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The version of the .NET Platform Standard you pick will be a tradeoff between access to the newest APIs and ability to target more .NET platforms and Framework versions.</source>
          <target state="translated">A versão do .NET Platform Standard que você escolher será uma escolha entre acessar as APIs mais recentes e a capacidade de direcionar para mais plataformas .NET e versões do Framework.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>You control the range of targetable platforms and versions by picking a version of <ph id="ph1">`netstandardX.X`</ph> (Where <ph id="ph2">`X.X`</ph> is a version number) and adding it to your <ph id="ph3">`project.json`</ph> file.</source>
          <target state="translated">Você controla o intervalo das plataformas que podem ser destinos e as versões escolhendo uma versão de <ph id="ph1">`netstandardX.X`</ph> (em que <ph id="ph2">`X.X`</ph> é um número de versão) e adicioná-lo ao seu arquivo <ph id="ph3">`project.json`</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Additionally, the corresponding <bpt id="p1">[</bpt>NuGet package to depend on<ept id="p1">](https://www.nuget.org/packages/NETStandard.Library/)</ept> is <ph id="ph1">`NETStandard.Library`</ph> version <ph id="ph2">`1.6.0`</ph>.</source>
          <target state="translated">Além disso, o <bpt id="p1">[</bpt>pacote NuGet correspondente para dependência<ept id="p1">](https://www.nuget.org/packages/NETStandard.Library/)</ept> é o <ph id="ph1">`NETStandard.Library`</ph> versão <ph id="ph2">`1.6.0`</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Although there's nothing preventing you from depending on <ph id="ph1">`Microsoft.NETCore.App`</ph> like with console apps, it's generally not recommended.</source>
          <target state="translated">Embora nada impeça que você dependa de <ph id="ph1">`Microsoft.NETCore.App`</ph> como com os aplicativos de console, em geral isso não é recomendável.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If you need APIs from a package not specified in <ph id="ph1">`NETStandard.Library`</ph>, you can always specify that package in addition to <ph id="ph2">`NETStandard.Library`</ph> in the <ph id="ph3">`dependencies`</ph> section of your <ph id="ph4">`project.json`</ph> file.</source>
          <target state="translated">Se você precisar de APIs de um pacote não especificado no <ph id="ph1">`NETStandard.Library`</ph>, sempre poderá especificar esse pacote além de <ph id="ph2">`NETStandard.Library`</ph> na seção <ph id="ph3">`dependencies`</ph> do seu arquivo <ph id="ph4">`project.json`</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You have three primary options when targeting the .NET Standard, depending on your needs.</source>
          <target state="translated">Você tem três opções principais ao direcionar para o .NET Standard, dependendo das suas necessidades.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You can use the latest version of the .NET Standard - <ph id="ph1">`netstandard1.6`</ph> - which is for when you want access to the most APIs and don't mind if you have less reach across implementations.</source>
          <target state="translated">Você pode usar a versão mais recente do .NET Standard, <ph id="ph1">`netstandard1.6`</ph>, que serve para quando você desejar acesso a mais APIs e não se incomodar em ter menor alcance entre as implementações.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>You can use a lower version of the .NET Standard to target earlier .NET implementations.</source>
          <target state="translated">Você pode usar uma versão anterior do .NET Standard para direcionar as implementações do .NET anteriores.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The cost here is not having access to some of the latest APIs.</source>
          <target state="translated">O custo disso aqui é não ter acesso a algumas das APIs mais recentes.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For example, if you wanted to have guaranteed compatibility with .NET Framework 4.6 and higher, you would pick <ph id="ph1">`netstandard1.3`</ph>:</source>
          <target state="translated">Por exemplo, se você quiser ter garantia de compatibilidade com o .NET Framework 4.6 e posterior, deverá escolher <ph id="ph1">`netstandard1.3`</ph>:</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>.NET Standard versions are backward compatible.</source>
          <target state="translated">Versões do .NET Standard são compatíveis com versões anteriores.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>That means that <ph id="ph1">`netstandard1.0`</ph> libraries run on <ph id="ph2">`netstandard1.1`</ph> platforms and higher.</source>
          <target state="translated">Isso significa que as bibliotecas <ph id="ph1">`netstandard1.0`</ph> são executadas em plataformas <ph id="ph2">`netstandard1.1`</ph> e superior.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>However, there is no forward compatibility - lower .NET Standard platforms cannot reference higher ones.</source>
          <target state="translated">No entanto, não há compatibilidade com versões posteriores: plataformas inferiores do .NET Standard não podem fazer referência às superiores.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This means that <ph id="ph1">`netstandard1.0`</ph> libraries cannot reference libraries targeting <ph id="ph2">`netstandard1.1`</ph> or higher.</source>
          <target state="translated">Isso significa que as bibliotecas <ph id="ph1">`netstandard1.0`</ph> não podem fazer de referência a bibliotecas direcionadas a <ph id="ph2">`netstandard1.1`</ph> ou superior.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Select the Standard version that has the right mix of APIs and platform support for your needs.</source>
          <target state="translated">Selecione a versão Standard com a combinação de suporte a APIs e plataformas ideal para suas necessidades.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If you want to target the .NET Framework versions 4.0 or below, or you wish to use an API available in the .NET Framework but not in the .NET Standard (for example, <ph id="ph1">`System.Drawing`</ph>), read the following sections and learn how to multitarget.</source>
          <target state="translated">Se desejar direcionar para o .NET Framework versões 4.0 ou inferior ou se desejar usar uma API disponível no .NET Framework, mas não no .NET Standard (por exemplo, <ph id="ph1">`System.Drawing`</ph>), leia as seções a seguir para aprender a usar multiplataformas.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>How to target the .NET Framework</source>
          <target state="translated">Como direcionar o .NET Framework</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>These instructions assume you have the .NET Framework installed on your machine.</source>
          <target state="translated">Essas instruções pressupõem que você tenha o .NET Framework instalado no seu computador.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Refer to the <bpt id="p1">[</bpt>Prerequisites<ept id="p1">](#prerequisites)</ept> to get dependencies installed.</source>
          <target state="translated">Consulte os <bpt id="p1">[</bpt>Pré-requisitos<ept id="p1">](#prerequisites)</ept> para obter as dependências instaladas.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Keep in mind that some of the .NET Framework versions used here are no longer in support.</source>
          <target state="translated">Lembre que algumas das versões do .NET Framework usadas aqui não têm mais suporte.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Refer to the <bpt id="p1">[</bpt>.NET Framework Support Lifecycle Policy FAQ<ept id="p1">](https://support.microsoft.com/gp/framework_faq/en-us)</ept> about unsupported versions.</source>
          <target state="translated">Consulte as <bpt id="p1">[</bpt>Perguntas Frequentes de Política do Ciclo de Vida de Suporte do .NET Framework<ept id="p1">](https://support.microsoft.com/gp/framework_faq/en-us)</ept> sobre versões sem suporte.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If you want to reach the maximum number of developers and projects, use the .NET Framework 4 as your baseline target.</source>
          <target state="translated">Se deseja alcançar o número máximo de projetos e desenvolvedores, use o .NET Framework 4 como seu destino de linha de base.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>To target the .NET Framework, you will need to begin by using the correct Target Framework Moniker (TFM) that corresponds to the .NET Framework version you wish to support.</source>
          <target state="translated">Para direcionar para o .NET Framework, você precisará começar usando o TFM (Moniker da Estrutura de Destino) correto correspondente à versão do .NET Framework à qual você deseja dar suporte.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>For example, here's how you would write a library which targets the .NET Framework 4:</source>
          <target state="translated">Por exemplo, mostramos aqui como você escreveria uma biblioteca direcionada ao .NET Framework 4:</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>And that's it!</source>
          <target state="translated">E pronto.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Although this compiled only for the .NET Framework 4, you can use the library on newer versions of the .NET Framework.</source>
          <target state="translated">Embora seja compilado somente para o .NET Framework 4, você pode usar a biblioteca em versões mais recentes do .NET Framework.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>How to target a Portable Class Library (PCL)</source>
          <target state="translated">Como direcionar uma PCL (Biblioteca de Classes Portátil)</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>These instructions assume you have the .NET Framework installed on your machine.</source>
          <target state="translated">Essas instruções pressupõem que você tenha o .NET Framework instalado no seu computador.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Refer to the <bpt id="p1">[</bpt>Prerequisites<ept id="p1">](#prerequisites)</ept> to get dependencies installed.</source>
          <target state="translated">Consulte os <bpt id="p1">[</bpt>Pré-requisitos<ept id="p1">](#prerequisites)</ept> para obter as dependências instaladas.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Targeting a PCL profile is a bit trickier than targeting .NET Standard or the .NET Framework.</source>
          <target state="translated">Direcionando um perfil de PCL é um pouco mais complicado do que direcionar para o .NET Framework ou .NET Standard.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>For starters, <bpt id="p1">[</bpt>reference this list of PCL profiles<ept id="p1">](http://embed.plnkr.co/03ck2dCtnJogBKHJ9EjY/preview)</ept> to find the NuGet target which corresponds to the PCL profile you are targeting.</source>
          <target state="translated">Para os iniciantes, <bpt id="p1">[</bpt>consulte essa lista de perfis de PCL<ept id="p1">](http://embed.plnkr.co/03ck2dCtnJogBKHJ9EjY/preview)</ept> para localizar o destino do NuGet que corresponde ao perfil de PCL de destino.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Then, you need to do the following:</source>
          <target state="translated">Depois disso, você precisará fazer o seguinte:</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Create a new entry under <ph id="ph1">`frameworks`</ph> in your <ph id="ph2">`project.json`</ph>, named <ph id="ph3">`.NETPortable,Version=v{version},Profile=Profile{profile}`</ph>, where <ph id="ph4">`{version}`</ph> and <ph id="ph5">`{profile}`</ph> correspond to a PCL version number and Profile number, respectively.</source>
          <target state="translated">Crie uma nova entrada em <ph id="ph1">`frameworks`</ph> no seu <ph id="ph2">`project.json`</ph>, denominado <ph id="ph3">`.NETPortable,Version=v{version},Profile=Profile{profile}`</ph>, em que <ph id="ph4">`{version}`</ph> e <ph id="ph5">`{profile}`</ph> correspondem a um número de versão da PCL e ao número de Perfil, respectivamente.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>In this new entry, list every single assembly used for that target under a <ph id="ph1">`frameworkAssemblies`</ph> entry.</source>
          <target state="translated">Na nova entrada, liste cada assembly usado para esse destino em uma entrada <ph id="ph1">`frameworkAssemblies`</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>This includes <ph id="ph1">`mscorlib`</ph>, <ph id="ph2">`System`</ph>, and <ph id="ph3">`System.Core`</ph>.</source>
          <target state="translated">Isso inclui <ph id="ph1">`mscorlib`</ph>, <ph id="ph2">`System`</ph> e <ph id="ph3">`System.Core`</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>If you are multitargeting (see the next section), you must explicitly list dependencies for each target under their target entries.</source>
          <target state="translated">Se estiver usando multiplataforma (consulte a próxima seção), você deverá listar explicitamente as dependências para cada destino em suas entradas de destino.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You won't be able to use a global <ph id="ph1">`dependencies`</ph> entry anymore.</source>
          <target state="translated">Você não poderá mais usar uma entrada <ph id="ph1">`dependencies`</ph> global.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The following is an example targeting PCL Profile 328.</source>
          <target state="translated">Veja a seguir um exemplo de direcionamento para a PCL Perfil 328.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Profile 328 supports: .NET Standard 1.4, .NET Framework 4, Windows 8, Windows Phone 8.1, Windows Phone Silverlight 8.1, and Silverlight 5.</source>
          <target state="translated">O Perfil 328 dá suporte a: .NET Standard 1.4, .NET Framework 4, Windows 8, Windows Phone 8.1, Windows Phone Silverlight 8.1 e Silverlight 5.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>When you build a project that includes PCL Profile 328 as a framework in the <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> file, it will have this subfolder in the <bpt id="p2">*</bpt>/bin/debug<ept id="p2">*</ept> folder:</source>
          <target state="translated">Quando você compila um projeto que inclui a PCL Perfil 328 como uma estrutura no arquivo <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>, ele terá essa subpasta na pasta <bpt id="p2">*</bpt>/bin/debug<ept id="p2">*</ept>:</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This folder contains the <ph id="ph1">`.dll`</ph> files necessary to run your library.</source>
          <target state="translated">Esta pasta contém os arquivos <ph id="ph1">`.dll`</ph> necessários para executar sua biblioteca.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>How to Multitarget</source>
          <target state="translated">Como usar Multiplataformas</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The following instructions assume you have the .NET Framework installed on your machine.</source>
          <target state="translated">As instruções a seguir pressupõem que você tenha o .NET Framework instalado no seu computador.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Refer to the <bpt id="p1">[</bpt>Prerequisites<ept id="p1">](#prerequisites)</ept> section to learn which dependencies you need to install and where to download them from.</source>
          <target state="translated">Consulte a seção <bpt id="p1">[</bpt>Pré-requisitos<ept id="p1">](#prerequisites)</ept> para saber quais dependências você precisa instalar e de onde baixá-las.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>You may need to target older versions of the .NET Framework when your project supports both the .NET Framework and .NET Core.</source>
          <target state="translated">Talvez seja necessário direcionar para versões mais antigas do .NET Framework quando seu projeto dá suporte a ambos o .NET Framework e o .NET Core.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>In this scenario, if you want to use newer APIs and language constructs for the newer targets, use <ph id="ph1">`#if`</ph> directives in your code.</source>
          <target state="translated">Nesse cenário, se você quiser usar construções de linguagem e APIs mais recentes para os destinos, use as diretivas <ph id="ph1">`#if`</ph> no seu código.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>You also might need to add different packages and dependencies in your <ph id="ph1">`project.json file`</ph> for each platform you're targeting to include the different APIs needed for each case.</source>
          <target state="translated">Você também pode precisar adicionar diferentes pacotes e dependências no seu <ph id="ph1">`project.json file`</ph> para cada plataforma de destino para incluir as diferentes APIs necessárias para cada caso.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>For example, let's say you have a library that performs networking operations over HTTP.</source>
          <target state="translated">Por exemplo, digamos que você tem uma biblioteca que executa operações de rede por meio de HTTP.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>For .NET Standard and the .NET Framework versions 4.5 or higher, you can use the <ph id="ph1">`HttpClient`</ph> class from the <ph id="ph2">`System.Net.Http`</ph> namespace.</source>
          <target state="translated">Para .NET Standard e .NET Framework versões 4.5 ou posterior, você pode usar a classe <ph id="ph1">`HttpClient`</ph> do namespace <ph id="ph2">`System.Net.Http`</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>However, earlier versions of the .NET Framework don't have the <ph id="ph1">`HttpClient`</ph> class, so you could use the <ph id="ph2">`WebClient`</ph> class from the <ph id="ph3">`System.Net`</ph> namespace for those instead.</source>
          <target state="translated">No entanto, versões anteriores do .NET Framework não tem a classe <ph id="ph1">`HttpClient`</ph>, portanto, você pode usar a classe <ph id="ph2">`WebClient`</ph> do namespace <ph id="ph3">`System.Net`</ph> para elas.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>So, the <ph id="ph1">`project.json`</ph> file could look like this:</source>
          <target state="translated">Dessa forma, o arquivo <ph id="ph1">`project.json`</ph> seria semelhante a:</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Note that the .NET Framework assemblies need to be referenced explicitly in the <ph id="ph1">`net40`</ph> and <ph id="ph2">`net452`</ph> target, and NuGet references are also explicitly listed in the <ph id="ph3">`netstandard1.6`</ph> target.</source>
          <target state="translated">Observe que os assemblies do .NET Framework precisam ser referenciado explicitamente no destino <ph id="ph1">`net40`</ph> e <ph id="ph2">`net452`</ph>, e as referências de NuGet também são explicitamente listadas no destino <ph id="ph3">`netstandard1.6`</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This is required in multitargeting scenarios.</source>
          <target state="translated">Isso é necessário em cenários multiplataforma.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Next, the <ph id="ph1">`using`</ph> statements in your source file can be adjusted like this:</source>
          <target state="translated">Em seguida, as instruções <ph id="ph1">`using`</ph> no arquivo de origem podem ser ajustadas dessa forma:</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The build system is aware of the following preprocessor symbols used in <ph id="ph1">`#if`</ph> directives:</source>
          <target state="translated">O sistema de build reconhece os seguintes símbolos do pré-processador usados nas diretivas <ph id="ph1">`#if`</ph>:</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>And in the middle of the source, you can use <ph id="ph1">`#if`</ph> directives to use those libraries conditionally.</source>
          <target state="translated">E, em meio à origem, você pode usar as diretivas <ph id="ph1">`#if`</ph> para usar essas bibliotecas condicionalmente.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">Por exemplo:</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>When you build a project that includes <ph id="ph1">`net40`</ph>, <ph id="ph2">`net45`</ph>, and <ph id="ph3">`netstandard1.6`</ph> as frameworks in the <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> file, it will have these subfolders in the <bpt id="p2">*</bpt>/bin/debug<ept id="p2">*</ept> folder:</source>
          <target state="translated">Quando você compila um projeto que inclui <ph id="ph1">`net40`</ph>, <ph id="ph2">`net45`</ph> e <ph id="ph3">`netstandard1.6`</ph> como estruturas no arquivo <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>, ele terá essas subpastas na <bpt id="p2">*</bpt>pasta /bin/debug<ept id="p2">*</ept>:</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>But What about Multitargeting with Portable Class Libraries?</source>
          <target state="translated">Mas e quanto à multiplataforma com Bibliotecas de Classes Portáteis?</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If you want to cross-compile with a PCL target, you must add a build definition in your <ph id="ph1">`project.json`</ph> file under <ph id="ph2">`buildOptions`</ph> in your PCL target.</source>
          <target state="translated">Se você deseja realizar compilação cruzada em um destino de PCL, você deve adicionar uma definição de build ao seu arquivo <ph id="ph1">`project.json`</ph> em <ph id="ph2">`buildOptions`</ph> no seu destino PCL.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>You can then use <ph id="ph1">`#if`</ph> directives in the source which use the build definition as a preprocessor symbol.</source>
          <target state="translated">Você pode usar as diretivas <ph id="ph1">`#if`</ph> na origem, as quais usam a definição de build como um símbolo do pré-processador.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>For example, if you want to target <bpt id="p1">[</bpt>PCL profile 328<ept id="p1">](http://embed.plnkr.co/03ck2dCtnJogBKHJ9EjY/preview)</ept> (The .NET Framework 4, Windows 8, Windows Phone Silverlight 8, Windows Phone 8.1, Silverlight 5), you could to refer to it to as "PORTABLE328" when cross-compiling.</source>
          <target state="translated">Por exemplo, se você quiser direcionar para o <bpt id="p1">[</bpt>PCL Perfil 328<ept id="p1">](http://embed.plnkr.co/03ck2dCtnJogBKHJ9EjY/preview)</ept> (o .NET Framework 4, Windows 8, Windows Phone Silverlight 8, Windows Phone 8.1 e Silverlight 5), você poderia fazer referência a ele como "PORTABLE328" durante a compilação cruzada.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Simply add it to the <ph id="ph1">`project.json`</ph> file as a <ph id="ph2">`buildOptions`</ph> attribute:</source>
          <target state="translated">Basta adicioná-lo ao arquivo <ph id="ph1">`project.json`</ph> como um atributo <ph id="ph2">`buildOptions`</ph>:</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Now you can conditionally compile against that target:</source>
          <target state="translated">Agora você pode compilar condicionalmente em relação a esse destino:</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">`PORTABLE328`</ph> is now recognized by the compiler, the PCL Profile 328 library generated by a compiler will not include <ph id="ph2">`System.Net.Http`</ph> or <ph id="ph3">`System.Threading.Tasks`</ph>.</source>
          <target state="translated">Como <ph id="ph1">`PORTABLE328`</ph> agora é reconhecido pelo compilador, a biblioteca de PCL Perfil 328 gerada por um compilador não incluirá <ph id="ph2">`System.Net.Http`</ph> ou <ph id="ph3">`System.Threading.Tasks`</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>When you build a project that includes PCL Profile 328 and <ph id="ph1">`netstandard1.6`</ph> as frameworks in the <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> file, it will have these subfolders in the <bpt id="p2">*</bpt>/bin/debug<ept id="p2">*</ept> folder:</source>
          <target state="translated">Quando você compila um projeto que inclui o PCL Perfil 328 e <ph id="ph1">`netstandard1.6`</ph> como estruturas no arquivo <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>, ele terá essas subpastas na pasta <bpt id="p2">*</bpt>/bin/debug<ept id="p2">*</ept>:</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>How to use native dependencies</source>
          <target state="translated">Como usar dependências nativas</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>You may wish to write a library which depends on a native <ph id="ph1">`.dll`</ph> file.</source>
          <target state="translated">Pode ser útil escrever uma biblioteca que depende de um arquivo <ph id="ph1">`.dll`</ph> nativo.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>If you're writing such a library, you have have two options:</source>
          <target state="translated">Se você estiver escrevendo uma biblioteca, terá duas opções:</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Reference the native <ph id="ph1">`.dll`</ph> directly in your <ph id="ph2">`project.json`</ph>.</source>
          <target state="translated">faça referência ao <ph id="ph1">`.dll`</ph> nativo diretamente no seu <ph id="ph2">`project.json`</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Package that <ph id="ph1">`.dll`</ph> into its own NuGet package and depend on that package.</source>
          <target state="translated">Empacote esse <ph id="ph1">`.dll`</ph> em seu próprio pacote NuGet e crie a dependência do pacote.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>For the first option, you'll need to include the following in your <ph id="ph1">`project.json`</ph> file:</source>
          <target state="translated">Para a primeira opção, você precisará incluir o seguinte no seu arquivo <ph id="ph1">`project.json`</ph>:</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Setting <ph id="ph1">`allowUnsafe`</ph> to <ph id="ph2">`true`</ph> in a <ph id="ph3">`buildOptions`</ph> section.</source>
          <target state="translated">Definindo <ph id="ph1">`allowUnsafe`</ph> para <ph id="ph2">`true`</ph> em uma seção <ph id="ph3">`buildOptions`</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Specifying a <bpt id="p1">[</bpt>Runtime Identifier (RID)<ept id="p1">](../rid-catalog.md)</ept> in a <ph id="ph1">`runtimes`</ph> section.</source>
          <target state="translated">Especificando um <bpt id="p1">[</bpt>RID (Identificador de Tempo de Execução)<ept id="p1">](../rid-catalog.md)</ept> em uma seção <ph id="ph1">`runtimes`</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Specifying the path to the native <ph id="ph1">`.dll`</ph> file(s) that you are referencing.</source>
          <target state="translated">Especificando o caminho para os arquivos <ph id="ph1">`.dll`</ph> nativos aos quais você está fazendo referência.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Here's an example <ph id="ph1">`project.json`</ph> for a native <ph id="ph2">`.dll`</ph> file in the root directory of the project which runs on Windows:</source>
          <target state="translated">Veja esse <ph id="ph1">`project.json`</ph> de exemplo para um arquivo <ph id="ph2">`.dll`</ph> nativo no diretório raiz do projeto que é executado no Windows:</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>If you're distributing your library as a package, it's recommended that you place the <ph id="ph1">`.dll`</ph> file at the root level of your project.</source>
          <target state="translated">Se você estiver distribuindo sua biblioteca como um pacote, será recomendável colocar o arquivo <ph id="ph1">`.dll`</ph> no nível raiz do seu projeto.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>For the second option, you'll need to build a NuGet package out of your <ph id="ph1">`.dll`</ph> file(s), host on a NuGet or MyGet feed, and depend on it directly.</source>
          <target state="translated">Como a segunda opção, você precisará criar um pacote NuGet dos seus arquivos <ph id="ph1">`.dll`</ph>, hospedá-lo em um feed NuGet ou MyGet e criar a dependência dele diretamente.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>You'll still need to set <ph id="ph1">`allowUnsafe`</ph> to <ph id="ph2">`true`</ph> in the <ph id="ph3">`buildOptions`</ph> section of your <ph id="ph4">`project.json`</ph>.</source>
          <target state="translated">Você ainda precisará definir <ph id="ph1">`allowUnsafe`</ph> como <ph id="ph2">`true`</ph> na seção <ph id="ph3">`buildOptions`</ph> do seu <ph id="ph4">`project.json`</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Here's an example (assuming <ph id="ph1">`MyNativeLib`</ph> is a Nuget package at version <ph id="ph2">`1.2.0`</ph>):</source>
          <target state="translated">Veja esse exemplo (considerando que <ph id="ph1">`MyNativeLib`</ph> é um pacote Nuget na versão <ph id="ph2">`1.2.0`</ph>):</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>To see an example of packaging up cross-platform native binaries, check out the <bpt id="p1">[</bpt>ASP.NET Libuv Package<ept id="p1">](https://github.com/aspnet/libuv-package)</ept> and the <bpt id="p2">[</bpt>corresponding reference in KestrelHttpServer<ept id="p2">](https://github.com/aspnet/KestrelHttpServer/blob/1.0.0/src/Microsoft.AspNetCore.Server.Kestrel/project.json#L19)</ept>.</source>
          <target state="translated">Para ver um exemplo de empacotamento de binários nativos de plataforma cruzada, confira o <bpt id="p1">[</bpt>Pacote ASP.NET Libuv<ept id="p1">](https://github.com/aspnet/libuv-package)</ept> e a <bpt id="p2">[</bpt>referência correspondente no KestrelHttpServer<ept id="p2">](https://github.com/aspnet/KestrelHttpServer/blob/1.0.0/src/Microsoft.AspNetCore.Server.Kestrel/project.json#L19)</ept>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>How to test libraries on .NET Core</source>
          <target state="translated">Como testar bibliotecas .NET Core</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>It's important to be able to test across platforms.</source>
          <target state="translated">É importante ser capaz de testar em várias plataformas.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>It's easiest to use <bpt id="p1">[</bpt>xUnit<ept id="p1">](http://xunit.github.io/)</ept>, which is also the testing tool used by .NET Core projects.</source>
          <target state="translated">É mais fácil usar o <bpt id="p1">[</bpt>xUnit<ept id="p1">](http://xunit.github.io/)</ept>, que também é a ferramenta de teste usada pelos projetos .NET Core.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>How you set up your solution with test projects will depend on the <bpt id="p1">[</bpt>structure of your solution<ept id="p1">](#structuring-a-solution)</ept>.</source>
          <target state="translated">A maneira de configurar sua solução com projetos de teste dependerá da <bpt id="p1">[</bpt>estrutura da sua solução<ept id="p1">](#structuring-a-solution)</ept>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The following example assumes that all source projects are under a top-level <ph id="ph1">`/src`</ph> folder and all test projects are under a top-level <ph id="ph2">`/test`</ph> folder.</source>
          <target state="translated">O exemplo a seguir pressupõe que todos os projetos de origem estejam em uma pasta <ph id="ph1">`/src`</ph> de nível superior e todos os projetos de teste estejam em uma pasta <ph id="ph2">`/test`</ph> de nível superior.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Ensure you have a <ph id="ph1">`global.json`</ph> file at the solution level which understands where the test projects are:</source>
          <target state="translated">Verifique se você tem um arquivo <ph id="ph1">`global.json`</ph> no nível da solução que compreende onde estão os projetos de teste:</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Your solution folder structure should then look like this:</source>
          <target state="translated">A estrutura de pastas de solução deverá ser semelhante à seguinte:</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Create a new test project by creating a project folder under your <ph id="ph1">`/test`</ph> folder, and a <ph id="ph2">`project.json`</ph> file in the new project folder.</source>
          <target state="translated">Crie um novo projeto de teste em uma pasta de projeto na sua pasta <ph id="ph1">`/test`</ph> e um arquivo <ph id="ph2">`project.json`</ph> na pasta do novo projeto.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>To create the <ph id="ph1">`project.json`</ph> file you can run the <ph id="ph2">`dotnet new`</ph> command and modify the <ph id="ph3">`project.json`</ph> file afterwards.</source>
          <target state="translated">Para criar o arquivo <ph id="ph1">`project.json`</ph>, você pode executar o comando <ph id="ph2">`dotnet new`</ph> e modificar o arquivo <ph id="ph3">`project.json`</ph> posteriormente.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The file should have the following:</source>
          <target state="translated">O arquivo deverá ter o seguinte:</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`netcoreapp1.0`</ph> listed as the only entry under <ph id="ph2">`frameworks`</ph>.</source>
          <target state="translated"><ph id="ph1">`netcoreapp1.0`</ph> listado como a única entrada em <ph id="ph2">`frameworks`</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>A reference to <ph id="ph1">`Microsoft.NETCore.App`</ph> version <ph id="ph2">`1.0.0`</ph>.</source>
          <target state="translated">Uma referência para <ph id="ph1">`Microsoft.NETCore.App`</ph> versão <ph id="ph2">`1.0.0`</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>A reference to xUnit version <ph id="ph1">`2.2.0-beta2-build3300`</ph>.</source>
          <target state="translated">Uma referência para xUnit versão <ph id="ph1">`2.2.0-beta2-build3300`</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A reference to <ph id="ph1">`dotnet-test-xunit`</ph> version <ph id="ph2">`2.2.0-preview2-build1029`</ph></source>
          <target state="translated">Uma referência para <ph id="ph1">`dotnet-test-xunit`</ph> versão <ph id="ph2">`2.2.0-preview2-build1029`</ph></target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>A project reference to the library being tested.</source>
          <target state="translated">Uma referência de projeto para a biblioteca que está sendo testada.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The entry <ph id="ph1">`"testRunner":"xunit"`</ph>.</source>
          <target state="translated">A entrada <ph id="ph1">`"testRunner":"xunit"`</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Here's an example (<ph id="ph1">`LibraryUnderTest`</ph> version <ph id="ph2">`1.0.0`</ph> is the library being tested):</source>
          <target state="translated">Veja este exemplo (<ph id="ph1">`LibraryUnderTest`</ph> versão <ph id="ph2">`1.0.0`</ph> é a biblioteca que está sendo testada):</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Restore packages by running <ph id="ph1">`dotnet restore`</ph>.</source>
          <target state="translated">Restaure os pacotes executando <ph id="ph1">`dotnet restore`</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>You should do this at the solution level if you haven't restored packages yet.</source>
          <target state="translated">Você deverá fazer isso no nível da solução se ainda não tiver restaurado os pacotes.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Navigate to your test project and run tests with <ph id="ph1">`dotnet test`</ph>:</source>
          <target state="translated">Navegue até seu projeto de teste e execute os testes com <ph id="ph1">`dotnet test`</ph>:</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>And that's it!</source>
          <target state="translated">E pronto.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>You can now test your library across all platforms using command line tools.</source>
          <target state="translated">Agora você pode testar sua biblioteca em todas as plataformas usando as ferramentas de linha de comando.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>To continue testing now that you have everything set up, testing your library is very simple:</source>
          <target state="translated">É muito simples testar sua biblioteca agora que está tudo configurado:</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Make changes to your library.</source>
          <target state="translated">Faça alterações na sua biblioteca.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Run tests from the command line, in your test directory, with <ph id="ph1">`dotnet test`</ph> command.</source>
          <target state="translated">Execute os testes de linha de comando no diretório de teste com o comando <ph id="ph1">`dotnet test`</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Your code will be automatically rebuilt when you invoke <ph id="ph1">`dotnet test`</ph> command.</source>
          <target state="translated">Seu código será recriado automaticamente quando você invoca o comando <ph id="ph1">`dotnet test`</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Just remember to run <ph id="ph1">`dotnet restore`</ph> from the command line any time you add a new dependency and you'll be good to go!</source>
          <target state="translated">Lembre-se de executar <ph id="ph1">`dotnet restore`</ph> na linha de comando sempre que adicionar uma nova dependência e você estará pronto para começar.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>How to use multiple projects</source>
          <target state="translated">Como usar vários projetos</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>A common need for larger libraries is to place functionality in different projects.</source>
          <target state="translated">Uma necessidade comum das bibliotecas grandes é alocar funcionalidades em diferentes projetos.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Imagine you wished to build a library which could be consumed in idiomatic C# and F#.</source>
          <target state="translated">Imagine que você deseja compilar uma biblioteca que poderia ser consumida em expressões idiomáticas de C# e F#.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>That would mean that consumers of your library consume them in ways which are natural to C# or F#.</source>
          <target state="translated">Isso significa que os consumidores da sua biblioteca o farão de maneira natural ao C# ou F#.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>For example, in C# you might consume the library like this:</source>
          <target state="translated">Por exemplo, você poderia consumir a biblioteca em C# dessa forma:</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>In F#, it might look like this:</source>
          <target state="translated">No F#, ela poderia assemelhar-se a:</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Consumption scenarios like this mean that the APIs being accessed have to have a different structure for C# and F#.</source>
          <target state="translated">Cenários de consumo como esse significam que as APIs que estão sendo acessadas devem ter uma estrutura diferente para C# e F#.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>A common approach to accomplishing this is to factor all of the logic of a library into a core project, with C# and F# projects defining the API layers that call into that core project.</source>
          <target state="translated">Uma abordagem comum para realizar isso é fatorar toda a lógica de uma biblioteca em um projeto principal, com projetos C# e F# definindo as camadas de API que chamam esse projeto principal.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The rest of the section will use the following names:</source>
          <target state="translated">O restante da seção usará os nomes a seguir:</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AwesomeLibrary.Core<ept id="p1">**</ept> - A core project which contains all logic for the library</source>
          <target state="translated"><bpt id="p1">**</bpt>AwesomeLibrary.Core<ept id="p1">**</ept> – Um projeto principal que contém toda a lógica para a biblioteca</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AwesomeLibrary.CSharp<ept id="p1">**</ept> - A project with public APIs intended for consumption in C</source>
          <target state="translated"><bpt id="p1">**</bpt>AwesomeLibrary.CSharp<ept id="p1">**</ept> – Um projeto com APIs públicas destinadas ao consumo em C</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>AwesomeLibrary.FSharp<ept id="p1">**</ept> - A project with public APIs intended for consumption in F</source>
          <target state="translated"><bpt id="p1">**</bpt>AwesomeLibrary.FSharp<ept id="p1">**</ept> – Um projeto com APIs públicas destinadas ao consumo em F</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Project-to-project referencing</source>
          <target state="translated">Referência projeto a projeto</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The best way to reference a project is to do the following:</source>
          <target state="translated">A melhor maneira de fazer referência a um projeto é fazer o seguinte:</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Make sure the project you wish to reference has a good name for its containing folder on disk.</source>
          <target state="translated">Verifique se o projeto ao qual que você deseja fazer referência tem um bom nome para a pasta recipiente no disco.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>This will be the name used to reference your project.</source>
          <target state="translated">Esse será o nome usado para fazer referência ao seu projeto.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Reference the name from (1) in the <ph id="ph1">`project.json`</ph> file of the consuming project specifying <ph id="ph2">`"target":"project"`</ph>.</source>
          <target state="translated">Faça referência ao nome de (1) no arquivo <ph id="ph1">`project.json`</ph> do projeto de consumo especificando <ph id="ph2">`"target":"project"`</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`project.json`</ph> files for both <bpt id="p1">**</bpt>AwesomeLibrary.CSharp<ept id="p1">**</ept> and <bpt id="p2">**</bpt>AwesomeLibrary.FSharp<ept id="p2">**</ept> now need to reference <bpt id="p3">**</bpt>AwesomeLibrary.Core<ept id="p3">**</ept> as a <ph id="ph2">`project`</ph> target.</source>
          <target state="translated">Os arquivos <ph id="ph1">`project.json`</ph> para <bpt id="p1">**</bpt>AwesomeLibrary.CSharp<ept id="p1">**</ept> e <bpt id="p2">**</bpt>AwesomeLibrary.FSharp<ept id="p2">**</ept> agora precisam fazer referência a <bpt id="p3">**</bpt>AwesomeLibrary.Core<ept id="p3">**</ept> como um destino <ph id="ph2">`project`</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>If you aren't multitargeting, you can use the global <ph id="ph1">`dependencies`</ph> entry:</source>
          <target state="translated">Se você não usar multiplataformas, poderá usar a entrada <ph id="ph1">`dependencies`</ph> global:</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>If you are multitargeting, you may not be able to use a global <ph id="ph1">`dependencies`</ph> entry and may have to reference <bpt id="p1">**</bpt>AwesomeLibrary.Core<ept id="p1">**</ept> in a target-level <ph id="ph2">`dependencies`</ph> entry.</source>
          <target state="translated">Se você usar multiplataforma, não poderá usar uma entrada <ph id="ph1">`dependencies`</ph> global, sendo necessário fazer referência a <bpt id="p1">**</bpt>AwesomeLibrary.Core<ept id="p1">**</ept> em uma entrada <ph id="ph2">`dependencies`</ph> no nível do destino.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>For example, if you were targeting <ph id="ph1">`netstandard1.6`</ph>, you could do so like this:</source>
          <target state="translated">Por exemplo, se você estiver direcionando <ph id="ph1">`netstandard1.6`</ph>, poderia fazê-lo dessa forma:</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Structuring a Solution</source>
          <target state="translated">Estruturando uma solução</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Another important aspect of multi-project solutions is establishing a good overall project structure.</source>
          <target state="translated">Outro aspecto importante das soluções multiprojetos é estabelecer uma boa estrutura de projeto geral.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>To structure a multi-project library, you must use top-level <ph id="ph1">`/src`</ph> and <ph id="ph2">`/test`</ph> folders:</source>
          <target state="translated">Para estruturar uma biblioteca multiprojetos, você deve usar as pastas <ph id="ph1">`/src`</ph> e <ph id="ph2">`/test`</ph> de nível superior:</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`global.json`</ph> file for this solution would look like this:</source>
          <target state="translated">O arquivo <ph id="ph1">`global.json`</ph> para essa solução seria semelhante a:</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>This approach follows the same pattern established by project templates in the <ph id="ph1">`dotnet new`</ph> command establish, where all projects are placed under a <ph id="ph2">`/src`</ph> directory and all tests are placed under a <ph id="ph3">`/test`</ph> directory.</source>
          <target state="translated">Essa abordagem segue o mesmo padrão estabelecido pelos modelos de projeto no comando establish do <ph id="ph1">`dotnet new`</ph>, em que todos os projetos são colocados em um diretório <ph id="ph2">`/src`</ph> e todos os testes são colocados em um diretório <ph id="ph3">`/test`</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Here's how you could restore packages, build, and test your entire project:</source>
          <target state="translated">Veja a seguir como você pode restaurar, compilar e testar os pacotes de todo o projeto:</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>And that's it!</source>
          <target state="translated">E pronto.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>