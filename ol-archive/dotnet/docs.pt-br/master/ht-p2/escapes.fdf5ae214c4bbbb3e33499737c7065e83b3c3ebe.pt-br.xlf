<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4f4b9cde90a98215c0aaab6da217ff68476cf88</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\escapes.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d35bcbe4d9b600e23c083f58d79365fe706c4b9e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">654be0c1fa88e384746816288cddc163a5014a53</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Character escapes in regular expressions</source>
          <target state="translated">Escapes de caracteres em expressões regulares</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Character escapes in regular expressions</source>
          <target state="translated">Escapes de caracteres em expressões regulares</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Character escapes in regular expressions</source>
          <target state="translated">Escapes de caracteres em expressões regulares</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The backslash (<ph id="ph1">\)</ph> in a regular expression indicates one of the following:</source>
          <target state="translated">A barra invertida (<ph id="ph1">\)</ph>) em uma expressão regular indica uma das situações a seguir:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The character that follows it is a special character, as shown in the table in the following section.</source>
          <target state="translated">O caractere que segue é um caractere especial, conforme mostrado na tabela na seção a seguir.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">**</bpt>\b<ept id="p1">**</ept> is an anchor that indicates that a regular expression match should begin on a word boundary, <bpt id="p2">**</bpt>\t<ept id="p2">**</ept> represents a tab, and <bpt id="p3">**</bpt>\x020<ept id="p3">**</ept> represents a space.</source>
          <target state="translated">Por exemplo, <bpt id="p1">**</bpt>\b<ept id="p1">**</ept> é uma âncora que indica que uma correspondência da expressão regular deve começar em um limite de palavra, <bpt id="p2">**</bpt>\t<ept id="p2">**</ept> representa uma tabulação e <bpt id="p3">**</bpt>\x020<ept id="p3">**</ept> representa um espaço.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A character that otherwise would be interpreted as an unescaped language construct should be interpreted literally.</source>
          <target state="translated">Um caractere que, caso contrário, seria interpretado como um constructo de linguagem sem escape deve ser interpretado literalmente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, a brace (<bpt id="p1">**</bpt>{<ept id="p1">**</ept>) begins the definition of a quantifier, but a backslash followed by a brace (<bpt id="p2">**</bpt><ph id="ph1">\{</ph><ept id="p2">**</ept>) indicates that the regular expression engine should match the brace.</source>
          <target state="translated">Por exemplo, uma chave (<bpt id="p1">**</bpt>{<ept id="p1">**</ept>) inicia a definição de um quantificador, mas uma barra invertida seguida por uma chave (<bpt id="p2">**</bpt><ph id="ph1">\{</ph><ept id="p2">**</ept>) indica que o mecanismo de expressão regular deve corresponder à chave.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Similarly, a single backslash marks the beginning of an escaped language construct, but two backslashes (<bpt id="p1">**</bpt><ph id="ph1">\\</ph><ept id="p1">**</ept>) indicate that the regular expression engine should match the backslash.</source>
          <target state="translated">Da mesma forma, uma única barra invertida marca o início de um constructo de linguagem com escape, mas duas barras invertidas (<bpt id="p1">**</bpt><ph id="ph1">\\</ph><ept id="p1">**</ept>) indicam que o mecanismo de expressão regular deve corresponder à barra invertida.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Character escapes are recognized in regular expression patterns but not in replacement patterns.</source>
          <target state="translated">Escapes de caracteres são reconhecidos em padrões de expressão regulares, mas não em padrões de substituição.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Character Escapes in .NET</source>
          <target state="translated">Escapes de caracteres em .NET</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following table lists the character escapes supported by regular expressions in .NET.</source>
          <target state="translated">A tabela a seguir lista os escapes de caracteres com suporte das expressões regulares em .NET.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Character or sequence</source>
          <target state="translated">Caractere ou sequência</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>All characters except for the following: <bpt id="p1">*</bpt><bpt id="p2">*</bpt>. $ ^ { [ ( &amp;#124; ) <ept id="p2">*</ept> + ? <ph id="ph1">\*</ph><ept id="p1">*</ept></source>
          <target state="translated">Todos os caracteres, exceto pelos seguintes: <bpt id="p1">*</bpt><bpt id="p2">*</bpt>. $ ^ { [ ( &amp;#124; ) <ept id="p2">*</ept> + ? <ph id="ph1">\*</ph><ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Characters other than those listed in the <bpt id="p1">**</bpt>Character or sequence<ept id="p1">**</ept> column have no special meaning in regular expressions; they match themselves.</source>
          <target state="translated">Caracteres diferentes dos listados na coluna <bpt id="p1">**</bpt>Caractere ou sequência<ept id="p1">**</ept> não têm significado especial em expressões regulares; eles correspondem a si mesmos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The characters included in the <bpt id="p1">**</bpt>Character or sequence<ept id="p1">**</ept> column are special regular expression language elements.</source>
          <target state="translated">Os caracteres incluídos na coluna <bpt id="p1">**</bpt>Caractere ou sequência<ept id="p1">**</ept> são elementos especiais na linguagem de expressão regular.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To match them in a regular expression, they must be escaped or included in a positive character group.</source>
          <target state="translated">Para que seja feita a correspondência com eles em uma expressão regular, eles devem receber um escape ou ser incluídos em um grupo de caracteres positivo.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, the regular expression <ph id="ph1">`\$\d+ or [$]\d+`</ph> matches "$1200".</source>
          <target state="translated">Por exemplo, a expressão regular <ph id="ph1">`\$\d+ or [$]\d+`</ph> corresponde a "$1200".</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>\a<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>\a<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Matches a bell (alarm) character, <bpt id="p1">**</bpt>\u0007<ept id="p1">**</ept>.</source>
          <target state="translated">Corresponde a um caractere de sino (alarme), <bpt id="p1">**</bpt>\u0007<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>\b<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>\b<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In a <bpt id="p1">__</bpt>[<ept id="p1">__</ept><bpt id="p2">*</bpt>character<ept id="p2">*</ept><bpt id="p3">_</bpt><bpt id="p4">*</bpt>group<ept id="p4">*</ept><ept id="p3">_</ept><bpt id="p5">_</bpt>]<ept id="p5">_</ept>_ character class, matches a backspace, <bpt id="p6">**</bpt>\u0008<ept id="p6">**</ept>.</source>
          <target state="translated">Em uma classe de caracteres <bpt id="p1">__</bpt>[<ept id="p1">__</ept><bpt id="p2">*</bpt>grupo de<ept id="p2">*</ept><bpt id="p3">_</bpt><bpt id="p4">*</bpt>caracteres<ept id="p4">*</ept><ept id="p3">_</ept><bpt id="p5">_</bpt>]<ept id="p5">_</ept>_, corresponde a uma barra invertida, <bpt id="p6">**</bpt>\ u0008<ept id="p6">**</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>(See <bpt id="p1">[</bpt>Character classes in regular expressions<ept id="p1">](classes.md)</ept>.) Outside a character class, <bpt id="p2">**</bpt>\b<ept id="p2">**</ept> is an anchor that matches a word boundary.</source>
          <target state="translated">(Consulte <bpt id="p1">[</bpt>Classes de caracteres em expressões regulares<ept id="p1">](classes.md)</ept>.) Fora de uma classe de caracteres, <bpt id="p2">**</bpt>\b<ept id="p2">**</ept> é uma âncora que corresponde a um limite de palavra.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>(See <bpt id="p1">[</bpt>Anchors in regular expressions<ept id="p1">](anchors.md)</ept>.)</source>
          <target state="translated">(Consulte <bpt id="p1">[</bpt>Âncoras em expressões regulares<ept id="p1">](anchors.md)</ept>.)</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>\t<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>\t<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Matches a tab, <bpt id="p1">**</bpt>\u0009<ept id="p1">**</ept>.</source>
          <target state="translated">Corresponde a uma tabulação, <bpt id="p1">**</bpt>\u0009<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>\r<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>\r<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Matches a carriage return, <bpt id="p1">**</bpt>\u000D<ept id="p1">**</ept>.</source>
          <target state="translated">Corresponde a um retorno de carro, <bpt id="p1">**</bpt>\u000D<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Note that <bpt id="p1">**</bpt>\r<ept id="p1">**</ept> is not equivalent to the newline character, <bpt id="p2">**</bpt>\n<ept id="p2">**</ept>.</source>
          <target state="translated">Observe que <bpt id="p1">**</bpt>\r<ept id="p1">**</ept> não é equivalente ao caractere de nova linha, <bpt id="p2">**</bpt>\n<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>\v<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>\v<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Matches a vertical tab, <bpt id="p1">**</bpt>\u000B<ept id="p1">**</ept>.</source>
          <target state="translated">Corresponde a uma tabulação vertical, <bpt id="p1">**</bpt>\u000B<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>\f<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>\f<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Matches a form feed, <bpt id="p1">**</bpt>\u000C<ept id="p1">**</ept>.</source>
          <target state="translated">Corresponde a um avanço de página, <bpt id="p1">**</bpt>\u000C<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>\n<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>\n<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Matches a new line, <bpt id="p1">**</bpt>\u000A<ept id="p1">**</ept>.</source>
          <target state="translated">Corresponde a uma nova linha, <bpt id="p1">**</bpt>\u000A<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>\e<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>\e<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Matches an escape, <bpt id="p1">**</bpt>\u001B<ept id="p1">**</ept>.</source>
          <target state="translated">Corresponde a um escape, <bpt id="p1">**</bpt>\u001B<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">*</ph><bpt id="p1">*</bpt><ph id="ph2">\*</ph><ept id="p1">*</ept><bpt id="p2">_</bpt>nnn<ept id="p2">_</ept></source>
          <target state="translated"><ph id="ph1">*</ph><bpt id="p1">*</bpt><ph id="ph2">\*</ph><ept id="p1">*</ept><bpt id="p2">_</bpt>nnn<ept id="p2">_</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Matches an ASCII character, where nnn consists of two or three digits that represent the octal character code.</source>
          <target state="translated">Corresponde a um caractere ASCII, em que nnn são dois ou três dígitos que representam o código de caracteres octal.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`\040`</ph> represents a space character.</source>
          <target state="translated">Por exemplo, <ph id="ph1">`\040`</ph> representa um caractere de espaço.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This construct is interpreted as a backreference if it has only one digit (for example, <ph id="ph1">`\2`</ph>) or if it corresponds to the number of a capturing group.</source>
          <target state="translated">Esse constructo é interpretado como referência inversa se tiver apenas um dígito (por exemplo, <ph id="ph1">`\2`</ph>) ou se corresponder ao número de um grupo de captura.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>(See <bpt id="p1">[</bpt>Backreference constructs in regular expressions<ept id="p1">](backreference.md)</ept>.)</source>
          <target state="translated">Consulte (<bpt id="p1">[</bpt>Construtores de referência inversa em expressões regulares<ept id="p1">](backreference.md)</ept>.)</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>\x<ept id="p1">**</ept><bpt id="p2">_</bpt>nn<ept id="p2">_</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>\x<ept id="p1">**</ept><bpt id="p2">_</bpt>nn<ept id="p2">_</ept></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Matches an ASCII character, where <bpt id="p1">*</bpt>nn<ept id="p1">*</ept> is a two-digit hexadecimal character code.</source>
          <target state="translated">Corresponde a um caractere ASCII, em que <bpt id="p1">*</bpt>nn<ept id="p1">*</ept> é um código de caractere hexadecimal com dois dígitos.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>\c<ept id="p1">**</ept><bpt id="p2">_</bpt>X<ept id="p2">_</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>\c<ept id="p1">**</ept><bpt id="p2">_</bpt>X<ept id="p2">_</ept></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Matches an ASCII control character, where <bpt id="p1">*</bpt>X<ept id="p1">*</ept> is the letter of the control character.</source>
          <target state="translated">Corresponde a um caractere de controle ASCII, em que <bpt id="p1">*</bpt>X<ept id="p1">*</ept> é a letra do caractere de controle.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`\cC`</ph> is CTRL-C.</source>
          <target state="translated">Por exemplo, <ph id="ph1">`\cC`</ph> é CTRL-C.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>\u<ept id="p1">**</ept><bpt id="p2">_</bpt>nnnn<ept id="p2">_</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>\u<ept id="p1">**</ept><bpt id="p2">_</bpt>nnnn<ept id="p2">_</ept></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Matches a UTF-16 code unit whose value is <bpt id="p1">*</bpt>nnnn<ept id="p1">*</ept> hexadecimal.</source>
          <target state="translated">Corresponde a uma unidade de código UTF-16 cujo valor é <bpt id="p1">*</bpt>nnnn<ept id="p1">*</ept> hexadecimal.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> The Perl 5 character escape that is used to specify Unicode is not supported by .NET.</source>
          <target state="translated"><bpt id="p1">**</bpt>Observação<ept id="p1">**</ept> O escape de caractere Perl 5 que é usado para especificar Unicode não tem suporte no .NET.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The Perl 5 character escape has the form <bpt id="p1">**</bpt>\x{####…}<ept id="p1">**</ept>, where <bpt id="p2">**</bpt>####…<ept id="p2">**</ept></source>
          <target state="translated">O caractere de escape Perl 5 tem o formato <bpt id="p1">**</bpt>\x{###...}<ept id="p1">**</ept>, em que <bpt id="p2">**</bpt>####…<ept id="p2">**</ept></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>is a series of hexadecimal digits.</source>
          <target state="translated">é uma série de dígitos hexadecimais.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Instead, use <bpt id="p1">**</bpt>\u<ept id="p1">**</ept><bpt id="p2">_</bpt>nnnn<ept id="p2">_</ept>.</source>
          <target state="translated">Em vez disso, use <bpt id="p1">**</bpt>\u<ept id="p1">**</ept><bpt id="p2">_</bpt>nnnn<ept id="p2">_</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When followed by a character that is not recognized as an escaped character, matches that character.</source>
          <target state="translated">Quando seguido por um caractere que não é reconhecido como um caractere com escape, corresponde a esse caractere.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`\*`</ph> matches an asterisk (*) and is the same as <ph id="ph2">`\x2A`</ph>.</source>
          <target state="translated">Por exemplo, <ph id="ph1">`\*`</ph> corresponde a um asterisco (*) e é igual a <ph id="ph2">`\x2A`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Exemplo</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of character escapes in a regular expression.</source>
          <target state="translated">O exemplo a seguir ilustra o uso de escapes de caracteres em uma expressão regular.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>It parses a string that contains the names of the world's largest cities and their populations in 2009.</source>
          <target state="translated">Ele analisa uma cadeia de caracteres que contém os nomes das maiores cidades do mundo e suas populações em 2009.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Each city name is separated from its population by a tab (<bpt id="p1">**</bpt>\t<ept id="p1">**</ept>) or a vertical bar (| or <ph id="ph1">`\u007c`</ph>).</source>
          <target state="translated">O nome de cada cidade é separado da sua população por uma tabulação (<bpt id="p1">**</bpt>\t<ept id="p1">**</ept>) ou uma barra vertical (| ou <ph id="ph1">`\u007c`</ph>).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Individual cities and their populations are separated from each other by a carriage return and line feed.</source>
          <target state="translated">Cidades individuais e suas populações são separadas umas das outras por um retorno de carro e uma alimentação de linha.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The regular expression <ph id="ph1">`\G(.+)[\t|\u007c](.+)\r?\n`</ph> is interpreted as shown in the following table.</source>
          <target state="translated">A expressão regular <ph id="ph1">`\G(.+)[\t|\u007c](.+)\r?\n`</ph> é interpretada conforme mostrado na tabela a seguir.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">Padrão</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Begin the match where the last match ended.</source>
          <target state="translated">Inicia a correspondência onde a última correspondência terminou.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Match any character one or more times.</source>
          <target state="translated">Corresponde qualquer caractere uma ou mais vezes.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This is the first capturing group.</source>
          <target state="translated">Este é o primeiro grupo de captura.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Match a tab (<bpt id="p1">**</bpt>\t<ept id="p1">**</ept>) or a vertical bar (&amp;#124;).</source>
          <target state="translated">Corresponde a uma tabulação (<bpt id="p1">**</bpt>\t<ept id="p1">**</ept>) ou a uma barra vertical (&amp;#124;).</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Match any character one or more times.</source>
          <target state="translated">Corresponde qualquer caractere uma ou mais vezes.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This is the second capturing group.</source>
          <target state="translated">Este é o segundo grupo de captura.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Match zero or one occurrence of a carriage return followed by a new line.</source>
          <target state="translated">Corresponde a zero ou uma ocorrência de um retorno de carro, seguida por uma nova linha.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Regular expression language - quick reference<ept id="p1">](quick-ref.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Linguagem de expressão regular – referência rápida<ept id="p1">](quick-ref.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>