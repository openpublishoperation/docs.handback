<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b61b4736880d57f02070150d8613d860505b268</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\composite-format.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d9832564a26d6ff6f7bde1b294962c36e08569bd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02eb081844fab88da492d9b924b7f16a4e3d5f8e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Composite formatting</source>
          <target state="translated">Составное форматирование</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Composite formatting</source>
          <target state="translated">Составное форматирование</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Composite formatting</source>
          <target state="translated">Составное форматирование</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The .NET composite formatting feature takes a list of objects and a composite format string as input.</source>
          <target state="translated">В качестве входных данных для составного форматирования в .NET используется список объектов и строка составного формата.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A composite format string consists of fixed text intermixed with indexed placeholders, called format items, that correspond to the objects in the list.</source>
          <target state="translated">Строка составного формата состоит из фиксированного текста, в который включены индексированные местозаполнители, которые называются элементами форматирования и соответствуют объектам из списка.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The formatting operation yields a result string that consists of the original fixed text intermixed with the string representation of the objects in the list.</source>
          <target state="translated">Операция форматирования создает результирующую строку, состоящую из исходного фиксированного текста, в который включено строковое представление объектов из списка.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The composite formatting feature is supported by methods such as the following:</source>
          <target state="translated">Возможность составного форматирования поддерживается следующими методами:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept>, which returns a formatted result string.</source>
          <target state="translated">Метод <bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept>, который возвращает отформатированную результирующую строку.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept>, which appends a formatted result string to a <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept>, который добавляет отформатированную строку результата в объект <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Some overloads of the <bpt id="p1">[</bpt>Console<ept id="p1">](xref:System.Console)</ept> <ph id="ph1">`WriteLine`</ph> method, which display a formatted result string to the console.</source>
          <target state="translated">Некоторые перегруженные версии метода <bpt id="p1">[</bpt>Console<ept id="p1">](xref:System.Console)</ept> <ph id="ph1">`WriteLine`</ph>, которые отображают отформатированную результирующую строку в консоли.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Some overloads of the <bpt id="p1">[</bpt>TextWriter<ept id="p1">](xref:System.IO.TextWriter)</ept> <ph id="ph1">`WriteLine`</ph> method, which write the formatted result string to a stream or file.</source>
          <target state="translated">Некоторые перегруженные версии метода <bpt id="p1">[</bpt>TextWriter<ept id="p1">](xref:System.IO.TextWriter)</ept> <ph id="ph1">`WriteLine`</ph>, которые записывают отформатированную результирующую строку в поток или файл.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Classes derived from <bpt id="p1">[</bpt>TextWriter<ept id="p1">](xref:System.IO.TextWriter)</ept>, such as <bpt id="p2">[</bpt>StreamWriter<ept id="p2">](xref:System.IO.StreamWriter)</ept>, also share this functionality.</source>
          <target state="translated">Классы, производные от <bpt id="p1">[</bpt>TextWriter<ept id="p1">](xref:System.IO.TextWriter)</ept>, например <bpt id="p2">[</bpt>StreamWriter<ept id="p2">](xref:System.IO.StreamWriter)</ept>, также поддерживают эту функцию.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debug.WriteLine(String, Object[])<ept id="p1">](xref:System.Diagnostics.Debug.WriteLine(System.String,System.Object[]))</ept>, which outputs a formatted message to trace listeners.</source>
          <target state="translated">Метод <bpt id="p1">[</bpt>Debug.WriteLine(String, Object[])<ept id="p1">](xref:System.Diagnostics.Debug.WriteLine(System.String,System.Object[]))</ept>, который выводит отформатированное сообщение в прослушиватели трассировки.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Trace.TraceError(String, Object[])<ept id="p1">](xref:System.Diagnostics.Trace.TraceError(System.String,System.Object[]))</ept>, <bpt id="p2">[</bpt>Trace.TraceInformation(String, Object[])<ept id="p2">](xref:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[]))</ept>, and <bpt id="p3">[</bpt>Trace.TraceWarning(String, Object[])<ept id="p3">](xref:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[]))</ept> methods, which output formatted messages to trace listeners.</source>
          <target state="translated">Методы <bpt id="p1">[</bpt>Trace.TraceError(String, Object[])<ept id="p1">](xref:System.Diagnostics.Trace.TraceError(System.String,System.Object[]))</ept>, <bpt id="p2">[</bpt>Trace.TraceInformation(String, Object[])<ept id="p2">](xref:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[]))</ept> и <bpt id="p3">[</bpt>Trace.TraceWarning(String, Object[])<ept id="p3">](xref:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[]))</ept>, которые выводят отформатированные сообщения в прослушиватели трассировки.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>TraceSource.TraceInformation(String, Object[])<ept id="p1">](xref:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[]))</ept> method, which writes an informational method to trace listeners.</source>
          <target state="translated">Метод <bpt id="p1">[</bpt>TraceSource.TraceInformation(String, Object[])<ept id="p1">](xref:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[]))</ept>, который записывает информационный метод в прослушиватели трассировки.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Composite Format String</source>
          <target state="translated">Строка составного формата</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A composite format string and object list are used as arguments of methods that support the composite formatting feature.</source>
          <target state="translated">Строка составного формата и список объектов используются в качестве аргументов методов, поддерживающих составное форматирование.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A composite format string consists of zero or more runs of fixed text intermixed with one or more format items.</source>
          <target state="translated">Строка составного формата состоит из блоков фиксированного текста числом от нуля и больше, перемежаемых одним или несколькими элементами форматирования.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The fixed text is any string that you choose, and each format item corresponds to an object or boxed structure in the list.</source>
          <target state="translated">Фиксированным текстом может являться произвольная строка, а каждый элемент форматирования должен соответствовать объекту или упакованной структуре из списка.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The composite formatting feature returns a new result string where each format item is replaced by the string representation of the corresponding object in the list.</source>
          <target state="translated">В ходе составного форматирования создается новая результирующая строка, в которой все элементы форматирования заменены на строковое представление соответствующих объектов из списка.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Consider the following <bpt id="p1">[</bpt>Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> code fragment.</source>
          <target state="translated">Рассмотрим следующий фрагмент кода <bpt id="p1">[</bpt>форматирования<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The fixed text is <ph id="ph1">`"Name = "`</ph> and <ph id="ph2">`", hours = "`</ph>.</source>
          <target state="translated">Фиксированным текстом здесь является <ph id="ph1">`"Name = "`</ph> и <ph id="ph2">`", hours = "`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The format items are <ph id="ph1">`"{0}"`</ph>, whose index is 0, which corresponds to the object <ph id="ph2">`name`</ph> and <ph id="ph3">`"{1:hh}"`</ph>, whose index is 1, which corresponds to the object <ph id="ph4">`DateTime.Now`</ph>.</source>
          <target state="translated">Элементы форматирования здесь — это <ph id="ph1">`"{0}"`</ph> c индексом 0, который соответствует объекту <ph id="ph2">`name`</ph>, и <ph id="ph3">`"{1:hh}"`</ph> с индексом 1, который соответствует объекту <ph id="ph4">`DateTime.Now`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Format Item Syntax</source>
          <target state="translated">Синтаксис элементов форматирования</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Each format item takes the following form and consists of the following components:</source>
          <target state="translated">Каждый элемент форматирования имеет следующий вид и состоит из следующих компонентов:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">__</bpt>{<ept id="p1">__</ept><bpt id="p2">*</bpt>index<ept id="p2">*</ept>[,<bpt id="p3">*</bpt>alignment<ept id="p3">*</ept>][:<bpt id="p4">*</bpt>formatString<ept id="p4">*</ept>]<bpt id="p5">__</bpt>}<ept id="p5">__</ept></source>
          <target state="translated"><bpt id="p1">__</bpt>{<ept id="p1">__</ept><bpt id="p2">*</bpt>index<ept id="p2">*</ept>[,<bpt id="p3">*</bpt>alignment<ept id="p3">*</ept>][:<bpt id="p4">*</bpt>formatString<ept id="p4">*</ept>]<bpt id="p5">__</bpt>}<ept id="p5">__</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The matching braces ("{" and "}") are required.</source>
          <target state="translated">Парные фигурные скобки ("{" и "}") здесь обязательны.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Index Component</source>
          <target state="translated">Индекс</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The mandatory <bpt id="p1">*</bpt>index<ept id="p1">*</ept> component, also called a parameter specifier, is a number starting from 0 that identifies a corresponding item in the list of objects.</source>
          <target state="translated">Обязательный компонент <bpt id="p1">*</bpt>index<ept id="p1">*</ept>, также называемый описателем параметра, — это число, определяющее соответствующий объект из списка; индексация элементов ведется от нуля.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>That is, the format item whose parameter specifier is 0 formats the first object in the list, the format item whose parameter specifier is 1 formats the second object in the list, and so on.</source>
          <target state="translated">Иными словами, элемент форматирования с индексом 0 отвечает за формат первого объекта в списке, элемент форматирования с индексом 1 служит для форматирования второго объекта в списке и т. д.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example includes four parameter specifiers, numbered zero through three, to represent prime numbers less than ten:</source>
          <target state="translated">В пример ниже входят четыре описателя параметров (от нуля до трех) для представления простых чисел меньше&amp;10;.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Multiple format items can refer to the same element in the list of objects by specifying the same parameter specifier.</source>
          <target state="translated">На один и тот же элемент в списке объектов может ссылаться сразу несколько элементов форматирования — достигается это путем задания одинакового описателя параметра.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For example, you can format the same numeric value in hexadecimal, scientific, and number format by specifying a composite format string such as : "0x{0:X} {0:E} {0:N}", as the following example shows.</source>
          <target state="translated">Например, одно и то же числовое значение можно перевести в формат шестнадцатеричного, экспоненциального и десятичного числа, задав строку составного формата, например "0x{0:X} {0:E} {0:N}", как показано в примере ниже.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Each format item can refer to any object in the list.</source>
          <target state="translated">Любой элемент форматирования может ссылаться на произвольный объект списка.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, if there are three objects, you can format the second, first, and third object by specifying a composite format string like this: "{1} {0} {2}".</source>
          <target state="translated">Например, если имеется три объекта, то можно отформатировать сначала второй, а затем первый и третий объекты, задав следующую строку составного форматирования: "{1} {0} {2}".</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An object that is not referenced by a format item is ignored.</source>
          <target state="translated">Объекты, на которые не ссылаются элементы форматирования, пропускаются.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>FormatException<ept id="p1">](xref:System.FormatException)</ept> is thrown at runtime if a parameter specifier designates an item outside the bounds of the list of objects.</source>
          <target state="translated">Если описатель параметра ссылается на элемент за пределами списка объектов, то во время выполнения создается исключение <bpt id="p1">[</bpt>FormatException<ept id="p1">](xref:System.FormatException)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Alignment Component</source>
          <target state="translated">Выравнивание</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The optional <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> component is a signed integer indicating the preferred formatted field width.</source>
          <target state="translated">Необязательный компонент <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> — это целое число со знаком, которое служит для указания желательной ширины поля форматирования.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the value of <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> is less than the length of the formatted string, <bpt id="p2">*</bpt>alignment<ept id="p2">*</ept> is ignored and the length of the formatted string is used as the field width.</source>
          <target state="translated">Если значение <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> меньше длины форматируемой строки, то <bpt id="p2">*</bpt>alignment<ept id="p2">*</ept> пропускается, и в качестве значения ширины поля используется длина форматируемой строки.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The formatted data in the field is right-aligned if <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> is positive and left-aligned if <bpt id="p2">*</bpt>alignment<ept id="p2">*</ept> is negative.</source>
          <target state="translated">Форматируемые данные выравниваются в поле по правому краю, если <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> имеет положительное значение, или по левому краю, если <bpt id="p2">*</bpt>alignment<ept id="p2">*</ept> имеет отрицательное значение.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If padding is necessary, white space is used.</source>
          <target state="translated">При необходимости отформатированная строка дополняется пробелами.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The comma is required if <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept>  is specified.</source>
          <target state="translated">При использовании компонента <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> необходимо поставить запятую.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following example defines two arrays, one containing the names of employees and the other containing the hours they worked over a two-week period.</source>
          <target state="translated">В примере ниже определяются два массива: один содержит имена сотрудников, а второй — количество часов, которые они проработали в течение двух недель.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The composite format string left-aligns the names in a 20-character field, and right-aligns their hours in a 5-character field.</source>
          <target state="translated">Строка составного формата выравнивает имена по левому краю 20-символьного поля, а часы работы — по правому краю 5-символьного поля.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Note that the "N1" standard format string is also used to format the hours with one fractional digit.</source>
          <target state="translated">Обратите внимание, что строка стандартного формата "N1" также используется для форматирования часов с одной цифрой дробной части.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Format String Component</source>
          <target state="translated">Компонент строки формата</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The optional <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> component is a format string that is appropriate for the type of object being formatted.</source>
          <target state="translated">Необязательный компонент <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> — это строка формата, соответствующая типу форматируемого объекта.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Specify a standard or custom numeric format string if the corresponding object is a numeric value, a standard or custom date and time format string if the corresponding object is a <bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept> object, or an <bpt id="p2">[</bpt>enumeration format string<ept id="p2">](enumeration-format.md)</ept> if the corresponding object is an enumeration value.</source>
          <target state="translated">Если соответствующий объект является объектом <bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept>, то используется строка стандартного или настраиваемого формата чисел, а если соответствующий объект является значением перечисления, то используется <bpt id="p2">[</bpt>строка формата перечисления<ept id="p2">](enumeration-format.md)</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified, the general ("G") format specifier for a numeric, date and time, or enumeration type is used.</source>
          <target state="translated">Если компонент <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> не задан, то для числовых значений, значений даты и времени, а также перечислений используется общий формат ("G").</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The colon is required if <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is specified.</source>
          <target state="translated">При использовании компонента <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> необходимо двоеточие.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following table lists types or categories of types in the .NET Framework class library that support a predefined set of format strings, and provides links to the topics that list the supported format strings.</source>
          <target state="translated">В следующей таблице перечислены типы и категории типов в библиотеке классов .NET Framework, которые поддерживают предопределенный набор строк формата, а также ссылки на разделы, в которых перечисляются поддерживаемые строки формата.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Note that string formatting is an extensible mechanism that makes it possible to define new format strings for all existing types as well as to define a set of format strings supported by an application-defined type.</source>
          <target state="translated">Обратите внимание, что форматирование строк — это расширяемый механизм, который позволяет определять новые строки формата для всех существующих типов, а также определять набор строк формата, поддерживаемых прикладным типом.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> and <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> interface topics.</source>
          <target state="translated">Дополнительные сведения см. в разделах, посвященных интерфейсам <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> и <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Type or type category</source>
          <target state="translated">Тип или категория типов</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>See</source>
          <target state="translated">См.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Date and time types (<bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept>, <bpt id="p2">[</bpt>DateTimeOffset<ept id="p2">](xref:System.DateTimeOffset)</ept>)</source>
          <target state="translated">Типы даты и времени (<bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept>, <bpt id="p2">[</bpt>DateTimeOffset<ept id="p2">](xref:System.DateTimeOffset)</ept>)</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](standard-datetime.md)</ept>, <bpt id="p2">[</bpt>Custom date and time format strings<ept id="p2">](custom-datetime.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Строки стандартных форматов даты и времени<ept id="p1">](standard-datetime.md)</ept>, <bpt id="p2">[</bpt>Строки настраиваемых форматов даты и времени<ept id="p2">](custom-datetime.md)</ept></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Enumeration types (all types derived from <bpt id="p1">[</bpt>System.Enum<ept id="p1">](xref:System.Enum)</ept>)</source>
          <target state="translated">Типы перечисления (все типы, производные от <bpt id="p1">[</bpt>System.Enum<ept id="p1">](xref:System.Enum)</ept>)</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](enumeration-format.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Строки форматов перечисления<ept id="p1">](enumeration-format.md)</ept></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Numeric types (<bpt id="p1">[</bpt>BigInteger<ept id="p1">](xref:System.Numerics.BigInteger)</ept>, <bpt id="p2">[</bpt>Byte<ept id="p2">](xref:System.Byte)</ept>, <bpt id="p3">[</bpt>Decimal<ept id="p3">](xref:System.Decimal)</ept>, <bpt id="p4">[</bpt>Double<ept id="p4">](xref:System.Double)</ept>, <bpt id="p5">[</bpt>Int16<ept id="p5">](xref:System.Int16)</ept>, <bpt id="p6">[</bpt>Int32<ept id="p6">](xref:System.Int32)</ept>, <bpt id="p7">[</bpt>Int64<ept id="p7">](xref:System.Int64)</ept>, <bpt id="p8">[</bpt>SByte<ept id="p8">](xref:System.SByte)</ept>, <bpt id="p9">[</bpt>Single<ept id="p9">](xref:System.Single)</ept>, <bpt id="p10">[</bpt>UInt16<ept id="p10">](xref:System.UInt16)</ept>, <bpt id="p11">[</bpt>UInt32<ept id="p11">](xref:System.UInt32)</ept>, <bpt id="p12">[</bpt>UInt64<ept id="p12">](xref:System.UInt64)</ept>)</source>
          <target state="translated">Числовые типы (<bpt id="p1">[</bpt>BigInteger<ept id="p1">](xref:System.Numerics.BigInteger)</ept>, <bpt id="p2">[</bpt>Byte<ept id="p2">](xref:System.Byte)</ept>, <bpt id="p3">[</bpt>Decimal<ept id="p3">](xref:System.Decimal)</ept>, <bpt id="p4">[</bpt>Double<ept id="p4">](xref:System.Double)</ept>, <bpt id="p5">[</bpt>Int16<ept id="p5">](xref:System.Int16)</ept>, <bpt id="p6">[</bpt>Int32<ept id="p6">](xref:System.Int32)</ept>, <bpt id="p7">[</bpt>Int64<ept id="p7">](xref:System.Int64)</ept>, <bpt id="p8">[</bpt>SByte<ept id="p8">](xref:System.SByte)</ept>, <bpt id="p9">[</bpt>Single<ept id="p9">](xref:System.Single)</ept>, <bpt id="p10">[</bpt>UInt16<ept id="p10">](xref:System.UInt16)</ept>, <bpt id="p11">[</bpt>UInt32<ept id="p11">](xref:System.UInt32)</ept>, <bpt id="p12">[</bpt>UInt64<ept id="p12">](xref:System.UInt64)</ept>)</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](standard-numeric.md)</ept>, <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](custom-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Строки стандартных числовых форматов<ept id="p1">](standard-numeric.md)</ept>, <bpt id="p2">[</bpt>Строки настраиваемых числовых форматов<ept id="p2">](custom-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Guid<ept id="p1">](xref:System.Guid)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guid<ept id="p1">](xref:System.Guid)</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Guid.ToString(String)<ept id="p1">](xref:System.Guid.ToString(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guid.ToString(String)<ept id="p1">](xref:System.Guid.ToString(System.String))</ept></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>TimeSpan<ept id="p1">](xref:System.TimeSpan)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>TimeSpan<ept id="p1">](xref:System.TimeSpan)</ept></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard TimeSpan Format Strings<ept id="p1">](standard-timespan.md)</ept>, <bpt id="p2">[</bpt>Custom TimeSpan Format Strings<ept id="p2">](custom-timespan.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Строки стандартного формата TimeSpan<ept id="p1">](standard-timespan.md)</ept>, <bpt id="p2">[</bpt>Строки пользовательского формата TimeSpan<ept id="p2">](custom-timespan.md)</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Escaping Braces</source>
          <target state="translated">Оформление фигурных скобок</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Opening and closing braces are interpreted as starting and ending a format item.</source>
          <target state="translated">Начало и конец элемента форматирования обозначаются соответственно открывающей и закрывающей фигурной скобкой.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Consequently, you must use an escape sequence to display a literal opening brace or closing brace.</source>
          <target state="translated">Это означает, что для вывода открывающих и закрывающих фигурных скобок необходимо использовать escape-последовательности.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Specify two opening braces ("{{") in the fixed text to display one opening brace ("{"), or two closing braces ("}}") to display one closing brace ("}").</source>
          <target state="translated">Для вывода открывающей или закрывающей фигурной скобки в фиксированном тексте следует поставить две открывающие или, соответственно, закрывающие фигурные скобки подряд ("{{" или "}}").</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Braces in a format item are interpreted sequentially in the order they are encountered.</source>
          <target state="translated">Фигурные скобки в элементе форматирования интерпретируются последовательно в порядке их обнаружения.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Interpreting nested braces is not supported.</source>
          <target state="translated">Интерпретация вложенных скобок не поддерживается.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The way escaped braces are interpreted can lead to unexpected results.</source>
          <target state="translated">Порядок интерпретации скобок может привести к непредвиденным результатам.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For example, consider the format item "{{{0:D}}}", which is intended to display an opening brace, a numeric value formatted as a decimal number, and a closing brace.</source>
          <target state="translated">Например, рассмотрим элемент форматирования "{{{0:D}}}", который должен вывести открывающую фигурную скобку, числовое значение, отформатированное в десятичном виде, и закрывающую фигурную скобку.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>However, the format item is actually interpreted in the following manner:</source>
          <target state="translated">В действительности элемент форматирования будет интерпретирован следующим образом:</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The first two opening braces ("{{") are escaped and yield one opening brace.</source>
          <target state="translated">Первые две открывающие фигурные скобки ("{{") составляют escape-последовательность, которая дает в итоге одиночную открывающую фигурную скобку.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The next three characters ("{0:") are interpreted as the start of a format item.</source>
          <target state="translated">Следующие три знака ("{0:") воспринимаются как начало элемента форматирования.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The next character ("D") would be interpreted as the Decimal standard numeric format specifier, but the next two escaped braces ("}}") yield a single brace.</source>
          <target state="translated">Следующий знак ("D") должен интерпретироваться как указатель на десятичный числовой формат, но стоящая за ним пара фигурных скобок ("}}") дает в результате одиночную фигурную скобку.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Because the resulting string ("D}") is not a standard numeric format specifier, the resulting string is interpreted as a custom format string that means display the literal string "D}".</source>
          <target state="translated">Поскольку результирующая строка ("D}") не является стандартным описателем числового формата, то она будет интерпретирована как строка пользовательского формата, что приведет к выводу строки "D}".</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The last brace ("}") is interpreted as the end of the format item.</source>
          <target state="translated">Последняя фигурная скобка ("}") интерпретируется как конец элемента форматирования.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The final result that is displayed is the literal string, "{D}".</source>
          <target state="translated">Итоговый результат, который будет выведен — строка "{D}".</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The numeric value that was to be formatted is not displayed.</source>
          <target state="translated">Числовое значение, которое требовалось отформатировать, выведено не будет.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>One way to write your code to avoid misinterpreting escaped braces and format items is to format the braces and format item separately.</source>
          <target state="translated">Одним из способов избежать неправильной интерпретации фигурных скобок и элементов форматирования при написании кода является раздельное форматирование фигурных скобок и элементов форматирования.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>That is, in the first format operation display a literal opening brace, in the next operation display the result of the format item, then in the final operation display a literal closing brace.</source>
          <target state="translated">Это означает, что первая операция форматирования должна выводить строку с открывающей фигурной скобкой, следующая операция — результат обработки элемента форматирования, а последняя операция — строку с закрывающей фигурной скобкой.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The following example illustrates this approach.</source>
          <target state="translated">Этот подход показан в приведенном ниже примере.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Processing Order</source>
          <target state="translated">Порядок обработки</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If the call to the composite formatting method includes an <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument whose value is not null, the runtime calls its <bpt id="p2">[</bpt>IFormatProvider.GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> method to request an <bpt id="p3">[</bpt>ICustomFormatter<ept id="p3">](xref:System.ICustomFormatter)</ept> implementation.</source>
          <target state="translated">Если вызов метода составного форматирования содержит аргумент <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept>, значение которого не равно NULL, среда выполнения вызывает метод <bpt id="p2">[</bpt>IFormatProvider.GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept>, чтобы запросить реализацию <bpt id="p3">[</bpt>ICustomFormatter<ept id="p3">](xref:System.ICustomFormatter)</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If the method is able to return an <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> implementation, it is cached for later use.</source>
          <target state="translated">Если метод может вернуть реализацию <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept>, он кэшируется для последующего использования.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Each value in the parameter list that corresponds to a format item is converted to a string by performing the following steps.</source>
          <target state="translated">Каждое значение в списке параметров, соответствующее элементу форматирования, преобразуется в строку путем выполнения нижеперечисленных действий.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If any condition in the first three steps is true, the string representation of the value is returned in that step, and subsequent steps are not executed.</source>
          <target state="translated">Если любое условие на первых трех шагах принимает логическое значение "true", строковое представление значения возвращается на этот шаг, и последующие шаги не выполняются.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If the value to be formatted is <ph id="ph1">`null`</ph>, an empty string ("") is returned.</source>
          <target state="translated">Если форматируемое значение является значением <ph id="ph1">`null`</ph>, возвращается пустая строка ("").</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If an <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> implementation is available, the runtime calls its <bpt id="p2">[</bpt>Format<ept id="p2">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> method.</source>
          <target state="translated">Если реализация <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> доступна, среда выполнения вызывает ее метод <bpt id="p2">[</bpt>Format<ept id="p2">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>It passes the method the format item's <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> value, if one is present, or <ph id="ph1">`null`</ph> if it is not, along with the <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> implementation.</source>
          <target state="translated">Она передает в метод значение элемента форматирования <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> (при его наличии) или значение <ph id="ph1">`null`</ph> (в случае его отсутствия) вместе с реализацией <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If the value implements the <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> interface, the interface's <bpt id="p2">[</bpt>ToString(String,IFormatProvider)<ept id="p2">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> method is called.</source>
          <target state="translated">Если значение реализует интерфейс <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept>, вызывается метод <bpt id="p2">[</bpt>ToString(String, IFormatProvider)<ept id="p2">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> этого интерфейса.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The method is passed the <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> value, if one is present in the format item, or <ph id="ph1">`null`</ph> if it is not.</source>
          <target state="translated">Методу передается значение <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> (при его наличии в элементе форматирования) или значение <ph id="ph1">`null`</ph> (в случае его отсутствия).</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument is determined as follows:</source>
          <target state="translated">Аргумент <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> определяется следующим образом:</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For a numeric value, if a composite formatting method with a non-null <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument is called, the runtime requests a <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> object from its <bpt id="p3">[</bpt>IFormatProvider.GetFormat<ept id="p3">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> method.</source>
          <target state="translated">Для числового значения, если вызывается метод составного форматирования с аргументом <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept>, не равным NULL, то среда выполнения запрашивает объект <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> из метода <bpt id="p3">[</bpt>IFormatProvider.GetFormat<ept id="p3">](xref:System.IFormatProvider.GetFormat(System.Type))</ept>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If it is unable to supply one, if the value of the argument is <ph id="ph1">`null`</ph>, or if the composite formatting method does not have an <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> parameter, the <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> object for the current thread culture is used.</source>
          <target state="translated">Если не удалось предоставить объект, если аргумент имеет значение <ph id="ph1">`null`</ph> или если метод составного форматирования не имеет параметра <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept>, то используется объект <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> для языка и региональных параметров текущего потока.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>For a date and time value, if a composite formatting method with a non-null <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument is called, the runtime requests a <bpt id="p2">[</bpt>DateTimeFormatInfo<ept id="p2">](xref:System.Globalization.DateTimeFormatInfo)</ept> object from its <bpt id="p3">[</bpt>IFormatProvider.GetFormat<ept id="p3">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> method.</source>
          <target state="translated">Для значения даты и времени, если вызывается метод составного форматирования с аргументом <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept>, не равным NULL, то среда выполнения запрашивает объект <bpt id="p2">[</bpt>DateTimeFormatInfo<ept id="p2">](xref:System.Globalization.DateTimeFormatInfo)</ept> из метода <bpt id="p3">[</bpt>IFormatProvider.GetFormat<ept id="p3">](xref:System.IFormatProvider.GetFormat(System.Type))</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If it is unable to supply one, if the value of the argument is <ph id="ph1">`null`</ph>, or if the composite formatting method does not have an <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> parameter, the <bpt id="p2">[</bpt>DateTimeFormatInfo<ept id="p2">](xref:System.Globalization.DateTimeFormatInfo)</ept> object for the current thread culture is used.</source>
          <target state="translated">Если не удалось предоставить объект, если аргумент имеет значение <ph id="ph1">`null`</ph> или метод составного форматирования не имеет параметра <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept>, то используется объект <bpt id="p2">[</bpt>DateTimeFormatInfo<ept id="p2">](xref:System.Globalization.DateTimeFormatInfo)</ept> для языка и региональных параметров текущего потока.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For objects of other types, if a composite formatting is called with an <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument, its value (including a <ph id="ph1">`null`</ph>, if no <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> object is supplied) is passed directly to the <bpt id="p3">[</bpt>IFormattable.ToString<ept id="p3">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> implementation.</source>
          <target state="translated">Для объектов других типов, если метод составного форматирования вызывается с аргументом <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept>, его значение (в том числе и <ph id="ph1">`null`</ph>, если объект <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> не задан) передается непосредственно в реализацию <bpt id="p3">[</bpt>IFormattable.ToString<ept id="p3">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Otherwise, a <bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> object that represents the current thread culture is passed to the <bpt id="p2">[</bpt>IFormattable.ToString<ept id="p2">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> implementation.</source>
          <target state="translated">В противном случае объект <bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept>, который представляет язык и региональные параметры текущего потока, передается в реализацию <bpt id="p2">[</bpt>IFormattable.ToString<ept id="p2">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The type's parameterless <ph id="ph1">`ToString`</ph> method, which either overrides <bpt id="p1">[</bpt>Object.ToString()<ept id="p1">](xref:System.Object.ToString)</ept> or inherits the behavior of its base class, is called.</source>
          <target state="translated">Вызывается метод <ph id="ph1">`ToString`</ph> без параметров, который переопределяет <bpt id="p1">[</bpt>Object.ToString()<ept id="p1">](xref:System.Object.ToString)</ept> или наследует поведение базового класса.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>In this case, the format string specified by the <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> component in the format item, if it is present, is ignored.</source>
          <target state="translated">В этом случае строка формата, указанная в компоненте <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> в элементе форматирования (при его наличии), игнорируется.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Alignment is applied after the preceding steps have been performed.</source>
          <target state="translated">После выполнения предшествующих шагов производится выравнивание.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Code Examples</source>
          <target state="translated">Примеры кода</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The following example shows one string created using composite formatting and another created using an object's <ph id="ph1">`ToString`</ph> method.</source>
          <target state="translated">В приведенном ниже примере одна строка создается с помощью составного форматирования, а другая – с помощью метода <ph id="ph1">`ToString`</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Both types of formatting produce equivalent results.</source>
          <target state="translated">Оба способа форматирования дают идентичные результаты.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Assuming that the current day is a Thursday in May, the value of both strings in the preceding example is <ph id="ph1">`Thursday May`</ph> in the U.S. English culture.</source>
          <target state="translated">Предположим, что сейчас май, а текущий день недели — четверг. Тогда значение обеих строк в предыдущем примере будет <ph id="ph1">`Thursday May`</ph> для языка и региональных параметров "Английский (США)".</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept> exposes the same functionality as <bpt id="p2">[</bpt>String.Format<ept id="p2">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept>.</source>
          <target state="translated">Метод <bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept> предоставляет те же функциональные возможности, что и метод <bpt id="p2">[</bpt>String.Format<ept id="p2">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The only difference between the two methods is that <bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> returns its result as a string, while <bpt id="p2">[</bpt>Console.WriteLine<ept id="p2">](xref:System.Console.WriteLine)</ept> writes the result to the output stream associated with the <bpt id="p3">[</bpt>Console<ept id="p3">](xref:System.Console)</ept> object.</source>
          <target state="translated">Единственное различие между этими двумя методами состоит в том, что метод <bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> возвращает результаты в виде строки, а метод <bpt id="p2">[</bpt>Console.WriteLine<ept id="p2">](xref:System.Console.WriteLine)</ept> записывает результаты в поток вывода, связанный с объектом <bpt id="p3">[</bpt>Console<ept id="p3">](xref:System.Console)</ept>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept> method to format the value of <ph id="ph1">`MyInt`</ph> to a currency value.</source>
          <target state="translated">В следующем примере для форматирования значения переменной <ph id="ph1">`MyInt`</ph> в виде денежного значения используется метод <bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The following example demonstrates formatting multiple objects, including formatting one object two different ways.</source>
          <target state="translated">В следующем примере демонстрируется форматирование нескольких объектов, в том числе форматирование одного и того же объекта двумя разными способами.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the use of alignment in formatting.</source>
          <target state="translated">В следующем примере показывается использование выравнивания при форматировании.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The arguments that are formatted are placed between vertical bar characters (|) to highlight the resulting alignment.</source>
          <target state="translated">Форматируемые аргументы разделены знаками вертикальной черты ("|"), подчеркивающими полученное выравнивание.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">См. также</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept></target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting types<ept id="p1">](formatting-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Типы форматирования<ept id="p1">](formatting-types.md)</ept></target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard date and time format strings<ept id="p1">](standard-datetime.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Строки стандартных форматов даты и времени<ept id="p1">](standard-datetime.md)</ept></target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom date and time format strings<ept id="p1">](custom-datetime.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Строки настраиваемых форматов даты и времени<ept id="p1">](custom-datetime.md)</ept></target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Enumeration format strings<ept id="p1">](enumeration-format.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Строки форматов перечисления<ept id="p1">](enumeration-format.md)</ept></target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard numeric format strings<ept id="p1">](standard-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Строки стандартных числовых форматов<ept id="p1">](standard-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom numeric format strings<ept id="p1">](custom-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Строки настраиваемых числовых форматов<ept id="p1">](custom-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard TimeSpan format strings<ept id="p1">](standard-timespan.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Строки стандартного формата TimeSpan<ept id="p1">](standard-timespan.md)</ept></target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom TimeSpan format strings<ept id="p1">](custom-timespan.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Строки настраиваемого формата TimeSpan<ept id="p1">](custom-timespan.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>