<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">017ee2b6feb87841f31660fe6cb76ccbefd5c83b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\custom-numeric.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">edc8e1a409fb5b32f2ab5ecba05528f4b0413738</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f6177e15ce0e26bf509a91d66d188c9e20083da</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings</source>
          <target state="translated">Строки настраиваемых числовых форматов</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings</source>
          <target state="translated">Строки настраиваемых числовых форматов</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings</source>
          <target state="translated">Строки настраиваемых числовых форматов</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can create a custom numeric format string, which consists of one or more custom numeric specifiers, to define how to format numeric data.</source>
          <target state="translated">Чтобы определить способ форматирования числовых данных, можно создать строку настраиваемого числового формата, состоящую из одного или нескольких описателей настраиваемого формата.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A custom numeric format string is any format string that is not a <bpt id="p1">[</bpt>standard numeric format string<ept id="p1">](standard-numeric.md)</ept>.</source>
          <target state="translated">Строка настраиваемого числового формата — это любая строка формата, не являющаяся <bpt id="p1">[</bpt>строкой стандартного числового формата<ept id="p1">](standard-numeric.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings are supported by some overloads of the <ph id="ph1">`ToString`</ph> method of all numeric types.</source>
          <target state="translated">Строки настраиваемых числовых форматов поддерживаются некоторыми перегрузками метода <ph id="ph1">`ToString`</ph> всех числовых типов.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, you can supply a numeric format string to the <bpt id="p1">[</bpt>ToString(String)<ept id="p1">](xref:System.Int32.ToString(System.String))</ept> and <bpt id="p2">[</bpt>ToString(String, IFormatProvider)<ept id="p2">](xref:System.Int32.ToString(System.String,System.IFormatProvider))</ept> methods of the <bpt id="p3">[</bpt>Int32<ept id="p3">](xref:System.Int32)</ept> type.</source>
          <target state="translated">Например, можно задать строку числового формата для методов <bpt id="p1">[</bpt>ToString(String)<ept id="p1">](xref:System.Int32.ToString(System.String))</ept> и <bpt id="p2">[</bpt>ToString(String, IFormatProvider)<ept id="p2">](xref:System.Int32.ToString(System.String,System.IFormatProvider))</ept> типа <bpt id="p3">[</bpt>Int32<ept id="p3">](xref:System.Int32)</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings are also supported by the .NET Framework <bpt id="p1">[</bpt>composite formatting<ept id="p1">](composite-format.md)</ept> feature, which is used by some <ph id="ph1">`Write`</ph> and <ph id="ph2">`WriteLine`</ph> methods of the <bpt id="p2">[</bpt>Console<ept id="p2">](xref:System.Console)</ept> and <bpt id="p3">[</bpt>StreamWriter<ept id="p3">](xref:System.IO.StreamWriter)</ept> classes, the <bpt id="p4">[</bpt>String.Format<ept id="p4">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> method, and the <bpt id="p5">[</bpt>StringBuilder.AppendFormat<ept id="p5">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept> method.</source>
          <target state="translated">Строки настраиваемых числовых форматов также поддерживаются функцией <bpt id="p1">[</bpt>составного форматирования<ept id="p1">](composite-format.md)</ept> .NET Framework, используемой некоторыми методами <ph id="ph1">`Write`</ph> и <ph id="ph2">`WriteLine`</ph> классов <bpt id="p2">[</bpt>Console<ept id="p2">](xref:System.Console)</ept> и <bpt id="p3">[</bpt>StreamWriter<ept id="p3">](xref:System.IO.StreamWriter)</ept>, методом <bpt id="p4">[</bpt>String.Format<ept id="p4">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> и методом <bpt id="p5">[</bpt>StringBuilder.AppendFormat<ept id="p5">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following table describes the custom numeric format specifiers and displays sample output produced by each format specifier.</source>
          <target state="translated">В следующей таблице приведены описатели стандартного числового формата и примеры выходных данных, формируемых каждым описателем формата.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Notes<ept id="p1">](#notes)</ept> section for additional information about using custom numeric format strings, and the <bpt id="p2">[</bpt>Example<ept id="p2">](#example)</ept> section for a comprehensive illustration of their use.</source>
          <target state="translated">Дополнительные сведения об использовании строк настраиваемого числового формата см. в разделе <bpt id="p1">[</bpt>Примечания<ept id="p1">](#notes)</ept>; обширную демонстрацию их использования см. в разделе <bpt id="p2">[</bpt>Пример<ept id="p2">](#example)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Format specifier</source>
          <target state="translated">Описатель формата</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Имя</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Описание</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Примеры</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>"0"</source>
          <target state="translated">"0"</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Zero placeholder</source>
          <target state="translated">Знак-заместитель нуля</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Replaces the zero with the corresponding digit if one is present; otherwise, zero appears in the result string.</source>
          <target state="translated">Заменяет ноль соответствующей цифрой, если такая имеется. В противном случае в результирующей строке будет стоять ноль.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`1234.5678 ("00000") -&gt; 01235`</ph>; <ph id="ph2">`0.45678 ("0.00", en-US) -&gt; 0.46`</ph>; <ph id="ph3">`0.45678 ("0.00", fr-FR) -&gt; 0,46`</ph></source>
          <target state="translated"><ph id="ph1">`1234.5678 ("00000") -&gt; 01235`</ph>; <ph id="ph2">`0.45678 ("0.00", en-US) -&gt; 0.46`</ph>; <ph id="ph3">`0.45678 ("0.00", fr-FR) -&gt; 0,46`</ph></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>"#"</source>
          <target state="translated">"#"</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Digit placeholder</source>
          <target state="translated">Заместитель цифры</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Replaces the "#" symbol with the corresponding digit if one is present; otherwise, no digit appears in the result string.</source>
          <target state="translated">Заменяет знак "#" соответствующей цифрой, если такая имеется. В противном случае в результирующей строке не будет цифры.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Note that no digit appears in the result string if the corresponding digit in the input string is a non-significant 0.</source>
          <target state="translated">Обратите внимание, что в итоговой строке не будет отображаться цифра, если соответствующей цифрой в строке ввода является незначащий 0.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, 0003 ("####") -&gt; 3.</source>
          <target state="translated">Например, 0003 ("####") -&gt; 3.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`1234.5678 ("#####") -&gt; 1235`</ph>; <ph id="ph2">`0.45678 ("#.##", en-US) -&gt; .46`</ph>; <ph id="ph3">`0.45678 ("#.##", fr-FR) -&gt; ,46`</ph></source>
          <target state="translated"><ph id="ph1">`1234.5678 ("#####") -&gt; 1235`</ph>; <ph id="ph2">`0.45678 ("#.##", en-US) -&gt; .46`</ph>; <ph id="ph3">`0.45678 ("#.##", fr-FR) -&gt; ,46`</ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>"."</source>
          <target state="translated">"."</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Decimal point</source>
          <target state="translated">Разделитель</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Determines the location of the decimal separator in the result string.</source>
          <target state="translated">Определяет расположение разделителя целой и дробной частей в результирующей строке.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`0.45678 ("0.00", en-US) -&gt; 0.46`</ph>; <ph id="ph2">`0.45678 ("0.00", fr-FR) -&gt; 0,46`</ph></source>
          <target state="translated"><ph id="ph1">`0.45678 ("0.00", en-US) -&gt; 0.46`</ph>; <ph id="ph2">`0.45678 ("0.00", fr-FR) -&gt; 0,46`</ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>","</source>
          <target state="translated">","</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Group separator and number scaling</source>
          <target state="translated">Разделитель групп и масштабирование чисел</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Serves as both a group separator and a number scaling specifier.</source>
          <target state="translated">Служит в качестве описателя разделителя групп и описателя масштабирования чисел.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>As a group separator, it inserts a localized group separator character between each group.</source>
          <target state="translated">В качестве разделителя групп вставляет локализованный символ-разделитель групп между всеми группами.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>As a number scaling specifier, it divides a number by 1000 for each comma specified.</source>
          <target state="translated">В качестве описателя масштабирования чисел делит число на 1000 для всех указанных запятых.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Group separator specifier: <ph id="ph1">`2147483647 ("##,#", en-US) -&gt; 2,147,483,647`</ph>; <ph id="ph2">`2147483647 ("##,#", es-ES) -&gt; 2.147.483.647`</ph>.</source>
          <target state="translated">Описатель разделителя групп: <ph id="ph1">`2147483647 ("##,#", en-US) -&gt; 2,147,483,647`</ph>; <ph id="ph2">`2147483647 ("##,#", es-ES) -&gt; 2.147.483.647`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Scaling specifier: <ph id="ph1">`2147483647 ("#,#,,", en-US) -&gt; 2,147`</ph>; <ph id="ph2">`2147483647 ("#,#,,", es-ES) -&gt; 2.147`</ph></source>
          <target state="translated">Описатель масштабирования: <ph id="ph1">`2147483647 ("#,#,,", en-US) -&gt; 2,147`</ph>; <ph id="ph2">`2147483647 ("#,#,,", es-ES) -&gt; 2.147`</ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>"%"</source>
          <target state="translated">"%"</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Percentage placeholder</source>
          <target state="translated">Заместитель процентов</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Multiplies a number by 100 and inserts a localized percentage symbol in the result string.</source>
          <target state="translated">Умножает число на 100 и вставляет локализованный символ процента в результирующую строку.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`0.3697 ("%#0.00", en-US) -&gt; %36.97`</ph>; <ph id="ph2">`0.3697 ("%#0.00", el-GR) -&gt; %36,97`</ph>; <ph id="ph3">`0.3697 ("##.0 %", en-US) -&gt; 37.0 %`</ph>; <ph id="ph4">`0.3697 ("##.0 %", el-GR) -&gt; 37,0 %`</ph></source>
          <target state="translated"><ph id="ph1">`0.3697 ("%#0.00", en-US) -&gt; %36.97`</ph>; <ph id="ph2">`0.3697 ("%#0.00", el-GR) -&gt; %36,97`</ph>; <ph id="ph3">`0.3697 ("##.0 %", en-US) -&gt; 37.0 %`</ph>; <ph id="ph4">`0.3697 ("##.0 %", el-GR) -&gt; 37,0 %`</ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>"‰"</source>
          <target state="translated">"‰"</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Per mille placeholder</source>
          <target state="translated">Местозаполнитель промилле</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Multiplies a number by 1000 and inserts a localized per mille symbol in the result string.</source>
          <target state="translated">Умножает число на 1000 и вставляет локализованный символ промилле в результирующую строку.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`0.03697 ("#0.00‰", en-US) -&gt; 36.97‰`</ph>; <ph id="ph2">`0.03697 ("#0.00‰", ru-RU) -&gt; 36,97‰`</ph></source>
          <target state="translated"><ph id="ph1">`0.03697 ("#0.00‰", en-US) -&gt; 36.97‰`</ph>; <ph id="ph2">`0.03697 ("#0.00‰", ru-RU) -&gt; 36,97‰`</ph></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>"E0", "E+0", "E-0", "e0", "e+0", "e-0"</source>
          <target state="translated">"E0", "E+0", "E-0", "e0", "e+0", "e-0"</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Exponential notation</source>
          <target state="translated">Экспоненциальная нотация</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If followed by at least one 0 (zero), formats the result using exponential notation.</source>
          <target state="translated">Если за этим описателем следует по меньшей мере один ноль (0), результат форматируется с использованием экспоненциальной нотации.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The case of "E" or "e" indicates the case of the exponent symbol in the result string.</source>
          <target state="translated">Регистр ("E" или "e") определяет регистр символа экспоненты в результирующей строке.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The number of zeros following the "E" or "e" character determines the minimum number of digits in the exponent.</source>
          <target state="translated">Минимальное число цифр экспоненты определяется количеством нулей, стоящих за символом "E" или "e".</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A plus sign (+) indicates that a sign character always precedes the exponent.</source>
          <target state="translated">Знак "+" указывает на то, что перед экспонентой всегда должен ставиться символ знака.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A minus sign (-) indicates that a sign character precedes only negative exponents.</source>
          <target state="translated">Знак "-" указывает на то, что символ знака должен ставиться только в случае, если экспонента имеет отрицательное значение.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`987654 ("#0.0e0") -&gt; 98.8e4`</ph>; <ph id="ph2">`1503.92311 ("0.0##e+00") -&gt; 1.504e+03`</ph>; <ph id="ph3">`1.8901385E-16 ("0.0e+00") -&gt; 1.9e-16`</ph></source>
          <target state="translated"><ph id="ph1">`987654 ("#0.0e0") -&gt; 98.8e4`</ph>; <ph id="ph2">`1503.92311 ("0.0##e+00") -&gt; 1.504e+03`</ph>; <ph id="ph3">`1.8901385E-16 ("0.0e+00") -&gt; 1.9e-16`</ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Escape character</source>
          <target state="translated">Escape-символ</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Causes the next character to be interpreted as a literal rather than as a custom format specifier.</source>
          <target state="translated">Указывает на то, что следующий за ним символ должен рассматриваться как литерал, а не как описатель настраиваемого формата.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>'string', "string"</source>
          <target state="translated">'строка', "строка"</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Literal string delimiter</source>
          <target state="translated">Разделитель строк-литералов</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Indicates that the enclosed characters should be copied to the result string unchanged.</source>
          <target state="translated">Указывает на то, что заключенные в разделители символы должны быть скопированы в результирующую строку без изменений.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>;</source>
          <target state="translated">;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Section separator</source>
          <target state="translated">Разделитель секций</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Defines sections with separate format strings for positive, negative, and zero numbers.</source>
          <target state="translated">Определяет секции с раздельными строками формата для положительных чисел, отрицательных чисел и нуля.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`12.345 ("#0.0#;(#0.0#);-\0-") -&gt; 12.35`</ph>; <ph id="ph2">`0 ("#0.0#;(#0.0#);-\0-") -&gt; -0-`</ph>; <ph id="ph3">`-12.345 ("#0.0#;(#0.0#);-\0-") -&gt; (12.35)`</ph>; <ph id="ph4">`12.345 ("#0.0#;(#0.0#)") -&gt; 12.35`</ph>; <ph id="ph5">`0 ("#0.0#;(#0.0#)") -&gt; 0.0 ; -12.345 ("#0.0#;(#0.0#)") -&gt; (12.35)`</ph></source>
          <target state="translated"><ph id="ph1">`12.345 ("#0.0#;(#0.0#);-\0-") -&gt; 12.35`</ph>; <ph id="ph2">`0 ("#0.0#;(#0.0#);-\0-") -&gt; -0-`</ph>; <ph id="ph3">`-12.345 ("#0.0#;(#0.0#);-\0-") -&gt; (12.35)`</ph>; <ph id="ph4">`12.345 ("#0.0#;(#0.0#)") -&gt; 12.35`</ph>; <ph id="ph5">`0 ("#0.0#;(#0.0#)") -&gt; 0.0 ; -12.345 ("#0.0#;(#0.0#)") -&gt; (12.35)`</ph></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Другой</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>All other characters</source>
          <target state="translated">Все остальные символы</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The character is copied to the result string unchanged.</source>
          <target state="translated">Символ копируется в результирующую строку без изменений.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The following sections provide detailed information about each of the custom numeric format specifiers.</source>
          <target state="translated">В приведенных ниже разделах содержится подробная информация о всех описателях настраиваемого числового формата.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The "0" Custom Specifier</source>
          <target state="translated">Настраиваемый описатель "0"</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The "0" custom format specifier serves as a zero-placeholder symbol.</source>
          <target state="translated">Описатель настраиваемого формата "0" служит нулевым символом-заполнителем.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If the value that is being formatted has a digit in the position where the zero appears in the format string, that digit is copied to the result string; otherwise, a zero appears in the result string.</source>
          <target state="translated">Если форматируемое значение содержит цифру в позиции, где в строке формата стоит ноль, то эта цифра копируется в результирующую строку; в противном случае в результирующей строке будет стоять ноль.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The position of the leftmost zero before the decimal point and the rightmost zero after the decimal point determines the range of digits that are always present in the result string.</source>
          <target state="translated">Позиция крайнего левого нуля перед разделителем целой и дробной частей и позиция крайнего правого нуля после разделителя целой и дробной частей определяют диапазон цифр, которые всегда включаются в результирующую строку.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The "00" specifier causes the value to be rounded to the nearest digit preceding the decimal, where rounding away from zero is always used.</source>
          <target state="translated">Спецификатор "00" приводит к округлению значения до ближайшего значения цифры, предшествующей десятичной точке-разделителю, если назначено использование округления от нуля.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, formatting 34.5 with "00" would result in the value 35.</source>
          <target state="translated">Например, в результате форматирования числа 34,5 с помощью строки "00" будет получена строка со значением"35".</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The following example displays several values that are formatted by using custom format strings that include zero placeholders.</source>
          <target state="translated">В следующем примере показано форматирование нескольких значений с помощью строк настраиваемого формата, содержащих нулевые заполнители.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The "#" Custom Specifier</source>
          <target state="translated">Настраиваемый описатель "#"</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The "#" custom format specifier serves as a digit-placeholder symbol.</source>
          <target state="translated">Описатель настраиваемого формата "#" служит символом-заполнителем для цифр.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If the value that is being formatted has a digit in the position where the "#" symbol appears in the format string, that digit is copied to the result string.</source>
          <target state="translated">Если в форматируемом значении на позиции, где в строке формата присутствует символ "#", есть цифра, то эта цифра копируется в результирующую строку.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Otherwise, nothing is stored in that position in the result string.</source>
          <target state="translated">В противном случае в выходной строке на этой позиции ничего не записывается.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Note that this specifier never displays a zero that is not a significant digit, even if zero is the only digit in the string.</source>
          <target state="translated">Обратите внимание, что при использовании этого описателя незначащие нули не отображаются, даже если ноль является единственной цифрой в строке.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>It will display zero only if it is a significant digit in the number that is being displayed.</source>
          <target state="translated">Ноль отображается только в том случае, если он является значащей цифрой отображаемого числа.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The "##" format string causes the value to be rounded to the nearest digit preceding the decimal, where rounding away from zero is always used.</source>
          <target state="translated">Строка формата "##" приводит к округлению значения до ближайшего значения цифры, предшествующей десятичному разделителю, если назначено использование округления от нуля.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For example, formatting 34.5 with "##" would result in the value 35.</source>
          <target state="translated">Например, в результате форматирования числа 34,5 с помощью строки "##" будет получена строка со значением "35".</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The following example displays several values that are formatted by using custom format strings that include digit placeholders.</source>
          <target state="translated">В следующем примере показано форматирование нескольких значений с помощью строк настраиваемого формата, содержащих заполнители для цифр.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To return a result string in which absent digits or leading zeroes are replaced by spaces, use the <bpt id="p1">[</bpt>composite formatting<ept id="p1">](composite-format.md)</ept> feature and specify a field width, as the following example illustrates.</source>
          <target state="translated">Чтобы получить итоговую строку, в которой отсутствуют цифры или начальные нули заменены пробелами, используйте функцию <bpt id="p1">[</bpt>составного форматирования<ept id="p1">](composite-format.md)</ept> и укажите ширину поля, как показано в следующем примере.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The "." Custom Specifier</source>
          <target state="translated">"." Настраиваемый описатель "."</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The "." custom format specifier inserts a localized decimal separator into the result string.</source>
          <target state="translated">Описатель настраиваемого формата "." вставляет в результирующую строку локализованный разделитель целой и дробной частей числа.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The first period in the format string determines the location of the decimal separator in the formatted value; any additional periods are ignored.</source>
          <target state="translated">Первая точка в строке формата определяет расположение разделителя целой и дробной частей форматированного значения, а все прочие точки игнорируются.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The character that is used as the decimal separator in the result string is not always a period; it is determined by the <bpt id="p1">[</bpt>NumberDecimalSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator)</ept> property of the <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> object that controls formatting.</source>
          <target state="translated">Символ, используемый в качестве разделителя целой и дробной части в результирующей строке, не всегда будет точкой; его значение определяется свойством <bpt id="p1">[</bpt>NumberDecimalSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator)</ept> объекта <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept>, управляющего форматированием.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The following example uses the "." format specifier to define the location of the decimal point in several result strings.</source>
          <target state="translated">В следующем примере спецификатор формата "." используется для определения местоположения десятичного разделителя в нескольких выходных строках.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The "," Custom Specifier</source>
          <target state="translated">Настраиваемый описатель ","</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The "," character serves as both a group separator and a number scaling specifier.</source>
          <target state="translated">Символ "," служит в качестве описателя разделителя групп и описателя масштабирования чисел.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Group separator: If one or more commas are specified between two digit placeholders (0 or #) that format the integral digits of a number, a group separator character is inserted between each number group in the integral part of the output.</source>
          <target state="translated">Разделитель групп: если между двумя заполнителями для цифр ("0" или "#"), задающими форматирование целой части числа, стоит одна или несколько запятых, то между всеми группами целой части числа вставляется символ-разделитель групп.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>NumberGroupSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator)</ept> and <bpt id="p2">[</bpt>NumberGroupSizes<ept id="p2">](xref:System.Globalization.NumberFormatInfo.NumberGroupSizes)</ept> properties of the current <bpt id="p3">[</bpt>NumberFormatInfo<ept id="p3">](xref:System.Globalization.NumberFormatInfo)</ept> object determine the character used as the number group separator and the size of each number group.</source>
          <target state="translated">Свойства <bpt id="p1">[</bpt>NumberGroupSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator)</ept> и <bpt id="p2">[</bpt>NumberGroupSizes<ept id="p2">](xref:System.Globalization.NumberFormatInfo.NumberGroupSizes)</ept> текущего объекта <bpt id="p3">[</bpt>NumberFormatInfo<ept id="p3">](xref:System.Globalization.NumberFormatInfo)</ept> определяют знак, используемый в качестве разделителя групп числа и размера каждой группы числа.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For example, if the string "#,#" and the invariant culture are used to format the number 1000, the output is "1,000".</source>
          <target state="translated">Например, если строка "#,#" и неизменяемый язык и региональные параметры используются для форматирования числа 1000, то результатом является "1,000".</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Number scaling specifier: If one or more commas are specified immediately to the left of the explicit or implicit decimal point, the number to be formatted is divided by 1000 for each comma.</source>
          <target state="translated">Описатель масштабирования чисел: если сразу слева от явно или неявно заданного разделителя целой и дробной части стоит одна или несколько запятых, форматируемое число делится на 1000 для каждой указанной запятой.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For example, if the string "0,," is used to format the number 100 million, the output is "100".</source>
          <target state="translated">Например, если строка "0,," используется для форматирования числа 100 миллионов, то результатом является "100".</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>You can use group separator and number scaling specifiers in the same format string.</source>
          <target state="translated">Разделитель групп и описатель масштабирования чисел можно использовать в строке формата одновременно.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For example, if the string "#,0,," and the invariant culture are used to format the number one billion, the output is "1,000".</source>
          <target state="translated">Например, если строка "#,&amp;0;,," и неизменяемый язык и региональные параметры используются для форматирования числа один миллиард, то результатом является "1,000".</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of the comma as a group separator.</source>
          <target state="translated">В следующем примере демонстрируется использование запятой в качестве разделителя групп.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of the comma as a specifier for number scaling.</source>
          <target state="translated">Следующий пример иллюстрирует использование запятой как спецификатора масштабирования числа.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The "%" Custom Specifier</source>
          <target state="translated">Настраиваемый описатель "%"</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A percent sign (%) in a format string causes a number to be multiplied by 100 before it is formatted.</source>
          <target state="translated">При использовании символа процента ("%") в строке формата число перед форматированием будет умножено на 100.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The localized percent symbol is inserted in the number at the location where the % appears in the format string.</source>
          <target state="translated">В то место, где в строке формата стоит символ "%", в число будет вставлен локализованный символ процента.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The percent character used is defined by the <bpt id="p1">[</bpt>PercentSymbol<ept id="p1">](xref:System.Globalization.NumberFormatInfo.PercentSymbol)</ept> property of the current <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> object.</source>
          <target state="translated">Используемый при этом символ процента определяется свойством <bpt id="p1">[</bpt>PercentSymbol<ept id="p1">](xref:System.Globalization.NumberFormatInfo.PercentSymbol)</ept> текущего объекта <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The following example defines several custom format strings that include the "%" custom specifier.</source>
          <target state="translated">В следующем примере определяется несколько строк настраиваемого формата, включающих настраиваемый описатель "%".</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The "‰" Custom Specifier</source>
          <target state="translated">Настраиваемый описатель "‰"</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A per mille character (‰ or \u2030) in a format string causes a number to be multiplied by 1000 before it is formatted.</source>
          <target state="translated">При использовании в строке формата символа промилле ("‰" или "\u2030") перед форматированием число будет умножено на 1000.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The appropriate per mille symbol is inserted in the returned string at the location where the ‰ symbol appears in the format string.</source>
          <target state="translated">В позицию возвращаемой строки, соответствующую положению символа "‰" в строке формата, будет вставлен необходимый символ промилле.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The per mille character used is defined by the <bpt id="p1">[</bpt>NumberFormatInfo.PerMilleSymbol<ept id="p1">](xref:System.Globalization.NumberFormatInfo.PerMilleSymbol)</ept> property of the object that provides culture-specific formatting information.</source>
          <target state="translated">Используемый знак промилле определяется значением свойства <bpt id="p1">[</bpt>NumberFormatInfo.PerMilleSymbol<ept id="p1">](xref:System.Globalization.NumberFormatInfo.PerMilleSymbol)</ept> объекта, содержащего сведения о форматировании для заданного языка и региональных параметров.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The following example defines a custom format string that includes the "‰" custom specifier.</source>
          <target state="translated">В следующем примере определяется строка настраиваемого формата, включающая настраиваемый описатель "‰".</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The "E" and "e" Custom Specifiers</source>
          <target state="translated">Настраиваемые описатели "E" и "e"</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If any of the strings "E", "E+", "E-", "e", "e+", or "e-" are present in the format string and are followed immediately by at least one zero, the number is formatted by using scientific notation with an "E" or "e" inserted between the number and the exponent.</source>
          <target state="translated">Если в строке формата присутствует подстрока "E", "E+", "E-", "e", "e+" или "e-", за которой сразу следует по меньшей мере один ноль, то число форматируется с использованием экспоненциальной нотации. Между числом и экспонентой при этом вставляется символ "E" или "e".</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The number of zeros following the scientific notation indicator determines the minimum number of digits to output for the exponent.</source>
          <target state="translated">Минимальное число цифр экспоненты в результирующей строке определяется количеством нулей, стоящих после индикатора экспоненциальной нотации.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The "E+" and "e+" formats indicate that a plus sign or minus sign should always precede the exponent.</source>
          <target state="translated">Форматы "E+" и "e+" указывают на то, что перед экспонентой всегда должен стоять положительный или отрицательный знак.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The "E", "E-", "e", or "e-" formats indicate that a sign character should precede only negative exponents.</source>
          <target state="translated">Форматы "E", "e", "E-" и "e-" указывают на то, что символ знака должен ставиться только перед экспонентой с отрицательным значением.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The following example formats several numeric values using the specifiers for scientific notation.</source>
          <target state="translated">В следующем примере несколько числовых значений форматируются с помощью спецификаторов экспоненциального представления.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The "<ph id="ph1">\"</ph> Escape Character</source>
          <target state="translated">Escape-символ "<ph id="ph1">\"</ph></target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The "#", "0", ".", ",", "%", and "‰" symbols in a format string are interpreted as format specifiers rather than as literal characters.</source>
          <target state="translated">Символы "#", "0", ".", ",", "%" и "‰" в строке формата воспринимаются как описатели формата, а не как символы-литералы.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Depending on their position in a custom format string, the uppercase and lowercase "E" as well as the + and - symbols may also be interpreted as format specifiers.</source>
          <target state="translated">В зависимости от положения в строке настраиваемого формата символ "E" верхнего и нижнего регистра, также как и символы "+" и "-", могут восприниматься как описатели формата.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>To prevent a character from being interpreted as a format specifier, you can precede it with a backslash, which is the escape character.</source>
          <target state="translated">Чтобы предотвратить интерпретацию символа в качестве описателя формата, перед ним можно поставить так называемый escape-символ — обратную косую черту.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The escape character signifies that the following character is a character literal that should be included in the result string unchanged.</source>
          <target state="translated">Наличие escape-символа означает, что следующий за ним символ является литералом, который следует перенести в результирующую строку без изменений.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>To include a backslash in a result string, you must escape it with another backslash (<ph id="ph1">\\</ph>).</source>
          <target state="translated">Чтобы включить в результирующую строку обратную косую черту, перед ней нужно поставить дополнительную обратную косую черту (<ph id="ph1">\\</ph>).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Some compilers, such as the C# compiler, may also interpret a single backslash character as an escape character.</source>
          <target state="translated">Кроме того, в некоторых компиляторах, например компиляторе C#, одиночная обратная косая черта также может восприниматься как escape-символ.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>To ensure that a string is interpreted correctly when formatting, you can use the verbatim string literal character (the @ character) before the string in C#, or add another backslash character before each backslash.</source>
          <target state="translated">Чтобы гарантировать, что строка будет правильно воспринята при форматировании, можно поставить символ буквального строкового литерала (символ "@") перед строкой в C# или добавить дополнительный символ обратной косой черты перед каждой обратной косой чертой.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The following C# example illustrates both approaches.</source>
          <target state="translated">В следующем примере кода на языке C# демонстрируются оба подхода.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The following example uses the escape character to prevent the formatting operation from interpreting the "#", "0", and "<ph id="ph1">\"</ph> characters as either escape characters or format specifiers.</source>
          <target state="translated">В следующем примере интерпретация символов "#", "0" и "<ph id="ph1">\"</ph> в качестве escape-символов или описателей формата при форматировании предотвращается с помощью escape-символа.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The example uses an additional backslash to ensure that a backslash is interpreted as a literal character.</source>
          <target state="translated">В примере используется дополнительная обратная косая черта, позволяющая гарантировать, что обратная косая черта будет воспринята как символ-литерал.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The ";" Section Separator</source>
          <target state="translated">Разделитель секций ";"</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The semicolon (;) is a conditional format specifier that applies different formatting to a number depending on whether its value is positive, negative, or zero.</source>
          <target state="translated">Точка с запятой (";") — это описатель условного формата, применяющий разное форматирование к числу в зависимости от того, является оно положительным числом, отрицательным числом или нулем.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>To produce this behavior, a custom format string can contain up to three sections separated by semicolons.</source>
          <target state="translated">Для этого следует создать строку формата, состоящую из трех секций, разделенных точкой с запятой.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>These sections are described in the following table.</source>
          <target state="translated">Эти секции описаны в следующей таблице.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Number of sections</source>
          <target state="translated">Число секций</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Описание</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>One section</source>
          <target state="translated">Одна секция</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The format string applies to all values.</source>
          <target state="translated">Строка форматирования применяется ко всем значениям.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Two sections</source>
          <target state="translated">Две секции</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The first section applies to positive values and zeros, and the second section applies to negative values.</source>
          <target state="translated">Первая секция применяется для положительных значений и нулей, вторая секция применяется для отрицательных значений.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If the number to be formatted is negative, but becomes zero after rounding according to the format in the second section, the resulting zero is formatted according to the first section.</source>
          <target state="translated">Если форматируемое число является отрицательным, но становится нулем в результате округления в соответствии с форматом, заданным во второй секции, то результирующий ноль форматируется в соответствии с первой секцией.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Three sections</source>
          <target state="translated">Три секции</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The first section applies to positive values, the second section applies to negative values, and the third section applies to zeros.</source>
          <target state="translated">Первая секция применяется для положительных значений, вторая секция применяется для отрицательных значений, а третья — для нулей.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The second section can be left empty (by having nothing between the semicolons), in which case the first section applies to all nonzero values.</source>
          <target state="translated">Вторая секция может быть пустой (между двумя точками с запятой пусто), в этом случае первая секция будет использоваться для форматирования нулевых значений.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If the number to be formatted is nonzero, but becomes zero after rounding according to the format in the first or second section, the resulting zero is formatted according to the third section.</source>
          <target state="translated">Если форматируемое число является ненулевым, но становится нулем в результате округления в соответствии с форматом в первой или второй секции, то результирующий ноль форматируется в соответствии с третьей секцией.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Section separators ignore any preexisting formatting associated with a number when the final value is formatted.</source>
          <target state="translated">При форматировании конечного значения разделители секций игнорируют любое существовавшее ранее форматирование, связанное с числом.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>For example, negative values are always displayed without a minus sign when section separators are used.</source>
          <target state="translated">Например, при использовании разделителей секций отрицательные значения всегда отображаются без знака "минус".</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>If you want the final formatted value to have a minus sign, you should explicitly include the minus sign as part of the custom format specifier.</source>
          <target state="translated">Чтобы конечное отформатированное значение содержало знак "минус", его следует явным образом включить в настраиваемый спецификатор формата.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The following example uses the ";" format specifier to format positive, negative, and zero numbers differently.</source>
          <target state="translated">В следующем примере описатель формата ";" используется для форматирования положительных чисел, отрицательных чисел и нулей различными способами.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Примечания</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Floating-Point Infinities and NaN</source>
          <target state="translated">Бесконечности действительных чисел с плавающей запятой и NaN</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Regardless of the format string, if the value of a <bpt id="p1">[</bpt>Single<ept id="p1">](xref:System.Single)</ept> or <bpt id="p2">[</bpt>Double<ept id="p2">](xref:System.Double)</ept> floating-point type is positive infinity, negative infinity, or not a number (NaN), the formatted string is the value of the respective <bpt id="p3">[</bpt>PositiveInfinitySymbol<ept id="p3">](xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol)</ept>, <bpt id="p4">[</bpt>NegativeInfinitySymbol<ept id="p4">](xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol)</ept>, or <bpt id="p5">[</bpt>NaNSymbol<ept id="p5">](xref:System.Globalization.NumberFormatInfo.NaNSymbol)</ept> property that is specified by the currently applicable <bpt id="p6">[</bpt>NumberFormatInfo<ept id="p6">](xref:System.Globalization.NumberFormatInfo)</ept> object.</source>
          <target state="translated">Если, вне зависимости от строки формата, значение типа с плавающей запятой <bpt id="p1">[</bpt>Single<ept id="p1">](xref:System.Single)</ept> или <bpt id="p2">[</bpt>Double<ept id="p2">](xref:System.Double)</ept> является положительной бесконечностью, отрицательной бесконечностью или не является числом (NaN), отформатированная строка будет содержать значение соответствующего свойства (<bpt id="p3">[</bpt>PositiveInfinitySymbol<ept id="p3">](xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol)</ept>, <bpt id="p4">[</bpt>NegativeInfinitySymbol<ept id="p4">](xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol)</ept> или <bpt id="p5">[</bpt>NaNSymbol<ept id="p5">](xref:System.Globalization.NumberFormatInfo.NaNSymbol)</ept>) применимого в настоящий момент объекта <bpt id="p6">[</bpt>NumberFormatInfo<ept id="p6">](xref:System.Globalization.NumberFormatInfo)</ept>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Rounding and Fixed-Point Format Strings</source>
          <target state="translated">Строки формата с фиксированной запятой и округлением</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>For fixed-point format strings (that is, format strings that do not contain scientific notation format characters), numbers are rounded to as many decimal places as there are digit placeholders to the right of the decimal point.</source>
          <target state="translated">Строки формата с фиксированной запятой (строки формата, не содержащие символов экспоненциальной нотации) округляют значение с точностью, определяемой количеством символов-заполнителей, стоящих справа от разделителя целой и дробной частей.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If the format string does not contain a decimal point, the number is rounded to the nearest integer.</source>
          <target state="translated">Если в строке формата нет десятичной точки, то число округляется до ближайшего целого значения.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>If the number has more digits than there are digit placeholders to the left of the decimal point, the extra digits are copied to the result string immediately before the first digit placeholder.</source>
          <target state="translated">Если слева от десятичной точки больше цифр, чем знаков-заместителей цифр, то лишние знаки копируются в выходную строку перед первым знаком-заместителем цифры.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Пример</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The following example demonstrates two custom numeric format strings.</source>
          <target state="translated">В следующем примере показаны две строки настраиваемого числового формата.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>In both cases, the digit placeholder (#) displays the numeric data, and all other characters are copied to the result string.</source>
          <target state="translated">В обоих случаях заполнитель для цифр (#) отображает числовые данные, а все остальные символы копируются в результирующую строку.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">См. также</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Globalization.NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Globalization.NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept></target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting types<ept id="p1">](formatting-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Типы форматирования<ept id="p1">](formatting-types.md)</ept></target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard numeric format strings<ept id="p1">](standard-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Строки стандартных числовых форматов<ept id="p1">](standard-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: pad a number with leading zeros<ept id="p1">](pad-number.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Практическое руководство. Добавление начальных нулей к числу<ept id="p1">](pad-number.md)</ept></target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Composite formatting<ept id="p1">](composite-format.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Составное форматирование<ept id="p1">](composite-format.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>