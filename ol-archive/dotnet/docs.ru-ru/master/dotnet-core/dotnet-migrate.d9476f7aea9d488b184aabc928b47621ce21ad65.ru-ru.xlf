<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f0362aa" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">57ae01419c6f7a75970816e1245094c38c5247fa</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\preview3\tools\dotnet-migrate.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53aa35d54b08ce1c3ed88508ce45fa970fef93a0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df41a6b7c8aac0b82b1ca0cf63287e9545a7281e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-migrate command | Microsoft Docs</source>
          <target state="translated">Команда dotnet-migrate | Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-migrate command migrates a project and all of its dependencies.</source>
          <target state="translated">Команда dotnet-migrate переносит проект и все его зависимости.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-migrate, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-migrate, интерфейс командной строки, команда CLI .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-migrate</source>
          <target state="translated">dotnet-migrate</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Имя</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>dotnet-migrate -- Migrates a Preview 2 .NET Core project to RC4 .NET Core project</source>
          <target state="translated">dotnet-migrate — перемещает проект .NET Core предварительной версии 2 в проект .NET Core версии-кандидата 4</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Краткий обзор</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Описание</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet migrate`</ph> command will migrate a valid Preview 2 <ph id="ph2">`project.json`</ph> based project to a valid RC4 <ph id="ph3">`csproj`</ph> project.</source>
          <target state="translated">Команда <ph id="ph1">`dotnet migrate`</ph> переместит действительный проект предварительной версии 2 <ph id="ph2">`project.json`</ph> в действительный проект версии-кандидата 4 <ph id="ph3">`csproj`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>By default, the command will migrate the root project and any project references that the root project contains.</source>
          <target state="translated">По умолчанию команда перенесет корневой проект и все ссылки, которые он содержит.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This behavior can be disabled using the <ph id="ph1">`--skip-project-references`</ph> option at runtime.</source>
          <target state="translated">Это поведение можно отключить в среде выполнения с помощью параметра <ph id="ph1">`--skip-project-references`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Migration can be done on either:</source>
          <target state="translated">Миграция может выполняться несколькими способами.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A single project by specifying the <ph id="ph1">`project.json`</ph> file to migrate</source>
          <target state="translated">Переносится один проект, в котором указан файл <ph id="ph1">`project.json`</ph> для миграции.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>All of the directories specified in the <ph id="ph1">`global.json`</ph> file by passing in a path to the <ph id="ph2">`global.json`</ph> file</source>
          <target state="translated">Переносятся все каталоги, указанные в файле <ph id="ph1">`global.json`</ph>, с использованием передачи в путь к файлу <ph id="ph2">`global.json`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>On all sub-directories of the given directory recursively</source>
          <target state="translated">Переносятся рекурсивно все подкаталоги в этом каталоге.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The migrate command will keep the migrated <ph id="ph1">`project.json`</ph> file inside a <ph id="ph2">`backup`</ph> directory which it will create if it doesn't exist.</source>
          <target state="translated">Команда migrate будет хранить перенесенный файл <ph id="ph1">`project.json`</ph> в каталоге <ph id="ph2">`backup`</ph> (будет создан, если не существует).</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This can be overriden using the <ph id="ph1">`--skip-backup`</ph> option.</source>
          <target state="translated">Это поведение можно изменить с помощью параметра <ph id="ph1">`--skip-backup`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>By default, the migration operation will output the state of the migration process to standard output (STDOUT).</source>
          <target state="translated">По умолчанию операция миграции будет выводить состояние процесса миграции в стандартный вывод (STDOUT).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you use the <ph id="ph1">`--report-file`</ph> option, that output will also be saved to a file that you specify.</source>
          <target state="translated">Если вы используете параметр <ph id="ph1">`--report-file`</ph>, в выходных данных также будет сохранен указанный вами файл.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>As of RC4, the <ph id="ph1">`dotnet migrate`</ph> command only supports valid Preview 2 <ph id="ph2">`project.json`</ph> files.</source>
          <target state="translated">Начиная с версии-кандидата 4, команда <ph id="ph1">`dotnet migrate`</ph> поддерживает только допустимые файлы предварительной версии 2 <ph id="ph2">`project.json`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This means that you cannot use it to migrate old DNX or Preview 1 <ph id="ph1">`project.json`</ph> files directly to csproj; you first need to migrate them to Preview 2 project.json files and then to csproj files.</source>
          <target state="translated">Это означает, что эту команду нельзя использовать для переноса старых файлов DNX или предварительной версии 1 <ph id="ph1">`project.json`</ph> непосредственно в CSPROJ. Необходимо сначала перенести их в файлы project.json предварительной версии 2, а затем в файлы CSPROJ.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In the future, we will add support for Preview 1 projects.</source>
          <target state="translated">В будущем мы добавим поддержку проектов предварительной версии 1.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Параметры</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">Выводит краткую справку по команде.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Template csproj file to use for migration.</source>
          <target state="translated">Файл CSPROJ шаблона для переноса.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>By default, the same template as the one dropped by <ph id="ph1">`dotnet new`</ph> will be used.</source>
          <target state="translated">По умолчанию будет использоваться тот же шаблон, что и проигнорированный в <ph id="ph1">`dotnet new`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The version of the sdk package that will be referenced in the migrated app.</source>
          <target state="translated">Версия пакета SDK, на которую будут ссылаться перенесенные приложения.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The default is the version of the sdk in dotnet new.</source>
          <target state="translated">По умолчанию используется версия пакета SDK новой платформы DotNet.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The path to the xproj file to use.</source>
          <target state="translated">Путь к файлу XPROJ, который будет использоваться.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Required when there is more than one xproj in a project directory.</source>
          <target state="translated">Требуется, если в каталоге проекта несколько файлов XPROJ.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Skip migrating project references.</source>
          <target state="translated">Пропуск ссылок проекта для миграции.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>By default project references are migrated recursively.</source>
          <target state="translated">По умолчанию ссылки проекта переносятся рекурсивно.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Output migration report to a file in addition to the console.</source>
          <target state="translated">Вывод отчета о миграции в файл наряду с выводом в консоль.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Output migration report file as json rather than user messages.</source>
          <target state="translated">Вывод отчета о миграции в файл JSON вместо отправки сообщений пользователю.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Skip moving project.json, global.json, and <ph id="ph1">\*</ph>.xproj to a <ph id="ph2">`backup`</ph> directory after successful migration.</source>
          <target state="translated">Пропуск перемещения project.json, global.json, и <ph id="ph1">\*</ph>.xproj в каталог <ph id="ph2">`backup`</ph> после успешной миграции.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Примеры</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Migrate a project in the current directory and all of its project to project dependencies:</source>
          <target state="translated">Перенос проекта в текущем каталоге и всех взаимных зависимостей проектов.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Migrate all projects that <ph id="ph1">`global.json`</ph> file points to:</source>
          <target state="translated">Перенос всех проектов, на которые указывает файл <ph id="ph1">`global.json`</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Migrate only the current project and no project to project dependencies and use a specific SDK version:</source>
          <target state="translated">Перенос только текущего проекта без взаимных зависимостей проектов и использование конкретной версии пакета SDK.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>