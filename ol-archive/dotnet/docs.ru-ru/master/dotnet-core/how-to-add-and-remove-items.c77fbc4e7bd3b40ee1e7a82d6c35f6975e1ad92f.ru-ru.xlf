<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf792c03c7ca23136736b86e8e9ed2449eca6b92</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\collections\threadsafe\how-to-add-and-remove-items.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ddd93cc29367d9ae1f5b52b07cf86fc02c421a1e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d6fe9aa9d1e7a6c3d7a50df43d7c64cac671ca9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Add and Remove Items from a ConcurrentDictionary</source>
          <target state="translated">Практическое руководство. Добавление элементов в коллекцию ConcurrentDictionary и их удаление из этой коллекции</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Add and Remove Items from a ConcurrentDictionary</source>
          <target state="translated">Практическое руководство. Добавление элементов в коллекцию ConcurrentDictionary и их удаление из этой коллекции</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>How to: Add and Remove Items from a ConcurrentDictionary</source>
          <target state="translated">Практическое руководство. Добавление элементов в коллекцию ConcurrentDictionary и их удаление из этой коллекции</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This example shows how to add, retrieve, update, and remove items from a <bpt id="p1">[</bpt>System.Collections.Concurrent.ConcurrentDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept>.</source>
          <target state="translated">В этом примере показано, как выполняется добавление, получение, обновление и удаление элементов из класса <bpt id="p1">[</bpt>System.Collections.Concurrent.ConcurrentDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This collection class is a thread-safe implementation.</source>
          <target state="translated">Этот класс коллекций является потокобезопасной реализацией.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>We recommend that you use it whenever multiple threads might be attempting to access the elements concurrently.</source>
          <target state="translated">Рекомендуется использовать его каждый раз, когда множество потоков одновременно могут пытаться получить доступ к элементам.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ConcurrentDictionary&lt;TKey, TValue&gt;`</ph> provides several convenience methods that make it unnecessary for code to first check whether a key exists before it attempts to add or remove data.</source>
          <target state="translated"><ph id="ph1">`ConcurrentDictionary&lt;TKey, TValue&gt;`</ph> предоставляет несколько удобных способов, которые позволяют обойтись без первоначальной проверки существования ключа перед добавлением или удалением данных.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following table lists these convenience methods and describes when to use them.</source>
          <target state="translated">В таблице ниже перечислены эти удобные методы и приводится описание их использования.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Метод</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use when...</source>
          <target state="translated">Следует использовать в следующих случаях...</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You want to add a new value for a specified key and, if the key already exists, you want to replace its value.</source>
          <target state="translated">Необходимо добавить новое значение для заданного ключа, а также в том случае, если ключ уже существует и необходимо заменить его значение.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You want to retrieve the existing value for a specified key and, if the key does not exist, you want to specify a key/value pair.</source>
          <target state="translated">Необходимо получить существующее значение для заданного ключа, а также в том случае, если ключ не существует, и задать значение паре "ключ-значение".</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TryAdd`</ph>, <ph id="ph2">`TryGetValue`</ph>, <ph id="ph3">`TryUpdate`</ph>, <ph id="ph4">`TryRemove`</ph></source>
          <target state="translated"><ph id="ph1">`TryAdd`</ph>, <ph id="ph2">`TryGetValue`</ph>, <ph id="ph3">`TryUpdate`</ph>, <ph id="ph4">`TryRemove`</ph></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You want to add, get, update, or remove a key/value pair, and, if the key already exists or the attempt fails for any other reason, you want to take some alternative action.</source>
          <target state="translated">Необходимо добавить, получить, обновить или удалить пару "ключ-значение", а также в том случае, если ключ уже существует или попытка завершилась по какой-либо причине ошибкой и необходимо выполнить альтернативные действия.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Пример</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ConcurrentDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept> is designed for multithreaded scenarios.</source>
          <target state="translated">Класс <bpt id="p1">[</bpt>ConcurrentDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept> разработан для многопотоковых сценариев.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You do not have to use locks in your code to add or remove items from the collection.</source>
          <target state="translated">Необязательно использовать блокировки в коде для добавления или удаления элементов из коллекции.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>However, it is always possible for one thread to retrieve a value, and another thread to immediately update the collection by giving the same key a new value.</source>
          <target state="translated">Однако всегда есть возможность для одного потока получить значение, а для другого потока немедленно обновить коллекцию, передавая тому же ключу новое значение.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Also, although all methods of <ph id="ph1">`ConcurrentDictionary&lt;TKey, TValue&gt;`</ph> are thread-safe, not all methods are atomic, specifically <ph id="ph2">`GetOrAdd`</ph> and <ph id="ph3">`AddOrUpdate`</ph>.</source>
          <target state="translated">Кроме того, несмотря на то, что все методы <ph id="ph1">`ConcurrentDictionary&lt;TKey, TValue&gt;`</ph> потокобезопасны, не все методы атомарны, например <ph id="ph2">`GetOrAdd`</ph> и <ph id="ph3">`AddOrUpdate`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The user delegate that is passed to these methods is invoked outside of the dictionary's internal lock.</source>
          <target state="translated">Пользовательский делегат, передаваемый этим методам, вызывается вне внутренней блокировки словаря.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>(This is done to prevent unknown code from blocking all threads.) Therefore it is possible for this sequence of events to occur:</source>
          <target state="translated">(Это позволяет предотвратить блокировку всех потоков неизвестным кодом.) Поэтому может произойти следующая последовательность событий.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>threadA calls <ph id="ph1">`GetOrAdd`</ph>, finds no item and creates a new item to Add by invoking the valueFactory delegate.</source>
          <target state="translated">Поток A вызывает <ph id="ph1">`GetOrAdd`</ph>, не находит элемента и создает новый элемент для добавления, вызывая делегат valueFactory.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>threadB calls <ph id="ph1">`GetOrAdd`</ph> concurrently, its valueFactory delegate is invoked and it arrives at the internal lock before threadA, and so its new key-value pair is added to the dictionary.</source>
          <target state="translated">Поток B одновременно вызывает <ph id="ph1">`GetOrAdd`</ph>, делегат valueFactory вызван, этот поток оказывается во внутренней блокировке раньше потока A, его новая пара "ключ-значение" добавляется в словарь.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>threadA's user delegate completes, and the thread arrives at the lock, but now sees that the item exists already</source>
          <target state="translated">Пользовательский делегат потока A завершает работу, поток достигает блокировки, но видит, что теперь элемент уже существует.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>threadA performs a "Get", and returns the data that was previously added by threadB.</source>
          <target state="translated">Поток A выполняет действие "Get" и возвращает данные, добавленные ранее потоком B.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Therefore, it is not guaranteed that the data that is returned by <ph id="ph1">`GetOrAdd`</ph> is the same data that was created by the thread's valueFactory.</source>
          <target state="translated">Поэтому нет гарантии, что данные, возвращаемые методом <ph id="ph1">`GetOrAdd`</ph>, будут данными, созданными делегатом valueFactory потока.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A similar sequence of events can occur when <ph id="ph1">`AddOrUpdate`</ph> is called.</source>
          <target state="translated">Аналогичная последовательность событий может иметь место при вызове метода <ph id="ph1">`AddOrUpdate`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">См. также</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Thread-Safe Collections<ept id="p1">](index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Потокобезопасные коллекции<ept id="p1">](index.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>