<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5d37e78be88828d6c82777f96b6334903aecbe53</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tutorials\target-dotnetcore-with-msbuild.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d67f3601a3cb1048712a906cf656953435abf39</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2108c62291854c71e99819295eadae00d8e08f9e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using MSBuild to build .NET Core projects</source>
          <target state="translated">Использование системы MSBuild для сборки проектов .NET Core</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Using MSBuild to build .NET Core projects</source>
          <target state="translated">Использование системы MSBuild для сборки проектов .NET Core</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Using MSBuild to build .NET Core projects</source>
          <target state="translated">Использование системы MSBuild для сборки проектов .NET Core</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The .NET Core tooling is going to <bpt id="p1">[</bpt>move from project.json to MSBuild based projects<ept id="p1">](https://blogs.msdn.microsoft.com/dotnet/2016/05/23/changes-to-project-json/)</ept>.</source>
          <target state="translated">Средства .NET Core будут <bpt id="p1">[</bpt>переводиться с использования файлов project.json на проекты на основе MSBuild<ept id="p1">](https://blogs.msdn.microsoft.com/dotnet/2016/05/23/changes-to-project-json/)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>We expect the first version of the .NET Core tools that use MSBuild to ship along with the next version of Visual Studio.</source>
          <target state="translated">Мы планируем, что первая версия средств .NET Core, использующих систему MSBuild, будет входить в состав следующей версии Visual Studio.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>However, it is possible to use MSBuild for .NET Core projects today, and this page shows how.</source>
          <target state="translated">Однако использовать систему MSBuild для проектов .NET Core можно уже сейчас, как описывается в этом разделе.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>We recommend that most people targeting .NET Core with <bpt id="p1">*</bpt>new<ept id="p1">*</ept> projects today use the default tooling experience with project.json because of the following reasons:</source>
          <target state="translated">Мы рекомендуем большинству разработчиков, которые создают <bpt id="p1">*</bpt>новые<ept id="p1">*</ept> проекты, предназначенные для .NET Core, использовать файлы project.json (способ по умолчанию) по указанным ниже причинам:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>MSBuild doesn't yet support a lot of the benefits of project.json</source>
          <target state="translated">Система MSBuild пока не поддерживает многие преимущества файлов project.json.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A lot of the ASP.NET based tooling doesn't currently work with MSBuild projects</source>
          <target state="translated">Многие средства на основе ASP.NET в настоящее время не работают с проектами MSBuild.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When we do release the .NET Core tooling that uses MSBuild, it will be able to automatically convert from project.json to MSBuild projects</source>
          <target state="translated">Когда мы выпустим средства .NET Core, использующие MSBuild, проекты на основе project.json можно будет автоматически преобразовать в проекты MSBuild.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You may want to use MSBuild to target .NET Core for existing projects that already use MSBuild that you want to port to .NET Core, or if you are using MSBuild's extensibility in your build for scenarios that are not well supported for project.json projects.</source>
          <target state="translated">Систему MSBuild можно применять для нацеливания на .NET Core уже существующих проектов, которые уже используют MSBuild и которые нужно перенести в .NET Core, или если вы используете расширяемость MSBuild при сборке для сценариев, которые плохо поддерживаются проектами на основе файлов project.json.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Предварительные требования</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Visual Studio 2015 Update 3<ept id="p1">](https://www.visualstudio.com/en-us/news/releasenotes/vs2015-update3-vs)</ept> or higher</source>
          <target state="translated"><bpt id="p1">[</bpt>Visual Studio 2015 с обновлением 3<ept id="p1">](https://www.visualstudio.com/en-us/news/releasenotes/vs2015-update3-vs)</ept> или более поздней версии</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core tools for Visual Studio<ept id="p1">](https://www.visualstudio.com/downloads/download-visual-studio-vs)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Средства .NET Core для Visual Studio 2015<ept id="p1">](https://www.visualstudio.com/downloads/download-visual-studio-vs)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>NuGet Visual Studio extension <bpt id="p1">[</bpt>v3.5.0-beta<ept id="p1">](https://dist.nuget.org/visualstudio-2015-vsix/v3.5.0-beta/NuGet.Tools.vsix)</ept> or later</source>
          <target state="translated">Расширение NuGet для Visual Studio <bpt id="p1">[</bpt>бета-версии 3.5.0<ept id="p1">](https://dist.nuget.org/visualstudio-2015-vsix/v3.5.0-beta/NuGet.Tools.vsix)</ept> или более поздней</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creating a library targeting .NET Core</source>
          <target state="translated">Создание библиотеки, предназначенной для .NET Core</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the Visual Studio menu bar, choose <bpt id="p1">**</bpt>File<ept id="p1">**</ept><ph id="ph1"> | </ph><bpt id="p2">**</bpt>New<ept id="p2">**</ept><ph id="ph2"> | </ph><bpt id="p3">**</bpt>Project<ept id="p3">**</ept> and select <bpt id="p4">**</bpt>Class Library (Portable)<ept id="p4">**</ept></source>
          <target state="translated">В строке меню Visual Studio выберите <bpt id="p1">**</bpt>Файл<ept id="p1">**</ept><ph id="ph1"> | </ph><bpt id="p2">**</bpt>Создать <ept id="p2">**</ept><ph id="ph2"> | </ph><bpt id="p3">**</bpt>Проект<ept id="p3">**</ept>, а затем выберите пункт <bpt id="p4">**</bpt>Библиотека классов (переносимая)<ept id="p4">**</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>New Project</source>
          <target state="translated">Создание проекта</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Choose a name and location for your project and click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept></source>
          <target state="translated">Выберите имя и расположение проекта, а затем нажмите кнопку <bpt id="p1">**</bpt>ОК<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The "Add Portable Class Library" dialog will appear.</source>
          <target state="translated">Появится диалоговое окно "Добавление переносимой библиотеки классов".</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>.NET Framework 4.6<ept id="p1">**</ept> and <bpt id="p2">**</bpt>ASP.NET Core 1.0<ept id="p2">**</ept> as targets and click <bpt id="p3">**</bpt>OK<ept id="p3">**</ept></source>
          <target state="translated">Выберите <bpt id="p1">**</bpt>.NET Framework 4.6<ept id="p1">**</ept> и <bpt id="p2">**</bpt>ASP.NET Core 1.0<ept id="p2">**</ept> в качестве целевых платформ и нажмите кнопку <bpt id="p3">**</bpt>ОК<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Portable targets dialog</source>
          <target state="translated">Диалоговое окно со списком целевых платформ</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, right click on your project and choose <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept></source>
          <target state="translated">В обозревателе решений щелкните проект правой кнопкой мыши и выберите пункт <bpt id="p1">**</bpt>Свойства<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Library<ept id="p1">**</ept> tab of the project properties, click on the <bpt id="p2">**</bpt>Target .NET Platform Standard<ept id="p2">**</ept> link, and click <bpt id="p3">**</bpt>Yes<ept id="p3">**</ept> in the dialog that is shown</source>
          <target state="translated">На вкладке <bpt id="p1">**</bpt>Библиотека<ept id="p1">**</ept> окна свойств проекта щелкните ссылку <bpt id="p2">**</bpt>Нацелить на стандартную платформу .NET<ept id="p2">**</ept> и нажмите кнопку <bpt id="p3">**</bpt>Да<ept id="p3">**</ept> в появившемся диалоговом окне.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`project.json`</ph> file in your project, and make the following changes:</source>
          <target state="translated">Откройте файл <ph id="ph1">`project.json`</ph> в проекте и внесите указанные ниже изменения:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Change the version number of the <ph id="ph1">`NETStandard.Library`</ph> package to <ph id="ph2">`1.6.0`</ph> (this is the .NET Core 1.0 version of the package)</source>
          <target state="translated">Измените номер версии пакета <ph id="ph1">`NETStandard.Library`</ph> на <ph id="ph2">`1.6.0`</ph> (это версия пакета в .NET Core 1.0).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Add the below <ph id="ph1">`imports`</ph> definition inside the <ph id="ph2">`netstandard1.6`</ph> framework definition.</source>
          <target state="translated">Добавьте приведенное ниже определение <ph id="ph1">`imports`</ph> внутри определения платформы <ph id="ph2">`netstandard1.6`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This will allow your project to reference .NET Core compatible NuGet packages that haven't been updated to target .NET Standard</source>
          <target state="translated">Это позволит проекту ссылаться на совместимые с .NET Core пакеты NuGet, которые не были обновлены для .NET Standard.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Creating a .NET Core console application</source>
          <target state="translated">Создание консольного приложения .NET Core</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Building a console application for .NET Core requires some customization of the MSBuild build process.</source>
          <target state="translated">Для создания консольного приложения для .NET Core требуется определенная настройка процесса сборки MSBuild.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can find a sample project for a .NET Core console application called <bpt id="p1">[</bpt>CoreApp<ept id="p1">](https://github.com/dotnet/corefxlab/tree/master/samples/NetCoreSample/CoreApp)</ept> in the <bpt id="p2">[</bpt>corefxlab<ept id="p2">](https://github.com/dotnet/corefxlab)</ept> repo.</source>
          <target state="translated">Образец проекта консольного приложения .NET Core с именем <bpt id="p1">[</bpt>CoreApp<ept id="p1">](https://github.com/dotnet/corefxlab/tree/master/samples/NetCoreSample/CoreApp)</ept> можно найти в репозитории <bpt id="p2">[</bpt>corefxlab<ept id="p2">](https://github.com/dotnet/corefxlab)</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Another good option is to start with <bpt id="p1">[</bpt>coretemplate<ept id="p1">](https://github.com/mellinoe/coretemplate)</ept>, which uses separate MSBuild targets files to target .NET Core instead of putting the changes directly in the project file.</source>
          <target state="translated">Еще один хороший способ — начать с шаблона <bpt id="p1">[</bpt>coretemplate<ept id="p1">](https://github.com/mellinoe/coretemplate)</ept>, в котором применяются отдельные целевые файлы MSBuild для нацеливания на .NET Core, вместо того чтобы вносить эти изменения непосредственно в файл проекта.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>It is also possible to start by creating a project in Visual Studio and modifying it to target .NET Core.</source>
          <target state="translated">Кроме того, можно сначала создать проект в Visual Studio, а затем изменить его так, чтобы он предназначался для .NET Core.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The instructions below show the minimal steps to get this working.</source>
          <target state="translated">Ниже описывается минимальный набор действий, которые необходимо выполнить для этого.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In contrast to <bpt id="p1">[</bpt>CoreApp<ept id="p1">](https://github.com/dotnet/corefxlab/tree/master/samples/NetCoreSample/CoreApp)</ept> or <bpt id="p2">[</bpt>coretemplate<ept id="p2">](https://github.com/mellinoe/coretemplate)</ept>, a project created this way won't include configurations for targeting Linux and macOS.</source>
          <target state="translated">В отличие от <bpt id="p1">[</bpt>CoreApp<ept id="p1">](https://github.com/dotnet/corefxlab/tree/master/samples/NetCoreSample/CoreApp)</ept> или <bpt id="p2">[</bpt>coretemplate<ept id="p2">](https://github.com/mellinoe/coretemplate)</ept>, проект, созданный таким образом, не будет включать в себя конфигурации для нацеливания на Linux и Mac OS.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In the Visual Studio menu bar, choose <bpt id="p1">**</bpt>File<ept id="p1">**</ept><ph id="ph1"> | </ph><bpt id="p2">**</bpt>New<ept id="p2">**</ept><ph id="ph2"> | </ph><bpt id="p3">**</bpt>Project<ept id="p3">**</ept> and select <bpt id="p4">**</bpt>Console Application<ept id="p4">**</ept></source>
          <target state="translated">В строке меню Visual Studio выберите <bpt id="p1">**</bpt>Файл<ept id="p1">**</ept><ph id="ph1"> | </ph><bpt id="p2">**</bpt>Создать <ept id="p2">**</ept><ph id="ph2"> | </ph><bpt id="p3">**</bpt>Проект<ept id="p3">**</ept>, а затем выберите пункт <bpt id="p4">**</bpt>Консольное приложение<ept id="p4">**</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Choose a name and location for your project and click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept></source>
          <target state="translated">Выберите имя и расположение проекта, а затем нажмите кнопку <bpt id="p1">**</bpt>ОК<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, right click on your project, choose <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept>, and then go to the <bpt id="p2">**</bpt>Build<ept id="p2">**</ept> tab</source>
          <target state="translated">В обозревателе решений щелкните проект правой кнопкой мыши, выберите пункт <bpt id="p1">**</bpt>Свойства<ept id="p1">**</ept>, а затем перейдите на вкладку <bpt id="p2">**</bpt>Сборка<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Configuration<ept id="p1">**</ept> dropdown (at the top of the properties page), select <bpt id="p2">**</bpt>All Configurations<ept id="p2">**</ept>, and then change the <bpt id="p3">**</bpt>Platform Target<ept id="p3">**</ept> to <bpt id="p4">**</bpt>x64<ept id="p4">**</ept></source>
          <target state="translated">В раскрывающемся списке <bpt id="p1">**</bpt>Конфигурация<ept id="p1">**</ept> (в верхней части страницы свойств) выберите пункт <bpt id="p2">**</bpt>Все конфигурации<ept id="p2">**</ept>, а затем измените значение свойства <bpt id="p3">**</bpt>Целевая платформа<ept id="p3">**</ept> на <bpt id="p4">**</bpt>x64<ept id="p4">**</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Delete the <ph id="ph1">`app.config`</ph> file from the project</source>
          <target state="translated">Удалите файл <ph id="ph1">`app.config`</ph> из проекта.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">`project.json`</ph> file to the project with the following contents:</source>
          <target state="translated">Добавьте в проект файл <ph id="ph1">`project.json`</ph> со следующим содержимым:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, right click on the project, choose <bpt id="p1">**</bpt>Unload Project<ept id="p1">**</ept>, then right click again and choose <bpt id="p2">**</bpt>Edit <bpt id="p3">_</bpt>MyProj.csproj<ept id="p3">_</ept><ept id="p2">**</ept>, and make the following changes</source>
          <target state="translated">В обозревателе решений щелкните проект правой кнопкой мыши, выберите пункт <bpt id="p1">**</bpt>Выгрузить проект<ept id="p1">**</ept>, затем щелкните правой кнопкой мыши еще раз, выберите пункт <bpt id="p2">**</bpt>Изменить <bpt id="p3">_</bpt>MyProj.csproj<ept id="p3">_</ept><ept id="p2">**</ept> и внесите указанные ниже изменения.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Remove all the default <ph id="ph1">`Reference`</ph> items (to <ph id="ph2">`System`</ph>, <ph id="ph3">`System.Core`</ph>, etc.)</source>
          <target state="translated">Удалите все элементы <ph id="ph1">`Reference`</ph> по умолчанию (ссылки на <ph id="ph2">`System`</ph>, <ph id="ph3">`System.Core`</ph> и т. д.).</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Add the following properties to the first <ph id="ph1">`PropertyGroup`</ph> in the project:</source>
          <target state="translated">Добавьте следующие свойства в первый элемент <ph id="ph1">`PropertyGroup`</ph> в проекте:</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Add the following at the end of the file (after the import of <ph id="ph1">`Microsoft.CSharp.Targets`</ph>):</source>
          <target state="translated">Добавьте следующие строки в конец файла (после импорта <ph id="ph1">`Microsoft.CSharp.Targets`</ph>):</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Close the .csproj file, and reload the project in Visual Studio</source>
          <target state="translated">Закройте файл .csproj и перезагрузите проект в Visual Studio.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You should be able to run your program with F5 in Visual Studio, or from the command line in the output folder with <ph id="ph1">`dotnet MyApp.exe`</ph></source>
          <target state="translated">Теперь программа должна запускаться путем нажатия клавиши F5 в Visual Studio или из папки выходных данных с помощью команды командной строки<ph id="ph1">`dotnet MyApp.exe`</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>