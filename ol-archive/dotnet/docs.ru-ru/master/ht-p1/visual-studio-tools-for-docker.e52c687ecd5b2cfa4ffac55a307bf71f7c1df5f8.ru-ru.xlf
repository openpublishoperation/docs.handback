<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">274402bbd254e97d88771675daf07995983914aa</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\docker\visual-studio-tools-for-docker.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08a250983ad0941bcb350d807a68c4def0ffc1aa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b515b1f8079f4667ed317ca6b7a7ee6778a43bfa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Visual Studio Tools for Docker</source>
          <target state="translated">Инструменты Visual Studio для Docker</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Using Visual Studio Tools for Docker</source>
          <target state="translated">Использование инструментов Visual Studio для Docker</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core, Docker, ASP.NET Core, Visual Studio 2015</source>
          <target state="translated">.NET, .NET Core, Docker, ASP.NET Core, Visual Studio 2015</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Visual Studio Tools for Docker</source>
          <target state="translated">Инструменты Visual Studio для Docker</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Developing and debugging your application in a Docker container can be a ceremony of tasks to get setup with various tools.</source>
          <target state="translated">Для разработки и отладки приложения в контейнере Docker может потребоваться целая череда задач по настройке различных средств.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Visual Studio Tools for Docker<ept id="p1">](https://visualstudiogallery.msdn.microsoft.com/0f5b2caa-ea00-41c8-b8a2-058c7da0b3e4)</ept> helps you get past the hurdles and find the bugs using F5 to debug your application directly in a locally hosted Docker Container.</source>
          <target state="translated"><bpt id="p1">[</bpt>Инструменты Visual Studio для Docker<ept id="p1">](https://visualstudiogallery.msdn.microsoft.com/0f5b2caa-ea00-41c8-b8a2-058c7da0b3e4)</ept> помогут вам преодолеть все препятствия и приступить к отладке приложения с помощью клавиши F5 непосредственно в локально размещенном контейнере Docker.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The current version targets Linux Docker containers, with Windows Containers coming soon.</source>
          <target state="translated">Текущая версия предназначена для контейнеров Docker в Linux. Поддержка контейнеров Windows ожидается в ближайшее время.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Предварительные требования</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft Visual Studio 2015 Update 3<ept id="p1">](https://www.visualstudio.com/downloads/download-visual-studio-vs)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Microsoft Visual Studio 2015 с обновлением 3<ept id="p1">](https://www.visualstudio.com/downloads/download-visual-studio-vs)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core 1.0.1 - VS 2015 Tooling Preview 2<ept id="p1">](https://go.microsoft.com/fwlink/?LinkID=827546)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Предварительная версия 2 средств Visual Studio 2015 для .NET Core 1.0.1<ept id="p1">](https://go.microsoft.com/fwlink/?LinkID=827546)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Docker For Windows<ept id="p1">](https://www.docker.com/products/docker#/windows)</ept> to run your Docker containers locally</source>
          <target state="translated"><bpt id="p1">[</bpt>Docker для Windows<ept id="p1">](https://www.docker.com/products/docker#/windows)</ept> для локального выполнения контейнеров Docker</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Installation and setup</source>
          <target state="translated">Установка и настройка</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Download and install the <bpt id="p1">[</bpt>Visual Studio Tools for Docker<ept id="p1">](https://aka.ms/DockerToolsForVS)</ept> from the <bpt id="p2">[</bpt>Visual Studio Gallery<ept id="p2">](http://visualstudiogallery.msdn.microsoft.com/)</ept> or you can search for it in <bpt id="p3">**</bpt>Extensions and Updates<ept id="p3">**</ept> within Visual Studio.</source>
          <target state="translated">Скачайте и установите <bpt id="p1">[</bpt>инструменты Visual Studio для Docker<ept id="p1">](https://aka.ms/DockerToolsForVS)</ept> из <bpt id="p2">[</bpt>Галереи Visual Studio<ept id="p2">](http://visualstudiogallery.msdn.microsoft.com/)</ept> или выполните их поиск в разделе <bpt id="p3">**</bpt>Расширения и обновления<ept id="p3">**</ept> в Visual Studio.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A required configuration is to setup <bpt id="p1">**</bpt><bpt id="p2">[</bpt>Shared Drives<ept id="p2">](https://docs.docker.com/docker-for-windows/#/shared-drives)</ept><ept id="p1">**</ept> in Docker for Windows.</source>
          <target state="translated">Обязательная конфигурация Docker для Windows предполагает настройку <bpt id="p1">**</bpt><bpt id="p2">[</bpt>общих дисков<ept id="p2">](https://docs.docker.com/docker-for-windows/#/shared-drives)</ept><ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The setting is required for the volume mapping and debugging support.</source>
          <target state="translated">Этот параметр необходим для поддержки сопоставления и отладки томов.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Right click the Docker icon in the System Tray, click Settings and select Shared Drives.</source>
          <target state="translated">Щелкните правой кнопкой мыши значок Docker в области уведомлений, выберите пункт "Параметры", а затем выберите "Общие диски".</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Shared Drives</source>
          <target state="translated">Общие диски</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Create an ASP.NET Web Application and add Docker Support</source>
          <target state="translated">Создание веб-приложения ASP.NET и добавление поддержки Docker</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Using Visual Studio, create a new ASP.NET Core Web Application.</source>
          <target state="translated">С помощью Visual Studio создайте веб-приложение ASP.NET Core.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When the application is loaded, either select <bpt id="p1">**</bpt>Add Docker Support<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>Project Menu<ept id="p2">**</ept> or right click the project from the Solution Explorer and select <bpt id="p3">**</bpt>Add<ept id="p3">**</ept><ph id="ph1"> &gt; </ph><bpt id="p4">**</bpt>Docker Support<ept id="p4">**</ept>.</source>
          <target state="translated">После загрузки приложения выберите пункт <bpt id="p1">**</bpt>Добавить поддержку Docker<ept id="p1">**</ept> в меню <bpt id="p2">**</bpt>Проект<ept id="p2">**</ept> или щелкните проект правой кнопкой мыши в обозревателе решений и выберите пункт <bpt id="p3">**</bpt>Добавить<ept id="p3">**</ept><ph id="ph1"> &gt; </ph><bpt id="p4">**</bpt>Поддержка Docker<ept id="p4">**</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Project Menu</source>
          <target state="translated">Меню "Проект"</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Project Add Docker Support</source>
          <target state="translated">"Проект" &gt; "Поддержка Docker"</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Project Context Menu</source>
          <target state="translated">Контекстное меню проекта</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Right Click Add Docker Support</source>
          <target state="translated">Щелкните правой кнопкой мыши и выберите пункт "Добавить" &gt; "Поддержка Docker".</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following files are added to the project.</source>
          <target state="translated">В проект будут добавлены указанные ниже файлы.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Dockerfile<ept id="p1">**</ept>: the Docker file for ASP.NET Core applications is based on the <bpt id="p2">[</bpt>microsoft/aspnetcore<ept id="p2">](https://hub.docker.com/r/microsoft/aspnetcore)</ept> image.</source>
          <target state="translated"><bpt id="p1">**</bpt>Dockerfile<ept id="p1">**</ept>. Файл Docker для приложений ASP.NET Core основан на образе <bpt id="p2">[</bpt>microsoft/aspnetcore<ept id="p2">](https://hub.docker.com/r/microsoft/aspnetcore)</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This image includes the ASP.NET Core NuGet packages, which have been pre-jitted improving startup performance.</source>
          <target state="translated">Этот образ включает пакеты NuGet платформы ASP.NET Core, которые были предварительно скомпилированы JIT-компилятором для повышения производительности запуска.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When building .NET Core Console Applications, the Dockerfile FROM will reference the most recent <bpt id="p1">[</bpt>microsoft/dotnet<ept id="p1">](https://hub.docker.com/r/microsoft/dotnet)</ept> image.</source>
          <target state="translated">При создании консольных приложений .NET Core инструкция FROM в файле Dockerfile ссылается на самую последнюю версию образа <bpt id="p1">[</bpt>microsoft/dotnet<ept id="p1">](https://hub.docker.com/r/microsoft/dotnet)</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>docker-compose.yml<ept id="p1">**</ept>: base Docker Compose file used to define the collection of images to be built and run with docker-compose build/run.</source>
          <target state="translated"><bpt id="p1">**</bpt>docker-compose.yml<ept id="p1">**</ept>. Базовый файл Compose в Docker, который служит для определения коллекции образов, сборка и выполнение которых будут выполняться с помощью команд docker-compose build и run.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>docker-compose.dev.debug.yml<ept id="p1">**</ept>: additional docker-compose file with for iterative changes when your configuration is set to debug.</source>
          <target state="translated"><bpt id="p1">**</bpt>docker-compose.dev.debug.yml<ept id="p1">**</ept>. Дополнительный файл docker-compose с итеративными изменениями, применяемыми в конфигурации отладки.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Visual Studio will call -f docker-compose.yml -f docker-compose.dev.debug.yml to merge these together.</source>
          <target state="translated">Для их объединения среда Visual Studio вызывает команду -f docker-compose.yml -f docker-compose.dev.debug.yml.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This compose file is used by Visual Studio development tools.</source>
          <target state="translated">Этот файл Compose используется средствами разработки Visual Studio.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>docker-compose.dev.release.yml<ept id="p1">**</ept>: additional Docker Compose file to debug your release definition.</source>
          <target state="translated"><bpt id="p1">**</bpt>docker-compose.dev.release.yml<ept id="p1">**</ept>. Дополнительный файл Compose в Docker для отладки определения выпуска.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>It will volume mount the debugger so it doesn't change the contents of the production image.</source>
          <target state="translated">Этот файл подключает отладчик к тому, чтобы он не менял содержимое рабочего образа.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The docker-compose.yml file contains the name of the image that is created when project is run.</source>
          <target state="translated">Файл docker-compose.yml содержит имя образа, создаваемого при выполнении проекта.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In this example, <ph id="ph1">`image: user/hellodockertools${TAG}`</ph> generates the image <ph id="ph2">`user/hellodockertools:dev`</ph> when the application is run in <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> mode and <ph id="ph3">`user/hellodockertools:latest`</ph> in <bpt id="p2">**</bpt>Release<ept id="p2">**</ept> mode respectively.</source>
          <target state="translated">В этом примере <ph id="ph1">`image: user/hellodockertools${TAG}`</ph> создает образ <ph id="ph2">`user/hellodockertools:dev`</ph>, когда приложение выполняется в режиме <bpt id="p1">**</bpt>отладки<ept id="p1">**</ept>, и образ <ph id="ph3">`user/hellodockertools:latest`</ph>, когда оно выполняется в режиме <bpt id="p2">**</bpt>выпуска<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You will want to change the <ph id="ph1">`user`</ph> to your Docker Hub username if you plan to push the image to the registry.</source>
          <target state="translated">Если вы планируете помещать образ в реестр, значение <ph id="ph1">`user`</ph> необходимо изменить на имя пользователя Docker Hub.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`spboyer/hellodockertools`</ph>, or change to your private registry url <ph id="ph2">`privateregistry.domain.com/`</ph> depending on your configuration.</source>
          <target state="translated">Например, измените его на <ph id="ph1">`spboyer/hellodockertools`</ph> или на URL-адрес своего закрытого реестра <ph id="ph2">`privateregistry.domain.com/`</ph> в зависимости от конфигурации.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Отладка</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Docker<ept id="p1">**</ept> from the debug dropdown in the toolbar and use F5 to start debugging the application.</source>
          <target state="translated">Выберите пункт <bpt id="p1">**</bpt>Docker<ept id="p1">**</ept> в раскрывающемся списке отладки на панели инструментов и нажмите клавишу F5, чтобы начать отладку приложения.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The microsoft/aspnetcore image is acquired (if not already in your cache)</source>
          <target state="translated">Будет получен образ microsoft/aspnetcore (если его еще нет в вашем кэше).</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>ASPNETCORE_ENVIRONMENT is set to Development within the container</source>
          <target state="translated">Переменной ASPNETCORE_ENVIRONMENT в контейнере будет присвоено значение Development.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>PORT 80 is EXPOSED and mapped to a dynamically assigned port for localhost.</source>
          <target state="translated">Порт 80 будет открыт и сопоставлен с динамически назначаемым портом для localhost.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The port is determined by the docker host and can be queried with docker ps.</source>
          <target state="translated">Порт определяется узлом Docker и может запрашиваться с помощью команды docker ps.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Your application is copied to the container</source>
          <target state="translated">Приложение будет скопировано в контейнер.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Default browser is launched with the debugger attached to the container, using the dynamically assigned port.</source>
          <target state="translated">Браузер по умолчанию запустится с подключенным к контейнеру отладчиком с использованием динамически назначаемого порта.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The resulting Docker image built is the <ph id="ph1">`dev`</ph> image of your application with the <ph id="ph2">`microsoft/aspnetcore`</ph> images as the base image.</source>
          <target state="translated">В результате сборки образа Docker будет получен образ <ph id="ph1">`dev`</ph> приложения с образами <ph id="ph2">`microsoft/aspnetcore`</ph> в качестве базового образа.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Note: the dev image is empty of your app contents as Debug confgurations use volume mounting to provide the iterative experience.</source>
          <target state="translated">Примечание. В образе dev нет содержимого приложения, так как конфигурации отладки используют подключение тома для обеспечения итеративности процесса.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To push an image, use the Release configuration.</source>
          <target state="translated">Чтобы отправить образ, используйте конфигурацию выпуска.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The application is running using the container which you can see by running the <ph id="ph1">`docker ps`</ph> command.</source>
          <target state="translated">Приложение выполняется с помощью контейнера, который можно увидеть, выполнив команду <ph id="ph1">`docker ps`</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Edit and Continue</source>
          <target state="translated">Изменить и продолжить</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Changes to static files and/or razor template files (.cshtml) are automatically updated without the need of a compilation step.</source>
          <target state="translated">Изменения статических полей и файлов шаблонов Razor (CSHTML) применяются автоматически без необходимости выполнять этап компиляции.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Make the change, save and tap refresh in the browser to view the update.</source>
          <target state="translated">Внесите изменение, сохраните его и нажмите кнопку "Обновить" в браузере, чтобы увидеть обновление.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Modifications to code files require compiling and a restart of Kestrel within the container.</source>
          <target state="translated">Для внесения изменений в файлы кода требуются компиляция и перезапуск Kestrel в контейнере.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>After making the change, use CTRL + F5 to perform the process and start the application within the container.</source>
          <target state="translated">После внесения изменения нажмите клавиши CTRL+F5, чтобы выполнить процесс и запустить приложение без контейнера.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The Docker container is not rebuilt or stopped; using <ph id="ph1">`docker ps`</ph> in the command line you can see that the original container is still running as of 10 minutes ago.</source>
          <target state="translated">Повторная сборка или остановка контейнера Docker не производится. Выполнив команду <ph id="ph1">`docker ps`</ph> в командной строке, можно увидеть, что исходный контейнер по-прежнему выполняется, как и 10 минут назад.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Publishing Docker images</source>
          <target state="translated">Публикация образов Docker</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Once you have completed the develop and debug cycle of your application, the Visual Studio Tools for Docker will help you create the production image of your application.</source>
          <target state="translated">После завершения цикла разработки и отладки приложения инструменты Visual Studio для Docker помогут вам создать рабочий образ приложения.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Change the debug dropdown to <bpt id="p1">**</bpt>Release<ept id="p1">**</ept> and build the application.</source>
          <target state="translated">Выберите в раскрывающемся списке отладки значение <bpt id="p1">**</bpt>Выпуск<ept id="p1">**</ept> и выполните сборку приложения.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The tooling will produce the image with the <ph id="ph1">`:latest`</ph> tag which you can push to your private registry or Docker Hub.</source>
          <target state="translated">Инструментарий создаст образ с тегом <ph id="ph1">`:latest`</ph>, который можно отправить в закрытый реестр или в Docker Hub.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Using the <ph id="ph1">`docker images`</ph> you can see the list of images.</source>
          <target state="translated">С помощью команды <ph id="ph1">`docker images`</ph> можно получить список образов.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>There may be an expectation for the production or release image to be smaller in size by comparison to the <bpt id="p1">**</bpt>dev<ept id="p1">**</ept> image, however through the use of the volume mapping; the debugger and application were actually being run from your local machine and not within the container.</source>
          <target state="translated">Вы могли ожидать, что рабочий образ или образ выпуска будет иметь меньший размер, чем образ <bpt id="p1">**</bpt>dev<ept id="p1">**</ept>. Однако из-за использования сопоставления томов отладчик и приложение на самом деле выполнялись с локального компьютера, а не в контейнере.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>latest<ept id="p1">**</ept> image has packaged the entire application code needed to run the application on a host machine, therefore the delta is the size of your application code.</source>
          <target state="translated">В образ <bpt id="p1">**</bpt>latest<ept id="p1">**</ept> был упакован весь код приложения, необходимый для его выполнения на компьютере узла, поэтому эта разница соответствует размеру кода приложения.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>