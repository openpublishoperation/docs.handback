<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">905c3706717a03f468e3dd5717c049e83f211e67</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\managed-code.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f4ae393f454b9e1aea64e24ebe4950b5c232fb9e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d70f8d580eff264d1307cbb73344beb270af6ca</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>What is “managed code”?</source>
          <target state="translated">Что такое "управляемый код"?</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>What is “managed code”?</source>
          <target state="translated">Что такое "управляемый код"?</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>What is “managed code”?</source>
          <target state="translated">Что такое "управляемый код"?</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When working with .NET Framework, you will often encounter the term “managed code”.</source>
          <target state="translated">При работе с платформой .NET Framework вы будете часто сталкиваться с термином "управляемый код".</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This document will explain what this term means and additional information around it.</source>
          <target state="translated">В этом документе приводится пояснение этого термина и дополнительные сведения о нем.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To put it very simply, managed code is just that: code whose execution is managed by a runtime.</source>
          <target state="translated">В первом приближении управляемым кодом называется код, выполнение которого управляется средой выполнения.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In this case, the runtime in question is called the <bpt id="p1">**</bpt>Common Language Runtime<ept id="p1">**</ept> or CLR, regardless of the implementation (<bpt id="p2">[</bpt>Mono<ept id="p2">](http://www.mono-project.com/)</ept> or .NET Framework or .NET Core).</source>
          <target state="translated">В этом случае соответствующая среда выполнения называется <bpt id="p1">**</bpt>общеязыковой средой выполнения<ept id="p1">**</ept> или средой CLR, независимо от реализации (<bpt id="p2">[</bpt>Mono<ept id="p2">](http://www.mono-project.com/)</ept>, .NET Framework или .NET Core).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>CLR is in charge of taking the managed code, compiling it into machine code and then executing it.</source>
          <target state="translated">Среда CLR отвечает за использование управляемого кода, его компиляцию в машинный код и последующее выполнение.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>On top of that, runtime provides several important services such as automatic memory management, security boundaries, type safety etc.</source>
          <target state="translated">Кроме того, среда выполнения предоставляет несколько важных служб, таких как автоматическое управление памятью, границы безопасности, безопасность типа и т. д.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Contrast this to the way you would run a C/C++ program, also called “unmanaged code”.</source>
          <target state="translated">Сравните это с запуском программы C/C++, которая также называется "неуправляемым кодом".</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In the unmanaged world, the programmer is in charge of pretty much everything.</source>
          <target state="translated">В мире неуправляемого кода практически за все отвечает программист.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The actual program is, essentially, a binary that the operating system (OS) loads into memory and starts.</source>
          <target state="translated">Самая программа представляет собой двоичный файл, который операционная система (ОС) загружает в память и запускает.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Everything else, from memory management to security considerations are a burden of the programmer.</source>
          <target state="translated">За все остальное — от управления памятью до различных аспектов безопасности — отвечает программист.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Managed code is written in one of the high-level languages that can be run on top of the .NET platform, such as C#, Visual Basic, F# and others.</source>
          <target state="translated">Управляемый код пишется в одном из языков высокого уровня, которые могут выполняться на платформе .NET, например C#, Visual Basic, F# и других.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When you compile code written in those languages with their respective compiler, you don’t get machine code.</source>
          <target state="translated">При компиляции кода, написанного на этих языках, с помощью соответствующего компилятора вы получаете не машинный код.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You get <bpt id="p1">**</bpt>Intermediate Language<ept id="p1">**</ept> code which the runtime then compiles and executes.</source>
          <target state="translated">Вы получаете код <bpt id="p1">**</bpt>промежуточного языка<ept id="p1">**</ept>, который затем компилируется и запускается средой выполнения.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>C++ is the one exception to this rule, as it can also produce native, unmanaged binaries that run on Windows.</source>
          <target state="translated">Язык C++ является исключением из этого правила, так как он позволяет создавать машинные неуправляемые двоичные файлы, которые запускаются в Windows.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Intermediate Language &amp; execution</source>
          <target state="translated">Промежуточный язык и выполнение</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>What is “Intermediate Language” (or IL for short)?</source>
          <target state="translated">Что такое "промежуточный язык" (сокращенно IL)?</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It is a product of compilation of code written in high-level .NET languages.</source>
          <target state="translated">Это результат компиляции кода, написанного на языках высокого уровня .NET.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Once you compile your code written in one of these languages, you will get a binary that is made out of IL.</source>
          <target state="translated">После компиляции кода, написанного на одном из этих языков, вы получаете двоичный файл на базе IL.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It is important to note that the IL is independent from any specific language that runs on top of the runtime; there is even a separate specification for it that you can read if you’re so inclined.</source>
          <target state="translated">Важно отметить, что IL не зависит от языка, выполняемого поверх среды выполнения. Для него даже есть отдельная спецификация, с которой при желании можно ознакомиться.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Once you produce IL from your high-level code, you will most likely want to run it.</source>
          <target state="translated">После создания IL из кода высокого уровня вы, скорее всего, захотите запустить его.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This is where the CLR takes over and starts the process of <bpt id="p1">**</bpt>Just-In-Time<ept id="p1">**</ept> compiling, or <bpt id="p2">**</bpt>JIT-ing<ept id="p2">**</ept> your code from IL to machine code that can actually be run on a CPU.</source>
          <target state="translated">В этот момент среда CLR берет управление на себя и запускает процесс <bpt id="p1">**</bpt>JIT<ept id="p1">**</ept>-компиляции, используя <bpt id="p2">**</bpt>JIT<ept id="p2">**</ept> для преобразования кода из промежуточного языка в машинный код, который может выполняться на ЦП.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In this way, the CLR knows exactly what your code is doing and can effectivelly <bpt id="p1">_</bpt>manage<ept id="p1">_</ept> it.</source>
          <target state="translated">Таким образом, среде CLR точно известно, что делает код, поэтому она может эффективно <bpt id="p1">_</bpt>управлять<ept id="p1">_</ept> им.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Intermediate Language is sometimes also called Common Intermediate Language (CIL) or Microsoft Intermediate Language (MSIL).</source>
          <target state="translated">Промежуточный язык иногда называют языком CIL или MSIL.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Unmanaged code interoperability</source>
          <target state="translated">Взаимодействие неуправляемого кода</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Of course, the CLR allows passing the boundaries between managed and unmanaged world, and there is a lot of code that does that, even in the <bpt id="p1">[</bpt>Base Class Libraries<ept id="p1">](framework-libraries.md)</ept>.</source>
          <target state="translated">Конечно же, среда CLR позволяет пересекать границы между управляемым и неуправляемым кодом, и даже в <bpt id="p1">[</bpt>библиотеках базовых классов<ept id="p1">](framework-libraries.md)</ept> объем подобного кода довольно велик.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This is called <bpt id="p1">**</bpt>interoperability<ept id="p1">**</ept> or just <bpt id="p2">**</bpt>interop<ept id="p2">**</ept> for short.</source>
          <target state="translated">Это называется <bpt id="p1">**</bpt>взаимодействием<ept id="p1">**</ept> или <bpt id="p2">**</bpt>межпрограммным взаимодействием<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>These provisions would allow you to, for example, wrap up an unmanaged library and call into it.</source>
          <target state="translated">Все это позволяет вам, например, заключить неуправляемую библиотеку в оболочку и вызвать ее.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>However, it is important to note that once you do this, when the code passes the boundaries of the runtime, the actual management of the execution is again in the hand of unmanged code, and thus falls under the same restrictions.</source>
          <target state="translated">Однако следует отметить, что после этого, когда код пересекает границы среды выполнения, управление выполнением снова осуществляется в виде неуправляемого кода с соответствующими ограничениями.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Similar to this, C# is one language that allows you to use unmanaged constructs such as pointers directly in code by utilizing what is known as <bpt id="p1">**</bpt>unsafe context<ept id="p1">**</ept> which designates a piece of code for which the execution is not managed by the CLR.</source>
          <target state="translated">Аналогично, C# — это язык, позволяющий использовать неуправляемые конструкции, такие как указатели, прямо в коде с помощью так называемого <bpt id="p1">**</bpt>небезопасного контекста<ept id="p1">**</ept>, указывающего часть кода, для которой выполнение не управляется средой CLR.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>More resources</source>
          <target state="translated">Дополнительные ресурсы</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Framework Conceptual Overview<ept id="p1">](https://msdn.microsoft.com/library/zw4w595w.aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Общие сведения об основных понятиях .NET Framework<ept id="p1">](https://msdn.microsoft.com/library/zw4w595w.aspx)</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Unsafe Code and Pointers<ept id="p1">](https://msdn.microsoft.com/library/t2yzs44b.aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Небезопасный код и указатели<ept id="p1">](https://msdn.microsoft.com/library/t2yzs44b.aspx)</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Interoperability (C# Programming guide)<ept id="p1">](https://msdn.microsoft.com/library/ms173184.aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Взаимодействие (руководство по программированию на C#)<ept id="p1">](https://msdn.microsoft.com/library/ms173184.aspx)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>