<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6d14668e643c2451f4ace2119006f442ed4dee15</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\numerics.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24b6e1e8e0861ff277d5ebffac2c08c5b8c952e3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e0121de4fa2d3d0ba2813593111b86b99e246ff9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Numerics in .NET Core</source>
          <target state="translated">Числовые значения в .NET Core</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Numerics in .NET Core</source>
          <target state="translated">Числовые значения в .NET Core</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Numerics in .NET Core</source>
          <target state="translated">Числовые значения в .NET Core</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>.NET Core supports the standard numeric integral and floating-point primitives, as well as <bpt id="p1">[</bpt>System.Numerics.BigInteger<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.BigInteger)</ept>, an integral type with no theoretical upper or lower bound, <bpt id="p2">[</bpt>System.Numerics.Complex<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Complex)</ept>, a type that represents complex numbers, and a set of Single Instruction Multiple Data (<bpt id="p3">[</bpt>SIMD<ept id="p3">](https://en.wikipedia.org/wiki/SIMD)</ept>)-enabled vector types in the <bpt id="p4">[</bpt>System.Numerics<ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Numerics)</ept> namespace.</source>
          <target state="translated">Платформа .NET Core поддерживает стандартные числовые типы-примитивы (целочисленные и с плавающей запятой), а также <bpt id="p1">[</bpt>System.Numerics.BigInteger<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.BigInteger)</ept>0 — целочисленный тип, теоретически не имеющий верхней и нижней границ, <bpt id="p2">[</bpt>System.Numerics.Complex<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Complex)</ept> — тип, представляющий комплексные числа, и набор векторных типов с поддержкой <bpt id="p3">[</bpt>SIMD<ept id="p3">](https://en.wikipedia.org/wiki/SIMD)</ept> в пространстве имен <bpt id="p4">[</bpt>System.Numerics<ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Numerics)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Integral types</source>
          <target state="translated">Целочисленные типы</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>.NET Core supports both signed and unsigned integers ranging from one byte to eight bytes in length.</source>
          <target state="translated">.NET Core поддерживает целочисленные значения как со знаком, так и без него, и длиной от одного до восьми байтов.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following table lists the integral types and their size, indicates whether they are signed or unsigned, and documents their range.</source>
          <target state="translated">В таблице ниже перечислены целочисленные типы и их размеры, указано, имеют ли они знак, и приведены их диапазоны.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>All integers are value types.</source>
          <target state="translated">Все целые числа являются типами значений.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Тип</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Signed/Unsigned</source>
          <target state="translated">Со знаком или без</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Size (bytes)</source>
          <target state="translated">Размер (в байтах)</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Minimum Value</source>
          <target state="translated">Минимальное значение</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Maximum Value</source>
          <target state="translated">Максимальное значение</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Byte<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Byte)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Byte<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Byte)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Unsigned</source>
          <target state="translated">Без знака</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Int16<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Int16)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Int16<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Int16)</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Signed</source>
          <target state="translated">Подписанный</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-32,768</source>
          <target state="translated">–32 768</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>32,767</source>
          <target state="translated">32 767</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Int32<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Int32)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Int32<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Int32)</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Signed</source>
          <target state="translated">Подписанный</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-2,147,483,648</source>
          <target state="translated">–2 147 483 648</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>2,147,483,647</source>
          <target state="translated">2 147 483 647</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Int64<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Int64)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Int64<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Int64)</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Signed</source>
          <target state="translated">Подписанный</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-9,223,372,036,854,775,808</source>
          <target state="translated">–9 223 372 036 854 775 808</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>9,223,372,036,854,775,807</source>
          <target state="translated">9 223 372 036 854 775 807</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.SByte<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.SByte)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.SByte<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.SByte)</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Signed</source>
          <target state="translated">Подписанный</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-128</source>
          <target state="translated">–128</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>127</source>
          <target state="translated">127</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.UInt16<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.UInt16)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.UInt16<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.UInt16)</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Unsigned</source>
          <target state="translated">Без знака</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>65,535</source>
          <target state="translated">65 535</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.UInt32<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.UInt32)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.UInt32<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.UInt32)</ept></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Unsigned</source>
          <target state="translated">Без знака</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>4,294,967,295</source>
          <target state="translated">4 294 967 295</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.UInt64<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.UInt64)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.UInt64<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.UInt64)</ept></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Unsigned</source>
          <target state="translated">Без знака</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>18,446,744,073,709,551,615</source>
          <target state="translated">18 446 744 073 709 551 615</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Each integral type supports a standard set of arithmetic, comparison, equality, explicit conversion, and implicit conversion operators.</source>
          <target state="translated">Каждый целочисленный тип поддерживает стандартный набор арифметических операторов, операторов сравнения, равенства, явного и неявного преобразования.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Each integer also includes methods to perform equality comparisons and relative comparisons, to convert the string representation of a number to that integer, and to convert an integer to its string representation.</source>
          <target state="translated">Каждый целочисленный тип также имеет методы для выполнения сравнения на равенство и относительного сравнения, преобразования строкового представления числа в данный целочисленный тип и преобразования целого числа в строковое представление.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Some additional mathematical operations beyond those handled by the standard operators, such as rounding and identifying the smaller or larger value of two integers, are available from the <bpt id="p1">[</bpt>System.Math<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Math)</ept> class.</source>
          <target state="translated">Некоторые дополнительные математические операции, помимо обеспечиваемых стандартными операторами, такие как округление и определение меньшего или большего из двух целых чисел, доступны посредством класса <bpt id="p1">[</bpt>System.Math<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Math)</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can also work with the individual bits in an integer value by using the <bpt id="p1">[</bpt>System.BitConverter<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.BitConverter)</ept> class.</source>
          <target state="translated">Вы также можете работать с отдельными битами целочисленного значения с помощью класса <bpt id="p1">[</bpt>System.BitConverter<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.BitConverter)</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Note that the unsigned integral types are not CLS-compliant.</source>
          <target state="translated">Имейте в виду, что целочисленные типы без знака не совместимы с CLS.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>.NET Common Type System &amp; Common Language Specification<ept id="p1">](common-type-system.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Система общих типов .NET и спецификация CLS<ept id="p1">](common-type-system.md)</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Floating-point types</source>
          <target state="translated">Типы с плавающей запятой</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>.NET Core includes three primitive floating point types, which are listed in the following table.</source>
          <target state="translated">Платформа .NET Core включает в себя три типа-примитива с плавающей запятой, которые перечислены в таблице ниже.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Тип</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Size (bytes)</source>
          <target state="translated">Размер (в байтах)</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Minimum Value</source>
          <target state="translated">Минимальное значение</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Maximum Value</source>
          <target state="translated">Максимальное значение</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Double<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Double)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Double<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Double)</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>-1.79769313486232e308</source>
          <target state="translated">–1,79769313486232e308</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>1.79769313486232e308</source>
          <target state="translated">1,79769313486232e308</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Single<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Single)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Single<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Single)</ept></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-3.402823e38</source>
          <target state="translated">–3,402823e38</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>3.402823e38</source>
          <target state="translated">3,402823e38</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Decimal<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Decimal)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Decimal<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Decimal)</ept></target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>16</source>
          <target state="translated">16</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-79,228,162,514,264,337,593,543,950,335</source>
          <target state="translated">–79 228 162 514 264 337 593 543 950 335</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>79,228,162,514,264,337,593,543,950,335</source>
          <target state="translated">79 228 162 514 264 337 593 543 950 335</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Each floating-point type supports a standard set of arithmetic, comparison, equality, explicit conversion, and implicit conversion operators.</source>
          <target state="translated">Каждый тип с плавающей запятой поддерживает стандартный набор арифметических операторов, операторов сравнения, равенства, явного и неявного преобразования.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Each also includes methods to perform equality comparisons and relative comparisons, to convert the string representation of a floating-point number, and to convert a floating-point number to its string representation.</source>
          <target state="translated">Каждый тип также имеет методы для выполнения сравнения на равенство и относительного сравнения, преобразования строкового представления числа с плавающей запятой в данный тип и преобразования числа с плавающей запятой в строковое представление.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Some additional mathematical, algebraic, and trigonometric operations are available from the <ph id="ph1">`Math`</ph> class.</source>
          <target state="translated">Некоторые дополнительные математические, алгебраические и тригонометрические операции доступны посредством класса <ph id="ph1">`Math`</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You can also work with the individual bits in <ph id="ph1">`Double`</ph> and <ph id="ph2">`Single`</ph> values by using the <ph id="ph3">`BitConverter`</ph> class.</source>
          <target state="translated">Вы также можете работать с отдельными битами значений типа <ph id="ph1">`Double`</ph> и <ph id="ph2">`Single`</ph> с помощью класса <ph id="ph3">`BitConverter`</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Decimal`</ph> structure has its own methods, <ph id="ph2">`Decimal.GetBits`</ph> and <ph id="ph3">`Decimal.Decimal(Int32())`</ph>, for working with a decimal value's individual bits, as well as its own set of methods for performing some additional mathematical operations.</source>
          <target state="translated">Структура <ph id="ph1">`Decimal`</ph> имеет собственные методы, <ph id="ph2">`Decimal.GetBits`</ph> и <ph id="ph3">`Decimal.Decimal(Int32())`</ph>, для работы с отдельными битами десятичного значения, а также собственный набор методов для выполнения некоторых дополнительных математических операций.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Double`</ph> and <ph id="ph2">`Single`</ph> types are intended to be used for values that by their nature are imprecise (such as the distance between two stars in the solar system) and for applications in which a high degree of precision and small rounding error is not required.</source>
          <target state="translated">Типы <ph id="ph1">`Double`</ph> и <ph id="ph2">`Single`</ph> предназначены для значений, которые по своему характеру являются неточными (например, расстояние между двумя звездами в солнечной системе), и для случаев, когда высокая степень точности и малая погрешность округления не требуются.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You should use the <ph id="ph1">`Decimal`</ph> type for cases in which greater precision is required and rounding error is undesirable.</source>
          <target state="translated">Тип <ph id="ph1">`Decimal`</ph> следует использовать в случаях, когда требуется большая точность и погрешность округления нежелательна.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>BigInteger</source>
          <target state="translated">BigInteger</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Numerics.BigInteger<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.BigInteger)</ept> is an immutable type that represents an arbitrarily large integer whose value in theory has no upper or lower bounds.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Numerics.BigInteger<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.BigInteger)</ept> является неизменяемым типом, представляющим произвольно большое целое число, значение которого теоретически не имеет верхней или нижней границы.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The methods of the <ph id="ph1">`BigInteger`</ph> type closely parallel those of the other integral types.</source>
          <target state="translated">Методы типа <ph id="ph1">`BigInteger`</ph> во многом повторяют методы других целочисленных типов.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Complex</source>
          <target state="translated">Complex</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Numerics.Complex<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Complex)</ept> type represents a complex number, that is, a number with a real number part and an imaginary number part.</source>
          <target state="translated">Тип <bpt id="p1">[</bpt>System.Numerics.Complex<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Complex)</ept> представляет комплексное число, то есть число, имеющее вещественную и мнимую части.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>It supports a standard set of arithmetic, comparison, equality, explicit conversion, and implicit conversion operators, as well as mathematical, algebraic, and trigonometric methods.</source>
          <target state="translated">Он поддерживает стандартный набор арифметических операторов, операторов сравнения, равенства, явного и неявного преобразования, а также математические, алгебраические и тригонометрические методы.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>SIMD-enabled vector types</source>
          <target state="translated">Векторные типы с поддержкой SIMD</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`System.Numerics`</ph> namespace includes a set of SIMD-enabled vector types for .NET Core.</source>
          <target state="translated">Пространство имен <ph id="ph1">`System.Numerics`</ph> содержит набор векторных типов с поддержкой SIMD для платформы .NET Core.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>SIMD allows some operations to be parallelized at the hardware level, which results in huge performance improvements in mathematical, scientific, and graphics apps that perform computations over vectors.</source>
          <target state="translated">Технология SIMD обеспечивает параллельное выполнение некоторых операций на аппаратном уровне, значительно повышая производительность математических, научных и графических приложений, которые производят вычисления с векторами.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The SIMD-enabled vector types in .NET Core include the following:</source>
          <target state="translated">На платформе .NET Core используются перечисленные ниже векторные типы с поддержкой SIMD.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Numerics.Vector2<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Vector2)</ept>, <bpt id="p2">[</bpt>System.Numerics.Vector3<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Vector3)</ept>, and <bpt id="p3">[</bpt>System.Numerics.Vector4<ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Vector4)</ept> types, which are 2-, 3-, and 4-dimensional vectors of type <ph id="ph1">`Single`</ph>.</source>
          <target state="translated">Типы <bpt id="p1">[</bpt>System.Numerics.Vector2<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Vector2)</ept>, <bpt id="p2">[</bpt>System.Numerics.Vector3<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Vector3)</ept> и <bpt id="p3">[</bpt>System.Numerics.Vector4<ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Vector4)</ept>, представляющие двух-, трех- и четырехмерные векторы типа <ph id="ph1">`Single`</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Vector<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Vector-1)</ept> structure that allows you to create a vector of any primitive numeric type.</source>
          <target state="translated">Структура <bpt id="p1">[</bpt>Vector<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Vector-1)</ept>, которая позволяет создавать вектор любого числового типа-примитива.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The primitive numeric types include all numeric types in the System namespace except for Decimal.</source>
          <target state="translated">К числовым типам-примитивам относятся все числовые типы в пространстве имен System, за исключением Decimal.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Two matrix types, <bpt id="p1">[</bpt>System.Numerics.Matrix3x2<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Matrix3x2)</ept>, which represents a 3x2 matrix; and <bpt id="p2">[</bpt>System.Numerics.Matrix4x4<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Matrix4x4)</ept>, which represents a 4x4 matrix.</source>
          <target state="translated">Два матричных типа: <bpt id="p1">[</bpt>System.Numerics.Matrix3x2<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Matrix3x2)</ept>, представляющий собой матрицу 3x2, и <bpt id="p2">[</bpt>System.Numerics.Matrix4x4<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Matrix4x4)</ept>, представляющий собой матрицу 4x4.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Numerics.Plane<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Plane)</ept> type, which represents a three-dimensional plane, and the <bpt id="p2">[</bpt>System.Numerics.Quaternion<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Quaternion)</ept> type, which represents a vector that is used to encode three-dimensional physical rotations.</source>
          <target state="translated">Тип <bpt id="p1">[</bpt>System.Numerics.Plane<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Plane)</ept>, который представляет трехмерную плоскость, и тип <bpt id="p2">[</bpt>System.Numerics.Quaternion<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Quaternion)</ept>, который представляет вектор, используемый для кодирования трехмерных физических поворотов.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>