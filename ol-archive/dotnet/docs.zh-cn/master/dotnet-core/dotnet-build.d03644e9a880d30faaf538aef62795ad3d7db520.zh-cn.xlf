<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f0362aa" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c2c0ae3711c866268c4e8c066b4213e110e771b9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\preview3\tools\dotnet-build.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1343fbd6efc89e27ef1d5e15cc50c49bc7b3c3f2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf8e11cf89d2c9577be16cabe88802a5f4a667d4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-build command | Microsoft Docs</source>
          <target state="translated">dotnet-build 命令 | Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-build command builds a project and all of its dependencies.</source>
          <target state="translated">dotnet-build 命令可生成项目及其所有依赖项。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-build, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-build, CLI, CLI 命令, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-build (.NET Core Tools RC4)</source>
          <target state="translated">dotnet-build（.NET Core 工具 RC4）</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic applies to .NET Core Tools RC4.</source>
          <target state="translated">本主题适用于 .NET Core 工具 RC4。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For the .NET Core Tools Preview 2 version, see the <bpt id="p1">[</bpt>dotnet-build<ept id="p1">](../../tools/dotnet-build.md)</ept> topic.</source>
          <target state="translated">对于 .NET Core 工具预览版 2，请参阅 <bpt id="p1">[</bpt>dotnet-build<ept id="p1">](../../tools/dotnet-build.md)</ept> 主题。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">名称</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>dotnet-build -- Builds a project and all of its dependencies</source>
          <target state="translated">dotnet-build - 生成项目及其所有依赖项</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">摘要</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet build`</ph> command builds multiple source file from a source project and its dependencies into a binary.</source>
          <target state="translated"><ph id="ph1">`dotnet build`</ph> 命令可将源项目及其依赖项的多个源文件生成为二进制文件。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>By default, the resulting binary is in Intermediate Language (IL) and has a DLL extension.</source>
          <target state="translated">默认情况下，生成的二进制文件为中间语言 (IL) 并具有 DLL 扩展名。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet build`</ph> also drops a <ph id="ph2">`*.deps`</ph> file which outlines what the host needs to run the application.</source>
          <target state="translated"><ph id="ph1">`dotnet build`</ph> 还删除了 <ph id="ph2">`*.deps`</ph> 文件，该文件概述了主机运行应用程序所需的条件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Building requires the existence of an asset file (a file that lists all of the dependencies of your application), which means that you have to run <bpt id="p1">[</bpt><ph id="ph1">`dotnet restore`</ph><ept id="p1">](dotnet-restore.md)</ept> prior to building your code.</source>
          <target state="translated">生成需要资产文件（列出了应用程序的所有依赖项的文件），这意味着生成代码前需运行 <bpt id="p1">[</bpt><ph id="ph1">`dotnet restore`</ph><ept id="p1">](dotnet-restore.md)</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Before any compilation begins, the <ph id="ph1">`build`</ph> verb analyzes the project and its dependencies for incremental safety checks.</source>
          <target state="translated">开始编译前，<ph id="ph1">`build`</ph> 谓词会分析项目及其依赖项，以便进行增量安全检查。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If all checks pass, then build proceeds with incremental compilation of the project and its dependencies; otherwise, it falls back to non-incremental compilation.</source>
          <target state="translated">如果通过所有检查，生成将继续执行项目及其依赖项的增量编译；否则，它将退回到非增量编译。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Via a profile flag, users can choose to receive additional information on how they can improve their build times.</source>
          <target state="translated">通过配置文件标志，用户可以选择接收有关如何缩短生成时间的附加信息。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In order to build an executable application instead of a library, you need to set the <ph id="ph1">`&lt;OutputType&gt;`</ph> property:</source>
          <target state="translated">若要生成可执行的应用程序而不是库，则需要设置 <ph id="ph1">`&lt;OutputType&gt;`</ph> 属性：</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">选项</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">打印出有关命令的简短帮助。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Directory in which to place the built binaries.</source>
          <target state="translated">放置生成二进制文件的目录。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You also need to define <ph id="ph1">`--framework`</ph> when you specify this option.</source>
          <target state="translated">指定此选项时还需要定义 <ph id="ph1">`--framework`</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Compiles for a specific framework.</source>
          <target state="translated">编译特定框架。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The framework needs to be defined in the <bpt id="p1">[</bpt>project file<ept id="p1">](csproj.md)</ept>.</source>
          <target state="translated">需要在<bpt id="p1">[</bpt>项目文件<ept id="p1">](csproj.md)</ept>中定义该框架。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Defines a configuration under which to build.</source>
          <target state="translated">定义一个配置，根据该配置进行生成。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If omitted, it defaults to <ph id="ph1">`Debug`</ph>.</source>
          <target state="translated">如果省略，则默认为 <ph id="ph1">`Debug`</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Target runtime to build for.</source>
          <target state="translated">要生成的目标运行时。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For a list of Runtime Identifiers (RIDs) you can use, see the <bpt id="p1">[</bpt>RID catalog<ept id="p1">](../../rid-catalog.md)</ept>.</source>
          <target state="translated">有关可以使用的运行时标识符 (RID) 列表，请参阅 <bpt id="p1">[</bpt>RID 目录<ept id="p1">](../../rid-catalog.md)</ept>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Defines what <ph id="ph1">`*`</ph> should be replaced with in the version field in the project file.</source>
          <target state="translated">定义在项目文件的版本字段中应替换的 <ph id="ph1">`*`</ph> 对象。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The format follows NuGet's version guidelines.</source>
          <target state="translated">格式遵循 NuGet 的版本准则。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Prints out the incremental safety checks that users need to address in order for incremental compilation to be automatically turned on.</source>
          <target state="translated">打印出用户需要处理的增量安全检查，以便自动打开增量编译。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Marks the build as unsafe for incremental build.</source>
          <target state="translated">将生成标记为对增量生成不安全。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This turns off incremental compilation and forces a clean rebuild of the project dependency graph.</source>
          <target state="translated">这将关闭增量编译并强制完全重新生成项目依赖项关系图。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Ignores project-to-project references and only builds the root project specified to build.</source>
          <target state="translated">忽略项目间引用，并仅生成指定要生成的根项目。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Build a project and its dependencies:</source>
          <target state="translated">生成项目及其依赖项：</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Build a project and its dependencies using Release configuration:</source>
          <target state="translated">使用“发布”配置生成项目及其依赖项：</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Build a project and its dependencies for a specific runtime (in this example, Ubuntu 16.04):</source>
          <target state="translated">针对特定运行时（本例中为 Ubuntu 16.04）生成项目及其依赖项：</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>