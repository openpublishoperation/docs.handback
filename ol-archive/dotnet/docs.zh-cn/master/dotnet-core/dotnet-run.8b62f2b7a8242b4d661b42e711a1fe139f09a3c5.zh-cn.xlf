<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f0362aa" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e14cd14bc3d5ed86c841e46dc80c2649f239a82</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\dotnet-run.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ed55ac52f2e39808a61316515955f4afd640023</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4337f7b3ff9269ebdf9ecd5ded583717ee783e3f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-run command | Microsoft Docs</source>
          <target state="translated">dotnet-run 命令 | Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-run command provides a convenient option to run your application from the source code.</source>
          <target state="translated">dotnet-run 命令为从源代码运行应用程序提供了一个方便的选项。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-run, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-run, CLI, CLI 命令, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-run</source>
          <target state="translated">dotnet-run</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic applies to .NET Core Tools Preview 2.</source>
          <target state="translated">本主题适用于 .NET Core 工具预览版 2。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For the .NET Core Tools RC4 version, see the <bpt id="p1">[</bpt>dotnet-run (.NET Core Tools RC4)<ept id="p1">](../preview3/tools/dotnet-run.md)</ept> topic.</source>
          <target state="translated">对于 .NET Core 工具 RC4 版本，请参阅 <bpt id="p1">[</bpt>dotnet-run（.NET Core 工具 RC4）<ept id="p1">](../preview3/tools/dotnet-run.md)</ept>主题。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">名称</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet-run`</ph> - Runs source code 'in-place' without any explicit compile or launch commands.</source>
          <target state="translated"><ph id="ph1">`dotnet-run`</ph> - 无需任何显式编译或启动命令即可“就地”运行源代码。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">摘要</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet run`</ph> command provides a convenient option to run your application from the source code with one command.</source>
          <target state="translated"><ph id="ph1">`dotnet run`</ph> 命令为从源代码使用一个命令运行应用程序提供了一个方便的选项。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>It compiles source code, generates an output program and then runs that program.</source>
          <target state="translated">它会编译源代码、生成输出程序，然后运行该程序。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This command is useful for fast iterative development and can also be used to run a source-distributed program (for example, a website).</source>
          <target state="translated">此命令可用于快速迭代开发，还可用于运行源分布式程序（例如，网站）。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This command relies on <bpt id="p1">[</bpt>dotnet build<ept id="p1">](dotnet-build.md)</ept> to build source inputs to a .NET assembly, before launching the program.</source>
          <target state="translated">此命令依赖于 <bpt id="p1">[</bpt>dotnet 生成<ept id="p1">](dotnet-build.md)</ept>，以便在启动程序前生成 .NET 程序集的源输入。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The requirements for this command and the handling of source inputs are all inherited from the build command.</source>
          <target state="translated">此命令的要求和源输入的处理均继承自生成命令。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The documentation for the build command provides more information on those requirements.</source>
          <target state="translated">生成命令文档提供了有关这些要求的详细信息。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Output files are written to the child <bpt id="p1">*</bpt>bin<ept id="p1">*</ept> folder, which will be created if it doesn't exist.</source>
          <target state="translated">输出文件会被写入子 <bpt id="p1">*</bpt>bin<ept id="p1">*</ept> 文件夹，如果此文件夹不存在，则创建一个。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Files will be overwritten as needed.</source>
          <target state="translated">根据需要覆盖文件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Temporary files are written to the child <bpt id="p1">*</bpt>obj<ept id="p1">*</ept> folder.</source>
          <target state="translated">临时文件会被写入子 <bpt id="p1">*</bpt>obj<ept id="p1">*</ept> 文件夹。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In case of a project with multiple specified frameworks, <ph id="ph1">`dotnet run`</ph> will first select the .NET Core frameworks.</source>
          <target state="translated">对于具有多个指定框架的项目，<ph id="ph1">`dotnet run`</ph> 将首先选择 .NET Core 框架。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If those do not exist, it will error out.</source>
          <target state="translated">如果不存在，则将出错。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To specify other frameworks, use the <ph id="ph1">`--framework`</ph> argument.</source>
          <target state="translated">若要指定其他框架，请使用 <ph id="ph1">`--framework`</ph> 参数。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet run`</ph> command must be used in the context of projects, not built assemblies.</source>
          <target state="translated">必须在项目上下文，而不是生成程序集中使用 <ph id="ph1">`dotnet run`</ph> 命令。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If you're trying to run a portable application DLL instead, you should use <bpt id="p1">[</bpt>dotnet<ept id="p1">](dotnet.md)</ept> without any command like in the following example:</source>
          <target state="translated">如果尝试改为运行可移植应用程序 DLL，应使用 <bpt id="p1">[</bpt>dotnet<ept id="p1">](dotnet.md)</ept>，切勿使用如下所示的任何命令：</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information about the <ph id="ph1">`dotnet`</ph> driver, see the <bpt id="p1">[</bpt>.NET Core Command Line Tools (CLI)<ept id="p1">](index.md)</ept> topic.</source>
          <target state="translated">有关 <ph id="ph1">`dotnet`</ph> 驱动程序的详细信息，请参阅 <bpt id="p1">[</bpt>.NET Core 命令行工具 (CLI)<ept id="p1">](index.md)</ept> 主题。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">选项</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Delimits arguments to <ph id="ph1">`dotnet run`</ph> from arguments for the application being run.</source>
          <target state="translated">将参数分隔到正在运行的应用程序的参数的 <ph id="ph1">`dotnet run`</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>All arguments after this one will be passed to the application being run.</source>
          <target state="translated">在此参数后的所有参数均会被传递给正在运行的应用程序。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">打印出有关命令的简短帮助。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`-f`</ph>, <ph id="ph2">`--framework &lt;FRAMEWORK_IDENTIFIER&gt;`</ph></source>
          <target state="translated"><ph id="ph1">`-f`</ph>, <ph id="ph2">`--framework &lt;FRAMEWORK_IDENTIFIER&gt;`</ph></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Runs the application for a given framework identifier (FID).</source>
          <target state="translated">运行针对给定框架标识符 (FID) 的应用程序。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`-c`</ph>, <ph id="ph2">`--configuration &lt;Debug|Release&gt;`</ph></source>
          <target state="translated"><ph id="ph1">`-c`</ph>, <ph id="ph2">`--configuration &lt;Debug|Release&gt;`</ph></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Configuration to use when publishing.</source>
          <target state="translated">发布时要使用的配置。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`Debug`</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">`Debug`</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`-p`</ph>, <ph id="ph2">`--project [PATH]`</ph></source>
          <target state="translated"><ph id="ph1">`-p`</ph>, <ph id="ph2">`--project [PATH]`</ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Specifies which project to run.</source>
          <target state="translated">指定要运行的项目。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>It can be a path to a <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> file or to a directory containing a <bpt id="p2">[</bpt>project.json<ept id="p2">](project-json.md)</ept> file.</source>
          <target state="translated">它可能是 <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> 文件的路径或包含 <bpt id="p2">[</bpt>project.json<ept id="p2">](project-json.md)</ept> 文件的目录路径。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It defaults to current directory if not specified.</source>
          <target state="translated">如未指定，则默认为当前目录。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Run the project in the current directory: <ph id="ph1">`dotnet run`</ph></source>
          <target state="translated">运行当前目录中的项目：<ph id="ph1">`dotnet run`</ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Run the specified project:</source>
          <target state="translated">运行指定的项目：</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Run the project in the current directory (the <ph id="ph1">`--help`</ph> argument in this example is passed to the application being run, since the <ph id="ph2">`--`</ph> argument was used):</source>
          <target state="translated">运行当前目录中的项目（在本例中，<ph id="ph1">`--help`</ph> 参数被传递到正在运行的应用程序，因为使用了 <ph id="ph2">`--`</ph> 参数）：</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>