<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3ea05484650d64284affa70c7377df929e44bfc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\docker\visual-studio-tools-for-docker.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5d00bd6a90ad075b9be15bcb67b9a04bfb22bd0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b515b1f8079f4667ed317ca6b7a7ee6778a43bfa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Visual Studio Tools for Docker</source>
          <target state="translated">Visual Studio Tools for Docker</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Using Visual Studio Tools for Docker</source>
          <target state="translated">使用 Visual Studio Tools for Docker</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core, Docker, ASP.NET Core, Visual Studio 2015</source>
          <target state="translated">.NET, .NET Core, Docker, ASP.NET Core, Visual Studio 2015</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Visual Studio Tools for Docker</source>
          <target state="translated">Visual Studio Tools for Docker</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Developing and debugging your application in a Docker container can be a ceremony of tasks to get setup with various tools.</source>
          <target state="translated">在 Docker 容器中开发和调试应用程序可以看作是开始进行设置各种工具的任务仪式。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Visual Studio Tools for Docker<ept id="p1">](https://visualstudiogallery.msdn.microsoft.com/0f5b2caa-ea00-41c8-b8a2-058c7da0b3e4)</ept> helps you get past the hurdles and find the bugs using F5 to debug your application directly in a locally hosted Docker Container.</source>
          <target state="translated"><bpt id="p1">[</bpt>Visual Studio Tools for Docker<ept id="p1">](https://visualstudiogallery.msdn.microsoft.com/0f5b2caa-ea00-41c8-b8a2-058c7da0b3e4)</ept> 有助于跨越技术障碍并使用 F5 查找 bug，以直接在本地托管的 Docker 容器中调试应用程序。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The current version targets Linux Docker containers, with Windows Containers coming soon.</source>
          <target state="translated">当前版本以 Linux Docker 容器为目标，并且即将推出适用于 Windows 容器的版本。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">先决条件</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft Visual Studio 2015 Update 3<ept id="p1">](https://www.visualstudio.com/downloads/download-visual-studio-vs)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Microsoft Visual Studio 2015 Update 3<ept id="p1">](https://www.visualstudio.com/downloads/download-visual-studio-vs)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core 1.0.1 - VS 2015 Tooling Preview 2<ept id="p1">](https://go.microsoft.com/fwlink/?LinkID=827546)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>.NET Core 1.0.1 - VS 2015 Tooling Preview 2<ept id="p1">](https://go.microsoft.com/fwlink/?LinkID=827546)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Docker For Windows<ept id="p1">](https://www.docker.com/products/docker#/windows)</ept> to run your Docker containers locally</source>
          <target state="translated"><bpt id="p1">[</bpt>Docker For Windows<ept id="p1">](https://www.docker.com/products/docker#/windows)</ept>：能够在本地运行 Docker 容器</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Installation and setup</source>
          <target state="translated">安装和设置</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Download and install the <bpt id="p1">[</bpt>Visual Studio Tools for Docker<ept id="p1">](https://aka.ms/DockerToolsForVS)</ept> from the <bpt id="p2">[</bpt>Visual Studio Gallery<ept id="p2">](http://visualstudiogallery.msdn.microsoft.com/)</ept> or you can search for it in <bpt id="p3">**</bpt>Extensions and Updates<ept id="p3">**</ept> within Visual Studio.</source>
          <target state="translated">从 <bpt id="p2">[</bpt>Visual Studio 库<ept id="p2">](http://visualstudiogallery.msdn.microsoft.com/)</ept>中下载并安装 <bpt id="p1">[</bpt>Visual Studio Tools for Docker<ept id="p1">](https://aka.ms/DockerToolsForVS)</ept>，或者可在 Visual Studio 中的<bpt id="p3">**</bpt>扩展和更新<ept id="p3">**</ept>中进行搜索。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A required configuration is to setup <bpt id="p1">**</bpt><bpt id="p2">[</bpt>Shared Drives<ept id="p2">](https://docs.docker.com/docker-for-windows/#/shared-drives)</ept><ept id="p1">**</ept> in Docker for Windows.</source>
          <target state="translated">所需的配置是在 Docker for Windows 中安装 <bpt id="p1">**</bpt><bpt id="p2">[</bpt>Shared Drives<ept id="p2">](https://docs.docker.com/docker-for-windows/#/shared-drives)</ept><ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The setting is required for the volume mapping and debugging support.</source>
          <target state="translated">卷映射和调试支持需要此设置。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Right click the Docker icon in the System Tray, click Settings and select Shared Drives.</source>
          <target state="translated">右键单击系统托盘中的 Docker 图标，然后单击“设置”并选择“Shared Drives”。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Shared Drives</source>
          <target state="translated">Shared Drives</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Create an ASP.NET Web Application and add Docker Support</source>
          <target state="translated">创建 ASP.NET Web 应用程序并添加 Docker 支持</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Using Visual Studio, create a new ASP.NET Core Web Application.</source>
          <target state="translated">使用 Visual Studio，创建新的 ASP.NET Core Web 应用程序。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When the application is loaded, either select <bpt id="p1">**</bpt>Add Docker Support<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>Project Menu<ept id="p2">**</ept> or right click the project from the Solution Explorer and select <bpt id="p3">**</bpt>Add<ept id="p3">**</ept><ph id="ph1"> &gt; </ph><bpt id="p4">**</bpt>Docker Support<ept id="p4">**</ept>.</source>
          <target state="translated">当加载应用程序时，从“项目菜单”中选择“添加 Docker 支持”，或者右键单击“解决方案资源管理器”中的项目，然后选择“添加”<ph id="ph1"> &gt; </ph>“Docker 支持”。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Project Menu</source>
          <target state="translated">项目菜单</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Project Add Docker Support</source>
          <target state="translated">项目添加 Docker 支持</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Project Context Menu</source>
          <target state="translated">项目上下文菜单</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Right Click Add Docker Support</source>
          <target state="translated">右键单击“添加 Docker 支持”</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following files are added to the project.</source>
          <target state="translated">下列文件已添加到该项目中。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Dockerfile<ept id="p1">**</ept>: the Docker file for ASP.NET Core applications is based on the <bpt id="p2">[</bpt>microsoft/aspnetcore<ept id="p2">](https://hub.docker.com/r/microsoft/aspnetcore)</ept> image.</source>
          <target state="translated"><bpt id="p1">**</bpt>Dockerfile<ept id="p1">**</ept>：适用于 ASP.NET Core 应用程序的 Docker 文件基于 <bpt id="p2">[</bpt>microsoft/aspnetcore<ept id="p2">](https://hub.docker.com/r/microsoft/aspnetcore)</ept> 映像。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This image includes the ASP.NET Core NuGet packages, which have been pre-jitted improving startup performance.</source>
          <target state="translated">此映像包括 ASP.NET Core NuGet 包，已对此包进行了预实时编译，以提高启动性能。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When building .NET Core Console Applications, the Dockerfile FROM will reference the most recent <bpt id="p1">[</bpt>microsoft/dotnet<ept id="p1">](https://hub.docker.com/r/microsoft/dotnet)</ept> image.</source>
          <target state="translated">生成 .NET Core 控制台应用程序时，Dockerfile 将引用最新的 <bpt id="p1">[</bpt>microsoft/dotnet<ept id="p1">](https://hub.docker.com/r/microsoft/dotnet)</ept> 映像。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>docker-compose.yml<ept id="p1">**</ept>: base Docker Compose file used to define the collection of images to be built and run with docker-compose build/run.</source>
          <target state="translated"><bpt id="p1">**</bpt>docker-compose.yml<ept id="p1">**</ept>：基本 Docker Compose 文件，用于定义要通过 docker-compose build/run 生成和运行的映像集合。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>docker-compose.dev.debug.yml<ept id="p1">**</ept>: additional docker-compose file with for iterative changes when your configuration is set to debug.</source>
          <target state="translated"><bpt id="p1">**</bpt>docker compose.dev.debug.yml<ept id="p1">**</ept>：配置设置为调试时其他具有用于迭代更改的 docker-compose 文件。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Visual Studio will call -f docker-compose.yml -f docker-compose.dev.debug.yml to merge these together.</source>
          <target state="translated">Visual Studio 将调用 -f docker-compose.yml -f docker-compose.dev.debug.yml 以将它们合并到一起。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This compose file is used by Visual Studio development tools.</source>
          <target state="translated">此组成文件可供 Visual Studio 开发工具使用。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>docker-compose.dev.release.yml<ept id="p1">**</ept>: additional Docker Compose file to debug your release definition.</source>
          <target state="translated"><bpt id="p1">**</bpt>docker compose.dev.release.yml<ept id="p1">**</ept>：调试发布定义的其他 Docker Compose 文件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>It will volume mount the debugger so it doesn't change the contents of the production image.</source>
          <target state="translated">它将卷装载调试器，使它不会更改生产映像的内容。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The docker-compose.yml file contains the name of the image that is created when project is run.</source>
          <target state="translated">docker-compose.yml 文件包含运行项目时创建的映像的名称。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In this example, <ph id="ph1">`image: user/hellodockertools${TAG}`</ph> generates the image <ph id="ph2">`user/hellodockertools:dev`</ph> when the application is run in <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> mode and <ph id="ph3">`user/hellodockertools:latest`</ph> in <bpt id="p2">**</bpt>Release<ept id="p2">**</ept> mode respectively.</source>
          <target state="translated">在此示例中，当应用程序以<bpt id="p1">**</bpt>调试<ept id="p1">**</ept>模式运行以及 <ph id="ph3">`user/hellodockertools:latest`</ph> 处于<bpt id="p2">**</bpt>发布<ept id="p2">**</ept>模式时，<ph id="ph1">`image: user/hellodockertools${TAG}`</ph> 将生成映像 <ph id="ph2">`user/hellodockertools:dev`</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You will want to change the <ph id="ph1">`user`</ph> to your Docker Hub username if you plan to push the image to the registry.</source>
          <target state="translated">如果计划要将映像推送到注册表，则需要将 <ph id="ph1">`user`</ph> 更改为 Docker Hub 用户名。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`spboyer/hellodockertools`</ph>, or change to your private registry url <ph id="ph2">`privateregistry.domain.com/`</ph> depending on your configuration.</source>
          <target state="translated">如 <ph id="ph1">`spboyer/hellodockertools`</ph>，或更改为私有注册 URL <ph id="ph2">`privateregistry.domain.com/`</ph>，这具体取决于配置。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">调试</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Docker<ept id="p1">**</ept> from the debug dropdown in the toolbar and use F5 to start debugging the application.</source>
          <target state="translated">在工具栏的调试下拉列表中选择“Docker”，然后使用 F5 启动调试应用程序。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The microsoft/aspnetcore image is acquired (if not already in your cache)</source>
          <target state="translated">已获取 Microsoft/aspnetcore 映像（如果缓存中尚不存在）</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>ASPNETCORE_ENVIRONMENT is set to Development within the container</source>
          <target state="translated">将 ASPNETCORE_ENVIRONMENT 设置为“在容器内开发”</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>PORT 80 is EXPOSED and mapped to a dynamically assigned port for localhost.</source>
          <target state="translated">已公开端口 80，并已映射为 localhost 动态分配的端口。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The port is determined by the docker host and can be queried with docker ps.</source>
          <target state="translated">该端口由 docker 主机确定，并且可以使用 docker ps 进行查询。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Your application is copied to the container</source>
          <target state="translated">将应用程序复制到容器</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Default browser is launched with the debugger attached to the container, using the dynamically assigned port.</source>
          <target state="translated">使用动态分配端口，通过带有附加到容器的调试程序启动默认浏览器。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The resulting Docker image built is the <ph id="ph1">`dev`</ph> image of your application with the <ph id="ph2">`microsoft/aspnetcore`</ph> images as the base image.</source>
          <target state="translated">生成的结果 Docker 映像是应用程序的 <ph id="ph1">`dev`</ph> 映像，而 <ph id="ph2">`microsoft/aspnetcore`</ph> 映像则是基本映像。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Note: the dev image is empty of your app contents as Debug confgurations use volume mounting to provide the iterative experience.</source>
          <target state="translated">注意：因为调试配置使用卷装载提供迭代体验，因此开发映像中的应用内容为空。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To push an image, use the Release configuration.</source>
          <target state="translated">若要推送映像，请使用“发行”配置。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The application is running using the container which you can see by running the <ph id="ph1">`docker ps`</ph> command.</source>
          <target state="translated">该应用程序正在使用容器运行，可以通过运行 <ph id="ph1">`docker ps`</ph> 命令进行查看。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Edit and Continue</source>
          <target state="translated">编辑并继续</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Changes to static files and/or razor template files (.cshtml) are automatically updated without the need of a compilation step.</source>
          <target state="translated">对静态文件和/或 razor 模板文件 (.cshtml) 所做的更改会自动更新，无需执行编译步骤。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Make the change, save and tap refresh in the browser to view the update.</source>
          <target state="translated">进行更改，保存并在浏览器中点击“刷新”以查看更新。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Modifications to code files require compiling and a restart of Kestrel within the container.</source>
          <target state="translated">对代码文件的修改需要在容器内进行编译和重新启动 Kestrel。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>After making the change, use CTRL + F5 to perform the process and start the application within the container.</source>
          <target state="translated">更改后，使用 CTRL+F5 执行该过程并在容器内启动应用程序。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The Docker container is not rebuilt or stopped; using <ph id="ph1">`docker ps`</ph> in the command line you can see that the original container is still running as of 10 minutes ago.</source>
          <target state="translated">不可以重新生成或停止 Docker 容器；在命令行中使用 <ph id="ph1">`docker ps`</ph> 命令可以看到原始容器仍与 10 分钟前一样正在运行。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Publishing Docker images</source>
          <target state="translated">发布 Docker 映像</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Once you have completed the develop and debug cycle of your application, the Visual Studio Tools for Docker will help you create the production image of your application.</source>
          <target state="translated">完成应用程序的开发和调试循环后，Visual Studio Tools for Docker 将帮助创建应用程序的生产映像。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Change the debug dropdown to <bpt id="p1">**</bpt>Release<ept id="p1">**</ept> and build the application.</source>
          <target state="translated">将调试下拉列表更改为“发行”，然后生成应用程序。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The tooling will produce the image with the <ph id="ph1">`:latest`</ph> tag which you can push to your private registry or Docker Hub.</source>
          <target state="translated">此工具将生成具有 <ph id="ph1">`:latest`</ph> 标签的映像，可以将其推送到私有注册表或 Docker Hub。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Using the <ph id="ph1">`docker images`</ph> you can see the list of images.</source>
          <target state="translated">使用 <ph id="ph1">`docker images`</ph> 可以查看映像的列表。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>There may be an expectation for the production or release image to be smaller in size by comparison to the <bpt id="p1">**</bpt>dev<ept id="p1">**</ept> image, however through the use of the volume mapping; the debugger and application were actually being run from your local machine and not within the container.</source>
          <target state="translated">与<bpt id="p1">**</bpt>开发<ept id="p1">**</ept>映像比较，生产或发行映像的大小可能会更小，但是通过使用卷映射，调试程序和应用程序实际会从本地计算机运行，而不是在容器中。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>latest<ept id="p1">**</ept> image has packaged the entire application code needed to run the application on a host machine, therefore the delta is the size of your application code.</source>
          <target state="translated"><bpt id="p1">**</bpt>最新<ept id="p1">**</ept>映像已打包在主机计算机上运行应用程序所需的整个应用程序代码，因此增量为应用程序代码的大小。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>
