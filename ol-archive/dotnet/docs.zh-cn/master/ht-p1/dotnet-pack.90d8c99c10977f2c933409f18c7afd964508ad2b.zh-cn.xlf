<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5aca8db50bf80606ff94562a6014c396b0ef770e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\preview3\tools\dotnet-pack.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9627041b7fd6e10859a2138e571ee09f9eaef82e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">913956613470f5d76a33330a991ffd3bb530bc48</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-pack command | .NET Core SDK</source>
          <target state="translated">dotnet-pack 命令 | .NET Core SDK</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-pack command creates NuGet packages for your .NET Core project.</source>
          <target state="translated">dotnet-pack 命令可为 .NET Core 项目创建 NuGet 包。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-pack, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-pack, CLI, CLI 命令, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-pack</source>
          <target state="translated">dotnet-pack</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">名称</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet-pack`</ph> - Packs the code into a NuGet package</source>
          <target state="translated"><ph id="ph1">`dotnet-pack`</ph> - 将代码打包到 NuGet 包</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">摘要</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet pack`</ph> command builds the project and creates NuGet packages.</source>
          <target state="translated"><ph id="ph1">`dotnet pack`</ph> 命令生成项目并创建 NuGet 包。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The result of this command is a nuget package.</source>
          <target state="translated">该命令的结果是一个 nuget 包。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`--include-symbols`</ph> option is present, another package containing the debug symbols will be created.</source>
          <target state="translated">如果 <ph id="ph1">`--include-symbols`</ph> 选项存在，将创建包含调试符号的另一个包。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>NuGet dependencies of the project being packed are added to the nuspec file, so they are able to be resolved when the package is installed.</source>
          <target state="translated">将被打包项目的 NuGet 依赖项添加到 nuspec 文件，以便在安装包时可以将其解析。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Project-to-project references are not packaged inside the project.</source>
          <target state="translated">项目到项目的引用不会打包到项目内。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Currently, you need to have a package per project if you have project-to-project dependencies.</source>
          <target state="translated">目前，如果具有项目到项目的依赖项，则每个项目均应含一个包。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet pack`</ph> by default first builds the project.</source>
          <target state="translated"><ph id="ph1">`dotnet pack`</ph> 默认首先生成项目。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you wish to avoid this, pass the <ph id="ph1">`--no-build`</ph> option.</source>
          <target state="translated">如果希望避免此情况，则选择 <ph id="ph1">`--no-build`</ph> 选项。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This can be useful in Continuous Integration (CI) build scenarios in which you know the code was just previously built, for example.</source>
          <target state="translated">这在持续集成 (CI) 生成方案中非常有用，例如，在其中你可以知道代码是刚刚生成的。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">选项</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">打印出有关命令的简短帮助。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The project to pack.</source>
          <target state="translated">要打包的项目。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It can be either a path to a <bpt id="p1">[</bpt>csproj file<ept id="p1">](csproj.md)</ept> or to a directory.</source>
          <target state="translated">它可能是 <bpt id="p1">[</bpt>csproj file<ept id="p1">](csproj.md)</ept> 文件或目录的路径。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If omitted, it will default to the current directory.</source>
          <target state="translated">如果省略，则将默认为当前目录。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Places the built packages in the directory specified.</source>
          <target state="translated">将生成的包放置在指定目录。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Does not build the project before packing.</source>
          <target state="translated">打包前不生成项目。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Includes the source files into the nuget package.</source>
          <target state="translated">将源文件包括在 nuget 包中。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The sources files are included in the <ph id="ph1">`src`</ph> folder within the nupkg.</source>
          <target state="translated">源文件包括在 nupkg 内的 <ph id="ph1">`src`</ph> 文件夹中。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Generate the symbols nupkg.</source>
          <target state="translated">生成符号 nupkg。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Configuration to use when building the project.</source>
          <target state="translated">生成项目时要使用的配置。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If not specified, will default to <ph id="ph1">`Debug`</ph>.</source>
          <target state="translated">如未指定，则默认为 <ph id="ph1">`Debug`</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Updates the star in <ph id="ph1">`-*`</ph> package version suffix with a specified string.</source>
          <target state="translated">更新了含有指定字符串的 <ph id="ph1">`-*`</ph> 包版本后缀中的星形。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Pack the project in the current directory:</source>
          <target state="translated">打包当前目录中的项目：</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Pack the app1 project:</source>
          <target state="translated">打包 app1 项目：</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Pack the project in the current directory and place the resulting packages into the specified folder:</source>
          <target state="translated">打包当前目录中的项目并将生成的包放置到指定文件夹：</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Pack the project in the current directory into the specified folder and skip the build step:</source>
          <target state="translated">将当前目录中的项目打包到指定文件夹并跳过生成步骤：</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Pack the current project and updates the resulting packages version with the given suffix.</source>
          <target state="translated">打包当前项目并更新生成的具有给定后缀的包版本。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For example, version <ph id="ph1">`1.0.0-*`</ph> will be updated to <ph id="ph2">`1.0.0-ci-1234`</ph>.</source>
          <target state="translated">例如，版本 <ph id="ph1">`1.0.0-*`</ph> 将更新为 <ph id="ph2">`1.0.0-ci-1234`</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>