<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96b7c02493d94b3c1d5fd112ca84ed25c35c4f90</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72b4bdac15e430063cdb38804e08abad2b178faf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ff1d650c4ded0a38ae4cb5ad3fac2799b287e2c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>.NET Core Command-Line Interface (CLI) Tools</source>
          <target state="translated">.NET Core 命令行接口 (CLI) 工具</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>An overview of what the Command-Line Interface (CLI) is and its main features</source>
          <target state="translated">命令行接口 (CLI) 的定义及其主要功能的概述</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>CLI, CLI tools, .NET, .NET Core</source>
          <target state="translated">CLI, CLI 工具, .NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>.NET Core command-line interface tools</source>
          <target state="translated">.NET Core 命令行接口工具</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The .NET Core command-line interface (CLI) is a new foundational cross-platform toolchain for developing .NET Core applications.</source>
          <target state="translated">.NET Core 命令行接口 (CLI) 工具是用于开发 .NET Core 应用程序的新型基础性跨平台工具链。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It is "foundational" because it is the primary layer on which other, higher-level tools, such as Integrated Development Environments (IDEs), editors and build orchestrators can build on.</source>
          <target state="translated">“基础性”在于它是可以在其中生成其他更高级别工具（如集成开发环境 (IDE)、编辑器和生成 orchestrator）的主层。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It is also cross-platform by default and has the same surface area on each of the supported platforms.</source>
          <target state="translated">此外，默认情况下，它是跨平台的，每个受支持平台上的外围应用都相同。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This means that when you learn how to use the tooling, you can use it the same way from any of the supported platforms.</source>
          <target state="translated">这意味着，如果了解如何使用此工具，便可以在任何受支持的平台以相同方式使用它。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">安装</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>As with any tooling, the first thing is to get the tools to your machine.</source>
          <target state="translated">与任何工具一样，首先应将工具安装到计算机上。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Depending on your scenario, you can either use the native installers to install the CLI or use the installation shell script.</source>
          <target state="translated">根据具体情况，可以使用本机安装程序安装 CLI 或使用 shell 脚本安装。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The native installers are primarily meant for developer's machines.</source>
          <target state="translated">本机安装程序主要用于开发人员的计算机。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The CLI is distributed using each supported platform's native install mechanism, for instance DEB packages on Ubuntu or MSI bundles on Windows.</source>
          <target state="translated">可以使用所有受支持的平台的本机安装机制发布 CLI，例如 Ubuntu 上的 DEB 或 Windows 上的 MSI 包。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>These installers will install and set up the environment as needed for the user to use the CLI immediately after the install.</source>
          <target state="translated">这些安装程序将根据需要为用户安装并设置环境，以便在安装完成后可立即使用 CLI。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>However, they also require administrative privileges on the machine.</source>
          <target state="translated">但是，这些安装程序也需要对计算机的管理权限。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can view the installation instructions on the <bpt id="p1">[</bpt>.NET Core getting started page<ept id="p1">](https://aka.ms/dotnetcoregs)</ept>.</source>
          <target state="translated">有关安装说明信息，请参阅 <bpt id="p1">[</bpt>.NET Core 入门页<ept id="p1">](https://aka.ms/dotnetcoregs)</ept>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Install scripts, on the other hand, do not require administrative privileges.</source>
          <target state="translated">另一方面，安装脚本不需要管理权限。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>However, they will also not install any prerequisites on the machine; you need to install all of the prerequisites manually.</source>
          <target state="translated">但是，它们也不会在计算机上安装任何系统必备组件；需要手动安装所有系统必备组件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The scripts are meant mostly for setting up build servers or when you wish to install the tools without administrative privileges (do note the prerequisites caveat above).</source>
          <target state="translated">这些脚本主要用于设置生成服务器或希望安装工具但没有管理权限的情况（请务必注意上述系统必备组件注意事项）。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can find more information on the <bpt id="p1">[</bpt>install script reference topic<ept id="p1">](dotnet-install-script.md)</ept>.</source>
          <target state="translated">可以在<bpt id="p1">[</bpt>安装脚本引用主题<ept id="p1">](dotnet-install-script.md)</ept>中找到详细信息。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you are interested in how to set up CLI on your continuous integration (CI) build server you can take a look at the <bpt id="p1">[</bpt>CLI with CI servers<ept id="p1">](using-ci-with-cli.md)</ept> topic.</source>
          <target state="translated">如果对如何在持续集成 (CI) 生成服务器上设置 CLI 感兴趣，可以查看 <bpt id="p1">[</bpt>CI 服务器的 CLI<ept id="p1">](using-ci-with-cli.md)</ept> 主题。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>By default, the CLI will install in a side-by-side (SxS) manner.</source>
          <target state="translated">默认情况下，CLI 将以并行 (SxS) 方式安装。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This means that multiple versions of the CLI tools can coexist at any given time on a single machine.</source>
          <target state="translated">这意味着多个版本的 CLI 工具在任何给定时间内可在一台计算机上共存。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>How the correct version gets used is explained in more detail in the <bpt id="p1">[</bpt>driver<ept id="p1">](#driver)</ept> section.</source>
          <target state="translated">有关如何使用正确版本的详细信息，请参阅<bpt id="p1">[</bpt>驱动程序<ept id="p1">](#driver)</ept>部分。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>What commands come in the box?</source>
          <target state="translated">框中有哪些命令？</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following commands are installed by default:</source>
          <target state="translated">默认安装以下命令：</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>new<ept id="p1">](dotnet-new.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>new<ept id="p1">](dotnet-new.md)</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>restore<ept id="p1">](dotnet-restore.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>restore<ept id="p1">](dotnet-restore.md)</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>run<ept id="p1">](dotnet-run.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>run<ept id="p1">](dotnet-run.md)</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>build<ept id="p1">](dotnet-build.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>build<ept id="p1">](dotnet-build.md)</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>test<ept id="p1">](dotnet-test.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>test<ept id="p1">](dotnet-test.md)</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>publish<ept id="p1">](dotnet-publish.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>publish<ept id="p1">](dotnet-publish.md)</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>pack<ept id="p1">](dotnet-pack.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>pack<ept id="p1">](dotnet-pack.md)</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>There is also a way to import more commands on a per-project basis as well as to add your own commands.</source>
          <target state="translated">此外，还有一种方法可以基于每个项目导入更多命令并添加自己的命令。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This is explained in greater detail in the <bpt id="p1">[</bpt>extensibility section<ept id="p1">](#extensibility)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>扩展性部分<ept id="p1">](#extensibility)</ept>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Working with the CLI</source>
          <target state="translated">使用 CLI</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Before we go into any more details, let's see how working with the CLI looks like from a 10,000-foot view.</source>
          <target state="translated">开始了解更多详细信息之前，我们来看看从 10,000 英尺的视图中使用 CLI 的情形。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following example utilizes several commands from the CLI standard install to initialize a new simple console application, restore the dependencies, build the application and then run it.</source>
          <target state="translated">以下示例利用 CLI 标准安装中的多个命令来初始化新的简单控制台应用程序、还原依赖项、生成应用程序，然后运行该应用程序。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>As you can see in the previous example, there is a pattern in the way you use the CLI tools.</source>
          <target state="translated">如上例中所示，其中有一种使用 CLI 工具的模式。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Within that pattern, we can identify three main pieces of each command:</source>
          <target state="translated">在该模式中，我们可以确定每个命令的三大主要部分：</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>The driver ("dotnet")<ept id="p1">](#driver)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>驱动程序（“dotnet”）<ept id="p1">](#driver)</ept></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>The command, or "verb"<ept id="p1">](#the-verb)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>命令或“谓词”<ept id="p1">](#the-verb)</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Command arguments<ept id="p1">](#the-arguments)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>命令参数<ept id="p1">](#the-arguments)</ept></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Driver</source>
          <target state="translated">驱动程序</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The driver is named <bpt id="p1">[</bpt>dotnet<ept id="p1">](dotnet.md)</ept>.</source>
          <target state="translated">驱动器名为 <bpt id="p1">[</bpt>dotnet<ept id="p1">](dotnet.md)</ept>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>It is the first part of what you invoke.</source>
          <target state="translated">这是调用的第一部分。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The driver has two responsibilities:</source>
          <target state="translated">该驱动程序有以下两项职责：</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Running portable apps</source>
          <target state="translated">运行可移植应用</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Executing the verb</source>
          <target state="translated">执行谓词</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>What it does depends on what is specified on the command line.</source>
          <target state="translated">它所执行的职责取决于命令行上指定的内容。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In the first case, you would specify a portable app DLL that <ph id="ph1">`dotnet`</ph> would run similar to this: <ph id="ph2">`dotnet /path/to/your.dll`</ph>.</source>
          <target state="translated">在第一种情况下，需要指定可移植应用 DLL，<ph id="ph1">`dotnet`</ph> 将以如下方式运行该 DLL：<ph id="ph2">`dotnet /path/to/your.dll`</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>In the second case, the driver attempts to invoke the specified command.</source>
          <target state="translated">在第二种情况下，驱动程序将尝试调用指定命令。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This starts the CLI command execution process.</source>
          <target state="translated">这将启动 CLI 命令执行过程。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>First, the driver determines the version of the tooling that you want.</source>
          <target state="translated">首先，驱动程序确定所需工具的版本。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can specify the version in the <bpt id="p1">[</bpt>global.json<ept id="p1">](global-json.md)</ept> file using the <ph id="ph1">`version`</ph> property.</source>
          <target state="translated">可在 <bpt id="p1">[</bpt>global.json<ept id="p1">](global-json.md)</ept> 文件中使用 <ph id="ph1">`version`</ph> 属性指定版本。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If that is not available, the driver finds the latest version of the tools that is installed on disk and uses that version.</source>
          <target state="translated">如果不可用，驱动程序将查找安装在磁盘上的工具的最新版本并使用该版本。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Once the version is determined, it executes the command.</source>
          <target state="translated">确定版本后，将立即执行该命令。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The "verb"</source>
          <target state="translated">“谓词”</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The verb is simply a command that performs an action.</source>
          <target state="translated">谓词仅仅是执行操作的命令。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet build`</ph> builds your code.</source>
          <target state="translated"><ph id="ph1">`dotnet build`</ph> 生成代码。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet publish`</ph> publishes your code.</source>
          <target state="translated"><ph id="ph1">`dotnet publish`</ph> 发布代码。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The verb is implemented as a console application that is named per convention: <ph id="ph1">`dotnet-{verb}`</ph>.</source>
          <target state="translated">以按约定命名的控制台应用程序实现谓词：<ph id="ph1">`dotnet-{verb}`</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>All of the logic is implemented in the console application that represents the verb.</source>
          <target state="translated">在表示谓词的控制台应用程序中实现所有逻辑。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The arguments</source>
          <target state="translated">参数</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The arguments that you pass on the command-line are the arguments to the actual verb/command being invoked.</source>
          <target state="translated">在命令行上传递的参数是正被调用的实际谓词/命令的参数。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>For example, when you type <ph id="ph1">`dotnet publish --output publishedapp`</ph>, the <ph id="ph2">`--output`</ph> argument is passed to the <ph id="ph3">`publish`</ph> command.</source>
          <target state="translated">例如，键入 <ph id="ph1">`dotnet publish --output publishedapp`</ph> 时，会将 <ph id="ph2">`--output`</ph> 参数传递给 <ph id="ph3">`publish`</ph> 命令。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Types of application portability</source>
          <target state="translated">应用程序可移植性的类型</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>CLI enables applications to be portable in two main ways:</source>
          <target state="translated">CLI 以两种主要方式实现应用程序的可移植性：</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Completely portable applications that can run anywhere .NET Core is installed</source>
          <target state="translated">可随处运行 .NET Core 的完全可移植应用程序已安装</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Self-contained deployments</source>
          <target state="translated">独立部署</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>You can learn more about both of these in the <bpt id="p1">[</bpt>.NET Core application deployment<ept id="p1">](../deploying/index.md)</ept> topic.</source>
          <target state="translated">可在 <bpt id="p1">[</bpt>.NET Core 应用程序部署<ept id="p1">](../deploying/index.md)</ept>主题中了解以上两点的详细信息。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Migration from DNX</source>
          <target state="translated">从 DNX 迁移</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If you used DNX in .NET Core 1.0 RC1, you may be wondering what happened to it and how do these new tools relate to the DNX tools.</source>
          <target state="translated">如果在 .NET Core 1.0 RC1 中使用 DNX，你可能会想发生的情况以及这些新工具与 DNX 工具之间的联系。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>In short, the DNX tools have been replaced with the .NET Core CLI tools.</source>
          <target state="translated">简言之，DNX 工具已替换为 .NET Core CLI 工具。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If you have existing projects or are just wondering how the commands map, you can use the <bpt id="p1">[</bpt>DNX to CLI migration<ept id="p1">](../migrating-from-dnx.md)</ept> topic to get all the details.</source>
          <target state="translated">如果具有现有项目或者只想了解命令如何映射，则可以查看 <bpt id="p1">[</bpt>DNX 与 CLI 间的迁移<ept id="p1">](../migrating-from-dnx.md)</ept>主题获取所有详细信息。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Extensibility</source>
          <target state="translated">扩展性</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Of course, not every tool that you could use in your workflow will be part of the core CLI tools.</source>
          <target state="translated">当然，并非要在工作流中使用的每个工具都将成为核心 CLI 工具的一部分。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>However, .NET Core CLI has an extensibility model that allows you to specify additional tools for your projects.</source>
          <target state="translated">但是，.NET Core CLI 具备可使你为项目指定其他工具的扩展性模型。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You can find out more in the <bpt id="p1">[</bpt>.NET Core CLI extensibility model<ept id="p1">](extensibility.md)</ept> topic.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p1">[</bpt>.NET Core CLI 扩展性模型<ept id="p1">](extensibility.md)</ept>主题。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">摘要</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This was a short overview of the most important features of the CLI.</source>
          <target state="translated">本文简短改善了 CLI 最重要的功能。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You can find out more by using the reference and conceptual topics on this site.</source>
          <target state="translated">通过使用本站点上的引用和概念性主题可了解详细信息。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>There are also other resources you can use:</source>
          <target state="translated">此外，还可以使用其他资源：</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet/CLI<ept id="p1">](https://github.com/dotnet/cli/)</ept> GitHub repo</source>
          <target state="translated"><bpt id="p1">[</bpt>dotnet/CLI<ept id="p1">](https://github.com/dotnet/cli/)</ept> GitHub 存储库</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Getting started instructions<ept id="p1">](https://aka.ms/dotnetcoregs/)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>入门说明<ept id="p1">](https://aka.ms/dotnetcoregs/)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>