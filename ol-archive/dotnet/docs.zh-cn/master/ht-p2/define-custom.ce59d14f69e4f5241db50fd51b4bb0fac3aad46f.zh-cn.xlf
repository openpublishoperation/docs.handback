<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">926195e48e9653525a502cf9403ae9c205bd0fe3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\define-custom.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8a578b2399cfe91b7acaa018b32cc2f442e7ad7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5bdd8d227d37de24dd1d9e937ff8bb1cf15c0ee2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: define and use custom numeric format providers</source>
          <target state="translated">如何：定义和使用自定义数值格式提供程序</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to define and use custom numeric format providers</source>
          <target state="translated">如何定义和使用自定义数值格式提供程序</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET、.NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>How to: define and use custom numeric format providers</source>
          <target state="translated">如何：定义和使用自定义数值格式提供程序</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>.NET gives you extensive control over the string representation of numeric values.</source>
          <target state="translated">.NET 使你可以全面控制数值的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It supports the following features for customizing the format of numeric values:</source>
          <target state="translated">它支持用于自定义数值格式的以下功能：</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Standard numeric format strings, which provide a predefined set of formats for converting numbers to their string representation.</source>
          <target state="translated">标准数字格式字符串，提供一组预定义格式以用于将数字转换为其字符串表示形式。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can use them with any numeric formatting method, such as <bpt id="p1">[</bpt>Decimal.ToString(String<ept id="p1">](xref:System.Decimal.ToString(System.String))</ept>, that has a format parameter.</source>
          <target state="translated">可以将它们与具有格式参数的任何数字格式设置方法（如 <bpt id="p1">[</bpt>Decimal.ToString(String<ept id="p1">](xref:System.Decimal.ToString(System.String))</ept>）一起使用。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Standard numeric format strings<ept id="p1">](standard-numeric.md)</ept>.</source>
          <target state="translated">有关详细信息，请参见<bpt id="p1">[</bpt>标准数字格式字符串<ept id="p1">](standard-numeric.md)</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings, which provide a set of symbols that can be combined to define custom numeric format specifiers.</source>
          <target state="translated">自定义数字格式字符串，提供一组可以进行组合以定义自定义数字格式说明符的符号。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>They can also be used with any numeric formatting method, such as <bpt id="p1">[</bpt>Decimal.ToString(String<ept id="p1">](xref:System.Decimal.ToString(System.String))</ept>, that has a format parameter.</source>
          <target state="translated">它们也可以与具有格式参数的任何数字格式设置方法（如 <bpt id="p1">[</bpt>Decimal.ToString(String<ept id="p1">](xref:System.Decimal.ToString(System.String))</ept>）一起使用。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>Custom numeric format strings<ept id="p1">](custom-numeric.md)</ept>.</source>
          <target state="translated">有关详细信息，请参见<bpt id="p1">[</bpt>自定义数字格式字符串<ept id="p1">](custom-numeric.md)</ept>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Custom <bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> or <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> objects, which define the symbols and format patterns used in displaying the string representations of numeric values.</source>
          <target state="translated">自定义 <bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> 或 <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> 对象，定义用于显示数值的字符串表示形式的符号和格式模式。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use them with any numeric formatting method, such as <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Int32.ToString(System.IFormatProvider))</ept>, that has a <bpt id="p2">*</bpt>provider<ept id="p2">*</ept> parameter.</source>
          <target state="translated">可以将它们与具有提供程序参数的任何数字格式设置方法（如 <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Int32.ToString(System.IFormatProvider))</ept>）一起使用。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Typically, the <bpt id="p1">*</bpt>provider<ept id="p1">*</ept> parameter is used to specify culture-specific formatting.</source>
          <target state="translated">通常，提供程序参数用于指定特定于区域性的格式设置。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In some cases (such as when an application must display a formatted account number, an identification number, or a postal code) these three techniques are inappropriate.</source>
          <target state="translated">在某些情况下（例如当应用程序必须显示格式化帐号、标识号或邮政编码），这三种方法都不合适。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>.NET also enables you to define a formatting object that is neither a <bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> nor a <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> object to determine how a numeric value is formatted.</source>
          <target state="translated">.NET 还使你可以定义既不是 <bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> 也不是 <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> 对象的格式设置对象，以确定如何对数值设置格式。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This topic provides the step-by-step instructions for implementing such an object, and provides an example that formats telephone numbers.</source>
          <target state="translated">本主题提供用于实现这类对象的分步说明，并提供对电话号码设置格式的示例。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To define a custom format provider</source>
          <target state="translated">定义自定义格式提供程序</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Define a class that implements the <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> and <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> interfaces.</source>
          <target state="translated">定义一个实现 <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 和 <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> 接口的类。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Implement the <bpt id="p1">[</bpt>IFormatProvider.GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> method.</source>
          <target state="translated">实现 <bpt id="p1">[</bpt>IFormatProvider.GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> is a callback method that the formatting method (such as the <bpt id="p2">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p2">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> method) invokes to retrieve the object that is actually responsible for performing custom formatting.</source>
          <target state="translated"><bpt id="p1">[</bpt>GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 是格式设置方法（如 <bpt id="p2">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p2">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> 方法）为检索实际负责执行自定义格式设置的对象而调用的回调方法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A typical implementation of <bpt id="p1">[</bpt>GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> does the following:</source>
          <target state="translated"><bpt id="p1">[</bpt>GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 的典型实现执行以下任务：</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>a.</source>
          <target state="translated">a.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Determines whether the <bpt id="p1">[</bpt>Type<ept id="p1">](xref:System.Type)</ept> object passed as a method parameter represents an <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> interface.</source>
          <target state="translated">确定作为方法参数进行传递的 <bpt id="p1">[</bpt>Type<ept id="p1">](xref:System.Type)</ept> 对象是否表示 <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> 接口。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>b.</source>
          <target state="translated">b.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the parameter does represent the <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> interface, <bpt id="p2">[</bpt>GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> returns an object that implements the <bpt id="p3">[</bpt>ICustomFormatter<ept id="p3">](xref:System.ICustomFormatter)</ept> interface that is responsible for providing custom formatting.</source>
          <target state="translated">如果该参数的确表示 <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> 接口，则 <bpt id="p2">[</bpt>GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 返回一个对象，该对象实现负责提供自定义格式设置的 <bpt id="p3">[</bpt>ICustomFormatter<ept id="p3">](xref:System.ICustomFormatter)</ept> 接口。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Typically, the custom formatting object returns itself.</source>
          <target state="translated">通常，自定义格式设置对象返回其自身。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>c.</source>
          <target state="translated">c.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the parameter does not represent the <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> interface, <bpt id="p2">[</bpt>GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">如果该参数不表示 <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> 接口，则 <bpt id="p2">[</bpt>GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 返回 <ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Implement the <bpt id="p1">[</bpt>ICustomFormatter.Format<ept id="p1">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> method.</source>
          <target state="translated">实现 <bpt id="p1">[</bpt>ICustomFormatter.Format<ept id="p1">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> 方法。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This method is called by the <bpt id="p1">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> method and is responsible for returning the string representation of a number.</source>
          <target state="translated">此方法由 <bpt id="p1">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> 方法调用，负责返回数字的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Implementing the method typically involves the following:</source>
          <target state="translated">实现方法通常涉及以下步骤：</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>a.</source>
          <target state="translated">a.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Optionally, make sure that the method is legitimately intended to provide formatting services by examining the <bpt id="p1">*</bpt>provider<ept id="p1">*</ept> parameter.</source>
          <target state="translated">（可选）通过检查提供程序参数来确保该方法以合法方式用于提供格式设置服务。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For formatting objects that implement both <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> and <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept>, this involves testing the <bpt id="p3">*</bpt>provider<ept id="p3">*</ept> parameter for equality with the current formatting object.</source>
          <target state="translated">对于实现 <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 和 <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> 的对象设置格式，这涉及测试提供程序参数是否与当前格式设置对象相等。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>b.</source>
          <target state="translated">b.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Determine whether the formatting object should support custom format specifiers.</source>
          <target state="translated">确定格式设置对象是否应支持自定义格式说明符。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>(For example, an "N" format specifier might indicate that a U.S. telephone number should be output in NANP format, and an "I" might indicate output in ITU-T Recommendation E.123 format.) If format specifiers are used, the method should handle the specific format specifier.</source>
          <target state="translated">（例如，格式说明符“N”可能指示应以 NANP 格式输出美国电话号码，而“I”可能指示以 ITU-T 建议 E.123 格式进行输出。）如果使用格式说明符，则方法应处理特定格式说明符。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>It is passed to the method in the format parameter.</source>
          <target state="translated">它会在格式参数中传递给方法。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If no specifier is present, the value of the <bpt id="p1">*</bpt>format<ept id="p1">*</ept> parameter is <bpt id="p2">[</bpt>String.Empty<ept id="p2">](xref:System.String#System_String_Empty)</ept>.</source>
          <target state="translated">如果不存在说明符，则格式参数的值是 <bpt id="p2">[</bpt>String.Empty<ept id="p2">](xref:System.String#System_String_Empty)</ept>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>c.</source>
          <target state="translated">c.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Retrieve the numeric value passed to the method as the <bpt id="p1">*</bpt>arg<ept id="p1">*</ept> parameter.</source>
          <target state="translated">检索作为 arg 参数传递给方法的数值。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Perform whatever manipulations are required to convert it to its string representation.</source>
          <target state="translated">执行将它转换为其字符串表示形式所需的任何操作。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>d.</source>
          <target state="translated">d.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Return the string representation of the <bpt id="p1">*</bpt>arg<ept id="p1">*</ept> parameter.</source>
          <target state="translated">返回 arg 参数的字符串表示形式。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To use a custom numeric formatting object</source>
          <target state="translated">使用自定义数字格式设置对象</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Create a new instance of the custom formatting class.</source>
          <target state="translated">创建自定义格式设置类的新实例。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Call the <bpt id="p1">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> formatting method, passing it the custom formatting object, the formatting specifier (or <bpt id="p2">[</bpt>String.Empty<ept id="p2">](xref:System.String.Empty)</ept>, if one is not used), and the numeric value to be formatted.</source>
          <target state="translated">调用 <bpt id="p1">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> 格式设置方法，向它传递自定义格式设置对象、格式设置说明符（如果未使用，则是 <bpt id="p2">[</bpt>String.Empty<ept id="p2">](xref:System.String.Empty)</ept>）和要设置格式的数值。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following example defines a custom numeric format provider named <ph id="ph1">`TelephoneFormatter`</ph> that converts a number that represents a U.S. telephone number to its NANP or E.123 format.</source>
          <target state="translated">下面的示例定义了一个名为 <ph id="ph1">`TelephoneFormatter`</ph> 的自定义数值格式提供程序，该提供程序将代表美国电话号码的数字转化为它的 NANP 或 E.123 格式。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The method handles two format specifiers, "N" (which outputs the NANP format) and "I" (which outputs the international E.123 format).</source>
          <target state="translated">该方法处理两个格式说明符“N”（输出 NANP 格式）和“I”（输出国际 E.123 格式）。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The custom numeric format provider can be used only with the <bpt id="p1">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> method.</source>
          <target state="translated">自定义数字格式提供程序只能与 <bpt id="p1">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> 方法一起使用。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The other overloads of numeric formatting methods (such as <ph id="ph1">`ToString`</ph>) that have a parameter of type <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> all pass the <bpt id="p2">[</bpt>IFormatProvider.GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> implementation a <bpt id="p3">[</bpt>Type<ept id="p3">](xref:System.Type)</ept> object that represents the <bpt id="p4">[</bpt>NumberFormatInfo<ept id="p4">](xref:System.Globalization.NumberFormatInfo)</ept> type.</source>
          <target state="translated">具有类型为 <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 的参数的数字格式设置方法的其他重载（如 <ph id="ph1">`ToString`</ph>）都会向 <bpt id="p2">[</bpt>IFormatProvider.GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 实现传递表示 <bpt id="p4">[</bpt>NumberFormatInfo<ept id="p4">](xref:System.Globalization.NumberFormatInfo)</ept> 类型的 <bpt id="p3">[</bpt>Type<ept id="p3">](xref:System.Type)</ept> 对象。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In return, they expect the method to return a <bpt id="p1">[</bpt>NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept> object.</source>
          <target state="translated">在返回时，它们期望该方法返回 <bpt id="p1">[</bpt>NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept> 对象。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If it does not, the custom numeric format provider is ignored, and the <bpt id="p1">[</bpt>NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept> object for the current culture is used in its place.</source>
          <target state="translated">如果未返回该对象，则会忽略自定义数字格式提供程序，当前区域性的 <bpt id="p1">[</bpt>NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept> 对象在其原位置上使用。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the example, the <ph id="ph1">`TelephoneFormatter.GetFormat`</ph> method handles the possibility that it may be inappropriately passed to a numeric formatting method by examining the method parameter and returning <bpt id="p1">*</bpt>null<ept id="p1">*</ept> if it represents a type other than <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept>.</source>
          <target state="translated">在示例中， <ph id="ph1">`TelephoneFormatter.GetFormat`</ph> 方法会检查方法参数并在它表示 <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> 之外的类型时返回 null，从而处理可能不恰当地传递给数字格式设置方法的可能性。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If a custom numeric format provider supports a set of format specifiers, make sure you provide a default behavior if no format specifier is supplied in the format item used in the <bpt id="p1">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> method call.</source>
          <target state="translated">如果自定义数字格式提供程序支持一组格式说明符，则确保在 <bpt id="p1">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> 方法调用中使用的格式项中未提供格式说明符时，提供默认行为。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In the example, "N" is the default format specifier.</source>
          <target state="translated">在示例中，“N”是默认格式说明符。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This allows for a number to be converted to a formatted telephone number by providing an explicit format specifier.</source>
          <target state="translated">这使数字可以通过提供显式格式说明符来转换为格式化电话号码。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The following example illustrates such a method call.</source>
          <target state="translated">下面的示例演示了此类方法调用。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>But it also allows the conversion to occur if no format specifier is present.</source>
          <target state="translated">但是它还允许在不存在格式说明符时进行转换。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following example illustrates such a method call.</source>
          <target state="translated">下面的示例演示了此类方法调用。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If no default format specifier is defined, your implementation of the <bpt id="p1">[</bpt>ICustomFormatter.Format<ept id="p1">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> method should include code such as the following so that .NET can provide formatting that your code does not support.</source>
          <target state="translated">如果未定义默认格式说明符，则 <bpt id="p1">[</bpt>ICustomFormatter.Format<ept id="p1">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> 方法的实现应包含如下所示的代码，以便 .NET 可以提供代码不支持的格式设置。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In the case of this example, the method that implements <bpt id="p1">[</bpt>ICustomFormatter.Format<ept id="p1">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> is intended to serve as a callback method for the <bpt id="p2">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p2">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> method.</source>
          <target state="translated">对于此示例，实现 <bpt id="p1">[</bpt>ICustomFormatter.Format<ept id="p1">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> 的方法旨在用作 <bpt id="p2">[</bpt>String.Format(IFormatProvider,String,Object[])<ept id="p2">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> 方法的回调方法。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Therefore, it examines the <bpt id="p1">*</bpt>formatProvider<ept id="p1">*</ept> parameter to determine whether it contains a reference to the current <ph id="ph1">`TelephoneFormatter`</ph> object.</source>
          <target state="translated">因此，它会检查 formatProvider 参数，以确定它是否包含对当前 <ph id="ph1">`TelephoneFormatter`</ph> 对象的引用。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>However, the method can also be called directly from code.</source>
          <target state="translated">但是，也可以直接从代码调用该方法。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In that case, you can use the <bpt id="p1">*</bpt>formatProvider <ept id="p1">*</ept>parameter to provide a <bpt id="p2">[</bpt>CultureInfo<ept id="p2">](xref:System.Globalization.CultureInfo)</ept> or <bpt id="p3">[</bpt>NumberFormatInfo<ept id="p3">](xref:System.Globalization.NumberFormatInfo)</ept> object that supplies culture-specific formatting information.</source>
          <target state="translated">在这种情况下，可以使用 formatProvider 参数提供用于提供特定于区域性的格式设置信息的 <bpt id="p2">[</bpt>CultureInfo<ept id="p2">](xref:System.Globalization.CultureInfo)</ept> 或 <bpt id="p3">[</bpt>NumberFormatInfo<ept id="p3">](xref:System.Globalization.NumberFormatInfo)</ept> 对象。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Performing formatting operations<ept id="p1">](performing-formatting-operations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>执行格式设置操作<ept id="p1">](performing-formatting-operations.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>