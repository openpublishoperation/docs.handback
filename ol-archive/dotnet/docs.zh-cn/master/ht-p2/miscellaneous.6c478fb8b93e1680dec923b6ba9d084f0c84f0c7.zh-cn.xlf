<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">477332f4009790727686aa3d91e35509e3766903</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\miscellaneous.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c5526408c9d108a33e0b5a1e364ec550f2280efc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68a4f59640fc3cba6f82868d3a817769e3337b65</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Miscellaneous constructs in regular expressions</source>
          <target state="translated">正则表达式中的其他构造</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Miscellaneous constructs in regular expressions</source>
          <target state="translated">正则表达式中的其他构造</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET、.NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Miscellaneous constructs in regular expressions</source>
          <target state="translated">正则表达式中的其他构造</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Regular expressions in .NET include three miscellaneous language constructs.</source>
          <target state="translated">.NET 中的正则表达式包括三个其他语言构造。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>One lets you enable or disable particular matching options in the middle of a regular expression pattern.</source>
          <target state="translated">其中一个使你可以在正则表达式模式中间启用或禁用特定匹配选项。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The remaining two let you include comments in a regular expression.</source>
          <target state="translated">其余两个使你可以在正则表达式中包含注释。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Inline Options</source>
          <target state="translated">内联选项</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can set or disable specific pattern matching options for part of a regular expression by using the syntax</source>
          <target state="translated">可以使用语法为正则表达式的一部分设置或禁用特定模式匹配选项</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You list the options you want to enable after the question mark, and the options you want to disable after the minus sign.</source>
          <target state="translated">在问号后列出要启用的选项，在负号后列出要禁用的选项。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following table describes each option.</source>
          <target state="translated">下表对每个选项进行了描述。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information about each option, see <bpt id="p1">[</bpt>Regular expression options<ept id="p1">](options.md)</ept>.</source>
          <target state="translated">有关每个选项的更多信息，请参见<bpt id="p1">[</bpt>正则表达式选项<ept id="p1">](options.md)</ept>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">选项</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>i<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>i<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Case-insensitive matching.</source>
          <target state="translated">不区分大小写的匹配。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>m<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>m<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Multiline mode.</source>
          <target state="translated">多行模式。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>n<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>n<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Explicit captures only.</source>
          <target state="translated">仅显式捕获。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>(Parentheses do not act as capturing groups.)</source>
          <target state="translated">（圆括号不充当捕获组。）</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>s<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>s<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Single-line mode.</source>
          <target state="translated">单行模式。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>x<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>x<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Ignore unescaped white space, and allow x-mode comments.</source>
          <target state="translated">忽略未转义空格，并允许 x 模式注释。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Any change in regular expression options defined by the <bpt id="p1">**</bpt>(?imnsx-imnsx)<ept id="p1">**</ept> construct remains in effect until the end of the enclosing group.</source>
          <target state="translated"><bpt id="p1">**</bpt>(?imnsx-imnsx)<ept id="p1">**</ept> 构造定义的正则表达式选项中的任何更改在封闭组结束前一直保持有效。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>(?imnsx-imnsx<ept id="p1">**</ept>:<bpt id="p2">_</bpt>subexpression<ept id="p2">_</ept><bpt id="p3">**</bpt>)<ept id="p3">**</ept> grouping construct provides identical functionality for a subexpression.</source>
          <target state="translated"><bpt id="p1">**</bpt>(?imnsx-imnsx<ept id="p1">**</ept>:<bpt id="p2">_</bpt>subexpression<ept id="p2">_</ept><bpt id="p3">**</bpt>)<ept id="p3">**</ept> 分组构造为子表达式提供相同的功能。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Grouping constructs in regular expressions<ept id="p1">](grouping.md)</ept>.</source>
          <target state="translated">有关更多信息，请参见<bpt id="p1">[</bpt>正则表达式中的分组构造<ept id="p1">](grouping.md)</ept>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">**</bpt>i<ept id="p1">**</ept>, <bpt id="p2">**</bpt>n<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>x<ept id="p3">**</ept> options to enable case insensitivity and explicit captures, and to ignore white space in the regular expression pattern in the middle of a regular expression.</source>
          <target state="translated">下面的示例使用 <bpt id="p1">**</bpt>i<ept id="p1">**</ept>、<bpt id="p2">**</bpt>n<ept id="p2">**</ept> 和 <bpt id="p3">**</bpt>x<ept id="p3">**</ept> 选项启用不区分大小写和显式捕获，并忽略正则表达式中间的正则表达式模式中的空格。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The example defines two regular expressions.</source>
          <target state="translated">该示例定义两个正则表达式。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The first, <ph id="ph1">`\b(D\w+)\s(d\w+)\b`</ph>, matches two consecutive words that begin with an uppercase "D" and a lowercase "d".</source>
          <target state="translated">第一个 <ph id="ph1">`\b(D\w+)\s(d\w+)\b`</ph> 匹配以一个大写“D”和一个小写“d”开头的两个连续单词。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The second regular expression, <ph id="ph1">`\b(D\w+)(?ixn) \s (d\w+) \b`</ph>, uses inline options to modify this pattern, as described in the following table.</source>
          <target state="translated">第二个正则表达式 <ph id="ph1">`\b(D\w+)(?ixn) \s (d\w+) \b`</ph> 使用内联选项修改此模式，如下表所述。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A comparison of the results confirms the effect of the <ph id="ph1">`(?ixn)`</ph> construct.</source>
          <target state="translated">结果的比较会确认 <ph id="ph1">`(?ixn)`</ph> 构造的效果。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">模式</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Start at a word boundary.</source>
          <target state="translated">在单词边界处开始。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Match a capital "D" followed by one or more word characters.</source>
          <target state="translated">匹配后跟一个或多个单词字符的大写“D”。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This is the first capture group.</source>
          <target state="translated">这是第一个捕获组。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>From this point on, make comparisons case-insensitive, make only explicit captures, and ignore white space in the regular expression pattern.</source>
          <target state="translated">从此处起，使比较不区分大小写，仅进行显式捕获，以及忽略正则表达式模式中的空格。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Match a white-space character.</source>
          <target state="translated">与空白字符匹配。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Match an uppercase or lowercase "d" followed by one or more word characters.</source>
          <target state="translated">匹配后跟一个或多个单词字符的大写或小写“d”。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This group is not captured because the n (explicit capture) option was enabled..</source>
          <target state="translated">因为 n（显式捕获）选项已启用，所以不会捕获此组。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Match a word boundary.</source>
          <target state="translated">与字边界匹配。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Inline Comment</source>
          <target state="translated">内联注释</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>(?#<ept id="p1">**</ept> <bpt id="p2">_</bpt>comment<ept id="p2">_</ept><bpt id="p3">**</bpt>)<ept id="p3">**</ept> construct lets you include an inline comment in a regular expression.</source>
          <target state="translated"><bpt id="p1">**</bpt>(?#<ept id="p1">**</ept> <bpt id="p2">_</bpt>comment<ept id="p2">_</ept><bpt id="p3">**</bpt>)<ept id="p3">**</ept> 构造可用于在正则表达式中包括内联注释。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The regular expression engine does not use any part of the comment in pattern matching, although the comment is included in the string that is returned by the <bpt id="p1">[</bpt>Regex.ToString<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Unescape(System.String))</ept> method.</source>
          <target state="translated">正则表达式引擎在模式匹配中不使用注释的任何部分，不过注释仍包含 <bpt id="p1">[</bpt>Regex.ToString<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Unescape(System.String))</ept> 返回的字符串中。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The comment ends at the first closing parenthesis.</source>
          <target state="translated">该注释在第一个右括号处终止。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following example repeats the first regular expression pattern from the example in the previous section.</source>
          <target state="translated">下面的示例重复了上一部分的示例中的第一个正则表达式模式。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>It adds two inline comments to the regular expression to indicate whether the comparison is case-sensitive.</source>
          <target state="translated">它将两个内联注释添加到该正则表达式，以指示比较是否区分大小写。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The regular expression pattern, <ph id="ph1">`\b((?# case-sensitive comparison)D\w+)\s((?#case-insensitive comparison)d\w+)\b`</ph>, is defined as follows.</source>
          <target state="translated">正则表达式模式 <ph id="ph1">`\b((?# case-sensitive comparison)D\w+)\s((?#case-insensitive comparison)d\w+)\b`</ph> 按以下方式定义。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">模式</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Start at a word boundary.</source>
          <target state="translated">在单词边界处开始。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A comment.</source>
          <target state="translated">注释。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>It does not affect pattern-matching behavior.</source>
          <target state="translated">它不影响模式匹配行为。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Match a capital "D" followed by one or more word characters.</source>
          <target state="translated">匹配后跟一个或多个单词字符的大写“D”。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This is the first capturing group.</source>
          <target state="translated">这是第一个捕获组。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Match a white-space character.</source>
          <target state="translated">与空白字符匹配。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>`From this point on, make comparisons case-insensitive, make only explicit captures, and ignore white space in the regular expression pattern.</source>
          <target state="translated">从此处起，使比较不区分大小写，仅进行显式捕获，以及忽略正则表达式模式中的空格。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A comment.</source>
          <target state="translated">注释。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>It does not affect pattern-matching behavior.</source>
          <target state="translated">它不影响模式匹配行为。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Match an uppercase or lowercase "d" followed by one or more word characters.</source>
          <target state="translated">匹配后跟一个或多个单词字符的大写或小写“d”。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This is the second capture group.</source>
          <target state="translated">这是第二个捕获组。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Match a word boundary.</source>
          <target state="translated">与字边界匹配。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>End-of-Line Comment</source>
          <target state="translated">行尾注释</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A number sign (<bpt id="p1">**</bpt><ph id="ph1">#</ph><ept id="p1">**</ept>) marks an x-mode comment, which starts at the unescaped # character at the end of the regular expression pattern and continues until the end of the line.</source>
          <target state="translated">数字符号 (<bpt id="p1">**</bpt><ph id="ph1">#</ph><ept id="p1">**</ept>) 会标记 x 模式注释，该模式从正则表达式模式末尾的未转义 # 字符开始，并继续到行尾。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>To use this construct, you must either enable the <bpt id="p1">**</bpt>x<ept id="p1">**</ept> option (through inline options) or supply the <bpt id="p2">[</bpt>RegexOptions.IgnorePatternWhitespace<ept id="p2">](xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace)</ept> value to the <bpt id="p3">*</bpt>option<ept id="p3">*</ept> parameter when instantiating the <bpt id="p4">[</bpt>Regex<ept id="p4">](xref:System.Text.RegularExpressions.Regex)</ept> object or calling a static <bpt id="p5">[</bpt>Regex<ept id="p5">](xref:System.Text.RegularExpressions.Regex)</ept> method.</source>
          <target state="translated">若要使用此构造，必须启用 <bpt id="p1">**</bpt>x<ept id="p1">**</ept> 选项（通过内联选项），或在实例化 <bpt id="p4">[</bpt>Regex<ept id="p4">](xref:System.Text.RegularExpressions.Regex)</ept> 对象或调用静态 <bpt id="p5">[</bpt>Regex<ept id="p5">](xref:System.Text.RegularExpressions.Regex)</ept> 方法时向 option 参数提供 <bpt id="p2">[</bpt>RegexOptions.IgnorePatternWhitespace<ept id="p2">](xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace)</ept> 值。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The following example illustrates the end-of-line comment construct.</source>
          <target state="translated">下面的示例说明行尾注释构造。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>It determines whether a string is a composite format string that includes at least one format item.</source>
          <target state="translated">它确定字符串是否为包含至少一个格式项的复合格式字符串。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The following table describes the constructs in the regular expression pattern:</source>
          <target state="translated">下表描述了正则表达式模式中的构造：</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`\{\d+(,-*\d+)*(\:\w{1,4}?)*\}(?x) # Looks for a composite format item`</ph>.</source>
          <target state="translated"><ph id="ph1">`\{\d+(,-*\d+)*(\:\w{1,4}?)*\}(?x) # Looks for a composite format item`</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">模式</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Match an opening brace.</source>
          <target state="translated">匹配左大括号。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Match one or more decimal digits.</source>
          <target state="translated">匹配一个或多个十进制数字。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Match zero or one occurrence of a comma, followed by an optional minus sign, followed by one or more decimal digits.</source>
          <target state="translated">与零个或一个后跟一个可选负号、再后跟一个或多个十进制数字的冒号匹配。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Match zero or one occurrence of a colon, followed by one to four, but as few as possible, white-space characters.</source>
          <target state="translated">与零个或一个后跟一到四个（但尽可能少）空白字符的冒号匹配。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An inline comment.</source>
          <target state="translated">内联注释。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>It has no effect on pattern-matching behavior.</source>
          <target state="translated">它对模式匹配行为没有影响。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Match a closing brace.</source>
          <target state="translated">匹配右大括号。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Enable the ignore pattern white-space option so that the end-of-line comment will be recognized.</source>
          <target state="translated">启用忽略模式空格选项，以便识别行尾注释。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An end-of-line comment.</source>
          <target state="translated">行尾注释。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Note that, instead of providing the <ph id="ph1">`(?x)`</ph> construct in the regular expression, the comment could also have been recognized by calling the <bpt id="p1">[</bpt>Regex.IsMatch(String, String, RegexOptions)<ept id="p1">](xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions))</ept> method and passing it the <bpt id="p2">[</bpt>RegexOptions.IgnorePatternWhitespace<ept id="p2">](xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace)</ept> enumeration value.</source>
          <target state="translated">请注意，还可以通过调用 <bpt id="p1">[</bpt>Regex.IsMatch(String, String, RegexOptions)<ept id="p1">](xref:System.Text.RegularExpressions.Regex.IsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions))</ept> 方法并向它传递 <bpt id="p2">[</bpt>RegexOptions.IgnorePatternWhitespace<ept id="p2">](xref:System.Text.RegularExpressions.RegexOptions.IgnorePatternWhitespace)</ept> 枚举值来识别注释，而不是在正则表达式中提供 <ph id="ph1">`(?x)`</ph> 构造。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Regular expression language - quick reference<ept id="p1">](quick-ref.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>正则表达式语言 - 快速参考<ept id="p1">](quick-ref.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>