<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b5c25fc" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17c2db54f871795c370a6475c21e36736a6b46c3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\dotnet-build.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e6e78c0a20a04b44c7ad36608e956ce0b56826b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19f335ea5cea3ffced36bb3eaf770360555ce40f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-build command | Microsoft Docs</source>
          <target state="translated">dotnet-build 命令 | Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-build command builds a project and all of its dependencies.</source>
          <target state="translated">dotnet-build 命令會建置專案和其所有相依性。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-build, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-build, CLI, CLI 命令, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-build</source>
          <target state="translated">dotnet-build</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">名稱</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet-build`</ph> - Builds a project and all of its dependencies.</source>
          <target state="translated"><ph id="ph1">`dotnet-build`</ph> - 建置專案和其所有相依性。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">概要</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet build`</ph> command builds the project and its dependencies into a set of binaries.</source>
          <target state="translated"><ph id="ph1">`dotnet build`</ph> 命令會將專案及其相依性建置成一組二進位檔。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The binaries are the symbol files used for debugging (having a <ph id="ph1">`*.pdb`</ph> extension) as well as the project's code in Intermediate Language (IL) with a <ph id="ph2">`*.dll`</ph> extension.</source>
          <target state="translated">這些二進位檔包括用於偵錯的符號檔 (具有 <ph id="ph1">`*.pdb`</ph> 副檔名)，以及中繼語言 (IL) 中的專案程式碼 (副檔名為 <ph id="ph2">`*.dll`</ph>)。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Additionally, a JSON file that lists out the dependencies of the application with the <ph id="ph1">`*.deps.json`</ph> extension will be produced.</source>
          <target state="translated">另外會產生 JSON 檔案，該檔案會列出應用程式的所有相依性 (副檔名為 <ph id="ph1">`*.deps.json`</ph>)。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Finally, a <ph id="ph1">`runtime.config.json`</ph> file will be produced as well.</source>
          <target state="translated">最後，還會產生 <ph id="ph1">`runtime.config.json`</ph> 檔案。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This file specifies which shared runtime and version the built code will run against.</source>
          <target state="translated">此檔案會指定所建置之程式碼將執行的共用執行階段和版本。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the project has third-party dependencies, such as libraries from NuGet, these will be resolved from the NuGet cache and will not be available with the project's built output.</source>
          <target state="translated">如果專案具有協力廠商相依性 (例如來自 NuGet 的程式庫)，這些相依性將會從 NuGet 快取解析，而不會透過專案的建置輸出提供。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>With that in mind, the product of <ph id="ph1">`dotnet build`</ph> is not ready to be transferred to another machine to run.</source>
          <target state="translated">因此，<ph id="ph1">`dotnet build`</ph> 的結果尚未準備好轉移到另一部電腦開始執行。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This is in contrast to the behavior of .NET Framework in which building an executable project (an application) will produce an output that is possible to run on any machine that has .NET Framework installed.</source>
          <target state="translated">這與 .NET Framework 的行為相反；在 .NET Framework 中，建置可執行檔專案 (應用程式) 將會產生可在任何已安裝 .NET Framework 的電腦上執行的輸出。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In order to get a similar experience in .NET Core, you have to use the <bpt id="p1">[</bpt>dotnet publish<ept id="p1">](dotnet-publish.md)</ept> command.</source>
          <target state="translated">若要在 .NET Core 中取得類似體驗，您必須使用 <bpt id="p1">[</bpt>dotnet publish<ept id="p1">](dotnet-publish.md)</ept> 命令。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>More information about this can be found in the <bpt id="p1">[</bpt>.NET Core Application Deployment<ept id="p1">](../deploying/index.md)</ept> document.</source>
          <target state="translated">您可以在 <bpt id="p1">[</bpt>.NET Core 應用程式部署<ept id="p1">](../deploying/index.md)</ept>文件中找到詳細資訊。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Building requires the existence of an <bpt id="p1">*</bpt>assets.json<ept id="p1">*</ept> file (a file that lists all of the dependencies of your application), which means that you have to run <bpt id="p2">[</bpt><ph id="ph1">`dotnet restore`</ph><ept id="p2">](dotnet-restore.md)</ept> prior to building the project.</source>
          <target state="translated">建置會要求 <bpt id="p1">*</bpt>assets.json<ept id="p1">*</ept> 檔案 (列出應用程式所有相依性的檔案) 確實存在，這表示您必須先執行 <bpt id="p2">[</bpt><ph id="ph1">`dotnet restore`</ph><ept id="p2">](dotnet-restore.md)</ept>，才能建置專案。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Lack of the assets file manifests as the inability of the tooling to resolve reference assemblies which will result in errors.</source>
          <target state="translated">缺乏資產檔案表示工具無法解析發生錯誤的參考組件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet build`</ph> uses MSBuild to build the project, thus it supports both parallel builds and incremental builds.</source>
          <target state="translated"><ph id="ph1">`dotnet build`</ph> 使用 MSBuild 來建置專案，因此同時支援平行組建和累加組建。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Please refer to <bpt id="p1">[</bpt>MSBuild documentation<ept id="p1">](https://docs.microsoft.com/visualstudio/msbuild/msbuild)</ept> to get more information on those topics.</source>
          <target state="translated">請參閱 <bpt id="p1">[</bpt>MSBuild 文件<ept id="p1">](https://docs.microsoft.com/visualstudio/msbuild/msbuild)</ept>以取得這些主題的詳細資訊。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In addition to its options, the <ph id="ph1">`dotnet build`</ph> command will accept MSBuild options as well, such as <ph id="ph2">`/p`</ph> for setting properties or <ph id="ph3">`/l`</ph> to define a logger.</source>
          <target state="translated">除了其選項，<ph id="ph1">`dotnet build`</ph> 命令也接受 MSBuild 選項，例如用於設定屬性的 <ph id="ph2">`/p`</ph>，以及用於定義記錄器的 <ph id="ph3">`/l`</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can find out more about these options in the <bpt id="p1">[</bpt><ph id="ph1">`dotnet msbuild`</ph><ept id="p1">](dotnet-msbuild.md)</ept> command documentation.</source>
          <target state="translated">您可以在 <bpt id="p1">[</bpt><ph id="ph1">`dotnet msbuild`</ph><ept id="p1">](dotnet-msbuild.md)</ept> 命令文件中深入了解這些選項。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you wish to know when</source>
          <target state="translated">如果您想要知道何時</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Whether the project is executable or not is determined by the <ph id="ph1">`&lt;OutputType&gt;`</ph> property in the project file.</source>
          <target state="translated">專案是否為可執行檔可透過專案檔中的 <ph id="ph1">`&lt;OutputType&gt;`</ph> 屬性來判斷。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following example shows a project that will produce executable code:</source>
          <target state="translated">下列範例顯示將產生可執行程式碼的專案：</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In order to produce a library, simply omit that property.</source>
          <target state="translated">若要產生程式庫，只要省略該屬性即可。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The main difference in output is that the IL DLL for a library will not contain any entry points and it will not be possible to execute it.</source>
          <target state="translated">輸出中的主要差異在於程式庫的 IL DLL 將不會包含任何進入點，而且無法執行。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">引數</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The project file to build.</source>
          <target state="translated">要建置的專案檔。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If a project file is not specified, MSBuild searches the current working directory for a file that has a file extension that ends in <ph id="ph1">`proj`</ph> and uses that file.</source>
          <target state="translated">如果未指定專案檔，MSBuild 會搜尋目前工作目錄中副檔名結尾為 <ph id="ph1">`proj`</ph> 的檔案，並使用該檔案。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">選項</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">印出命令的簡短說明。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Directory in which to place the built binaries.</source>
          <target state="translated">在其中放置已建置的二進位檔的目錄。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You also need to define <ph id="ph1">`--framework`</ph> when you specify this option.</source>
          <target state="translated">當您指定這個選項時，也需要定義 <ph id="ph1">`--framework`</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Compiles for a specific framework.</source>
          <target state="translated">針對特定架構進行編譯。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The framework needs to be defined in the <bpt id="p1">[</bpt>project file<ept id="p1">](csproj.md)</ept>.</source>
          <target state="translated">架構必須定義於<bpt id="p1">[</bpt>專案檔<ept id="p1">](csproj.md)</ept>中。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Defines a configuration under which to build.</source>
          <target state="translated">定義用來建置的組態。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If omitted, it defaults to <ph id="ph1">`Debug`</ph>.</source>
          <target state="translated">如果省略，會預設為 <ph id="ph1">`Debug`</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Target runtime to build for.</source>
          <target state="translated">要建置的目標執行階段。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For a list of Runtime Identifiers (RIDs) you can use, see the <bpt id="p1">[</bpt>RID catalog<ept id="p1">](../rid-catalog.md)</ept>.</source>
          <target state="translated">如需您可以使用的執行階段識別項 (RID) 清單，請參閱 <bpt id="p1">[</bpt>RID 目錄<ept id="p1">](../rid-catalog.md)</ept>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Defines what <ph id="ph1">`*`</ph> should be replaced with in the version field in the project file.</source>
          <target state="translated">定義專案檔的 version 欄位中應該取代的 <ph id="ph1">`*`</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The format follows NuGet's version guidelines.</source>
          <target state="translated">格式遵循 NuGet 的版本指導方針。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Marks the build as unsafe for incremental build.</source>
          <target state="translated">針對累加建置，將建置標示為不安全。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This turns off incremental compilation and forces a clean rebuild of the project dependency graph.</source>
          <target state="translated">這會關閉累加編譯，並強制全新重建專案相依性圖形。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Ignores project-to-project references and only builds the root project specified to build.</source>
          <target state="translated">忽略專案對專案參考，並且只會建置指定要建置的根專案。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Sets the verbosity level of the command.</source>
          <target state="translated">設定命令的詳細資訊層級。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Allowed values are <ph id="ph1">`q[uiet]`</ph>, <ph id="ph2">`m[inimal]`</ph>, <ph id="ph3">`n[ormal]`</ph>, <ph id="ph4">`d[etailed]`</ph>, and <ph id="ph5">`diag[nostic]`</ph>.</source>
          <target state="translated">允許的值為 <ph id="ph1">`q[uiet]`</ph>、<ph id="ph2">`m[inimal]`</ph>、<ph id="ph3">`n[ormal]`</ph>、<ph id="ph4">`d[etailed]`</ph> 和 <ph id="ph5">`diag[nostic]`</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Build a project and its dependencies:</source>
          <target state="translated">建置專案和其相依性：</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Build a project and its dependencies using Release configuration:</source>
          <target state="translated">使用發行組態來建置專案和其相依性︰</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Build a project and its dependencies for a specific runtime (in this example, Ubuntu 16.04):</source>
          <target state="translated">針對特定執行階段，建置專案和其相依性 (在此範例中為 Ubuntu 16.04)：</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>