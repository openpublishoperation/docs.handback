<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b5c25fc" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5872201f705c07bf692d0dc7f962068632f6b540</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\migration\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1a8b6220634b48f903457109f8354e4dbf515aed</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b5a17d825dd7004db86fc4c3e46ee8af797ef7c8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>.NET Core migration to the csproj format | Microsoft Docs</source>
          <target state="translated">將 .NET Core 移轉至 csproj 格式 | Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>.NET Core project.json to csproj migration</source>
          <target state="translated">將 .NET Core project.json 移轉至 csproj</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core, .NET Core migration</source>
          <target state="translated">.NET, .NET Core, .NET Core 移轉</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Migrating .NET Core projects to the .csproj format</source>
          <target state="translated">將 .NET Core 專案移轉至 .csproj 格式</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This document will cover migration scenarios for .NET Core projects and will go over the following three migration scenarios:</source>
          <target state="translated">本文將討論 .NET Core 專案的移轉案例，並將介紹下列三種移轉案例：</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Migration from a valid latest schema of <bpt id="p2">*</bpt>project.json<ept id="p2">*</ept> to <bpt id="p3">*</bpt>csproj<ept id="p3">*</ept><ept id="p1">](#migration-from-projectjson-to-csproj)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>從 <bpt id="p2">*</bpt>project.json<ept id="p2">*</ept> 的有效最新結構描述移轉至 <bpt id="p3">*</bpt>csproj<ept id="p3">*</ept><ept id="p1">](#migration-from-projectjson-to-csproj)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Migration from DNX to csproj<ept id="p1">](#migration-from-dnx-to-csproj)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>從 DNX 移轉至 csproj<ept id="p1">](#migration-from-dnx-to-csproj)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Migration from RC3 and previous .NET Core csproj projects to the final format<ept id="p1">](#migration-from-earlier-net-core-csproj-formats-to-rtm-csproj)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>從 RC3 和舊版 .NET Core csproj 專案移轉至最終格式<ept id="p1">](#migration-from-earlier-net-core-csproj-formats-to-rtm-csproj)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Migration from project.json to csproj</source>
          <target state="translated">從 project.json 移轉至 csproj</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Migration from <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> to <bpt id="p2">*</bpt>.csproj<ept id="p2">*</ept> can be done using one of the following methods:</source>
          <target state="translated">您可以使用下列其中一種方法從 <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> 移轉至 <bpt id="p2">*</bpt>.csproj<ept id="p2">*</ept>：</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Visual Studio 2017<ept id="p1">](#visual-studio-2017)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Visual Studio 2017<ept id="p1">](#visual-studio-2017)</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet migrate command-line tool<ept id="p1">](#dotnet-migrate)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>dotnet migrate 命令列工具<ept id="p1">](#dotnet-migrate)</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Both methods use the same underlying engine to migrate the projects, so the results will be the same for both.</source>
          <target state="translated">這兩種方法使用相同的基礎引擎來移轉專案，因此結果會相同。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In most cases, using one of these two ways to migrate the <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> to <bpt id="p2">*</bpt>csproj<ept id="p2">*</ept> is the only thing that is needed and no further manual editing of the project file is necessary.</source>
          <target state="translated">在大部分情況下，您只需要使用這兩種方式之一即可將 <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> 移轉至 <bpt id="p2">*</bpt>csproj<ept id="p2">*</ept>，而不需要進一步手動編輯專案檔。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The resulting <bpt id="p1">*</bpt>.csproj<ept id="p1">*</ept> file will be named the same as the containing directory name.</source>
          <target state="translated">所產生的 <bpt id="p1">*</bpt>.csproj<ept id="p1">*</ept> 檔案將會以包含目錄的相同名稱命名。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Visual Studio 2017</source>
          <target state="translated">Visual Studio 2017</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When you open a <bpt id="p1">*</bpt>.xproj<ept id="p1">*</ept> file or a solution file which references <bpt id="p2">*</bpt>.xproj<ept id="p2">*</ept> files, the <bpt id="p3">**</bpt>One-way upgrade<ept id="p3">**</ept> dialog appears.</source>
          <target state="translated">當您開啟 <bpt id="p1">*</bpt>.xproj<ept id="p1">*</ept> 檔或參考 <bpt id="p2">*</bpt>.xproj<ept id="p2">*</ept> 檔的方案檔時，[單向升級] 對話方塊會隨即出現。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The dialog displays the projects to be migrated.</source>
          <target state="translated">此對話方塊會顯示要移轉的專案。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you open a solution file, all the projects specified in the solution file will be listed.</source>
          <target state="translated">如果您開啟方案檔，則會列出方案檔中指定的所有專案。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Review the list of projects to be migrated and select <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
          <target state="translated">檢閱要移轉的專案清單，然後選取 [確定]。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>One-way upgrade dialog showing the list of projects to be migrated</source>
          <target state="translated">[單向升級] 對話方塊顯示要移轉的專案清單</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Visual Studio will migrate the projects chosen automatically.</source>
          <target state="translated">Visual Studio 會自動移轉所選擇的專案。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When migrating a solution, if you don't choose all projects, the same dialog will appear asking you to upgrade the remaining projects from that solution.</source>
          <target state="translated">移轉方案時，如果您未選擇所有專案，則會出現相同的對話方塊，請您升級該方案中的其餘專案。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Files that were migrated (<bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>, <bpt id="p2">*</bpt>global.json<ept id="p2">*</ept>, <bpt id="p3">*</bpt>.xproj<ept id="p3">*</ept> and solution file) will be moved to a <bpt id="p4">*</bpt>Backup<ept id="p4">*</ept> folder.</source>
          <target state="translated">已移轉的檔案 (<bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>、<bpt id="p2">*</bpt>global.json<ept id="p2">*</ept>、<bpt id="p3">*</bpt>.xproj<ept id="p3">*</ept> 和方案檔) 將會移至「備份」資料夾。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The solution file that is migrated will be upgraded to Visual Studio 2017 and you won't be able to open that solution file in previous versions of Visual Studio.</source>
          <target state="translated">移轉的方案檔將會升級為 Visual Studio 2017，您將無法在舊版 Visual Studio 中開啟該方案檔。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A file named <bpt id="p1">*</bpt>UpgradeLog.htm<ept id="p1">*</ept> is also saved and automatically opened that contains a migration report.</source>
          <target state="translated">此外，也會儲存並自動開啟名為 <bpt id="p1">*</bpt>UpgradeLog.htm<ept id="p1">*</ept> 的檔案，其中包含移轉報告。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The new tooling is not available in Visual Studio 2015, so you cannot migrate your projects using that version of Visual Studio.</source>
          <target state="translated">Visual Studio 2015 中未提供此新工具，因此您無法使用該版 Visual Studio 來移轉專案。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>dotnet migrate</source>
          <target state="translated">dotnet migrate</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In the command-line scenario, you can use the <bpt id="p1">[</bpt><ph id="ph1">`dotnet migrate`</ph><ept id="p1">](../tools/dotnet-migrate.md)</ept> command.</source>
          <target state="translated">在命令列案例中，您可以使用 <bpt id="p1">[</bpt><ph id="ph1">`dotnet migrate`</ph><ept id="p1">](../tools/dotnet-migrate.md)</ept> 命令。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It will migrate a project, a solution or a set of folders in that order, depending on which ones were found.</source>
          <target state="translated">它將會根據找到的先後順序，依序移轉專案、方案或一組資料夾。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When you migrate a project, the project and all its dependencies are migrated.</source>
          <target state="translated">當您移轉專案時，會移轉專案及其所有相依性。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Files that were migrated (<bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>, <bpt id="p2">*</bpt>global.json<ept id="p2">*</ept> and <bpt id="p3">*</bpt>.xproj<ept id="p3">*</ept>) will be moved to a <bpt id="p4">*</bpt>backup<ept id="p4">*</ept> folder.</source>
          <target state="translated">已移轉的檔案 (<bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>、<bpt id="p2">*</bpt>global.json<ept id="p2">*</ept> 和 <bpt id="p3">*</bpt>.xproj<ept id="p3">*</ept>) 將會移至「備份」資料夾。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If you are using VS Code, the <ph id="ph1">`dotnet migrate`</ph> command will not modify VS Code-specific files such as <ph id="ph2">`tasks.json`</ph>.</source>
          <target state="translated">如果您使用 VS Code，<ph id="ph1">`dotnet migrate`</ph> 命令不會修改 VS Code 特定的檔案，例如 <ph id="ph2">`tasks.json`</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>These files need to be changed manually.</source>
          <target state="translated">這些檔案必須以手動方式變更。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This is also true if you are using Project Ryder or any editor or Integrated Development Environment (IDE) other than Visual Studio.</source>
          <target state="translated">這也適用於使用 Project Ryder 或是 Visual Studio 以外的任何編輯器或整合式開發環境 (IDE) 的情況。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Common issues</source>
          <target state="translated">常見問題</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you get an error: “No executable found matching command dotnet-migrate":</source>
          <target state="translated">如果您收到錯誤：「找不到符合命令 dotnet-migrate 的可執行檔」：</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Run <ph id="ph1">`dotnet --version`</ph> to see which version you are using.</source>
          <target state="translated">執行 <ph id="ph1">`dotnet --version`</ph> 以查看您所使用的版本。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">`dotnet migrate`</ph><ept id="p1">](../tools/dotnet-migrate.md)</ept> requires .NET Core CLI RC3 or higher.</source>
          <target state="translated"><bpt id="p1">[</bpt><ph id="ph1">`dotnet migrate`</ph><ept id="p1">](../tools/dotnet-migrate.md)</ept> 需要 .NET Core CLI RC3 或更高版本。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You’ll get this error if you have a <bpt id="p1">*</bpt>global.json<ept id="p1">*</ept> file in the current or parent directory and the <ph id="ph1">`sdk`</ph> version is set to an older version.</source>
          <target state="translated">如果您目前的目錄或父目錄中有 <bpt id="p1">*</bpt>global.json<ept id="p1">*</ept> 檔案且 <ph id="ph1">`sdk`</ph> 版本設定為舊版，則會收到此錯誤。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Migration from DNX to csproj</source>
          <target state="translated">從 DNX 移轉至 csproj</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you are still using DNX for .NET Core development, your migration process should be done in two stages:</source>
          <target state="translated">如果您仍使用 DNX 進行 .NET Core 程式開發，則應分兩階段完成您的移轉程序：</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">[</bpt>existing DNX migration guidance<ept id="p1">](from-dnx.md)</ept> to migrate from DNX to project-json enabled CLI.</source>
          <target state="translated">使用<bpt id="p1">[</bpt>現有的 DNX 移轉指引<ept id="p1">](from-dnx.md)</ept>，從 DNX 移轉至啟用 project-json 的 CLI。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Follow the steps from the previous section to migrate from <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> to <bpt id="p2">*</bpt>.csproj<ept id="p2">*</ept>.</source>
          <target state="translated">遵循上一節中的步驟，從 <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> 移轉至 <bpt id="p2">*</bpt>.csproj<ept id="p2">*</ept>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>DNX has become officially deprecated during the Preview 1 release of the .NET Core CLI.</source>
          <target state="translated">DNX 已在 .NET Core CLI 的 Preview 1 版期間正式被取代。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Migration from earlier .NET Core csproj formats to RTM csproj</source>
          <target state="translated">從舊版 .NET Core csproj 格式移轉至 RTM csproj</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The .NET Core csproj format has been changing and evolving with each new pre-release version of the tooling.</source>
          <target state="translated">每次工具有新的發行前版本，都會變更及改進 .NET Core csproj 格式。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>There is no tool that will migrate your project file from earlier versions of csproj to the latest, so you need to manually edit the project file.</source>
          <target state="translated">目前沒有工具可將您的專案檔從舊版 csproj 移轉至最新版本，因此您必須手動編輯專案檔。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The actual steps depend on the version of the project file you are migrating.</source>
          <target state="translated">實際步驟取決於您要移轉的專案檔版本。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following is some guidance to consider based on the changes that happened between versions:</source>
          <target state="translated">以下是根據版本間所發生之變更所要考量的一些指引：</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Remove the tools version property from the <ph id="ph1">`&lt;Project&gt;`</ph> element, if it exists.</source>
          <target state="translated">從 <ph id="ph1">`&lt;Project&gt;`</ph> 項目移除工具版本屬性 (如果存在的話)。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Remove the XML namespace (<ph id="ph1">`xmlns`</ph>) from the <ph id="ph2">`&lt;Project&gt;`</ph> element.</source>
          <target state="translated">從 <ph id="ph2">`&lt;Project&gt;`</ph> 項目移除 XML 命名空間 (<ph id="ph1">`xmlns`</ph>)。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If it doesn't exist, add the <ph id="ph1">`Sdk`</ph> attribute to the <ph id="ph2">`&lt;Project&gt;`</ph> element and set it to <ph id="ph3">`Microsoft.NET.Sdk`</ph> or <ph id="ph4">`Microsoft.NET.Sdk.Web`</ph>.</source>
          <target state="translated">如果不存在，則將 <ph id="ph1">`Sdk`</ph> 屬性新增至 <ph id="ph2">`&lt;Project&gt;`</ph> 項目，並將它設定為 <ph id="ph3">`Microsoft.NET.Sdk`</ph> 或 <ph id="ph4">`Microsoft.NET.Sdk.Web`</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This attribute specifies that the project uses the SDK to be used.</source>
          <target state="translated">這個屬性會指定專案使用可用的 SDK。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Microsoft.NET.Sdk.Web`</ph> is used for web apps.</source>
          <target state="translated"><ph id="ph1">`Microsoft.NET.Sdk.Web`</ph> 適用於 Web 應用程式。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Remove the <ph id="ph1">`&lt;Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" /&gt;`</ph> and <ph id="ph2">`&lt;Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" /&gt;`</ph> statements from the top and bottom of the project.</source>
          <target state="translated">移除專案頂端和底部的 <ph id="ph1">`&lt;Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" /&gt;`</ph> 和 <ph id="ph2">`&lt;Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" /&gt;`</ph> 陳述式。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>These import statements are implied by the SDK, so there is no need for them to be in the project.</source>
          <target state="translated">這些 import 陳述式是由 SDK 所隱含，因此專案中不需要有這些陳述式。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If you have <ph id="ph1">`Microsoft.NETCore.App`</ph> or <ph id="ph2">`NETStandard.Library`</ph> <ph id="ph3">`&lt;PackageReference&gt;`</ph> items in your project, you should remove them.</source>
          <target state="translated">如果您的專案中有 <ph id="ph1">`Microsoft.NETCore.App`</ph> 或 <ph id="ph2">`NETStandard.Library`</ph> <ph id="ph3">`&lt;PackageReference&gt;`</ph> 項目，則應該加以移除。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>These package references are <bpt id="p1">[</bpt>implied by the SDK<ept id="p1">](https://aka.ms/sdkimplicitrefs)</ept>.</source>
          <target state="translated">這些套件參考是<bpt id="p1">[</bpt>由 SDK 所隱含<ept id="p1">](https://aka.ms/sdkimplicitrefs)</ept>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Remove the <ph id="ph1">`Microsoft.NET.Sdk`</ph> <ph id="ph2">`&lt;PackageReference&gt;`</ph> element, if it exists.</source>
          <target state="translated">移除 <ph id="ph1">`Microsoft.NET.Sdk`</ph> <ph id="ph2">`&lt;PackageReference&gt;`</ph> 項目 (如果存在的話)。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The SDK reference comes through the <ph id="ph1">`Sdk`</ph> attribute on the <ph id="ph2">`&lt;Project&gt;`</ph> element.</source>
          <target state="translated">SDK 參考是來自 <ph id="ph2">`&lt;Project&gt;`</ph> 項目上的 <ph id="ph1">`Sdk`</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Remove the globs that are <bpt id="p1">[</bpt>implied by the SDK<ept id="p1">](https://aka.ms/sdkimplicititems)</ept>.</source>
          <target state="translated">移除<bpt id="p1">[</bpt>由 SDK 所隱含<ept id="p1">](https://aka.ms/sdkimplicititems)</ept> 的 glob。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Leaving these globs in your project will cause an error on build because compile items will be duplicated.</source>
          <target state="translated">在您的專案中留下這些 Glob 會在建置時造成錯誤，因為編譯項目將會重複。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>After these steps your project should be fully compatible with the RTM .NET Core csproj format.</source>
          <target state="translated">完成這些步驟之後，您的專案應該會與 RTM .NET Core csproj 格式完全相容。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For examples of before and after the migration from old csproj format to the new one, see the <bpt id="p1">[</bpt>Updating Visual Studio 2017 RC – .NET Core Tooling improvements<ept id="p1">](https://blogs.msdn.microsoft.com/dotnet/2016/12/12/updating-visual-studio-2017-rc-net-core-tooling-improvements/)</ept> article on the .NET blog.</source>
          <target state="translated">如需從舊的 csproj 格式移轉至新格式的前後範例，請參閱 .NET 部落格上的 <bpt id="p1">[</bpt>Updating Visual Studio 2017 RC - .NET Core Tooling improvements<ept id="p1">](https://blogs.msdn.microsoft.com/dotnet/2016/12/12/updating-visual-studio-2017-rc-net-core-tooling-improvements/)</ept> (更新 Visual Studio 2017 RC - .NET Core 工具改進) 文章。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>
