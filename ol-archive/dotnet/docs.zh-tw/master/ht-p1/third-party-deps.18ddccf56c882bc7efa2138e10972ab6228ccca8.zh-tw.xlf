<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e75ad86a42b9c8ecc23fe1303830b463a24c3bf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\porting\third-party-deps.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae8a17177cbb1139a7720686f7c39bf3f83fdc59</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">986a48552cf98913d9a6b7a6baf5836c8e63bebb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Porting to .NET Core - Analyzing your Third-Party Party Dependencies</source>
          <target state="translated">移轉到 .NET Core - 分析協力廠商相依性</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Porting to .NET Core - Analyzing your Third-Party Dependencies</source>
          <target state="translated">移轉到 .NET Core - 分析協力廠商相依性</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET、.NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Porting to .NET Core - Analyzing your Third-Party Party Dependencies</source>
          <target state="translated">移轉到 .NET Core - 分析協力廠商相依性</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The first step in the porting process is to understand your third party dependencies.</source>
          <target state="translated">移轉程序的第一個步驟是了解您的協力廠商相依性。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You need to figure out which of them, if any, don't yet run on .NET Core, and develop a contingency plan for those which don't run on .NET Core.</source>
          <target state="translated">您需要找出他們哪些尚未執行 .NET Core (如有)，並針對不執行 .NET Core 的開發應變計劃。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">必要條件</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This article will assume you are using Windows and Visual Studio, and that you have code which runs on the .NET Framework today.</source>
          <target state="translated">本文假設您使用 Windows 和 Visual Studio，並且目前有在 .NET Framework 上執行的程式碼。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Analyzing NuGet Packages</source>
          <target state="translated">分析 NuGet 封裝</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Analyzing NuGet packages for portability is very easy.</source>
          <target state="translated">分析 NuGet 封裝的可攜性很簡單。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Because a NuGet package is itself a set of folders which contain platform-specific assemblies, all you have to do is check to see if there is a folder which contains a .NET Core assembly.</source>
          <target state="translated">因為 NuGet 封裝本身是一組包含特定平台組件的資料夾，所以您只需要查看是否有包含 .NET Core 組件的資料夾即可。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Inspecting NuGet Package folders is easiest with the <bpt id="p1">[</bpt>NuGet Package Explorer<ept id="p1">](https://github.com/NuGetPackageExplorer/NuGetPackageExplorer)</ept> tool.</source>
          <target state="translated">使用 <bpt id="p1">[</bpt>NuGet Package Explorer<ept id="p1">](https://github.com/NuGetPackageExplorer/NuGetPackageExplorer)</ept> 工具檢查 NuGet 封裝資料夾非常簡單。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Here's how to do it.</source>
          <target state="translated">以下為作法。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Download and open the NuGet Package Explorer.</source>
          <target state="translated">下載並開啟 [NuGet Package Explorer] (NuGet 封裝總管)。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Click "Open package from online feed".</source>
          <target state="translated">按一下 [Open package from online feed] (從線上摘要開啟封裝)。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Search for the name of the package.</source>
          <target state="translated">搜尋封裝的名稱。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Expand the "lib" folder on the right-hand side and look at folder names.</source>
          <target state="translated">展開右手邊的 "lib" 資料夾，並查看資料夾名稱。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also see what a package supports on <bpt id="p1">[</bpt>nuget.org<ept id="p1">](https://www.nuget.org/)</ept> under the <bpt id="p2">**</bpt>Dependencies<ept id="p2">**</ept> section of the page for that package.</source>
          <target state="translated">您也可以在 <bpt id="p1">[</bpt>nuget.org<ept id="p1">](https://www.nuget.org/)</ept> 該封裝頁面的 [相依性] 區段中查看封裝支援。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In either case, you'll need to look for a folder or entry on <bpt id="p1">[</bpt>nuget.org<ept id="p1">](https://www.nuget.org/)</ept> with any of the following names:</source>
          <target state="translated">無論哪一種情況，您都需要在 <bpt id="p1">[</bpt>nuget.org<ept id="p1">](https://www.nuget.org/)</ept> 尋找有任何下列名稱的資料夾或項目︰</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>These are the Target Framework Monikers (TFM) which map to versions of <bpt id="p1">[</bpt>The .NET Standard Library<ept id="p1">](../../standard/library.md)</ept> and traditional Portable Class Library (PCL) profiles which are compatible with .NET Core.</source>
          <target state="translated">這些是對應 <bpt id="p1">[</bpt>.NET 標準程式庫<ept id="p1">](../../standard/library.md)</ept> 版本的目標 Framework Moniker (TFM) 版本，以及與 .NET Core 相容的傳統可攜式類別庫 (PCL) 設定檔。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Note that <ph id="ph1">`netcoreapp1.0`</ph>, while compatible, is for applications and not libraries.</source>
          <target state="translated">請注意，當 <ph id="ph1">`netcoreapp1.0`</ph> 相容時，是用於應用程式，不是程式庫。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Although there's nothing wrong with using a library which is <ph id="ph1">`netcoreapp1.0`</ph>-based, that library may not be intended for anything <bpt id="p1">*</bpt>other<ept id="p1">*</ept> than consumption by other <ph id="ph2">`netcoreapp1.0`</ph> applications.</source>
          <target state="translated">雖然使用 <ph id="ph1">`netcoreapp1.0`</ph> 型的程式庫沒有錯，但該程式庫可能原本只打算提供其他 <ph id="ph2">`netcoreapp1.0`</ph> 應用程式使用。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>There are also some legacy TFMs used in pre-release versions of .NET Core that may also be compatible:</source>
          <target state="translated">還有在 .NET Core 發行前版本中使用的一些舊版 TFM 也可能是相容的：</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>While these will likely work with your code, there is no guarantee of compatibility<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>雖然這些可能適合您的程式碼使用，但不保證相容性<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Packages with these TFMs were built with pre-release .NET Core packages.</source>
          <target state="translated">有這些 TFM 的封裝過去是使用發行前版本的 .NET Core 封裝建置的。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Take note of when (or if) packages like this are updated to be <ph id="ph1">`netstandard`</ph>-based.</source>
          <target state="translated">這類封裝更新為 <ph id="ph1">`netstandard`</ph>型時請記錄。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To use a package targeting a traditional PCL or pre-release .NET Core target, you must use the <ph id="ph1">`imports`</ph> directive in your <ph id="ph2">`project.json`</ph> file.</source>
          <target state="translated">若要使用以傳統 PCL 或發行前版本 .NET Core 目標為目標的封裝，<ph id="ph2">`project.json`</ph> 檔案中必須使用 <ph id="ph1">`imports`</ph> 指示詞。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>What to do when your NuGet package dependency doesn't run on .NET Core</source>
          <target state="translated">NuGet 封裝相依性在 .NET Core 上不執行時該怎麼辦</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>There are a few things you can do if a NuGet package you depend on won't run on .NET Core.</source>
          <target state="translated">如果您依賴的 NuGet 封裝在 .NET Core 上不執行，您可以做幾件事。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the project is open source and hosted somewhere like GitHub, you can engage the developer(s) directly.</source>
          <target state="translated">如果專案是開放原始碼並裝載在 GitHub 等位置，您可以直接連絡開發人員。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can contact the author directly on <bpt id="p1">[</bpt>nuget.org<ept id="p1">](https://www.nuget.org/)</ept> by searching for the package and clicking "Contact Owners" on the left hand side of the package's page.</source>
          <target state="translated">您可以搜尋封裝，然後按一下封裝頁面左手邊的 [Contact Owners] (連絡擁有者)，在 <bpt id="p1">[</bpt>nuget.org<ept id="p1">](https://www.nuget.org/)</ept> 直接連絡作者。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can look for another package that runs on .NET Core which accomplishes the same task as the package you were using.</source>
          <target state="translated">您可以尋找另一個在 .NET Core 執行的封裝，與您所用封裝達成相同的工作。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can attempt to write the code the package was doing yourself.</source>
          <target state="translated">您可以嘗試自行撰寫封裝執行工作的程式碼。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You could eliminate the dependency on the package by changing the functionality of your app, at least until a compatible version of the package becomes available.</source>
          <target state="translated">您可以變更應用程式的功能，消除封裝的相依性，至少等到有可用的相容版本封裝。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Please remember that open source project maintainers and NuGet package publishers are often volunteers who contribute because they care about a given domain, do it for free, and often have a different daytime job.</source>
          <target state="translated">請記住，開放原始碼專案維護人員及 NuGet 封裝發行者通常是志願工作者，他們因為在乎指定的領域，所以無償付出，通常都有自己的正職工作。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you do reach out, you might start with a positive statement about the library before asking about .NET Core support.</source>
          <target state="translated">如果連絡他們，請先提出對程式庫的正面評價，再要求 .NET Core 支援。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you're unable to resolve your issue with any of the above, you may have to port to .NET Core at a later date.</source>
          <target state="translated">如果上述任何方法都無法解決您的問題，稍後可能必須移轉到 .NET Core。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The .NET Team would like to know which libraries are the most important to support next with .NET Core.</source>
          <target state="translated">.NET 小組希望知道哪些程式庫最重要，是 .NET Core 接下來要支援的對象。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can also send us mail at <ph id="ph1">dotnet@microsoft.com</ph> about the libraries you'd like to use.</source>
          <target state="translated">您也可以傳送電子郵件至 <ph id="ph1">dotnet@microsoft.com</ph> 討論您想使用的程式庫。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Analyzing Dependencies which aren't NuGet Packages</source>
          <target state="translated">分析不是 NuGet 封裝的相依性</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You may have a dependency that isn't a NuGet package, such as a DLL in the filesystem.</source>
          <target state="translated">您可能有不是 NuGet 封裝的相依性，例如檔案系統中的 DLL。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The only way to determine the portability of that dependency is to run the <bpt id="p1">[</bpt>ApiPort tool<ept id="p1">](https://github.com/Microsoft/dotnet-apiport/blob/master/docs/HowTo/)</ept>.</source>
          <target state="translated">判斷該相依性可攜性的唯一方法，是執行 <bpt id="p1">[</bpt>ApiPort 工具<ept id="p1">](https://github.com/Microsoft/dotnet-apiport/blob/master/docs/HowTo/)</ept>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="translated">後續步驟</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you're porting a library, check out <bpt id="p1">[</bpt>Porting your Libraries<ept id="p1">](libraries.md)</ept>.</source>
          <target state="translated">如要移轉程式庫，請參閱 <bpt id="p1">[</bpt>Porting to .NET Core - Libraries<ept id="p1">](libraries.md)</ept> (移轉至 .NET Core - 程式庫)。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>