<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">11faa46347b18240e9ddf1c27f27a814103e2565</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\testing\using-mstest-on-windows.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d0b889def7c2a7fe5e0e328fc65218e643d5f863</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">50b99a584fcadd6faa0452adeaa9ca5b5a07022a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Use MSTest with .NET Core on Windows</source>
          <target state="translated">使用 MSTest 和 Windows 的 .NET Core</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to use MSTest with .NET Core on Windows, using Visual Studio 2015</source>
          <target state="translated">搭配 Visual Studio 2015 時，如何使用 MSTest 和 Windows 的 .NET Core</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>MSTest, .NET, .NET Core</source>
          <target state="translated">MSTest, .NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Unit testing with MSTest and .NET Core on Windows, using Visual Studio 2015</source>
          <target state="translated">搭配 Visual Studio 2015 時，使用 Windows 的 .NET Core 和 MSTest 的單元測試</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>While xUnit could be a better choice when targeting multiple platforms, with .NET Core on Windows is also possible to use MSTest.</source>
          <target state="translated">以多個平台為目標時，xUnit 可能是較好的選擇，但您也可以搭配使用 Windows 的 .NET Core 和 MSTest。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">必要條件</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Follow the instructions on <bpt id="p1">[</bpt>Getting started with .NET Core on Windows<ept id="p1">](../tutorials/using-on-windows.md)</ept> to create the library project.</source>
          <target state="translated">按照<bpt id="p1">[</bpt>開始使用 Windows 的 .NET Core<ept id="p1">](../tutorials/using-on-windows.md)</ept> 中的指示，以建立程式庫專案。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Writing the test project using MSTest</source>
          <target state="translated">使用 MSTest 撰寫測試專案</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, open the context menu for the <bpt id="p1">**</bpt>Solution<ept id="p1">**</ept> node and choose <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>, <bpt id="p3">**</bpt>New Solution Folder<ept id="p3">**</ept>.</source>
          <target state="translated">在方案總管中，開啟 [方案] 節點的操作功能表，然後依序選擇 [新增]、[新增方案資料夾]。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Name the folder "test".</source>
          <target state="translated">將資料夾命名為 "test"。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This is only a solution folder, not a physical folder.</source>
          <target state="translated">這只是方案資料夾，不是實體資料夾。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Open the context menu for the <bpt id="p1">**</bpt>test<ept id="p1">**</ept> folder and choose <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>.</source>
          <target state="translated">開啟 <bpt id="p1">**</bpt>test<ept id="p1">**</ept> 資料夾的操作功能表，並選擇 [新增]。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>New Project<ept id="p1">**</ept>.</source>
          <target state="translated">[新增專案]。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog, choose <bpt id="p2">**</bpt>Console Application (.NET Core)<ept id="p2">**</ept>.</source>
          <target state="translated">在 [新增專案] 對話方塊中，選擇 [主控台應用程式 (.NET Core)]。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Name it "TestLibrary" and explicitly put it under the <ph id="ph1">`Golden\test`</ph> path.</source>
          <target state="translated">將它命名為 "TestLibrary"，並明確放在 <ph id="ph1">`Golden\test`</ph> 路徑下方。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The project needs to be a console application, not a class library.</source>
          <target state="translated">專案必須是主控台應用程式，而不是類別庫。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> project, open the context menu for the <bpt id="p2">**</bpt>References<ept id="p2">**</ept> node and choose <bpt id="p3">**</bpt>Add Reference<ept id="p3">**</ept>.</source>
          <target state="translated">在 <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> 專案中，開啟 [參考] 節點的操作功能表，然後選擇 [新增參考]。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Reference Manager<ept id="p1">**</ept> dialog, check <bpt id="p2">**</bpt>Library<ept id="p2">**</ept> under the <bpt id="p3">**</bpt>Projects<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Solution<ept id="p4">**</ept> node, and then click <bpt id="p5">**</bpt>OK<ept id="p5">**</ept>.</source>
          <target state="translated">在 [參考管理員] 對話方塊中，分別核取 [專案] 下的 [程式庫]、[方案] 節點，然後再按一下 [確定]。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> project, open the <ph id="ph1">`project.json`</ph> file, and replace <ph id="ph2">`"Library": "1.0.0-*"`</ph> with <ph id="ph3">`"Library": {"target": "project"}`</ph>.</source>
          <target state="translated">在 <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> 專案中，開啟 <ph id="ph1">`project.json`</ph> 檔案，並將 <ph id="ph2">`"Library": "1.0.0-*"`</ph> 取代為 <ph id="ph3">`"Library": {"target": "project"}`</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This is to avoid the resolution of the <ph id="ph1">`Library`</ph> project to a NuGet package with the same name.</source>
          <target state="translated">這是為了避免將 <ph id="ph1">`Library`</ph> 專案解析為同名的 NuGet 套件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Explicitly setting the target to "project" ensures that the tooling will first search for a project with that name, and not a package.</source>
          <target state="translated">將目標明確設為「專案」時，可確保工具會先搜尋具有該名稱的專案，而不是套件。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Open the context menu for the <bpt id="p1">**</bpt>References<ept id="p1">**</ept> node and choose <bpt id="p2">**</bpt>Manage NuGet Packages<ept id="p2">**</ept>.</source>
          <target state="translated">開啟 [參考] 節點的操作功能表，然後選擇 [管理 NuGet 套件]。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Choose "nuget.org" as the <bpt id="p1">**</bpt>Package source<ept id="p1">**</ept>, and choose the <bpt id="p2">**</bpt>Browse<ept id="p2">**</ept> tab.</source>
          <target state="translated">選擇 "nuget.org" 做為 [套件來源]，然後選擇 [瀏覽] 索引標籤。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Check the <bpt id="p1">**</bpt>Include prerelease<ept id="p1">**</ept> checkbox, and then browse for <bpt id="p2">**</bpt>MSTest.TestFramework<ept id="p2">**</ept> version 1.0.1-preview or newer, and then click <bpt id="p3">**</bpt>Install<ept id="p3">**</ept>.</source>
          <target state="translated">核取 [包括發行前版本] 核取方塊，然後瀏覽 <bpt id="p2">**</bpt>MSTest.TestFramework<ept id="p2">**</ept> 1.0.1 預覽版本或更新版本，然後按一下 [安裝]。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Browse for <bpt id="p1">**</bpt>dotnet-test-mstest<ept id="p1">**</ept> version 1.1.1-preview or newer, and then click <bpt id="p2">**</bpt>Install<ept id="p2">**</ept>.</source>
          <target state="translated">瀏覽 <bpt id="p1">**</bpt>dotnet-test-mstest<ept id="p1">**</ept> 1.1.1 預覽版本或更新版本，然後按一下 [安裝]。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Edit <ph id="ph1">`project.json`</ph> to add <ph id="ph2">`"testRunner": "mstest",`</ph> after the <ph id="ph3">`"version"`</ph> section.</source>
          <target state="translated">編輯 <ph id="ph1">`project.json`</ph>，以在 <ph id="ph3">`"version"`</ph> 區段之後新增 <ph id="ph2">`"testRunner": "mstest",`</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">`LibraryTests.cs`</ph> class file to the <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> project, add the <ph id="ph2">`using`</ph> directives <ph id="ph3">`Microsoft.VisualStudio.TestTools.UnitTesting;`</ph> and <ph id="ph4">`using Library;`</ph> to the top of the file, and add the following code to the class:</source>
          <target state="translated">將 <ph id="ph1">`LibraryTests.cs`</ph> 類別檔案新增至 <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> 專案中，並在檔案頂端新增 <ph id="ph2">`using`</ph> 指示詞 <ph id="ph3">`Microsoft.VisualStudio.TestTools.UnitTesting;`</ph> 和 <ph id="ph4">`using Library;`</ph>，然後將下列程式碼新增至類別：</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Optionally, delete the <ph id="ph1">`Program.cs`</ph> file from the <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> project, and remove <ph id="ph2">`"buildOptions": {"emitEntryPoint": true},`</ph> from <ph id="ph3">`project.json`</ph>.</source>
          <target state="translated">選擇性地從 <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> 專案中刪除 <ph id="ph1">`Program.cs`</ph> 檔案，然後從 <ph id="ph3">`project.json`</ph> 移除 <ph id="ph2">`"buildOptions": {"emitEntryPoint": true},`</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You should now be able to build the solution.</source>
          <target state="translated">您現在應該能夠建置方案。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Test<ept id="p1">**</ept> menu, choose <bpt id="p2">**</bpt>Windows<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Test Explorer<ept id="p3">**</ept>, and in Test Explorer choose <bpt id="p4">**</bpt>Run All<ept id="p4">**</ept>.</source>
          <target state="translated">在 [測試] 功能表上，選擇 [Windows]、[測試總管]，然後在 [測試總管] 中選擇 [全部執行]。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The test should pass.</source>
          <target state="translated">測試應該會順利通過。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>