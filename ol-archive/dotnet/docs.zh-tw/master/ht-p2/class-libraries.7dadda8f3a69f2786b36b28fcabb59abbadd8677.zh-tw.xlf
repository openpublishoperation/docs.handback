<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ed35197078e43f096931adb18c454004f83cccf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\class-libraries.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">835e874ea7de5b669cbe9dd2951ed368b3e23453</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a72e1075fa8b1de51b07a699ebbbc7bdc870ef88</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>.NET Class Libraries</source>
          <target state="translated">.NET 類別庫</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>.NET Class Libraries</source>
          <target state="translated">.NET 類別庫</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>.NET Class Libraries</source>
          <target state="translated">.NET 類別庫</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Class libraries are the <bpt id="p1">[</bpt>shared library<ept id="p1">](http://en.wikipedia.org/wiki/Library_%28computing%29#Shared_libraries)</ept> concept for .NET.</source>
          <target state="translated">類別庫是 .NET 的<bpt id="p1">[</bpt>共用程式庫<ept id="p1">](http://en.wikipedia.org/wiki/Library_%28computing%29#Shared_libraries)</ept>概念。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>They enable you to componentize useful functionality into modules that can be used by multiple applications.</source>
          <target state="translated">它們可讓您將有用的功能設為可供多個應用程式使用的模組中的元件。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>They can also be used as a means of loading functionality that is not needed or not known at application startup.</source>
          <target state="translated">它們也可以作為一種方法，來載入應用程式啟動時不需要或未知的功能。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Class libraries are described using the <bpt id="p1">[</bpt>.NET Assembly file format<ept id="p1">](assembly-format.md)</ept>.</source>
          <target state="translated">類別庫是使用 <bpt id="p1">[</bpt>.NET 組件檔案格式<ept id="p1">](assembly-format.md)</ept>進行描述。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>There are three types of class libraries that you can use:</source>
          <target state="translated">您可以使用三種類型的類別庫：</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platform-specific<ept id="p1">**</ept> class libraries have access to all the APIs in a given platform (for example, .NET Framework, Xamarin iOS), but can only be used by apps and libraries that target that platform.</source>
          <target state="translated"><bpt id="p1">**</bpt>平台特定<ept id="p1">**</ept>類別庫可以存取指定平台中的所有 API (例如，.NET Framework、Xamarin iOS)，但是只能供將目標設為該平台的應用程式和程式庫使用。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Portable<ept id="p1">**</ept> class libraries have access to a subset of APIs, and can be used by apps and libraries that target multiple platforms.</source>
          <target state="translated"><bpt id="p1">**</bpt>可攜式<ept id="p1">**</ept>類別庫可以存取 API 子集，並且可以供將目標設為多個平台的應用程式和程式庫使用。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Core<ept id="p1">**</ept> class libraries are a merger of the platform-specific and portable library concept into a single model that provides the best of both.</source>
          <target state="translated"><bpt id="p1">**</bpt>.NET Core<ept id="p1">**</ept> 類別庫會將平台特定和可攜式程式庫概念合併到提供兼具兩者的單一模型。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Platform-specific Class Libraries</source>
          <target state="translated">平台特定類別庫</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Platform-specific libraries are bound to a single .NET platform (for example, .NET Framework on Windows) and can therefore take significant dependencies on a known execution environment.</source>
          <target state="translated">平台特定程式庫會繫結至單一 .NET 平台 (例如，Windows 上的 .NET Framework)，因此對已知執行環境具有重大相依性。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Such an environment will expose a known set of APIs (.NET and OS APIs) and will maintain and expose expected state (for example, Windows registry).</source>
          <target state="translated">這類環境會公開一組已知 API (.NET 和 OS API)，並維護和公開預期狀態 (例如，Windows 登錄)。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Developers who create platform specific libraries can fully exploit the underlying platform.</source>
          <target state="translated">建立平台特定程式庫的開發人員可以完全利用基礎平台。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The libraries will only ever run on that given platform, making platform checks or other forms of conditional code unnecessary (modulo single sourcing code for multiple platforms).</source>
          <target state="translated">程式庫永遠只會在該指定平台上執行，這樣就不需要進行平台檢查或撰寫其他形式的條件式程式碼 (以多平台的單一來源程式碼為模數)。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Platform-specific libraries have been the primary class library type for the .NET Framework.</source>
          <target state="translated">平台特定程式庫已是 .NET Framework 的主要類別庫類型。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Even as other .NET platforms emerged, platform-specific libraries remained the dominant library type.</source>
          <target state="translated">即使隨著其他 .NET 平台的出現，平台特定程式庫仍然會保有主控程式庫類型。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Portable Class Libraries</source>
          <target state="translated">可攜式類別庫</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Portable libraries are supported on multiple .NET platforms.</source>
          <target state="translated">多個 .NET 平台支援可攜式類別庫。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>They can still take dependencies on a known execution environment, however, the environment is a synthetic one that is generated by the intersection of a set of concrete .NET platforms.</source>
          <target state="translated">它們仍然具有與已知執行環境的相依性，不過，環境是一組實體 .NET 平台之交集所產生的綜合環境。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This means that exposed APIs and platform assumptions are a subset of what would be available to a platform-specific library.</source>
          <target state="translated">這表示公開的 API 和平台假設是平台特定程式庫可用功能的子集。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You choose a platform configuration when you create a portable library.</source>
          <target state="translated">當您建立可攜式程式庫時，可以選擇平台組態。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>These are the set of platforms that you need to support (for example, .NET Framework 4.5+, Windows Phone 8.0+).</source>
          <target state="translated">這些是您需要支援的一組平台 (例如，.NET Framework 4.5+、Windows Phone 8.0+)。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The more platforms you opt to support, the fewer APIs and fewer platform assumptions you can make, the lowest common denominator.</source>
          <target state="translated">您選擇的平台越多，可以進行的 API 和平台假設就越少 (即最小公分母)。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This characteristic can be confusing at first, since people often think “more is better”, but find that more supported platforms results in fewer available APIs.</source>
          <target state="translated">這項特性一開始可能會混淆，因為人們通常認為「越多越好」，但會發現支援的平台越多會導致可用的 API 越少。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Many library developers have switched from producing multiple platform-specific libraries from one source (using conditional compilation directives) to portable libraries.</source>
          <target state="translated">許多程式庫開發人員已從透過一個來源產生多個平台特定程式庫 (使用條件式編譯指示詞) 切換到可攜式程式庫。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>There are <bpt id="p1">[</bpt>several approaches<ept id="p1">](http://blog.stephencleary.com/2012/11/portable-class-library-enlightenment.html)</ept> for accessing platform-specific functionality within portable libraries, with <bpt id="p2">[</bpt>bait-and-switch<ept id="p2">](http://log.paulbetts.org/the-bait-and-switch-pcl-trick/)</ept> being the most widely accepted technique at this point.</source>
          <target state="translated">有<bpt id="p1">[</bpt>數種方式<ept id="p1">](http://blog.stephencleary.com/2012/11/portable-class-library-enlightenment.html)</ept>，可以使用目前最廣泛接受的 <bpt id="p2">[</bpt>bait-and-switch<ept id="p2">](http://log.paulbetts.org/the-bait-and-switch-pcl-trick/)</ept> 技術來存取可攜式程式庫內的平台特定功能。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>.NET Core Class Libraries</source>
          <target state="translated">.NET Core 類別庫</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>.NET Core libraries are a replacement of the platform-specific and portable libraries concepts.</source>
          <target state="translated">.NET Core 程式庫可以取代平台特定和可攜式程式庫概念。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>They are platform-specific in the sense that they expose all functionality from the underlying platform (no synthetic platforms or platform intersections).</source>
          <target state="translated">就它們可以公開基礎平台 (沒有綜合平台或平台交集) 的所有功能這點而言，它們是平台特定的。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>They are portable in the sense that they work on all supporting platforms.</source>
          <target state="translated">就它們可以在所有支援的平台上運作這點而言，它們是可攜式。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>.NET Core exposes a set of library <bpt id="p1">_</bpt>contracts<ept id="p1">_</ept>.</source>
          <target state="translated">.NET Core 公開一組程式庫<bpt id="p1">_</bpt>合約<ept id="p1">_</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>.NET platforms must support each contract fully or not at all.</source>
          <target state="translated">.NET 平台必須完整支援或根本不支援每個合約。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Each platform, therefore, supports a set of .NET Core contracts.</source>
          <target state="translated">因此，每個平台都支援一組 .NET Core 合約。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The corollary is that each .NET Core class library is supported on the platforms that support it’s contract dependencies.</source>
          <target state="translated">必然結果是支援合約相依性的平台上支援每個 .NET Core 類別庫。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>.NET Core contracts do not expose the entire functionality of the .NET Framework (nor is that a goal), however, they do expose many more APIs than Portable Class Libraries.</source>
          <target state="translated">.NET Core 合約不會公開 .NET Framework 的整個功能 (也不會公開目標)，不過公開的 API 數目會多於可攜式類別庫。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>More APIs will be added over time.</source>
          <target state="translated">一段時間之後，就會新增更多 API。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following platforms support .NET Core class libraries:</source>
          <target state="translated">下列平台支援 .NET Core 類別庫︰</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>.NET Core</source>
          <target state="translated">.NET 核心</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>ASP.NET Core</source>
          <target state="translated">ASP.NET Core</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.5+</source>
          <target state="translated">.NET Framework 4.5+</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Windows Store Apps</source>
          <target state="translated">Windows 市集 App</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Windows Phone 8+</source>
          <target state="translated">Windows Phone 8+</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Mono Class Libraries</source>
          <target state="translated">Mono 類別庫</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Class libraries are supported on Mono, including the three types of libraries described above.</source>
          <target state="translated">Mono 上支援類別庫 (包含上述三種類型的程式庫)。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Mono has often been seen (correctly) as a cross-platform implementation of the Microsoft .NET Framework.</source>
          <target state="translated">Mono 經常被 (正確) 視為 Microsoft .NET Framework 的跨平台實作。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In part, this was because platform-specific .NET Framework libraries could run on the Mono runtime without modification or recompilation.</source>
          <target state="translated">在某種程度上，原因是平台特定 .NET Framework 程式庫可以在 Mono 執行階段上執行，而不需要進行修改或重新編譯。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This characteristic was in place before the creation of portable class libraries, so was an obvious choice to enable binary portability between the .NET Framework and Mono (although it only worked in one direction).</source>
          <target state="translated">在建立可攜式類別庫之前就具有這項特性，因此是啟用 .NET Framework 與 Mono 之間的二進位可攜性的明確選擇 (雖然只作用於一個方向)。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>