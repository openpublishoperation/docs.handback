<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">43d6194afd948aeccbf051365e059794c74d2646</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\creating-new.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46dda2401dcf1cab4b517ffd8abccf95488a0a68</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f23fb83ce6e8168fba217d3b6355785205d130a2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Creating new strings</source>
          <target state="translated">建立新字串</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Creating new strings</source>
          <target state="translated">建立新字串</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Creating new strings</source>
          <target state="translated">建立新字串</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>.NET  allows strings to be created using simple assignment, and also overloads a class constructor to support string creation using a number of different parameters.</source>
          <target state="translated">.NET 允許使用簡單的指派來建立字串，並且還可以多載類別建構函式，以支援使用多個不同參數來建立字串。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>.NET also provides several methods in the <bpt id="p1">[</bpt>System.String<ept id="p1">](xref:System.String)</ept> class that create new string objects by combining several strings, arrays of strings, or objects.</source>
          <target state="translated">.NET 也在 <bpt id="p1">[</bpt>System.String<ept id="p1">](xref:System.String)</ept> 類別中提供幾個方法，藉由組合多個字串、字串陣列或物件的方式來建立新的字串物件。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Creating Strings Using Assignment</source>
          <target state="translated">使用指派建立字串</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The easiest way to create a new <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> object is simply to assign a string literal to a <bpt id="p2">[</bpt>String<ept id="p2">](xref:System.String)</ept> object.</source>
          <target state="translated">建立新的 <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> 物件的最簡單方式，是將字串常值直接指派給 <bpt id="p2">[</bpt>String<ept id="p2">](xref:System.String)</ept> 物件。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Creating Strings Using a Class Constructor</source>
          <target state="translated">使用類別建構函式建立字串</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can use overloads of the <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> class constructor to create strings from character arrays.</source>
          <target state="translated">您可以使用 <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> 類別建構函式的多載，從字元陣列建立字串。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can also create a new string by duplicating a particular character a specified number of times.</source>
          <target state="translated">您也可以讓某個特定字元重複指定的次數，藉此建立新字串。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Methods that Return Strings</source>
          <target state="translated">傳回字串的方法</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following table lists several useful methods that return new string objects.</source>
          <target state="translated">下表列出數個可傳回新字串物件的有用方法。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Method name</source>
          <target state="translated">方法名稱</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">用法</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.String,System.Object))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.String,System.Object))</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Builds a formatted string from a set of input objects.</source>
          <target state="translated">從一組輸入物件建立格式化的字串。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Concat<ept id="p1">](xref:System.String.Concat(System.String,System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Concat<ept id="p1">](xref:System.String.Concat(System.String,System.String))</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Builds strings from two or more strings.</source>
          <target state="translated">從兩個或多個字串建立字串。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Join<ept id="p1">](xref:System.String.Join(System.String,System.String[]))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Join<ept id="p1">](xref:System.String.Join(System.String,System.String[]))</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Builds a new string by combining an array of strings.</source>
          <target state="translated">藉由組合字串陣列來建立新字串。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Insert<ept id="p1">](xref:System.String.Insert(System.Int32,System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Insert<ept id="p1">](xref:System.String.Insert(System.Int32,System.String))</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Builds a new string by inserting a string into the specified index of an existing string.</source>
          <target state="translated">藉由將字串插入現有字串的指定索引中來建立新字串。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.CopyTo<ept id="p1">](xref:System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.CopyTo<ept id="p1">](xref:System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32))</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Copies specified characters in a string into a specified position in an array of characters.</source>
          <target state="translated">將字串中的指定字元複製到字元陣列中的指定位置。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">格式</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">`String.Format`</ph> method to create formatted strings and concatenate strings representing multiple objects.</source>
          <target state="translated">您可以使用 <ph id="ph1">`String.Format`</ph> 方法，建立格式化的字串和串連代表多個物件的字串。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This method automatically converts any passed object into a string.</source>
          <target state="translated">這個方法會自動將任何傳遞的物件轉換為字串。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, if your application must display an <bpt id="p1">[</bpt>Int32<ept id="p1">](xref:System.Int32)</ept> value and a <bpt id="p2">[</bpt>DateTime<ept id="p2">](xref:System.DateTime)</ept> value to the user, you can easily construct a string to represent these values using the <ph id="ph1">`Format`</ph> method.</source>
          <target state="translated">例如，如果您的應用程式必須向使用者顯示 <bpt id="p1">[</bpt>Int32<ept id="p1">](xref:System.Int32)</ept> 值和 <bpt id="p2">[</bpt>DateTime<ept id="p2">](xref:System.DateTime)</ept> 值，您可以使用 <ph id="ph1">`Format`</ph> 方法，輕鬆地建構出代表這些值的字串。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For information about formatting conventions used with this method, see the section on <bpt id="p1">[</bpt>composite formatting<ept id="p1">](composite-format.md)</ept>.</source>
          <target state="translated">如需搭配此方法使用之格式慣例的資訊，請參閱<bpt id="p1">[</bpt>複合格式<ept id="p1">](composite-format.md)</ept>一節。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`Format`</ph> method to create a string that uses an integer variable.</source>
          <target state="translated">下列範例會使用 <ph id="ph1">`Format`</ph> 方法來建立使用整數變數的字串。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this example, <bpt id="p1">[</bpt>DateTime.Now<ept id="p1">](xref:System.DateTime.Now)</ept> displays the current date and time in a manner specified by the culture associated with the current thread.</source>
          <target state="translated">在此範例中，<bpt id="p1">[</bpt>DateTime.Now<ept id="p1">](xref:System.DateTime.Now)</ept> 會以和目前執行緒關聯的文化特性中所指定的方式來顯示目前日期和時間。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Concat</source>
          <target state="translated">Concat</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`String.Concat`</ph> method can be used to easily create a new string object from two or more existing objects.</source>
          <target state="translated">使用 <ph id="ph1">`String.Concat`</ph> 方法可以輕鬆地從兩個或多個現有物件，建立新的字串物件。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>It provides a language-independent way to concatenate strings.</source>
          <target state="translated">它提供與語言無關的方式來串連字串。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This method accepts any class that derives from <ph id="ph1">`System.Object`</ph>.</source>
          <target state="translated">這個方法接受衍生自 <ph id="ph1">`System.Object`</ph> 的任何類別。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following example creates a string from two existing string objects and a separating character.</source>
          <target state="translated">下列範例會從現有的兩個字串物件和一個分隔字元建立字串。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Join</source>
          <target state="translated">Join</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`String.Join`</ph> method creates a new string from an array of strings and a separator string.</source>
          <target state="translated"><ph id="ph1">`String.Join`</ph> 方法會從字串陣列和分隔符號字串建立新的字串。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This method is useful if you want to concatenate multiple strings together, making a list perhaps separated by a comma.</source>
          <target state="translated">如果您想要將多個字串串連在一起，建立以逗號分隔的清單，這個方法會很有用。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The following example uses a space to bind a string array.</source>
          <target state="translated">下列範例會使用空格來繫結字串陣列。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Insert</source>
          <target state="translated">Insert</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`String.Insert`</ph> method creates a new string by inserting a string into a specified position in another string.</source>
          <target state="translated"><ph id="ph1">`String.Insert`</ph> 方法會將字串插入另一個字串中的指定位置，藉此建立新的字串。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This method uses a zero-based index.</source>
          <target state="translated">這個方法會使用以零起始的索引。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following example inserts a string into the fifth index position of <ph id="ph1">`MyString`</ph> and creates a new string with this value.</source>
          <target state="translated">下列範例會將字串插入 <ph id="ph1">`MyString`</ph> 的第五個索引位置，並使用這個值來建立新的字串。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>CopyTo</source>
          <target state="translated">CopyTo</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`String.CopyTo`</ph> method copies portions of a string into an array of characters.</source>
          <target state="translated"><ph id="ph1">`String.CopyTo`</ph> 方法會將部分字串複製到字元陣列中。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You can specify both the beginning index of the string and the number of characters to be copied.</source>
          <target state="translated">您可以同時指定字串的開頭索引和要複製的字元數。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This method takes the source index, an array of characters, the destination index, and the number of characters to copy.</source>
          <target state="translated">這個方法會使用來源索引、字元陣列、目的索引和要複製的字元數。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>All indexes are zero-based.</source>
          <target state="translated">所有索引都是以零起始。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`CopyTo`</ph> method to copy the characters of the word "Hello" from a string object to the first index position of an array of characters.</source>
          <target state="translated">下列範例會使用 <ph id="ph1">`CopyTo`</ph> 方法，將 "Hello" 這個字的所有字元從字串物件複製到字元陣列的第一個索引位置。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic string operations<ept id="p1">](basic-string-operations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>基本字串作業<ept id="p1">](basic-string-operations.md)</ept></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Composite formatting<ept id="p1">](composite-format.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>複合格式<ept id="p1">](composite-format.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>