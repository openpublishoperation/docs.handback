<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6c6ddfdbe288fe012adf31fd4d45af1b697d1132</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\formatting-types.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0aad1c66fd4542b09f65909d7b69c99303fac946</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">090a6fc5064a1a70847437121fa1dbf77d2be3a0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Formatting types</source>
          <target state="translated">格式化類型</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Formatting types</source>
          <target state="translated">格式化類型</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Formatting types</source>
          <target state="translated">格式化類型</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Formatting is the process of converting an instance of a class, structure, or enumeration value to its string representation, often so that the resulting string can be displayed to users or deserialized to restore the original data type.</source>
          <target state="translated">格式化是將類別、結構或列舉值的執行個體轉換成字串表示的過程，通常是為了將結果字串展示予使用者，或是為了將字串藉還原序列化方式還原成原始的資料類型。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This conversion can pose a number of challenges:</source>
          <target state="translated">這種轉換可能面臨幾項挑戰：</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The way that values are stored internally does not necessarily reflect the way that users want to view them.</source>
          <target state="translated">值的內部儲存方式不見得反映出使用者想要的檢視方式。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, a telephone number might be stored in the form <bpt id="p1">**</bpt>8009999999<ept id="p1">**</ept>, which is not user-friendly.</source>
          <target state="translated">例如，電話號碼可能以 <bpt id="p1">**</bpt>8009999999<ept id="p1">**</ept> 的格式儲存，但這並不太符合使用者的閱讀習慣。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It should instead be displayed as <bpt id="p1">**</bpt>800-999-9999<ept id="p1">**</ept>.</source>
          <target state="translated">應該改以顯示成 <bpt id="p1">**</bpt>800-999-9999<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Custom format strings<ept id="p1">](#custom-format-strings)</ept> section for an example that formats a number in this way.</source>
          <target state="translated">如需以此方式格式化數字的範例，請參閱<bpt id="p1">[</bpt>自訂格式字串<ept id="p1">](#custom-format-strings)</ept>一節。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Sometimes the conversion of an object to its string representation is not intuitive.</source>
          <target state="translated">物件轉換後的字串表示有時候並不符合直覺。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For example, it is not clear how the string representation of a <bpt id="p1">**</bpt>Temperature<ept id="p1">**</ept> object or a <bpt id="p2">**</bpt>Person<ept id="p2">**</ept> object should appear.</source>
          <target state="translated">例如，<bpt id="p1">**</bpt>Temperature<ept id="p1">**</ept> 物件或 <bpt id="p2">**</bpt>Person<ept id="p2">**</ept> 物件的字串表示應該為何種格式，就不是那麼清楚。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For an example that formats a <bpt id="p1">**</bpt>Temperature<ept id="p1">**</ept> object in a variety of ways, see the <bpt id="p2">[</bpt>Standard format strings<ept id="p2">](#standard-format-strings)</ept> section.</source>
          <target state="translated">如需以各種方式格式化 <bpt id="p1">**</bpt>Temperature<ept id="p1">**</ept> 物件的範例，請參閱<bpt id="p2">[</bpt>標準格式字串<ept id="p2">](#standard-format-strings)</ept>一節。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Values often require culture-sensitive formatting.</source>
          <target state="translated">值的格式通常需要符合文化特性。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, in an application that uses numbers to reflect monetary values, numeric strings should include the current culture’s currency symbol, group separator (which, in most cultures, is the thousands separator), and decimal symbol.</source>
          <target state="translated">例如，如果應用程式需要使用數字來表達貨幣值，則數值字串應該包含目前文化特性的貨幣符號、群組分隔符號 (即大部分文化特性中的千位分隔符號) 和小數點符號。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For an example, see the <bpt id="p1">[</bpt>Culture-sensitive formatting with format providers and the IFormatProvider interface<ept id="p1">](#culture-sensitive-formatting-with-format-providers-and-the-iformatprovider-interface)</ept> section.</source>
          <target state="translated">如需範例，請參閱<bpt id="p1">[</bpt>使用格式提供者及 IFormatProvider 介面執行區分文化特性的格式化<ept id="p1">](#culture-sensitive-formatting-with-format-providers-and-the-iformatprovider-interface)</ept>一節。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An application may have to display the same value in different ways.</source>
          <target state="translated">應用程式可能需要以不同的方式來顯示相同的值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, an application may represent an enumeration member by displaying a string representation of its name or by displaying its underlying value.</source>
          <target state="translated">例如，應用程式在表示列舉成員時，在做法上可能是顯示其名稱的字串表示，或顯示其基礎值。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For an example that formats a member of the <bpt id="p1">[</bpt>DayOfWeek<ept id="p1">](xref:System.DayOfWeek)</ept> enumeration in different ways, see the <bpt id="p2">[</bpt>Standard format strings<ept id="p2">](#standard-format-strings)</ept> section.</source>
          <target state="translated">如需以不同方式格式化 <bpt id="p1">[</bpt>DayOfWeek<ept id="p1">](xref:System.DayOfWeek)</ept> 列舉成員的範例，請參閱<bpt id="p2">[</bpt>標準格式字串<ept id="p2">](#standard-format-strings)</ept>一節。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>.NET provides rich formatting support that enables developers to address these requirements.</source>
          <target state="translated">.NET 提供豐富的格式化支援，可滿足開發人員的這些需求。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Formatting converts the value of a type into a string representation.</source>
          <target state="translated">格式化會將某種類型的值轉換為字串表示。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Parsing is the inverse of formatting.</source>
          <target state="translated">剖析是格式化的反向操作。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A parsing operation creates an instance of a data type from its string representation.</source>
          <target state="translated">剖析作業會從資料類型的字串表示來建立資料類型的執行個體。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For information about converting strings to other data types, see <bpt id="p1">[</bpt>Parsing strings<ept id="p1">](parsing-strings.md)</ept>.</source>
          <target state="translated">如需將字串轉換為其他資料類型的資訊，請參閱<bpt id="p1">[</bpt>剖析字串<ept id="p1">](parsing-strings.md)</ept>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This overview contains the following sections:</source>
          <target state="translated">本概觀包含下列各節：</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting in .NET<ept id="p1">](#formatting-in-net)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>.NET 中的格式化​​<ept id="p1">](#formatting-in-net)</ept></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Default formatting using the ToString method<ept id="p1">](#default-formatting-using-the-tostring-method)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>使用 ToString 方法的預設格式<ept id="p1">](#default-formatting-using-the-tostring-method)</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Overriding the ToString method<ept id="p1">](#overriding-the-tostring-method)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>覆寫 ToString 方法<ept id="p1">](#overriding-the-tostring-method)</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>The ToString method and format strings<ept id="p1">](#the-tostring-method-and-format-strings)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>ToString 方法及格式字串<ept id="p1">](#the-tostring-method-and-format-strings)</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard format strings<ept id="p1">](#standard-format-strings)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準格式字串<ept id="p1">](#standard-format-strings)</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom format strings<ept id="p1">](#custom-format-strings)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>自訂格式字串<ept id="p1">](#custom-format-strings)</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Format strings and .NET types<ept id="p1">](#format-strings-and-net-types)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>格式字串與 .NET 類型<ept id="p1">](#format-strings-and-net-types)</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Culture-sensitive formatting with format providers and the IFormatProvider interface<ept id="p1">](#culture-sensitive-formatting-with-format-providers-and-the-iformatprovider-interface)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>使用格式提供者及 IFormatProvider 介面執行區分文化特性的格式化<ept id="p1">](#culture-sensitive-formatting-with-format-providers-and-the-iformatprovider-interface)</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Culture-sensitive formatting of numeric values<ept id="p1">](#culture-sensitive-formatting-of-numeric-values)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>區分文化特性格式的數值<ept id="p1">](#culture-sensitive-formatting-of-numeric-values)</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Culture-sensitive formatting of date and time values<ept id="p1">](#culture-sensitive-formatting-of-date-and-time-values)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>區分文化特性格式的日期與時間值<ept id="p1">](#culture-sensitive-formatting-of-date-and-time-values)</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>The IFormattable interface<ept id="p1">](#the-iformattable-interface)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>IFormattable 介面<ept id="p1">](#the-iformattable-interface)</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Composite formatting<ept id="p1">](#composite-formatting)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>複合格式<ept id="p1">](#composite-formatting)</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom formatting with ICustomFormatter<ept id="p1">](#custom-formatting-with-icustomformatter)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>使用 ICustomFormatter 的自訂格式<ept id="p1">](#custom-formatting-with-icustomformatter)</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Related topics<ept id="p1">](#related-topics)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>相關主題<ept id="p1">](#related-topics)</ept></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Reference<ept id="p1">](#reference)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>參考<ept id="p1">](#reference)</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Formatting in .NET</source>
          <target state="translated">.NET 中的格式化​​</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The basic mechanism for formatting is the default implementation of the <bpt id="p1">[</bpt>Object.ToString<ept id="p1">](xref:System.Object.ToString)</ept> method, which is discussed in the <bpt id="p2">[</bpt>Default formatting using the ToString method<ept id="p2">](#default-formatting-using-the-tostring-method)</ept> section later in this topic.</source>
          <target state="translated"><bpt id="p1">[</bpt>Object.ToString<ept id="p1">](xref:System.Object.ToString)</ept>預設會實作格式化的基本機制。本主題後文的<bpt id="p2">[</bpt>使用 ToString 方法的預設格式<ept id="p2">](#default-formatting-using-the-tostring-method)</ept>一節將有所討論。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>However, .NET provides several ways to modify and extend its default formatting support.</source>
          <target state="translated">不過，.NET 提供幾種方式來修改和擴充其預設格式化支援。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>These include the following:</source>
          <target state="translated">這些需求包括下列各項：</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Overriding the <bpt id="p1">[</bpt>Object.ToString<ept id="p1">](xref:System.Object.ToString)</ept> method to define a custom string representation of an object’s value.</source>
          <target state="translated">覆寫 <bpt id="p1">[</bpt>Object.ToString<ept id="p1">](xref:System.Object.ToString)</ept> 方法來定義物件值的自訂字串表示。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>Overriding the ToString method<ept id="p1">](#overriding-the-tostring-method)</ept> section later in this topic.</source>
          <target state="translated">如需詳細資訊，請參閱本主題後文的<bpt id="p1">[</bpt>覆寫 ToString 方法<ept id="p1">](#overriding-the-tostring-method)</ept>一節。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Defining format specifiers that enable the string representation of an object’s value to take multiple forms.</source>
          <target state="translated">定義格式規範，格式規範讓物件值的字串表示可以採用多種形式。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, the "X" format specifier in the following statement converts an integer to the string representation of a hexadecimal value.</source>
          <target state="translated">例如，下列陳述式中的 "X" 格式規範會將整數轉換為十六進位值的字串表示。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For more information about format specifiers, see the <bpt id="p1">[</bpt>The ToString method and format strings<ept id="p1">](#the-tostring-method-and-format-strings)</ept> section.</source>
          <target state="translated">如需格式規範的詳細資訊，請參閱 <bpt id="p1">[</bpt>ToString 方法與格式字串<ept id="p1">](#the-tostring-method-and-format-strings)</ept>一節。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Using format providers to take advantage of the formatting conventions of a specific culture.</source>
          <target state="translated">透過格式提供者來採用特定文化特性的格式化慣例。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For example, the following statement displays a currency value by using the formatting conventions of the en-US culture.</source>
          <target state="translated">例如，下列陳述式會使用 en-US 文化特性的格式化慣例來顯示貨幣值。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information about formatting with format providers, see the <bpt id="p1">[</bpt>Culture-sensitive formatting with format providers and the IFormatProvider interface<ept id="p1">](#culture-sensitive-formatting-with-format-providers-and-the-iformatprovider-interface)</ept> section.</source>
          <target state="translated">如需如何使用格式提供者及 IFormatProvider 介面的詳細資訊，請參閱<bpt id="p1">[</bpt>使用格式提供者及 IFormatProvider 介面執行區分文化特性的格式化<ept id="p1">](#culture-sensitive-formatting-with-format-providers-and-the-iformatprovider-interface)</ept>一節。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Implementing the <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> interface to support both string conversion with the <bpt id="p2">[</bpt>Convert<ept id="p2">](xref:System.Convert)</ept> class and composite formatting.</source>
          <target state="translated">實作 <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> 介面，以同時支援使用 <bpt id="p2">[</bpt>Convert<ept id="p2">](xref:System.Convert)</ept> 類別和複合格式來轉換字串。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>The IFormattable interface<ept id="p1">](#the-iformattable-interface)</ept> section.</source>
          <target state="translated">如需詳細資訊，請參閱 <bpt id="p1">[</bpt>IFormattable 介面<ept id="p1">](#the-iformattable-interface)</ept>一節。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Using composite formatting to embed the string representation of a value in a larger string.</source>
          <target state="translated">使用複合格式將值的字串表示嵌入更大的字串中。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>Composite formatting<ept id="p1">](#composite-formatting)</ept> section.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>複合格式<ept id="p1">](#composite-formatting)</ept>一節。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Implementing <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> and <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> to provide a complete custom formatting solution.</source>
          <target state="translated">實作 <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> 和 <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> 來提供完整的自訂格式解決方案。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>Custom formatting with ICustomFormatter<ept id="p1">](#custom-formatting-with-icustomformatter)</ept> section.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>使用 ICustomFormatter 的自訂格式<ept id="p1">](#custom-formatting-with-icustomformatter)</ept>一節。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The following sections examine these methods for converting an object to its string representation.</source>
          <target state="translated">下列各節會討論這些將物件轉換為其字串表示的方法。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Default formatting using the ToString method</source>
          <target state="translated">使用 ToString 方法的預設格式</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Every type that is derived from <bpt id="p1">[</bpt>System.Object<ept id="p1">](xref:System.Object)</ept> automatically inherits a parameterless <bpt id="p2">[</bpt>ToString<ept id="p2">](xref:System.Object.ToString)</ept> method, which returns the name of the type by default.</source>
          <target state="translated">每個衍生自 <bpt id="p1">[</bpt>System.Object<ept id="p1">](xref:System.Object)</ept> 的類型都會自動繼承無參數的 <bpt id="p2">[</bpt>ToString<ept id="p2">](xref:System.Object.ToString)</ept> 方法，這個方法預設會傳回型別的名稱。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The following example illustrates the default <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> method.</source>
          <target state="translated">下列範例示範預設的 <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> 方法。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>It defines a class named <ph id="ph1">`Automobile`</ph> that has no implementation.</source>
          <target state="translated">範例中會定義一個不具任何實作的 <ph id="ph1">`Automobile`</ph> 類別。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>When the class is instantiated and its <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> method is called, it displays its type name.</source>
          <target state="translated">當具現化這個類別並呼叫其 <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> 方法時，會顯示這個類別的類型名稱。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Note that the <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> method is not explicitly called in the example.</source>
          <target state="translated">請注意，在範例中不會明確呼叫 <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> 方法。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Console.WriteLine(Object)<ept id="p1">](xref:System.Console.WriteLine(System.Object))</ept> method implicitly calls the <bpt id="p2">[</bpt>ToString<ept id="p2">](xref:System.Object.ToString)</ept> method of the object passed to it as an argument.</source>
          <target state="translated"><bpt id="p1">[</bpt>Console.WriteLine(Object)<ept id="p1">](xref:System.Console.WriteLine(System.Object))</ept> 方法會隱含呼叫本身所收到作為引數傳遞之物件的 <bpt id="p2">[</bpt>ToString<ept id="p2">](xref:System.Object.ToString)</ept> 方法。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Because all types other than interfaces are derived from <bpt id="p1">[</bpt>Object<ept id="p1">](xref:System.Object)</ept>, this functionality is automatically provided to your custom classes or structures.</source>
          <target state="translated">因為除介面以外的所有其他類型都會衍生自 <bpt id="p1">[</bpt>Object<ept id="p1">](xref:System.Object)</ept>，所以您的自訂類別或結構會自動被賦予此功能。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>However, the functionality offered by the default <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> method, is limited: Although it identifies the type, it fails to provide any information about an instance of the type.</source>
          <target state="translated">不過，預設的 <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> 方法提供的功能有限：它雖然可以識別類型，但無法提供類型執行個體的任何資訊。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>To provide a string representation of an object that provides information about that object, you must override the <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> method.</source>
          <target state="translated">若要提供物件的字串表示來表達該物件的相關資訊，您必須覆寫 <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> 方法。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Structures inherit from <bpt id="p1">[</bpt>ValueType<ept id="p1">](xref:System.ValueType)</ept>, which in turn is derived from <bpt id="p2">[</bpt>Object<ept id="p2">](xref:System.Object)</ept>.</source>
          <target state="translated">結構會繼承自 <bpt id="p1">[</bpt>ValueType<ept id="p1">](xref:System.ValueType)</ept>，而後者又會衍生自 <bpt id="p2">[</bpt>Object<ept id="p2">](xref:System.Object)</ept>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Although <bpt id="p1">[</bpt>ValueType<ept id="p1">](xref:System.ValueType)</ept> overrides <bpt id="p2">[</bpt>Object.ToString<ept id="p2">](xref:System.Object.ToString)</ept>, its implementation is identical.</source>
          <target state="translated">雖然 <bpt id="p1">[</bpt>ValueType<ept id="p1">](xref:System.ValueType)</ept> 會覆寫 <bpt id="p2">[</bpt>Object.ToString<ept id="p2">](xref:System.Object.ToString)</ept>，但實作方法是相同的。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Overriding the ToString method</source>
          <target state="translated">覆寫 ToString 方法</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Displaying the name of a type is often of limited use and does not allow consumers of your types to differentiate one instance from another.</source>
          <target state="translated">顯示類型的名稱通常用途不大，亦無法讓您類型的使用者藉以區分不同的執行個體。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>However, you can override the <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> method to provide a more useful representation of an object’s value.</source>
          <target state="translated">不過，您可以覆寫 <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> 方法，以更實用的方式表示物件的值。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The following example defines a <ph id="ph1">`Temperature`</ph> object and overrides its <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> method to display the temperature in degrees Celsius.</source>
          <target state="translated">下列範例定義 <ph id="ph1">`Temperature`</ph> 物件，並覆寫其 <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> 方法來顯示攝氏溫度。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In .NET, the <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> method of each primitive value type has been overridden to display the object’s value instead of its name.</source>
          <target state="translated">在 .NET 中，每個基本實值型別的 <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> 方法都已經過覆寫來顯示物件的值，而非物件的名稱。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The following table shows the override for each primitive type.</source>
          <target state="translated">下表顯示各基本類型如何覆寫 ToString 方法。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Note that most of the overridden methods call another overload of the <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> method and pass it the "G" format specifier, which defines the general format for its type, and an <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> object that represents the current culture.</source>
          <target state="translated">請注意，大部分經過覆寫的方法都會呼叫 <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> 方法的另一個多載，並且將 "G" 格式規範 (此規範定義此類型的一般格式) 和 <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> 物件 (此物件表示目前文化特性) 傳遞至這個多載。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">類型</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>ToString override</source>
          <target state="translated">ToString 覆寫</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Boolean<ept id="p1">](xref:System.Boolean)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>布林值<ept id="p1">](xref:System.Boolean)</ept></target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Returns either <bpt id="p1">[</bpt>Boolean.TrueString<ept id="p1">](xref:System.Boolean.TrueString)</ept> or <bpt id="p2">[</bpt>Boolean.FalseString<ept id="p2">](xref:System.Boolean.FalseString)</ept>.</source>
          <target state="translated">傳回 <bpt id="p1">[</bpt>Boolean.TrueString<ept id="p1">](xref:System.Boolean.TrueString)</ept> 或 <bpt id="p2">[</bpt>Boolean.FalseString<ept id="p2">](xref:System.Boolean.FalseString)</ept>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Byte<ept id="p1">](xref:System.Byte)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Byte<ept id="p1">](xref:System.Byte)</ept></target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Calls <ph id="ph1">`Byte.ToString("G", NumberFormatInfo.CurrentInfo)`</ph> to format the <bpt id="p1">[</bpt>Byte<ept id="p1">](xref:System.Byte)</ept> value for the current culture.</source>
          <target state="translated">呼叫 <ph id="ph1">`Byte.ToString("G", NumberFormatInfo.CurrentInfo)`</ph>，以根據目前的文化特性來格式化 <bpt id="p1">[</bpt>Byte<ept id="p1">](xref:System.Byte)</ept> 值。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Char<ept id="p1">](xref:System.Char)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Char<ept id="p1">](xref:System.Char)</ept></target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Returns the character as a string.</source>
          <target state="translated">以字串形式傳回字元。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept></target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Calls <ph id="ph1">`DateTime.ToString("G", DatetimeFormatInfo.CurrentInfo)`</ph> to format the date and time value for the current culture.</source>
          <target state="translated">呼叫 <ph id="ph1">`DateTime.ToString("G", DatetimeFormatInfo.CurrentInfo)`</ph>，以根據對目前的文化特性來格式化日期和時間值。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Decimal<ept id="p1">](xref:System.Decimal)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Decimal<ept id="p1">](xref:System.Decimal)</ept></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Calls <ph id="ph1">`Decimal.ToString("G", NumberFormatInfo.CurrentInfo)`</ph> to format the <bpt id="p1">[</bpt>Decimal<ept id="p1">](xref:System.Decimal)</ept> value for the current culture.</source>
          <target state="translated">呼叫 <ph id="ph1">`Decimal.ToString("G", NumberFormatInfo.CurrentInfo)`</ph>，以根據目前的文化特性來格式化 <bpt id="p1">[</bpt>Decimal<ept id="p1">](xref:System.Decimal)</ept> 值。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Double<ept id="p1">](xref:System.Double)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Double<ept id="p1">](xref:System.Double)</ept></target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Calls <ph id="ph1">`Double.ToString("G", NumberFormatInfo.CurrentInfo)`</ph> to format the <bpt id="p1">[</bpt>Double<ept id="p1">](xref:System.Double)</ept> value for the current culture.</source>
          <target state="translated">呼叫 <ph id="ph1">`Double.ToString("G", NumberFormatInfo.CurrentInfo)`</ph>，以根據目前的文化特性來格式化 <bpt id="p1">[</bpt>Double<ept id="p1">](xref:System.Double)</ept> 值。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Int16<ept id="p1">](xref:System.Int16)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Int16<ept id="p1">](xref:System.Int16)</ept></target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Calls <ph id="ph1">`Int16.ToString("G", NumberFormatInfo.CurrentInfo)`</ph> to format the <bpt id="p1">[</bpt>Int16<ept id="p1">](xref:System.Int16)</ept> value for the current culture.</source>
          <target state="translated">呼叫 <ph id="ph1">`Int16.ToString("G", NumberFormatInfo.CurrentInfo)`</ph>，以根據目前的文化特性來格式化 <bpt id="p1">[</bpt>Int16<ept id="p1">](xref:System.Int16)</ept> 值。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Int32<ept id="p1">](xref:System.Int32)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Int32<ept id="p1">](xref:System.Int32)</ept></target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Calls <ph id="ph1">`Int16.ToString("G", NumberFormatInfo.CurrentInfo)`</ph> to format the <bpt id="p1">[</bpt>Int32<ept id="p1">](xref:System.Int32)</ept> value for the current culture.</source>
          <target state="translated">呼叫 <ph id="ph1">`Int16.ToString("G", NumberFormatInfo.CurrentInfo)`</ph>，以根據目前的文化特性來格式化 <bpt id="p1">[</bpt>Int32<ept id="p1">](xref:System.Int32)</ept> 值。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Int64<ept id="p1">](xref:System.Int64)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Int64<ept id="p1">](xref:System.Int64)</ept></target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Calls <ph id="ph1">`Int16.ToString("G", NumberFormatInfo.CurrentInfo)`</ph> to format the <bpt id="p1">[</bpt>Int64<ept id="p1">](xref:System.Int64)</ept> value for the current culture.</source>
          <target state="translated">呼叫 <ph id="ph1">`Int16.ToString("G", NumberFormatInfo.CurrentInfo)`</ph>，以根據目前的文化特性來格式化 <bpt id="p1">[</bpt>Int64<ept id="p1">](xref:System.Int64)</ept> 值。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SByte<ept id="p1">](xref:System.SByte)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>SByte<ept id="p1">](xref:System.SByte)</ept></target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Calls <ph id="ph1">`Int16.ToString("G", NumberFormatInfo.CurrentInfo)`</ph> to format the <bpt id="p1">[</bpt>SByte<ept id="p1">](xref:System.SByte)</ept></source>
          <target state="translated">呼叫 <ph id="ph1">`Int16.ToString("G", NumberFormatInfo.CurrentInfo)`</ph>，以根據目前的文化特性來格式化 <bpt id="p1">[</bpt>SByte<ept id="p1">](xref:System.SByte)</ept></target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>value for the current culture.</source>
          <target state="translated">值。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Single<ept id="p1">](xref:System.Single)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Single<ept id="p1">](xref:System.Single)</ept></target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Calls <ph id="ph1">`Int16.ToString("G", NumberFormatInfo.CurrentInfo)`</ph> to format the <bpt id="p1">[</bpt>Single<ept id="p1">](xref:System.Single)</ept> value for the current culture.</source>
          <target state="translated">呼叫 <ph id="ph1">`Int16.ToString("G", NumberFormatInfo.CurrentInfo)`</ph>，以根據目前的文化特性來格式化 <bpt id="p1">[</bpt>Single<ept id="p1">](xref:System.Single)</ept> 值。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>UInt32<ept id="p1">](xref:System.UInt32)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>UInt32<ept id="p1">](xref:System.UInt32)</ept></target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Calls <ph id="ph1">`Int16.ToString("G", NumberFormatInfo.CurrentInfo)`</ph> to format the <bpt id="p1">[</bpt>UInt32<ept id="p1">](xref:System.UInt32)</ept>value for the current culture.</source>
          <target state="translated">呼叫 <ph id="ph1">`Int16.ToString("G", NumberFormatInfo.CurrentInfo)`</ph>，以根據目前的文化特性來格式化 <bpt id="p1">[</bpt>UInt32<ept id="p1">](xref:System.UInt32)</ept> 值。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>UInt32<ept id="p1">](xref:System.UInt32)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>UInt32<ept id="p1">](xref:System.UInt32)</ept></target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Calls <ph id="ph1">`Int16.ToString("G", NumberFormatInfo.CurrentInfo)`</ph> to format the <bpt id="p1">[</bpt>UInt32<ept id="p1">](xref:System.UInt32)</ept> value for the current culture.</source>
          <target state="translated">呼叫 <ph id="ph1">`Int16.ToString("G", NumberFormatInfo.CurrentInfo)`</ph>，以根據目前的文化特性來格式化 <bpt id="p1">[</bpt>UInt32<ept id="p1">](xref:System.UInt32)</ept> 值。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>UInt64<ept id="p1">](xref:System.UInt64)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>UInt64<ept id="p1">](xref:System.UInt64)</ept></target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Calls <ph id="ph1">`Int16.ToString("G", NumberFormatInfo.CurrentInfo)`</ph> to format the <bpt id="p1">[</bpt>UInt64<ept id="p1">](xref:System.UInt64)</ept>  value for the current culture.</source>
          <target state="translated">呼叫 <ph id="ph1">`Int16.ToString("G", NumberFormatInfo.CurrentInfo)`</ph>，以根據目前的文化特性來格式化 <bpt id="p1">[</bpt>UInt64<ept id="p1">](xref:System.UInt64)</ept> 值。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The ToString method and format strings</source>
          <target state="translated">ToString 方法及格式字串</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Relying on the default <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> method or overriding <bpt id="p2">[</bpt>ToString<ept id="p2">](xref:System.Object.ToString)</ept> is appropriate when an object has a single string representation.</source>
          <target state="translated">當物件只有單一字串表示時，使用預設 <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> 方法或覆寫 <bpt id="p2">[</bpt>ToString<ept id="p2">](xref:System.Object.ToString)</ept> 都沒有問題。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>However, the value of an object often has multiple representations.</source>
          <target state="translated">不過，物件的值通常有多種表示。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>For example, a temperature can be expressed in degrees Fahrenheit, degrees Celsius, or kelvins.</source>
          <target state="translated">例如，溫度可以用華氏、攝氏或開氏溫度表示。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Similarly, the integer value 10 can be represented in numerous ways, including 10, 10.0, 1.0e01, or $10.00.</source>
          <target state="translated">同樣地，整數值 10 可以用許多方式表示，包括 10、10.0、1.0e01 或 $10.00。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>To enable a single value to have multiple string representations, .NET uses format strings.</source>
          <target state="translated">為了讓單一值可以具有多種字串表示，.NET 使用格式字串。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A format string is a string that contains one or more predefined format specifiers, which are single characters or groups of characters that define how the <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> method should format its output.</source>
          <target state="translated">格式字串是包含一個或多個預先定義之格式規範的字串，這個字串是單一字元或字元群組，用於定義 <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> 方法應採用的輸出格式。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The format string is then passed as a parameter to the object's <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> method and determines how the string representation of that object's value should appear.</source>
          <target state="translated">然後，格式字串會當做參數傳遞至物件的 <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> 方法，以決定如何呈現該物件值的字串表示。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>All numeric types, date and time types, and enumeration types in .NET support a predefined set of format specifiers.</source>
          <target state="translated">.NET 中所有的數值類型、日期和時間類型，以及列舉類型，都支援一組預先定義的格式規範。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>You can also use format strings to define multiple string representations of your application-defined data types.</source>
          <target state="translated">您也可以利用格式字串定義多種字串表示給您應用程式中定義的資料類型。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Standard format strings</source>
          <target state="translated">標準格式字串</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A standard format string contains a single format specifier, which is an alphabetic character that defines the string representation of the object to which it is applied, along with an optional precision specifier that affects how many digits are displayed in the result string.</source>
          <target state="translated">標準格式字串包含單一格式規範 (一個字母字元，定義套用此規範之物件的字串表示) 和選擇性的精確度規範 (這個規範影響結果字串中顯示的位數)。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>If the precision specifier is omitted or is not supported, a standard format specifier is equivalent to a standard format string.</source>
          <target state="translated">如果省略或不支援精確度規範，則標準格式規範與標準格式字串無異。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>.NET defines a set of standard format specifiers for all numeric types, all date and time types, and all enumeration types.</source>
          <target state="translated">.NET 定義一組適用於所有數值類型、所有日期和時間類型，以及所有列舉類型的標準格式規範。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>For example, each of these categories supports a "G" standard format specifier, which defines a general string representation of a value of that type.</source>
          <target state="translated">例如，這些分類每個都支援 "G" 標準格式規範 (這個規範定義該類型之值的一般字串表示)。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Standard format strings for enumeration types directly control the string representation of a value.</source>
          <target state="translated">列舉類型的標準格式字串直接控制了值的字串表示。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The format strings passed to an enumeration value’s <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> method determine whether the value is displayed using its string name (the "G" and "F" format specifiers), its underlying integral value (the "D" format specifier), or its hexadecimal value (the "X" format specifier).</source>
          <target state="translated">傳遞給列舉值之 <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> 方法的格式字串決定了該值是以其字串名稱 ("G" 和 "F" 格式規範)、基礎整數值 ("D" 格式規範)，還是十六進位值 ("X" 格式規範) 來顯示。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of standard format strings to format a <bpt id="p1">[</bpt>DayOfWeek<ept id="p1">](xref:System.DayOfWeek)</ept> enumeration value.</source>
          <target state="translated">下列範例示範如何使用標準格式字串來格式化 <bpt id="p1">[</bpt>DayOfWeek<ept id="p1">](xref:System.DayOfWeek)</ept> 列舉值。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>For information about enumeration format strings, see <bpt id="p1">[</bpt>Enumeration format strings<ept id="p1">](enumeration-format.md)</ept>.</source>
          <target state="translated">如需列舉格式字串的資訊，請參閱<bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](enumeration-format.md)</ept>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Standard format strings for numeric types usually define a result string whose precise appearance is controlled by one or more property values.</source>
          <target state="translated">數值類型的標準格式字串定義出的結果字串之確切外觀通常是由一個或多個屬性值所控制。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For example, the "C" format specifier formats a number as a currency value.</source>
          <target state="translated">例如，"C" 格式規範會將數字格式化為貨幣值。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>When you call the <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> method with the "C" format specifier as the only parameter, the following property values from the current culture’s <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> object are used to define the string representation of the numeric value:</source>
          <target state="translated">當您將 "C" 格式規範作為唯一參數來呼叫 <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> 方法時，會使用目前文化特性之 <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> 物件中的下列屬性值來定義數值的字串表示：</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CurrencySymbol<ept id="p1">](xref:System.Globalization.NumberFormatInfo.CurrencySymbol)</ept> property, which specifies the current culture’s currency symbol.</source>
          <target state="translated"><bpt id="p1">[</bpt>CurrencySymbol<ept id="p1">](xref:System.Globalization.NumberFormatInfo.CurrencySymbol)</ept> 屬性，指定目前文化特性的貨幣符號。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CurrencyNegativePattern<ept id="p1">](xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern)</ept> or <bpt id="p2">[</bpt>CurrencyPositivePattern<ept id="p2">](xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern)</ept> property, which returns an integer that determines the following:</source>
          <target state="translated"><bpt id="p1">[</bpt>CurrencyNegativePattern<ept id="p1">](xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern)</ept> 或 <bpt id="p2">[</bpt>CurrencyPositivePattern<ept id="p2">](xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern)</ept> 屬性，這個屬性傳回的整數會決定：</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The placement of the currency symbol.</source>
          <target state="translated">貨幣符號的位置。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Whether negative values are indicated by a leading negative sign, a trailing negative sign, or parentheses.</source>
          <target state="translated">負值是以開頭負號、結尾負號還是括號來表示。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Whether a space appears between the numeric value and the currency symbol.</source>
          <target state="translated">數值和貨幣符號之間是否顯示一個空格。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CurrencyDecimalDigits<ept id="p1">](xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits)</ept> property, which defines the number of fractional digits in the result string.</source>
          <target state="translated"><bpt id="p1">[</bpt>CurrencyDecimalDigits<ept id="p1">](xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits)</ept> 屬性，定義結果字串中的小數位數。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CurrencyDecimalSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator)</ept> property, which defines the decimal separator symbol in the result string.</source>
          <target state="translated"><bpt id="p1">[</bpt>CurrencyDecimalSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator)</ept> 屬性，定義結果字串中的十進位分隔符號。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CurrencyGroupSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator)</ept> property, which defines the group separator symbol.</source>
          <target state="translated"><bpt id="p1">[</bpt>CurrencyGroupSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator)</ept> 屬性，定義群組分隔符號。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>CurrencyGroupSizes<ept id="p1">](xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes)</ept> property, which defines the number of digits in each group to the left of the decimal.</source>
          <target state="translated"><bpt id="p1">[</bpt>CurrencyGroupSizes<ept id="p1">](xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes)</ept> 屬性，定義小數點左邊每個群組的位數。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>NegativeSign<ept id="p1">](xref:System.Globalization.NumberFormatInfo.NegativeSign)</ept> property, which determines the negative sign used in the result string if parentheses are not used to indicate negative values.</source>
          <target state="translated"><bpt id="p1">[</bpt>NegativeSign<ept id="p1">](xref:System.Globalization.NumberFormatInfo.NegativeSign)</ept> 屬性，決定當不使用括號來表示負值時，要在結果字串中使用的負號。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>In addition, numeric format strings may include a precision specifier.</source>
          <target state="translated">此外，數值格式字串也可以包含精確度規範。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The meaning of this specifier depends on the format string with which it is used, but it typically indicates either the total number of digits or the number of fractional digits that should appear in the result string.</source>
          <target state="translated">這個規範的意義視搭配使用的格式字串而定，但通常是表示結果字串中應該顯示的總位數或小數位數。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>For example, the following example uses the "X4" standard numeric string and a precision specifier to create a string value that has four hexadecimal digits.</source>
          <target state="translated">例如，下列範例會使用 "X4" 標準數值字串和精確度規範，建立具有四個十六進位數字的字串值。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>For more information about standard numeric formatting strings, see <bpt id="p1">[</bpt>Standard numeric format strings<ept id="p1">](standard-numeric.md)</ept>.</source>
          <target state="translated">如需標準數值格式字串的詳細資訊，請參閱<bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](standard-numeric.md)</ept>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Standard format strings for date and time values are aliases for custom format strings stored by a particular <bpt id="p1">[</bpt>DateTimeFormatInfo<ept id="p1">](xref:System.Globalization.DateTimeFormatInfo)</ept> class.</source>
          <target state="translated">日期和時間值的標準格式字串是特定 <bpt id="p1">[</bpt>DateTimeFormatInfo<ept id="p1">](xref:System.Globalization.DateTimeFormatInfo)</ept> 類別所儲存之自訂格式字串的別名。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>For example, calling the <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> method of a date and time value with the "D" format specifier displays the date and time by using the custom format string stored in the current culture’s <bpt id="p2">[</bpt>DateTimeFormatInfo.LongDatePattern<ept id="p2">](xref:System.Globalization.DateTimeFormatInfo.LongDatePattern)</ept> property.</source>
          <target state="translated">例如，以 "D" 格式規範來呼叫日期和時間值的 <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Object.ToString)</ept> 方法，將會使用目前文化特性之 <bpt id="p2">[</bpt>DateTimeFormatInfo.LongDatePattern<ept id="p2">](xref:System.Globalization.DateTimeFormatInfo.LongDatePattern)</ept> 屬性中所儲存的自訂格式字串來顯示日期和時間</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>(For more information about custom format strings, see the <bpt id="p1">[</bpt>Custom format strings<ept id="p1">](#custom-format-strings)</ept> section.) The following example illustrates this relationship.</source>
          <target state="translated">(如需自訂格式字串的詳細資訊，請參閱<bpt id="p1">[</bpt>自訂格式字串<ept id="p1">](#custom-format-strings)</ept>一節)。下列範例示範這種關聯性。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>For more information about standard date and time format strings, see <bpt id="p1">[</bpt>Standard date and time format strings<ept id="p1">](standard-datetime.md)</ept>.</source>
          <target state="translated">如需標準日期與時間格式字串的詳細資訊，請參閱<bpt id="p1">[</bpt>標準日期與時間格式字串<ept id="p1">](standard-datetime.md)</ept>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>You can also use standard format strings to define the string representation of an application-defined object that is produced by the object’s <ph id="ph1">`ToString(String)`</ph> method.</source>
          <target state="translated">對於應用程式定義的物件，您也可以使用標準格式字串來定義由該物件的 <ph id="ph1">`ToString(String)`</ph> 方法所產生的字串表示。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>You can define the specific standard format specifiers that your object supports, and you can determine whether they are case-sensitive or case-insensitive.</source>
          <target state="translated">您可以定義您的物件所支援的特定標準格式規範，並且決定這項規範是否區分大小寫。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Your implementation of the <ph id="ph1">`ToString(String)`</ph> method should support the following:</source>
          <target state="translated">您對 <ph id="ph1">`ToString(String)`</ph> 方法的實作應該要能支援：</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>A "G" format specifier that represents a customary or common format of the object.</source>
          <target state="translated">"G" 格式規範，表示物件的慣用或通用格式。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The parameterless overload of your object's <ph id="ph1">`ToString`</ph> method should call its <ph id="ph2">`ToString(String)`</ph> overload and pass it the "G" standard format string.</source>
          <target state="translated">您物件的 <ph id="ph1">`ToString`</ph> 方法的無參數多載應該要呼叫這個方法的 <ph id="ph2">`ToString(String)`</ph> 多載，並且將 "G" 標準格式字串傳遞給這個方法。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Support for a format specifier that is equal to a null reference.</source>
          <target state="translated">支援等於 null 參考的格式規範。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>A format specifier that is equal to a null reference should be considered equivalent to the "G" format specifier.</source>
          <target state="translated">等於 null 參考的格式規範應該要視為相當於 "G" 格式規範。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>For example, a <ph id="ph1">`Temperature`</ph> class can internally store the temperature in degrees Celsius and use format specifiers to represent the value of the <ph id="ph2">`Temperature`</ph> object in degrees Celsius, degrees Fahrenheit, and kelvins.</source>
          <target state="translated">例如，<ph id="ph1">`Temperature`</ph> 類別可以在內部以攝氏儲存溫度，並透過格式規範以攝氏、華氏和開氏溫度來表示 <ph id="ph2">`Temperature`</ph> 物件的值。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The following example provides an illustration.</source>
          <target state="translated">下列範例提供一個實例。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Custom format strings</source>
          <target state="translated">自訂格式字串</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>In addition to the standard format strings, .NET defines custom format strings for both numeric values and date and time values.</source>
          <target state="translated">除了標準格式字串，.NET 也為數值以及日期和時間值定義了自訂格式字串。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>A custom format string consists of one or more custom format specifiers that define the string representation of a value.</source>
          <target state="translated">自訂格式字串由一個或多個自訂格式規範組成，這些規範定義了值的字串表示。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>For example, the custom date and time format string "yyyy/mm/dd hh:mm:ss.ffff t zzz" converts a date to its string representation in the form "2008/11/15 07:45:00.0000 P -08:00" for the en-US culture.</source>
          <target state="translated">例如，自訂日期和時間格式字串 "yyyy/mm/dd hh:mm:ss.ffff t zzz" 會將日期轉換為其字串表示，以 en-US 文化特性而言為 "2008/11/15 07:45:00.0000 P -08:00" 形式。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Similarly, the custom format string "0000" converts the integer value 12 to "0012".</source>
          <target state="translated">同樣地，自訂格式字串 "0000" 會將整數值 12 轉換為 "0012"。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>For a complete list of custom format strings, see <bpt id="p1">[</bpt>Custom date and time format strings<ept id="p1">](custom-datetime.md)</ept> and <bpt id="p2">[</bpt>Custom numeric format strings<ept id="p2">](custom-numeric.md)</ept>.</source>
          <target state="translated">如需完整的自訂格式字串清單，請參閱<bpt id="p1">[</bpt>自訂日期與時間格式字串<ept id="p1">](custom-datetime.md)</ept>及<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](custom-numeric.md)</ept>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>If a format string consists of a single custom format specifier, the format specifier should be preceded by the percent (%) symbol to avoid confusion with a standard format specifier.</source>
          <target state="translated">如果格式字串由單一自訂格式規範組成，則應該在格式規範前面加上百分比 (%) 符號，以避免與標準格式規範產生混淆。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The following example uses the "M" custom format specifier to display a one-digit or two-digit number of the month of a particular date.</source>
          <target state="translated">下列範例會使用 "M" 自訂格式規範來顯示特定日期的一位數或兩位數月份。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Many standard format strings for date and time values are aliases for custom format strings that are defined by properties of the <bpt id="p1">[</bpt>DateTimeFormatInfo<ept id="p1">](xref:System.Globalization.DateTimeFormatInfo)</ept> object.</source>
          <target state="translated">日期和時間值的許多標準格式字串都是自訂格式字串 (這些自訂格式字串由 <bpt id="p1">[</bpt>DateTimeFormatInfo<ept id="p1">](xref:System.Globalization.DateTimeFormatInfo)</ept> 物件的屬性所定義) 的別名。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Custom format strings also offer considerable flexibility in providing application-defined formatting for numeric values or date and time values.</source>
          <target state="translated">自訂格式字串也提供極大的彈性，來提供應用程式定義的數值或日期和時間值格式。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>You can define your own custom result strings for both numeric values and date and time values by combining multiple custom format specifiers into a single custom format string.</source>
          <target state="translated">您可以將多個自訂格式規範結合成單一自訂格式字串，以自訂您的數值及日期和時間值結果字串。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The following example defines a custom format string that displays the day of the week in parentheses after the month name, day, and year.</source>
          <target state="translated">下列範例定義的自訂格式字串，會在月份名稱、日期和年後面顯示加上括號的星期。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The following example defines a custom format string that displays an <bpt id="p1">[</bpt>Int64<ept id="p1">](xref:System.Int64)</ept> value as a standard, seven-digit U.S. telephone number along with its area code.</source>
          <target state="translated">下列範例會定義自訂格式字串，該字串會將 <bpt id="p1">[</bpt>Int64<ept id="p1">](xref:System.Int64)</ept> 值顯示為標準的七位數美國電話號碼且包含其區碼。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Although standard format strings can generally handle most of the formatting needs for your application-defined types, you may also define custom format specifiers to format your types.</source>
          <target state="translated">雖然標準格式字串通常能夠為應用程式定義的類型解決大部分的格式需求，但您也可以定義自訂格式規範來格式化您的類型。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Format strings and .NET types</source>
          <target state="translated">格式字串與 .NET 類型</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>All numeric types (that is, the <bpt id="p1">[</bpt>Byte<ept id="p1">](xref:System.Byte)</ept>, <bpt id="p2">[</bpt>Decimal<ept id="p2">](xref:System.Decimal)</ept>, <bpt id="p3">[</bpt>Double<ept id="p3">](xref:System.Double)</ept>, <bpt id="p4">[</bpt>Int16<ept id="p4">](xref:System.Int16)</ept>, <bpt id="p5">[</bpt>Int32<ept id="p5">](xref:System.Int32)</ept>, <bpt id="p6">[</bpt>Int64<ept id="p6">](xref:System.Int64)</ept>, <bpt id="p7">[</bpt>SByte<ept id="p7">](xref:System.SByte)</ept>, <bpt id="p8">[</bpt>Single<ept id="p8">](xref:System.Single)</ept>, <bpt id="p9">[</bpt>UInt16<ept id="p9">](xref:System.UInt16)</ept>, <bpt id="p10">[</bpt>UInt32<ept id="p10">](xref:System.UInt32)</ept>, <bpt id="p11">[</bpt>UInt64<ept id="p11">](xref:System.UInt64)</ept>, and <bpt id="p12">[</bpt>BigInteger<ept id="p12">](xref:System.Numerics.BigInteger)</ept> types), as well as the <bpt id="p13">[</bpt>DateTime<ept id="p13">](xref:System.DateTime)</ept>, <bpt id="p14">[</bpt>DateTimeOffset<ept id="p14">](xref:System.DateTimeOffset)</ept>, <bpt id="p15">[</bpt>TimeSpan<ept id="p15">](xref:System.TimeSpan)</ept>, <bpt id="p16">[</bpt>Guid<ept id="p16">](xref:System.Guid)</ept>, and all enumeration types, support formatting with format strings.</source>
          <target state="translated">所有數值類型 (也就是 <bpt id="p1">[</bpt>Byte<ept id="p1">](xref:System.Byte)</ept>、<bpt id="p2">[</bpt>Decimal<ept id="p2">](xref:System.Decimal)</ept>、<bpt id="p3">[</bpt>Double<ept id="p3">](xref:System.Double)</ept>、<bpt id="p4">[</bpt>Int16<ept id="p4">](xref:System.Int16)</ept>、<bpt id="p5">[</bpt>Int32<ept id="p5">](xref:System.Int32)</ept>、<bpt id="p6">[</bpt>Int64<ept id="p6">](xref:System.Int64)</ept>、<bpt id="p7">[</bpt>SByte<ept id="p7">](xref:System.SByte)</ept>、<bpt id="p8">[</bpt>Single<ept id="p8">](xref:System.Single)</ept>、<bpt id="p9">[</bpt>UInt16<ept id="p9">](xref:System.UInt16)</ept>、<bpt id="p10">[</bpt>UInt32<ept id="p10">](xref:System.UInt32)</ept>、<bpt id="p11">[</bpt>UInt64<ept id="p11">](xref:System.UInt64)</ept> 和 <bpt id="p12">[</bpt>BigInteger<ept id="p12">](xref:System.Numerics.BigInteger)</ept> 類型)，以及 <bpt id="p13">[</bpt>DateTime<ept id="p13">](xref:System.DateTime)</ept>、<bpt id="p14">[</bpt>DateTimeOffset<ept id="p14">](xref:System.DateTimeOffset)</ept>、<bpt id="p15">[</bpt>TimeSpan<ept id="p15">](xref:System.TimeSpan)</ept>、<bpt id="p16">[</bpt>Guid<ept id="p16">](xref:System.Guid)</ept> 和所有列舉類型，都支援以格式字串進行格式化。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>For information on the specific format strings supported by each type, see the following topics:</source>
          <target state="translated">如需每個類型所支援特定格式字串的資訊，請參閱下列主題：</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">標題</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">定義</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard numeric format strings<ept id="p1">](standard-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](standard-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Describes standard format strings that create commonly used string representations of numeric values.</source>
          <target state="translated">說明建立數值常用之字串表示的標準格式字串。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom numeric format strings<ept id="p1">](custom-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>自訂數值格式字串<ept id="p1">](custom-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Describes custom format strings that create application-specific formats for numeric values.</source>
          <target state="translated">說明建立應用程式專屬數值格式的自訂格式字串。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard date and time format strings<ept id="p1">](standard-datetime.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準日期與時間格式字串<ept id="p1">](standard-datetime.md)</ept></target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Describes standard format strings that create commonly used string representations of <bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept> values.</source>
          <target state="translated">說明建立 <bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept> 值之常用字串表示的標準格式字串。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom date and time format strings<ept id="p1">](custom-datetime.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>自訂日期與時間格式字串<ept id="p1">](custom-datetime.md)</ept></target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Describes custom format strings that create application-specific formats for <bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept> values.</source>
          <target state="translated">說明為 <bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept>值建立應用程式專屬格式的自訂格式字串。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard TimeSpan format Strings<ept id="p1">](standard-timespan.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準 TimeSpan 格式字串<ept id="p1">](standard-timespan.md)</ept></target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Describes standard format strings that create commonly used string representations of time intervals.</source>
          <target state="translated">說明建立時間間隔之常用字串表示的標準格式字串。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom TimeSpan format strings<ept id="p1">](custom-timespan.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>自訂 TimeSpan 格式字串<ept id="p1">](custom-timespan.md)</ept></target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Describes custom format strings that create application-specific formats for time intervals.</source>
          <target state="translated">說明建立應用程式專屬數值格式的自訂格式字串。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Enumeration format strings<ept id="p1">](enumeration-format.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](enumeration-format.md)</ept></target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Describes standard format strings that are used to create string representations of enumeration values.</source>
          <target state="translated">說明用來建立列舉值之字串表示的標準格式字串。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Guid.ToString(String)<ept id="p1">](xref:System.Guid.ToString(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guid.ToString(String)<ept id="p1">](xref:System.Guid.ToString(System.String))</ept></target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Describes standard format strings for <bpt id="p1">[</bpt>Guid<ept id="p1">](xref:System.Guid)</ept> values.</source>
          <target state="translated">描述 <bpt id="p1">[</bpt>Guid<ept id="p1">](xref:System.Guid)</ept> 值的標準格式字串。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Culture-Sensitive Formatting with Format Providers and the IFormatProvider Interface</source>
          <target state="translated">以格式提供者和 IFormatProvider 介面進行符合文化特性的格式化</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Although format specifiers let you customize the formatting of objects, producing a meaningful string representation of objects often requires additional formatting information.</source>
          <target state="translated">雖然格式規範可讓您自訂物件的格式，但如果要為物件產生有意義的字串表示，您通常還需要其他格式設定資訊。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>For example, formatting a number as a currency value by using either the "C" standard format string or a custom format string such as "$ #,#.00" requires, at a minimum, information about the correct currency symbol, group separator, and decimal separator to be available to include in the formatted string.</source>
          <target state="translated">例如，如果要使用 "C" 標準格式字串或自訂格式字串 (例如 "$ #,#.00") 將數字格式化為貨幣值，您至少還需要有正確的貨幣符號、群組分隔符號和小數分隔符號的相關資訊。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>In .NET, this additional formatting information is made available through the <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> interface, which is provided as a parameter to one or more overloads of the <ph id="ph1">`ToString`</ph> method of numeric types and date and time types.</source>
          <target state="translated">在 .NET 中，這項額外的格式資訊是透過 <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 介面取得，而這個介面會當做傳遞至數值類型以及日期和時間類型的 <ph id="ph1">`ToString`</ph> 方法之一個或多個多載的參數來提供。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> implementations are used in .NET to support culture-specific formatting.</source>
          <target state="translated"><bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 實作會在 .NET 中用來支援文化特性專屬格式。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The following example illustrates how the string representation of an object changes when it is formatted with three <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> objects that represent different cultures.</source>
          <target state="translated">下列範例示範以代表不同文化特性的三個 <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 物件進行格式化時，物件的字串表示會有什麼樣的變化。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> interface includes one method, <bpt id="p2">[</bpt>GetFormat(Type)<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept>, which has a single parameter that specifies the type of object that provides formatting information.</source>
          <target state="translated"><bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 介面包含一個 <bpt id="p2">[</bpt>GetFormat(Type)<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 方法，這個方法具有單一參數來指定可提供格式設定資訊之物件的類型。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>If the method can provide an object of that type, it returns it.</source>
          <target state="translated">如果這個方法可以提供該類型的物件，則會傳回該物件。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns a null reference.</source>
          <target state="translated">否則會傳回 null 參考。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IFormatProvider.GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> is a callback method.</source>
          <target state="translated"><bpt id="p1">[</bpt>IFormatProvider.GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 是一種回呼方法。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>When you call a <ph id="ph1">`ToString`</ph> method overload that includes an <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> parameter, it calls the <bpt id="p2">[</bpt>GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> method of that <bpt id="p3">[</bpt>IFormatProvider<ept id="p3">](xref:System.IFormatProvider)</ept> object.</source>
          <target state="translated">當您呼叫包含 <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 參數的 <ph id="ph1">`ToString`</ph> 方法多載時，這個多載會呼叫該 <bpt id="p3">[</bpt>IFormatProvider<ept id="p3">](xref:System.IFormatProvider)</ept> 物件的 <bpt id="p2">[</bpt>GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 方法。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> method is responsible for returning an object that provides the necessary formatting information, as specified by its <bpt id="p2">*</bpt>formatType<ept id="p2">*</ept> parameter, to the <ph id="ph1">`ToString`</ph> method.</source>
          <target state="translated"><bpt id="p1">[</bpt>GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 方法負責將提供必要格式資訊的物件 (由其 <bpt id="p2">*</bpt>formatType<ept id="p2">*</ept> 參數指定)，傳回給 <ph id="ph1">`ToString`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>A number of formatting or string conversion methods include a parameter of type <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept>, but in many cases the value of the parameter is ignored when the method is called.</source>
          <target state="translated">有幾個格式化或字串轉換方法都包含 <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 類型的參數，但通常呼叫方法時，會忽略這個參數的值。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The following table lists some of the formatting methods that use the parameter and the type of the <bpt id="p1">[</bpt>Type<ept id="p1">](xref:System.Type)</ept> object that they pass to the <bpt id="p2">[</bpt>IFormatProvider.GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> method.</source>
          <target state="translated">下表列出一些使用這個參數的格式化方法，以及這些方法傳遞至 <bpt id="p2">[</bpt>IFormatProvider.GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 方法之 <bpt id="p1">[</bpt>Type<ept id="p1">](xref:System.Type)</ept> 物件的類型。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">方法</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Type of <bpt id="p1">*</bpt>formatType<ept id="p1">*</ept> parameter</source>
          <target state="translated"><bpt id="p1">*</bpt>formatType<ept id="p1">*</ept> 參數的類型</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ToString`</ph> method of numeric types</source>
          <target state="translated">數字類型的 <ph id="ph1">`ToString`</ph> 方法</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Globalization.NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Globalization.NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept></target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ToString`</ph> method of date and time types</source>
          <target state="translated">日期和時間類型的 <ph id="ph1">`ToString`</ph> 方法</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Globalization.DateTimeFormatInfo<ept id="p1">](xref:System.Globalization.DateTimeFormatInfo)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Globalization.DateTimeFormatInfo<ept id="p1">](xref:System.Globalization.DateTimeFormatInfo)</ept></target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept></target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept></target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept></target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept></target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>.NET provides three classes that implement <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept>:</source>
          <target state="translated">.NET 提供三個實作 <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 的類別：</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DateTimeFormatInfo<ept id="p1">](xref:System.Globalization.DateTimeFormatInfo)</ept>, a class that provides formatting information for date and time values for a specific culture.</source>
          <target state="translated"><bpt id="p1">[</bpt>DateTimeFormatInfo<ept id="p1">](xref:System.Globalization.DateTimeFormatInfo)</ept>，這個類別提供特定文化特性之日期和時間值的格式資訊。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Its <bpt id="p1">[</bpt>IFormatProvider.GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> implementation returns an instance of itself.</source>
          <target state="translated">它的 <bpt id="p1">[</bpt>IFormatProvider.GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 實作會傳回本身的執行個體。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept>, a class that provides numeric formatting information for a specific culture.</source>
          <target state="translated"><bpt id="p1">[</bpt>NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept>，這個類別提供特定文化特性的數值格式資訊。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Its <bpt id="p1">[</bpt>IFormatProvider.GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> implementation returns an instance of itself.</source>
          <target state="translated">它的 <bpt id="p1">[</bpt>IFormatProvider.GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 實作會傳回本身的執行個體。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Its <bpt id="p1">[</bpt>IFormatProvider.GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> implementation can return either a <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> object to provide numeric formatting information or a <bpt id="p3">[</bpt>DateTimeFormatInfo<ept id="p3">](xref:System.Globalization.DateTimeFormatInfo)</ept> object to provide formatting information for date and time values.</source>
          <target state="translated">它的 <bpt id="p1">[</bpt>IFormatProvider.GetFormat<ept id="p1">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 實作可以傳回 <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> 物件來提供數值格式資訊，或傳回 <bpt id="p3">[</bpt>DateTimeFormatInfo<ept id="p3">](xref:System.Globalization.DateTimeFormatInfo)</ept> 物件來提供日期和時間值的格式資訊。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>You can also implement your own format provider to replace any one of these classes.</source>
          <target state="translated">您也可以實作自己的格式提供者來取代上述任何一個類別。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>However, your implementation’s <ph id="ph1">`GetFormat`</ph> method must return an object of the type listed in the previous table if it has to provide formatting information to the <ph id="ph2">`ToString`</ph> method.</source>
          <target state="translated">不過，您實作的 <ph id="ph1">`GetFormat`</ph> 方法如果必須提供格式設定資訊給 <ph id="ph2">`ToString`</ph> 方法，則必須傳回上表所列之類型的物件。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Culture-sensitive formatting of numeric values</source>
          <target state="translated">區分文化特性的數值格式</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>By default, the formatting of numeric values is culture-sensitive.</source>
          <target state="translated">根據預設，數值格式會區分文化特性。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>If you do not specify a culture when you call a formatting method, the formatting conventions of the current thread culture are used.</source>
          <target state="translated">如果當您呼叫格式化方法時未指定文化特性，則會使用目前執行緒文化特性的格式設定慣例。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>This is illustrated in the following example, which changes the current thread culture four times and then calls the <bpt id="p1">[</bpt>Decimal.ToString(String)<ept id="p1">](xref:System.Decimal.ToString(System.String))</ept> method.</source>
          <target state="translated">下列範例將說明這種情形，其中目前執行緒文化特性會變更四次，然後呼叫 <bpt id="p1">[</bpt>Decimal.ToString(String)<ept id="p1">](xref:System.Decimal.ToString(System.String))</ept> 方法。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>In each case, the result string reflects the formatting conventions of the current culture.</source>
          <target state="translated">在各案例中，結果字串都會反映目前文化特性的格式設定慣例。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>This is because the <ph id="ph1">`ToString`</ph> and <ph id="ph2">`ToString(String)`</ph> methods wrap calls to each numeric type's <ph id="ph3">`ToString(String, IFormatProvider)`</ph> method.</source>
          <target state="translated">這是因為 <ph id="ph1">`ToString`</ph> 和 <ph id="ph2">`ToString(String)`</ph> 方法會包裝對每個數值類型之 <ph id="ph3">`ToString(String, IFormatProvider)`</ph> 方法的呼叫。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>You can also format a numeric value for a specific culture by calling a <ph id="ph1">`ToString`</ph> overload that has a <bpt id="p1">*</bpt>provider<ept id="p1">*</ept> parameter and passing it either of the following:</source>
          <target state="translated">您也可以呼叫具有 <bpt id="p1">*</bpt>provider<ept id="p1">*</ept> 參數的 <ph id="ph1">`ToString`</ph> 多載並且將下列任一項傳遞給它，藉此格式化特定文化特性的數值：</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> object that represents the culture whose formatting conventions are to be used.</source>
          <target state="translated"><bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> 物件，表示要使用其格式化慣例的文化特性。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Its <bpt id="p1">[</bpt>CultureInfo.GetFormat<ept id="p1">](xref:System.Globalization.CultureInfo.GetFormat(System.Type))</ept> method returns the value of the <bpt id="p2">[</bpt>CultureInfo.NumberFormat<ept id="p2">](xref:System.Globalization.CultureInfo.NumberFormat)</ept> property, which is the <bpt id="p3">[</bpt>NumberFormatInfo<ept id="p3">](xref:System.Globalization.NumberFormatInfo)</ept> object that provides culture-specific formatting information for numeric values.</source>
          <target state="translated">它的 <bpt id="p1">[</bpt>CultureInfo.GetFormat<ept id="p1">](xref:System.Globalization.CultureInfo.GetFormat(System.Type))</ept> 方法會傳回 <bpt id="p2">[</bpt>CultureInfo.NumberFormat<ept id="p2">](xref:System.Globalization.CultureInfo.NumberFormat)</ept> 屬性的值，也就是為數值提供文化特性專屬格式資訊的 <bpt id="p3">[</bpt>NumberFormatInfo<ept id="p3">](xref:System.Globalization.NumberFormatInfo)</ept> 物件。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept> object that defines the culture-specific formatting conventions to be used.</source>
          <target state="translated"><bpt id="p1">[</bpt>NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept> 物件，該物件會定義要使用的文化特性專屬格式化慣例。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Its <bpt id="p1">[</bpt>GetFormat<ept id="p1">](xref:System.Globalization.NumberFormatInfo.GetFormat(System.Type))</ept> method returns an instance of itself.</source>
          <target state="translated">它的 <bpt id="p1">[</bpt>GetFormat<ept id="p1">](xref:System.Globalization.NumberFormatInfo.GetFormat(System.Type))</ept> 方法會傳回本身的執行個體。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The following example uses <bpt id="p1">[</bpt>NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept> objects that represent the English (United States) and English (Great Britain) cultures and the French and Russian neutral cultures to format a floating-point number.</source>
          <target state="translated">下列範例將使用 <bpt id="p1">[</bpt>NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept> 物件，該物件表示用於格式化浮點數的英文 (美國) 和英文 (英國) 文化特性，以及法文和俄文中性文化特性。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Culture-sensitive formatting of date and time values</source>
          <target state="translated">區分文化特性的日期與時間值格式</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>By default, the formatting of date and time values is culture-sensitive.</source>
          <target state="translated">根據預設，日期和時間值的格式區分文化特性。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>If you do not specify a culture when you call a formatting method, the formatting conventions of the current thread culture are used.</source>
          <target state="translated">如果當您呼叫格式化方法時未指定文化特性，則會使用目前執行緒文化特性的格式設定慣例。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>This is illustrated in the following example, which changes the current thread culture four times and then calls the <bpt id="p1">[</bpt>DateTime.ToString(String)<ept id="p1">](xref:System.DateTime.ToString(System.String))</ept> method.</source>
          <target state="translated">下列範例將說明這種情形，其中目前執行緒文化特性會變更四次，然後呼叫 <bpt id="p1">[</bpt>DateTime.ToString(String)<ept id="p1">](xref:System.DateTime.ToString(System.String))</ept> 方法。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>In each case, the result string reflects the formatting conventions of the current culture.</source>
          <target state="translated">在各案例中，結果字串都會反映目前文化特性的格式設定慣例。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>This is because the <bpt id="p1">[</bpt>DateTime.ToString()<ept id="p1">](xref:System.DateTime.ToString)</ept>, <bpt id="p2">[</bpt>DateTime.ToString(String)<ept id="p2">](xref:System.DateTime.ToString(System.String))</ept>, <bpt id="p3">[</bpt>DateTimeOffset.ToString()<ept id="p3">](xref:System.DateTimeOffset.ToString(System.String))</ept>, and <bpt id="p4">[</bpt>DateTimeOffset.ToString(String)<ept id="p4">](xref:System.DateTimeOffset.ToString(System.String))</ept> methods wrap calls to the <bpt id="p5">[</bpt>DateTime.ToString(String, IFormatProvider)<ept id="p5">](xref:System.DateTime.ToString(System.String,System.IFormatProvider))</ept> and <bpt id="p6">[</bpt>DateTimeOffset.ToString(String, IFormatProvider)<ept id="p6">](xref:System.DateTimeOffset.ToString(System.String,System.IFormatProvider))</ept> methods.</source>
          <target state="translated">這是因為 <bpt id="p1">[</bpt>DateTime.ToString()<ept id="p1">](xref:System.DateTime.ToString)</ept>、<bpt id="p2">[</bpt>DateTime.ToString(String)<ept id="p2">](xref:System.DateTime.ToString(System.String))</ept>、<bpt id="p3">[</bpt>DateTimeOffset.ToString()<ept id="p3">](xref:System.DateTimeOffset.ToString(System.String))</ept> 和 <bpt id="p4">[</bpt>DateTimeOffset.ToString(String)<ept id="p4">](xref:System.DateTimeOffset.ToString(System.String))</ept> 方法會包裝 <bpt id="p5">[</bpt>DateTime.ToString(String, IFormatProvider)<ept id="p5">](xref:System.DateTime.ToString(System.String,System.IFormatProvider))</ept> 和 <bpt id="p6">[</bpt>DateTimeOffset.ToString(String, IFormatProvider)<ept id="p6">](xref:System.DateTimeOffset.ToString(System.String,System.IFormatProvider))</ept> 方法的呼叫。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>You can also format a date and time value for a specific culture by calling a <bpt id="p1">[</bpt>DateTime.ToString<ept id="p1">](xref:System.DateTime.ToString(System.String,System.IFormatProvider))</ept> or <bpt id="p2">[</bpt>DateTimeOffset.ToString<ept id="p2">](xref:System.DateTimeOffset.ToString(System.String,System.IFormatProvider))</ept> overload that has a provider parameter and passing it either of the following:</source>
          <target state="translated">您也可以呼叫具有 provider 參數的 <bpt id="p1">[</bpt>DateTime.ToString<ept id="p1">](xref:System.DateTime.ToString(System.String,System.IFormatProvider))</ept> 或 <bpt id="p2">[</bpt>DateTimeOffset.ToString<ept id="p2">](xref:System.DateTimeOffset.ToString(System.String,System.IFormatProvider))</ept> 多載並且將下列任一項傳遞給它，藉此格式化特定文化特性的日期和時間值：</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> object that represents the culture whose formatting conventions are to be used.</source>
          <target state="translated"><bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> 物件，表示要使用其格式化慣例的文化特性。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Its <bpt id="p1">[</bpt>CultureInfo.GetFormat<ept id="p1">](xref:System.Globalization.CultureInfo.GetFormat(System.Type))</ept> method returns the value of the <bpt id="p2">[</bpt>CultureInfo.NumberFormat<ept id="p2">](xref:System.Globalization.CultureInfo.NumberFormat)</ept> property, which is the <bpt id="p3">[</bpt>DateTimeFormatInfo<ept id="p3">](xref:System.Globalization.DateTimeFormatInfo)</ept> object that provides culture-specific formatting information for numeric values.</source>
          <target state="translated">它的 <bpt id="p1">[</bpt>CultureInfo.GetFormat<ept id="p1">](xref:System.Globalization.CultureInfo.GetFormat(System.Type))</ept> 方法會傳回 <bpt id="p2">[</bpt>CultureInfo.NumberFormat<ept id="p2">](xref:System.Globalization.CultureInfo.NumberFormat)</ept> 屬性的值，也就是為數值提供文化特性專屬格式資訊的 <bpt id="p3">[</bpt>DateTimeFormatInfo<ept id="p3">](xref:System.Globalization.DateTimeFormatInfo)</ept> 物件。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>DateTimeFormatInfo<ept id="p1">](xref:System.Globalization.DateTimeFormatInfo)</ept> object that defines the culture-specific formatting conventions to be used.</source>
          <target state="translated"><bpt id="p1">[</bpt>DateTimeFormatInfo<ept id="p1">](xref:System.Globalization.DateTimeFormatInfo)</ept> 物件，該物件會定義要使用的文化特性專屬格式化慣例。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Its <bpt id="p1">[</bpt>GetFormat<ept id="p1">](xref:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type))</ept> method returns an instance of itself.</source>
          <target state="translated">它的 <bpt id="p1">[</bpt>GetFormat<ept id="p1">](xref:System.Globalization.DateTimeFormatInfo.GetFormat(System.Type))</ept> 方法會傳回本身的執行個體。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The following example uses <bpt id="p1">[</bpt>DateTimeFormatInfo<ept id="p1">](xref:System.Globalization.DateTimeFormatInfo)</ept> objects that represent the English (United States) and English (Great Britain) cultures and the French and Russian neutral cultures to format a date.</source>
          <target state="translated">下列範例將使用 <bpt id="p1">[</bpt>DateTimeFormatInfo<ept id="p1">](xref:System.Globalization.DateTimeFormatInfo)</ept> 物件，該物件表示用於格式化日期的英文 (美國) 和英文 (英國) 文化特性，以及法文和俄文中性文化特性。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The IFormattable interface</source>
          <target state="translated">IFormattable 介面</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Typically, types that overload the <ph id="ph1">`ToString`</ph> method with a format string and an <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> parameter also implement the <bpt id="p2">[</bpt>IFormattable<ept id="p2">](xref:System.IFormattable)</ept> interface.</source>
          <target state="translated">以格式字串和 <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 參數來多載 <ph id="ph1">`ToString`</ph> 方法的類型，通常也會實作 <bpt id="p2">[</bpt>IFormattable<ept id="p2">](xref:System.IFormattable)</ept> 介面。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>This interface has a single member, <bpt id="p1">[</bpt>IFormattable.ToString(String, IFormatProvider)<ept id="p1">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept>, that includes both a format string and a format provider as parameters.</source>
          <target state="translated">這個介面具有單一成員 <bpt id="p1">[</bpt>IFormattable.ToString(String, IFormatProvider)<ept id="p1">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept>，這個成員同時包含格式字串和格式提供者作為參數。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Implementing the <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> interface for your application-defined class offers two advantages:</source>
          <target state="translated">針對您的應用程式定義類別來實作 <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> 介面有兩項好處：</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Support for string conversion by the <bpt id="p1">[</bpt>Convert<ept id="p1">](xref:System.Convert)</ept> class.</source>
          <target state="translated">支援透過 <bpt id="p1">[</bpt>Convert<ept id="p1">](xref:System.Convert)</ept> 類別來轉換字串。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Calls to the <bpt id="p1">[</bpt>Convert.ToString(Object)<ept id="p1">](xref:System.Convert.ToString(System.Object))</ept> and <bpt id="p2">[</bpt>Convert.ToString(Object, IFormatProvider)<ept id="p2">](xref:System.Convert.ToString(System.Object,System.IFormatProvider))</ept> methods call your <bpt id="p3">[</bpt>IFormattable<ept id="p3">](xref:System.IFormattable)</ept> implementation automatically.</source>
          <target state="translated">呼叫 <bpt id="p1">[</bpt>Convert.ToString(Object)<ept id="p1">](xref:System.Convert.ToString(System.Object))</ept> 和 <bpt id="p2">[</bpt>Convert.ToString(Object, IFormatProvider)<ept id="p2">](xref:System.Convert.ToString(System.Object,System.IFormatProvider))</ept> 方法時，會自動呼叫您的 <bpt id="p3">[</bpt>IFormattable<ept id="p3">](xref:System.IFormattable)</ept> 實作。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Support for composite formatting.</source>
          <target state="translated">支援複合格式。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>If a format item that includes a format string is used to format your custom type, the Common Language Runtime automatically calls your <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> implementation and passes it the format string.</source>
          <target state="translated">如果使用包含格式字串的格式項目來格式化您的自訂類型，則 Common Language Runtime 會自動呼叫您的 <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> 實作並將格式字串傳遞給這個實作。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>For more information about composite formatting with methods such as <ph id="ph1">`String.Format`</ph> or <ph id="ph2">`Console.WriteLine`</ph>, see the <bpt id="p1">[</bpt>Composite formatting<ept id="p1">](#composite-formatting)</ept> section.</source>
          <target state="translated">如需各種方法之複合格式 (例如 <ph id="ph1">`String.Format`</ph> 或 <ph id="ph2">`Console.WriteLine`</ph>) 的詳細資訊，請參閱<bpt id="p1">[</bpt>複合格式<ept id="p1">](#composite-formatting)</ept>一節。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The following example defines a <ph id="ph1">`Temperature`</ph> class that implements the <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> interface.</source>
          <target state="translated">下列範例定義一個實作 <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> 介面的 <ph id="ph1">`Temperature`</ph> 類別。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>It supports the "C" or "G" format specifiers to display the temperature in Celsius, the "F" format specifier to display the temperature in Fahrenheit, and the "K" format specifier to display the temperature in Kelvin.</source>
          <target state="translated">這個類別支援 "C" 或 "G" 格式規範來顯示攝氏溫度、支援 "F" 格式規範來顯示華氏溫度，也支援 "K" 格式規範來顯示絕對溫度。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The following example instantiates a <ph id="ph1">`Temperature`</ph> object.</source>
          <target state="translated">下列範例會執行個體化 <ph id="ph1">`Temperature`</ph> 物件。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>It then calls the <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Convert.ToString(System.Object,System.IFormatProvider))</ept> method and uses several composite format strings to obtain different string representations of a <ph id="ph1">`Temperature`</ph> object.</source>
          <target state="translated">然後呼叫 <bpt id="p1">[</bpt>ToString<ept id="p1">](xref:System.Convert.ToString(System.Object,System.IFormatProvider))</ept> 方法，並使用數個複合格式字串來取得 <ph id="ph1">`Temperature`</ph> 物件的不同字串表示。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Each of these method calls, in turn, calls the <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> implementation of the <ph id="ph1">`Temperature`</ph> class.</source>
          <target state="translated">其中每個方法又呼叫 <ph id="ph1">`Temperature`</ph> 類別的 <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> 實作。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Composite formatting</source>
          <target state="translated">複合格式</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Some methods, such as <ph id="ph1">`String.Format`</ph> and <ph id="ph2">`StringBuilder.AppendFormat`</ph>, support composite formatting.</source>
          <target state="translated">某些方法 (例如 <ph id="ph1">`String.Format`</ph> 和 <ph id="ph2">`StringBuilder.AppendFormat`</ph>) 支援複合格式。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>A composite format string is a kind of template that returns a single string that incorporates the string representation of zero, one, or more objects.</source>
          <target state="translated">複合格式字串是一種範本，可傳回由零個、一個或更多物件的字串表示所組成的單一字串。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Each object is represented in the composite format string by an indexed format item.</source>
          <target state="translated">複合格式字串中的每個物件都以有索引的格式項目來表示。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The index of the format item corresponds to the position of the object that it represents in the method's parameter list.</source>
          <target state="translated">格式項目的索引對應至其所表示的物件在方法的參數清單中的位置。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Indexes are zero-based.</source>
          <target state="translated">索引以零為起始。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>For example, in the following call to the <ph id="ph1">`String.Format`</ph> method, the first format item, <ph id="ph2">`{0:D}`</ph>, is replaced by the string representation of <ph id="ph3">`thatDate`</ph>; the second format item, <ph id="ph4">`{1}`</ph>, is replaced by the string representation of <ph id="ph5">`item1`</ph>; and the third format item, <ph id="ph6">`{2:C2}`</ph>, is replaced by the string representation of <ph id="ph7">`item1.Value`</ph>.</source>
          <target state="translated">例如，在下列對 <ph id="ph1">`String.Format`</ph> 方法的呼叫中，第一個格式項目 <ph id="ph2">`{0:D}`</ph> 由 <ph id="ph3">`thatDate`</ph> 的字串表示所取代、第二個格式項目 <ph id="ph4">`{1}`</ph> 由 <ph id="ph5">`item1`</ph> 的字串表示所取代，而第三個格式項目 <ph id="ph6">`{2:C2}`</ph> 由 <ph id="ph7">`item1.Value`</ph> 的字串表示所取代。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>In addition to replacing a format item with the string representation of its corresponding object, format items also let you control the following:</source>
          <target state="translated">除了取代具有對應物件字串表示格式的項目，格式項目也可讓您控制下列幾項：</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The specific way in which an object is represented as a string, if the object implements the <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> interface and supports format strings.</source>
          <target state="translated">當物件實作 <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> 介面，並支援格式字串時，物件表示為字串的特定方式。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>You do this by following the format item's index with a : (colon) followed by a valid format string.</source>
          <target state="translated">您可將格式項目索引後面接上 : (冒號) ，後面再接有效的格式字串，以執行此作業。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The previous example did this by formatting a date value with the "d" (short date pattern) format string (e.g., <ph id="ph1">`{0:d}`</ph>) and by formatting a numeric value with the "C2" format string (e.g., <ph id="ph2">`{2:C2}`</ph> to represent the number as a currency value with two fractional decimal digits.</source>
          <target state="translated">前一個範例採用的方法是用 "d" (簡短日期模式) 格式字串來格式化日期值 (例如 <ph id="ph1">`{0:d}`</ph>) 以及用 "C2" 格式字串 (例如 <ph id="ph2">`{2:C2}`</ph>) 來格式化數值，以表示具有兩個小數位數的十進位數字之貨幣值。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The width of the field that contains the object's string representation, and the alignment of the string representation in that field.</source>
          <target state="translated">包含物件字串表示法及在該欄位中對齊方式的字串表示法之欄位寬度。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>You do this by following the format item's index with a , (comma) followed the field width.</source>
          <target state="translated">您可將格式項目索引後面接上 , (逗號) ，後面再接欄位寬度，以執行此作業。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The string is right-aligned in the field if the field width is a positive value, and it is left-aligned if the field width is a negative value.</source>
          <target state="translated">如果欄位寬度是正值，則此欄位中的字串為靠右對齊；如果欄位寬度是負值，則為靠左對齊。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The following example left-aligns date values in a 20-character field, and it right-aligns decimal values with one fractional digit in an 11-character field.</source>
          <target state="translated">下列範例在長 20 個字元的欄位中將日期值靠左對齊，並在長 11 個字元的欄位中將具有一位小數位數的十進位值靠右對齊。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Note that, if both the alignment string component and the format string component are present, the former precedes the latter (for example, <ph id="ph1">`{0,-20:g}`</ph>.</source>
          <target state="translated">請注意如果對齊字串元件和格式字串元件都存在，則前者優先於後者 (例如，<ph id="ph1">`{0,-20:g}`</ph>)。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>For more information about composite formatting, see <bpt id="p1">[</bpt>Composite formatting<ept id="p1">](composite-format.md)</ept>.</source>
          <target state="translated">如需複合格式的詳細資訊，請參閱<bpt id="p1">[</bpt>複合格式<ept id="p1">](composite-format.md)</ept>。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Custom formatting with ICustomFormatter</source>
          <target state="translated">使用 ICustomFormatter 的自訂格式</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Two composite formatting methods, <bpt id="p1">[</bpt>String.Format(IFormatProvider, String, Object[])<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object[]))</ept> and <bpt id="p2">[</bpt>StringBuilder.AppendFormat(IFormatProvider, String, Object[])<ept id="p2">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept>, include a format provider parameter that supports custom formatting.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.Format(IFormatProvider, String, Object[])<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object[]))</ept> 和 <bpt id="p2">[</bpt>StringBuilder.AppendFormat(IFormatProvider, String, Object[])<ept id="p2">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept> 這兩個複合格式化方法包含支援自訂格式的格式提供者參數。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>When either of these formatting methods is called, it passes a <bpt id="p1">[</bpt>Type<ept id="p1">](xref:System.Type)</ept> object that represents an <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> interface to the format provider’s <ph id="ph1">`GetFormat`</ph> method.</source>
          <target state="translated">呼叫這兩種格式化方法的任一種時，會將表示 <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> 介面的 <bpt id="p1">[</bpt>Type<ept id="p1">](xref:System.Type)</ept> 物件傳遞至格式提供者的 <ph id="ph1">`GetFormat`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`GetFormat`</ph> method is then responsible for returning the <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> implementation that provides custom formatting.</source>
          <target state="translated">然後，<ph id="ph1">`GetFormat`</ph> 方法負責傳回 <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> 實作，這個實作提供自訂格式。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> interface has a single method, <bpt id="p2">[</bpt>Format(String, Object, IFormatProvider)<ept id="p2">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept>, that is called automatically by a composite formatting method, once for each format item in a composite format string.</source>
          <target state="translated"><bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> 介面具有單一方法 <bpt id="p2">[</bpt>Format(String, Object, IFormatProvider)<ept id="p2">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept>，複合格式化方法會自動針對複合格式字串中的每個格式項目，各呼叫一次這個方法。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Format(String, Object, IFormatProvider)<ept id="p1">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> method has three parameters: a format string, which represents the <bpt id="p2">*</bpt>formatString<ept id="p2">*</ept> argument in a format item, an object to format, and an <bpt id="p3">[</bpt>IFormatProvider<ept id="p3">](xref:System.IFormatProvider)</ept> object that provides formatting services.</source>
          <target state="translated"><bpt id="p1">[</bpt>Format(String, Object, IFormatProvider)<ept id="p1">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> 方法具有三個參數：格式字串 (表示格式項目中的 <bpt id="p2">*</bpt>formatString<ept id="p2">*</ept> 引數)、要格式化的物件，以及提供格式化服務的 <bpt id="p3">[</bpt>IFormatProvider<ept id="p3">](xref:System.IFormatProvider)</ept> 物件。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Typically, the class that implements <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> also implements <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept>, so this last parameter is a reference to the custom formatting class itself.</source>
          <target state="translated">實作 <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> 的類別通常也會實作 <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept>，所以這最後一個參數是對自訂格式類別的參考。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The method returns a custom formatted string representation of the object to be formatted.</source>
          <target state="translated">方法會傳回要格式化之物件的自訂格式化字串表示。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>If the method cannot format the object, it should return a null reference.</source>
          <target state="translated">如果方法無法格式化物件，則應該傳回 null 參考。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The following example provides an <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> implementation named <ph id="ph1">`ByteByByteFormatter`</ph> that displays integer values as a sequence of two-digit hexadecimal values followed by a space.</source>
          <target state="translated">下列範例提供一個名為 <ph id="ph1">`ByteByByteFormatter`</ph> 的 <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> 實作，這個實作會將整數值顯示為一連串由兩位數十六進位值再加上一個空格所組成的數列。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`ByteByByteFormatter`</ph> class to format integer values.</source>
          <target state="translated">下列範例會使用 <ph id="ph1">`ByteByByteFormatter`</ph> 類別來格式化整數值。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Note that the <bpt id="p1">[</bpt>ICustomFormatter.Format<ept id="p1">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> method is called more than once in the second <bpt id="p2">[</bpt>String.Format(IFormatProvider, String, Object[])<ept id="p2">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> method call, and that the default <bpt id="p3">[</bpt>NumberFormatInfo<ept id="p3">](xref:System.Globalization.NumberFormatInfo)</ept> provider is used in the third method call because the <ph id="ph1">`.ByteByByteFormatter.Format`</ph> method does not recognize the "N0" format string and returns a null reference.</source>
          <target state="translated">請注意，<bpt id="p1">[</bpt>ICustomFormatter.Format<ept id="p1">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> 方法在第二個 <bpt id="p2">[</bpt>String.Format(IFormatProvider, String, Object[])<ept id="p2">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> 方法呼叫中被呼叫不只一次，且第三個方法呼叫中使用預設 <bpt id="p3">[</bpt>NumberFormatInfo<ept id="p3">](xref:System.Globalization.NumberFormatInfo)</ept> 提供者，因為 <ph id="ph1">`.ByteByByteFormatter.Format`</ph> 方法無法辨認 "N0" 格式字串而傳回 null 參考。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Related topics</source>
          <target state="translated">相關主題</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">標題</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">定義</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard numeric format strings<ept id="p1">](standard-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](standard-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Describes standard format strings that create commonly used string representations of numeric values.</source>
          <target state="translated">說明建立數值常用之字串表示的標準格式字串。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom numeric format strings<ept id="p1">](custom-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>自訂數值格式字串<ept id="p1">](custom-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Describes custom format strings that create application-specific formats for numeric values.</source>
          <target state="translated">說明建立應用程式專屬數值格式的自訂格式字串。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard date and time format strings<ept id="p1">](standard-datetime.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準日期與時間格式字串<ept id="p1">](standard-datetime.md)</ept></target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Describes standard format strings that create commonly used string representations of <bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept> values.</source>
          <target state="translated">說明建立 <bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept> 值之常用字串表示的標準格式字串。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom date and time format strings<ept id="p1">](custom-datetime.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>自訂日期與時間格式字串<ept id="p1">](custom-datetime.md)</ept></target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Describes custom format strings that create application-specific formats for <bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept> values.</source>
          <target state="translated">說明為 <bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept>值建立應用程式專屬格式的自訂格式字串。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard TimeSpan format strings<ept id="p1">](standard-timespan.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準 TimeSpan 格式字串<ept id="p1">](standard-timespan.md)</ept></target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Describes standard format strings that create commonly used string representations of time intervals.</source>
          <target state="translated">說明建立時間間隔之常用字串表示的標準格式字串。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom TimeSpan format strings<ept id="p1">](custom-timespan.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>自訂 TimeSpan 格式字串<ept id="p1">](custom-timespan.md)</ept></target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Describes custom format strings that create application-specific formats for time intervals.</source>
          <target state="translated">說明建立應用程式專屬數值格式的自訂格式字串。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Enumeration format strings<ept id="p1">](enumeration-format.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](enumeration-format.md)</ept></target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Describes standard format strings that are used to create string representations of enumeration values.</source>
          <target state="translated">說明用來建立列舉值之字串表示的標準格式字串。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Composite formatting<ept id="p1">](composite-format.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>複合格式<ept id="p1">](composite-format.md)</ept></target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Describes how to embed one or more formatted values in a string.</source>
          <target state="translated">描述如何將一個或更多的格式化值嵌入字串。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The string can subsequently be displayed on the console or written to a stream.</source>
          <target state="translated">字串可以隨後顯示在主控台 (Console) 或寫入資料流。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Performing formatting operations<ept id="p1">](performing-formatting-operations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>執行格式化作業<ept id="p1">](performing-formatting-operations.md)</ept></target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Lists topics that provide step-by-step instructions for performing specific formatting operations.</source>
          <target state="translated">列出各主題，提供執行特定格式設定作業的逐步指示。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Parsing strings<ept id="p1">](parsing-strings.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>剖析字串<ept id="p1">](parsing-strings.md)</ept></target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Describes how to initialize objects to the values described by string representations of those objects.</source>
          <target state="translated">說明如何將物件初始化為這些物件的字串表示所描述的值。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Parsing is the inverse operation of formatting.</source>
          <target state="translated">剖析是格式化的反向作業。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">參考資料</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.IFormattable<ept id="p1">](xref:System.IFormattable)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.IFormattable<ept id="p1">](xref:System.IFormattable)</ept></target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept></target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>