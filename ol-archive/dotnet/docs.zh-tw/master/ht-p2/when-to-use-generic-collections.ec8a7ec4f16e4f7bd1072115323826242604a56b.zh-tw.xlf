<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0805bae19871f878806050a0c2bf954927894321</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\collections\when-to-use-generic-collections.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">372aa6e7600f67a5e8cdec06abd481ca0eab5391</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4df719bb6ebc1247196820dc97322229dd02c0a2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>When to Use Generic Collections</source>
          <target state="translated">何時使用泛型集合</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>When to Use Generic Collections</source>
          <target state="translated">何時使用泛型集合</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When to Use Generic Collections</source>
          <target state="translated">何時使用泛型集合</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Using generic collections is generally recommended, because you gain the immediate benefit of type safety without having to derive from a base collection type and implement type-specific members.</source>
          <target state="translated">通常建議使用泛型集合，因為這樣可以得到類型安全的立即好處，而無須衍生自基底集合類型同時實作類型專屬的成員。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Generic collection types also generally perform better than the corresponding nongeneric collection types (and better than types that are derived from nongeneric base collection types) when the collection elements are value types, because with generics there is no need to box the elements.</source>
          <target state="translated">當集合元素為實值類型時，泛型集合類型也通常會優於對應的非泛型集合類型 (且優於衍生自非泛型基底集合類型的類型)，因為有了泛型，就不需要對這些元素進行 box。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You should use the generic collection classes in the <bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent )</ept> namespace when multiple threads might be adding or removing items from the collection concurrently.</source>
          <target state="translated">當多個執行緒可能同時在新增或移除集合中的項目時，您應該使用 <bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent )</ept> 命名空間中的泛型集合類別。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following generic types correspond to existing collection types:</source>
          <target state="translated">下列泛型類型對應至現有的集合類型：</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1 )</ept> is the generic class that corresponds to <bpt id="p2">[</bpt>ArrayList<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ArrayList )</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1 )</ept> 是對應至 <bpt id="p2">[</bpt>ArrayList<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ArrayList )</ept> 的泛型類別。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Dictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2 )</ept> and <bpt id="p2">[</bpt>ConcurrentDictionary<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2 )</ept> are the generic classes that correspond to <bpt id="p3">[</bpt>Hashtable<ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable )</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>Dictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2 )</ept> 和 <bpt id="p2">[</bpt>ConcurrentDictionary<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2 )</ept> 是對應至 <bpt id="p3">[</bpt>Hashtable<ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable )</ept> 的泛型類別。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Collection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.Collection-1 )</ept> is the generic class that corresponds to <bpt id="p2">[</bpt>CollectionBase<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.CollectionBase )</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>Collection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.Collection-1 )</ept> 是對應至 <bpt id="p2">[</bpt>CollectionBase<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.CollectionBase )</ept> 的泛型類別。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Collection&lt;T&gt;`</ph> can be used as a base class, but unlike <ph id="ph2">`CollectionBase`</ph>, it is not abstract.</source>
          <target state="translated"><ph id="ph1">`Collection&lt;T&gt;`</ph> 可以用做為基底類別，但不同於 <ph id="ph2">`CollectionBase`</ph>，它並非抽象。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This makes it much easier to use.</source>
          <target state="translated">這可讓您更容易使用。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ReadOnlyCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.ReadOnlyCollection-1 )</ept> is the generic class that corresponds to <bpt id="p2">[</bpt>ReadOnlyCollectionBase<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ReadOnlyCollectionBase )</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>ReadOnlyCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.ReadOnlyCollection-1 )</ept> 是對應至 <bpt id="p2">[</bpt>ReadOnlyCollectionBase<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ReadOnlyCollectionBase )</ept> 的泛型類別。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ReadOnlyCollection&lt;T&gt;`</ph> is not abstract, and has a constructor that makes it easy to expose an existing <bpt id="p1">[</bpt>List<ph id="ph2">&amp;lt;</ph>T<ph id="ph3">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1 )</ept> as a read-only collection.</source>
          <target state="translated"><ph id="ph1">`ReadOnlyCollection&lt;T&gt;`</ph> 一點也不抽象。其具有一個建構函式，可以輕鬆地將現有的 <bpt id="p1">[</bpt>List<ph id="ph2">&amp;lt;</ph>T<ph id="ph3">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1 )</ept> 公開成唯讀的集合。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Queue<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Queue-1 )</ept>, <bpt id="p2">[</bpt>ConcurrentQueue<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentQueue-1 )</ept>, <bpt id="p3">[</bpt>Stack<ph id="ph5">&amp;lt;</ph>T<ph id="ph6">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Stack-1 )</ept>, <bpt id="p4">[</bpt>ConcurrentStack<ph id="ph7">&amp;lt;</ph>T<ph id="ph8">&amp;gt;</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentStack-1 )</ept>, and <bpt id="p5">[</bpt>SortedList<ph id="ph9">&amp;lt;</ph>TKey, TValue<ph id="ph10">&amp;gt;</ph><ept id="p5">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2 )</ept> generic classes correspond to the respective nongeneric classes with the same names.</source>
          <target state="translated"><bpt id="p1">[</bpt>Queue<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Queue-1 )</ept>、<bpt id="p2">[</bpt>ConcurrentQueue<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentQueue-1 )</ept>、<bpt id="p3">[</bpt>Stack<ph id="ph5">&amp;lt;</ph>T<ph id="ph6">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Stack-1 )</ept>、<bpt id="p4">[</bpt>ConcurrentStack<ph id="ph7">&amp;lt;</ph>T<ph id="ph8">&amp;gt;</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentStack-1 )</ept> 和 <bpt id="p5">[</bpt>SortedList<ph id="ph9">&amp;lt;</ph>TKey, TValue<ph id="ph10">&amp;gt;</ph><ept id="p5">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2 )</ept> 泛型類別對應至同名的個別非泛型類別。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Additional Types</source>
          <target state="translated">其他類型</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Several generic collection types do not have nongeneric counterparts.</source>
          <target state="translated">數個泛型集合類型沒有非泛型的對應項目。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>They include the following:</source>
          <target state="translated">包括下列各項：</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LinkedList<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.LinkedList-1 )</ept> is a general-purpose linked list that provides O(1) insertion and removal operations.</source>
          <target state="translated"><bpt id="p1">[</bpt>LinkedList<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.LinkedList-1 )</ept> 是提供 O(1) 插入和移除作業的一般用途連結清單。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SortedDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2 )</ept> is a sorted dictionary with O(log n) insertion and retrieval operations, which makes it a useful alternative to <bpt id="p2">[</bpt>SortedList<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2 )</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>SortedDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2 )</ept> 是 O(log n) 插入和擷取作業的已排序字典，這讓它成為 <bpt id="p2">[</bpt>SortedList<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2 )</ept> 相當實用的替代方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>KeyedCollection<ph id="ph1">&amp;lt;</ph>TKey, TItem<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.KeyedCollection-2 )</ept> is a hybrid between a list and a dictionary, which provides a way to store objects that contain their own keys.</source>
          <target state="translated"><bpt id="p1">[</bpt>KeyedCollection<ph id="ph1">&amp;lt;</ph>TKey, TItem<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.KeyedCollection-2 )</ept> 是清單與字典之間的混合體，它提供方法來儲存包含自己索引鍵的物件。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>BlockingCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.BlockingCollection-1 )</ept> implements a collection class with bounding and blocking functionality.</source>
          <target state="translated"><bpt id="p1">[</bpt>BlockingCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.BlockingCollection-1 )</ept> 會實作具有界限和封鎖功能的集合類別。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ConcurrentBag<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentBag-1 )</ept> provides fast insertion and removal of unordered elements.</source>
          <target state="translated"><bpt id="p1">[</bpt>ConcurrentBag<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentBag-1 )</ept> 提供未排序元素的快速插入和移除。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>LINQ to Objects</source>
          <target state="translated">LINQ to Objects</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The LINQ to Objects feature enables you to use LINQ queries to access in-memory objects as long as the object type implements the <bpt id="p1">[</bpt>System.Collections.IEnumerable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IEnumerable )</ept> or <bpt id="p2">[</bpt>System.Collections.Generic.IEnumerable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IEnumerable-1 )</ept> interface.</source>
          <target state="translated">只要物件類型實作 <bpt id="p1">[</bpt>System.Collections.IEnumerable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IEnumerable )</ept> 或 <bpt id="p2">[</bpt>System.Collections.Generic.IEnumerable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IEnumerable-1 )</ept> 介面，LINQ to Objects 功能可讓您使用 LINQ 查詢來存取記憶體內的物件。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>LINQ queries provide a common pattern for accessing data; are typically more concise and readable than standard <ph id="ph1">`foreach`</ph> loops; and provide filtering, ordering and grouping capabilities.</source>
          <target state="translated">LINQ 查詢提供一般模式以存取資料，比標準的 <ph id="ph1">`foreach`</ph> 迴圈 (Loop) 更精簡、可讀性更高，並提供篩選、排序和群組功能。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>LINQ queries can also improve performance.</source>
          <target state="translated">LINQ 查詢也可以提升效能。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Additional Functionality</source>
          <target state="translated">其他功能</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Some of the generic types have functionality that is not found in the nongeneric collection types.</source>
          <target state="translated">某些泛型類型具有非泛型集合類型中找不到的功能。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, the <bpt id="p1">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1 )</ept> class, which corresponds to the nongeneric <bpt id="p2">[</bpt>ArrayList<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ArrayList )</ept> class, has a number of methods that accept generic delegates, such as the <bpt id="p3">[</bpt>Predicate<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Predicate-1 )</ept> delegate that allows you to specify methods for searching the list, and the <bpt id="p4">[</bpt>Action<ph id="ph5">&amp;lt;</ph>T<ph id="ph6">&amp;gt;</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Action-1 )</ept> delegate that represents methods that act on each element of the list.</source>
          <target state="translated">例如，<bpt id="p1">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1 )</ept> 類別 (對應至非泛型 <bpt id="p2">[</bpt>ArrayList<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ArrayList )</ept> 類別) 有許多接受泛型委派的方法，例如 <bpt id="p3">[</bpt>Predicate<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Predicate-1 )</ept> 委派 (允許您指定方法來搜尋清單)，以及 <bpt id="p4">[</bpt>Action<ph id="ph5">&amp;lt;</ph>T<ph id="ph6">&amp;gt;</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Action-1 )</ept> 委派 (代表對清單之每個元素採取動作的方法)。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1 )</ept> class allows you to specify your own <bpt id="p2">[</bpt>IComparer<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IComparer-1 )</ept> generic interface implementations for sorting and searching the list.</source>
          <target state="translated"><bpt id="p1">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1 )</ept> 類別可讓您指定自己的 <bpt id="p2">[</bpt>IComparer<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IComparer-1 )</ept> 泛型介面實作，以排序及搜尋清單。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>SortedDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2 )</ept> and <bpt id="p2">[</bpt>SortedList<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2 )</ept> classes also have this capability.</source>
          <target state="translated"><bpt id="p1">[</bpt>SortedDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2 )</ept> 和 <bpt id="p2">[</bpt>SortedList<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2 )</ept> 類別也具有這項功能。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In addition, these classes let you specify comparers when the collection is created.</source>
          <target state="translated">此外，這些類別可讓您在建立集合時，指定比較子。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In similar fashion, the <bpt id="p1">[</bpt>Dictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2 )</ept> and <bpt id="p2">[</bpt>KeyedCollection<ph id="ph3">&amp;lt;</ph>TKey, TItem<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.KeyedCollection-2 )</ept> classes let you specify your own equality comparers.</source>
          <target state="translated"><bpt id="p1">[</bpt>Dictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2 )</ept> 和 <bpt id="p2">[</bpt>KeyedCollection<ph id="ph3">&amp;lt;</ph>TKey, TItem<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.KeyedCollection-2 )</ept> 類別會以類似的方式，讓您能指定自己的相等比較子。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Collections and Data Structures<ept id="p1">](index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>集合與資料結構<ept id="p1">](index.md)</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Commonly Used Collection Types<ept id="p1">](commonly-used-collection-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>常用的集合類型<ept id="p1">](commonly-used-collection-types.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>