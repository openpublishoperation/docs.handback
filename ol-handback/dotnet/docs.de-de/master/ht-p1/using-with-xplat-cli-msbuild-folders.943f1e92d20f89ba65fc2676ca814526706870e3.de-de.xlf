<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-e631009" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a3122a3c10838b74801bcc910070745cb9bf0d5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\preview3\tutorials\using-with-xplat-cli-msbuild-folders.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b10e9932383ddc8d90bd74738272d76459bdcdf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e1b1945eb78c40052ee45746b4db06f6ad77d5cd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Organizing and testing projects with the .NET Core command line (SDK Preview 3)</source>
          <target state="translated">Organisieren und Testen von Projekten mit der .NET Core-Befehlszeile (SDK Preview 3)</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Organizing and testing projects with the .NET Core command line (SDK Preview 3)</source>
          <target state="translated">Organisieren und Testen von Projekten mit der .NET Core-Befehlszeile (SDK Preview 3)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Organizing and testing projects with the .NET Core command line (SDK Preview 3)</source>
          <target state="translated">Organisieren und Testen von Projekten mit der .NET Core-Befehlszeile (SDK Preview 3)</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This tutorial follows <bpt id="p1">[</bpt>Getting started with .NET Core on Windows/Linux/macOS using the command line (SDK Preview 3)<ept id="p1">](./using-with-xplat-cli-msbuild.md)</ept> to show how to go beyond simple "hello world" scenarios and pave the way for more advanced and well-organized applications.</source>
          <target state="translated">Dieses Tutorial folgt auf <bpt id="p1">[</bpt>Erste Schritte mit .NET Core unter Windows/Linux/macOS unter Verwendung der Befehlszeile (SDK Preview 3)<ept id="p1">](./using-with-xplat-cli-msbuild.md)</ept>, um zu zeigen, wie Sie über einfache „hello World“-Szenarien hinaus anspruchsvolleren und überlegt organisierten Anwendungen den Weg ebnen.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Using folders to organize code</source>
          <target state="translated">Verwenden von Ordnern zum Strukturieren von Code</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Say you wanted to introduce some new types to do work on.</source>
          <target state="translated">Angenommen, Sie möchten einige neue Typen einführen, die Sie bearbeiten möchten.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can do this by adding more files and making sure to give them namespaces you can include in your <ph id="ph1">`Program.cs`</ph> file.</source>
          <target state="translated">In diesem Fall können Sie weitere Dateien hinzufügen und ihnen Namespaces zuordnen, die Sie in die Datei <ph id="ph1">`Program.cs`</ph> einbinden können.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This works great when the size of your project is relatively small.</source>
          <target state="translated">Das funktioniert bei relativ kleinen Projekten recht gut.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>However, if you have a larger app with many different data types and potentially multiple layers, you may wish to organize things logically.</source>
          <target state="translated">Wenn Sie jedoch eine größere Anwendung mit vielen verschiedenen Datentypen und womöglich mehreren Schichten haben, sollten Sie die Dinge logisch strukturieren.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This is where folders come into play.</source>
          <target state="translated">Hier kommen nun Ordner ins Spiel.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can either follow along with <bpt id="p1">[</bpt>the NewTypes sample project<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/console-apps/NewTypesMsBuild)</ept> that this guide covers, or create your own files and folders.</source>
          <target state="translated">Sie können entweder <bpt id="p1">[</bpt>das Beispielprojekt „NewTypes“<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/console-apps/NewTypesMsBuild)</ept> in diesem Leitfaden befolgen oder eigene Dateien und Ordner erstellen.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To begin, create a new folder under the root of your project.</source>
          <target state="translated">Erstellen Sie zunächst im Stammverzeichnis des Projekts einen neuen Ordner.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`/Model`</ph> is chosen here.</source>
          <target state="translated">In diesem Fall wird <ph id="ph1">`/Model`</ph> ausgewählt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Now add some new types to the folder:</source>
          <target state="translated">Fügen Sie nun einige neue Typen zum Ordner hinzu:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Now, just as if they were files in the same directory, give them all the same namespace so you can include them in your <ph id="ph1">`Program.cs`</ph>.</source>
          <target state="translated">Ordnen Sie die Dateien demselben Namespace zu, als würden sie sich in einem Verzeichnis befinden, sodass Sie sie in die Datei <ph id="ph1">`Program.cs`</ph> einbinden können.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Example: Pet Types</source>
          <target state="translated">Beispiel: Pet-Typen</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This example creates two new types, <ph id="ph1">`Dog`</ph> and <ph id="ph2">`Cat`</ph>, and has them implement a common interface, <ph id="ph3">`IPet`</ph>.</source>
          <target state="translated">In diesem Beispiel werden die beiden neuen Typen <ph id="ph1">`Dog`</ph> und <ph id="ph2">`Cat`</ph> erstellt, mit deren Hilfe die allgemeine Schnittstelle <ph id="ph3">`IPet`</ph> implementiert wird.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Folder Structure:</source>
          <target state="translated">Ordnerstruktur:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`IPet.cs`</ph>:</source>
          <target state="translated"><ph id="ph1">`IPet.cs`</ph>:</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dog.cs`</ph>:</source>
          <target state="translated"><ph id="ph1">`Dog.cs`</ph>:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Cat.cs`</ph>:</source>
          <target state="translated"><ph id="ph1">`Cat.cs`</ph>:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Program.cs`</ph>:</source>
          <target state="translated"><ph id="ph1">`Program.cs`</ph>:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`NewTypes.csproj`</ph>:</source>
          <target state="translated"><ph id="ph1">`NewTypes.csproj`</ph>:</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>And if you run this:</source>
          <target state="translated">Ergebnis bei der Ausführung:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>New pet types can be added (such as a <ph id="ph1">`Bird`</ph>), extending this project.</source>
          <target state="translated">Das Projekt kann durch Hinzufügen neuer Pet-Typen (wie etwa <ph id="ph1">`Bird`</ph>) erweitert werden.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Testing your Console App</source>
          <target state="translated">Testen der Konsolenanwendung</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You'll probably be wanting to test your projects at some point.</source>
          <target state="translated">Irgendwann müssen Sie Ihre Projekte testen.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Here's a good way to do it:</source>
          <target state="translated">Im Folgenden wird ein recht gute Methode dafür beschrieben:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Move any source of your existing project into a new <ph id="ph1">`src`</ph> folder.</source>
          <target state="translated">Verschieben Sie alle Quelldateien Ihres vorhandenen Projekts in einen neuen <ph id="ph1">`src`</ph>-Ordner.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Create a <ph id="ph1">`/test`</ph> directory, then <ph id="ph2">`cd`</ph> into it.</source>
          <target state="translated">Erstellen Sie das Verzeichnis <ph id="ph1">`/test`</ph>, zu dem Sie anschließend über <ph id="ph2">`cd`</ph> wechseln.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Initialize the directory with a <ph id="ph1">`dotnet new -t Xunittest`</ph> command.</source>
          <target state="translated">Initialisieren Sie das Verzeichnis mit dem Befehl <ph id="ph1">`dotnet new -t Xunittest`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This assumes Xunit, but you can also use MS Test by replacing <ph id="ph1">`Xunittest`</ph> with <ph id="ph2">`Mstest`</ph>.</source>
          <target state="translated">Hierbei wird von Xunit ausgegangen. Sie können aber auch MS Test nutzen, indem Sie <ph id="ph1">`Xunittest`</ph> durch <ph id="ph2">`Mstest`</ph> ersetzen.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Example: Extending the NewTypes project</source>
          <target state="translated">Beispiel: Erweitern des Projekts „NewTypes“</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Now that the project system is in place, you can create your test project and start writing tests!</source>
          <target state="translated">Nachdem Sie das Projektsystem eingerichtet haben, können Sie das Testprojekt erstellen und mit dem Schreiben von Tests beginnen.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>From here on out, this guide will use and extend <bpt id="p1">[</bpt>the sample Types project<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/console-apps/NewTypesMsBuild)</ept>.</source>
          <target state="translated">Ab hier wird in diesem Leitfaden <bpt id="p1">[</bpt>das Beispielprojekt „Types“<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/console-apps/NewTypesMsBuild)</ept> verwendet und erweitert.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Additionally, it will use the <bpt id="p1">[</bpt>Xunit<ept id="p1">](https://xunit.github.io/)</ept> test framework.</source>
          <target state="translated">Darüber hinaus wird das <bpt id="p1">[</bpt>Xunit<ept id="p1">](https://xunit.github.io/)</ept>-Testframework verwendet.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Feel free to follow along or create your own multi-project system with tests.</source>
          <target state="translated">Sie können diesem Beispiel folgen oder ein eigenes System mit mehreren Projekten und Tests erstellen.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The whole project structure should look like this:</source>
          <target state="translated">Die gesamte Projektstruktur sollte wie folgt aussehen:</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>There are two new things to make sure you have in your test project:</source>
          <target state="translated">Stellen Sie sicher, dass sich zwei neue Dinge in Ihrem Testprojekt befinden:</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A correct <ph id="ph1">`NewTypesTests.csproj`</ph> file with the following:</source>
          <target state="translated">Eine ordnungsgemäße Datei <ph id="ph1">`NewTypesTests.csproj`</ph>, die Folgendes enthält:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A reference to <ph id="ph1">`xunit`</ph></source>
          <target state="translated">Einen Verweis auf <ph id="ph1">`xunit`</ph></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A reference to <ph id="ph1">`dotnet-test-xunit`</ph></source>
          <target state="translated">Einen Verweis auf <ph id="ph1">`dotnet-test-xunit`</ph></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A reference to the namespace corresponding to the code under test</source>
          <target state="translated">Einen Verweis auf den Namespace für den zu testenden Code</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This can be built by simply doing <ph id="ph1">`dotnet new -t Xunittest`</ph> from the command-line in the <ph id="ph2">`NewTypesTests`</ph> directory, then adding a project reference to the <ph id="ph3">`NewTypes`</ph> project.</source>
          <target state="translated">Dies kann erstellt werden, indem Sie im Verzeichnis <ph id="ph2">`NewTypesTests`</ph> einfach <ph id="ph1">`dotnet new -t Xunittest`</ph> an der Befehlszeile ausführen und dann einen Projektverweis zum Projekt <ph id="ph3">`NewTypes`</ph> hinzufügen.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`NewTypesTests/NewTypesTests.csproj`</ph>:</source>
          <target state="translated"><ph id="ph1">`NewTypesTests/NewTypesTests.csproj`</ph>:</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An Xunit test class.</source>
          <target state="translated">Eine Xunit-Testklasse.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`PetTests.cs`</ph>:</source>
          <target state="translated"><ph id="ph1">`PetTests.cs`</ph>:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Now you can run tests!</source>
          <target state="translated">Nun können Sie Tests durchführen.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">`dotnet test`</ph><ept id="p1">](../tools/dotnet-test.md)</ept> command runs the test runner you have specified in your project.</source>
          <target state="translated">Mit dem Befehl <bpt id="p1">[</bpt><ph id="ph1">`dotnet test`</ph><ept id="p1">](../tools/dotnet-test.md)</ept> wird der in Ihrem Projekt angegebene Test Runner ausgeführt.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Make sure you start at the top-level directory.</source>
          <target state="translated">Stellen Sie sicher, dass Sie mit dem Verzeichnis der obersten Ebene beginnen.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Output should look like this:</source>
          <target state="translated">Das Ergebnis sollte wie folgt aussehen:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>