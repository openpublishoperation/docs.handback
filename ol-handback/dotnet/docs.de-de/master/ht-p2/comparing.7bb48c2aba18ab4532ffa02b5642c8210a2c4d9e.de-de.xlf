<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">10c9ea3ebb50e8d8075d8a4e4ce007ddc29ff412</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\comparing.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d46b9488210d83bce57a95636e38e5bbcaeac9e1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ebfc2c00ba46812d431a68921962893855473ae6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Comparing strings</source>
          <target state="translated">Vergleichen von Zeichenfolgen</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Comparing strings</source>
          <target state="translated">Vergleichen von Zeichenfolgen</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Comparing strings</source>
          <target state="translated">Vergleichen von Zeichenfolgen</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>.NET provides several methods to compare the values of strings.</source>
          <target state="translated">.NET stellt mehrere Methoden bereit, um Werte von Zeichenfolgen zu vergleichen.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The following table lists and describes the value-comparison methods.</source>
          <target state="translated">In der folgenden Tabelle werden die Methoden zum Vergleichen von Werten aufgeführt und beschrieben.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Method name</source>
          <target state="translated">Methodenname</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">Verwendung</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Compares the values of two strings.</source>
          <target state="translated">Vergleicht die Werte zweier Zeichenfolgen.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">Gibt einen Ganzzahlwert zurück.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Compares two strings without regard to local culture.</source>
          <target state="translated">Vergleicht zwei Zeichenfolgen, ohne die Einstellungen der lokalen Kultur zu berücksichtigen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">Gibt einen Ganzzahlwert zurück.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Compares the current string object to another string.</source>
          <target state="translated">Vergleicht das aktuelle Zeichenfolgenobjekt mit einer anderen Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">Gibt einen Ganzzahlwert zurück.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.StartsWith<ept id="p1">](xref:System.String.StartsWith(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.StartsWith<ept id="p1">](xref:System.String.StartsWith(System.String))</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Determines whether a string begins with the string passed.</source>
          <target state="translated">Stellt fest, ob eine Zeichenfolge mit der übergebenen Zeichenfolge beginnt.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value.</source>
          <target state="translated">Gibt einen booleschen Wert zurück.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.EndsWith<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.EndsWith<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Determines whether a string ends with the string passed.</source>
          <target state="translated">Stellt fest, ob eine Zeichenfolge mit der übergebenen Zeichenfolge endet.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value.</source>
          <target state="translated">Gibt einen booleschen Wert zurück.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Equals<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Equals<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Determines whether two strings are the same.</source>
          <target state="translated">Stellt fest, ob zwei Zeichenfolgen identisch sind.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value.</source>
          <target state="translated">Gibt einen booleschen Wert zurück.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.IndexOf<ept id="p1">](xref:System.String.IndexOf(System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.IndexOf<ept id="p1">](xref:System.String.IndexOf(System.Char))</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns the index position of a character or string, starting from the beginning of the string you are examining.</source>
          <target state="translated">Gibt ausgehend vom Anfang der zu überprüfenden Zeichenfolge die Indexposition eines Zeichens oder einer Zeichenfolge zurück.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">Gibt einen Ganzzahlwert zurück.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.LastIndexOf<ept id="p1">](xref:System.String.LastIndexOf(System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.LastIndexOf<ept id="p1">](xref:System.String.LastIndexOf(System.Char))</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns the index position of a character or string, starting from the end of the string you are examining.</source>
          <target state="translated">Gibt ausgehend vom Ende der zu überprüfenden Zeichenfolge die Indexposition eines Zeichens oder einer Zeichenfolge zurück.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">Gibt einen Ganzzahlwert zurück.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Compare</source>
          <target state="translated">Vergleichen</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The static <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method provides a thorough way of comparing two strings.</source>
          <target state="translated">Die statische <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept>-Methode bietet umfassende Möglichkeiten zum Vergleichen von zwei Zeichenfolgen.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This method is culturally aware.</source>
          <target state="translated">Bei dieser Methode werden unterschiedliche Kulturen berücksichtigt.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can use this function to compare two strings or substrings of two strings.</source>
          <target state="translated">Sie können diese Funktion verwenden, um zwei Zeichenfolgen oder zwei untergeordnete Zeichenfolgen zweier Zeichenfolgen miteinander zu vergleichen.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Additionally, overloads are provided that regard or disregard case and cultural variance.</source>
          <target state="translated">Zusätzlich sind Überladungen verfügbar, mit denen die Groß-/Kleinschreibung sowie abweichende Kulturen berücksichtigt bzw. ignoriert werden können.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following table shows the three integer values that this method might return.</source>
          <target state="translated">In der folgenden Tabelle sind die drei ganzzahligen Werte aufgeführt, die von dieser Methode zurückgegeben werden können.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Return value</source>
          <target state="translated">Rückgabewert</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Condition</source>
          <target state="translated">Bedingung</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A negative integer</source>
          <target state="translated">Eine negative ganze Zahl</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The first string precedes the second string in the sort order, or the first string is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Die erste Zeichenfolge steht in der Sortierreihenfolge vor der zweiten Zeichenfolge, oder die erste Zeichenfolge ist <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The first string and the second string are equal, or both strings are <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Die erste Zeichenfolge und die zweite Zeichenfolge sind gleich, oder beide Zeichenfolgen sind <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A positive integer, or 1</source>
          <target state="translated">Eine positive ganze Zahl oder 1.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The first string follows the second string in the sort order, or the second string is null.</source>
          <target state="translated">Die erste Zeichenfolge folgt in der Sortierreihenfolge der zweiten Zeichenfolge, oder die zweite Zeichenfolge ist NULL.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method is primarily intended for use when ordering or sorting strings.</source>
          <target state="translated">Die <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept>-Methode ist hauptsächlich für die Anordnung oder Sortierung von Zeichenfolgen bestimmt.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You should not use the <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method to test for equality (that is, to explicitly look for a return value of 0 with no regard for whether one string is less than or greater than the other).</source>
          <target state="translated">Sie sollten die <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept>-Methode nicht verwenden, um einen Übereinstimmungstest auszuführen (also um explizit nach dem Rückgabewert 0 zu suchen, ohne dass dabei berücksichtigt wird, ob eine Zeichenfolge kleiner oder größer als die andere ist).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Instead, to determine whether two strings are equal, use the <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept> method.</source>
          <target state="translated">Um zu bestimmen, ob zwei Zeichenfolgen gleich sind, verwenden Sie stattdessen die <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept>-Methode.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method to determine the relative values of two strings.</source>
          <target state="translated">Im folgenden Beispiel wird die <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept>-Methode verwendet, um das Verhältnis der Werte von zwei Zeichenfolgen festzustellen.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`-1`</ph> to the console.</source>
          <target state="translated">In diesem Beispiel wird <ph id="ph1">`-1`</ph> auf der Konsole angezeigt.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>CompareOrdinal</source>
          <target state="translated">CompareOrdinal</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method compares two string objects without considering the local culture.</source>
          <target state="translated">Mithilfe der <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept>-Methode werden zwei Zeichenfolgenobjekte verglichen, ohne dass die Einstellungen der lokalen Kultur berücksichtigt werden.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The return values of this method are identical to the values returned by the <ph id="ph1">`Compare`</ph> method in the previous table.</source>
          <target state="translated">Die Rückgabewerte dieser Methode stimmen mit den Werten überein, die von der in der vorherigen Tabelle beschriebenen <ph id="ph1">`Compare`</ph>-Methode zurückgegeben werden.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method is primarily intended for use when ordering or sorting strings.</source>
          <target state="translated">Die <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept>-Methode ist hauptsächlich für die Anordnung oder Sortierung von Zeichenfolgen bestimmt.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You should not use the <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method to test for equality (that is, to explicitly look for a return value of 0 with no regard for whether one string is less than or greater than the other).</source>
          <target state="translated">Sie sollten die <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept>-Methode nicht verwenden, um einen Übereinstimmungstest auszuführen (also um explizit nach dem Rückgabewert 0 zu suchen, ohne dass dabei berücksichtigt wird, ob eine Zeichenfolge kleiner oder größer als die andere ist).</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Instead, to determine whether two strings are equal, use the <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept> method.</source>
          <target state="translated">Um zu bestimmen, ob zwei Zeichenfolgen gleich sind, verwenden Sie stattdessen die <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept>-Methode.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`CompareOrdinal`</ph> method to compare the values of two strings.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">`CompareOrdinal`</ph>-Methode verwendet, um die Werte von zwei Zeichenfolgen zu vergleichen.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`-32`</ph> to the console.</source>
          <target state="translated">In diesem Beispiel wird <ph id="ph1">`-32`</ph> auf der Konsole angezeigt.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>CompareTo</source>
          <target state="translated">CompareTo</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method compares the string that the current string object encapsulates to another string or object.</source>
          <target state="translated">Mit der <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept>-Methode wird die im aktuellen Zeichenfolgenobjekt gekapselte Zeichenfolge mit einer anderen Zeichenfolge oder einem anderen Objekt verglichen.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The return values of this method are identical to the values returned by the <ph id="ph1">`String.Compare`</ph> method in the previous table.</source>
          <target state="translated">Die Rückgabewerte dieser Methode stimmen mit den Werten überein, die von der in der vorherigen Tabelle beschriebenen <ph id="ph1">`String.Compare`</ph>-Methode zurückgegeben werden.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method is primarily intended for use when ordering or sorting strings.</source>
          <target state="translated">Die <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept>-Methode ist hauptsächlich für die Anordnung oder Sortierung von Zeichenfolgen bestimmt.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You should not use the <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method to test for equality (that is, to explicitly look for a return value of 0 with no regard for whether one string is less than or greater than the other).</source>
          <target state="translated">Sie sollten die <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept>-Methode nicht verwenden, um einen Übereinstimmungstest auszuführen (also um explizit nach dem Rückgabewert 0 zu suchen, ohne dass dabei berücksichtigt wird, ob eine Zeichenfolge kleiner oder größer als die andere ist).</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Instead, to determine whether two strings are equal, use the <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept> method.</source>
          <target state="translated">Um zu bestimmen, ob zwei Zeichenfolgen gleich sind, verwenden Sie stattdessen die <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept>-Methode.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`String.CompareTo`</ph> method to compare the <ph id="ph2">`string1`</ph> object to the <ph id="ph3">`string2`</ph> object.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">`String.CompareTo`</ph>-Methode verwendet, um das <ph id="ph2">`string1`</ph>-Objekt mit dem <ph id="ph3">`string2`</ph>-Objekt zu vergleichen.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`-1`</ph> to the console.</source>
          <target state="translated">In diesem Beispiel wird <ph id="ph1">`-1`</ph> auf der Konsole angezeigt.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="translated">gleich</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.Equals<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method can easily determine if two strings are the same.</source>
          <target state="translated">Mit der <bpt id="p1">[</bpt>String.Equals<ept id="p1">](xref:System.String.CompareTo(System.String))</ept>-Methode lässt sich auf einfache Weise feststellen, ob zwei Zeichenfolgen identisch sind.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This case-sensitive method returns a <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph> Boolean value.</source>
          <target state="translated">Diese Methode, bei der die Groß-/Kleinschreibung beachtet wird, gibt den booleschen Wert <ph id="ph1">`true`</ph> oder <ph id="ph2">`false`</ph> zurück.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>It can be used from an existing class, as illustrated in the next example.</source>
          <target state="translated">Wie das nächste Beispiel zeigt, kann die Methode einer bestehenden Klasse verwendet werden.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`Equals`</ph> method to determine whether a string object contains the phrase "Hello World".</source>
          <target state="translated">Im folgenden Beispiel wird mithilfe der <ph id="ph1">`Equals`</ph>-Methode festgestellt, ob ein Zeichenfolgenobjekt den Ausdruck „Hello World“ enthält.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`true`</ph> to the console.</source>
          <target state="translated">In diesem Beispiel wird <ph id="ph1">`true`</ph> auf der Konsole angezeigt.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This method can also be used as a static method.</source>
          <target state="translated">Diese Methode kann auch als statische Methode verwendet werden.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The following example compares two string objects using a static method.</source>
          <target state="translated">Im folgenden Beispiel werden zwei Zeichenfolgenobjekte mithilfe einer statischen Methode verglichen.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`true`</ph> to the console.</source>
          <target state="translated">In diesem Beispiel wird <ph id="ph1">`true`</ph> auf der Konsole angezeigt.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>StartsWith and EndsWith</source>
          <target state="translated">"StartsWith" und "EndsWith"</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>String.StartsWith<ept id="p1">](xref:System.String.StartsWith(System.String))</ept> method to determine whether a string object begins with the same characters that encompass another string.</source>
          <target state="translated">Mit der <bpt id="p1">[</bpt>String.StartsWith<ept id="p1">](xref:System.String.StartsWith(System.String))</ept>-Methode können Sie feststellen, ob ein Zeichenfolgenobjekt mit den gleichen Zeichen beginnt, die eine andere Zeichenfolge enthält.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This case-sensitive method returns <ph id="ph1">`true`</ph> if the current string object begins with the passed string and <ph id="ph2">`false`</ph> if it does not.</source>
          <target state="translated">Diese Methode, bei der die Groß-/Kleinschreibung beachtet wird, gibt <ph id="ph1">`true`</ph> zurück, wenn das aktuelle Zeichenfolgenobjekt mit der übergebenen Zeichenfolge beginnt, und sie gibt <ph id="ph2">`false`</ph> zurück, wenn dies nicht der Fall ist.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The following example uses this method to determine if a string object begins with "Hello".</source>
          <target state="translated">Im folgenden Beispiel wird mithilfe dieser Methode festgestellt, ob ein Zeichenfolgenobjekt mit "Hello" beginnt.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`true`</ph> to the console.</source>
          <target state="translated">In diesem Beispiel wird <ph id="ph1">`true`</ph> auf der Konsole angezeigt.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.EndsWith<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method compares a passed string to the characters that exist at the end of the current string object.</source>
          <target state="translated">Bei der <bpt id="p1">[</bpt>String.EndsWith<ept id="p1">](xref:System.String.CompareTo(System.String))</ept>-Methode wird eine übergebene Zeichenfolge mit den Zeichen am Ende des aktuellen Zeichenfolgenobjekts verglichen.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>It also returns a Boolean value.</source>
          <target state="translated">Auch sie gibt einen booleschen Wert zurück.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The following example checks the end of a string using the <ph id="ph1">`EndsWith`</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird das Ende einer Zeichenfolge mithilfe der <ph id="ph1">`EndsWith`</ph>-Methode überprüft.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`false`</ph> to the console.</source>
          <target state="translated">In diesem Beispiel wird <ph id="ph1">`false`</ph> auf der Konsole angezeigt.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>IndexOf and LastIndexOf</source>
          <target state="translated">"IndexOf" und "LastIndexOf"</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>String.IndexOf<ept id="p1">](xref:System.String.IndexOf(System.Char))</ept> method to determine the position of the first occurrence of a particular character within a string.</source>
          <target state="translated">Mit der <bpt id="p1">[</bpt>String.IndexOf<ept id="p1">](xref:System.String.IndexOf(System.Char))</ept>-Methode können Sie die Position feststellen, an der ein bestimmtes Zeichen in einer Zeichenfolge erstmalig vorkommt.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This case-sensitive method starts counting from the beginning of a string and returns the position of a passed character using a zero-based index.</source>
          <target state="translated">Bei dieser Methode, die die Groß-/Kleinschreibung beachtet, beginnt die Zählung am Anfang einer Zeichenfolge; sie gibt die Position eines übergebenen Zeichens auf der Grundlage eines nullbasierten Indizes zurück.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If the character cannot be found, a value of –1 is returned.</source>
          <target state="translated">Wenn das Zeichen nicht gefunden wird, wird der Wert –1 zurückgegeben.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`IndexOf`</ph> method to search for the first occurrence of the '<ph id="ph2">`l`</ph>' character in a string.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">`IndexOf`</ph>-Methode verwendet, um in einer Zeichenfolge nach dem ersten Vorkommnis des Zeichens '<ph id="ph2">`l`</ph>' zu suchen.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`2`</ph> to the console.</source>
          <target state="translated">In diesem Beispiel wird <ph id="ph1">`2`</ph> auf der Konsole angezeigt.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.LastIndexOf<ept id="p1">](xref:System.String.LastIndexOf(System.Char))</ept> method is similar to the <ph id="ph1">`String.IndexOf`</ph> method except that it returns the position of the last occurrence of a particular character within a string.</source>
          <target state="translated">Die <bpt id="p1">[</bpt>String.LastIndexOf<ept id="p1">](xref:System.String.LastIndexOf(System.Char))</ept>-Methode ist vergleichbar mit der <ph id="ph1">`String.IndexOf`</ph>-Methode, außer dass sie die Position zurückgibt, an der ein bestimmtes Zeichen innerhalb einer Zeichenfolge letztmalig vorkommt.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>It is case-sensitive and uses a zero-based index.</source>
          <target state="translated">Sie beachtet die Groß-/Kleinschreibung und verwendet einen nullbasierten Index.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`LastIndexOf`</ph> method to search for the last occurrence of the '<ph id="ph2">`l`</ph>' character in a string.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">`LastIndexOf`</ph>-Methode verwendet, um in einer Zeichenfolge nach dem letzten Vorkommnis des Zeichens '<ph id="ph2">`l`</ph>' zu suchen.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`9`</ph> to the console.</source>
          <target state="translated">In diesem Beispiel wird <ph id="ph1">`9`</ph> auf der Konsole angezeigt.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Both methods are useful when used in conjunction with the <bpt id="p1">[</bpt>String.Remove<ept id="p1">](xref:System.String.Remove(System.Int32))</ept> method.</source>
          <target state="translated">Beide Methoden sind hilfreich, wenn sie in Verbindung mit der <bpt id="p1">[</bpt>String.Remove<ept id="p1">](xref:System.String.Remove(System.Int32))</ept>-Methode verwendet werden.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>You can use either the <ph id="ph1">`IndexOf`</ph> or <ph id="ph2">`LastIndexOf`</ph> methods to retrieve the position of a character, and then supply that position to the <ph id="ph3">`Remove method`</ph> in order to remove a character or a word that begins with that character.</source>
          <target state="translated">Sie können die <ph id="ph1">`IndexOf`</ph>-Methode oder die <ph id="ph2">`LastIndexOf`</ph>-Methode verwenden, um die Position eines Zeichens abzurufen, und diese Position dann an die <ph id="ph3">`Remove method`</ph> übergeben, um ein Zeichen oder ein Wort zu entfernen, das mit diesem Zeichen beginnt.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Siehe auch</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic string operations<ept id="p1">](basic-string-operations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Grundlegende Zeichenfolgenoperationen<ept id="p1">](basic-string-operations.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>