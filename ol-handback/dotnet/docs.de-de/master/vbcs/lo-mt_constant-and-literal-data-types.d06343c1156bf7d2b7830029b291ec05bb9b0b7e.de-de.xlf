<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22ad31415ab560b7fd0180a6dadd6d2dcd7ec77a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\constants-enums\constant-and-literal-data-types.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a4b2e4679b6b46dd4b08339931aff0c1d853f54</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">587be26095c3ffd4537718c93de269ef04e4c782</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Constant and Literal Data Types (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Konstanten und Literale Datentypen (Visual Basic) | Microsoft-Dokumentation</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Constant and Literal Data Types (Visual Basic)</source>
          <target state="translated">Konstanten und literale Datentypen (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A literal is a value that is expressed as itself rather than as a variable's value or the result of an expression, such as the number 3 or the string "Hello".</source>
          <target state="translated">Ein Literal ist ein Wert, der als selbst und nicht als Wert einer Variablen oder das Ergebnis eines Ausdrucks, z. B. die Zahl 3 oder die Zeichenfolge "Hello" ausgedrückt wird.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A constant is a meaningful name that takes the place of a literal and retains this same value throughout the program, as opposed to a variable, whose value may change.</source>
          <target state="translated">Eine Konstante ist ein aussagekräftiger Name, der anstelle eines Literals und behält diese denselben Wert in der gesamten Anwendung, im Gegensatz zu einer Variablen, deren Wert sich ändern kann.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When <bpt id="p1">[</bpt>Option Infer<ept id="p1">](../../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept> is <ph id="ph1">`Off`</ph> and <bpt id="p2">[</bpt>Option Strict<ept id="p2">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept> is <ph id="ph2">`On`</ph>, you must declare all constants explicitly with a data type.</source>
          <target state="translated">Wenn <bpt id="p1">[</bpt>Option Infer<ept id="p1">](../../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept> ist <ph id="ph1">`Off`</ph> und <bpt id="p2">[</bpt>Option Strict<ept id="p2">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept> ist <ph id="ph2">`On`</ph>, müssen Sie alle Konstanten explizit mit einem Datentyp deklarieren.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In the following example, the data type of <ph id="ph1">`MyByte`</ph> is explicitly declared as data type <ph id="ph2">`Byte`</ph>:</source>
          <target state="translated">Im folgenden Beispiel der Datentyp des <ph id="ph1">`MyByte`</ph> explizit als Datentyp deklariert <ph id="ph2">`Byte`</ph>:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrConstants#1<ept id="p2">](../../../../visual-basic/programming-guide/language-features/constants-enums/codesnippet/VisualBasic/constant-and-literal-data-types_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrConstants&amp;#1;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/constants-enums/codesnippet/VisualBasic/constant-and-literal-data-types_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`Option Infer`</ph> is <ph id="ph2">`On`</ph> or <ph id="ph3">`Option Strict`</ph> is <ph id="ph4">`Off`</ph>, you can declare a constant without specifying a data type with an <ph id="ph5">`As`</ph> clause.</source>
          <target state="translated">Wenn <ph id="ph1">`Option Infer`</ph> ist <ph id="ph2">`On`</ph> oder <ph id="ph3">`Option Strict`</ph> ist <ph id="ph4">`Off`</ph>, kann zum Deklarieren von Konstanten ohne Angabe eines Datentyps mit einer <ph id="ph5">`As`</ph> Klausel.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The compiler determines the type of the constant from the type of the expression.</source>
          <target state="translated">Der Compiler bestimmt den Typ der Konstante vom Typ des Ausdrucks.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A numeric integer literal is cast by default to the <ph id="ph1">`Integer`</ph> data type.</source>
          <target state="translated">Ein numerisches Ganzzahlliteral umgewandelt wird, werden standardmäßig die <ph id="ph1">`Integer`</ph> -Datentyp.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The default data type for floating-point numbers is <ph id="ph1">`Double`</ph>, and the keywords <ph id="ph2">`True`</ph> and <ph id="ph3">`False`</ph> specify a <ph id="ph4">`Boolean`</ph> constant.</source>
          <target state="translated">Der Standarddatentyp für Gleitkommazahlen lautet <ph id="ph1">`Double`</ph>, Schlüsselwörter und <ph id="ph2">`True`</ph> und <ph id="ph3">`False`</ph> geben einen <ph id="ph4">`Boolean`</ph> konstant.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Literals and Type Coercion</source>
          <target state="translated">Literale und Typumwandlung</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In some cases, you might want to force a literal to a particular data type; for example, when assigning a particularly large integral literal value to a variable of type <ph id="ph1">`Decimal`</ph>.</source>
          <target state="translated">In einigen Fällen empfiehlt es sich um ein Literal in einen bestimmten Datentyp zu erzwingen; z. B. beim Zuweisen einer besonders großen Ganzzahlliteralwert einer Variable vom Typ <ph id="ph1">`Decimal`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following example produces an error:</source>
          <target state="translated">Im folgende Beispiel erzeugt einen Fehler:</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The error results from the representation of the literal.</source>
          <target state="translated">Der Fehler resultiert aus der Darstellung des Literals.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Decimal`</ph> data type can hold a value this large, but the literal is implicitly represented as a <ph id="ph2">`Long`</ph>, which cannot.</source>
          <target state="translated">Die <ph id="ph1">`Decimal`</ph> -Datentyp kann einen Wert dieser Größe enthalten das Literal wird implizit als eine <ph id="ph2">`Long`</ph>, welche nicht.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can coerce a literal to a particular data type in two ways: by appending a type character to it, or by placing it within enclosing characters.</source>
          <target state="translated">Sie können coerce-Literal in einen bestimmten Datentyp auf zwei Arten: durch ein Typzeichen an sie angehängt oder durch Platzieren innerhalb der einschließenden Zeichen.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A type character or enclosing characters must immediately precede and/or follow the literal, with no intervening space or characters of any kind.</source>
          <target state="translated">Ein Typzeichen oder umschließende Zeichen muss unmittelbar vorangehen und/oder das Literal ohne Leerzeichen oder Zeichen folgen.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To make the previous example work, you can append the <ph id="ph1">`D`</ph> type character to the literal, which causes it to be represented as a <ph id="ph2">`Decimal`</ph>:</source>
          <target state="translated">Um des vorherigen Beispiels zu machen, fügen Sie der <ph id="ph1">`D`</ph> -Typzeichen das Literal, wodurch es als dargestellt, eine <ph id="ph2">`Decimal`</ph>:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrConstants#2<ept id="p2">](../../../../visual-basic/programming-guide/language-features/constants-enums/codesnippet/VisualBasic/constant-and-literal-data-types_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrConstants&amp;#2;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/constants-enums/codesnippet/VisualBasic/constant-and-literal-data-types_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following example demonstrates correct usage of type characters and enclosing characters:</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die richtige Verwendung von Typzeichen und umschließenden Zeichen:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrConstants#3<ept id="p2">](../../../../visual-basic/programming-guide/language-features/constants-enums/codesnippet/VisualBasic/constant-and-literal-data-types_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrConstants&amp;3;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/constants-enums/codesnippet/VisualBasic/constant-and-literal-data-types_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following table shows the enclosing characters and type characters available in <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</source>
          <target state="translated">Die folgende Tabelle zeigt die umschließenden Zeichen und Typzeichen Zeichen in verfügbar <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Data type</source>
          <target state="translated">Datentyp</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Enclosing character</source>
          <target state="translated">Zeichen</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Appended type character</source>
          <target state="translated">Angehängtes Typzeichen</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>(none)</source>
          <target state="translated">(keine)</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>(none)</source>
          <target state="translated">(keine)</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>(none)</source>
          <target state="translated">(keine)</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>(none)</source>
          <target state="translated">(keine)</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>"</source>
          <target state="translated">"</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">A</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>(none)</source>
          <target state="translated">(keine)</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>(none)</source>
          <target state="translated">(keine)</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>D or @</source>
          <target state="translated">D oder @</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>(none)</source>
          <target state="translated">(keine)</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>R or</source>
          <target state="translated">R oder</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>(none)</source>
          <target state="translated">(keine)</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>I or %</source>
          <target state="translated">I oder %</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>(none)</source>
          <target state="translated">(keine)</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>L or &amp;</source>
          <target state="translated">L oder &amp;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>(none)</source>
          <target state="translated">(keine)</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>(none)</source>
          <target state="translated">(keine)</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>F or !</source>
          <target state="translated">F oder!</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>"</source>
          <target state="translated">"</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>(none)</source>
          <target state="translated">(keine)</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Siehe auch</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>User-Defined Constants<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/user-defined-constants.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Benutzerdefinierte Konstanten<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/user-defined-constants.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Declare A Constant<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-declare-a-constant.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Gewusst wie: Deklarieren einer Konstante<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-declare-a-constant.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Constants Overview<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/constants-overview.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Übersicht über Konstanten<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/constants-overview.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Option Strict Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Option Strict-Anweisung<ept id="p1">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Option Explicit Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/option-explicit-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Option Explicit-Anweisung<ept id="p1">](../../../../visual-basic/language-reference/statements/option-explicit-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Enumerations Overview<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/enumerations-overview.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Übersicht über Enumerationen<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/enumerations-overview.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Declare an Enumeration<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-declare-enumerations.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Gewusst wie: Deklarieren einer Enumeration<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-declare-enumerations.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Enumerations and Name Qualification<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/enumerations-and-name-qualification.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Enumerationen und Namensqualifikation<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/enumerations-and-name-qualification.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Data Types<ept id="p1">](../../../../visual-basic/language-reference/data-types/data-type-summary.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Datentypen<ept id="p1">](../../../../visual-basic/language-reference/data-types/data-type-summary.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Constants and Enumerations<ept id="p1">](../../../../visual-basic/language-reference/constants-and-enumerations.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Konstanten und Enumerationen<ept id="p1">](../../../../visual-basic/language-reference/constants-and-enumerations.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>