<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46c5cb9328f2fa1a4ffc5116d318bc3286419e13</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\async\how-to-extend-the-async-walkthrough-by-using-task-whenall.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3bfed037a37e4b8afde734dbdf66a2bbb5f8fcb7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d44e6949ee4a554595ee25194e439413e799fb4e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Extend the Async Walkthrough by Using Task.WhenAll (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Gewusst wie: Erweitern der asynchronen exemplarischen Vorgehensweise mit Task.WhenAll (Visual Basic) | Microsoft-Dokumentation</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Extend the Async Walkthrough by Using Task.WhenAll (Visual Basic)</source>
          <target state="translated">Gewusst wie: Erweitern der asynchronen exemplarischen Vorgehensweise mit Task.WhenAll (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can improve the performance of the async solution in <bpt id="p1">[</bpt>Walkthrough: Accessing the Web by Using Async and Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept> by using the &lt;xref:System.Threading.Tasks.Task.WhenAll%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">Sie können die Leistung der asynchronen Projektmappe in verbessern <bpt id="p1">[</bpt>Exemplarische Vorgehensweise: Zugreifen auf das Web durch Verwenden von Async und Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept> mithilfe der &lt;xref:System.Threading.Tasks.Task.WhenAll%2A?displayProperty=fullName&gt;Methode.&lt;/xref:System.Threading.Tasks.Task.WhenAll%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This method asynchronously awaits multiple asynchronous operations, which are represented as a collection of tasks.</source>
          <target state="translated">Diese Methode wartet auf mehrere asynchrone Vorgänge, die als Auflistung von Aufgaben dargestellt werden.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You might have noticed in the walkthrough that the websites download at different rates.</source>
          <target state="translated">Sie haben möglicherweise in der exemplarischen Vorgehensweise bemerkt, dass die Websites Downloads in verschiedenen Geschwindigkeiten anbieten.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Sometimes one of the websites is very slow, which delays all the remaining downloads.</source>
          <target state="translated">Manchmal ist eine Website sehr langsam und verzögert alle verbleibenden Downloads.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When you run the asynchronous solutions that you build in the walkthrough, you can end the program easily if you don't want to wait, but a better option would be to start all the downloads at the same time and let faster downloads continue without waiting for the one that’s delayed.</source>
          <target state="translated">Wenn Sie die asynchronen Projektmappen ausführen, die Sie in der exemplarischen Vorgehensweise erstellt haben, können Sie das Programm einfach beenden, wenn Sie nicht warten möchten. Eine bessere Option wäre jedoch, alle Downloads gleichzeitig zu starten und schnellere Downloads einfach fortfahren, ohne auf langsamere zu warten.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You apply the <ph id="ph1">`Task.WhenAll`</ph> method to a collection of tasks.</source>
          <target state="translated">Sie wenden die <ph id="ph1">`Task.WhenAll`</ph>-Methode auf eine Aufgabenauflistung an.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The application of <ph id="ph1">`WhenAll`</ph> returns a single task that isn’t complete until every task in the collection is completed.</source>
          <target state="translated">Die Anwendung von <ph id="ph1">`WhenAll`</ph> gibt eine einzelne Aufgabe zurück, die nicht abgeschlossen ist, bevor jede Aufgabe in der Auflistung abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The tasks appear to run in parallel, but no additional threads are created.</source>
          <target state="translated">Die Aufgaben scheinen parallel ausgeführt zu werden, es werden jedoch keine weiteren Threads erstellt.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The tasks can complete in any order.</source>
          <target state="translated">Die Aufgaben können in jeder Reihenfolge abschließen.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following procedures describe extensions to the async applications that are developed in <bpt id="p1">[</bpt>Walkthrough: Accessing the Web by Using Async and Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>.</source>
          <target state="translated">Die folgenden Prozeduren beschreiben Erweiterungen zu asynchronen Anwendungen, die in entwickelt wurden <bpt id="p1">[</bpt>Exemplarische Vorgehensweise: Zugreifen auf das Web durch Verwenden von Async und Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can develop the applications by either completing the walkthrough or downloading the code from <bpt id="p1">[</bpt>Developer Code Samples<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255191)</ept>.</source>
          <target state="translated">Sie können die Anwendung entwickeln, indem Sie entweder die exemplarische Vorgehensweise durcharbeiten oder Herunterladen von Code aus <bpt id="p1">[</bpt>Codebeispielen für Entwickler<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255191)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To run the example, you must have Visual Studio 2012 or later installed on your computer.</source>
          <target state="translated">Zum Ausführen des Beispiels müssen Sie Visual Studio 2012 oder höher auf Ihrem Computer installiert.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To add Task.WhenAll to your GetURLContentsAsync solution</source>
          <target state="translated">So fügen Sie der GetURLContentsAsync-Lösung Task.WhenAll hinzu</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Add the <ph id="ph1">`ProcessURLAsync`</ph> method to the first application that's developed in <bpt id="p1">[</bpt>Walkthrough: Accessing the Web by Using Async and Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>.</source>
          <target state="translated">Hinzufügen der <ph id="ph1">`ProcessURLAsync`</ph> Methode, um die erste Anwendung, die in Entwicklung <bpt id="p1">[</bpt>Exemplarische Vorgehensweise: Zugreifen auf das Web durch Verwenden von Async und Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you downloaded the code from  <bpt id="p1">[</bpt>Developer Code Samples<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255191)</ept>, open the AsyncWalkthrough project, and then add <ph id="ph1">`ProcessURLAsync`</ph> to the MainWindow.xaml.vb file.</source>
          <target state="translated">Wenn Sie den Code aus heruntergeladen <bpt id="p1">[</bpt>Codebeispielen für Entwickler<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255191)</ept>, öffnen Sie das Projekt AsyncWalkthrough, und fügen Sie dann <ph id="ph1">`ProcessURLAsync`</ph> auf die Datei "MainWindow.Xaml.vb".</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you developed the code by completing the walkthrough, add <ph id="ph1">`ProcessURLAsync`</ph> to the application that includes the <ph id="ph2">`GetURLContentsAsync`</ph> method.</source>
          <target state="translated">Wenn Sie den Code innerhalb der exemplarische Vorgehensweise entwickelt haben, fügen Sie <ph id="ph1">`ProcessURLAsync`</ph> der Anwendung hinzu, die die <ph id="ph2">`GetURLContentsAsync`</ph>-Methode enthält.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The MainWindow.xaml.vb file for this application is the first example in the "Complete Code Examples from the Walkthrough" section.</source>
          <target state="translated">Die Datei "MainWindow.Xaml.vb" für diese Anwendung ist das erste Beispiel im Abschnitt "Vollständige Codebeispiele aus der exemplarischen Vorgehensweise".</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ProcessURLAsync`</ph> method consolidates the actions in the body of the <ph id="ph2">`For Each`</ph> loop in <ph id="ph3">`SumPageSizesAsync`</ph> in the original walkthrough.</source>
          <target state="translated">Die <ph id="ph1">`ProcessURLAsync`</ph> -Methode konsolidiert die Aktionen im Hauptteil der <ph id="ph2">`For Each`</ph> eine Schleife in der <ph id="ph3">`SumPageSizesAsync`</ph> in der ersten exemplarischen Vorgehensweise.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The method asynchronously downloads the contents of a specified website as a byte array, and then displays and returns the length of the byte array.</source>
          <target state="translated">Die Methode lädt asynchron den angegebenen Inhalt einer Website als Bytearray und gibt dann die Länge des Bytearrays zurück.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Comment out or delete the <ph id="ph1">`For Each`</ph> loop in <ph id="ph2">`SumPageSizesAsync`</ph>, as the following code shows.</source>
          <target state="translated">Kommentieren Sie Sie aus, oder Löschen der <ph id="ph1">`For Each`</ph> eine Schleife in der <ph id="ph2">`SumPageSizesAsync`</ph>, wie der folgende Code zeigt.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Create a collection of tasks.</source>
          <target state="translated">Erstellen Sie eine Auflistung von Aufgaben.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following code defines a <bpt id="p1">[</bpt>query<ept id="p1">](http://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d)</ept> that, when executed by the &lt;xref:System.Linq.Enumerable.ToArray%2A&gt; method, creates a collection of tasks that download the contents of each website.</source>
          <target state="translated">Der folgende Code definiert ein <bpt id="p1">[</bpt>Abfrage<ept id="p1">](http://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d)</ept> , die bei Ausführung durch die &lt;xref:System.Linq.Enumerable.ToArray%2A&gt;-Methode erstellt eine Auflistung von Aufgaben, die die Inhalte jeder Website herunterladen.&lt;/xref:System.Linq.Enumerable.ToArray%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The tasks are started when the query is evaluated.</source>
          <target state="translated">Die Aufgaben werden beim Auswerten der Abfrage gestartet.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Add the following code to method <ph id="ph1">`SumPageSizesAsync`</ph> after the declaration of <ph id="ph2">`urlList`</ph>.</source>
          <target state="translated">Fügen Sie nach der Deklaration von <ph id="ph1">`SumPageSizesAsync`</ph> den folgenden Code der <ph id="ph2">`urlList`</ph>-Methode hinzu:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Apply <ph id="ph1">`Task.WhenAll`</ph> to the collection of tasks, <ph id="ph2">`downloadTasks`</ph>.</source>
          <target state="translated">Wenden Sie <ph id="ph1">`Task.WhenAll`</ph> auf die Auflistung von Aufgaben <ph id="ph2">`downloadTasks`</ph> an.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Task.WhenAll`</ph> returns a single task that finishes when all the tasks in the collection of tasks have completed.</source>
          <target state="translated"><ph id="ph1">`Task.WhenAll`</ph> gibt eine einzelne abgeschlossene Aufgabe zurück, wenn alle Aufgaben in der Auflistung abgeschlossen wurden.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In the following example, the <ph id="ph1">`Await`</ph> expression awaits the completion of the single task that <ph id="ph2">`WhenAll`</ph> returns.</source>
          <target state="translated">Im folgenden Beispiel die <ph id="ph1">`Await`</ph> Ausdruck wartet auf den Abschluss der einzelnen Aufgabe, <ph id="ph2">`WhenAll`</ph> zurückgibt.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The expression evaluates to an array of integers, where each integer is the length of a downloaded website.</source>
          <target state="translated">Der Ausdruck wird gegen ein Array mit ganzen Zahlen ausgewertet, wobei jede ganze Zahl die Länge einer heruntergeladenen Website ist.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Add the following code to <ph id="ph1">`SumPageSizesAsync`</ph>, just after the code that you added in the previous step.</source>
          <target state="translated">Fügen Sie <ph id="ph1">`SumPageSizesAsync`</ph> den folgenden Code hinzu, direkt nach dem im vorherigen Schritt hinzugefügten Code.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Finally, use the &lt;xref:System.Linq.Enumerable.Sum%2A&gt; method to calculate the sum of the lengths of all the websites.</source>
          <target state="translated">Verwenden Sie schließlich die &lt;xref:System.Linq.Enumerable.Sum%2A&gt;Methode, um die Summe der Größen aller Websites zu berechnen.&lt;/xref:System.Linq.Enumerable.Sum%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Add the following line to <ph id="ph1">`SumPageSizesAsync`</ph>.</source>
          <target state="translated">Fügen Sie <ph id="ph1">`SumPageSizesAsync`</ph> die folgende Zeile hinzu.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To add Task.WhenAll to the HttpClient.GetByteArrayAsync solution</source>
          <target state="translated">So fügen Sie der HttpClient.GetByteArrayAsync-Lösung Task.WhenAll hinzu</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Add the following version of <ph id="ph1">`ProcessURLAsync`</ph> to the second application that's developed in <bpt id="p1">[</bpt>Walkthrough: Accessing the Web by Using Async and Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>.</source>
          <target state="translated">Fügen Sie die folgende Version des <ph id="ph1">`ProcessURLAsync`</ph> der zweiten Anwendung, die in Entwicklung <bpt id="p1">[</bpt>Exemplarische Vorgehensweise: Zugreifen auf das Web durch Verwenden von Async und Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you downloaded the code from <bpt id="p1">[</bpt>Developer Code Samples<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255191)</ept>, open the AsyncWalkthrough_HttpClient project, and then add <ph id="ph1">`ProcessURLAsync`</ph> to the MainWindow.xaml.vb file.</source>
          <target state="translated">Wenn Sie den Code aus heruntergeladen <bpt id="p1">[</bpt>Codebeispielen für Entwickler<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255191)</ept>AsyncWalkthrough_HttpClient-Projekt zu öffnen, und fügen Sie dann <ph id="ph1">`ProcessURLAsync`</ph> auf die Datei "MainWindow.Xaml.vb".</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you developed the code by completing the walkthrough, add <ph id="ph1">`ProcessURLAsync`</ph> to the application that uses the <ph id="ph2">`HttpClient.GetByteArrayAsync`</ph> method.</source>
          <target state="translated">Wenn Sie den Code innerhalb der exemplarische Vorgehensweise entwickelt haben, fügen Sie <ph id="ph1">`ProcessURLAsync`</ph> der Anwendung hinzu, die die <ph id="ph2">`HttpClient.GetByteArrayAsync`</ph>-Methode verwendet.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The MainWindow.xaml.vb file for this application is the second example in the "Complete Code Examples from the Walkthrough" section.</source>
          <target state="translated">Die Datei "MainWindow.Xaml.vb" für diese Anwendung ist das zweite Beispiel im Abschnitt "Vollständige Codebeispiele aus der exemplarischen Vorgehensweise".</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ProcessURLAsync`</ph> method consolidates the actions in the body of the <ph id="ph2">`For Each`</ph> loop in <ph id="ph3">`SumPageSizesAsync`</ph> in the original walkthrough.</source>
          <target state="translated">Die <ph id="ph1">`ProcessURLAsync`</ph> -Methode konsolidiert die Aktionen im Hauptteil der <ph id="ph2">`For Each`</ph> eine Schleife in der <ph id="ph3">`SumPageSizesAsync`</ph> in der ersten exemplarischen Vorgehensweise.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The method asynchronously downloads the contents of a specified website as a byte array, and then displays and returns the length of the byte array.</source>
          <target state="translated">Die Methode lädt asynchron den angegebenen Inhalt einer Website als Bytearray und gibt dann die Länge des Bytearrays zurück.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The only difference from the <ph id="ph1">`ProcessURLAsync`</ph> method in the previous procedure is the use of the &lt;xref:System.Net.Http.HttpClient&gt; instance, <ph id="ph2">`client`</ph>.</source>
          <target state="translated">Der einzige Unterschied gegenüber der <ph id="ph1">`ProcessURLAsync`</ph> -Methode in der vorherigen Prozedur ist die Verwendung von der &lt;xref:System.Net.Http.HttpClient&gt;Instanz <ph id="ph2">`client`</ph>.&lt;/xref:System.Net.Http.HttpClient&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Comment out or delete the <ph id="ph1">`For Each`</ph> loop in <ph id="ph2">`SumPageSizesAsync`</ph>, as the following code shows.</source>
          <target state="translated">Kommentieren Sie Sie aus, oder Löschen der <ph id="ph1">`For Each`</ph> eine Schleife in der <ph id="ph2">`SumPageSizesAsync`</ph>, wie der folgende Code zeigt.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Define a <bpt id="p1">[</bpt>query<ept id="p1">](http://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d)</ept> that, when executed by the &lt;xref:System.Linq.Enumerable.ToArray%2A&gt; method, creates a collection of tasks that download the contents of each website.</source>
          <target state="translated">Definieren einer <bpt id="p1">[</bpt>Abfrage<ept id="p1">](http://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d)</ept> , die bei Ausführung durch die &lt;xref:System.Linq.Enumerable.ToArray%2A&gt;-Methode erstellt eine Auflistung von Aufgaben, die die Inhalte jeder Website herunterladen.&lt;/xref:System.Linq.Enumerable.ToArray%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The tasks are started when the query is evaluated.</source>
          <target state="translated">Die Aufgaben werden beim Auswerten der Abfrage gestartet.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Add the following code to method <ph id="ph1">`SumPageSizesAsync`</ph> after the declaration of <ph id="ph2">`client`</ph> and <ph id="ph3">`urlList`</ph>.</source>
          <target state="translated">Fügen Sie nach der Deklaration von <ph id="ph1">`SumPageSizesAsync`</ph> und <ph id="ph2">`client`</ph> den folgenden Code der <ph id="ph3">`urlList`</ph>-Methode hinzu:</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Next, apply <ph id="ph1">`Task.WhenAll`</ph> to the collection of tasks, <ph id="ph2">`downloadTasks`</ph>.</source>
          <target state="translated">Wenden Sie <ph id="ph1">`Task.WhenAll`</ph> auf die Auflistung von Aufgaben an, <ph id="ph2">`downloadTasks`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Task.WhenAll`</ph> returns a single task that finishes when all the tasks in the collection of tasks have completed.</source>
          <target state="translated"><ph id="ph1">`Task.WhenAll`</ph> gibt eine einzelne abgeschlossene Aufgabe zurück, wenn alle Aufgaben in der Auflistung abgeschlossen wurden.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In the following example, the <ph id="ph1">`Await`</ph> expression awaits the completion of the single task that <ph id="ph2">`WhenAll`</ph> returns.</source>
          <target state="translated">Im folgenden Beispiel die <ph id="ph1">`Await`</ph> Ausdruck wartet auf den Abschluss der einzelnen Aufgabe, <ph id="ph2">`WhenAll`</ph> zurückgibt.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When complete, the <ph id="ph1">`Await`</ph> expression evaluates to an array of integers, where each integer is the length of a downloaded website.</source>
          <target state="translated">Nach Abschluss des Vorgangs die <ph id="ph1">`Await`</ph> Ausdruck ausgewertet wird, um ein Array von ganzen Zahlen, wobei jede ganze Zahl die Länge einer heruntergeladenen Website.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Add the following code to <ph id="ph1">`SumPageSizesAsync`</ph>, just after the code that you added in the previous step.</source>
          <target state="translated">Fügen Sie <ph id="ph1">`SumPageSizesAsync`</ph> den folgenden Code hinzu, direkt nach dem im vorherigen Schritt hinzugefügten Code.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Finally, use the &lt;xref:System.Linq.Enumerable.Sum%2A&gt; method to get the sum of the lengths of all the websites.</source>
          <target state="translated">Verwenden Sie schließlich die &lt;xref:System.Linq.Enumerable.Sum%2A&gt;Methode, um die Summe der Größen aller Websites zu erhalten.&lt;/xref:System.Linq.Enumerable.Sum%2A&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Add the following line to <ph id="ph1">`SumPageSizesAsync`</ph>.</source>
          <target state="translated">Fügen Sie <ph id="ph1">`SumPageSizesAsync`</ph> die folgende Zeile hinzu.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To test the Task.WhenAll solutions</source>
          <target state="translated">So testen Sie die Task.WhenAll-Lösungen</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For either solution, choose the F5 key to run the program, and then choose the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> button.</source>
          <target state="translated">Wählen Sie für die beiden Projektmappen F5, um das Programm auszuführen, und wählen Sie dann die <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> Schaltfläche.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The output should resemble the output from the async solutions in <bpt id="p1">[</bpt>Walkthrough: Accessing the Web by Using Async and Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>.</source>
          <target state="translated">Die Ausgabe entspricht in etwa die Ausgabe der asynchronen Projektmappen in <bpt id="p1">[</bpt>Exemplarische Vorgehensweise: Zugreifen auf das Web durch Verwenden von Async und Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>However, notice that the websites appear in a different order each time.</source>
          <target state="translated">Beachten Sie jedoch, dass die Websites in einer jeweils anderen Reihenfolge angezeigt werden.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Beispiel</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following code shows the extensions to the project that uses the <ph id="ph1">`GetURLContentsAsync`</ph> method to download content from the web.</source>
          <target state="translated">Der folgende Code zeigt die Erweiterungen des Projekts, das die <ph id="ph1">`GetURLContentsAsync`</ph>-Methode verwendet, um Inhalt aus dem Web herunterladen.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Beispiel</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The following code shows the extensions to the project that uses method <ph id="ph1">`HttpClient.GetByteArrayAsync`</ph> to download content from the web.</source>
          <target state="translated">Der folgende Code zeigt die Erweiterungen des Projekts, das die <ph id="ph1">`HttpClient.GetByteArrayAsync`</ph>-Methode verwendet, um Inhalt aus dem Web herunterladen.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Siehe auch</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Threading.Tasks.Task.WhenAll%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Threading.Tasks.Task.WhenAll%2A?displayProperty=fullName&gt;&lt;/xref:System.Threading.Tasks.Task.WhenAll%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Walkthrough: Accessing the Web by Using Async and Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Exemplarische Vorgehensweise: Zugreifen auf das Web mit Async und Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>