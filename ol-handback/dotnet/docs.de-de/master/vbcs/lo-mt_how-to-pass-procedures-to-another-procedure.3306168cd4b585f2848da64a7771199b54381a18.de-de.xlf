<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9865e2d7d3786d289add3fa63b3db777317facdf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\delegates\how-to-pass-procedures-to-another-procedure.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2e93e71fa4de7936f94c84ec8cbc9999b81ef39</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c532db6fb779fd6a43f38fda4ea17f2902cdf47</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Pass Procedures to Another Procedure in Visual Basic | Microsoft Docs</source>
          <target state="translated">Gewusst wie: Übergeben von Prozeduren an eine andere Prozedur in Visual Basic | Microsoft-Dokumentation</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Pass Procedures to Another Procedure in Visual Basic</source>
          <target state="translated">Gewusst wie: Übergeben von Prozeduren an eine andere Prozedur in Visual Basic</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This example shows how to use delegates to pass a procedure to another procedure.</source>
          <target state="translated">Dieses Beispiel zeigt, wie Delegaten verwenden, um eine Prozedur an eine andere Prozedur übergeben wird.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A delegate is a type that you can use like any other type in <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</source>
          <target state="translated">Ein Delegat ist ein Typ, mit denen Sie wie jeden anderen Typ in <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`AddressOf`</ph> operator returns a delegate object when applied to a procedure name.</source>
          <target state="translated">Die <ph id="ph1">`AddressOf`</ph> Operator gibt ein Delegatobjekt bei Anwendung auf eine Prozedurnamens zurück.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This example has a procedure with a delegate parameter that can take a reference to another procedure, obtained with the <ph id="ph1">`AddressOf`</ph> operator.</source>
          <target state="translated">In diesem Beispiel wird eine Prozedur mit einem Delegatparameter, die einen Verweis auf eine andere Prozedur, die mit bezogen können die <ph id="ph1">`AddressOf`</ph> Operator.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Create the delegate and matching procedures</source>
          <target state="translated">Erstellen des Delegaten und entsprechender Prozeduren</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Create a delegate named <ph id="ph1">`MathOperator`</ph>.</source>
          <target state="translated">Erstellen Sie einen Delegaten mit dem Namen <ph id="ph1">`MathOperator`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates#1<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates&amp;#1;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Create a procedure named <ph id="ph1">`AddNumbers`</ph> with parameters and return value that match those of <ph id="ph2">`MathOperator`</ph>, so that the signatures match.</source>
          <target state="translated">Erstellen Sie eine Prozedur mit dem Namen <ph id="ph1">`AddNumbers`</ph> mit Parametern und Rückgabewert, der übereinstimmen <ph id="ph2">`MathOperator`</ph>, damit die Signaturen übereinstimmen.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates#2<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates&amp;#2;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Create a procedure named <ph id="ph1">`SubtractNumbers`</ph> with a signature that matches <ph id="ph2">`MathOperator`</ph>.</source>
          <target state="translated">Erstellen Sie eine Prozedur mit dem Namen <ph id="ph1">`SubtractNumbers`</ph> mit einer Signatur, die entspricht <ph id="ph2">`MathOperator`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates#3<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates&amp;3;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Create a procedure named <ph id="ph1">`DelegateTest`</ph> that takes a delegate as a parameter.</source>
          <target state="translated">Erstellen Sie eine Prozedur mit dem Namen <ph id="ph1">`DelegateTest`</ph> , die einen Delegaten als Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This procedure can accept a reference to <ph id="ph1">`AddNumbers`</ph> or <ph id="ph2">`SubtractNumbers`</ph>, because their signatures match the <ph id="ph3">`MathOperator`</ph> signature.</source>
          <target state="translated">Diese Prozedur akzeptiert einen Verweis auf <ph id="ph1">`AddNumbers`</ph> oder <ph id="ph2">`SubtractNumbers`</ph>, da ihre Signaturen entsprechen den <ph id="ph3">`MathOperator`</ph> Signatur.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates#4<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates&amp;4;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Create a procedure named <ph id="ph1">`Test`</ph> that calls <ph id="ph2">`DelegateTest`</ph> once with the delegate for <ph id="ph3">`AddNumbers`</ph> as a parameter, and again with the delegate for <ph id="ph4">`SubtractNumbers`</ph> as a parameter.</source>
          <target state="translated">Erstellen Sie eine Prozedur mit dem Namen <ph id="ph1">`Test`</ph> aufruft, <ph id="ph2">`DelegateTest`</ph> einmal mit dem Delegaten für <ph id="ph3">`AddNumbers`</ph> als Parameter und erneut mit dem Delegaten für <ph id="ph4">`SubtractNumbers`</ph> als Parameter.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates#5<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates&amp;5;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`Test`</ph> is called, it first displays the result of <ph id="ph2">`AddNumbers`</ph> acting on <ph id="ph3">`5`</ph> and <ph id="ph4">`3`</ph>, which is 8.</source>
          <target state="translated">Wenn <ph id="ph1">`Test`</ph> wird aufgerufen, es zunächst zeigt das Ergebnis der <ph id="ph2">`AddNumbers`</ph> handelnden auf <ph id="ph3">`5`</ph> und <ph id="ph4">`3`</ph>, also 8.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Then the result of <ph id="ph1">`SubtractNumbers`</ph> acting on <ph id="ph2">`9`</ph> and <ph id="ph3">`3`</ph> is displayed, which is 6.</source>
          <target state="translated">Klicken Sie dann auf das Ergebnis des <ph id="ph1">`SubtractNumbers`</ph> auf <ph id="ph2">`9`</ph> und <ph id="ph3">`3`</ph> angezeigt wird, also 6.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Siehe auch</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Delegates<ept id="p1">](../../../../visual-basic/programming-guide/language-features/delegates/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Delegaten<ept id="p1">](../../../../visual-basic/programming-guide/language-features/delegates/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>AddressOf Operator<ept id="p1">](../../../../visual-basic/language-reference/operators/addressof-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>AddressOf-Operator<ept id="p1">](../../../../visual-basic/language-reference/operators/addressof-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Delegate Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/delegate-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Delegate-Anweisung<ept id="p1">](../../../../visual-basic/language-reference/statements/delegate-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Invoke a Delegate Method<ept id="p1">](../../../../visual-basic/programming-guide/language-features/delegates/how-to-invoke-a-delegate-method.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Gewusst wie: Aufrufen einer Delegatenmethode<ept id="p1">](../../../../visual-basic/programming-guide/language-features/delegates/how-to-invoke-a-delegate-method.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>