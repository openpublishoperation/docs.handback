<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5af26b7ec0a2ab465917cd0ee62f65a97f5f0e40</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\how-to-write-queries-on-xml-in-namespaces.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92714a9787bfdf34d878c1e259ba55781aeb95ba</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ad6c7d6900ff1302e6726a367ec77ec89488fbb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Write Queries on XML in Namespaces (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Gewusst wie: Schreiben von Abfragen für XML in Namespaces (Visual Basic) | Microsoft-Dokumentation</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Write Queries on XML in Namespaces (Visual Basic)</source>
          <target state="translated">Gewusst wie: Schreiben von Abfragen für XML in Namespaces (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>To write a query on XML that is in a namespace, you must use &lt;xref:System.Xml.Linq.XName&gt; objects that have the correct namespace.</source>
          <target state="translated">Um eine Abfrage für XML zu schreiben, die in einem Namespace befindet, verwenden Sie &lt;xref:System.Xml.Linq.XName&gt;Objekte, die den richtigen Namespace enthalten.&lt;/xref:System.Xml.Linq.XName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In Visual Basic, the most common approach is to define a global namespace, and then use XML literals and XML properties that use the global namespace.</source>
          <target state="translated">In Visual Basic wird meist ein globaler Namespace definiert, und anschließend werden XML-Literale und XML-Eigenschaften verwendet, die den globalen Namespace nutzen.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can define a global default namespace, in which case elements in the XML literals will be in the namespace by default.</source>
          <target state="translated">Sie können einen globalen Standardnamespace definieren. Die Elemente in den XML-Literalen sind dann standardmäßig im Namespace vorhanden.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Alternatively, you can define a global namespace with a prefix, and then use the prefix as required in the XML literals, and in XML properties.</source>
          <target state="translated">Stattdessen können Sie auch einen globalen Namespace mit einem Präfix definieren und dann das Präfix den Anforderungen entsprechend in den XML-Literalen und in den XML-Eigenschaften verwenden.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>As with other forms of XML, attributes are always in no namespace by default.</source>
          <target state="translated">Wie bei anderen XML-Formen auch befinden sich Attribute standardmäßig nicht in einem Namespace.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The first set of examples in this topic shows how to create an XML tree in a default namespace.</source>
          <target state="translated">Der erste Satz von Beispielen in diesem Thema veranschaulicht, wie eine XML-Struktur in einem Standardnamespace erstellen.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The second set shows how to create an XML tree in a namespace with a prefix.</source>
          <target state="translated">Der zweite Satz veranschaulicht, wie eine XML-Struktur in einem Namespace mit einem Präfix zu erstellen.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Beispiel</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following example creates an XML tree that is in a default namespace.</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur, die sich in einem Standardnamespace befindet.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>It then retrieves a collection of elements.</source>
          <target state="translated">Anschließend ruft das Beispiel eine Auflistung der Elemente ab.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Beispiel</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In Visual Basic, however, writing queries on an XML tree that uses a namespace with a prefix is quite different from querying an XML tree in a default namespace.</source>
          <target state="translated">In Visual Basic unterscheidet sich das Schreiben von Abfragen für eine XML-Struktur, die einen Namespace mit einem Präfix verwendet, jedoch recht stark vom Abfragen einer XML-Struktur in einem Standardnamespace.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Typically you use the <ph id="ph1">`Imports`</ph> statement to import the namespace with a prefix.</source>
          <target state="translated">Normalerweise verwenden Sie die <ph id="ph1">`Imports`</ph>-Anweisung, um den Namespace mit einem Präfix zu importieren.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You then use the prefix in the element and attribute names when you construct the XML tree.</source>
          <target state="translated">Anschließend können Sie das Präfix beim Erstellen der XML-Struktur in den Element- und Attributnamen verwenden.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You also use the prefix when querying an XML tree using XML properties.</source>
          <target state="translated">Sie können das Präfix auch beim Abfragen einer XML-Struktur mithilfe von XML-Eigenschaften verwenden.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following example creates an XML tree that is in a namespace with a prefix.</source>
          <target state="translated">Das folgende Beispiel erstellt eine XML-Struktur, die sich in einem Namespace mit einem Präfix befindet.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It then retrieves a collection of elements.</source>
          <target state="translated">Anschließend ruft das Beispiel eine Auflistung der Elemente ab.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Siehe auch</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Working with XML Namespaces (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Arbeiten mit XML-Namespaces (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>