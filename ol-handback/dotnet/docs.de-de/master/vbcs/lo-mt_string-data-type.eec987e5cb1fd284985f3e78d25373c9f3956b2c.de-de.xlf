<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9221a89a1fb46609b4b8550968e3a2bbe874772c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\data-types\string-data-type.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a251e581e97d781d5906456b86af619d365f78a2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04e1aea8ffadc2303c4682a05cede01a48bcd0de</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>String Data Type (Visual Basic) | Microsoft Docs</source>
          <target state="translated">String-Datentyp (Visual Basic) | Microsoft-Dokumentation</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>String Data Type (Visual Basic)</source>
          <target state="translated">String-Datentyp (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Holds sequences of unsigned 16-bit (2-byte) code points that range in value from 0 through 65535.</source>
          <target state="translated">Enthält Sequenzen vorzeichenlose 16-Bit (2-Byte)-Codepunkte Bereichs im Wert von 0 bis 65535.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Each <bpt id="p1">*</bpt>code point<ept id="p1">*</ept>, or character code, represents a single Unicode character.</source>
          <target state="translated">Jede <bpt id="p1">*</bpt>Codepunkt<ept id="p1">*</ept>, oder Zeichencode stellt ein einzelnes Unicode-Zeichen dar.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A string can contain from 0 to approximately two billion (2 ^ 31) Unicode characters.</source>
          <target state="translated">Eine Zeichenfolge darf zwischen 0 und etwa zwei Milliarden (2 ^ 31) Unicode-Zeichen.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">Hinweise</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`String`</ph> data type to hold multiple characters without the array management overhead of <ph id="ph2">`Char()`</ph>, an array of <ph id="ph3">`Char`</ph> elements.</source>
          <target state="translated">Verwenden der <ph id="ph1">`String`</ph> -Datentyp, um mehrere Zeichen ohne den Verwaltungsaufwand für Array speichern <ph id="ph2">`Char()`</ph>, ein Array von <ph id="ph3">`Char`</ph> Elemente.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The default value of <ph id="ph1">`String`</ph> is <ph id="ph2">`Nothing`</ph> (a null reference).</source>
          <target state="translated">Der Standardwert von <ph id="ph1">`String`</ph> ist <ph id="ph2">`Nothing`</ph> (ein null-Verweis).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Note that this is not the same as the empty string (value <ph id="ph1">`""`</ph>).</source>
          <target state="translated">Beachten Sie, dass dies nicht dasselbe wie eine leere Zeichenfolge ist (Wert <ph id="ph1">`""`</ph>).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Unicode Characters</source>
          <target state="translated">Unicode-Zeichen</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The first 128 code points (0–127) of Unicode correspond to the letters and symbols on a standard U.S. keyboard.</source>
          <target state="translated">Die ersten 128 Codepunkte (0 bis 127) von Unicode entsprechen den Buchstaben und Symbolen auf einer Standardtastatur (USA).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>These first 128 code points are the same as those the ASCII character set defines.</source>
          <target state="translated">Diese ersten 128 Codepunkte sind identisch mit denen ASCII-Zeichensatz definiert.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The second 128 code points (128–255) represent special characters, such as Latin-based alphabet letters, accents, currency symbols, and fractions.</source>
          <target state="translated">Die zweiten 128 Codepunkte (128 – 255) darstellen, Sonderzeichen, wie z. B. lateinischen Buchstaben, Akzente, Währungssymbole und Bruchzahlen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Unicode uses the remaining code points (256-65535) for a wide variety of symbols.</source>
          <target state="translated">Unicode verwendet die übrigen Codepunkte (256 bis&amp;65535;) für eine Vielzahl von Symbolen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This includes worldwide textual characters, diacritics, and mathematical and technical symbols.</source>
          <target state="translated">Dies schließt internationale Textzeichen, diakritische Zeichen und mathematische und technische Symbole.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can use methods such as &lt;xref:System.Char.IsDigit%2A&gt; and &lt;xref:System.Char.IsPunctuation%2A&gt; on an individual character in a <ph id="ph1">`String`</ph> variable to determine its Unicode classification.</source>
          <target state="translated">Sie verwenden die Methoden wie &lt;xref:System.Char.IsDigit%2A&gt;und &lt;xref:System.Char.IsPunctuation%2A&gt;auf ein einzelnes Zeichen in eine <ph id="ph1">`String`</ph> Variable, deren Unicode-Klassifizierung ermitteln.&lt;/xref:System.Char.IsPunctuation%2A&gt; &lt;/xref:System.Char.IsDigit%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Format Requirements</source>
          <target state="translated">Formatanforderungen</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You must enclose a <ph id="ph1">`String`</ph> literal within quotation marks (<ph id="ph2">`" "`</ph>).</source>
          <target state="translated">Muss ein <ph id="ph1">`String`</ph> Zeichenfolgenliteral in Anführungszeichen (<ph id="ph2">`" "`</ph>).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you must include a quotation mark as one of the characters in the string, you use two contiguous quotation marks (<ph id="ph1">`""`</ph>).</source>
          <target state="translated">Wenn Sie ein Anführungszeichen als eines der Zeichen in der Zeichenfolge einfügen müssen, verwenden Sie zwei aufeinander folgende Anführungszeichen (<ph id="ph1">`""`</ph>).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following example illustrates this.</source>
          <target state="translated">Dies wird anhand des folgenden Beispiels veranschaulicht.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Note that the contiguous quotation marks that represent a quotation mark in the string are independent of the quotation marks that begin and end the <ph id="ph1">`String`</ph> literal.</source>
          <target state="translated">Beachten Sie, dass die aufeinander folgenden Anführungszeichen, die ein Anführungszeichen in der Zeichenfolge darstellen, unabhängig von den Anführungszeichen, die Anfang und Ende der <ph id="ph1">`String`</ph> literal.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>String Manipulations</source>
          <target state="translated">Zeichenfolgen</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Once you assign a string to a <ph id="ph1">`String`</ph> variable, that string is <bpt id="p1">*</bpt>immutable<ept id="p1">*</ept>, which means you cannot change its length or contents.</source>
          <target state="translated">Nachdem Sie eine Zeichenfolge zuweisen ein <ph id="ph1">`String`</ph> , diese Zeichenfolge wird <bpt id="p1">*</bpt>unveränderlich<ept id="p1">*</ept>, d.h. nicht ändern, deren Größe oder den Inhalt.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When you alter a string in any way, Visual Basic creates a new string and abandons the previous one.</source>
          <target state="translated">Wenn Sie eine Zeichenfolge in keiner Weise ändern, wird Visual Basic eine neue Zeichenfolge erstellt und verwirft die vorhergehende.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`String`</ph> variable then points to the new string.</source>
          <target state="translated">Die <ph id="ph1">`String`</ph> -Variable zeigt dann auf die neue Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can manipulate the contents of a <ph id="ph1">`String`</ph> variable by using a variety of string functions.</source>
          <target state="translated">Sie können den Inhalt der Bearbeiten einer <ph id="ph1">`String`</ph> Variable mithilfe einer Vielzahl von Zeichenfolgenfunktionen.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following example illustrates the &lt;xref:Microsoft.VisualBasic.Strings.Left%2A&gt; function</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die &lt;xref:Microsoft.VisualBasic.Strings.Left%2A&gt;Funktion&lt;/xref:Microsoft.VisualBasic.Strings.Left%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A string created by another component might be padded with leading or trailing spaces.</source>
          <target state="translated">Eine Zeichenfolge, die von einer anderen Komponente erstellt möglicherweise mit führenden oder nachstehenden Leerzeichen aufgefüllt werden.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If you receive such a string, you can use the &lt;xref:Microsoft.VisualBasic.Strings.Trim%2A&gt;, &lt;xref:Microsoft.VisualBasic.Strings.LTrim%2A&gt;, and &lt;xref:Microsoft.VisualBasic.Strings.RTrim%2A&gt; functions to remove these spaces.</source>
          <target state="translated">Wenn Sie eine solche Zeichenfolge empfangen, können Sie die &lt;xref:Microsoft.VisualBasic.Strings.Trim%2A&gt;, &lt;xref:Microsoft.VisualBasic.Strings.LTrim%2A&gt;, und &lt;xref:Microsoft.VisualBasic.Strings.RTrim%2A&gt;Funktionen entfernen.&lt;/xref:Microsoft.VisualBasic.Strings.RTrim%2A&gt; &lt;/xref:Microsoft.VisualBasic.Strings.LTrim%2A&gt; &lt;/xref:Microsoft.VisualBasic.Strings.Trim%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information about string manipulations, see <bpt id="p1">[</bpt>Strings<ept id="p1">](../../../visual-basic/programming-guide/language-features/strings/index.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Zeichenfolgen finden Sie unter <bpt id="p1">[</bpt>Zeichenfolgen<ept id="p1">](../../../visual-basic/programming-guide/language-features/strings/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Programming Tips</source>
          <target state="translated">Programmiertipps</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Negative Numbers.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Negative Zahlen.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Remember that the characters held by <ph id="ph1">`String`</ph> are unsigned and cannot represent negative values.</source>
          <target state="translated">Denken Sie daran, dass die Zeichen durch gehalten <ph id="ph1">`String`</ph> Vorzeichen aufweisen und keine negativen Werte darstellen.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In any case, you should not use <ph id="ph1">`String`</ph> to hold numeric values.</source>
          <target state="translated">In jedem Fall sollten Sie nicht verwenden <ph id="ph1">`String`</ph> für numerische Werte.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Interop Considerations.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Interop-Überlegungen.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you are interfacing with components not written for the .NET Framework, for example Automation or COM objects, remember that string characters have a different data width (8 bits) in other environments.</source>
          <target state="translated">Wenn Sie mit nicht geschriebenen für .NET Framework-Komponenten anbinden, z. B. Automatisierungs- oder COM-Objekte, müssen Sie Zeichen der Zeichenfolge eine andere Datenbreite (8 Bit) in anderen Umgebungen.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you are passing a string argument of 8-bit characters to such a component, declare it as <ph id="ph1">`Byte()`</ph>, an array of <ph id="ph2">`Byte`</ph> elements, instead of <ph id="ph3">`String`</ph> in your new Visual Basic code.</source>
          <target state="translated">Wenn Sie ein Zeichenfolgenargument mit 8-Bit-Zeichen an eine solche Komponente übergeben, deklarieren Sie es als <ph id="ph1">`Byte()`</ph>, ein Array von <ph id="ph2">`Byte`</ph> Elemente anstelle von <ph id="ph3">`String`</ph> im neuen Visual Basic-Code.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Type Characters.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Typzeichen.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Appending the identifier type character <ph id="ph1">`$`</ph> to any identifier forces it to the <ph id="ph2">`String`</ph> data type.</source>
          <target state="translated">Durch Anhängen des Typkennzeichens <ph id="ph1">`$`</ph> an einen beliebigen Bezeichner wird die <ph id="ph2">`String`</ph> -Datentyp.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`String`</ph> has no literal type character.</source>
          <target state="translated"><ph id="ph1">`String`</ph>verfügt über kein Literalzeichen.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>However, the compiler treats literals enclosed in quotation marks (<ph id="ph1">`" "`</ph>) as <ph id="ph2">`String`</ph>.</source>
          <target state="translated">Der Compiler behandelt jedoch Literale in Anführungszeichen eingeschlossen (<ph id="ph1">`" "`</ph>) als <ph id="ph2">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Framework Type.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Framework-Typ.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The corresponding type in the .NET Framework is the &lt;xref:System.String?displayProperty=fullName&gt; class.</source>
          <target state="translated">Der entsprechende Typ in .NET Framework ist die &lt;xref:System.String?displayProperty=fullName&gt;Klasse.&lt;/xref:System.String?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Siehe auch</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.String?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.String?displayProperty=fullName&gt;&lt;/xref:System.String?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Data Types<ept id="p1">](../../../visual-basic/language-reference/data-types/data-type-summary.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Datentypen<ept id="p1">](../../../visual-basic/language-reference/data-types/data-type-summary.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Char Data Type<ept id="p1">](../../../visual-basic/language-reference/data-types/char-data-type.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Char-Datentyp<ept id="p1">](../../../visual-basic/language-reference/data-types/char-data-type.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Type Conversion Functions<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Typkonvertierungsfunktionen<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Conversion Summary<ept id="p1">](../../../visual-basic/language-reference/keywords/conversion-summary.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Konvertierung: Zusammenfassung<ept id="p1">](../../../visual-basic/language-reference/keywords/conversion-summary.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Call a Windows Function that Takes Unsigned Types<ept id="p1">](../../../visual-basic/programming-guide/com-interop/how-to-call-a-windows-function-that-takes-unsigned-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Gewusst wie: Aufrufen eine Windows-Funktion, die vorzeichenlose Typen akzeptiert<ept id="p1">](../../../visual-basic/programming-guide/com-interop/how-to-call-a-windows-function-that-takes-unsigned-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Efficient Use of Data Types<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Effiziente Verwendung von Datentypen<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>