<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5445d6da982e4eea5b1047505e4bee3380ed472</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\procedures\troubleshooting-procedures.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ea4a239464e0128462e89956c162a09e6bf262d4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ee14f34c5f46c120e79c05d5ecc71b5f9b3acfb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Troubleshooting Procedures (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Problembehandlung bei Prozeduren (Visual Basic) | Microsoft-Dokumentation</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Troubleshooting Procedures (Visual Basic)</source>
          <target state="translated">Problembehandlung bei Prozeduren (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This page lists some common problems that can occur when working with procedures.</source>
          <target state="translated">Diese Seite listet einige der häufigsten Probleme, die beim Arbeiten mit Prozeduren auftreten können.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Returning an Array Type from a Function Procedure</source>
          <target state="translated">Zurückgeben eines Arraytyps aus einer Function-Prozedur</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If a <ph id="ph1">`Function`</ph> procedure returns an array data type, you cannot use the <ph id="ph2">`Function`</ph> name to store values in the elements of the array.</source>
          <target state="translated">Wenn ein <ph id="ph1">`Function`</ph> -Prozedur einen Arraydatentyp zurückgibt, können Sie verwenden die <ph id="ph2">`Function`</ph> Namen zum Speichern von Werten in den Elementen des Arrays.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you attempt to do this, the compiler interprets it as a call to the <ph id="ph1">`Function`</ph>.</source>
          <target state="translated">Wenn Sie dies dennoch versuchen, legt der Compiler als Aufruf der <ph id="ph1">`Function`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following example generates compiler errors.</source>
          <target state="translated">Im folgende Beispiel werden Compilerfehler generiert.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`' The following statement generates a`</ph>   <ph id="ph2">`COMPILER ERROR`</ph>  <ph id="ph3">`.`</ph></source>
          <target state="translated"><ph id="ph1">`' The following statement generates a`</ph>   <ph id="ph2">`COMPILER ERROR`</ph>  <ph id="ph3">`.`</ph></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`' The following statement generates a`</ph>   <ph id="ph2">`COMPILER ERROR`</ph>  <ph id="ph3">`.`</ph></source>
          <target state="translated"><ph id="ph1">`' The following statement generates a`</ph>   <ph id="ph2">`COMPILER ERROR`</ph>  <ph id="ph3">`.`</ph></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The statement <ph id="ph1">`allOnes(i) = 1`</ph> generates a compiler error because it appears to call <ph id="ph2">`allOnes`</ph> with an argument of the wrong data type (a singleton <ph id="ph3">`Integer`</ph> instead of an <ph id="ph4">`Integer`</ph> array).</source>
          <target state="translated">Die Anweisung <ph id="ph1">`allOnes(i) = 1`</ph> generiert einen Compilerfehler, da sie aufrufen, <ph id="ph2">`allOnes`</ph> mit einem Argument des falschen Datentyps (Singleton <ph id="ph3">`Integer`</ph> anstelle von einer <ph id="ph4">`Integer`</ph> Array).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The statement <ph id="ph1">`Return allOnes()`</ph> generates a compiler error because it appears to call <ph id="ph2">`allOnes`</ph> with no argument.</source>
          <target state="translated">Die Anweisung <ph id="ph1">`Return allOnes()`</ph> generiert einen Compilerfehler, da sie aufrufen, <ph id="ph2">`allOnes`</ph> ohne Argument.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Correct Approach:<ept id="p1">**</ept> To be able to modify the elements of an array that is to be returned, define an internal array as a local variable.</source>
          <target state="translated"><bpt id="p1">**</bpt>Richtige Ansatz:<ept id="p1">**</ept> um die Elemente eines Arrays zu ändern, die zurückgegeben werden soll, definieren Sie ein internes Array als lokale Variable.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following example compiles without error.</source>
          <target state="translated">Im folgenden Beispiel wird ohne Fehler kompiliert wird.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#66<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#66;<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Argument Not Being Modified by Procedure Call</source>
          <target state="translated">Argument nicht geändert wird vom Prozeduraufruf</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you intend to allow a procedure to change a programming element underlying an argument in the calling code, you must pass it by reference.</source>
          <target state="translated">Wenn Sie beabsichtigen, eine Prozedur ein Programmierelement zugrunde liegende Argument im aufrufenden Code ändern können, müssen Sie es als Verweis übergeben.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>But a procedure can access the elements of a reference type argument even if you pass it by value.</source>
          <target state="translated">Aber eine Prozedur kann auf die Elemente eines Typarguments Verweis zugreifen, selbst wenn er als Wert übergeben.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Underlying Variable<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Zugrunde liegende Variable<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To allow the procedure to replace the value of the underlying variable element itself, the procedure must declare the parameter <bpt id="p1">[</bpt>ByRef<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept>.</source>
          <target state="translated">Um die Prozedur den Wert des zugrunde liegenden Variablenelement ersetzen soll, muss die Prozedur deklarieren Sie den Parameter <bpt id="p1">[</bpt>ByRef<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Also, the calling code must not enclose the argument in parentheses, because that would override the <ph id="ph1">`ByRef`</ph> passing mechanism.</source>
          <target state="translated">Auch der aufrufende Code muss nicht setzen Sie das Argument in Klammern ein, da dies überschreiben würde die <ph id="ph1">`ByRef`</ph> Mechanismus übergeben.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Reference Type Elements<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Verweisen Sie Elemente vom Typ<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you declare a parameter <bpt id="p1">[</bpt>ByVal<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byval.md)</ept>, the procedure cannot modify the underlying variable element itself.</source>
          <target state="translated">Wenn Sie einen Parameter deklarieren <bpt id="p1">[</bpt>ByVal<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byval.md)</ept>, die Prozedur nicht das zugrunde liegende Variablenelement nicht ändern.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>However, if the argument is a reference type, the procedure can modify the members of the object to which it points, even though it cannot replace the variable's value.</source>
          <target state="translated">Jedoch, wenn das Argument ein Verweistyp ist, kann die Prozedur ändern die Member des Objekts, die es verweist, obwohl er nicht den Wert der Variablen ersetzen kann.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, if the argument is an array variable, the procedure cannot assign a new array to it, but it can change one or more of its elements.</source>
          <target state="translated">Ist das Argument eine Arrayvariable, z. B. die Prozedur ein neues Array kann nicht zugewiesen werden, damit, jedoch kann es sich mindestens eines seiner Elemente ändern.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The changed elements are reflected in the underlying array variable in the calling code.</source>
          <target state="translated">Die geänderten Elemente werden in der zugrunde liegenden Arrayvariablen im Aufrufcode wiedergegeben.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following example defines two procedures that take an array variable by value and operate on its elements.</source>
          <target state="translated">Das folgende Beispiel definiert zwei Prozeduren, die eine Arrayvariable als Wert übernehmen und ausgeführt werden, auf deren Elemente.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Procedure <ph id="ph1">`increase`</ph> simply adds one to each element.</source>
          <target state="translated">Prozedur <ph id="ph1">`increase`</ph> einfach zu jedem Element hinzufügt.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Procedure <ph id="ph1">`replace`</ph> assigns a new array to the parameter <ph id="ph2">`a()`</ph> and then adds one to each element.</source>
          <target state="translated">Prozedur <ph id="ph1">`replace`</ph> weist ein neues Array an den Parameter <ph id="ph2">`a()`</ph> und fügt dann jedem Element&amp;1; hinzu.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>However, the reassignment does not affect the underlying array variable in the calling code because <ph id="ph1">`a()`</ph> is declared <ph id="ph2">`ByVal`</ph>.</source>
          <target state="translated">Die erneute Zuweisung ist jedoch nicht der zugrunde liegenden Arrayvariablen im Aufrufcode beeinträchtigen, da <ph id="ph1">`a()`</ph> deklariert <ph id="ph2">`ByVal`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#35<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#35;<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#38<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#38;<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example makes calls to <ph id="ph1">`increase`</ph> and <ph id="ph2">`replace`</ph>.</source>
          <target state="translated">Im folgenden Beispiel werden Aufrufe von <ph id="ph1">`increase`</ph> und <ph id="ph2">`replace`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#37<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#37;<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">`MsgBox`</ph> call displays "After increase(n): 11, 21, 31, 41".</source>
          <target state="translated">Die erste <ph id="ph1">`MsgBox`</ph> -Aufruf zeigt "After increase(n):: 11, 21, 31, 41".</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">`n`</ph> is a reference type, <ph id="ph2">`increase`</ph> can change its members, even though it is passed <ph id="ph3">`ByVal`</ph>.</source>
          <target state="translated">Da <ph id="ph1">`n`</ph> ist ein Verweistyp, <ph id="ph2">`increase`</ph> kann seine Member ändern, obwohl es übergeben wird <ph id="ph3">`ByVal`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">`MsgBox`</ph> call displays "After replace(n): 11, 21, 31, 41".</source>
          <target state="translated">Die zweite <ph id="ph1">`MsgBox`</ph> -Aufruf zeigt "After replace(n):: 11, 21, 31, 41".</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">`n`</ph> is passed <ph id="ph2">`ByVal`</ph>, <ph id="ph3">`replace`</ph> cannot modify the variable <ph id="ph4">`n`</ph> by assigning a new array to it.</source>
          <target state="translated">Da <ph id="ph1">`n`</ph> übergeben <ph id="ph2">`ByVal`</ph>, <ph id="ph3">`replace`</ph> die Variable kann nicht geändert werden <ph id="ph4">`n`</ph> durch ein neues Array zuweisen.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`replace`</ph> creates the new array instance <ph id="ph2">`k`</ph> and assigns it to the local variable <ph id="ph3">`a`</ph>, it loses the reference to <ph id="ph4">`n`</ph> passed in by the calling code.</source>
          <target state="translated">Wenn <ph id="ph1">`replace`</ph> neue Arrayinstanz erstellt <ph id="ph2">`k`</ph> und weist sie auf die lokale Variable <ph id="ph3">`a`</ph>, verliert den Verweis auf <ph id="ph4">`n`</ph> vom aufrufenden Code übergeben.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When it increments the members of <ph id="ph1">`a`</ph>, only the local array <ph id="ph2">`k`</ph> is affected.</source>
          <target state="translated">Wenn es erhöht die Mitglieder <ph id="ph1">`a`</ph>, nur auf das lokale Array <ph id="ph2">`k`</ph> betroffen ist.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Correct Approach:<ept id="p1">**</ept> To be able to modify an underlying variable element itself, pass it by reference.</source>
          <target state="translated"><bpt id="p1">**</bpt>Richtige Ansatz:<ept id="p1">**</ept> um ein zugrunde liegendes Variablenelement selbst ändern können, als Verweis übergeben.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The following example shows the change in the declaration of <ph id="ph1">`replace`</ph> that allows it to replace one array with another in the calling code.</source>
          <target state="translated">Das folgende Beispiel zeigt die Änderung in der Deklaration von <ph id="ph1">`replace`</ph> , die ein Array mit einem anderen in der aufrufende Code ersetzen können.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#64<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#64;<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Unable to Define an Overload</source>
          <target state="translated">Definieren eine Überladung kann nicht</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you want to define an overloaded version of a procedure, you must use the same name but a different signature.</source>
          <target state="translated">Wenn Sie eine überladene Version einer Prozedur definieren möchten, müssen Sie den gleichen Namen, jedoch eine andere Signatur verwenden.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If the compiler cannot differentiate your declaration from an overload with the same signature, it generates an error.</source>
          <target state="translated">Wenn der Compiler die Deklaration nicht von einer Überladung mit der gleichen Signatur unterscheiden kann, wird einen Fehler generiert.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>signature<ept id="p1">*</ept> of a procedure is determined by the procedure name and the parameter list.</source>
          <target state="translated">Die <bpt id="p1">*</bpt>Signatur<ept id="p1">*</ept> einer Prozedur wird durch den Prozedurnamen und die Parameterliste bestimmt.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Each overload must have the same name as all the other overloads but must differ from all of them in at least one of the other components of the signature.</source>
          <target state="translated">Jede Überladung muss den gleichen Namen wie die anderen Überladungen, allerdings muss sich von allen in mindestens einer der anderen Komponenten der Signatur unterscheiden.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Procedure Overloading<ept id="p1">](./procedure-overloading.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Prozedurüberladung<ept id="p1">](./procedure-overloading.md)</ept>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The following items, even though they pertain to the parameter list, are not components of a procedure's signature:</source>
          <target state="translated">Die folgenden Elemente sind, obwohl sie die Parameterliste betreffen nicht Komponenten der Signatur einer Prozedur:</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Procedure modifier keywords, such as <ph id="ph1">`Public`</ph>, <ph id="ph2">`Shared`</ph>, and <ph id="ph3">`Static`</ph></source>
          <target state="translated">Schlüsselwörter für Prozedurmodifizierer, z. B. <ph id="ph1">`Public`</ph>, <ph id="ph2">`Shared`</ph>, und<ph id="ph3">`Static`</ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Parameter names</source>
          <target state="translated">Parameternamen</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Parameter modifier keywords, such as <ph id="ph1">`ByRef`</ph> and <ph id="ph2">`Optional`</ph></source>
          <target state="translated">Schlüsselwörter für Parametermodifizierer, z. B. <ph id="ph1">`ByRef`</ph> und<ph id="ph2">`Optional`</ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The data type of the return value (except for a conversion operator)</source>
          <target state="translated">Der Datentyp des Rückgabewerts (außer einem Konvertierungsoperator)</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You cannot overload a procedure by varying only one or more of the preceding items.</source>
          <target state="translated">Eine Prozedur kann nicht durch die Veränderung nur eine oder mehrere der vorhergehenden Elemente überladen werden.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Correct Approach:<ept id="p1">**</ept> To be able to define a procedure overload, you must vary the signature.</source>
          <target state="translated"><bpt id="p1">**</bpt>Richtige Ansatz:<ept id="p1">**</ept> um eine Überladung Prozedur definieren können, müssen Sie die Signatur variieren.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Because you must use the same name, you must vary the number, order, or data types of the parameters.</source>
          <target state="translated">Da Sie den gleichen Namen verwenden müssen, müssen Sie die Anzahl, Reihenfolge oder Datentypen der Parameter variieren.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In a generic procedure, you can vary the number of type parameters.</source>
          <target state="translated">In einer generischen Prozedur können Sie die Anzahl von Typparametern variieren.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In a conversion operator (<bpt id="p1">[</bpt>CType Function<ept id="p1">](../../../../visual-basic/language-reference/functions/ctype-function.md)</ept>), you can vary the return type.</source>
          <target state="translated">In einem Konvertierungsoperator (<bpt id="p1">[</bpt>CType-Funktion<ept id="p1">](../../../../visual-basic/language-reference/functions/ctype-function.md)</ept>), können Sie den Rückgabetyp variieren.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Overload Resolution with Optional and ParamArray Arguments</source>
          <target state="translated">Überladen Sie, Auflösung und optionale und ParamArray-Argumente</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you are overloading a procedure with one or more <bpt id="p1">[</bpt>Optional<ept id="p1">](../../../../visual-basic/language-reference/modifiers/optional.md)</ept> parameters or a <bpt id="p2">[</bpt>ParamArray<ept id="p2">](../../../../visual-basic/language-reference/modifiers/paramarray.md)</ept> parameter, you must avoid duplicating any of the <bpt id="p3">*</bpt>implicit overloads<ept id="p3">*</ept>.</source>
          <target state="translated">Wenn Sie eine Prozedur mit einem oder mehreren überladen werden <bpt id="p1">[</bpt>Optional<ept id="p1">](../../../../visual-basic/language-reference/modifiers/optional.md)</ept> Parameter oder ein <bpt id="p2">[</bpt>ParamArray<ept id="p2">](../../../../visual-basic/language-reference/modifiers/paramarray.md)</ept> -Parameter müssen Sie vermeiden Duplizieren eines der <bpt id="p3">*</bpt>implizite Überladungen<ept id="p3">*</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For information, see <bpt id="p1">[</bpt>Considerations in Overloading Procedures<ept id="p1">](./considerations-in-overloading-procedures.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Considerations in Overloading Procedures<ept id="p1">](./considerations-in-overloading-procedures.md)</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Calling a Wrong Version of an Overloaded Procedure</source>
          <target state="translated">Aufrufen einer falschen Version einer überladenen Prozedur</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If a procedure has several overloaded versions, you should be familiar with all their parameter lists and understand how <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> resolves calls among the overloads.</source>
          <target state="translated">Wenn eine Prozedur mehrere überlastete Versionen aufweist, sollten Sie mit ihre Parameterlisten vertraut sein und verstehen, wie <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> löst Aufrufe zwischen Überladungen.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Otherwise you could call an overload other than the intended one.</source>
          <target state="translated">Andernfalls können Sie eine Überladung als dem beabsichtigten aufrufen.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When you have determined which overload you want to call, be careful to observe the following rules:</source>
          <target state="translated">Wenn Sie die Überladung, die für Sie aufrufen möchten ermittelt haben, achten Sie darauf, dass Sie die folgenden Regeln beachten:</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Supply the correct number of arguments, and in the correct order.</source>
          <target state="translated">Geben Sie die richtige Anzahl von Argumenten und in der richtigen Reihenfolge.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Ideally, your arguments should have the exact same data types as the corresponding parameters.</source>
          <target state="translated">Im Idealfall sollten die Argumente den genau gleichen Datentypen wie die entsprechenden Parameter aufweisen.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In any case, the data type of each argument must widen to that of its corresponding parameter.</source>
          <target state="translated">In jedem Fall muss der Datentyp der einzelnen Argumente, des entsprechenden Parameters erweitert werden.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This is true even with the <bpt id="p1">[</bpt>Option Strict Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept> set to <ph id="ph1">`Off`</ph>.</source>
          <target state="translated">Dies gilt auch für die <bpt id="p1">[</bpt>Option Strict-Anweisung<ept id="p1">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept> festgelegt <ph id="ph1">`Off`</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If an overload requires any narrowing conversion from your argument list, that overload is not eligible to be called.</source>
          <target state="translated">Wenn eine Überladung erfordert eine einschränkende Konvertierung aus der Argumentliste, die überladen ist nicht berechtigt, die aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If you supply arguments that require widening, make their data types as close as possible to the corresponding parameter data types.</source>
          <target state="translated">Wenn Sie Argumente, die Erweiterung benötigen angeben, sollten Sie deren Datentypen sich so nah wie möglich an die entsprechenden Parameterdatentypen.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If two or more overloads accept your argument data types, the compiler resolves your call to the overload that calls for the least amount of widening.</source>
          <target state="translated">Wenn zwei oder mehr Überladungen Argumentdatentypen akzeptieren, löst der Compiler den Aufruf an die Überladung, die für den geringsten erweiternde aufruft.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You can reduce the chance of data type mismatches by using the <bpt id="p1">[</bpt>CType Function<ept id="p1">](../../../../visual-basic/language-reference/functions/ctype-function.md)</ept> conversion keyword when preparing your arguments.</source>
          <target state="translated">Sie können die Wahrscheinlichkeit von Datentypenkonflikten reduzieren, indem Sie mit der <bpt id="p1">[</bpt>CType-Funktion<ept id="p1">](../../../../visual-basic/language-reference/functions/ctype-function.md)</ept> Konvertierungsschlüsselwort bei der Vorbereitung der Argumente.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Overload Resolution Failure</source>
          <target state="translated">Überladen aufgelöst werden konnte</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>When you call an overloaded procedure, the compiler attempts to eliminate all but one of the overloads.</source>
          <target state="translated">Beim Aufrufen einer überladenen Prozedur versucht der Compiler, alle außer einer Überladung zu beseitigen.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If it succeeds, it resolves the call to that overload.</source>
          <target state="translated">Wenn dies gelingt, den Aufruf in diese Überladung aufgelöst.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If it eliminates all the overloads, or if it cannot reduce the eligible overloads to a single candidate, it generates an error.</source>
          <target state="translated">Wenn alle Überladungen beseitigt oder geeignete Überladung, die einem einzelnen Kandidaten reduziert werden kann, wird einen Fehler generiert.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The following example illustrates the overload resolution process.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die überladungsauflösungsprozesses.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#62<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#62;<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#63<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_7.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#63;<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_7.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>In the first call, the compiler eliminates the first overload because the type of the first argument (<ph id="ph1">`Short`</ph>) narrows to the type of the corresponding parameter (<ph id="ph2">`Byte`</ph>).</source>
          <target state="translated">Im ersten Aufruf beseitigt der Compiler die erste Überladung, da der Typ des ersten Arguments (<ph id="ph1">`Short`</ph>) wird in den Typ des entsprechenden Parameters (<ph id="ph2">`Byte`</ph>).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>It then eliminates the third overload because each argument type in the second overload (<ph id="ph1">`Short`</ph> and <ph id="ph2">`Single`</ph>) widens to the corresponding type in the third overload (<ph id="ph3">`Integer`</ph> and <ph id="ph4">`Single`</ph>).</source>
          <target state="translated">Klicken Sie dann die dritte Überladung beseitigt, da jeder Argumenttyp der zweiten Überladung (<ph id="ph1">`Short`</ph> und <ph id="ph2">`Single`</ph>) in den entsprechenden Typ der dritten Überladung erweitert (<ph id="ph3">`Integer`</ph> und <ph id="ph4">`Single`</ph>).</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The second overload requires less widening, so the compiler uses it for the call.</source>
          <target state="translated">Die zweite Überladung eine geringere Erweiterung erfordert, damit der Compiler für den Aufruf verwendet.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>In the second call, the compiler cannot eliminate any of the overloads on the basis of narrowing.</source>
          <target state="translated">Im zweiten Aufruf kann nicht der Compiler keine Überladung durch Einschränken beseitigen.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>It eliminates the third overload for the same reason as in the first call, because it can call the second overload with less widening of the argument types.</source>
          <target state="translated">Die dritte Überladung beseitigt aus demselben Grund wie im ersten Aufruf, da die zweite Überladung mit geringerer Erweiterung der Argumenttypen aufgerufen werden kann.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>However, the compiler cannot resolve between the first and second overloads.</source>
          <target state="translated">Jedoch kann der Compiler zwischen der ersten und zweiten Überladung nicht auflösen.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Each has one defined parameter type that widens to the corresponding type in the other (<ph id="ph1">`Byte`</ph> to <ph id="ph2">`Short`</ph>, but <ph id="ph3">`Single`</ph> to <ph id="ph4">`Double`</ph>).</source>
          <target state="translated">Jede verfügt über einen definierten Parametertyp, der in den entsprechenden Typ in einer anderen erweitert wird (<ph id="ph1">`Byte`</ph> auf <ph id="ph2">`Short`</ph>, aber <ph id="ph3">`Single`</ph> , <ph id="ph4">`Double`</ph>).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The compiler therefore generates an overload resolution error.</source>
          <target state="translated">Aus diesem Grund generiert der Compiler einen Überladungsauflösungsfehler.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Correct Approach:<ept id="p1">**</ept> To be able to call an overloaded procedure without ambiguity, use <bpt id="p2">[</bpt>CType Function<ept id="p2">](../../../../visual-basic/language-reference/functions/ctype-function.md)</ept> to match the argument data types to the parameter types.</source>
          <target state="translated"><bpt id="p1">**</bpt>Richtige Vorgehensweise:<ept id="p1">**</ept> verwenden, um eine überladene Prozedur ohne Zweideutigkeit aufrufen zu können, <bpt id="p2">[</bpt>CType-Funktion<ept id="p2">](../../../../visual-basic/language-reference/functions/ctype-function.md)</ept> die Argumentdatentypen mit den Parametertypen übereinstimmen.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The following example shows a call to <ph id="ph1">`z`</ph> that forces resolution to the second overload.</source>
          <target state="translated">Das folgende Beispiel zeigt einen Aufruf von <ph id="ph1">`z`</ph> , die Auflösung in die zweite Überladung erzwingt.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#65<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_8.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#65;<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_8.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Overload Resolution with Optional and ParamArray Arguments</source>
          <target state="translated">Überladen Sie, Auflösung und optionale und ParamArray-Argumente</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If two overloads of a procedure have identical signatures except that the last parameter is declared <bpt id="p1">[</bpt>Optional<ept id="p1">](../../../../visual-basic/language-reference/modifiers/optional.md)</ept> in one and <bpt id="p2">[</bpt>ParamArray<ept id="p2">](../../../../visual-basic/language-reference/modifiers/paramarray.md)</ept> in the other, the compiler resolves a call to that procedure according to the closest match.</source>
          <target state="translated">Wenn zwei Überladungen einer Prozedur identische Signaturen verfügen, mit der Ausnahme, dass der letzte Parameter deklariert ist <bpt id="p1">[</bpt>Optional<ept id="p1">](../../../../visual-basic/language-reference/modifiers/optional.md)</ept> in einem und <bpt id="p2">[</bpt>ParamArray<ept id="p2">](../../../../visual-basic/language-reference/modifiers/paramarray.md)</ept> in einer anderen, löst der Compiler einen Aufruf für diese Prozedur entsprechend am ehesten entspricht.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Overload Resolution<ept id="p1">](./overload-resolution.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Overload Resolution<ept id="p1">](./overload-resolution.md)</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Siehe auch</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Procedures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Verfahren<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Sub Procedures<ept id="p1">](./sub-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Sub-Prozeduren<ept id="p1">](./sub-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Function Procedures<ept id="p1">](./function-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Function-Prozeduren<ept id="p1">](./function-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Property Procedures<ept id="p1">](./property-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Property-Prozeduren<ept id="p1">](./property-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operator Procedures<ept id="p1">](./operator-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Operatorprozeduren<ept id="p1">](./operator-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Parameters and Arguments<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Prozedurparameter und Argumente<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Overloading<ept id="p1">](./procedure-overloading.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Prozedurüberladung<ept id="p1">](./procedure-overloading.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Considerations in Overloading Procedures<ept id="p1">](./considerations-in-overloading-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Überlegungen zur prozedurüberladung<ept id="p1">](./considerations-in-overloading-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Overload Resolution<ept id="p1">](./overload-resolution.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Überladungsauflösung<ept id="p1">](./overload-resolution.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>