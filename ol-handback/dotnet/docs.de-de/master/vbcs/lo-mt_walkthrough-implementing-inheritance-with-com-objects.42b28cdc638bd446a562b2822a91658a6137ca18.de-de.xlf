<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa7753847619f14600c924cba01e55651c4f17c2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\com-interop\walkthrough-implementing-inheritance-with-com-objects.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b2001e2f4191ce4a2943cdd5852bbf4dc20b44d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f328b32e55b676e2d524ea17aa26ad6542a2c3d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Walkthrough: Implementing Inheritance with COM Objects (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Exemplarische Vorgehensweise: Implementieren der Vererbung mit COM-Objekten (Visual Basic) | Microsoft-Dokumentation</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Implementing Inheritance with COM Objects (Visual Basic)</source>
          <target state="translated">Exemplarische Vorgehensweise: Implementieren der Vererbung mit COM-Objekten (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can derive Visual Basic classes from <ph id="ph1">`Public`</ph> classes in COM objects, even those created in earlier versions of <ph id="ph2">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</source>
          <target state="translated">Sie können von Visual Basic-Klassen ableiten <ph id="ph1">`Public`</ph> Klassen in COM-Objekte, auch solche, die in früheren Versionen erstellten <ph id="ph2">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The properties and methods of classes inherited from COM objects can be overridden or overloaded just as properties and methods of any other base class can be overridden or overloaded.</source>
          <target state="translated">Die Eigenschaften und Methoden von Klassen geerbt von COM-Objekte können überschrieben oder überladen, wie Eigenschaften und Methoden jeder anderen Basisklasse überschrieben oder überladen werden können.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Inheritance from COM objects is useful when you have an existing class library that you do not want to recompile.</source>
          <target state="translated">Vererbung von COM-Objekten ist nützlich, wenn Sie eine vorhandene Klassenbibliothek verfügen, die nicht neu kompiliert werden sollen.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The following procedure shows how to use Visual Basic 6.0 to create a COM object that contains a class, and then use it as a base class.</source>
          <target state="translated">Das folgende Verfahren veranschaulicht, wie Visual Basic 6.0 verwenden, um ein COM-Objekt zu erstellen, die eine Klasse enthält, und dann als Basisklasse verwenden.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To build the COM object that is used in this walkthrough</source>
          <target state="translated">Das COM-Objekt zu erstellen, das in dieser exemplarischen Vorgehensweise verwendet wird</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In Visual Basic 6.0, open a new ActiveX DLL project.</source>
          <target state="translated">Öffnen Sie in Visual Basic 6.0 ein neues ActiveX DLL-Projekt.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A project named <ph id="ph1">`Project1`</ph> is created.</source>
          <target state="translated">Ein Projekt namens <ph id="ph1">`Project1`</ph> wird erstellt.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It has a class named <ph id="ph1">`Class1`</ph>.</source>
          <target state="translated">Eine Klasse mit dem Namen <ph id="ph1">`Class1`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Project Explorer<ept id="p1">**</ept>, right-click <bpt id="p2">**</bpt>Project1<ept id="p2">**</ept>, and then click <bpt id="p3">**</bpt>Project1 Properties<ept id="p3">**</ept>.</source>
          <target state="translated">In der <bpt id="p1">**</bpt>Projekt-Explorer<ept id="p1">**</ept>, mit der rechten Maustaste <bpt id="p2">**</bpt>Project1<ept id="p2">**</ept>, und klicken Sie dann auf <bpt id="p3">**</bpt>Eigenschaften von Project1<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Project Properties<ept id="p1">**</ept> dialog box is displayed.</source>
          <target state="translated">Die <bpt id="p1">**</bpt>Projekteigenschaften<ept id="p1">**</ept> Dialogfeld wird angezeigt.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>General<ept id="p1">**</ept> tab of the <bpt id="p2">**</bpt>Project Properties<ept id="p2">**</ept> dialog box, change the project name by typing <ph id="ph1">`ComObject1`</ph> in the <bpt id="p3">**</bpt>Project Name<ept id="p3">**</ept> field.</source>
          <target state="translated">Auf der <bpt id="p1">**</bpt>allgemeine<ept id="p1">**</ept> auf der Registerkarte der <bpt id="p2">**</bpt>Projekteigenschaften<ept id="p2">**</ept> Dialogfeld ändern den Namen des Projekts durch Eingabe <ph id="ph1">`ComObject1`</ph> in der <bpt id="p3">**</bpt>Projektname<ept id="p3">**</ept> Feld.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Project Explorer<ept id="p1">**</ept>, right-click <ph id="ph1">`Class1`</ph>, and then click <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</source>
          <target state="translated">In der <bpt id="p1">**</bpt>Projekt-Explorer<ept id="p1">**</ept>, mit der rechten Maustaste <ph id="ph1">`Class1`</ph>, und klicken Sie dann auf <bpt id="p2">**</bpt>Eigenschaften<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept> window for the class is displayed.</source>
          <target state="translated">Die <bpt id="p1">**</bpt>Eigenschaften<ept id="p1">**</ept> für die Klasse wird angezeigt.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Change the <ph id="ph1">`Name`</ph> property to <ph id="ph2">`MathFunctions`</ph>.</source>
          <target state="translated">Ändern der <ph id="ph1">`Name`</ph> -Eigenschaft <ph id="ph2">`MathFunctions`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Project Explorer<ept id="p1">**</ept>, right-click <ph id="ph1">`MathFunctions`</ph>, and then click <bpt id="p2">**</bpt>View Code<ept id="p2">**</ept>.</source>
          <target state="translated">In der <bpt id="p1">**</bpt>Projekt-Explorer<ept id="p1">**</ept>, mit der rechten Maustaste <ph id="ph1">`MathFunctions`</ph>, und klicken Sie dann auf <bpt id="p2">**</bpt>Anzeigecode<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept> is displayed.</source>
          <target state="translated">Die <bpt id="p1">**</bpt>Code-Editor<ept id="p1">**</ept> wird angezeigt.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Add a local variable to hold the property value:</source>
          <target state="translated">Fügen Sie eine lokale Variable den Wert der Eigenschaft hinzu:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Add Property <ph id="ph1">`Let`</ph> and Property <ph id="ph2">`Get`</ph> property procedures:</source>
          <target state="translated">Fügen Sie die Eigenschaft <ph id="ph1">`Let`</ph> und <ph id="ph2">`Get`</ph> Eigenschaftenprozeduren:</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Add a function:</source>
          <target state="translated">Fügen Sie eine Funktion hinzu:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Create and register the COM object by clicking <bpt id="p1">**</bpt>Make ComObject1.dll<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>File<ept id="p2">**</ept> menu.</source>
          <target state="translated">Erstellen und registrieren Sie das COM-Objekt, indem Sie auf <bpt id="p1">**</bpt>stellen ComObject1.dll<ept id="p1">**</ept> auf der <bpt id="p2">**</bpt>Datei<ept id="p2">**</ept> Menü.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Although you can also expose a class created with <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> as a COM object, it is not a true COM object and cannot be used in this walkthrough.</source>
          <target state="translated">Obwohl Sie auch eine mit erstellte Klasse verfügbar gemacht werden können <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> als COM-Objekt ist ein echtes COM-Objekt und kann nicht in dieser exemplarischen Vorgehensweise verwendet werden.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For details, see <bpt id="p1">[</bpt>COM Interoperability in .NET Framework Applications<ept id="p1">](../../../visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>COM-Interoperabilität in .NET Framework Applications<ept id="p1">](../../../visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md)</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Interop Assemblies</source>
          <target state="translated">Interop-Assemblys</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the following procedure, you will create an interop assembly, which acts as a bridge between unmanaged code (such as a COM object) and the managed code <ph id="ph1">[!INCLUDE[vsprvs](../../../csharp/includes/vsprvs_md.md)]</ph> uses.</source>
          <target state="translated">In der folgenden Prozedur erstellen Sie eine Interop-Assembly, die fungiert als Brücke zwischen nicht verwaltetem Code (z. B. ein COM-Objekt) und verwaltetem Code <ph id="ph1">[!INCLUDE[vsprvs](../../../csharp/includes/vsprvs_md.md)]</ph> verwendet.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The interop assembly that <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> creates handles many of the details of working with COM objects, such as <bpt id="p1">*</bpt>interop marshaling<ept id="p1">*</ept>, the process of packaging parameters and return values into equivalent data types as they move to and from COM objects.</source>
          <target state="translated">Die Interop-Assembly, die <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> viele Details der Arbeit mit COM-Objekten, z. B. Handles erstellt <bpt id="p1">*</bpt>Interop-Marshalling<ept id="p1">*</ept>, der Prozess Zusammenfassen von Parametern und Rückgabewerten in äquivalente Typen, wie sie die an und von COM-Objekten wechseln.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The reference in the <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> application points to the interop assembly, not the actual COM object.</source>
          <target state="translated">Der Verweis in der <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> verweist auf die Interop-Assembly, nicht auf das eigentliche COM-Objekt.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To use a COM object with Visual Basic 2005 and later versions</source>
          <target state="translated">Ein COM-Objekt mit Visual Basic 2005 und höheren Versionen verwenden</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Open a new <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> Windows Application project.</source>
          <target state="translated">Öffnen Sie eine neue <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> Windows-Anwendungsprojekt.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Project<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Add Reference<ept id="p2">**</ept>.</source>
          <target state="translated">Auf der <bpt id="p1">**</bpt>Projekt<ept id="p1">**</ept> Menü klicken Sie auf <bpt id="p2">**</bpt>Verweis hinzufügen<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Add Reference<ept id="p1">**</ept> dialog box is displayed.</source>
          <target state="translated">Die <bpt id="p1">**</bpt>Verweis hinzufügen<ept id="p1">**</ept> Dialogfeld wird angezeigt.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>COM<ept id="p1">**</ept> tab, double-click <ph id="ph1">`ComObject1`</ph> in the <bpt id="p2">**</bpt>Component Name<ept id="p2">**</ept> list and click <bpt id="p3">**</bpt>OK<ept id="p3">**</ept>.</source>
          <target state="translated">Auf der <bpt id="p1">**</bpt>COM<ept id="p1">**</ept> Registerkarte, doppelklicken Sie auf <ph id="ph1">`ComObject1`</ph> in der <bpt id="p2">**</bpt>Komponentenname<ept id="p2">**</ept> aus, und klicken Sie auf <bpt id="p3">**</bpt>OK<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Project<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Add New Item<ept id="p2">**</ept>.</source>
          <target state="translated">Klicken Sie im Menü <bpt id="p1">**</bpt>Projekt<ept id="p1">**</ept> auf <bpt id="p2">**</bpt>Neues Element hinzufügen<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Add New Item<ept id="p1">**</ept> dialog box is displayed.</source>
          <target state="translated">Die <bpt id="p1">**</bpt>neues Element hinzufügen<ept id="p1">**</ept> Dialogfeld wird angezeigt.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Templates<ept id="p1">**</ept> pane, click <bpt id="p2">**</bpt>Class<ept id="p2">**</ept>.</source>
          <target state="translated">In der <bpt id="p1">**</bpt>Vorlagen<ept id="p1">**</ept> Bereich, klicken Sie auf <bpt id="p2">**</bpt>Klasse<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The default file name, <ph id="ph1">`Class1.vb`</ph>, appears in the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> field.</source>
          <target state="translated">Der Standarddateiname <ph id="ph1">`Class1.vb`</ph>, wird in der <bpt id="p1">**</bpt>Namen<ept id="p1">**</ept> Feld.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Change this field to MathClass.vb and click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>.</source>
          <target state="translated">Ändern Sie dieses Feld in MathClass.vb, und klicken Sie auf <bpt id="p1">**</bpt>hinzufügen<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This creates a class named <ph id="ph1">`MathClass`</ph>, and displays its code.</source>
          <target state="translated">Dadurch wird eine Klasse namens <ph id="ph1">`MathClass`</ph>, und ihr Code angezeigt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Add the following code to the top of <ph id="ph1">`MathClass`</ph> to inherit from the COM class.</source>
          <target state="translated">Fügen Sie den folgenden Code am Anfang der <ph id="ph1">`MathClass`</ph> von COM-Klasse erben.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrInterop#31<ept id="p2">](../../../visual-basic/programming-guide/com-interop/codesnippet/VisualBasic/walkthrough-implementing-inheritance-with-com-objects_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrInterop&amp;#31;<ept id="p2">](../../../visual-basic/programming-guide/com-interop/codesnippet/VisualBasic/walkthrough-implementing-inheritance-with-com-objects_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Overload the public method of the base class by adding the following code to <ph id="ph1">`MathClass`</ph>:</source>
          <target state="translated">Überladen Sie die öffentliche Methode der Basisklasse durch den folgenden Code hinzufügen <ph id="ph1">`MathClass`</ph>:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrInterop#32<ept id="p2">](../../../visual-basic/programming-guide/com-interop/codesnippet/VisualBasic/walkthrough-implementing-inheritance-with-com-objects_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrInterop&amp;#32;<ept id="p2">](../../../visual-basic/programming-guide/com-interop/codesnippet/VisualBasic/walkthrough-implementing-inheritance-with-com-objects_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Extend the inherited class by adding the following code to <ph id="ph1">`MathClass`</ph>:</source>
          <target state="translated">Die geerbte Klasse erweitern, indem Sie den folgenden Code hinzufügen <ph id="ph1">`MathClass`</ph>:</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrInterop#33<ept id="p2">](../../../visual-basic/programming-guide/com-interop/codesnippet/VisualBasic/walkthrough-implementing-inheritance-with-com-objects_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrInterop&amp;33;<ept id="p2">](../../../visual-basic/programming-guide/com-interop/codesnippet/VisualBasic/walkthrough-implementing-inheritance-with-com-objects_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The new class inherits the properties of the base class in the COM object, overloads a method, and defines a new method to extend the class.</source>
          <target state="translated">Die neue Klasse erbt die Eigenschaften der Basisklasse im COM-Objekt, überlädt eine Methode und definiert eine neue Methode, um die Klasse zu erweitern.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>To test the inherited class</source>
          <target state="translated">So testen Sie die geerbte Klasse</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Add a button to your startup form, and then double-click it to view its code.</source>
          <target state="translated">Dem Startformular eine Schaltfläche hinzu, und doppelklicken Sie darauf, um ihren Code anzuzeigen.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In the button's <ph id="ph1">`Click`</ph> event handler procedure, add the following code to create an instance of <ph id="ph2">`MathClass`</ph> and call the overloaded methods:</source>
          <target state="translated">Die Schaltfläche <ph id="ph1">`Click`</ph> Handler Ereignisprozedur, fügen Sie folgenden Code zum Erstellen einer Instanz von <ph id="ph2">`MathClass`</ph> und die überladenen Methoden aufzurufen:</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrInterop#34<ept id="p2">](../../../visual-basic/programming-guide/com-interop/codesnippet/VisualBasic/walkthrough-implementing-inheritance-with-com-objects_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrInterop&amp;#34;<ept id="p2">](../../../visual-basic/programming-guide/com-interop/codesnippet/VisualBasic/walkthrough-implementing-inheritance-with-com-objects_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Run the project by pressing F5.</source>
          <target state="translated">Führen Sie das Projekt, indem Sie F5 drücken.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When you click the button on the form, the <ph id="ph1">`AddNumbers`</ph> method is first called with <ph id="ph2">`Short`</ph> data type numbers, and <ph id="ph3">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> chooses the appropriate method from the base class.</source>
          <target state="translated">Beim Anklicken der Schaltfläche auf dem Formular die <ph id="ph1">`AddNumbers`</ph> -Methode zuerst aufgerufen wird und <ph id="ph2">`Short`</ph> Datentyp Zahlen und <ph id="ph3">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> wählt die entsprechende Methode der Basisklasse.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The second call to <ph id="ph1">`AddNumbers`</ph> is directed to the overload method from <ph id="ph2">`MathClass`</ph>.</source>
          <target state="translated">Der zweite Aufruf von <ph id="ph1">`AddNumbers`</ph> wird angewiesen, die überladene Methode von <ph id="ph2">`MathClass`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The third call calls the <ph id="ph1">`SubtractNumbers`</ph> method, which extends the class.</source>
          <target state="translated">Die dritte aufrufen, ruft die <ph id="ph1">`SubtractNumbers`</ph> -Methode, die die Klasse erweitert.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The property in the base class is set, and the value is displayed.</source>
          <target state="translated">Die Eigenschaft in der Basisklasse wird festgelegt, und der Wert wird angezeigt.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="translated">Nächste Schritte</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You may have noticed that the overloaded <ph id="ph1">`AddNumbers`</ph> function appears to have the same data type as the method inherited from the base class of the COM object.</source>
          <target state="translated">Sie haben möglicherweise bemerkt, die überladenen <ph id="ph1">`AddNumbers`</ph> -Funktion hat den gleichen Datentyp wie die von der Basisklasse des COM-Objekts geerbte Methode.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This is because the arguments and parameters of the base class method are defined as 16-bit integers in Visual Basic 6.0, but they are exposed as 16-bit integers of type <ph id="ph1">`Short`</ph> in later versions of Visual Basic.</source>
          <target state="translated">Dies wird als 16-Bit-Ganzzahlen vom Typ verfügbar gemacht werden, da die Argumente und Parameter der Methode der Basisklasse werden als 16-Bit-Ganzzahlen in Visual Basic 6.0 definiert <ph id="ph1">`Short`</ph> in höheren Versionen von Visual Basic.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The new function accepts 32-bit integers, and overloads the base class function.</source>
          <target state="translated">Die neue Funktion akzeptiert 32-Bit-Ganzzahlen und Funktion der Basisklasse überlädt.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>When working with COM objects, make sure that you verify the size and data types of parameters.</source>
          <target state="translated">Bei der Arbeit mit COM-Objekte stellen Sie sicher, dass Sie die Größe und die Datentypen der Parameter überprüfen.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For example, when you are using a COM object that accepts a Visual Basic 6.0 collection object as an argument, you cannot provide a collection from a later version of Visual Basic.</source>
          <target state="translated">Wenn Sie ein COM-Objekt, das ein Visual Basic 6.0-Auflistungsobjekt als Argument akzeptiert verwenden, können nicht Sie z. B. eine Sammlung aus einer höheren Version von Visual Basic bereitstellen.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Properties and methods inherited from COM classes can be overridden, meaning that you can declare a local property or method that replaces a property or method inherited from a base COM class.</source>
          <target state="translated">Eigenschaften und Methoden, die von COM-Klassen geerbt können überschrieben werden dies bedeutet, dass Sie eine lokale Eigenschaft oder Methode, die eine Eigenschaft ersetzt oder von einer COM-Basisklasse geerbten Methode deklarieren können.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The rules for overriding inherited COM properties are similar to the rules for overriding other properties and methods with the following exceptions:</source>
          <target state="translated">Die Regeln für das Überschreiben von geerbter COM‑Eigenschaften ähneln denen für das Überschreiben anderer Eigenschaften und Methoden mit den folgenden Ausnahmen:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If you override any property or method inherited from a COM class, you must override all the other inherited properties and methods.</source>
          <target state="translated">Wenn Sie eine Eigenschaft oder Methode geerbt von einer COM-Klasse überschreiben, müssen Sie alle anderen geerbten Eigenschaften und Methoden überschreiben.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Properties that use <ph id="ph1">`ByRef`</ph> parameters cannot be overridden.</source>
          <target state="translated">Eigenschaften, mit denen <ph id="ph1">`ByRef`</ph> Parameter können nicht überschrieben werden.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Siehe auch</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>COM Interoperability in .NET Framework Applications<ept id="p1">](../../../visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>COM-Interoperabilität in .NET Framework-Clientanwendungen<ept id="p1">](../../../visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Inherits Statement<ept id="p1">](../../../visual-basic/language-reference/statements/inherits-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Inherits-Anweisung<ept id="p1">](../../../visual-basic/language-reference/statements/inherits-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Short Data Type<ept id="p1">](../../../visual-basic/language-reference/data-types/short-data-type.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Short-Datentyp<ept id="p1">](../../../visual-basic/language-reference/data-types/short-data-type.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>