<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-188fee3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e23514daacb34739b26b7a31afea2ccb30296e79</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\choosing-core-framework-server.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1fa555fd5e444767120028ad72419fa3439a56d3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e6c27ce57971b73633f55f31ff15978a3669700</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Choosing between .NET Core and .NET Framework for server apps</source>
          <target state="translated">Selección entre .NET Core y .NET Framework para aplicaciones de servidor</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>A guide on which flavor of .NET you should consider when building a server app in .NET.</source>
          <target state="translated">Una guía sobre el tipo de .NET que debe tener en cuenta al crear una aplicación de servidor en .NET.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core, .NET Framework</source>
          <target state="translated">.NET, .NET Core, .NET Framework</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Choosing between .NET Core and .NET Framework for server apps</source>
          <target state="translated">Selección entre .NET Core y .NET Framework para aplicaciones de servidor</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>There are two supported choices of runtime for building server-side applications with .NET: .NET Framework and .NET Core.</source>
          <target state="translated">Existen dos opciones admitidas de tiempo de ejecución al crear aplicaciones de servidor con .NET: .NET Framework y .NET Core.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Both share a lot of the same .NET platform components and you can share code across the two.</source>
          <target state="translated">Ambas comparten muchos de los mismos componentes de la plataforma .NET y es posible compartir código entre ellas.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>However, there are fundamental differences between the two and your choice will depend on what you want to accomplish.</source>
          <target state="translated">Sin embargo, presentan diferencias fundamentales y su elección dependerá de lo que desee realizar.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This article provides guidance on when to use each.</source>
          <target state="translated">En este artículo se proporcionan orientaciones sobre cuándo usar cada una.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You should use .NET Core for your server application when:</source>
          <target state="translated">Utilice .NET Core para la aplicación de servidor en los siguientes casos:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You have cross-platform needs.</source>
          <target state="translated">Tenga necesidades multiplataforma.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You are targeting microservices.</source>
          <target state="translated">Tenga como objetivo los microservicios.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You are using Docker containers.</source>
          <target state="translated">Vaya a usar contenedores de Docker.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You need high performance and scalable systems.</source>
          <target state="translated">Necesite sistemas escalables y de alto rendimiento.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You need side by side of .NET versions by application.</source>
          <target state="translated">Necesite versiones de .NET en paralelo por aplicación.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You should use .NET Framework for your server application when:</source>
          <target state="translated">Utilice .NET Framework para su aplicación de servidor en los siguientes casos:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Your application currently uses .NET Framework (recommendation is to extend instead of migrating)</source>
          <target state="translated">La aplicación utiliza actualmente .NET Framework (la recomendación es extender en lugar de migrar).</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You need to use third-party .NET libraries or NuGet packages not available for .NET Core.</source>
          <target state="translated">Necesita usar bibliotecas .NET de terceros o paquetes de NuGet que no están disponibles para .NET Core.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You need to use .NET technologies that are not available for .NET Core.</source>
          <target state="translated">Deba usar tecnologías de .NET que no están disponibles para .NET Core.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You need to use a platform that doesn’t support .NET Core.</source>
          <target state="translated">Deba usar una plataforma que no es compatible con .NET Core.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When to choose .NET Core</source>
          <target state="translated">Cuándo elegir .NET Core</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following is a more detailed explanation of the previously-stated reasons for picking .NET Core.</source>
          <target state="translated">A continuación se explican de manera más detallada las razones indicadas anteriormente para elegir .NET Core.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Cross-platform needs</source>
          <target state="translated">Necesidades multiplataforma</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Clearly, if your goal is to have an application (web/service) that should be able to run across platforms (Windows, Linux and macOS), the best choice is to use .NET Core.</source>
          <target state="translated">Claramente, si su objetivo es tener una aplicación (web o servicio) que pueda funcionar en todas las plataformas (Windows, Linux y macOS), la mejor opción es usar .NET Core.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>.NET Core also supports the previously-mentioned operating systems as your development workstation.</source>
          <target state="translated">.NET Core también admite los sistemas operativos mencionados anteriormente como estación de trabajo de desarrollo.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Visual Studio provides an Integrated Development Environment (IDE) for Windows.</source>
          <target state="translated">Visual Studio proporciona un entorno de desarrollo integrado (IDE) para Windows.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can also use Visual Studio Code on macOS, Linux and Windows which fully support .NET Core, including IntelliSense and debugging.</source>
          <target state="translated">También puede usar Visual Studio Code en macOS, Linux y Windows, ya que es completamente compatible con .NET Core, lo que incluye IntelliSense y la depuración.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can also target .NET Core with most third-party editors like Sublime, Emacs, VI and can get editor IntelliSense using the open source <bpt id="p1">[</bpt>Omnisharp<ept id="p1">](http://www.omnisharp.net/)</ept> project.</source>
          <target state="translated">Asimismo, puede desarrollar para .NET Core con la mayoría de editores de terceros, como Sublime, Emacs, VI y puede obtener el editor IntelliSense mediante el proyecto <bpt id="p1">[</bpt>Omnisharp<ept id="p1">](http://www.omnisharp.net/)</ept> de código abierto.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can also avoid any code editor and directly use the .NET Core command-line tools, available for all supported platforms.</source>
          <target state="translated">También puede evitar el uso de un editor de código y utilizar directamente las herramientas de línea de comandos de .NET Core, disponibles para todas las plataformas compatibles.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Microservices architecture</source>
          <target state="translated">Arquitectura de microservicios</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>.NET Core is the best candidate if you are embracing a microservices oriented system composed of multiple independent, dynamically scalable, stateful or stateless microservices.</source>
          <target state="translated">.NET Core es la mejor candidata si piensa adoptar un sistema orientado a microservicios compuesto por varios microservicios con estado o sin él, escalables dinámicamente e independientes.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>.NET Core is lightweight and its API surface can be minimized to the scope of the microservice.</source>
          <target state="translated">.NET Core es ligera y su superficie de API se puede minimizar al ámbito del microservicio.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A microservices architecture also allows you to mix technologies across a service boundary, enabling a gradual embrace of .NET Core for new microservices that live in conjunction with other microservices or services developed with .NET Framework, Java, Ruby, or other monolithic technologies.</source>
          <target state="translated">Una arquitectura de microservicios también permite mezclar tecnologías a través de un límite de servicio, lo que hace posible la adopción gradual de .NET para nuevos microservicios que residen con otros miroservicios o servicios desarrollados con .NET Framework, Java, Ruby u otras tecnologías monolíticas.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The infrastructure platforms you could use are many.</source>
          <target state="translated">Son muchas las plataformas de infraestructura que podría utilizar.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For large and complex microservice systems, you can use <bpt id="p1">[</bpt>Azure Service Fabric<ept id="p1">](https://azure.microsoft.com/services/service-fabric/)</ept>.</source>
          <target state="translated">Para sistemas de microservicios grandes y complejos, puede utilizar <bpt id="p1">[</bpt>Azure Service Fabric<ept id="p1">](https://azure.microsoft.com/services/service-fabric/)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For stateless microservices you can also use other products like <bpt id="p1">[</bpt>Azure App Service<ept id="p1">](https://azure.microsoft.com/services/app-service/)</ept>.</source>
          <target state="translated">Para microservicios sin estado, también puede utilizar otros productos como <bpt id="p1">[</bpt>Azure App Service<ept id="p1">](https://azure.microsoft.com/services/app-service/)</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Microservices alternatives based on Docker also fit any kind of microservices approach, as explained next.</source>
          <target state="translated">Microservicios alternativos basados en Docker también encajan en cualquier enfoque de microservicios, como se explica a continuación.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>All these platforms support .NET Core and make them ideal for hosting your microservices.</source>
          <target state="translated">Todas estas plataformas admiten .NET Core, lo que hace que resulten perfectas para hospedar sus microservicios.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Containers</source>
          <target state="translated">Contenedores</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Containers are commonly used in conjunction with a microservices architecture, although they can also be used to containerize web apps or services which follow any architectural pattern.</source>
          <target state="translated">Los contenedores se usan normalmente en combinación con una arquitectura de microservicios, aunque también se pueden usar para contener aplicaciones o servicio web que siguen cualquier modelo de arquitectura.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You will be able to use the .NET Framework for Windows containers, but the modularity and lightweight nature of .NET Core makes it perfect for containers.</source>
          <target state="translated">Aunque puede usar .NET Framework con contenedores de Windows, la modularidad y ligereza de .NET Core la convierten en perfecta para los contenedores.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When creating and deploying a container the size of its image is far smaller with .NET Core than .NET Framework.</source>
          <target state="translated">Al crear e implementar un contenedor, el tamaño de su imagen es bastante más pequeño con .NET Core que con .NET Framework.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Because it is cross-platform, you can deploy server apps to Linux Docker containers, for example.</source>
          <target state="translated">Como es multiplataforma, puede implementar aplicaciones de servidor en contenedores de Linux Docker, por ejemplo.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can then host your Docker containers in your own Linux or Windows infrastructure, or use a cloud service such as <bpt id="p1">[</bpt>Azure Container Service<ept id="p1">](https://azure.microsoft.com/services/container-service/)</ept> which can manage, orchestrate and scale your container-based application in the cloud.</source>
          <target state="translated">Luego puede hospedar los contenedores de Docker en su propia infraestructura de Linux o Windows, o usar un servicio en la nube como <bpt id="p1">[</bpt>Azure Container Service<ept id="p1">](https://azure.microsoft.com/services/container-service/)</ept> que puede administrar, organizar y escalar la aplicación basada en contenedor en la nube.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A need for high performance and scalable systems</source>
          <target state="translated">Necesidad de sistemas escalables y de alto rendimiento</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When your system needs the best possible performance and scalability, .NET Core and ASP.NET Core are your best options.</source>
          <target state="translated">Cuando el sistema necesite el mejor rendimiento y escalabilidad posible, .NET Core y ASP.NET Core son sus mejores opciones.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>ASP.NET Core outperforms ASP.NET by a factor of 10, and it leads other popular industry technologies for microservices such as Java servlets, Go and node.js.</source>
          <target state="translated">ASP.NET Core supera a ASP.NET en un factor de 10 y lidera otras tecnologías conocidas del sector para microservicios, como servlets de Java, Go y Node.js.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This is especially relevant for microservices architectures, where you could have hundreds of microservices running.</source>
          <target state="translated">Esto es especialmente importante para las arquitecturas de microservicios, donde podría tener cientos de microservicios en funcionamiento.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>With ASP.NET Core you’d be able to run your system with a much lower number of servers/VMs, ultimately saving costs in infrastructure and hosting.</source>
          <target state="translated">Con ASP.NET Core podrá ejecutar el sistema con un número mucho menor de servidores y máquinas virtuales, con lo que a la larga ahorrará costos en infraestructura y hospedaje.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A need for side by side of .NET versions per application level</source>
          <target state="translated">Necesidad de versiones de .NET en paralelo por nivel de aplicación</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If you want to be able to install applications with dependencies on different versions of frameworks in .NET, you need to use .NET Core, which provides 100% side-by-side.</source>
          <target state="translated">Si quiere poder instalar aplicaciones con dependencias en diferentes versiones de marcos en .NET, deberá usar .NET Core, que proporciona un paralelismo del 100 %.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Easy side-by-side installation of different versions of .NET Core on the same machine allows you to have multiple services on the same server, each of them on its own version of .NET Core, eliminating risks and saving money in application upgrades and IT operations.</source>
          <target state="translated">La instalación sencilla en paralelo de diferentes versiones de .NET Core en la misma máquina le permite tener varios servicios en el mismo servidor, cada uno de ellos con su propia versión de .NET Core. De esta manera, se eliminan riesgos y se ahorra dinero en actualizaciones de aplicaciones y operaciones de TI.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When to choose .NET Framework</source>
          <target state="translated">Cuándo elegir .NET Framework</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>While .NET Core offers significant benefits for new applications and application patterns, the .NET Framework will continue to be the natural choice for many existing scenarios and as such, it won’t be replaced by .NET Core for all server applications.</source>
          <target state="translated">Aunque .NET Core ofrece importantes ventajas para nuevas aplicaciones y patrones de aplicaciones, .NET Framework seguirá siendo la elección natural para muchos escenarios existentes y como tal, no se sustituirá por .NET Core en todas las aplicaciones de servidor.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Current .NET Framework applications</source>
          <target state="translated">Aplicaciones actuales de .NET Framework</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In most cases, you won’t need to migrate your existing applications to .NET Core.</source>
          <target state="translated">En la mayoría de los casos, no necesitará migrar sus aplicaciones existentes a .NET Core.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Instead, a recommended approach is to use .NET Core as you extend an existing application, such as writing a new web service in ASP.NET Core.</source>
          <target state="translated">En su lugar, un enfoque recomendado es usar .NET Core al extender una aplicación existente, como escribir un nuevo servicio web en ASP.NET Core.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A need to use third-party .NET libraries or NuGet packages not available for .NET Core</source>
          <target state="translated">Necesidad de usar bibliotecas .NET de terceros o paquetes de NuGet que no están disponibles para .NET Core</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Libraries are quickly embracing .NET Standard, which enables sharing code across all .NET flavors including .NET Core.</source>
          <target state="translated">Las bibliotecas están adoptando rápidamente .NET Standard, que permite el uso compartido de código entre todos los tipos .NET, entre ellos .NET Core.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>With .NET Standard 2.0 this will be even easier, as the .NET Core API surface will become significantly bigger and .NET Core applications can directly use existing .NET Framework libraries.</source>
          <target state="translated">Con .NET Standard 2.0 esto será incluso más fácil, dado que la superficie de la API de .NET Core se hará bastante más grande y las aplicaciones de .NET Core podrán usar directamente las bibliotecas de .NET Framework existentes.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This transition won’t be immediate, though, so we recommend checking the specific libraries required by your application before making a decision one way or another.</source>
          <target state="translated">Sin embargo, esta transición no será inmediata, por lo que recomendamos comprobar las bibliotecas específicas que requiere su aplicación antes de tomar una decisión en una u otra dirección.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A need to use .NET technologies not available for .NET Core</source>
          <target state="translated">Necesidad de usar tecnologías de .NET que no están disponibles para .NET Core</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Some .NET Framework technologies are not available in .NET Core.</source>
          <target state="translated">Algunas tecnologías de .NET Framework no están disponibles en .NET Core.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Some of them will be available in later .NET Core releases, but others don’t apply to the new application patterns targeted by .NET Core and may never be available.</source>
          <target state="translated">Unas estarán disponibles en versiones posteriores de .NET Core, pero otras no se aplican a los nuevos patrones de aplicaciones a los que se dirige .NET Core y puede que nunca estén disponibles.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The following list shows the most common technologies not found in .NET Core 1.0:</source>
          <target state="translated">En la siguiente lista se muestran las tecnologías más comunes que no se encuentran en .NET Core 1.0:</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>ASP.NET Web Forms applications: ASP.NET Web Forms is only available on the .NET Framework, so you cannot use ASP.NET Core / .NET Core for this scenario.</source>
          <target state="translated">Aplicaciones de ASP.NET Web Forms: ASP.NET Web Forms solo está disponible en .NET Framework, así que no puede usar ASP.NET Core/.NET Core en este escenario.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Currently there are no plans to bring ASP.NET Web Forms to .NET Core.</source>
          <target state="translated">Actualmente no está previsto migrar ASP.NET Web Forms a .NET Core.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>ASP.NET Web Pages applications: ASP.NET Web Pages are not included in ASP.NET Core 1.0, although it is planned to be included in a future release as explained in the <bpt id="p1">[</bpt>.NET Core roadmap<ept id="p1">](https://github.com/aspnet/Home/wiki/Roadmap)</ept>.</source>
          <target state="translated">Aplicaciones de ASP.NET Web Pages: ASP.NET Web Pages no se incluye en ASP.NET Core 1.0, aunque lo estará en una versión futura, como se explica en el <bpt id="p1">[</bpt>mapa de ruta de .NET Core<ept id="p1">](https://github.com/aspnet/Home/wiki/Roadmap)</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>ASP.NET SignalR server/client implementation.</source>
          <target state="translated">Implementación de servidor y cliente de ASP.NET SignalR.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>At .NET Core 1.0 release timeframe (June 2016), ASP.NET SignalR is not available for ASP.NET Core (neither client or server), although it is planned to be included in a future release as explained in the <bpt id="p1">[</bpt>.NET Core roadmap<ept id="p1">](https://github.com/aspnet/Home/wiki/Roadmap)</ept>.</source>
          <target state="translated">En el período de tiempo de la versión .NET Core 1.0 (junio de 2016), ASP.NET SignalR no está disponible para ASP.NET Core (ni cliente ni servidor), aunque está previsto incluirlo en una versión futura, como se explica en el <bpt id="p1">[</bpt>mapa de ruta de .NET Core<ept id="p1">](https://github.com/aspnet/Home/wiki/Roadmap)</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Preview state is available at the <bpt id="p1">[</bpt>Server-side<ept id="p1">](https://github.com/aspnet/SignalR-Server)</ept> and <bpt id="p2">[</bpt>Client Library<ept id="p2">](https://github.com/aspnet/SignalR-Client-Net)</ept> GitHub repositories.</source>
          <target state="translated">El estado de versión preliminar está disponible en los repositorios de GitHub del <bpt id="p1">[</bpt>lado servidor<ept id="p1">](https://github.com/aspnet/SignalR-Server)</ept> y la <bpt id="p2">[</bpt>biblioteca cliente<ept id="p2">](https://github.com/aspnet/SignalR-Client-Net)</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>WCF services implementation.</source>
          <target state="translated">Implementación de servicios WCF.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Even when there’s a <bpt id="p1">[</bpt>WCF-Client library<ept id="p1">](https://github.com/dotnet/wcf)</ept> to consume WCF services from .NET Core, as of June 2016, WCF server implementation is only available on the .NET Framework.</source>
          <target state="translated">Aunque hay una <bpt id="p1">[</bpt>biblioteca cliente de WCF<ept id="p1">](https://github.com/dotnet/wcf)</ept> para consumir servicios WCF desde .NET Core, a partir de junio de 2016, la implementación del servidor WCF solo estará disponible en .NET Framework.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This scenario is not part of the current plan for .NET Core but it’s being considered for the future.</source>
          <target state="translated">Este escenario no es parte del plan actual de .NET Core, pero se está considerando para el futuro.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Workflow related services: Windows Workflow Foundation (WF), Workflow Services (WCF + WF in a single service) and WCF Data Services (formerly known as “ADO.NET Data Services”) are only available on the .NET Framework and there are no plans to bring them to .NET Core.</source>
          <target state="translated">Servicios relacionados con el flujo de trabajo: Windows Workflow Foundation (WF), Workflow Services (WCF + WF en un único servicio) y WCF Data Services (antes conocido como "ADO.NET Data Services") solo están disponibles en .NET Framework y no está previsto migrarlos a .NET Core.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Language support: Visual Basic and F# don’t currently have tooling support .NET Core, but both will be supported in Visual Studio 2017 and later versions of Visual Studio.</source>
          <target state="translated">Compatibilidad con lenguajes: Visual Basic y F# no tienen actualmente herramientas compatibles con .NET Core, pero ambos se admitirán en Visual Studio 2017 y versiones posteriores de Visual Studio.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In addition to the official roadmap, there are other frameworks to be ported to .NET Core - For a full list, take a look at CoreFX issues marked as <bpt id="p1">[</bpt>port-to-core<ept id="p1">](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aport-to-core)</ept>.</source>
          <target state="translated">Además del mapa de ruta oficial, hay otros marcos para migrar a .NET Core. Para ver una lista completa, eche un vistazo a los problemas de CoreFX macados como <bpt id="p1">[</bpt>port-to-core<ept id="p1">](https://github.com/dotnet/corefx/issues?q=is%3Aopen+is%3Aissue+label%3Aport-to-core)</ept> (migrar a core).</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Please note that this list doesn’t represent a commitment from Microsoft to bring those components to .NET Core — they are simply capturing the desire from the community to do so.</source>
          <target state="translated">Tenga en cuenta que esta lista no representa un compromiso de Microsoft para migrar estos componentes a .NET Core, sino que simplemente capturan el deseo de la comunidad de hacerlo.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>That being said, if you care about any of the components listed above, consider participating in the discussions on GitHub so that your voice can be heard.</source>
          <target state="translated">Dicho esto, si le interesa cualquiera de los componentes mencionados anteriormente, puede participar en las discusiones en GitHub para que su voz pueda ser escuchada.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>And if you think something is missing, please <bpt id="p1">[</bpt>file a new issue in the CoreFX repository<ept id="p1">](https://github.com/dotnet/corefx/issues/new)</ept>.</source>
          <target state="translated">Y si piensa que falta algo, <bpt id="p1">[</bpt>registre un nuevo problema en el repositorio de CoreFX<ept id="p1">](https://github.com/dotnet/corefx/issues/new)</ept>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A need to use a platform that doesn’t support .NET Core</source>
          <target state="translated">Necesidad de usar una plataforma que no es compatible con .NET Core</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Some Microsoft or third-party platforms don’t support .NET Core.</source>
          <target state="translated">Algunas plataformas de terceros o de Microsoft no son compatibles con .NET Core.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For example, some Azure services such as Service Fabric Stateful Reliable Services and Service Fabric Reliable Actors require .NET Framework.</source>
          <target state="translated">Por ejemplo, algunos servicios de Azure, como Service Fabric Stateful Reliable Services y Service Fabric Reliable Actors requieren .NET Framework.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Some other services provide an SDK not yet available for consumption on .NET Core.</source>
          <target state="translated">Otros servicios proporcionan un SDK que aún no se encuentra disponible para consumo en .NET Core.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>This is a transitional circumstance, as all of Azure services use .NET Core.</source>
          <target state="translated">Esta es una circunstancia transitoria, dado que todos los servicios de Azure usan .NET Core.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>In the meantime, you can always use the equivalent REST API instead of the client SDK.</source>
          <target state="translated">Mientras tanto, siempre puede utilizar la API de REST equivalente en lugar del SDK de cliente.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Further resources</source>
          <target state="translated">Recursos adicionales</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core Guide<ept id="p1">](../core/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guía de .NET Core<ept id="p1">](../core/index.md)</ept></target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Porting from .NET Framework to .NET Core<ept id="p1">](../core/porting/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Portabilidad de .NET Framework a .NET Core<ept id="p1">](../core/porting/index.md)</ept></target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Framework on Docker Guide<ept id="p1">](../framework/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guía de .NET Framework en Docker<ept id="p1">](../framework/index.md)</ept></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Components Overview<ept id="p1">](components.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Introducción a los componentes de .NET<ept id="p1">](components.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>