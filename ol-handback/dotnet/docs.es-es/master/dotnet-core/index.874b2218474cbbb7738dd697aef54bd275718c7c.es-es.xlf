<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">76ab06edfed3cb124ac79f0d5d0c3480c0a5f170</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\testing\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc0ef59fbd363c7bd45967743cb84ee3a8342875</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b47dc3ff3cdd5518151305efb058c50f3271eb6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Unit Testing in .NET Core</source>
          <target state="translated">Pruebas unitarias en .NET Core</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Unit Testing in .NET Core</source>
          <target state="translated">Pruebas unitarias en .NET Core</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Unit Testing in .NET Core</source>
          <target state="translated">Pruebas unitarias en .NET Core</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By <bpt id="p1">[</bpt>Steve Smith<ept id="p1">](http://ardalis.com)</ept> and <bpt id="p2">[</bpt>Bill Wagner<ept id="p2">](https://github.com/BillWagner)</ept></source>
          <target state="translated">Por <bpt id="p1">[</bpt>Steve Smith<ept id="p1">](http://ardalis.com)</ept> y <bpt id="p2">[</bpt>Bill Wagner<ept id="p2">](https://github.com/BillWagner)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>.NET Core has been designed with testability in mind, so that creating unit tests for your applications is easier than ever before.</source>
          <target state="translated">.NET Core se ha diseñado teniendo en cuenta la capacidad de prueba, así que crear pruebas unitarias para sus aplicaciones es más fácil que nunca.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This article briefly introduces unit tests (and how they differ from other kinds of tests).</source>
          <target state="translated">Este artículo presenta brevemente pruebas unitarias (y cómo se diferencian de otros tipos de pruebas).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Linked resources demonstrates how to add a test project to your solution and then run unit tests using either the command line or Visual Studio.</source>
          <target state="translated">En los recursos vinculados se muestra cómo agregar un proyecto de prueba a la solución y luego ejecutar pruebas unitarias mediante la línea de comandos o Visual Studio.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Getting Started with Testing</source>
          <target state="translated">Introducción a las pruebas</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Having a suite of automated tests is one of the best ways to ensure a software application does what its authors intended it to do.</source>
          <target state="translated">Una de las mejores formas de garantizar que una aplicación de software hace lo que sus autores pretenden que haga es contar con un conjunto de pruebas automatizadas.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>There are many different kinds of tests for software applications, including integration tests, web tests, load tests, and many others.</source>
          <target state="translated">Existen muchos tipos diferentes de pruebas de aplicaciones de software, como pruebas de integración, pruebas web, pruebas de carga y muchas otras.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>At the lowest level are unit tests, which test individual software components or methods.</source>
          <target state="translated">En el nivel más bajo están las pruebas unitarias, que prueban componentes o métodos de software individuales.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Unit tests should only test code within the developer’s control, and should not test infrastructure concerns, like databases, file systems, or network resources.</source>
          <target state="translated">Las pruebas unitarias solo deben probar el código dentro del control del desarrollador y no deben probar los problemas de infraestructura, como bases de datos, sistemas de archivos o recursos de red.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Unit tests may be written using <bpt id="p1">[</bpt>Test Driven Development (TDD)<ept id="p1">](http://deviq.com/test-driven-development/)</ept>, or they can be added to existing code to confirm its correctness.</source>
          <target state="translated">Se pueden escribir pruebas unitarias mediante <bpt id="p1">[</bpt>desarrollo controlado por pruebas (TDD)<ept id="p1">](http://deviq.com/test-driven-development/)</ept>, o se pueden agregar al código existente para confirmar su grado de exactitud.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In either case, they should be small, well-named, and fast, since ideally you will want to be able to run hundreds of them before pushing your changes into the project’s shared code repository.</source>
          <target state="translated">En cualquier caso, deben ser pequeñas, con un nombre adecuado y rápidas, dado que lo ideal será que pueda ejecutar cientos de ellas antes de insertar los cambios en el repositorio de código compartido del proyecto.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Developers often struggle with coming up with good names for their test classes and methods.</source>
          <target state="translated">A menudo, los desarrolladores tienen dificultades para idear buenos nombres para sus clases y métodos de prueba.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>As a starting point, the ASP.NET product team follows <bpt id="p1">[</bpt>these conventions<ept id="p1">](https://github.com/aspnet/Home/wiki/Engineering-guidelines#unit-tests-and-functional-tests)</ept>.</source>
          <target state="translated">Como punto de partida, el equipo de producto de ASP.NET sigue <bpt id="p1">[</bpt>estas convenciones<ept id="p1">](https://github.com/aspnet/Home/wiki/Engineering-guidelines#unit-tests-and-functional-tests)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When writing unit tests, be careful you don’t accidentally introduce dependencies on infrastructure.</source>
          <target state="translated">Al escribir pruebas unitarias, tenga cuidado de no introducir accidentalmente dependencias en la infraestructura.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>These tend to make tests slower and more brittle, and thus should be reserved for integration tests.</source>
          <target state="translated">Tienden a hacerlas más lentas y frágiles, por lo que se deben reservar para pruebas de integración.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can avoid these hidden dependencies in your application code by following the <bpt id="p1">[</bpt>Explicit Dependencies Principle<ept id="p1">](http://deviq.com/explicit-dependencies-principle/)</ept> and using <bpt id="p2">[</bpt>Dependency Injection<ept id="p2">](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection)</ept> to request your dependencies from the framework.</source>
          <target state="translated">Puede evitar estas dependencias ocultas en el código de aplicación siguiendo el <bpt id="p1">[</bpt>principio de dependencias explícitas<ept id="p1">](http://deviq.com/explicit-dependencies-principle/)</ept> y el uso de <bpt id="p2">[</bpt>inyección de dependencias<ept id="p2">](https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection)</ept> para solicitar las dependencias del marco.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can also keep your unit tests in a separate project from your integration tests, and ensure your unit test project doesn’t have references to or dependencies on infrastructure packages.</source>
          <target state="translated">También puede mantener sus pruebas unitarias en un proyecto aparte de sus pruebas de integración y asegurarse de que el proyecto de pruebas unitarias no tenga referencias a paquetes de infraestructura ni dependencias en ellos.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Learn more about unit testing in .NET Core projects:</source>
          <target state="translated">Más información sobre las pruebas unitarias en proyectos de .NET Core:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Try this <bpt id="p1">[</bpt>walkthrough creating unit tests with xunit and the .NET CLI<ept id="p1">](unit-testing-with-dotnet-test.md)</ept>.</source>
          <target state="translated">Pruebe este <bpt id="p1">[</bpt>tutorial al crear pruebas unitarias con xunit y la CLI de .NET<ept id="p1">](unit-testing-with-dotnet-test.md)</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The XUnit team has written a tutorial that shows <bpt id="p1">[</bpt>how to use xunit with .NET Core and Visual Studio<ept id="p1">](http://xunit.github.io/docs/getting-started-dotnet-core.html)</ept>.</source>
          <target state="translated">El equipo de XUnit ha escrito un tutorial que muestra <bpt id="p1">[</bpt>cómo usar xunit con .NET Core y Visual Studio<ept id="p1">](http://xunit.github.io/docs/getting-started-dotnet-core.html)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>