<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82b82dc2387834b9a4d0351c2c12da6e7595eb6c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\deploying\creating-nuget-packages.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c39f0e3f60ca0f18f61039965109663a3454702</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7668e5a2325c2519156e3bb5b2beae7a73a752a9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Creating a NuGet Package with Cross Platform Tools</source>
          <target state="translated">Creación de un paquete de NuGet con herramientas multiplataforma</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Creating a NuGet Package with Cross Platform Tools</source>
          <target state="translated">Creación de un paquete de NuGet con herramientas multiplataforma</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core, NuGet</source>
          <target state="translated">.NET, .NET Core, NuGet</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>How to Create a NuGet Package with Cross Platform Tools</source>
          <target state="translated">Cómo crear un paquete de NuGet con herramientas multiplataforma</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following shows command-line samples using Unix.</source>
          <target state="translated">A continuación se muestran ejemplos de línea de comandos mediante Unix.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet pack`</ph> command as shown here works the same way on Windows.</source>
          <target state="translated">El comando <ph id="ph1">`dotnet pack`</ph>, tal como se muestra aquí, funciona del mismo modo en Windows.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For .NET Core 1.0, libraries are expected to be distributed as NuGet packages.</source>
          <target state="translated">Para .NET Core 1.0, está previsto que las bibliotecas se distribuyan como paquetes de NuGet.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This is in fact how all of the .NET Standard libraries are distributed and consumed.</source>
          <target state="translated">De hecho, es así como se distribuyen y consumen todas las bibliotecas estándar .NET.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This is most easily done with the <ph id="ph1">`dotnet pack`</ph> command.</source>
          <target state="translated">Esto se hace más fácil con el comando <ph id="ph1">`dotnet pack`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Imagine that you just wrote an awesome new library that you would like to distribute over NuGet.</source>
          <target state="translated">Imagine que acaba de escribir una nueva biblioteca sorprendente que quiere distribuir a través de NuGet.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can create a NuGet package with cross platform tools to do exactly that!</source>
          <target state="translated">Puede crear un paquete de NuGet con herramientas multiplataforma para hacer exactamente eso.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following example assumes a library called <bpt id="p1">**</bpt>SuperAwesomeLibrary<ept id="p1">**</ept> which targets <ph id="ph1">`netstandard1.0`</ph>.</source>
          <target state="translated">En el ejemplo siguiente, hay una biblioteca denominada <bpt id="p1">**</bpt>SuperAwesomeLibrary<ept id="p1">**</ept> con destino a <ph id="ph1">`netstandard1.0`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you have transitive dependencies; that is, a project which depends on another project, you'll need to make sure to restore packages for your entire solution with the <ph id="ph1">`dotnet restore`</ph> command before creating a NuGet package.</source>
          <target state="translated">Si tiene dependencias transitivas; es decir, un proyecto que depende de otro, deberá asegurarse de restaurar los paquetes para toda la solución con el comando <ph id="ph1">`dotnet restore`</ph> antes de crear un paquete de NuGet.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Failing to do so will result in the <ph id="ph1">`dotnet pack`</ph> command to not work properly.</source>
          <target state="translated">Si no lo hace, el comando <ph id="ph1">`dotnet pack`</ph> no funcionará correctamente.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>After ensuring packages are restored, you can navigate to the directory where a library lives:</source>
          <target state="translated">Después de asegurarse de que se restauran los paquetes, puede ir hasta el directorio donde reside una biblioteca:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Then it's just a single command from the command line:</source>
          <target state="translated">Luego, es solo cuestión de un comando desde la línea de comandos:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Your <ph id="ph1">`/bin/Debug`</ph> folder will now look like this:</source>
          <target state="translated">Su carpeta <ph id="ph1">`/bin/Debug`</ph> tendrá un aspecto similar al siguiente:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Note that this will produce a package which is capable of being debugged.</source>
          <target state="translated">Tenga en cuenta que esto producirá un paquete que se puede depurar.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you want to build a NuGet package with release binaries, all you need to do is add the <ph id="ph1">`-c`</ph><ph id="ph2">/</ph><ph id="ph3">`--configuration`</ph> switch and use <ph id="ph4">`release`</ph> as the argument.</source>
          <target state="translated">Si quiere compilar un paquete de NuGet con archivos binarios de versión comercial, todo lo que tiene que hacer es agregar el modificador <ph id="ph1">`-c`</ph><ph id="ph2">/</ph><ph id="ph3">`--configuration`</ph> y usar <ph id="ph4">`release`</ph> como argumento.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Your <ph id="ph1">`/bin`</ph> folder will now have a <ph id="ph2">`release`</ph> folder containing your NuGet package with release binaries:</source>
          <target state="translated">Su <ph id="ph1">`/bin`</ph> carpeta tendrá ahora una <ph id="ph2">`release`</ph> carpeta que contiene el paquete de NuGet con archivos binarios de versión:</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>And now you have the necessary files to publish a NuGet package!</source>
          <target state="translated">Y ahora tiene los archivos necesarios para publicar un paquete de NuGet.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Don't confuse <ph id="ph1">`dotnet pack`</ph> with <ph id="ph2">`dotnet publish`</ph></source>
          <target state="translated"><ph id="ph1">`dotnet pack`</ph>No confunda <ph id="ph2">`dotnet publish`</ph> con</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It is important to note that at no point is the <ph id="ph1">`dotnet publish`</ph> command involved.</source>
          <target state="translated">Es importante tener en cuenta que en ningún momento participa el comando <ph id="ph1">`dotnet publish`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet publish`</ph> command is for deploying applications with all of their dependencies in the same bundle -  not for generating a NuGet package to be distributed and consumed via NuGet.</source>
          <target state="translated">El comando <ph id="ph1">`dotnet publish`</ph> es para la implementación de aplicaciones con todas sus dependencias en el mismo paquete, no para generar un paquete de NuGet para distribuir y consumir a través de NuGet.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>