<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6cadcd91810f08900b58e402240e8a469fad2018</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\collections\commonly-used-collection-types.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9cb8841fb13291c43ad0af82aecea0707a971cf4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bcd7b61132154f3126438144f9a0aff676c31881</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Commonly Used Collection Types</source>
          <target state="translated">Tipos de colección utilizados normalmente</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Commonly Used Collection Types</source>
          <target state="translated">Tipos de colección utilizados normalmente</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Commonly Used Collection Types</source>
          <target state="translated">Tipos de colección utilizados normalmente</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Collection types are the common variations of data collections, such as hash tables, queues, stacks, bags, dictionaries, and lists.</source>
          <target state="translated">Los tipos de colecciones son las variaciones comunes de las colecciones de datos, como tablas hash, colas, pilas, bolsas, diccionarios y listas.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Collections are based on the <bpt id="p1">[</bpt><ph id="ph1">`ICollection`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ICollection)</ept> interface, the <bpt id="p2">[</bpt><ph id="ph2">`IList`</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IList)</ept> interface, the <bpt id="p3">[</bpt><ph id="ph3">`IDictionary`</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept> interface, or their generic counterparts.</source>
          <target state="translated">Las colecciones se basan en las interfaces <bpt id="p1">[</bpt><ph id="ph1">`ICollection`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ICollection)</ept>, <bpt id="p2">[</bpt><ph id="ph2">`IList`</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IList)</ept>, <bpt id="p3">[</bpt><ph id="ph3">`IDictionary`</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept> o en sus equivalentes genéricos.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`IList`</ph> interface and the <ph id="ph2">`IDictionary`</ph> interface are both derived from the <ph id="ph3">`ICollection`</ph> interface; therefore, all collections are based on the <ph id="ph4">`ICollection`</ph> interface either directly or indirectly.</source>
          <target state="translated">La interfaz <ph id="ph1">`IList`</ph> y la interfaz <ph id="ph2">`IDictionary`</ph> se derivan ambas de la interfaz <ph id="ph3">`ICollection`</ph>; por lo tanto, todas las colecciones se basan en la interfaz <ph id="ph4">`ICollection`</ph> directa o indirectamente.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In collections based on the <ph id="ph1">`IList`</ph> interface (such as <bpt id="p1">[</bpt><ph id="ph2">`Array`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept>, <bpt id="p2">[</bpt><ph id="ph3">`ArrayList`</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ArrayList)</ept>, or <bpt id="p3">[</bpt><ph id="ph4">`List&lt;T&gt;)`</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> or directly on the <ph id="ph5">`ICollection`</ph> interface (such as <bpt id="p4">[</bpt><ph id="ph6">`Queue`</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Queue)</ept>, <bpt id="p5">[</bpt><ph id="ph7">`ConcurrentQueue&lt;T&gt;`</ph><ept id="p5">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentQueue-1)</ept>, <bpt id="p6">[</bpt><ph id="ph8">`Stack`</ph><ept id="p6">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Stack)</ept>, <bpt id="p7">[</bpt><ph id="ph9">`ConcurrentStack&lt;T&gt;`</ph><ept id="p7">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentStack-1)</ept> or <bpt id="p8">[</bpt><ph id="ph10">`LinkedList&lt;T&gt;`</ph><ept id="p8">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.LinkedList-1)</ept>), every element contains only a value.</source>
          <target state="translated">En colecciones basadas en la interfaz <ph id="ph1">`IList`</ph> (como <bpt id="p1">[</bpt><ph id="ph2">`Array`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept>, <bpt id="p2">[</bpt><ph id="ph3">`ArrayList`</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ArrayList)</ept> o <bpt id="p3">[</bpt><ph id="ph4">`List&lt;T&gt;)`</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept>) o directamente en la interfaz <ph id="ph5">`ICollection`</ph> (como <bpt id="p4">[</bpt><ph id="ph6">`Queue`</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Queue)</ept>, <bpt id="p5">[</bpt><ph id="ph7">`ConcurrentQueue&lt;T&gt;`</ph><ept id="p5">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentQueue-1)</ept>, <bpt id="p6">[</bpt><ph id="ph8">`Stack`</ph><ept id="p6">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Stack)</ept>, <bpt id="p7">[</bpt><ph id="ph9">`ConcurrentStack&lt;T&gt;`</ph><ept id="p7">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentStack-1)</ept> o <bpt id="p8">[</bpt><ph id="ph10">`LinkedList&lt;T&gt;`</ph><ept id="p8">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.LinkedList-1)</ept>), cada elemento contiene un solo valor.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In collections based on the <ph id="ph1">`IDictionary`</ph> interface (such as the <bpt id="p1">[</bpt><ph id="ph2">`Hashtable`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept> and <bpt id="p2">[</bpt><ph id="ph3">`SortedList`</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.SortedList)</ept> classes, the <bpt id="p3">[</bpt><ph id="ph4">`Dictionary&lt;TKey, TValue&gt;`</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept> and <bpt id="p4">[</bpt><ph id="ph5">`SortedList&lt;TKey, TValue&gt;`</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept> generic classes), or the <bpt id="p5">[</bpt><ph id="ph6">`ConcurrentDictionary&lt;TKey, TValue&gt;`</ph><ept id="p5">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept> classes, every element contains both a key and a value.</source>
          <target state="translated">En colecciones basadas en la interfaz <ph id="ph1">`IDictionary`</ph> (como las clases <bpt id="p1">[</bpt><ph id="ph2">`Hashtable`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept> y <bpt id="p2">[</bpt><ph id="ph3">`SortedList`</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.SortedList)</ept>, y las clases genéricas <bpt id="p3">[</bpt><ph id="ph4">`Dictionary&lt;TKey, TValue&gt;`</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept> y <bpt id="p4">[</bpt><ph id="ph5">`SortedList&lt;TKey, TValue&gt;`</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept>), o en las clases <bpt id="p5">[</bpt><ph id="ph6">`ConcurrentDictionary&lt;TKey, TValue&gt;`</ph><ept id="p5">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept>, cada elemento contiene una clave y un valor.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">`KeyedCollection&lt;TKey, TItem&gt;`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.KeyedCollection-2)</ept> class is unique because it is a list of values with keys embedded within the values and, therefore, it behaves like a list and like a dictionary.</source>
          <target state="translated">La clase <bpt id="p1">[</bpt><ph id="ph1">`KeyedCollection&lt;TKey, TItem&gt;`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.KeyedCollection-2)</ept> es única porque es una lista de valores con claves insertadas en los valores y, por tanto, se comporta como una lista y como un diccionario.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Generic collections are the best solution to strong typing.</source>
          <target state="translated">Las colecciones genéricas son la mejor solución para elementos fuertemente tipados.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, if your language does not support generics, the <bpt id="p1">[</bpt><ph id="ph1">`System.Collections`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept> namespace includes base collections, such as <bpt id="p2">[</bpt><ph id="ph2">`CollectionBase`</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.CollectionBase)</ept>, <bpt id="p3">[</bpt><ph id="ph3">`ReadOnlyCollectionBase`</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ReadOnlyCollectionBase)</ept>, and <bpt id="p4">[</bpt><ph id="ph4">`DictionaryBase`</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.DictionaryBase)</ept>, which are abstract base classes that can be extended to create collection classes that are strongly typed.</source>
          <target state="translated">En cambio, si su lenguaje no admite genéricos, el espacio de nombres <bpt id="p1">[</bpt><ph id="ph1">`System.Collections`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept> incluye colecciones base, como <bpt id="p2">[</bpt><ph id="ph2">`CollectionBase`</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.CollectionBase)</ept>, <bpt id="p3">[</bpt><ph id="ph3">`ReadOnlyCollectionBase`</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ReadOnlyCollectionBase)</ept> y <bpt id="p4">[</bpt><ph id="ph4">`DictionaryBase`</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.DictionaryBase)</ept>, que son clases base abstractas que se pueden extender para crear clases de colección fuertemente tipadas.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When efficient multi-threaded collection access is required, use the generic collections in the <bpt id="p1">[</bpt><ph id="ph1">`System.Collections.Concurrent`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept> namespace.</source>
          <target state="translated">Cuando se requiera un acceso eficaz a una colección multiproceso, use las colecciones genéricas del espacio de nombres <bpt id="p1">[</bpt><ph id="ph1">`System.Collections.Concurrent`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Collections can vary, depending on how the elements are stored, how they are sorted, how searches are performed, and how comparisons are made.</source>
          <target state="translated">Las colecciones pueden variar en función de cómo se almacenan los elementos, cómo se ordenan, cómo se realizan las búsquedas y cómo se realizan las comparaciones.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">`Queue`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Queue)</ept> class and the <bpt id="p2">[</bpt><ph id="ph2">`Queue&lt;T&gt;`</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Queue-1)</ept> generic class provide first-in-first-out lists, while the <bpt id="p3">[</bpt><ph id="ph3">`Stack`</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Stack)</ept> class and the <bpt id="p4">[</bpt><ph id="ph4">`Stack&lt;T&gt;`</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Stack-1)</ept> generic class provide last-in-first-out lists.</source>
          <target state="translated">La clase <bpt id="p1">[</bpt><ph id="ph1">`Queue`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Queue)</ept> y la clase genérica <bpt id="p2">[</bpt><ph id="ph2">`Queue&lt;T&gt;`</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Queue-1)</ept> proporcionan listas de tipo “el primero en entrar es el primero en salir”, mientras que la clase <bpt id="p3">[</bpt><ph id="ph3">`Stack`</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Stack)</ept> y la clase genérica <bpt id="p4">[</bpt><ph id="ph4">`Stack&lt;T&gt;`</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Stack-1)</ept> proporcionan listas de tipo “el último en entrar es el primero en salir”.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt><ph id="ph1">`SortedList`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.SortedList)</ept> class and the <bpt id="p2">[</bpt><ph id="ph2">`SortedList&lt;TKey, TValue&gt;`</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept> generic class provide sorted versions of the <bpt id="p3">[</bpt><ph id="ph3">`Hashtable`</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept> class and the <bpt id="p4">[</bpt><ph id="ph4">`Dictionary&lt;TKey, TValue&gt;`</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept> generic class.</source>
          <target state="translated">La clase <bpt id="p1">[</bpt><ph id="ph1">`SortedList`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.SortedList)</ept> y la clase genérica <bpt id="p2">[</bpt><ph id="ph2">`SortedList&lt;TKey, TValue&gt;`</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept> proporcionan versiones ordenadas de la clase <bpt id="p3">[</bpt><ph id="ph3">`Hashtable`</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept> y de la clase genérica <bpt id="p4">[</bpt><ph id="ph4">`Dictionary&lt;TKey, TValue&gt;`</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The elements of a <ph id="ph1">`Hashtable`</ph> or a <ph id="ph2">`Dictionary&lt;TKey, TValue&gt;`</ph> are accessible only by the key of the element, but the elements of a <ph id="ph3">`SortedList`</ph> or a <bpt id="p1">[</bpt><ph id="ph4">`KeyedCollection&lt;TKey, TItem&gt;`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.KeyedCollection-2)</ept> are accessible either by the key or by the index of the element.</source>
          <target state="translated">El acceso a los elementos de <ph id="ph1">`Hashtable`</ph> o de <ph id="ph2">`Dictionary&lt;TKey, TValue&gt;`</ph> solo es posible mediante la clave del elemento, pero el acceso a los elementos de <ph id="ph3">`SortedList`</ph> o de <bpt id="p1">[</bpt><ph id="ph4">`KeyedCollection&lt;TKey, TItem&gt;`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.KeyedCollection-2)</ept> es posible mediante la clave o mediante el índice del elemento.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The indexes in all collections are zero-based, except <bpt id="p1">[</bpt><ph id="ph1">`Array`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept>, which allows arrays that are not zero-based.</source>
          <target state="translated">Los índices de todas las colecciones son de base cero, excepto <bpt id="p1">[</bpt><ph id="ph1">`Array`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Array)</ept>, que permite matrices que no son de base cero.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The LINQ to Objects feature allows you to use LINQ queries to access in-memory objects as long as the object type implements <bpt id="p1">[</bpt><ph id="ph1">`IEnumerable`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IEnumerable)</ept> or <bpt id="p2">[</bpt><ph id="ph2">`IEnumerable&lt;T&gt;`</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IEnumerable-1)</ept>.</source>
          <target state="translated">La característica LINQ to Objects permite usar consultas LINQ para obtener acceso a los objetos en memoria mientras el tipo de objeto implemente la interfaz <bpt id="p1">[</bpt><ph id="ph1">`IEnumerable`</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IEnumerable)</ept> o <bpt id="p2">[</bpt><ph id="ph2">`IEnumerable&lt;T&gt;`</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IEnumerable-1)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>LINQ queries provide a common pattern for accessing data; are typically more concise and readable than standard foreach loops; and provide filtering, ordering and grouping capabilities.</source>
          <target state="translated">Las consultas LINQ proporcionan un patrón común para el acceso a datos; suelen ser más concisas y legibles que los bucles foreach estándar; y proporcionan capacidades de filtrado, ordenación y agrupación.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>LINQ queries can also improve performance.</source>
          <target state="translated">Las consultas LINQ también pueden mejorar el rendimiento.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Related Topics</source>
          <target state="translated">Temas relacionados</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">Título</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Discusses the various collection types available in the .NET Framework, including stacks, queues, lists, arrays, and dictionaries.</source>
          <target state="translated">Describe los diversos tipos de colecciones disponibles en .NET Framework, incluidas las pilas, colas, listas, matrices y diccionarios.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Describes the features of generic and non-generic hash-based dictionary types.</source>
          <target state="translated">Describe las características de los tipos de diccionarios basados en hash genéricos y no genéricos.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Describes sorted collections performance and characteristics.</source>
          <target state="translated">Describe las características y el rendimiento de colecciones ordenadas.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Referencia</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>