<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aa20cf367fba157f88afd861a4799540dcdecde1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\procedures\considerations-in-overloading-procedures.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f52ec90a3aebcd6aa14f57bd27ef742c13f07a2a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">688fea8d4502cbf2b4c108da3eb234a948a3f500</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Considerations in Overloading Procedures (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Consideraciones sobre la sobrecarga de procedimientos (Visual Basic) | Documentos de Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Considerations in Overloading Procedures (Visual Basic)</source>
          <target state="translated">Consideraciones sobre la sobrecarga de procedimientos (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When you overload a procedure, you must use a different <bpt id="p1">*</bpt>signature<ept id="p1">*</ept> for each overloaded version.</source>
          <target state="translated">Cuando se sobrecarga un procedimiento, debe usar otro <bpt id="p1">*</bpt>firma<ept id="p1">*</ept> en cada versión sobrecargada.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This usually means each version must specify a different parameter list.</source>
          <target state="translated">Normalmente esto significa que cada versión debe especificar una lista de parámetros distinta.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information, see "Different Signature" in <bpt id="p1">[</bpt>Procedure Overloading<ept id="p1">](./procedure-overloading.md)</ept>.</source>
          <target state="translated">Para obtener más información, vea "Firmas diferentes" en <bpt id="p1">[</bpt>sobrecarga de procedimientos<ept id="p1">](./procedure-overloading.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can overload a <ph id="ph1">`Function`</ph> procedure with a <ph id="ph2">`Sub`</ph> procedure, and vice versa, provided they have different signatures.</source>
          <target state="translated">Puede sobrecargar una <ph id="ph1">`Function`</ph> procedimiento con un <ph id="ph2">`Sub`</ph> procedimiento y viceversa, siempre tienen firmas diferentes.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Two overloads cannot differ only in that one has a return value and the other does not.</source>
          <target state="translated">Dos sobrecargas no pueden diferir únicamente en que uno tiene un valor devuelto y el otro no.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can overload a property the same way you overload a procedure, and with the same restrictions.</source>
          <target state="translated">Se puede sobrecargar una propiedad del mismo modo que se sobrecarga un procedimiento y con las mismas restricciones.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>However, you cannot overload a procedure with a property, or vice versa.</source>
          <target state="translated">Sin embargo, no se pueden sobrecargar un procedimiento con una propiedad, o viceversa.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Alternatives to Overloaded Versions</source>
          <target state="translated">Alternativas a las versiones sobrecargadas</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You sometimes have alternatives to overloaded versions, particularly when the presence of arguments is optional or their number is variable.</source>
          <target state="translated">A veces, dispone de alternativas a las versiones sobrecargadas, especialmente cuando la presencia de argumentos es opcional o su número es variable.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Keep in mind that optional arguments are not necessarily supported by all languages, and parameter arrays are limited to <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</source>
          <target state="translated">Tenga en cuenta que los argumentos opcionales no se admiten necesariamente en todos los idiomas y matrices de parámetros están limitadas a <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you are writing a procedure that is likely to be called from code written in any of several different languages, overloaded versions offer the greatest flexibility.</source>
          <target state="translated">Si está escribiendo un procedimiento que es probable que se llame desde código escrito en cualquiera de varios idiomas, las versiones sobrecargadas ofrecen la máxima flexibilidad.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Overloads and Optional Arguments</source>
          <target state="translated">Sobrecargas y argumentos opcionales</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When the calling code can optionally supply or omit one or more arguments, you can define multiple overloaded versions or use optional parameters.</source>
          <target state="translated">Cuando el código de llamada, opcionalmente, puede proporcionar u omitir uno o más argumentos, puede definir varias versiones sobrecargadas o utilizar parámetros opcionales.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When to Use Overloaded Versions</source>
          <target state="translated">Cuándo utilizar versiones sobrecargadas</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can consider defining a series of overloaded versions in the following cases:</source>
          <target state="translated">Puede definir una serie de versiones sobrecargadas en los casos siguientes:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The logic in the procedure code is significantly different depending on whether the calling code supplies an optional argument or not.</source>
          <target state="translated">La lógica en el código del procedimiento es significativamente diferente dependiendo de si el código de llamada proporciona un argumento opcional o no.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The procedure code cannot reliably test whether the calling code has supplied an optional argument.</source>
          <target state="translated">El código del procedimiento no puede probar de forma confiable si el código llamado ha suministrado un argumento opcional.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This is the case, for example, if there is no possible candidate for a default value that the calling code could not be expected to supply.</source>
          <target state="translated">Este es el caso, por ejemplo, si no hay ningún candidato posible a un valor predeterminado que el código de llamada no podía proporcionar.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When to Use Optional Parameters</source>
          <target state="translated">Cuándo utilizar parámetros opcionales</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You might prefer one or more optional parameters in the following cases:</source>
          <target state="translated">Es posible que prefiera uno o más parámetros opcionales en los casos siguientes:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The only required action when the calling code does not supply an optional argument is to set the parameter to a default value.</source>
          <target state="translated">La única acción necesaria cuando el código de llamada no proporciona un argumento opcional es establecer el parámetro a un valor predeterminado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In such a case, the procedure code can be less complicated if you define a single version with one or more <ph id="ph1">`Optional`</ph> parameters.</source>
          <target state="translated">En tal caso, el código del procedimiento puede resultar menos complicado si se define una única versión con uno o varios <ph id="ph1">`Optional`</ph> parámetros.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Optional Parameters<ept id="p1">](./optional-parameters.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>parámetros opcionales<ept id="p1">](./optional-parameters.md)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Overloads and ParamArrays</source>
          <target state="translated">Sobrecargas y matrices de parámetros</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When the calling code can pass a variable number of arguments, you can define multiple overloaded versions or use a parameter array.</source>
          <target state="translated">Cuando el código de llamada puede pasar un número variable de argumentos, puede definir varias versiones sobrecargadas o utilizar una matriz de parámetros.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When to Use Overloaded Versions</source>
          <target state="translated">Cuándo utilizar versiones sobrecargadas</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can consider defining a series of overloaded versions in the following cases:</source>
          <target state="translated">Puede definir una serie de versiones sobrecargadas en los casos siguientes:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You know that the calling code never passes more than a small number of values to the parameter array.</source>
          <target state="translated">Sabrá que el código de llamada nunca pasa más que un pequeño número de valores para la matriz de parámetros.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The logic in the procedure code is significantly different depending on how many values the calling code passes.</source>
          <target state="translated">La lógica en el código del procedimiento difiere significativamente dependiendo de cuántos valores que pasa el código de llamada.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The calling code can pass values of different data types.</source>
          <target state="translated">El código de llamada puede pasar valores de distintos tipos de datos.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When to Use a Parameter Array</source>
          <target state="translated">Cuándo usar una matriz de parámetros</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You are better served by a <ph id="ph1">`ParamArray`</ph> parameter in the following cases:</source>
          <target state="translated">Funcionan mejor mediante un <ph id="ph1">`ParamArray`</ph> parámetro en los casos siguientes:</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You are not able to predict how many values the calling code can pass to the parameter array, and it could be a large number.</source>
          <target state="translated">No es posible predecir cuántos valores puede pasar el código de llamada a la matriz de parámetros, y podría ser un número elevado.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The procedure logic lends itself to iterating through all the values the calling code passes, performing essentially the same operations on every value.</source>
          <target state="translated">La lógica del procedimiento se presta a recorrer en iteración todos los valores que pasa el código de llamada, realizar esencialmente las mismas operaciones en cada valor.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Parameter Arrays<ept id="p1">](./parameter-arrays.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>matrices de parámetros<ept id="p1">](./parameter-arrays.md)</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Implicit Overloads for Optional Parameters</source>
          <target state="translated">Sobrecargas implícitas para parámetros opcionales</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A procedure with an <bpt id="p1">[</bpt>Optional<ept id="p1">](../../../../visual-basic/language-reference/modifiers/optional.md)</ept> parameter is equivalent to two overloaded procedures, one with the optional parameter and one without it.</source>
          <target state="translated">Un procedimiento con un <bpt id="p1">[</bpt>opcional<ept id="p1">](../../../../visual-basic/language-reference/modifiers/optional.md)</ept> parámetro equivale a dos procedimientos sobrecargados, uno con el parámetro opcional y otro sin él.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You cannot overload such a procedure with a parameter list corresponding to either of these.</source>
          <target state="translated">No se puede sobrecargar un procedimiento con una lista de parámetros que se corresponda con cualquiera de estos.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The following declarations illustrate this.</source>
          <target state="translated">Las siguientes declaraciones ilustran esto.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#58<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#58;<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#60<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>60 VbVbcnProcedures<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#61<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#61;<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For a procedure with more than one optional parameter, there is a set of implicit overloads, arrived at by logic similar to that in the preceding example.</source>
          <target state="translated">Para obtener un procedimiento con más de un parámetro opcional, hay un conjunto de sobrecargas implícitas, llegado por una lógica similar a la del ejemplo anterior.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Implicit Overloads for a ParamArray Parameter</source>
          <target state="translated">Sobrecargas implícitas para un parámetro ParamArray</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The compiler considers a procedure with a <bpt id="p1">[</bpt>ParamArray<ept id="p1">](../../../../visual-basic/language-reference/modifiers/paramarray.md)</ept> parameter to have an infinite number of overloads, differing from each other in what the calling code passes to the parameter array, as follows:</source>
          <target state="translated">El compilador considera que un procedimiento con un <bpt id="p1">[</bpt>ParamArray<ept id="p1">](../../../../visual-basic/language-reference/modifiers/paramarray.md)</ept> parámetro tenga un número infinito de sobrecargas, que se diferencian entre sí por lo que el código de llamada siguiente pasa a la matriz de parámetros:</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>One overload for when the calling code does not supply an argument to the <ph id="ph1">`ParamArray`</ph></source>
          <target state="translated">Una sobrecarga cuando el código de llamada no proporciona ningún argumento a la<ph id="ph1">`ParamArray`</ph></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>One overload for when the calling code supplies a one-dimensional array of the <ph id="ph1">`ParamArray`</ph> element type</source>
          <target state="translated">Una sobrecarga cuando el código de llamada proporciona una matriz unidimensional de la <ph id="ph1">`ParamArray`</ph> el tipo de elemento</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For every positive integer, one overload for when the calling code supplies that number of arguments, each of the <ph id="ph1">`ParamArray`</ph> element type</source>
          <target state="translated">Para cada entero positivo, una sobrecarga cuando el código de llamada proporciona ese número de argumentos, cada uno de los <ph id="ph1">`ParamArray`</ph> el tipo de elemento</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following declarations illustrate these implicit overloads.</source>
          <target state="translated">Las siguientes declaraciones ilustran estas sobrecargas implícitas.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#68<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#68;<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#70<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#70;<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You cannot overload such a procedure with a parameter list that takes a one-dimensional array for the parameter array.</source>
          <target state="translated">No se puede sobrecargar un procedimiento con una lista de parámetros que toma una matriz unidimensional para la matriz de parámetros.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>However, you can use the signatures of the other implicit overloads.</source>
          <target state="translated">Sin embargo, puede utilizar las firmas de las otras sobrecargas implícitas.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following declarations illustrate this.</source>
          <target state="translated">Las siguientes declaraciones ilustran esto.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#71<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#71;<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Typeless Programming as an Alternative to Overloading</source>
          <target state="translated">Programación sin tipos como alternativa a la sobrecarga</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If you want to allow the calling code to pass different data types to a parameter, an alternative approach is typeless programming.</source>
          <target state="translated">Si desea permitir que el código que realiza la llamada pasar tipos de datos diferentes a un parámetro, un enfoque alternativo es la programación sin tipos.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can set the type checking switch to <ph id="ph1">`Off`</ph> with either the <bpt id="p1">[</bpt>Option Strict Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept> or the <bpt id="p2">[</bpt>/optionstrict<ept id="p2">](../../../../visual-basic/reference/command-line-compiler/optionstrict.md)</ept> compiler option.</source>
          <target state="translated">Puede establecer el tipo de conmutador para la comprobación <ph id="ph1">`Off`</ph> con cualquiera el <bpt id="p1">[</bpt>Option Strict (instrucción)<ept id="p1">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept> o <bpt id="p2">[</bpt>/optionstrict<ept id="p2">](../../../../visual-basic/reference/command-line-compiler/optionstrict.md)</ept> opción del compilador.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Then you do not have to declare the parameter's data type.</source>
          <target state="translated">A continuación, es necesario declarar el tipo de datos del parámetro.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>However, this approach has the following disadvantages compared to overloading:</source>
          <target state="translated">Sin embargo, este enfoque tiene las siguientes desventajas en comparación con la sobrecarga:</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Typeless programming produces less efficient execution code.</source>
          <target state="translated">Programación sin tipos genera código de ejecución menos eficiente.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The procedure must test for every data type it anticipates being passed.</source>
          <target state="translated">Debe probar el procedimiento para cada tipo de datos que anticipe que se pasa.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The compiler cannot signal an error if the calling code passes a data type that the procedure does not support.</source>
          <target state="translated">El compilador no puede notificar un error si el código de llamada pasa un tipo de datos que el procedimiento no admite.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vea también</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Procedures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Procedimientos<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Parameters and Arguments<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Argumentos y parámetros de procedimiento<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Troubleshooting Procedures<ept id="p1">](./troubleshooting-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procedimientos de solución de problemas<ept id="p1">](./troubleshooting-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Define Multiple Versions of a Procedure<ept id="p1">](./how-to-define-multiple-versions-of-a-procedure.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Cómo: definir varias versiones de un procedimiento<ept id="p1">](./how-to-define-multiple-versions-of-a-procedure.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Call an Overloaded Procedure<ept id="p1">](./how-to-call-an-overloaded-procedure.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Cómo: llamar a un procedimiento sobrecargado<ept id="p1">](./how-to-call-an-overloaded-procedure.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Overload a Procedure that Takes Optional Parameters<ept id="p1">](./how-to-overload-a-procedure-that-takes-optional-parameters.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Cómo: sobrecargar un procedimiento que toma parámetros opcionales<ept id="p1">](./how-to-overload-a-procedure-that-takes-optional-parameters.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Overload a Procedure that Takes an Indefinite Number of Parameters<ept id="p1">](./how-to-overload-a-procedure-that-takes-an-indefinite-number-of-parameters.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Cómo: sobrecargar un procedimiento que toma un número indefinido de parámetros<ept id="p1">](./how-to-overload-a-procedure-that-takes-an-indefinite-number-of-parameters.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Overload Resolution<ept id="p1">](./overload-resolution.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Resolución de sobrecarga<ept id="p1">](./overload-resolution.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Overloads<ept id="p1">](../../../../visual-basic/language-reference/modifiers/overloads.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Sobrecargas<ept id="p1">](../../../../visual-basic/language-reference/modifiers/overloads.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>