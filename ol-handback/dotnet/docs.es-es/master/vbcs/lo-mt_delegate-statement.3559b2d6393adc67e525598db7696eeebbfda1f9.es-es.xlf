<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ac9e28c82f8a6b5a9c1398961d831c956a649e0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\statements\delegate-statement.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f79df1431ef06be0f073a308dc55a84b5b9a867d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1472fef7aede60b0312fe41694c5c80ed20dfef9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Delegate Statement | Microsoft Docs</source>
          <target state="translated">Delegate (instrucción) | Documentos de Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Delegate Statement</source>
          <target state="translated">Delegate (Instrucción)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Used to declare a delegate.</source>
          <target state="translated">Se utiliza para declarar a un delegado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A delegate is a reference type that refers to a <ph id="ph1">`Shared`</ph> method of a type or to an instance method of an object.</source>
          <target state="translated">Un delegado es un tipo de referencia que hace referencia a un <ph id="ph1">`Shared`</ph> método de un tipo o a un método de instancia de un objeto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Any procedure with matching parameter and return types can be used to create an instance of this delegate class.</source>
          <target state="translated">Cualquier procedimiento con parámetros y tipos devueltos de coincidencia puede utilizarse para crear una instancia de esta clase de delegado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The procedure can then later be invoked by means of the delegate instance.</source>
          <target state="translated">Puede llamar al procedimiento mediante la instancia de delegado.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Sintaxis</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">Elementos</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="translated">Término</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">Definición</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>List of attributes that apply to this delegate.</source>
          <target state="translated">Lista de atributos que se aplican a este delegado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Multiple attributes are separated by commas.</source>
          <target state="translated">Los diversos atributos se separan con comas.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You must enclose the <bpt id="p1">[</bpt>Attribute List<ept id="p1">](../../../visual-basic/language-reference/statements/attribute-list.md)</ept> in angle brackets ("<ph id="ph1">`&lt;`</ph>" and "<ph id="ph2">`&gt;`</ph>").</source>
          <target state="translated">Debe incluir el <bpt id="p1">[</bpt>lista de atributos<ept id="p1">](../../../visual-basic/language-reference/statements/attribute-list.md)</ept> en corchetes angulares ("<ph id="ph1">`&lt;`</ph>"y"<ph id="ph2">`&gt;`</ph>").</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Specifies what code can access the delegate.</source>
          <target state="translated">Especifica qué código puede tener acceso al delegado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Can be one of the following:</source>
          <target state="translated">Puede ser uno de los siguientes:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> -   </ph><bpt id="p1">[</bpt>Public<ept id="p1">](../../../visual-basic/language-reference/modifiers/public.md)</ept>.</source>
          <target state="translated"><ph id="ph1"> -   </ph><bpt id="p1">[</bpt>Public<ept id="p1">](../../../visual-basic/language-reference/modifiers/public.md)</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Any code that can access the element that declares the delegate can access it.</source>
          <target state="translated">Cualquier código que puede tener acceso al elemento que declara al delegado puede tener acceso a él.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><bpt id="p1">[</bpt>Protected<ept id="p1">](../../../visual-basic/language-reference/modifiers/protected.md)</ept>.</source>
          <target state="translated"><ph id="ph1">-   </ph><bpt id="p1">[</bpt>Protegido<ept id="p1">](../../../visual-basic/language-reference/modifiers/protected.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Only code within the delegate's class or a derived class can access it.</source>
          <target state="translated">Sólo el código de la clase del delegado o una clase derivada puede tener acceso a él.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><bpt id="p1">[</bpt>Friend<ept id="p1">](../../../visual-basic/language-reference/modifiers/friend.md)</ept>.</source>
          <target state="translated"><ph id="ph1">-   </ph><bpt id="p1">[</bpt>Amigo<ept id="p1">](../../../visual-basic/language-reference/modifiers/friend.md)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Only code within the same assembly can access the delegate.</source>
          <target state="translated">Sólo el código dentro del mismo ensamblado puede tener acceso al delegado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><bpt id="p1">[</bpt>Private<ept id="p1">](../../../visual-basic/language-reference/modifiers/private.md)</ept>.</source>
          <target state="translated"><ph id="ph1">-   </ph><bpt id="p1">[</bpt>Privada<ept id="p1">](../../../visual-basic/language-reference/modifiers/private.md)</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Only code within the element that declares the delegate can access it.</source>
          <target state="translated">Sólo el código dentro del elemento que declara al delegado puede tener acceso a él.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can specify <ph id="ph1">`Protected Friend`</ph> to enable access from code within the delegate's class, a derived class, or the same assembly.</source>
          <target state="translated">Puede especificar <ph id="ph1">`Protected Friend`</ph> para habilitar el acceso desde el código dentro del mismo ensamblado, una clase derivada o la clase del delegado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Indicates that this delegate redeclares and hides an identically named programming element, or set of overloaded elements, in a base class.</source>
          <target state="translated">Indica que este delegado vuelve a declarar y oculta un elemento de programación denominado de forma idéntica, o un conjunto de elementos sobrecargados, en una clase base.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can shadow any kind of declared element with any other kind.</source>
          <target state="translated">Puede reemplazar cualquier tipo de elemento declarado con cualquier otro tipo.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A shadowed element is unavailable from within the derived class that shadows it, except from where the shadowing element is inaccessible.</source>
          <target state="translated">Un elemento reemplazado no está disponible desde la clase derivada que lo reemplaza, excepto desde donde el elemento reemplazado es inaccesible.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, if a <ph id="ph1">`Private`</ph> element shadows a base class element, code that does not have permission to access the <ph id="ph2">`Private`</ph> element accesses the base class element instead.</source>
          <target state="translated">Por ejemplo, si un <ph id="ph1">`Private`</ph> elemento sombrea un elemento de clase base, el código que no tiene permiso para tener acceso a la <ph id="ph2">`Private`</ph> elemento tiene acceso al elemento de clase base en su lugar.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Optional, but either <ph id="ph1">`Sub`</ph> or <ph id="ph2">`Function`</ph> must appear.</source>
          <target state="translated">Opcional, pero bien <ph id="ph1">`Sub`</ph> o <ph id="ph2">`Function`</ph> deben aparecer.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Declares this procedure as a delegate <ph id="ph1">`Sub`</ph> procedure that does not return a value.</source>
          <target state="translated">Declara este procedimiento como un delegado <ph id="ph1">`Sub`</ph> procedimiento que no devuelve un valor.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Optional, but either <ph id="ph1">`Sub`</ph> or <ph id="ph2">`Function`</ph> must appear.</source>
          <target state="translated">Opcional, pero bien <ph id="ph1">`Sub`</ph> o <ph id="ph2">`Function`</ph> deben aparecer.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Declares this procedure as a delegate <ph id="ph1">`Function`</ph> procedure that returns a value.</source>
          <target state="translated">Declara este procedimiento como un delegado <ph id="ph1">`Function`</ph> procedimiento que devuelve un valor.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Name of the delegate type; follows standard variable naming conventions.</source>
          <target state="translated">Nombre del tipo delegado. sigue las convenciones de nomenclatura estándares.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>List of type parameters for this delegate.</source>
          <target state="translated">Lista de parámetros de tipo para este delegado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Multiple type parameters are separated by commas.</source>
          <target state="translated">Varios parámetros de tipo están separados por comas.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Optionally, each type parameter can be declared variant by using <ph id="ph1">`In`</ph> and <ph id="ph2">`Out`</ph> generic modifiers.</source>
          <target state="translated">Opcionalmente, cada parámetro de tipo puede declararse variante mediante <ph id="ph1">`In`</ph> y <ph id="ph2">`Out`</ph> modificadores genéricos.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You must enclose the <bpt id="p1">[</bpt>Type List<ept id="p1">](../../../visual-basic/language-reference/statements/type-list.md)</ept> in parentheses and introduce it with the <ph id="ph1">`Of`</ph> keyword.</source>
          <target state="translated">Debe incluir el <bpt id="p1">[</bpt>lista tipo<ept id="p1">](../../../visual-basic/language-reference/statements/type-list.md)</ept> entre paréntesis y anteponer con el <ph id="ph1">`Of`</ph> (palabra clave).</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>List of parameters that are passed to the procedure when it is called.</source>
          <target state="translated">Lista de parámetros que se pasan al procedimiento cuando se llama.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You must enclose the <bpt id="p1">[</bpt>Parameter List<ept id="p1">](../../../visual-basic/language-reference/statements/parameter-list.md)</ept> in parentheses.</source>
          <target state="translated">Debe incluir el <bpt id="p1">[</bpt>lista de parámetros<ept id="p1">](../../../visual-basic/language-reference/statements/parameter-list.md)</ept> entre paréntesis.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Required if you specify a <ph id="ph1">`Function`</ph> procedure.</source>
          <target state="translated">Es obligatorio si especifica un <ph id="ph1">`Function`</ph> procedimiento.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Data type of the return value.</source>
          <target state="translated">Tipo de datos del valor devuelto.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">Comentarios</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Delegate`</ph> statement defines the parameter and return types of a delegate class.</source>
          <target state="translated">El <ph id="ph1">`Delegate`</ph> instrucción define los tipos de parámetro y valor devuelto de una clase de delegado.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Any procedure with matching parameters and return types can be used to create an instance of this delegate class.</source>
          <target state="translated">Cualquier procedimiento con parámetros de coincidencia y tipos de valor devuelto puede utilizarse para crear una instancia de esta clase de delegado.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The procedure can then later be invoked by means of the delegate instance, by calling the delegate's <ph id="ph1">`Invoke`</ph> method.</source>
          <target state="translated">El procedimiento más adelante puede invocar por medio de la instancia de delegado, llamando al delegado <ph id="ph1">`Invoke`</ph> método.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Delegates can be declared at the namespace, module, class, or structure level, but not within a procedure.</source>
          <target state="translated">Los delegados se pueden declarar en el espacio de nombres, módulo, clase o estructura, pero no dentro de un procedimiento.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Each delegate class defines a constructor that is passed the specification of an object method.</source>
          <target state="translated">Cada clase delegada define un constructor que se pasa la especificación de un método de objeto.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>An argument to a delegate constructor must be a reference to a method, or a lambda expression.</source>
          <target state="translated">Un argumento para un constructor delegado debe ser una referencia a un método o una expresión lambda.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To specify a reference to a method, use the following syntax:</source>
          <target state="translated">Para especificar una referencia a un método, utilice la siguiente sintaxis:</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AddressOf`</ph> [<ph id="ph2">`expression`</ph>.]<ph id="ph3">`methodname`</ph></source>
          <target state="translated"><ph id="ph1">`AddressOf`</ph> [<ph id="ph2">`expression`</ph>.]<ph id="ph3">`methodname`</ph></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The compile-time type of the <ph id="ph1">`expression`</ph> must be the name of a class or an interface that contains a method of the specified name whose signature matches the signature of the delegate class.</source>
          <target state="translated">El tipo de tiempo de compilación de la <ph id="ph1">`expression`</ph> debe ser el nombre de una clase o interfaz que contiene un método del nombre especificado cuya firma coincida con la firma de la clase de delegado.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`methodname`</ph> can be either a shared method or an instance method.</source>
          <target state="translated">La <ph id="ph1">`methodname`</ph> puede ser un método compartido o un método de instancia.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`methodname`</ph> is not optional, even if you create a delegate for the default method of the class.</source>
          <target state="translated">El <ph id="ph1">`methodname`</ph> no es opcional, incluso si se crea un delegado para el método predeterminado de la clase.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To specify a lambda expression, use the following syntax:</source>
          <target state="translated">Para especificar una expresión lambda, utilice la siguiente sintaxis:</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Function`</ph> ([<ph id="ph2">`parm`</ph> As <ph id="ph3">`type`</ph>, <ph id="ph4">`parm2`</ph> As <ph id="ph5">`type2`</ph>, ...]) <ph id="ph6">`expression`</ph></source>
          <target state="translated"><ph id="ph1">`Function`</ph>([<ph id="ph2">`parm`</ph> As <ph id="ph3">`type`</ph>, <ph id="ph4">`parm2`</ph> As <ph id="ph5">`type2`</ph>, ...])<ph id="ph6">`expression`</ph></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The signature of the function must match that of the delegate type.</source>
          <target state="translated">La firma de la función debe coincidir con la del tipo de delegado.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information about lambda expressions, see <bpt id="p1">[</bpt>Lambda Expressions<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre las expresiones lambda, vea <bpt id="p1">[</bpt>Expresiones lambda<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For more information about delegates, see <bpt id="p1">[</bpt>Delegates<ept id="p1">](../../../visual-basic/programming-guide/language-features/delegates/index.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre los delegados, vea <bpt id="p1">[</bpt>delegados<ept id="p1">](../../../visual-basic/programming-guide/language-features/delegates/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`Delegate`</ph> statement to declare a delegate for operating on two numbers and returning a number.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">`Delegate`</ph> instrucción para declarar un delegado para operar con dos números y devuelve un número.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DelegateTest`</ph> method takes an instance of a delegate of this type and uses it to operate on pairs of numbers.</source>
          <target state="translated">El <ph id="ph1">`DelegateTest`</ph> método toma una instancia de un delegado de este tipo y se utiliza para operar en los pares de números.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates#14<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/delegate-statement_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates&amp;#14;<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/delegate-statement_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vea también</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AddressOf Operator<ept id="p1">](../../../visual-basic/language-reference/operators/addressof-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>AddressOf (operador)<ept id="p1">](../../../visual-basic/language-reference/operators/addressof-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Of<ept id="p1">](../../../visual-basic/language-reference/statements/of-clause.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Of<ept id="p1">](../../../visual-basic/language-reference/statements/of-clause.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Delegates<ept id="p1">](../../../visual-basic/programming-guide/language-features/delegates/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Delegados<ept id="p1">](../../../visual-basic/programming-guide/language-features/delegates/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Use a Generic Class<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/how-to-use-a-generic-class.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Cómo: utilizar una clase genérica<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/how-to-use-a-generic-class.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Generic Types in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Tipos genéricos en Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Covariance and Contravariance<ept id="p1">](http://msdn.microsoft.com/library/a58cc086-276f-4f91-a366-85b7f95f38b8)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Covarianza y contravarianza<ept id="p1">](http://msdn.microsoft.com/library/a58cc086-276f-4f91-a366-85b7f95f38b8)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>In<ept id="p1">](../../../visual-basic/language-reference/modifiers/in-generic-modifier.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>En<ept id="p1">](../../../visual-basic/language-reference/modifiers/in-generic-modifier.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Out<ept id="p1">](../../../visual-basic/language-reference/modifiers/out-generic-modifier.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Horizontal<ept id="p1">](../../../visual-basic/language-reference/modifiers/out-generic-modifier.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>