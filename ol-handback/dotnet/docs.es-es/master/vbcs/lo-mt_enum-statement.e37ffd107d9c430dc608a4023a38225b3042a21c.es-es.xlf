<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9d3377300d30fd045c041367a528766fa9a8ed9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\statements\enum-statement.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b09c73c74bc0db1ba8bbd1042818a1466dc971f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d78a4ee823d61f61738552b0928e99d74c4d9afd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enum Statement (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Enum (instrucción) (Visual Basic) | Documentos de Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Enum Statement (Visual Basic)</source>
          <target state="translated">Instrucción Enum (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Declares an enumeration and defines the values of its members.</source>
          <target state="translated">Declara una enumeración y define los valores de sus miembros.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Sintaxis</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">Elementos</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>List of attributes that apply to this enumeration.</source>
          <target state="translated">Lista de atributos que se aplican a esta enumeración.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You must enclose the <bpt id="p1">[</bpt>attribute list<ept id="p1">](../../../visual-basic/language-reference/statements/attribute-list.md)</ept> in angle brackets ("<ph id="ph1">`&lt;`</ph>" and "<ph id="ph2">`&gt;`</ph>").</source>
          <target state="translated">Debe incluir el <bpt id="p1">[</bpt>lista de atributos<ept id="p1">](../../../visual-basic/language-reference/statements/attribute-list.md)</ept> en corchetes angulares ("<ph id="ph1">`&lt;`</ph>"y"<ph id="ph2">`&gt;`</ph>").</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.FlagsAttribute&gt; attribute indicates that the value of an instance of the enumeration can include multiple enumeration members, and that each member represents a bit field in the enumeration value.</source>
          <target state="translated">El &lt;xref:System.FlagsAttribute&gt;atributo indica que el valor de una instancia de la enumeración puede incluir varios miembros de enumeración y que cada miembro representa un campo de bits en el valor de enumeración.&lt;/xref:System.FlagsAttribute&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Specifies what code can access this enumeration.</source>
          <target state="translated">Especifica qué código puede tener acceso a esta enumeración.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Can be one of the following:</source>
          <target state="translated">Puede ser uno de los siguientes:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Public<ept id="p1">](../../../visual-basic/language-reference/modifiers/public.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Public<ept id="p1">](../../../visual-basic/language-reference/modifiers/public.md)</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Protected<ept id="p1">](../../../visual-basic/language-reference/modifiers/protected.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Protected<ept id="p1">](../../../visual-basic/language-reference/modifiers/protected.md)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Friend<ept id="p1">](../../../visual-basic/language-reference/modifiers/friend.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Friend<ept id="p1">](../../../visual-basic/language-reference/modifiers/friend.md)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Private<ept id="p1">](../../../visual-basic/language-reference/modifiers/private.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Private<ept id="p1">](../../../visual-basic/language-reference/modifiers/private.md)</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can specify <ph id="ph1">`Protected``Friend`</ph> to allow access from code within the enumeration's class, a derived class, or the same assembly.</source>
          <target state="translated">Puede especificar <ph id="ph1">`Protected``Friend`</ph> para permitir el acceso desde el código dentro del mismo ensamblado, una clase derivada o clase de enumeración.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Specifies that this enumeration redeclares and hides an identically named programming element, or set of overloaded elements, in a base class.</source>
          <target state="translated">Especifica que esta enumeración vuelve a declarar y oculta un elemento de programación denominado de forma idéntica, o un conjunto de elementos sobrecargados, en una clase base.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can specify <bpt id="p1">[</bpt>Shadows<ept id="p1">](../../../visual-basic/language-reference/modifiers/shadows.md)</ept> only on the enumeration itself, not on any of its members.</source>
          <target state="translated">Puede especificar <bpt id="p1">[</bpt>sombras<ept id="p1">](../../../visual-basic/language-reference/modifiers/shadows.md)</ept> sólo en la propia enumeración, no en cualquiera de sus miembros.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Name of the enumeration.</source>
          <target state="translated">Nombre de la enumeración.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For information on valid names, see <bpt id="p1">[</bpt>Declared Element Names<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.</source>
          <target state="translated">Para obtener información sobre los nombres válidos, consulte <bpt id="p1">[</bpt>nombres de elementos declarados<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Data type of the enumeration and all its members.</source>
          <target state="translated">Tipo de datos de la enumeración y todos sus miembros.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>List of member constants being declared in this statement.</source>
          <target state="translated">Lista de constantes de miembros que se declara en esta instrucción.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Multiple members appear on individual source code lines.</source>
          <target state="translated">Varios miembros aparecen en líneas de código fuente individuales.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`member`</ph> has the following syntax and parts: <ph id="ph2">`[&lt;attribute list&gt;] member name [ = initializer ]`</ph></source>
          <target state="translated">Cada <ph id="ph1">`member`</ph> tiene la sintaxis y las partes siguientes:<ph id="ph2">`[&lt;attribute list&gt;] member name [ = initializer ]`</ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Part</source>
          <target state="translated">Parte</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Name of this member.</source>
          <target state="translated">Nombre de este miembro.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Expression that is evaluated at compile time and assigned to this member.</source>
          <target state="translated">Expresión que se evalúa en tiempo de compilación y se asigna a este miembro.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`End`</ph> <ph id="ph2">`Enum`</ph></source>
          <target state="translated"><ph id="ph1">`End`</ph> <ph id="ph2">`Enum`</ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Terminates the <ph id="ph1">`Enum`</ph> block.</source>
          <target state="translated">Finaliza el bloque <ph id="ph1">`Enum`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">Comentarios</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If you have a set of unchanging values that are logically related to each other, you can define them together in an enumeration.</source>
          <target state="translated">Si tiene un conjunto de valores inalterables que se relacionan lógicamente entre sí, puede definirlos juntos en una enumeración.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This provides meaningful names for the enumeration and its members, which are easier to remember than their values.</source>
          <target state="translated">Esto proporciona nombres descriptivos para la enumeración y sus miembros, que son más fáciles de recordar que sus valores.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can then use the enumeration members in many places in your code.</source>
          <target state="translated">A continuación, puede utilizar a los miembros de enumeración en muchos lugares en su código.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The benefits of using enumerations include the following:</source>
          <target state="translated">Las ventajas de usar las enumeraciones incluyen lo siguiente:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Reduces errors caused by transposing or mistyping numbers.</source>
          <target state="translated">Reducir los errores producidos por números transpuestos o.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Makes it easy to change values in the future.</source>
          <target state="translated">Facilita cambiar los valores en el futuro.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Makes code easier to read, which means it is less likely that errors will be introduced.</source>
          <target state="translated">Hace el código más fácil de leer, lo que significa que es menos probable que los errores se introducirán.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Ensures forward compatibility.</source>
          <target state="translated">Garantiza la compatibilidad con versiones posteriores.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you use enumerations, your code is less likely to fail if in the future someone changes the values corresponding to the member names.</source>
          <target state="translated">Si utiliza las enumeraciones, su código es menos propenso a errores si en el futuro en que alguien cambia los valores correspondientes a los nombres de miembro.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An enumeration has a name, an underlying data type, and a set of members.</source>
          <target state="translated">Una enumeración tiene un nombre, un tipo de datos subyacente y un conjunto de miembros.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Each member represents a constant.</source>
          <target state="translated">Cada miembro representa una constante.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An enumeration declared at class, structure, module, or interface level, outside any procedure, is a <bpt id="p1">*</bpt>member enumeration<ept id="p1">*</ept>.</source>
          <target state="translated">Una enumeración declarada en el nivel de clase, estructura, módulo o interfaz, fuera de cualquier procedimiento, es un <bpt id="p1">*</bpt>enumeración de miembros<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>It is a member of the class, structure, module, or interface that declares it.</source>
          <target state="translated">Es un miembro de la clase, estructura, módulo o interfaz que la declara.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Member enumerations can be accessed from anywhere within their class, structure, module, or interface.</source>
          <target state="translated">Las enumeraciones de miembros pueden obtenerse acceso desde cualquier parte dentro de su clase, estructura, módulo o interfaz.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Code outside a class, structure, or module must qualify a member enumeration's name with the name of that class, structure, or module.</source>
          <target state="translated">Código fuera de una clase, estructura o módulo debe calificar el nombre de una enumeración de miembros con el nombre de esa clase, estructura o módulo.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can avoid the need to use fully qualified names by adding an <bpt id="p1">[</bpt>Imports<ept id="p1">](../../../visual-basic/language-reference/statements/imports-statement-net-namespace-and-type.md)</ept> statement to the source file.</source>
          <target state="translated">Puede evitar la necesidad de utilizar nombres completos agregando un <bpt id="p1">[</bpt>importaciones<ept id="p1">](../../../visual-basic/language-reference/statements/imports-statement-net-namespace-and-type.md)</ept> instrucción al archivo de origen.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An enumeration declared at namespace level, outside any class, structure, module, or interface, is a member of the namespace in which it appears.</source>
          <target state="translated">Una enumeración declarada en el nivel de espacio de nombres, fuera de cualquier clase, estructura, módulo o interfaz, es un miembro del espacio de nombres en el que aparece.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>declaration context<ept id="p1">*</ept> for an enumeration must be a source file, namespace, class, structure, module, or interface, and cannot be a procedure.</source>
          <target state="translated">El <bpt id="p1">*</bpt>contexto de declaración<ept id="p1">*</ept> para una enumeración debe ser un archivo de código fuente, espacio de nombres, clase, estructura, módulo o interfaz y no puede ser un procedimiento.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Declaration Contexts and Default Access Levels<ept id="p1">](../../../visual-basic/language-reference/statements/declaration-contexts-and-default-access-levels.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>contextos de declaración y niveles de acceso predeterminados<ept id="p1">](../../../visual-basic/language-reference/statements/declaration-contexts-and-default-access-levels.md)</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can apply attributes to an enumeration as a whole, but not to its members individually.</source>
          <target state="translated">Se puede aplicar los atributos a una enumeración como un todo, pero no a sus miembros individualmente.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An attribute contributes information to the assembly's metadata.</source>
          <target state="translated">Un atributo proporciona información a los metadatos del ensamblado.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Data Type</source>
          <target state="translated">Tipo de datos</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Enum`</ph> statement can declare the data type of an enumeration.</source>
          <target state="translated">El <ph id="ph1">`Enum`</ph> instrucción puede declarar el tipo de datos de una enumeración.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Each member takes the enumeration's data type.</source>
          <target state="translated">Cada miembro toma el tipo de datos de la enumeración.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You can specify <ph id="ph1">`Byte`</ph>, <ph id="ph2">`Integer`</ph>, <ph id="ph3">`Long`</ph>, <ph id="ph4">`SByte`</ph>, <ph id="ph5">`Short`</ph>, <ph id="ph6">`UInteger`</ph>, <ph id="ph7">`ULong`</ph>, or <ph id="ph8">`UShort`</ph>.</source>
          <target state="translated">You can specify <ph id="ph1">`Byte`</ph>, <ph id="ph2">`Integer`</ph>, <ph id="ph3">`Long`</ph>, <ph id="ph4">`SByte`</ph>, <ph id="ph5">`Short`</ph>, <ph id="ph6">`UInteger`</ph>, <ph id="ph7">`ULong`</ph>, or <ph id="ph8">`UShort`</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If you do not specify <ph id="ph1">`datatype`</ph> for the enumeration, each member takes the data type of its <ph id="ph2">`initializer`</ph>.</source>
          <target state="translated">Si no se especifica <ph id="ph1">`datatype`</ph> para la enumeración, cada miembro toma el tipo de datos de su <ph id="ph2">`initializer`</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If you specify both <ph id="ph1">`datatype`</ph> and <ph id="ph2">`initializer`</ph>, the data type of <ph id="ph3">`initializer`</ph> must be convertible to <ph id="ph4">`datatype`</ph>.</source>
          <target state="translated">Si se especifican ambas <ph id="ph1">`datatype`</ph> y <ph id="ph2">`initializer`</ph>, tipo de datos de <ph id="ph3">`initializer`</ph> debe poder convertirse a <ph id="ph4">`datatype`</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If neither <ph id="ph1">`datatype`</ph> nor <ph id="ph2">`initializer`</ph> is present, the data type defaults to <ph id="ph3">`Integer`</ph>.</source>
          <target state="translated">Si no <ph id="ph1">`datatype`</ph> ni <ph id="ph2">`initializer`</ph> está presente, el valor predeterminado es de tipo de datos <ph id="ph3">`Integer`</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Initializing Members</source>
          <target state="translated">Inicialización de miembros</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Enum`</ph> statement can initialize the contents of selected members in <ph id="ph2">`memberlist`</ph>.</source>
          <target state="translated">El <ph id="ph1">`Enum`</ph> instrucción puede inicializar el contenido de los miembros seleccionados en <ph id="ph2">`memberlist`</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You use <ph id="ph1">`initializer`</ph> to supply an expression to be assigned to the member.</source>
          <target state="translated">Utiliza <ph id="ph1">`initializer`</ph> para proporcionar una expresión que se asigna al miembro.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If you do not specify <ph id="ph1">`initializer`</ph> for a member, Visual Basic initializes it either to zero (if it is the first <ph id="ph2">`member`</ph> in <ph id="ph3">`memberlist`</ph>), or to a value greater by one than that of the immediately preceding <ph id="ph4">`member`</ph>.</source>
          <target state="translated">Si no se especifica <ph id="ph1">`initializer`</ph> de un miembro, Visual Basic lo inicializa a cero (si es la primera <ph id="ph2">`member`</ph> en <ph id="ph3">`memberlist`</ph>), o en un valor superior en uno al de la inmediatamente anterior a <ph id="ph4">`member`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The expression supplied in each <ph id="ph1">`initializer`</ph> can be any combination of literals, other constants that are already defined, and enumeration members that are already defined, including a previous member of this enumeration.</source>
          <target state="translated">La expresión proporcionada en cada <ph id="ph1">`initializer`</ph> puede ser cualquier combinación de literales, otras constantes que ya están definidas y miembros de enumeración que ya están definidos, incluso un miembro anterior de esta enumeración.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can use arithmetic and logical operators to combine such elements.</source>
          <target state="translated">Puede utilizar operadores aritméticos y lógicos para combinar estos elementos.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You cannot use variables or functions in <ph id="ph1">`initializer`</ph>.</source>
          <target state="translated">No puede utilizar variables o funciones en <ph id="ph1">`initializer`</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>However, you can use conversion keywords such as <ph id="ph1">`CByte`</ph> and <ph id="ph2">`CShort`</ph>.</source>
          <target state="translated">Sin embargo, puede utilizar palabras clave de conversión como <ph id="ph1">`CByte`</ph> y <ph id="ph2">`CShort`</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You can also use <ph id="ph1">`AscW`</ph> if you call it with a constant <ph id="ph2">`String`</ph> or <ph id="ph3">`Char`</ph> argument, since that can be evaluated at compile time.</source>
          <target state="translated">También puede usar <ph id="ph1">`AscW`</ph> si se le llama con una constante <ph id="ph2">`String`</ph> o <ph id="ph3">`Char`</ph> argumento, puesto que puede evaluarse en tiempo de compilación.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Enumerations cannot have floating-point values.</source>
          <target state="translated">Las enumeraciones no pueden tener valores de punto flotante.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If a member is assigned a floating-point value and <ph id="ph1">`Option Strict`</ph> is set to on, a compiler error occurs.</source>
          <target state="translated">Si un miembro se le asigna un valor de punto flotante y <ph id="ph1">`Option Strict`</ph> se establece en on, se produce un error del compilador.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Option Strict`</ph> is off, the value is automatically converted to the <ph id="ph2">`Enum`</ph> type.</source>
          <target state="translated">Si <ph id="ph1">`Option Strict`</ph> está desactivado, el valor se convierte automáticamente en el <ph id="ph2">`Enum`</ph> tipo.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If the value of a member exceeds the allowable range for the underlying data type, or if you initialize any member to the maximum value allowed by the underlying data type, the compiler reports an error.</source>
          <target state="translated">Si el valor de un miembro rebasa el intervalo permitido para el tipo de datos subyacente, o si se inicializa a un miembro al valor máximo permitido por el tipo de datos subyacente, el compilador notifica un error.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modificadores</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Class, structure, module, and interface member enumerations default to public access.</source>
          <target state="translated">Clase, estructura, módulo y predeterminada de enumeraciones de miembro de interfaz acceso público.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You can adjust their access levels with the access modifiers.</source>
          <target state="translated">Los niveles de acceso se pueden ajustar con los modificadores de acceso.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Namespace member enumerations default to friend access.</source>
          <target state="translated">Namespace predeterminado de las enumeraciones de miembro para el acceso de confianza.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>You can adjust their access levels to public, but not to private or protected.</source>
          <target state="translated">Puede ajustar los niveles de acceso público, pero no a privado o protegido.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Access Levels in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>niveles de acceso en Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>All enumeration members have public access, and you cannot use any access modifiers on them.</source>
          <target state="translated">Todos los miembros de enumeración tienen acceso público y no puede utilizar ningún modificador de acceso en ellos.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>However, if the enumeration itself has a more restricted access level, the specified enumeration access level takes precedence.</source>
          <target state="translated">Sin embargo, si la propia enumeración tiene un nivel de acceso más limitado, el nivel de acceso de la enumeración especificada tiene prioridad.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>By default, all enumerations are types and their fields are constants.</source>
          <target state="translated">De forma predeterminada, todas las enumeraciones son tipos y sus campos son constantes.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Therefore the <ph id="ph1">`Shared`</ph>, <ph id="ph2">`Static`</ph>, and <ph id="ph3">`ReadOnly`</ph> keywords cannot be used when declaring an enumeration or its members.</source>
          <target state="translated">Por lo tanto, la <ph id="ph1">`Shared`</ph>, <ph id="ph2">`Static`</ph>, y <ph id="ph3">`ReadOnly`</ph> no se puede usar palabras clave al declarar una enumeración o sus miembros.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Assigning Multiple Values</source>
          <target state="translated">Asignar varios valores</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Enumerations typically represent mutually exclusive values.</source>
          <target state="translated">Enumeraciones suelen representan valores mutuamente exclusivos.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>By including the &lt;xref:System.FlagsAttribute&gt; attribute in the <ph id="ph1">`Enum`</ph> declaration, you can instead assign multiple values to an instance of the enumeration.</source>
          <target state="translated">Al incluir la &lt;xref:System.FlagsAttribute&gt;el atributo en el <ph id="ph1">`Enum`</ph> declaración, en su lugar, puede asignar varios valores a una instancia de la enumeración.&lt;/xref:System.FlagsAttribute&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.FlagsAttribute&gt; attribute specifies that the enumeration be treated as a bit field, that is, a set of flags.</source>
          <target state="translated">El &lt;xref:System.FlagsAttribute&gt;atributo especifica que la enumeración se tratan como un campo de bits, es decir, un conjunto de indicadores.&lt;/xref:System.FlagsAttribute&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>These are called <bpt id="p1">*</bpt>bitwise<ept id="p1">*</ept> enumerations.</source>
          <target state="translated">Se denominan <bpt id="p1">*</bpt>bit a bit<ept id="p1">*</ept> enumeraciones.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>When you declare an enumeration by using the &lt;xref:System.FlagsAttribute&gt; attribute, we recommend that you use powers of 2, that is, 1, 2, 4, 8, 16, and so on, for the values.</source>
          <target state="translated">Cuando se declara una enumeración mediante el uso de la &lt;xref:System.FlagsAttribute&gt;atributo, se recomienda que use potencias de 2, que es, 1, 2, 4, 8, 16 etc., para los valores.&lt;/xref:System.FlagsAttribute&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>We also recommend that "None" be the name of a member whose value is 0.</source>
          <target state="translated">También se recomienda que "" ser el nombre de un miembro cuyo valor es 0.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For additional guidelines, see &lt;xref:System.FlagsAttribute&gt; and &lt;xref:System.Enum&gt;.</source>
          <target state="translated">Para obtener instrucciones adicionales, consulte &lt;xref:System.FlagsAttribute&gt;y &lt;xref:System.Enum&gt;.&lt;/xref:System.Enum&gt; &lt;/xref:System.FlagsAttribute&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the <ph id="ph1">`Enum`</ph> statement.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el <ph id="ph1">`Enum`</ph> instrucción.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Note that the member is referred to as <ph id="ph1">`EggSizeEnum.Medium`</ph>, and not as <ph id="ph2">`Medium`</ph>.</source>
          <target state="translated">Tenga en cuenta que el miembro se denomina <ph id="ph1">`EggSizeEnum.Medium`</ph>y no como <ph id="ph2">`Medium`</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#41<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask nº&amp;41;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The method in the following example is outside the <ph id="ph1">`Egg`</ph> class.</source>
          <target state="translated">El método en el ejemplo siguiente está fuera de la <ph id="ph1">`Egg`</ph> clase.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Therefore, <ph id="ph1">`EggSizeEnum`</ph> is fully qualified as <ph id="ph2">`Egg.EggSizeEnum`</ph>.</source>
          <target state="translated">Por lo tanto, <ph id="ph1">`EggSizeEnum`</ph> es un nombre completo como <ph id="ph2">`Egg.EggSizeEnum`</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#42<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask&amp;#42;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`Enum`</ph> statement to define a related set of named constant values.</source>
          <target state="translated">En el ejemplo siguiente se usa el <ph id="ph1">`Enum`</ph> denominado de instrucción para definir un conjunto relacionado de valores constantes.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>In this case, the values are colors you might choose to design data entry forms for a database.</source>
          <target state="translated">En este caso, los valores son colores que puede optar por diseñar formularios de entrada de datos para una base de datos.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#30<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask Nº&amp;30;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The following example shows values that include both positive and negative numbers.</source>
          <target state="translated">El ejemplo siguiente muestra valores que incluyen números positivos y negativos.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#31<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask&amp;#31;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>In the following example, an <ph id="ph1">`As`</ph> clause is used to specify the <ph id="ph2">`datatype`</ph> of an enumeration.</source>
          <target state="translated">En el ejemplo siguiente, un <ph id="ph1">`As`</ph> cláusula se utiliza para especificar el <ph id="ph2">`datatype`</ph> de una enumeración.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#6<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask Nº&amp;6;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The following example shows how to use a bitwise enumeration.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar una enumeración bit a bit.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Multiple values can be assigned to an instance of a bitwise enumeration.</source>
          <target state="translated">Varios valores se pueden asignar a una instancia de una enumeración bit a bit.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Enum`</ph> declaration includes the &lt;xref:System.FlagsAttribute&gt; attribute, which indicates that the enumeration can be treated as a set of flags.</source>
          <target state="translated">El <ph id="ph1">`Enum`</ph> declaración incluye la &lt;xref:System.FlagsAttribute&gt;atributo, que indica que la enumeración se puede tratar como un conjunto de indicadores.&lt;/xref:System.FlagsAttribute&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#61<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask&amp;#61;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The following example iterates through an enumeration.</source>
          <target state="translated">En el ejemplo siguiente se recorre en iteración una enumeración.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>It uses the &lt;xref:System.Enum.GetNames%2A&gt; method to retrieve an array of member names from the enumeration, and &lt;xref:System.Enum.GetValues%2A&gt; to retrieve an array of member values.</source>
          <target state="translated">Usa el &lt;xref:System.Enum.GetNames%2A&gt;método para recuperar una matriz de nombres de miembro de la enumeración y &lt;xref:System.Enum.GetValues%2A&gt;para recuperar una matriz de valores de miembro.&lt;/xref:System.Enum.GetValues%2A&gt; &lt;/xref:System.Enum.GetNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#51<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_7.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask&amp;#51;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_7.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vea también</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Enum&gt;</source>
          <target state="translated">&lt;xref:System.Enum&gt;&lt;/xref:System.Enum&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>&lt;xref:Microsoft.VisualBasic.Strings.AscW%2A&gt;</source>
          <target state="translated">&lt;xref:Microsoft.VisualBasic.Strings.AscW%2A&gt;&lt;/xref:Microsoft.VisualBasic.Strings.AscW%2A&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Const Statement<ept id="p1">](../../../visual-basic/language-reference/statements/const-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Const (instrucción)<ept id="p1">](../../../visual-basic/language-reference/statements/const-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Dim Statement<ept id="p1">](../../../visual-basic/language-reference/statements/dim-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Dim (instrucción)<ept id="p1">](../../../visual-basic/language-reference/statements/dim-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Implicit and Explicit Conversions<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Conversiones implícitas y explícitas<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Type Conversion Functions<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Funciones de conversión de tipo<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Constants and Enumerations<ept id="p1">](../../../visual-basic/language-reference/constants-and-enumerations.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Constantes y enumeraciones<ept id="p1">](../../../visual-basic/language-reference/constants-and-enumerations.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>