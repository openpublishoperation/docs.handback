<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46c5cb9328f2fa1a4ffc5116d318bc3286419e13</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\async\how-to-extend-the-async-walkthrough-by-using-task-whenall.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3bfed037a37e4b8afde734dbdf66a2bbb5f8fcb7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d44e6949ee4a554595ee25194e439413e799fb4e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Extend the Async Walkthrough by Using Task.WhenAll (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Cómo: ampliar el tutorial de Async usando Task.WhenAll (Visual Basic) | Documentos de Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Extend the Async Walkthrough by Using Task.WhenAll (Visual Basic)</source>
          <target state="translated">Cómo: ampliar el tutorial de Async usando Task.WhenAll (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can improve the performance of the async solution in <bpt id="p1">[</bpt>Walkthrough: Accessing the Web by Using Async and Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept> by using the &lt;xref:System.Threading.Tasks.Task.WhenAll%2A?displayProperty=fullName&gt; method.</source>
          <target state="translated">Puede mejorar el rendimiento de la solución de async en <bpt id="p1">[</bpt>Tutorial: obtener acceso a la Web mediante el uso de Async y Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept> utilizando el &lt;xref:System.Threading.Tasks.Task.WhenAll%2A?displayProperty=fullName&gt;método.&lt;/xref:System.Threading.Tasks.Task.WhenAll%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This method asynchronously awaits multiple asynchronous operations, which are represented as a collection of tasks.</source>
          <target state="translated">Este método espera asincrónica varias operaciones asincrónicas, que se representan como una colección de tareas.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You might have noticed in the walkthrough that the websites download at different rates.</source>
          <target state="translated">Habrá observado en el tutorial que descarguen los sitios Web a distintas tasas.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Sometimes one of the websites is very slow, which delays all the remaining downloads.</source>
          <target state="translated">A veces uno de los sitios Web es muy lento, lo que retrasa las descargas restantes.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When you run the asynchronous solutions that you build in the walkthrough, you can end the program easily if you don't want to wait, but a better option would be to start all the downloads at the same time and let faster downloads continue without waiting for the one that’s delayed.</source>
          <target state="translated">Cuando se ejecuta las soluciones asincrónicas que se compilación en el tutorial, puede finalizar el programa fácilmente si no desea esperar, pero sería una mejor opción iniciar las descargas al mismo tiempo y dejar más rápido que descargas continúen sin esperar a que se retrasa.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You apply the <ph id="ph1">`Task.WhenAll`</ph> method to a collection of tasks.</source>
          <target state="translated">Aplicar el <ph id="ph1">`Task.WhenAll`</ph> método a una colección de tareas.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The application of <ph id="ph1">`WhenAll`</ph> returns a single task that isn’t complete until every task in the collection is completed.</source>
          <target state="translated">La aplicación de <ph id="ph1">`WhenAll`</ph> devuelve una única tarea que no está completa hasta que se complete cada tarea en la colección.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The tasks appear to run in parallel, but no additional threads are created.</source>
          <target state="translated">Se muestran las tareas ejecutar en paralelo, pero no hay subprocesos adicionales se crean.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The tasks can complete in any order.</source>
          <target state="translated">Pueden completar las tareas en cualquier orden.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following procedures describe extensions to the async applications that are developed in <bpt id="p1">[</bpt>Walkthrough: Accessing the Web by Using Async and Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>.</source>
          <target state="translated">Los procedimientos siguientes describen las extensiones para las aplicaciones asincrónicas que se desarrollan en <bpt id="p1">[</bpt>Tutorial: obtener acceso a la Web mediante el uso de Async y Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can develop the applications by either completing the walkthrough or downloading the code from <bpt id="p1">[</bpt>Developer Code Samples<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255191)</ept>.</source>
          <target state="translated">Puede desarrollar las aplicaciones realizar el tutorial o descargar el código de <bpt id="p1">[</bpt>ejemplos de código para desarrolladores<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255191)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To run the example, you must have Visual Studio 2012 or later installed on your computer.</source>
          <target state="translated">Para ejecutar el ejemplo, debe tener Visual Studio 2012 o posterior instalado en su equipo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To add Task.WhenAll to your GetURLContentsAsync solution</source>
          <target state="translated">Para agregar Task.WhenAll a la solución GetURLContentsAsync</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Add the <ph id="ph1">`ProcessURLAsync`</ph> method to the first application that's developed in <bpt id="p1">[</bpt>Walkthrough: Accessing the Web by Using Async and Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>.</source>
          <target state="translated">Agregue el <ph id="ph1">`ProcessURLAsync`</ph> método a la primera aplicación que se desarrolla en <bpt id="p1">[</bpt>Tutorial: obtener acceso a la Web mediante el uso de Async y Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you downloaded the code from  <bpt id="p1">[</bpt>Developer Code Samples<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255191)</ept>, open the AsyncWalkthrough project, and then add <ph id="ph1">`ProcessURLAsync`</ph> to the MainWindow.xaml.vb file.</source>
          <target state="translated">Si descargó el código de <bpt id="p1">[</bpt>ejemplos de código para desarrolladores<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255191)</ept>, abra el proyecto AsyncWalkthrough y, a continuación, agregue <ph id="ph1">`ProcessURLAsync`</ph> al archivo MainWindow.xaml.vb.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you developed the code by completing the walkthrough, add <ph id="ph1">`ProcessURLAsync`</ph> to the application that includes the <ph id="ph2">`GetURLContentsAsync`</ph> method.</source>
          <target state="translated">Si el código desarrollado por completar el tutorial, agregue <ph id="ph1">`ProcessURLAsync`</ph> a la aplicación que incluye el <ph id="ph2">`GetURLContentsAsync`</ph> método.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The MainWindow.xaml.vb file for this application is the first example in the "Complete Code Examples from the Walkthrough" section.</source>
          <target state="translated">El archivo MainWindow.xaml.vb para esta aplicación es el primer ejemplo en la sección "Código ejemplos desde el tutorial completo".</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ProcessURLAsync`</ph> method consolidates the actions in the body of the <ph id="ph2">`For Each`</ph> loop in <ph id="ph3">`SumPageSizesAsync`</ph> in the original walkthrough.</source>
          <target state="translated">El <ph id="ph1">`ProcessURLAsync`</ph> método consolida las acciones en el cuerpo de la <ph id="ph2">`For Each`</ph> un bucle en <ph id="ph3">`SumPageSizesAsync`</ph> en el tutorial original.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The method asynchronously downloads the contents of a specified website as a byte array, and then displays and returns the length of the byte array.</source>
          <target state="translated">El método de forma asincrónica descarga el contenido de un sitio Web especificado como una matriz de bytes y, a continuación, muestra y devuelve la longitud de la matriz de bytes.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Comment out or delete the <ph id="ph1">`For Each`</ph> loop in <ph id="ph2">`SumPageSizesAsync`</ph>, as the following code shows.</source>
          <target state="translated">Convierta en comentario o elimine la <ph id="ph1">`For Each`</ph> un bucle en <ph id="ph2">`SumPageSizesAsync`</ph>, como se muestra en el código siguiente.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Create a collection of tasks.</source>
          <target state="translated">Crear una colección de tareas.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following code defines a <bpt id="p1">[</bpt>query<ept id="p1">](http://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d)</ept> that, when executed by the &lt;xref:System.Linq.Enumerable.ToArray%2A&gt; method, creates a collection of tasks that download the contents of each website.</source>
          <target state="translated">El código siguiente define una <bpt id="p1">[</bpt>consulta<ept id="p1">](http://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d)</ept> que, cuando ejecute el &lt;xref:System.Linq.Enumerable.ToArray%2A&gt;método, se crea una colección de tareas que descargar el contenido de cada sitio Web.&lt;/xref:System.Linq.Enumerable.ToArray%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The tasks are started when the query is evaluated.</source>
          <target state="translated">Las tareas se inician cuando se evalúa la consulta.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Add the following code to method <ph id="ph1">`SumPageSizesAsync`</ph> after the declaration of <ph id="ph2">`urlList`</ph>.</source>
          <target state="translated">Agregue el código siguiente al método <ph id="ph1">`SumPageSizesAsync`</ph> después de la declaración de <ph id="ph2">`urlList`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Apply <ph id="ph1">`Task.WhenAll`</ph> to the collection of tasks, <ph id="ph2">`downloadTasks`</ph>.</source>
          <target state="translated">Aplicar <ph id="ph1">`Task.WhenAll`</ph> a la colección de tareas, <ph id="ph2">`downloadTasks`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Task.WhenAll`</ph> returns a single task that finishes when all the tasks in the collection of tasks have completed.</source>
          <target state="translated"><ph id="ph1">`Task.WhenAll`</ph>Devuelve una única tarea que finaliza cuando se hayan completado todas las tareas de la colección de tareas.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In the following example, the <ph id="ph1">`Await`</ph> expression awaits the completion of the single task that <ph id="ph2">`WhenAll`</ph> returns.</source>
          <target state="translated">En el ejemplo siguiente, la <ph id="ph1">`Await`</ph> expresión espera la finalización de la única tarea que <ph id="ph2">`WhenAll`</ph> devuelve.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The expression evaluates to an array of integers, where each integer is the length of a downloaded website.</source>
          <target state="translated">La expresión se evalúa como una matriz de enteros, donde cada entero es la longitud de un sitio Web descargado.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Add the following code to <ph id="ph1">`SumPageSizesAsync`</ph>, just after the code that you added in the previous step.</source>
          <target state="translated">Agregue el código siguiente a <ph id="ph1">`SumPageSizesAsync`</ph>, simplemente después del código que agregó en el paso anterior.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Finally, use the &lt;xref:System.Linq.Enumerable.Sum%2A&gt; method to calculate the sum of the lengths of all the websites.</source>
          <target state="translated">Por último, utilice la &lt;xref:System.Linq.Enumerable.Sum%2A&gt;método para calcular la suma de las longitudes de todas las páginas Web.&lt;/xref:System.Linq.Enumerable.Sum%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Add the following line to <ph id="ph1">`SumPageSizesAsync`</ph>.</source>
          <target state="translated">Agregue la línea siguiente a <ph id="ph1">`SumPageSizesAsync`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To add Task.WhenAll to the HttpClient.GetByteArrayAsync solution</source>
          <target state="translated">Para agregar Task.WhenAll a la solución HttpClient.GetByteArrayAsync</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Add the following version of <ph id="ph1">`ProcessURLAsync`</ph> to the second application that's developed in <bpt id="p1">[</bpt>Walkthrough: Accessing the Web by Using Async and Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>.</source>
          <target state="translated">Agregue la siguiente versión de <ph id="ph1">`ProcessURLAsync`</ph> a la segunda aplicación que se desarrolla en <bpt id="p1">[</bpt>Tutorial: obtener acceso a la Web mediante el uso de Async y Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you downloaded the code from <bpt id="p1">[</bpt>Developer Code Samples<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255191)</ept>, open the AsyncWalkthrough_HttpClient project, and then add <ph id="ph1">`ProcessURLAsync`</ph> to the MainWindow.xaml.vb file.</source>
          <target state="translated">Si descargó el código de <bpt id="p1">[</bpt>ejemplos de código para desarrolladores<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255191)</ept>, abra el proyecto AsyncWalkthrough_HttpClient y, a continuación, agregue <ph id="ph1">`ProcessURLAsync`</ph> al archivo MainWindow.xaml.vb.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If you developed the code by completing the walkthrough, add <ph id="ph1">`ProcessURLAsync`</ph> to the application that uses the <ph id="ph2">`HttpClient.GetByteArrayAsync`</ph> method.</source>
          <target state="translated">Si el código desarrollado por completar el tutorial, agregue <ph id="ph1">`ProcessURLAsync`</ph> a la aplicación que utiliza la <ph id="ph2">`HttpClient.GetByteArrayAsync`</ph> (método).</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The MainWindow.xaml.vb file for this application is the second example in the "Complete Code Examples from the Walkthrough" section.</source>
          <target state="translated">El archivo MainWindow.xaml.vb para esta aplicación es el segundo ejemplo de la sección "Código ejemplos desde el tutorial completo".</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ProcessURLAsync`</ph> method consolidates the actions in the body of the <ph id="ph2">`For Each`</ph> loop in <ph id="ph3">`SumPageSizesAsync`</ph> in the original walkthrough.</source>
          <target state="translated">El <ph id="ph1">`ProcessURLAsync`</ph> método consolida las acciones en el cuerpo de la <ph id="ph2">`For Each`</ph> un bucle en <ph id="ph3">`SumPageSizesAsync`</ph> en el tutorial original.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The method asynchronously downloads the contents of a specified website as a byte array, and then displays and returns the length of the byte array.</source>
          <target state="translated">El método de forma asincrónica descarga el contenido de un sitio Web especificado como una matriz de bytes y, a continuación, muestra y devuelve la longitud de la matriz de bytes.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The only difference from the <ph id="ph1">`ProcessURLAsync`</ph> method in the previous procedure is the use of the &lt;xref:System.Net.Http.HttpClient&gt; instance, <ph id="ph2">`client`</ph>.</source>
          <target state="translated">La única diferencia respecto a la <ph id="ph1">`ProcessURLAsync`</ph> método en el procedimiento anterior es el uso de la &lt;xref:System.Net.Http.HttpClient&gt;instancia, <ph id="ph2">`client`</ph>.&lt;/xref:System.Net.Http.HttpClient&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Comment out or delete the <ph id="ph1">`For Each`</ph> loop in <ph id="ph2">`SumPageSizesAsync`</ph>, as the following code shows.</source>
          <target state="translated">Convierta en comentario o elimine la <ph id="ph1">`For Each`</ph> un bucle en <ph id="ph2">`SumPageSizesAsync`</ph>, como se muestra en el código siguiente.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Define a <bpt id="p1">[</bpt>query<ept id="p1">](http://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d)</ept> that, when executed by the &lt;xref:System.Linq.Enumerable.ToArray%2A&gt; method, creates a collection of tasks that download the contents of each website.</source>
          <target state="translated">Definir una <bpt id="p1">[</bpt>consulta<ept id="p1">](http://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d)</ept> que, cuando ejecute el &lt;xref:System.Linq.Enumerable.ToArray%2A&gt;método, se crea una colección de tareas que descargar el contenido de cada sitio Web.&lt;/xref:System.Linq.Enumerable.ToArray%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The tasks are started when the query is evaluated.</source>
          <target state="translated">Las tareas se inician cuando se evalúa la consulta.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Add the following code to method <ph id="ph1">`SumPageSizesAsync`</ph> after the declaration of <ph id="ph2">`client`</ph> and <ph id="ph3">`urlList`</ph>.</source>
          <target state="translated">Agregue el código siguiente al método <ph id="ph1">`SumPageSizesAsync`</ph> después de la declaración de <ph id="ph2">`client`</ph> y <ph id="ph3">`urlList`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Next, apply <ph id="ph1">`Task.WhenAll`</ph> to the collection of tasks, <ph id="ph2">`downloadTasks`</ph>.</source>
          <target state="translated">A continuación, aplique <ph id="ph1">`Task.WhenAll`</ph> a la colección de tareas, <ph id="ph2">`downloadTasks`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Task.WhenAll`</ph> returns a single task that finishes when all the tasks in the collection of tasks have completed.</source>
          <target state="translated"><ph id="ph1">`Task.WhenAll`</ph>Devuelve una única tarea que finaliza cuando se hayan completado todas las tareas de la colección de tareas.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In the following example, the <ph id="ph1">`Await`</ph> expression awaits the completion of the single task that <ph id="ph2">`WhenAll`</ph> returns.</source>
          <target state="translated">En el ejemplo siguiente, la <ph id="ph1">`Await`</ph> expresión espera la finalización de la única tarea que <ph id="ph2">`WhenAll`</ph> devuelve.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When complete, the <ph id="ph1">`Await`</ph> expression evaluates to an array of integers, where each integer is the length of a downloaded website.</source>
          <target state="translated">Cuando haya finalizado, el <ph id="ph1">`Await`</ph> expresión se evalúa como una matriz de enteros, donde cada entero es la longitud de un sitio Web descargado.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Add the following code to <ph id="ph1">`SumPageSizesAsync`</ph>, just after the code that you added in the previous step.</source>
          <target state="translated">Agregue el código siguiente a <ph id="ph1">`SumPageSizesAsync`</ph>, simplemente después del código que agregó en el paso anterior.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Finally, use the &lt;xref:System.Linq.Enumerable.Sum%2A&gt; method to get the sum of the lengths of all the websites.</source>
          <target state="translated">Por último, utilice la &lt;xref:System.Linq.Enumerable.Sum%2A&gt;método para obtener la suma de las longitudes de todas las páginas Web.&lt;/xref:System.Linq.Enumerable.Sum%2A&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Add the following line to <ph id="ph1">`SumPageSizesAsync`</ph>.</source>
          <target state="translated">Agregue la línea siguiente a <ph id="ph1">`SumPageSizesAsync`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To test the Task.WhenAll solutions</source>
          <target state="translated">Para probar las soluciones Task.WhenAll</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For either solution, choose the F5 key to run the program, and then choose the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> button.</source>
          <target state="translated">Para cualquier solución, elija la tecla F5 para ejecutar el programa y, a continuación, elija la <bpt id="p1">**</bpt>iniciar<ept id="p1">**</ept> botón.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The output should resemble the output from the async solutions in <bpt id="p1">[</bpt>Walkthrough: Accessing the Web by Using Async and Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>.</source>
          <target state="translated">El resultado debe ser similar de las soluciones de async en <bpt id="p1">[</bpt>Tutorial: obtener acceso a la Web mediante el uso de Async y Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>However, notice that the websites appear in a different order each time.</source>
          <target state="translated">Sin embargo, tenga en cuenta que los sitios Web aparecen en un orden diferente cada vez.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following code shows the extensions to the project that uses the <ph id="ph1">`GetURLContentsAsync`</ph> method to download content from the web.</source>
          <target state="translated">El código siguiente muestra las extensiones para el proyecto que usa el <ph id="ph1">`GetURLContentsAsync`</ph> método para descargar el contenido de la web.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The following code shows the extensions to the project that uses method <ph id="ph1">`HttpClient.GetByteArrayAsync`</ph> to download content from the web.</source>
          <target state="translated">El código siguiente muestra las extensiones para el proyecto que usa el método <ph id="ph1">`HttpClient.GetByteArrayAsync`</ph> para descargar el contenido de la web.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vea también</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Threading.Tasks.Task.WhenAll%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Threading.Tasks.Task.WhenAll%2A?displayProperty=fullName&gt;&lt;/xref:System.Threading.Tasks.Task.WhenAll%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Walkthrough: Accessing the Web by Using Async and Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Tutorial: Acceso a la Web usando Async y Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>