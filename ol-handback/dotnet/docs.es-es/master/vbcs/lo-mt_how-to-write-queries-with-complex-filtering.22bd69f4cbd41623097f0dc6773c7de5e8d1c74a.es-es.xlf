<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e46d07674d901aef77db04d63314080a4ca68801</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\how-to-write-queries-with-complex-filtering.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f1e766c7efdedbcea771a03443b6e8bae9a430d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">91fad92672faa63e515018fffd2ac2d05283952a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Write Queries with Complex Filtering (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Cómo: escribir consultas con filtrado complejo (Visual Basic) | Documentos de Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Write Queries with Complex Filtering (Visual Basic)</source>
          <target state="translated">Cómo: escribir consultas con filtrado complejo (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Sometimes you want to write LINQ to XML queries with complex filters.</source>
          <target state="translated">Es posible que desee escribir consultas LINQ to XML con filtros complejos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, you might have to find all elements that have a child element with a particular name and value.</source>
          <target state="translated">Por ejemplo, quizás debe buscar todos los elementos que tienen un elemento secundario con un valor y un nombre específicos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic gives an example of writing a query with complex filtering.</source>
          <target state="translated">En este tema se proporciona un ejemplo de escritura de una consulta con un filtrado complejo.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This example shows how to find all <ph id="ph1">`PurchaseOrder`</ph> elements that have a child <ph id="ph2">`Address`</ph> element that has a <ph id="ph3">`Type`</ph> attribute equal to "Shipping" and a child <ph id="ph4">`State`</ph> element equal to "NY".</source>
          <target state="translated">En este ejemplo se muestra cómo buscar todos los elementos <ph id="ph1">`PurchaseOrder`</ph> que tienen un elemento <ph id="ph2">`Address`</ph> secundario que tiene un atributo <ph id="ph3">`Type`</ph> igual a "Shipping" (envío) y un elemento <ph id="ph4">`State`</ph> secundario igual a "NY".</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It uses a nested query in the <ph id="ph1">`Where`</ph> clause, and the <ph id="ph2">`Any`</ph> operator returns <ph id="ph3">`True`</ph> if the collection has any elements in it.</source>
          <target state="translated">Utiliza una consulta anidada en la cláusula <ph id="ph1">`Where`</ph> y el operador <ph id="ph2">`Any`</ph> devuelve <ph id="ph3">`True`</ph> si la colección tiene elementos en ella.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This example uses the following XML document: <bpt id="p1">[</bpt>Sample XML File: Multiple Purchase Orders (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-multiple-purchase-orders-linq-to-xml.md)</ept>.</source>
          <target state="translated">Este ejemplo utiliza el siguiente documento XML: <bpt id="p1">[</bpt>archivo XML de muestra: varios pedidos de compra (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-multiple-purchase-orders-linq-to-xml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information about the <ph id="ph1">`Any`</ph> operator, see <bpt id="p1">[</bpt>Quantifier Operations (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/quantifier-operations.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de la <ph id="ph1">`Any`</ph> operador, consulte <bpt id="p1">[</bpt>operaciones cuantificadoras (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/quantifier-operations.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This code produces the following output:</source>
          <target state="translated">Este código genera el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following example shows the same query for XML that is in a namespace.</source>
          <target state="translated">El siguiente ejemplo muestra la misma consulta sobre un XML que se encuentra en un espacio de nombres.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>trabajar con espacios de nombres XML (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This example uses the following XML document: <bpt id="p1">[</bpt>Sample XML File: Multiple Purchase Orders in a Namespace<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-multiple-purchase-orders-in-a-namespace.md)</ept>.</source>
          <target state="translated">Este ejemplo utiliza el siguiente documento XML: <bpt id="p1">[</bpt>archivo XML de muestra: varios pedidos de compra en un Namespace<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-multiple-purchase-orders-in-a-namespace.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This code produces the following output:</source>
          <target state="translated">Este código genera el siguiente resultado:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vea también</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Linq.XElement.Attribute%2A&gt;</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XElement.Attribute%2A&gt;&lt;/xref:System.Xml.Linq.XElement.Attribute%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Linq.XContainer.Elements%2A&gt;</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XContainer.Elements%2A&gt;&lt;/xref:System.Xml.Linq.XContainer.Elements%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Basic Queries (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/basic-queries-linq-to-xml.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Consultas básicas (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/basic-queries-linq-to-xml.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XML Child Axis Property<ept id="p1">](../../../../visual-basic/language-reference/xml-axis/xml-child-axis-property.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Propiedad de eje secundario XML<ept id="p1">](../../../../visual-basic/language-reference/xml-axis/xml-child-axis-property.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XML Attribute Axis Property<ept id="p1">](../../../../visual-basic/language-reference/xml-axis/xml-attribute-axis-property.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Propiedad Axis para atributo XML<ept id="p1">](../../../../visual-basic/language-reference/xml-axis/xml-attribute-axis-property.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XML Value Property<ept id="p1">](../../../../visual-basic/language-reference/xml-axis/xml-value-property.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Propiedad Value de XML<ept id="p1">](../../../../visual-basic/language-reference/xml-axis/xml-value-property.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Projection Operations (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/projection-operations.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Operaciones de proyección (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/projection-operations.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Quantifier Operations (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/quantifier-operations.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Operaciones cuantificadoras (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/quantifier-operations.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>