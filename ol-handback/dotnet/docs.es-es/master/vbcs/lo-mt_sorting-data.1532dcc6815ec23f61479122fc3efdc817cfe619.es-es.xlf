<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d6a009573f9ff3eba71875945128ee6cd37ac37b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\sorting-data.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c7bba3a58c787f5289ea196dc1c4d8f14a418b25</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0bc50fd0d760347e4e3037770365cf9e446673f1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Sorting Data (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Ordenar datos (Visual Basic) | Documentos de Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Sorting Data (Visual Basic)</source>
          <target state="translated">Ordenar datos (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A sorting operation orders the elements of a sequence based on one or more attributes.</source>
          <target state="translated">Una operación de ordenación ordena los elementos de una secuencia según uno o más atributos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The first sort criterion performs a primary sort on the elements.</source>
          <target state="translated">El primer criterio de ordenación realiza una ordenación primaria de los elementos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By specifying a second sort criterion, you can sort the elements within each primary sort group.</source>
          <target state="translated">Al especificar un segundo criterio de ordenación, se pueden ordenar los elementos dentro de cada grupo de ordenación primaria.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The following illustration shows the results of an alphabetical sort operation on a sequence of characters.</source>
          <target state="translated">La ilustración siguiente muestra los resultados de una operación de ordenación alfabética en una secuencia de caracteres.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>LINQ Sorting Operation<ept id="p1">]</ept><bpt id="p2">(../../../../csharp/programming-guide/concepts/linq/media/linq_ordering.png "</bpt>LINQ_Ordering<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Operación de ordenación de LINQ<ept id="p1">]</ept><bpt id="p2">(../../../../csharp/programming-guide/concepts/linq/media/linq_ordering.png "</bpt>LINQ_Ordering<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The standard query operator methods that sort data are listed in the following section.</source>
          <target state="translated">Los métodos de operador de consulta estándar que ordenan los datos se muestran en la sección siguiente.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Métodos</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Method Name</source>
          <target state="translated">Nombre del método</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Visual Basic Query Expression Syntax</source>
          <target state="translated">Sintaxis de expresiones de consulta de Visual Basic</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>More Information</source>
          <target state="translated">Más información</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>OrderBy</source>
          <target state="translated">OrderBy</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Sorts values in ascending order.</source>
          <target state="translated">Ordena los valores en orden ascendente.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Enumerable.OrderBy%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Linq.Enumerable.OrderBy%2A?displayProperty=fullName&gt;&lt;/xref:System.Linq.Enumerable.OrderBy%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Queryable.OrderBy%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Linq.Queryable.OrderBy%2A?displayProperty=fullName&gt;&lt;/xref:System.Linq.Queryable.OrderBy%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>OrderByDescending</source>
          <target state="translated">OrderByDescending</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Sorts values in descending order.</source>
          <target state="translated">Ordena los valores en orden descendente.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Enumerable.OrderByDescending%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Linq.Enumerable.OrderByDescending%2A?displayProperty=fullName&gt;&lt;/xref:System.Linq.Enumerable.OrderByDescending%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Queryable.OrderByDescending%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Linq.Queryable.OrderByDescending%2A?displayProperty=fullName&gt;&lt;/xref:System.Linq.Queryable.OrderByDescending%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>ThenBy</source>
          <target state="translated">ThenBy</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Performs a secondary sort in ascending order.</source>
          <target state="translated">Realiza a una ordenación secundaria de forma ascendente.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Enumerable.ThenBy%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Linq.Enumerable.ThenBy%2A?displayProperty=fullName&gt;&lt;/xref:System.Linq.Enumerable.ThenBy%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Queryable.ThenBy%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Linq.Queryable.ThenBy%2A?displayProperty=fullName&gt;&lt;/xref:System.Linq.Queryable.ThenBy%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>ThenByDescending</source>
          <target state="translated">ThenByDescending</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Performs a secondary sort in descending order.</source>
          <target state="translated">Realiza a una ordenación secundaria en orden descendente.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Enumerable.ThenByDescending%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Linq.Enumerable.ThenByDescending%2A?displayProperty=fullName&gt;&lt;/xref:System.Linq.Enumerable.ThenByDescending%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Queryable.ThenByDescending%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Linq.Queryable.ThenByDescending%2A?displayProperty=fullName&gt;&lt;/xref:System.Linq.Queryable.ThenByDescending%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Reverse</source>
          <target state="translated">Reverse</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Reverses the order of the elements in a collection.</source>
          <target state="translated">Invierte el orden de los elementos de una colección.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
          <target state="translated">No es aplicable.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Enumerable.Reverse%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Linq.Enumerable.Reverse%2A?displayProperty=fullName&gt;&lt;/xref:System.Linq.Enumerable.Reverse%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Queryable.Reverse%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Linq.Queryable.Reverse%2A?displayProperty=fullName&gt;&lt;/xref:System.Linq.Queryable.Reverse%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Query Expression Syntax Examples</source>
          <target state="translated">Ejemplos de sintaxis de expresiones de consulta</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Primary Sort Examples</source>
          <target state="translated">Ejemplos de ordenación principal</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Primary Ascending Sort</source>
          <target state="translated">Ordenación principal ascendente</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use the <ph id="ph1">`Order By`</ph> clause in a LINQ query to sort the strings in an array by string length, in ascending order.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el <ph id="ph1">`Order By`</ph> cláusula en una consulta LINQ para ordenar las cadenas en una matriz por longitud de cadena, en orden ascendente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Primary Descending Sort</source>
          <target state="translated">Ordenación principal descendente</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The next example demonstrates how to use the <ph id="ph1">`Order By Descending`</ph> clause in a LINQ query to sort the strings by their first letter, in descending order.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el <ph id="ph1">`Order By Descending`</ph> cláusula en una consulta LINQ para ordenar las cadenas por su primera letra, en orden descendente.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Secondary Sort Examples</source>
          <target state="translated">Ejemplos de ordenación secundaria</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Secondary Ascending Sort</source>
          <target state="translated">Ordenación secundaria ascendente</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use the <ph id="ph1">`Order By`</ph> clause in a LINQ query to perform a primary and secondary sort of the strings in an array.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el <ph id="ph1">`Order By`</ph> cláusula en una consulta LINQ para realizar una ordenación primaria y secundaria de las cadenas en una matriz.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The strings are sorted primarily by length and secondarily by the first letter of the string, both in ascending order.</source>
          <target state="translated">Las cadenas se ordenan primero por longitud y después por la primera letra de la cadena, en orden ascendente.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Secondary Descending Sort</source>
          <target state="translated">Ordenación secundaria descendente</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The next example demonstrates how to use the <ph id="ph1">`Order By Descending`</ph> clause in a LINQ query to perform a primary sort, in ascending order, and a secondary sort, in descending order.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el <ph id="ph1">`Order By Descending`</ph> cláusula en una consulta LINQ para realizar una ordenación primaria, en orden ascendente y una ordenación secundaria, en orden descendente.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The strings are sorted primarily by length and secondarily by the first letter of the string.</source>
          <target state="translated">Las cadenas se ordenan primero por longitud y después por la primera letra de la cadena.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vea también</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq&gt;</source>
          <target state="translated">&lt;xref:System.Linq&gt;&lt;/xref:System.Linq&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Standard Query Operators Overview (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/standard-query-operators-overview.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Información general sobre operadores de consulta estándar (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/standard-query-operators-overview.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Order By Clause<ept id="p1">](../../../../visual-basic/language-reference/queries/order-by-clause.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Cláusula Order By<ept id="p1">](../../../../visual-basic/language-reference/queries/order-by-clause.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Sort Query Results<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/how-to-sort-query-results-by-using-linq.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Cómo: ordenar los resultados de la consulta<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/how-to-sort-query-results-by-using-linq.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Sort or Filter Text Data by Any Word or Field (LINQ) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Cómo: ordenar o filtrar los datos de texto por palabra o campo (LINQ) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>