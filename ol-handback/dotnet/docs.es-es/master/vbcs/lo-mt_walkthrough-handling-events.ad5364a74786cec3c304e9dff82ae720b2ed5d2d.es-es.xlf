<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17cd0bddbe8c89cf60e19f3f2af6f448ad465d70</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\events\walkthrough-handling-events.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b070abda38f3884f5c923acc9d71428f33a67838</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8df56a465efeaf7e1d10a5720eca18e69a182a1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Handling Events (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Control de eventos (Visual Basic) | Documentos de Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Handling Events (Visual Basic)</source>
          <target state="translated">Tutorial: Controlar eventos (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This is the second of two topics that demonstrate how to work with events.</source>
          <target state="translated">Éste es el segundo de los dos temas que muestran cómo trabajar con eventos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The first topic, <bpt id="p1">[</bpt>Walkthrough: Declaring and Raising Events<ept id="p1">](../../../../visual-basic/programming-guide/language-features/events/walkthrough-declaring-and-raising-events.md)</ept>, shows how to declare and raise events.</source>
          <target state="translated">El primer tema, <bpt id="p1">[</bpt>Tutorial: declarar y provocar eventos<ept id="p1">](../../../../visual-basic/programming-guide/language-features/events/walkthrough-declaring-and-raising-events.md)</ept>, se muestra cómo declarar y provocar eventos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This section uses the form and class from that walkthrough to show how to handle events when they take place.</source>
          <target state="translated">En esta sección se utiliza el formulario y la clase del tutorial para mostrar cómo controlar eventos cuando tienen lugar.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Widget`</ph> class example uses traditional event-handling statements.</source>
          <target state="translated">La <ph id="ph1">`Widget`</ph> clase ejemplo utiliza instrucciones tradicionales de control de eventos.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> provides other techniques for working with events.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>proporciona otras técnicas para trabajar con eventos.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>As an exercise, you can modify this example to use the <ph id="ph1">`AddHandler`</ph> and <ph id="ph2">`Handles`</ph> statements.</source>
          <target state="translated">Como ejercicio, puede modificar este ejemplo para utilizar el <ph id="ph1">`AddHandler`</ph> y <ph id="ph2">`Handles`</ph> instrucciones.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To handle the PercentDone event of the Widget class</source>
          <target state="translated">Para controlar el evento PercentDone de la clase Widget</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Place the following code in <ph id="ph1">`Form1`</ph>:</source>
          <target state="translated">Coloque el código siguiente en <ph id="ph1">`Form1`</ph>:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnWalkthroughDeclaringAndRaisingEvents#4<ept id="p2">](../../../../visual-basic/programming-guide/language-features/events/codesnippet/VisualBasic/walkthrough-handling-events_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnWalkthroughDeclaringAndRaisingEvents Nº&amp;4;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/events/codesnippet/VisualBasic/walkthrough-handling-events_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WithEvents`</ph> keyword specifies that the variable <ph id="ph2">`mWidget`</ph> is used to handle an object's events.</source>
          <target state="translated">El <ph id="ph1">`WithEvents`</ph> palabra clave especifica que la variable <ph id="ph2">`mWidget`</ph> se utiliza para controlar eventos de un objeto.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You specify the kind of object by supplying the name of the class from which the object will be created.</source>
          <target state="translated">Especifique el tipo de objeto proporcionando el nombre de la clase desde la que se creará el objeto.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The variable <ph id="ph1">`mWidget`</ph> is declared in <ph id="ph2">`Form1`</ph> because <ph id="ph3">`WithEvents`</ph> variables must be class-level.</source>
          <target state="translated">La variable <ph id="ph1">`mWidget`</ph> se declara en <ph id="ph2">`Form1`</ph> porque <ph id="ph3">`WithEvents`</ph> variables deben ser de nivel de clase.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This is true regardless of the type of class you place them in.</source>
          <target state="translated">Esto es cierto independientemente del tipo de clase en que colocarlos.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The variable <ph id="ph1">`mblnCancel`</ph> is used to cancel the <ph id="ph2">`LongTask`</ph> method.</source>
          <target state="translated">La variable <ph id="ph1">`mblnCancel`</ph> se utiliza para cancelar la <ph id="ph2">`LongTask`</ph> método.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Writing Code to Handle an Event</source>
          <target state="translated">Escribir código para controlar un evento</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>As soon as you declare a variable using <ph id="ph1">`WithEvents`</ph>, the variable name appears in the left drop-down list of the class's <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept>.</source>
          <target state="translated">En cuanto se declara una variable utilizando <ph id="ph1">`WithEvents`</ph>, el nombre de variable aparece en la lista desplegable izquierda de la clase <bpt id="p1">**</bpt>Editor de código<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When you select <ph id="ph1">`mWidget`</ph>, the <ph id="ph2">`Widget`</ph> class's events appear in the right drop-down list.</source>
          <target state="translated">Al seleccionar <ph id="ph1">`mWidget`</ph>, el <ph id="ph2">`Widget`</ph> eventos de clase aparecen en la lista desplegable derecha.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Selecting an event displays the corresponding event procedure, with the prefix <ph id="ph1">`mWidget`</ph> and an underscore.</source>
          <target state="translated">Al seleccionar un evento muestra el procedimiento de evento correspondiente, con el prefijo <ph id="ph1">`mWidget`</ph> y un carácter de subrayado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>All the event procedures associated with a <ph id="ph1">`WithEvents`</ph> variable are given the variable name as a prefix.</source>
          <target state="translated">Todos los procedimientos de evento asociados a un <ph id="ph1">`WithEvents`</ph> variable reciben el nombre de variable como prefijo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To handle an event</source>
          <target state="translated">Para controlar un evento</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Select <ph id="ph1">`mWidget`</ph> from the left drop-down list in the <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept>.</source>
          <target state="translated">Seleccione <ph id="ph1">`mWidget`</ph> en la lista desplegable izquierda en el <bpt id="p1">**</bpt>Editor de código<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Select the <ph id="ph1">`PercentDone`</ph> event from the right drop-down list.</source>
          <target state="translated">Seleccione las <ph id="ph1">`PercentDone`</ph> eventos de la lista desplegable derecha.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept> opens the <ph id="ph1">`mWidget_PercentDone`</ph> event procedure.</source>
          <target state="translated">El <bpt id="p1">**</bpt>Editor de código<ept id="p1">**</ept> abre el <ph id="ph1">`mWidget_PercentDone`</ph> el procedimiento de evento.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept> is useful, but not required, for inserting new event handlers.</source>
          <target state="translated">El <bpt id="p1">**</bpt>Editor de código<ept id="p1">**</ept> es útil, aunque no necesario, para insertar los nuevos controladores de eventos.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In this walkthrough, it is more direct to just copy the event handlers directly into your code.</source>
          <target state="translated">En este tutorial, es más directo copiar simplemente los controladores de eventos directamente en el código.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Add the following code to the <ph id="ph1">`mWidget_PercentDone`</ph> event handler:</source>
          <target state="translated">Agregue el código siguiente al controlador de eventos <ph id="ph1">`mWidget_PercentDone`</ph>:</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnWalkthroughDeclaringAndRaisingEvents#5<ept id="p2">](../../../../visual-basic/programming-guide/language-features/events/codesnippet/VisualBasic/walkthrough-handling-events_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnWalkthroughDeclaringAndRaisingEvents&amp;#5;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/events/codesnippet/VisualBasic/walkthrough-handling-events_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Whenever the <ph id="ph1">`PercentDone`</ph> event is raised, the event procedure displays the percent complete in a <ph id="ph2">`Label`</ph> control.</source>
          <target state="translated">Siempre que el <ph id="ph1">`PercentDone`</ph> provoca el evento, el procedimiento de evento muestra el porcentaje completo en un <ph id="ph2">`Label`</ph> control.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`DoEvents`</ph> method allows the label to repaint, and also gives the user the opportunity to click the <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button.</source>
          <target state="translated">El <ph id="ph1">`DoEvents`</ph> método permite a dibujar, la etiqueta y también ofrece al usuario la oportunidad de hacer clic en el <bpt id="p1">**</bpt>cancelar<ept id="p1">**</ept> botón.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Add the following code for the <ph id="ph1">`Button2_Click`</ph> event handler:</source>
          <target state="translated">Agregue el siguiente código para el <ph id="ph1">`Button2_Click`</ph> controlador de eventos:</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnWalkthroughDeclaringAndRaisingEvents#6<ept id="p2">](../../../../visual-basic/programming-guide/language-features/events/codesnippet/VisualBasic/walkthrough-handling-events_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnWalkthroughDeclaringAndRaisingEvents&amp;6;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/events/codesnippet/VisualBasic/walkthrough-handling-events_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If the user clicks the <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button while <ph id="ph1">`LongTask`</ph> is running, the <ph id="ph2">`Button2_Click`</ph> event is executed as soon as the <ph id="ph3">`DoEvents`</ph> statement allows event processing to occur.</source>
          <target state="translated">Si el usuario hace clic en el <bpt id="p1">**</bpt>cancelar<ept id="p1">**</ept> botón mientras <ph id="ph1">`LongTask`</ph> se está ejecutando, el <ph id="ph2">`Button2_Click`</ph> evento se ejecuta tan pronto como el <ph id="ph3">`DoEvents`</ph> instrucción permite el procesamiento de eventos que se produzcan.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The class-level variable <ph id="ph1">`mblnCancel`</ph> is set to <ph id="ph2">`True`</ph>, and the <ph id="ph3">`mWidget_PercentDone`</ph> event then tests it and sets the <ph id="ph4">`ByRef Cancel`</ph> argument to <ph id="ph5">`True`</ph>.</source>
          <target state="translated">La variable de nivel de clase <ph id="ph1">`mblnCancel`</ph> está establecido en <ph id="ph2">`True`</ph>y el <ph id="ph3">`mWidget_PercentDone`</ph> evento lo comprueba luego y establece el <ph id="ph4">`ByRef Cancel`</ph> argumento <ph id="ph5">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Connecting a WithEvents Variable to an Object</source>
          <target state="translated">Conectar la Variable WithEvents a un objeto</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Form1`</ph> is now set up to handle a <ph id="ph2">`Widget`</ph> object's events.</source>
          <target state="translated"><ph id="ph1">`Form1`</ph>Ahora está configurado para controlar un <ph id="ph2">`Widget`</ph> eventos del objeto.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>All that remains is to find a <ph id="ph1">`Widget`</ph> somewhere.</source>
          <target state="translated">Todo lo que queda es encontrar un <ph id="ph1">`Widget`</ph> en algún lugar.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When you declare a variable <ph id="ph1">`WithEvents`</ph> at design time, no object is associated with it.</source>
          <target state="translated">Cuando se declara una variable <ph id="ph1">`WithEvents`</ph> en tiempo de diseño no tiene asociado ningún objeto.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`WithEvents`</ph> variable is just like any other object variable.</source>
          <target state="translated">Un <ph id="ph1">`WithEvents`</ph> variable es igual que cualquier otra variable de objeto.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You have to create an object and assign a reference to it with the <ph id="ph1">`WithEvents`</ph> variable.</source>
          <target state="translated">Tiene que crear un objeto y asignar una referencia a él con el <ph id="ph1">`WithEvents`</ph> variable.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To create an object and assign a reference to it</source>
          <target state="translated">Para crear un objeto y asignar una referencia a ella</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>(Form1 Events)<ept id="p1">**</ept> from the left drop-down list in the <bpt id="p2">**</bpt>Code Editor<ept id="p2">**</ept>.</source>
          <target state="translated">Seleccione <bpt id="p1">**</bpt>(eventos Form1)<ept id="p1">**</ept> en la lista desplegable izquierda en el <bpt id="p2">**</bpt>Editor de código<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Select the <ph id="ph1">`Load`</ph> event from the right drop-down list.</source>
          <target state="translated">Seleccione las <ph id="ph1">`Load`</ph> eventos de la lista desplegable derecha.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept> opens the <ph id="ph1">`Form1_Load`</ph> event procedure.</source>
          <target state="translated">El <bpt id="p1">**</bpt>Editor de código<ept id="p1">**</ept> abre el <ph id="ph1">`Form1_Load`</ph> el procedimiento de evento.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Add the following code for the <ph id="ph1">`Form1_Load`</ph> event procedure to create the <ph id="ph2">`Widget`</ph>:</source>
          <target state="translated">Agregue el siguiente código para el <ph id="ph1">`Form1_Load`</ph> el procedimiento de evento para crear el <ph id="ph2">`Widget`</ph>:</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnWalkthroughDeclaringAndRaisingEvents#7<ept id="p2">](../../../../visual-basic/programming-guide/language-features/events/codesnippet/VisualBasic/walkthrough-handling-events_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnWalkthroughDeclaringAndRaisingEvents&amp;#7;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/events/codesnippet/VisualBasic/walkthrough-handling-events_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When this code executes, <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> creates a <ph id="ph2">`Widget`</ph> object and connects its events to the event procedures associated with <ph id="ph3">`mWidget`</ph>.</source>
          <target state="translated">Cuando se ejecuta este código, <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> crea un <ph id="ph2">`Widget`</ph> de objetos y conecta sus eventos a los procedimientos de evento asociados con <ph id="ph3">`mWidget`</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>From that point on, whenever the <ph id="ph1">`Widget`</ph> raises its <ph id="ph2">`PercentDone`</ph> event, the <ph id="ph3">`mWidget_PercentDone`</ph> event procedure is executed.</source>
          <target state="translated">Desde ese punto, siempre que el <ph id="ph1">`Widget`</ph> genera su <ph id="ph2">`PercentDone`</ph> evento, el <ph id="ph3">`mWidget_PercentDone`</ph> se ejecuta el procedimiento de evento.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>To call the LongTask method</source>
          <target state="translated">Para llamar al método LongTask</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Add the following code to the <ph id="ph1">`Button1_Click`</ph> event handler:</source>
          <target state="translated">Agregue el código siguiente al controlador de eventos <ph id="ph1">`Button1_Click`</ph>:</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnWalkthroughDeclaringAndRaisingEvents#8<ept id="p2">](../../../../visual-basic/programming-guide/language-features/events/codesnippet/VisualBasic/walkthrough-handling-events_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnWalkthroughDeclaringAndRaisingEvents Nº&amp;8;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/events/codesnippet/VisualBasic/walkthrough-handling-events_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Before the <ph id="ph1">`LongTask`</ph> method is called, the label that displays the percent complete must be initialized, and the class-level <ph id="ph2">`Boolean`</ph> flag for canceling the method must be set to <ph id="ph3">`False`</ph>.</source>
          <target state="translated">Antes de la <ph id="ph1">`LongTask`</ph> se llama el método, la etiqueta que muestra el porcentaje completo debe inicializarse y el nivel de clase <ph id="ph2">`Boolean`</ph> marca para cancelar el método debe establecerse en <ph id="ph3">`False`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`LongTask`</ph> is called with a task duration of 12.2 seconds.</source>
          <target state="translated"><ph id="ph1">`LongTask`</ph>se llama con una duración de tarea de 12,2 segundos.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`PercentDone`</ph> event is raised once every one-third of a second.</source>
          <target state="translated">El <ph id="ph1">`PercentDone`</ph> evento se desencadena una vez cada tercio de segundo.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Each time the event is raised, the <ph id="ph1">`mWidget_PercentDone`</ph> event procedure is executed.</source>
          <target state="translated">Cada vez que se genera el evento, el <ph id="ph1">`mWidget_PercentDone`</ph> se ejecuta el procedimiento de evento.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`LongTask`</ph> is done, <ph id="ph2">`mblnCancel`</ph> is tested to see if <ph id="ph3">`LongTask`</ph> ended normally, or if it stopped because <ph id="ph4">`mblnCancel`</ph> was set to <ph id="ph5">`True`</ph>.</source>
          <target state="translated">Cuando <ph id="ph1">`LongTask`</ph> se realiza, <ph id="ph2">`mblnCancel`</ph> se prueba para ver si <ph id="ph3">`LongTask`</ph> finalizó normalmente, o si se ha detenido porque <ph id="ph4">`mblnCancel`</ph> se estableció en <ph id="ph5">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The percent complete is updated only in the former case.</source>
          <target state="translated">Sólo en el caso anterior, se actualiza el porcentaje completado.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>To run the program</source>
          <target state="translated">Para ejecutar el programa</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Press F5 to put the project in run mode.</source>
          <target state="translated">Presione F5 para poner el proyecto en modo de ejecución.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Start Task<ept id="p1">**</ept> button.</source>
          <target state="translated">Haga clic en el <bpt id="p1">**</bpt>Iniciar tarea<ept id="p1">**</ept> botón.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Each time the <ph id="ph1">`PercentDone`</ph> event is raised, the label is updated with the percentage of the task that is complete.</source>
          <target state="translated">Cada vez que la <ph id="ph1">`PercentDone`</ph> provoca el evento, se actualiza la etiqueta con el porcentaje de la tarea que se ha completado.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button to stop the task.</source>
          <target state="translated">Haga clic en el <bpt id="p1">**</bpt>cancelar<ept id="p1">**</ept> botón para detener la tarea.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Notice that the appearance of the <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button does not change immediately when you click it.</source>
          <target state="translated">Tenga en cuenta que la apariencia de la <bpt id="p1">**</bpt>cancelar<ept id="p1">**</ept> botón no cambia inmediatamente al hacer clic.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Click`</ph> event cannot happen until the <ph id="ph2">`My.Application.DoEvents`</ph> statement allows event processing.</source>
          <target state="translated">El <ph id="ph1">`Click`</ph> eventos no pueden suceder hasta el <ph id="ph2">`My.Application.DoEvents`</ph> instrucción permite el procesamiento de eventos.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Application.DoEvents`</ph> method does not process events in exactly the same way as the form does.</source>
          <target state="translated">El <ph id="ph1">`My.Application.DoEvents`</ph> método procesa los eventos exactamente del mismo modo que el formulario.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For example, in this walkthrough, you must click the <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button twice.</source>
          <target state="translated">Por ejemplo, en este tutorial, debe hacer clic el <bpt id="p1">**</bpt>cancelar<ept id="p1">**</ept> botón dos veces.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To allow the form to handle the events directly, you can use multithreading.</source>
          <target state="translated">Para permitir que el formulario controle directamente los eventos, puede usar multithreading.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Threading<ept id="p1">](http://msdn.microsoft.com/library/552f6c68-dbdb-4327-ae36-32cf9063d88c)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>subprocesos<ept id="p1">](http://msdn.microsoft.com/library/552f6c68-dbdb-4327-ae36-32cf9063d88c)</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>You may find it instructive to run the program with F11 and step through the code a line at a time.</source>
          <target state="translated">Quizá resulte instructivo ejecutar el programa con F11 y recorrer el código de una línea cada vez.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>You can clearly see how execution enters <ph id="ph1">`LongTask`</ph>, and then briefly re-enters <ph id="ph2">`Form1`</ph> each time the <ph id="ph3">`PercentDone`</ph> event is raised.</source>
          <target state="translated">Puede ver claramente cómo la ejecución escribe <ph id="ph1">`LongTask`</ph>y, a continuación, brevemente vuelve a entrar <ph id="ph2">`Form1`</ph> cada vez que la <ph id="ph3">`PercentDone`</ph> provoca el evento.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>What would happen if, while execution was back in the code of <ph id="ph1">`Form1`</ph>, the <ph id="ph2">`LongTask`</ph> method were called again?</source>
          <target state="translated">¿Qué ocurriría if, durante la ejecución en el código de <ph id="ph1">`Form1`</ph>, el <ph id="ph2">`LongTask`</ph> método se llama de nuevo?</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>At worst, a stack overflow might occur if <ph id="ph1">`LongTask`</ph> were called every time the event was raised.</source>
          <target state="translated">En el peor de los casos, puede producirse un desbordamiento de pila si <ph id="ph1">`LongTask`</ph> se llama cada vez que se provocó el evento.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can cause the variable <ph id="ph1">`mWidget`</ph> to handle events for a different <ph id="ph2">`Widget`</ph> object by assigning a reference to the new <ph id="ph3">`Widget`</ph> to <ph id="ph4">`mWidget`</ph>.</source>
          <target state="translated">Puede hacer que la variable <ph id="ph1">`mWidget`</ph> para controlar los eventos de otra <ph id="ph2">`Widget`</ph> objeto asignando una referencia al nuevo <ph id="ph3">`Widget`</ph> a <ph id="ph4">`mWidget`</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>In fact, you can make the code in <ph id="ph1">`Button1_Click`</ph> do this every time you click the button.</source>
          <target state="translated">De hecho, puede hacer que el código en <ph id="ph1">`Button1_Click`</ph> hacer esto cada vez que haga clic en el botón.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>To handle events for a different widget</source>
          <target state="translated">Controlar eventos para un widget distinto</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Add the following line of code to the <ph id="ph1">`Button1_Click`</ph> procedure, immediately preceding the line that reads <ph id="ph2">`mWidget.LongTask(12.2, 0.33)`</ph>:</source>
          <target state="translated">Agregue la siguiente línea de código para el <ph id="ph1">`Button1_Click`</ph> procedimiento, inmediatamente antes de la línea que dice <ph id="ph2">`mWidget.LongTask(12.2, 0.33)`</ph>:</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnWalkthroughDeclaringAndRaisingEvents#9<ept id="p2">](../../../../visual-basic/programming-guide/language-features/events/codesnippet/VisualBasic/walkthrough-handling-events_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnWalkthroughDeclaringAndRaisingEvents&amp;#9;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/events/codesnippet/VisualBasic/walkthrough-handling-events_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The code above creates a new <ph id="ph1">`Widget`</ph> each time the button is clicked.</source>
          <target state="translated">El código anterior crea un nuevo <ph id="ph1">`Widget`</ph> cada vez que se hace clic en el botón.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>As soon as the <ph id="ph1">`LongTask`</ph> method completes, the reference to the <ph id="ph2">`Widget`</ph> is released, and the <ph id="ph3">`Widget`</ph> is destroyed.</source>
          <target state="translated">Tan pronto como el <ph id="ph1">`LongTask`</ph> método finaliza, la referencia a la <ph id="ph2">`Widget`</ph> se publica y el <ph id="ph3">`Widget`</ph> se destruye.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`WithEvents`</ph> variable can contain only one object reference at a time, so if you assign a different <ph id="ph2">`Widget`</ph> object to <ph id="ph3">`mWidget`</ph>, the previous <ph id="ph4">`Widget`</ph> object's events will no longer be handled.</source>
          <target state="translated">Un <ph id="ph1">`WithEvents`</ph> variable puede contener sólo una referencia de objeto a la vez, por lo que si asigna otro <ph id="ph2">`Widget`</ph> objeto <ph id="ph3">`mWidget`</ph>, el anterior <ph id="ph4">`Widget`</ph> ya no se controlarán los eventos del objeto.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`mWidget`</ph> is the only object variable containing a reference to the old <ph id="ph2">`Widget`</ph>, the object is destroyed.</source>
          <target state="translated">Si <ph id="ph1">`mWidget`</ph> es la única variable de objeto que contiene una referencia a la antigua <ph id="ph2">`Widget`</ph>, se destruye el objeto.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If you want to handle events from several <ph id="ph1">`Widget`</ph> objects, use the <ph id="ph2">`AddHandler`</ph> statement to process events from each object separately.</source>
          <target state="translated">Si desea controlar eventos desde varios <ph id="ph1">`Widget`</ph> objetos, utilice el <ph id="ph2">`AddHandler`</ph> instrucción para procesar eventos de cada objeto por separado.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>You can declare as many <ph id="ph1">`WithEvents`</ph> variables as you need, but arrays of <ph id="ph2">`WithEvents`</ph> variables are not supported.</source>
          <target state="translated">Se pueden declarar tantas <ph id="ph1">`WithEvents`</ph> variables que usted necesitan, pero las matrices de <ph id="ph2">`WithEvents`</ph> no se admiten variables.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vea también</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Walkthrough: Declaring and Raising Events<ept id="p1">](../../../../visual-basic/programming-guide/language-features/events/walkthrough-declaring-and-raising-events.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Tutorial: Declarar y provocar eventos<ept id="p1">](../../../../visual-basic/programming-guide/language-features/events/walkthrough-declaring-and-raising-events.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Events<ept id="p1">](../../../../visual-basic/programming-guide/language-features/events/index.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Eventos<ept id="p1">](../../../../visual-basic/programming-guide/language-features/events/index.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>