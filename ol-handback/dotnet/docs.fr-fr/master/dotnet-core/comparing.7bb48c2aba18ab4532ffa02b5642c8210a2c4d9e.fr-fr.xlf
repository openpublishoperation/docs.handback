<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47ee37886fa2662a89730e9d52ee04987e37da2f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\comparing.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3aeee026d9f0ea2e26a1046cdf56947244e4cb89</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e38260c2022fae2c9830d20fd6e648d4e819c0c0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Comparing strings</source>
          <target state="translated">Comparaison de chaînes</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Comparing strings</source>
          <target state="translated">Comparaison de chaînes</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Comparing strings</source>
          <target state="translated">Comparaison de chaînes</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>.NET provides several methods to compare the values of strings.</source>
          <target state="translated">.NET fournit plusieurs méthodes permettant de comparer les valeurs de chaînes.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The following table lists and describes the value-comparison methods.</source>
          <target state="translated">Le tableau suivant répertorie et décrit les méthodes de comparaison de valeurs.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Method name</source>
          <target state="translated">Nom de la méthode</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">Utilisation</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Compares the values of two strings.</source>
          <target state="translated">Compare les valeurs de deux chaînes.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">Retourne une valeur entière.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Compares two strings without regard to local culture.</source>
          <target state="translated">Compare deux chaînes sans tenir compte de la culture locale.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">Retourne une valeur entière.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Compares the current string object to another string.</source>
          <target state="translated">Compare l'objet chaîne actif à une autre chaîne.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">Retourne une valeur entière.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.StartsWith<ept id="p1">](xref:System.String.StartsWith(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.StartsWith<ept id="p1">](xref:System.String.StartsWith(System.String))</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Determines whether a string begins with the string passed.</source>
          <target state="translated">Détermine si une chaîne commence par la chaîne passée.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value.</source>
          <target state="translated">Retourne une valeur booléenne.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.EndsWith<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.EndsWith<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Determines whether a string ends with the string passed.</source>
          <target state="translated">Détermine si une chaîne se termine par la chaîne passée.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value.</source>
          <target state="translated">Retourne une valeur booléenne.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Equals<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Equals<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Determines whether two strings are the same.</source>
          <target state="translated">Détermine si deux chaînes sont identiques.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value.</source>
          <target state="translated">Retourne une valeur booléenne.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.IndexOf<ept id="p1">](xref:System.String.IndexOf(System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.IndexOf<ept id="p1">](xref:System.String.IndexOf(System.Char))</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns the index position of a character or string, starting from the beginning of the string you are examining.</source>
          <target state="translated">Retourne la position d'index d'un caractère ou d'une chaîne, en commençant par le début de la chaîne que vous examinez.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">Retourne une valeur entière.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.LastIndexOf<ept id="p1">](xref:System.String.LastIndexOf(System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.LastIndexOf<ept id="p1">](xref:System.String.LastIndexOf(System.Char))</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns the index position of a character or string, starting from the end of the string you are examining.</source>
          <target state="translated">Retourne la position d'index d'un caractère ou d'une chaîne, en commençant par la fin de la chaîne que vous examinez.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">Retourne une valeur entière.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Compare</source>
          <target state="translated">Comparer</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The static <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method provides a thorough way of comparing two strings.</source>
          <target state="translated">La méthode <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> statique fournit un moyen complet de comparer deux chaînes.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This method is culturally aware.</source>
          <target state="translated">Cette méthode prend en compte la culture.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can use this function to compare two strings or substrings of two strings.</source>
          <target state="translated">Vous pouvez utiliser cette fonction pour comparer deux chaînes ou les sous-chaînes de deux chaînes.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Additionally, overloads are provided that regard or disregard case and cultural variance.</source>
          <target state="translated">En outre, des surcharges sont fournies, qui prennent ou non en compte les différences de casse et de culture.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following table shows the three integer values that this method might return.</source>
          <target state="translated">Le tableau suivant montre les trois valeurs entières que cette méthode peut retourner.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Return value</source>
          <target state="translated">Valeur de retour</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Condition</source>
          <target state="translated">Condition</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A negative integer</source>
          <target state="translated">Entier négatif</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The first string precedes the second string in the sort order, or the first string is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">La première chaîne précède la seconde dans l’ordre de tri ou la première chaîne est <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The first string and the second string are equal, or both strings are <ph id="ph1">`null`</ph>.</source>
          <target state="translated">La première chaîne et la seconde sont égales ou les deux chaînes sont <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A positive integer, or 1</source>
          <target state="translated">Un entier positif ou 1</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The first string follows the second string in the sort order, or the second string is null.</source>
          <target state="translated">La première chaîne suit la seconde dans l’ordre de tri, ou la seconde chaîne est Null.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method is primarily intended for use when ordering or sorting strings.</source>
          <target state="translated">La méthode <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> est principalement destinée à être utilisée lors du classement ou du tri de chaînes.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You should not use the <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method to test for equality (that is, to explicitly look for a return value of 0 with no regard for whether one string is less than or greater than the other).</source>
          <target state="translated">Vous ne devez pas utiliser la méthode <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> pour tester l’égalité (c’est-à-dire rechercher explicitement une valeur de retour égale à 0 sans savoir si une chaîne est inférieure ou supérieure à l’autre).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Instead, to determine whether two strings are equal, use the <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept> method.</source>
          <target state="translated">Pour déterminer si deux chaînes sont égales, utilisez plutôt la méthode <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method to determine the relative values of two strings.</source>
          <target state="translated">L’exemple suivant utilise la méthode <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> pour déterminer les valeurs relatives de deux chaînes.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`-1`</ph> to the console.</source>
          <target state="translated">Cet exemple affiche <ph id="ph1">`-1`</ph> sur la console.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>CompareOrdinal</source>
          <target state="translated">CompareOrdinal</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method compares two string objects without considering the local culture.</source>
          <target state="translated">La méthode <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> compare deux objets String sans prendre en compte la culture locale.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The return values of this method are identical to the values returned by the <ph id="ph1">`Compare`</ph> method in the previous table.</source>
          <target state="translated">Les valeurs de retour de cette méthode sont identiques aux valeurs retournées par la méthode <ph id="ph1">`Compare`</ph> du tableau précédent.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method is primarily intended for use when ordering or sorting strings.</source>
          <target state="translated">La méthode <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> est principalement destinée à être utilisée pour classer ou trier des chaînes.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You should not use the <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method to test for equality (that is, to explicitly look for a return value of 0 with no regard for whether one string is less than or greater than the other).</source>
          <target state="translated">Vous ne devez pas utiliser la méthode <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> pour tester l’égalité (c’est-à-dire rechercher explicitement une valeur de retour égale à 0 sans savoir si une chaîne est inférieure ou supérieure à l’autre).</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Instead, to determine whether two strings are equal, use the <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept> method.</source>
          <target state="translated">Pour déterminer si deux chaînes sont égales, utilisez plutôt la méthode <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`CompareOrdinal`</ph> method to compare the values of two strings.</source>
          <target state="translated">L’exemple suivant utilise la méthode <ph id="ph1">`CompareOrdinal`</ph> pour comparer les valeurs de deux chaînes.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`-32`</ph> to the console.</source>
          <target state="translated">Cet exemple affiche <ph id="ph1">`-32`</ph> sur la console.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>CompareTo</source>
          <target state="translated">CompareTo</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method compares the string that the current string object encapsulates to another string or object.</source>
          <target state="translated">La méthode <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> compare la chaîne encapsulée par l’objet String actif à une autre chaîne ou un autre objet.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The return values of this method are identical to the values returned by the <ph id="ph1">`String.Compare`</ph> method in the previous table.</source>
          <target state="translated">Les valeurs de retour de cette méthode sont identiques aux valeurs retournées par la méthode <ph id="ph1">`String.Compare`</ph> du tableau précédent.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method is primarily intended for use when ordering or sorting strings.</source>
          <target state="translated">La méthode <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> est principalement destinée à être utilisée lors du classement ou du tri de chaînes.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You should not use the <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method to test for equality (that is, to explicitly look for a return value of 0 with no regard for whether one string is less than or greater than the other).</source>
          <target state="translated">Vous ne devez pas utiliser la méthode <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> pour tester l’égalité (c’est-à-dire rechercher explicitement une valeur de retour égale à 0 sans savoir si une chaîne est inférieure ou supérieure à l’autre).</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Instead, to determine whether two strings are equal, use the <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept> method.</source>
          <target state="translated">Pour déterminer si deux chaînes sont égales, utilisez plutôt la méthode <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`String.CompareTo`</ph> method to compare the <ph id="ph2">`string1`</ph> object to the <ph id="ph3">`string2`</ph> object.</source>
          <target state="translated">L’exemple suivant utilise la méthode <ph id="ph1">`String.CompareTo`</ph> pour comparer l’objet <ph id="ph2">`string1`</ph> à l’objet <ph id="ph3">`string2`</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`-1`</ph> to the console.</source>
          <target state="translated">Cet exemple affiche <ph id="ph1">`-1`</ph> sur la console.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="translated">Equals</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.Equals<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method can easily determine if two strings are the same.</source>
          <target state="translated">La méthode <bpt id="p1">[</bpt>String.Equals<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> peut facilement déterminer si deux chaînes sont identiques.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This case-sensitive method returns a <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph> Boolean value.</source>
          <target state="translated">Cette méthode respectant la casse retourne une valeur booléenne <ph id="ph1">`true`</ph> ou <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>It can be used from an existing class, as illustrated in the next example.</source>
          <target state="translated">Elle peut être utilisée à partir d'une classe existante, comme illustré dans l'exemple suivant.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`Equals`</ph> method to determine whether a string object contains the phrase "Hello World".</source>
          <target state="translated">L’exemple suivant utilise la méthode <ph id="ph1">`Equals`</ph> pour déterminer si un objet String contient la phrase « Hello World ».</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`true`</ph> to the console.</source>
          <target state="translated">Cet exemple affiche <ph id="ph1">`true`</ph> sur la console.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This method can also be used as a static method.</source>
          <target state="translated">Cette méthode peut également être utilisée comme une méthode statique.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The following example compares two string objects using a static method.</source>
          <target state="translated">L'exemple suivant compare deux objets chaîne à l'aide d'une méthode statique.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`true`</ph> to the console.</source>
          <target state="translated">Cet exemple affiche <ph id="ph1">`true`</ph> sur la console.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>StartsWith and EndsWith</source>
          <target state="translated">StartsWith et EndsWith</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>String.StartsWith<ept id="p1">](xref:System.String.StartsWith(System.String))</ept> method to determine whether a string object begins with the same characters that encompass another string.</source>
          <target state="translated">Vous pouvez utiliser la méthode <bpt id="p1">[</bpt>String.StartsWith<ept id="p1">](xref:System.String.StartsWith(System.String))</ept> pour déterminer si un objet String commence par les mêmes caractères que ceux qui constituent une autre chaîne.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This case-sensitive method returns <ph id="ph1">`true`</ph> if the current string object begins with the passed string and <ph id="ph2">`false`</ph> if it does not.</source>
          <target state="translated">Cette méthode qui respecte la casse retourne <ph id="ph1">`true`</ph> si l’objet String actif commence par la chaîne passée et <ph id="ph2">`false`</ph> si ce n’est pas le cas.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The following example uses this method to determine if a string object begins with "Hello".</source>
          <target state="translated">L'exemple suivant utilise cette méthode pour déterminer si un objet chaîne commence par "Hello".</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`true`</ph> to the console.</source>
          <target state="translated">Cet exemple affiche <ph id="ph1">`true`</ph> sur la console.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.EndsWith<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method compares a passed string to the characters that exist at the end of the current string object.</source>
          <target state="translated">La méthode <bpt id="p1">[</bpt>String.EndsWith<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> compare une chaîne passée aux caractères qui se trouvent à la fin de l’objet String actif.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>It also returns a Boolean value.</source>
          <target state="translated">Elle retourne également une valeur booléenne.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The following example checks the end of a string using the <ph id="ph1">`EndsWith`</ph> method.</source>
          <target state="translated">L’exemple suivant vérifie la fin d’une chaîne à l’aide de la méthode <ph id="ph1">`EndsWith`</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`false`</ph> to the console.</source>
          <target state="translated">Cet exemple affiche <ph id="ph1">`false`</ph> sur la console.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>IndexOf and LastIndexOf</source>
          <target state="translated">IndexOf et LastIndexOf</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>String.IndexOf<ept id="p1">](xref:System.String.IndexOf(System.Char))</ept> method to determine the position of the first occurrence of a particular character within a string.</source>
          <target state="translated">Vous pouvez utiliser la méthode <bpt id="p1">[</bpt>String.IndexOf<ept id="p1">](xref:System.String.IndexOf(System.Char))</ept> pour déterminer la position de la première occurrence d’un caractère particulier dans une chaîne.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This case-sensitive method starts counting from the beginning of a string and returns the position of a passed character using a zero-based index.</source>
          <target state="translated">Cette méthode qui respecte la casse commence à compter à partir du début d'une chaîne et retourne la position d'un caractère passé en utilisant un index de base zéro.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If the character cannot be found, a value of –1 is returned.</source>
          <target state="translated">Si le caractère est introuvable, la valeur -1 est retournée.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`IndexOf`</ph> method to search for the first occurrence of the '<ph id="ph2">`l`</ph>' character in a string.</source>
          <target state="translated">L’exemple suivant utilise la méthode <ph id="ph1">`IndexOf`</ph> pour rechercher la première occurrence du caractère '<ph id="ph2">`l`</ph>' dans une chaîne.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`2`</ph> to the console.</source>
          <target state="translated">Cet exemple affiche <ph id="ph1">`2`</ph> sur la console.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.LastIndexOf<ept id="p1">](xref:System.String.LastIndexOf(System.Char))</ept> method is similar to the <ph id="ph1">`String.IndexOf`</ph> method except that it returns the position of the last occurrence of a particular character within a string.</source>
          <target state="translated">La méthode <bpt id="p1">[</bpt>String.LastIndexOf<ept id="p1">](xref:System.String.LastIndexOf(System.Char))</ept> est similaire à la méthode <ph id="ph1">`String.IndexOf`</ph>, sauf qu’elle retourne la position de la dernière occurrence d’un caractère particulier dans une chaîne.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>It is case-sensitive and uses a zero-based index.</source>
          <target state="translated">Elle respecte la casse et utilise un index de base zéro.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`LastIndexOf`</ph> method to search for the last occurrence of the '<ph id="ph2">`l`</ph>' character in a string.</source>
          <target state="translated">L’exemple suivant utilise la méthode <ph id="ph1">`LastIndexOf`</ph> pour rechercher la dernière occurrence du caractère '<ph id="ph2">`l`</ph>' dans une chaîne.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`9`</ph> to the console.</source>
          <target state="translated">Cet exemple affiche <ph id="ph1">`9`</ph> sur la console.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Both methods are useful when used in conjunction with the <bpt id="p1">[</bpt>String.Remove<ept id="p1">](xref:System.String.Remove(System.Int32))</ept> method.</source>
          <target state="translated">Les deux méthodes sont utiles quand elles sont utilisées conjointement avec la méthode <bpt id="p1">[</bpt>String.Remove<ept id="p1">](xref:System.String.Remove(System.Int32))</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>You can use either the <ph id="ph1">`IndexOf`</ph> or <ph id="ph2">`LastIndexOf`</ph> methods to retrieve the position of a character, and then supply that position to the <ph id="ph3">`Remove method`</ph> in order to remove a character or a word that begins with that character.</source>
          <target state="translated">Vous pouvez utiliser la méthode <ph id="ph1">`IndexOf`</ph> ou la méthode <ph id="ph2">`LastIndexOf`</ph> pour récupérer la position d’un caractère, puis fournir cette position à la <ph id="ph3">`Remove method`</ph> pour supprimer un caractère ou un mot commençant par ce caractère.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Voir aussi</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic string operations<ept id="p1">](basic-string-operations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Opérations de chaînes de base<ept id="p1">](basic-string-operations.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>