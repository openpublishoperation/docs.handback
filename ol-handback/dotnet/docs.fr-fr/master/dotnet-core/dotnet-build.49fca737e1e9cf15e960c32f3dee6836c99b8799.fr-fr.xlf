<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b5c25fc" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17c2db54f871795c370a6475c21e36736a6b46c3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\dotnet-build.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e6e78c0a20a04b44c7ad36608e956ce0b56826b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19f335ea5cea3ffced36bb3eaf770360555ce40f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-build command | Microsoft Docs</source>
          <target state="translated">Commande dotnet-build | Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-build command builds a project and all of its dependencies.</source>
          <target state="translated">La commande dotnet-build permet de générer un projet et l’ensemble de ses dépendances.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-build, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-build, CLI, commande CLI, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-build</source>
          <target state="translated">dotnet-build</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Nom</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet-build`</ph> - Builds a project and all of its dependencies.</source>
          <target state="translated"><ph id="ph1">`dotnet-build`</ph> : Génère un projet et l’ensemble de ses dépendances.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Résumé</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet build`</ph> command builds the project and its dependencies into a set of binaries.</source>
          <target state="translated">La commande <ph id="ph1">`dotnet build`</ph> génère le projet et ses dépendances dans un ensemble de fichiers binaires.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The binaries are the symbol files used for debugging (having a <ph id="ph1">`*.pdb`</ph> extension) as well as the project's code in Intermediate Language (IL) with a <ph id="ph2">`*.dll`</ph> extension.</source>
          <target state="translated">Les fichiers binaires sont les fichiers de symboles utilisés pour le débogage (avec l’extension <ph id="ph1">`*.pdb`</ph>) ainsi que le code du projet en langage intermédiaire (IL) avec l’extension <ph id="ph2">`*.dll`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Additionally, a JSON file that lists out the dependencies of the application with the <ph id="ph1">`*.deps.json`</ph> extension will be produced.</source>
          <target state="translated">Par ailleurs, un fichier JSON répertoriant les dépendances de l’application avec l’extension <ph id="ph1">`*.deps.json`</ph> est généré.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Finally, a <ph id="ph1">`runtime.config.json`</ph> file will be produced as well.</source>
          <target state="translated">Enfin, un fichier <ph id="ph1">`runtime.config.json`</ph> est également généré.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This file specifies which shared runtime and version the built code will run against.</source>
          <target state="translated">Ce fichier spécifie la version et le runtime partagé sur lesquels le code s’exécute.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the project has third-party dependencies, such as libraries from NuGet, these will be resolved from the NuGet cache and will not be available with the project's built output.</source>
          <target state="translated">Si le projet a des dépendances tierces, comme des bibliothèques NuGet, elles sont résolues à partir du cache NuGet et ne sont pas disponibles avec la sortie générée du projet.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>With that in mind, the product of <ph id="ph1">`dotnet build`</ph> is not ready to be transferred to another machine to run.</source>
          <target state="translated">Par conséquent, le produit de <ph id="ph1">`dotnet build`</ph> ne peut pas être transféré en l’état vers un autre ordinateur pour exécution.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This is in contrast to the behavior of .NET Framework in which building an executable project (an application) will produce an output that is possible to run on any machine that has .NET Framework installed.</source>
          <target state="translated">Ce comportement contraste avec celui du .NET Framework dans lequel la génération d’un projet exécutable (une application) produit une sortie exécutable sur les ordinateurs où le .NET Framework est installé.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In order to get a similar experience in .NET Core, you have to use the <bpt id="p1">[</bpt>dotnet publish<ept id="p1">](dotnet-publish.md)</ept> command.</source>
          <target state="translated">Pour obtenir un résultat similaire dans .NET Core, vous devez utiliser la commande <bpt id="p1">[</bpt>dotnet publish<ept id="p1">](dotnet-publish.md)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>More information about this can be found in the <bpt id="p1">[</bpt>.NET Core Application Deployment<ept id="p1">](../deploying/index.md)</ept> document.</source>
          <target state="translated">Vous trouverez plus d’informations à ce sujet dans le document <bpt id="p1">[</bpt>Déploiement d’applications .NET Core<ept id="p1">](../deploying/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Building requires the existence of an <bpt id="p1">*</bpt>assets.json<ept id="p1">*</ept> file (a file that lists all of the dependencies of your application), which means that you have to run <bpt id="p2">[</bpt><ph id="ph1">`dotnet restore`</ph><ept id="p2">](dotnet-restore.md)</ept> prior to building the project.</source>
          <target state="translated">La génération nécessite l’existence d’un fichier <bpt id="p1">*</bpt>assets.json<ept id="p1">*</ept> (fichier qui liste toutes les dépendances de votre application), ce qui signifie que vous devez exécuter <bpt id="p2">[</bpt><ph id="ph1">`dotnet restore`</ph><ept id="p2">](dotnet-restore.md)</ept> avant de générer le projet.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Lack of the assets file manifests as the inability of the tooling to resolve reference assemblies which will result in errors.</source>
          <target state="translated">Si le fichier de ressources est absent, les outils ne peuvent pas résoudre les assemblys de référence, ce qui entraîne des erreurs.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet build`</ph> uses MSBuild to build the project, thus it supports both parallel builds and incremental builds.</source>
          <target state="translated">La commande <ph id="ph1">`dotnet build`</ph> utilise MSBuild pour générer le projet. Elle prend donc en charge les générations parallèles et les générations incrémentielles.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Please refer to <bpt id="p1">[</bpt>MSBuild documentation<ept id="p1">](https://docs.microsoft.com/visualstudio/msbuild/msbuild)</ept> to get more information on those topics.</source>
          <target state="translated">Consultez la <bpt id="p1">[</bpt>Documentation MSBuild<ept id="p1">](https://docs.microsoft.com/visualstudio/msbuild/msbuild)</ept> pour obtenir plus d’informations sur ces sujets.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In addition to its options, the <ph id="ph1">`dotnet build`</ph> command will accept MSBuild options as well, such as <ph id="ph2">`/p`</ph> for setting properties or <ph id="ph3">`/l`</ph> to define a logger.</source>
          <target state="translated">En plus de ses options, la commande <ph id="ph1">`dotnet build`</ph> accepte aussi des options MSBuild, comme <ph id="ph2">`/p`</ph> pour définir des propriétés ou <ph id="ph3">`/l`</ph> pour définir un enregistreur d’événements.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can find out more about these options in the <bpt id="p1">[</bpt><ph id="ph1">`dotnet msbuild`</ph><ept id="p1">](dotnet-msbuild.md)</ept> command documentation.</source>
          <target state="translated">Vous trouverez plus d’informations sur ces options dans la documentation de la commande <bpt id="p1">[</bpt><ph id="ph1">`dotnet msbuild`</ph><ept id="p1">](dotnet-msbuild.md)</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you wish to know when</source>
          <target state="translated">Si vous voulez savoir quand</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Whether the project is executable or not is determined by the <ph id="ph1">`&lt;OutputType&gt;`</ph> property in the project file.</source>
          <target state="translated">La possibilité d’exécuter le projet ou non est déterminée par la propriété <ph id="ph1">`&lt;OutputType&gt;`</ph> dans le fichier projet.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following example shows a project that will produce executable code:</source>
          <target state="translated">L’exemple suivant illustre un projet qui génère du code exécutable :</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In order to produce a library, simply omit that property.</source>
          <target state="translated">Pour générer une bibliothèque, omettez simplement cette propriété.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The main difference in output is that the IL DLL for a library will not contain any entry points and it will not be possible to execute it.</source>
          <target state="translated">La principale différence dans la sortie est que la DLL de langage intermédiaire pour une bibliothèque ne contient pas de point d’entrée et qu’elle ne peut pas être exécutée.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The project file to build.</source>
          <target state="translated">Fichier projet à générer.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If a project file is not specified, MSBuild searches the current working directory for a file that has a file extension that ends in <ph id="ph1">`proj`</ph> and uses that file.</source>
          <target state="translated">Si vous ne spécifiez pas de fichier projet, MSBuild recherche dans le répertoire de travail actuel un fichier avec une extension se terminant par <ph id="ph1">`proj`</ph> et l’utilise.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">Affiche une aide brève pour la commande.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Directory in which to place the built binaries.</source>
          <target state="translated">Répertoire dans lequel placer les fichiers binaires générés.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You also need to define <ph id="ph1">`--framework`</ph> when you specify this option.</source>
          <target state="translated">Vous devez également définir <ph id="ph1">`--framework`</ph> lorsque vous spécifiez cette option.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Compiles for a specific framework.</source>
          <target state="translated">Compile pour un framework spécifique.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The framework needs to be defined in the <bpt id="p1">[</bpt>project file<ept id="p1">](csproj.md)</ept>.</source>
          <target state="translated">Le framework doit être défini dans le <bpt id="p1">[</bpt>fichier projet<ept id="p1">](csproj.md)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Defines a configuration under which to build.</source>
          <target state="translated">Définit une configuration dans laquelle effectuer la génération.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If omitted, it defaults to <ph id="ph1">`Debug`</ph>.</source>
          <target state="translated">Si aucune valeur n’est spécifiée, la valeur utilisée par défaut est <ph id="ph1">`Debug`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Target runtime to build for.</source>
          <target state="translated">Runtime cible de la génération.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For a list of Runtime Identifiers (RIDs) you can use, see the <bpt id="p1">[</bpt>RID catalog<ept id="p1">](../rid-catalog.md)</ept>.</source>
          <target state="translated">Pour connaître les identificateurs de runtime que vous pouvez utiliser, consultez le <bpt id="p1">[</bpt>catalogue des identificateurs de runtime <ept id="p1">](../rid-catalog.md)</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Defines what <ph id="ph1">`*`</ph> should be replaced with in the version field in the project file.</source>
          <target state="translated">Définit par quoi <ph id="ph1">`*`</ph> doit être remplacé dans le champ de version du fichier projet.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The format follows NuGet's version guidelines.</source>
          <target state="translated">Le format respecte les instructions de version de NuGet.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Marks the build as unsafe for incremental build.</source>
          <target state="translated">Marque la build comme unsafe pour la génération incrémentielle.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This turns off incremental compilation and forces a clean rebuild of the project dependency graph.</source>
          <target state="translated">Cela désactive la compilation incrémentielle et force une régénération du graphique de dépendance du projet.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Ignores project-to-project references and only builds the root project specified to build.</source>
          <target state="translated">Ignore les références entre projets et génère uniquement le projet racine spécifié pour la génération.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Sets the verbosity level of the command.</source>
          <target state="translated">Définit le niveau de détail de la commande.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Allowed values are <ph id="ph1">`q[uiet]`</ph>, <ph id="ph2">`m[inimal]`</ph>, <ph id="ph3">`n[ormal]`</ph>, <ph id="ph4">`d[etailed]`</ph>, and <ph id="ph5">`diag[nostic]`</ph>.</source>
          <target state="translated">Les valeurs autorisées sont <ph id="ph1">`q[uiet]`</ph>, <ph id="ph2">`m[inimal]`</ph>, <ph id="ph3">`n[ormal]`</ph>, <ph id="ph4">`d[etailed]`</ph> et <ph id="ph5">`diag[nostic]`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Exemples</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Build a project and its dependencies:</source>
          <target state="translated">Générer un projet et ses dépendances :</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Build a project and its dependencies using Release configuration:</source>
          <target state="translated">Générer un projet et ses dépendances à l’aide de la configuration Release :</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Build a project and its dependencies for a specific runtime (in this example, Ubuntu 16.04):</source>
          <target state="translated">Générer un projet et ses dépendances pour un runtime spécifique (dans cet exemple, Ubuntu 16.04) :</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>