<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b5c25fc" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cd860241f5f20b6a4f1ccfec60e0c9cd5079152a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\testing\unit-testing-with-dotnet-test.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3c82dffc8e200be96467dc35105d3c832b0c5d39</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e8f442ab61448a9951f2ca8b104f67b74b595a4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Unit Testing in .NET Core using dotnet test | Microsoft Docs</source>
          <target state="translated">Tests unitaires dans .NET Core à l’aide de dotnet test │ Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Unit Testing in .NET Core using dotnet test</source>
          <target state="translated">Effectuer des tests unitaires dans .NET Core à l’aide de dotnet test</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Unit Testing in .NET Core using dotnet test</source>
          <target state="translated">Effectuer des tests unitaires dans .NET Core à l’aide de dotnet test</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By <bpt id="p1">[</bpt>Steve Smith<ept id="p1">](http://ardalis.com)</ept> and <bpt id="p2">[</bpt>Bill Wagner<ept id="p2">](https://github.com/BillWagner)</ept></source>
          <target state="translated">Article rédigé par <bpt id="p1">[</bpt>Steve Smith<ept id="p1">](http://ardalis.com)</ept> et <bpt id="p2">[</bpt>Bill Wagner<ept id="p2">](https://github.com/BillWagner)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>View or download sample code<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/getting-started/unit-testing-using-dotnet-test)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Afficher ou télécharger l’exemple de code<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/getting-started/unit-testing-using-dotnet-test)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Creating the Projects</source>
          <target state="translated">Création des projets</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Writing Libraries with Cross Platform Tools<ept id="p1">](../tutorials/libraries.md)</ept> has information on organizing multi-project solutions for both the source and the tests.</source>
          <target state="translated">L’article relatif à l’<bpt id="p1">[</bpt>écriture de bibliothèques avec des outils multiplateformes<ept id="p1">](../tutorials/libraries.md)</ept> donne des indications sur l’organisation de solutions multiprojets pour la source et les tests.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This article follows those conventions.</source>
          <target state="translated">Cet article suit ces conventions.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The final project structure will be something like this:</source>
          <target state="translated">La structure de projet finale se présentera comme suit :</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creating the source project</source>
          <target state="translated">Création du projet source</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Start in the <ph id="ph1">`unit-testing-using-dotnet-test`</ph> directory, create the <ph id="ph2">`PrimeService`</ph> directory.</source>
          <target state="translated">Dans le répertoire <ph id="ph1">`unit-testing-using-dotnet-test`</ph>, créez le répertoire <ph id="ph2">`PrimeService`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>CD into that directory, and run <ph id="ph1">`dotnet new classib`</ph> to create the source project.</source>
          <target state="translated">À l’aide de la commande CD, accédez à ce répertoire, puis exécutez <ph id="ph1">`dotnet new classib`</ph> pour créer le projet source.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Rename <ph id="ph1">`Class1.cs`</ph> as <ph id="ph2">`PrimeService.cs`</ph>.</source>
          <target state="translated">Renommez <ph id="ph1">`Class1.cs`</ph> <ph id="ph2">`PrimeService.cs`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To use test-driven development (TDD), you'll create a failing implementation of the <ph id="ph1">`PrimeService`</ph> class:</source>
          <target state="translated">Pour utiliser le développement piloté par les tests (TDD), vous devez créer une implémentation défaillante de la classe <ph id="ph1">`PrimeService`</ph> :</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Creating the test project</source>
          <target state="translated">Création du projet de test</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Next, cd back into the 'unit-testing-using-dotnet-test' directory, and create the <ph id="ph1">`PrimeServices.Tests`</ph> directory.</source>
          <target state="translated">Ensuite, accédez de nouveau au répertoire « unit-testing-using-dotnet-test » et créez le répertoire <ph id="ph1">`PrimeServices.Tests`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>CD into the <ph id="ph1">`PrimeService.Tests`</ph> directory and create a new project using <ph id="ph2">`dotnet new xunit`</ph>.</source>
          <target state="translated">Toujours à l’aide de la commande CD, accédez au répertoire <ph id="ph1">`PrimeService.Tests`</ph>, puis créez un projet à l’aide de <ph id="ph2">`dotnet new xunit`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet xunit`</ph> creates a test project that uses xUnit as the test library.</source>
          <target state="translated"><ph id="ph1">`dotnet xunit`</ph> crée un projet de test qui utilise xUnit comme bibliothèque de test.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The generated template configured the test runner in the PrimeServiceTests.csproj:</source>
          <target state="translated">Le modèle généré a configuré Test Runner dans PrimeServiceTests.csproj :</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The test project requires other packages to create and run unit tests.</source>
          <target state="translated">Le projet de test a besoin d’autres packages pour créer et exécuter des tests unitaires.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet new`</ph> added xUnit, and the xUnit runner.</source>
          <target state="translated"><ph id="ph1">`dotnet new`</ph> a ajouté xUnit et le Test Runner xUnit.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You need to add the PrimeService package as another dependency to the project.</source>
          <target state="translated">Vous devez ajouter au projet le package PrimeService comme autre dépendance.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can do that using the <ph id="ph1">`dotnet`</ph> CLI:</source>
          <target state="translated">Pour ce faire, utilisez l’interface CLI <ph id="ph1">`dotnet`</ph> :</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Or, you can directly edit the <ph id="ph1">`PrimeService.Tests.csproj`</ph> file.</source>
          <target state="translated">Sinon, vous pouvez modifier directement le fichier <ph id="ph1">`PrimeService.Tests.csproj`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Directly under the first <ph id="ph1">`&lt;ItemGroup&gt;`</ph> node, add another <ph id="ph2">`&lt;ItemGroup&gt;`</ph> node with a reference to the library project:</source>
          <target state="translated">Directement sous le premier nœud <ph id="ph1">`&lt;ItemGroup&gt;`</ph>, ajoutez un autre nœud <ph id="ph2">`&lt;ItemGroup&gt;`</ph> avec une référence au projet de bibliothèque :</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can see the entire file in the <bpt id="p1">[</bpt>samples repository<ept id="p1">](https://github.com/dotnet/docs/blob/master/samples/core/getting-started/unit-testing-using-dotnet-test/PrimeService.Tests/PrimeService.Tests.csproj)</ept> on GitHub.</source>
          <target state="translated">Vous pouvez consulter le fichier dans son intégralité dans le <bpt id="p1">[</bpt>dépôt d’exemples<ept id="p1">](https://github.com/dotnet/docs/blob/master/samples/core/getting-started/unit-testing-using-dotnet-test/PrimeService.Tests/PrimeService.Tests.csproj)</ept> sur GitHub.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>After this initial structure is in place, you can write your first test.</source>
          <target state="translated">Vous pouvez écrire votre premier test dès lors que cette structure initiale est en place.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Once you verify that first unit test, everything is configured and should run smoothly as you add features and tests.</source>
          <target state="translated">Une fois que vous avez vérifié ce premier test unitaire, tout est configuré et doit s’exécuter correctement à mesure que vous ajoutez des fonctionnalités et des tests.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Creating the first test</source>
          <target state="translated">Création du premier test</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Before building the library or the tests, you need to run <ph id="ph1">`dotnet restore`</ph> in both the <ph id="ph2">`PrimeService`</ph> and <ph id="ph3">`PrimeService.Tests`</ph> directories.</source>
          <target state="translated">Avant de générer la bibliothèque ou les tests, vous devez exécuter <ph id="ph1">`dotnet restore`</ph> dans les répertoires <ph id="ph2">`PrimeService`</ph> et <ph id="ph3">`PrimeService.Tests`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This command restores all the necessary NuGet packages for each project.</source>
          <target state="translated">Cette commande restaure tous les packages NuGet nécessaires pour chaque projet.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The TDD approach calls for writing one failing test, then making it pass, then repeating the process.</source>
          <target state="translated">L’approche TDD impose d’écrire un test défaillant, de le corriger pour qu’il réussisse, puis de répéter le processus.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>So, let's write that one failing test.</source>
          <target state="translated">Par conséquent, écrivons ce test défaillant.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Remove <ph id="ph1">`UnitTest1.cs`</ph> from the <ph id="ph2">`PrimeService.Tests`</ph> directory, and create a new C# file named <ph id="ph3">`PrimeService_IsPrimeShould.cs`</ph> with the following content:</source>
          <target state="translated">Supprimez <ph id="ph1">`UnitTest1.cs`</ph> du répertoire <ph id="ph2">`PrimeService.Tests`</ph>, puis créez un fichier C# nommé <ph id="ph3">`PrimeService_IsPrimeShould.cs`</ph> avec le contenu suivant :</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`[Fact]`</ph> attribute denotes a method as a single test.</source>
          <target state="translated">L’attribut <ph id="ph1">`[Fact]`</ph> désigne une méthode en tant que test unique.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Save this file, then run <ph id="ph1">`dotnet build`</ph> to build the test project.</source>
          <target state="translated">Enregistrez ce fichier, puis exécutez <ph id="ph1">`dotnet build`</ph> pour générer le projet de test.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you have not already built the <ph id="ph1">`PrimeService`</ph> project, the build system will detect that and build it because it is a dependency of the test project.</source>
          <target state="translated">Si vous n’avez pas déjà généré le projet <ph id="ph1">`PrimeService`</ph>, le système de génération le détecte et le génère, car il s’agit d’une dépendance du projet de test.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Now, execute <ph id="ph1">`dotnet test`</ph> to run the tests from the console.</source>
          <target state="translated">À présent, exécutez <ph id="ph1">`dotnet test`</ph> pour exécuter les tests à partir de la console.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The xUnit test runner has the program entry point to run your tests from the Console.</source>
          <target state="translated">Le Test Runner xUnit a le point d’entrée de programme qui permet d’exécuter vos tests à partir de la console.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet test`</ph> starts the test runner, and provides a command line argument to the testrunner indicating the assembly that contains your tests.</source>
          <target state="translated"><ph id="ph1">`dotnet test`</ph> démarre Test Runner et lui transmet un argument de ligne de commande désignant l’assembly qui contient vos tests.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Your test fails.</source>
          <target state="translated">Votre test échoue.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You haven't created the implementation yet.</source>
          <target state="translated">Vous n’avez pas encore créé l’implémentation.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Write the simplest code to make this one test pass:</source>
          <target state="translated">Écrivez le code le plus simple pour faire en sorte que ce test réussisse :</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Adding More Features</source>
          <target state="translated">Ajout de fonctionnalités supplémentaires</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Now, that you've made one test pass, it's time to write more.</source>
          <target state="translated">Maintenant que vous avez fait réussir un test, le moment est venu d’écrire plus de code.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>There are a few other simple cases for prime numbers: 0, -1.</source>
          <target state="translated">Il existe quelques autres cas simples pour des nombres premiers : 0, -1.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You could add those as new tests, with the <ph id="ph1">`[Fact]`</ph> attribute, but that quickly becomes tedious.</source>
          <target state="translated">Vous pouvez les ajouter en tant que nouveaux tests, avec l’attribut <ph id="ph1">`[Fact]`</ph>, mais cela devient vite fastidieux.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>There are other xUnit attributes that enable you to write a suite of similar tests.</source>
          <target state="translated">D’autres attributs xUnit vous permettent d’écrire une suite de tests similaires.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Theory`</ph> represents a suite of tests that execute the same code, but have different input arguments.</source>
          <target state="translated">L’attribut <ph id="ph1">`Theory`</ph> représente une suite de tests qui exécutent le même code, mais qui ont des arguments d’entrée différents.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">`[InlineData]`</ph> attribute to specify values for those inputs.</source>
          <target state="translated">Vous pouvez utiliser l’attribut <ph id="ph1">`[InlineData]`</ph> pour spécifier des valeurs pour ces entrées.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Instead of creating new tests, leverage these two attributes to create a single theory that tests some values less than 2, which is the lowest prime number:</source>
          <target state="translated">Au lieu de créer de nouveaux tests, servez-vous de ces deux attributs pour créer une théorie unique qui teste des valeurs inférieures à 2, qui est le nombre premier le plus petit :</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Sample_TestCode<ept id="p2">]</ept><bpt id="p3">(../../../samples/core/getting-started/unit-testing-using-dotnet-test/PrimeService.Tests/PrimeService_IsPrimeShould.cs#Sample_TestCode "</bpt>First tests<ept id="p3">")</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>Sample_TestCode<ept id="p2">]</ept><bpt id="p3">(../../../samples/core/getting-started/unit-testing-using-dotnet-test/PrimeService.Tests/PrimeService_IsPrimeShould.cs#Sample_TestCode "</bpt>Premiers tests<ept id="p3">")</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Now, these tests all pass.</source>
          <target state="translated">À présent, ces tests réussissent tous.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You continue to iterate by adding more tests, more theories, and more code in the main library.</source>
          <target state="translated">Poursuivez l’itération en ajoutant plus de tests, plus de théories et plus de code dans la bibliothèque principale.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You'll quickly end up with the <bpt id="p1">[</bpt>finished version of the tests<ept id="p1">](https://github.com/dotnet/docs/blob/master/samples/core/getting-started/unit-testing-using-dotnet-test/test/PrimeService.Tests/PrimeService_IsPrimeShould.cs)</ept> and the <bpt id="p2">[</bpt>complete implementation of the library<ept id="p2">](https://github.com/dotnet/docs/blob/master/samples/core/getting-started/unit-testing-using-dotnet-test/src/PrimeService/PrimeService.cs)</ept>.</source>
          <target state="translated">Vous parviendrez rapidement à la <bpt id="p1">[</bpt>version finale des tests<ept id="p1">](https://github.com/dotnet/docs/blob/master/samples/core/getting-started/unit-testing-using-dotnet-test/test/PrimeService.Tests/PrimeService_IsPrimeShould.cs)</ept> et à l’<bpt id="p2">[</bpt>implémentation complète de la bibliothèque<ept id="p2">](https://github.com/dotnet/docs/blob/master/samples/core/getting-started/unit-testing-using-dotnet-test/src/PrimeService/PrimeService.cs)</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You've built a small library and a set of unit tests for that library.</source>
          <target state="translated">Vous avez créé une petite bibliothèque et un ensemble de tests unitaires pour cette bibliothèque.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You've structured this solution so that adding new packages and tests will be seamless, and you can concentrate on the problem at hand.</source>
          <target state="translated">Vous avez structuré cette solution de façon à simplifier l’ajout de nouveaux packages et tests, et vous pouvez vous concentrer sur le problème en cours.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The tools will run automatically.</source>
          <target state="translated">Les outils s’exécuteront automatiquement.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>