<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd610bdba56679dd522149d8e91dc91858c7f7ed</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\docker\console.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02fa0bc4ba65f75936d48f81291b670aaf3252bd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">162574602fe8f99a96301753884af51f1a88574c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Running Console applications in Docker</source>
          <target state="translated">Exécution d’applications console dans Docker</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to take an existing .NET Framework console application and run it in a Windows Docker container.</source>
          <target state="translated">Découvrez comment prendre une application console .NET Framework existante et l’exécuter dans un conteneur Docker Windows.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, Container, Console, Applications</source>
          <target state="translated">.NET, Conteneur, Console, Applications</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Running console applications in Windows containers</source>
          <target state="translated">Exécution d’applications console dans des conteneurs Windows</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Console applications are used for many purposes; from simple querying of a status to long running document image processing tasks.</source>
          <target state="translated">Les applications console sont utilisées à de nombreuses fins, allant de la simple interrogation d’un état à l’exécution de longues tâches de traitement d’images de document.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In any case, the ability to start up and scale these applications are met with limitations of hardware acquisitions, startup times or running multiple instances.</source>
          <target state="translated">Dans tous les cas, vous pouvez démarrer et faire évoluer ces applications dans les limites des acquisitions matérielles, des temps de démarrage et de l’exécution de plusieurs instances.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Moving your console applications to use Docker and Windows Server containers allows for starting these applications from a clean state, enabling them to perform the operation and then shutdown cleanly.</source>
          <target state="translated">En déplaçant vos applications console pour utiliser des conteneurs Windows Server et Docker, vous pouvez les démarrer à partir d’un état propre, leur permettant d’effectuer l’opération, puis de s’arrêter proprement.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This topic will show the steps needed to move a console application to a Windows based container and start it using a PowerShell script.</source>
          <target state="translated">Cette rubrique décrit les étapes nécessaires pour déplacer une application console vers un conteneur Windows et la démarrer à l’aide d’un script PowerShell.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The sample console application is a simple example which takes an argument, a question in this case, and returns a random answer.</source>
          <target state="translated">L’exemple d’application console est un exemple simple qui prend un argument, en l’occurrence une question, et retourne une réponse aléatoire.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This could take a <ph id="ph1">`customer_id`</ph> and process their taxes, or create a thumbnail for an <ph id="ph2">`image_url`</ph> argument.</source>
          <target state="translated">Cette opération pourrait traiter les taxes d’un client à partir de son <ph id="ph1">`customer_id`</ph> ou créer une miniature pour un argument <ph id="ph2">`image_url`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In addition to the answer, the <ph id="ph1">`Environment.MachineName`</ph> has been added to the response to show the difference between running the application locally and in a Windows container.</source>
          <target state="translated"><ph id="ph1">`Environment.MachineName`</ph> a été ajouté à la réponse pour afficher la différence entre l’exécution de l’application localement et son exécution dans un conteneur Windows.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When running the application locally, your local machine name should be returned and when running in a Windows Container; the container session id is returned.</source>
          <target state="translated">Selon que vous exécutez l’application localement ou dans un conteneur Windows, c’est le nom de votre ordinateur local ou l’ID de session du conteneur qui est retourné.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The complete example is available in the <bpt id="p1">[</bpt>dotnet/core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/docker/ConsoleRandomAnswerGenerator)</ept>.</source>
          <target state="translated">L’exemple complet est disponible dans le <bpt id="p1">[</bpt>dépôt dotnet / docs sur GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/docker/ConsoleRandomAnswerGenerator)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You need to be familiar with some Docker terms before you begin working on moving your application to a container.</source>
          <target state="translated">Vous devez être familiarisé avec certains termes Docker avant de procéder au déplacement de votre application vers un conteneur.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>Docker image<ept id="p1">*</ept> is a read-only template that defines the environment for a running container, including the operating system (OS), system components, and application(s).</source>
          <target state="translated">Une <bpt id="p1">*</bpt>image Docker<ept id="p1">*</ept> est un modèle en lecture seule qui définit l’environnement pour un conteneur en cours d’exécution, notamment le système d’exploitation (SE), les composants système et l’application (ou les applications).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>One important feature of Docker images is that images are composed from a base image.</source>
          <target state="translated">Une fonctionnalité importante des images Docker est qu’elles sont composées à partir d’une image de base.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Each new image adds a small set of features to an existing image.</source>
          <target state="translated">Chaque nouvelle image ajoute un petit ensemble de fonctionnalités à une image existante.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>Docker container<ept id="p1">*</ept> is a running instance of an image.</source>
          <target state="translated">Un <bpt id="p1">*</bpt>conteneur Docker<ept id="p1">*</ept> est une instance en cours d’exécution d’une image.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You scale an application by running the same image in many containers.</source>
          <target state="translated">Vous faites évoluer une application en exécutant la même image dans plusieurs conteneurs.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Conceptually, this is similar to running the same application in multiple hosts.</source>
          <target state="translated">Conceptuellement, cette opération est similaire à l’exécution de la même application dans plusieurs hôtes.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can learn more about the Docker architecture by reading the <bpt id="p1">[</bpt>Docker Overview<ept id="p1">](https://docs.docker.com/engine/understanding-docker/)</ept> on the Docker site.</source>
          <target state="translated">Vous pouvez en savoir plus sur l’architecture de Docker en consultant <bpt id="p1">[</bpt>Docker Overview<ept id="p1">](https://docs.docker.com/engine/understanding-docker/)</ept> (Vue d’ensemble de Docker) sur le site Docker.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Moving your console application is a matter of a few steps.</source>
          <target state="translated">Le déplacement de votre application console se fait en quelques étapes.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Build the application<ept id="p1">](#building-the-application)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Générer l’application<ept id="p1">](#building-the-application)</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Creating a Dockerfile for the image<ept id="p1">](#creating-the-dockerfile)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Création d’un fichier Dockerfile pour l’image<ept id="p1">](#creating-the-dockerfile)</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Process to build and run the Docker container<ept id="p1">](#creating-the-image)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Processus pour générer et exécuter le conteneur Docker<ept id="p1">](#creating-the-image)</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prérequis</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Windows containers are supported on <bpt id="p1">[</bpt>Windows 10 Anniversary Update<ept id="p1">](https://www.microsoft.com/en-us/software-download/windows10/)</ept> or <bpt id="p2">[</bpt>Windows Server 2016<ept id="p2">](https://www.microsoft.com/en-us/cloud-platform/windows-server)</ept>.</source>
          <target state="translated">Les conteneurs Windows sont pris en charge sur <bpt id="p1">[</bpt>Mise à jour anniversaire Windows 10<ept id="p1">](https://www.microsoft.com/en-us/software-download/windows10/)</ept> ou <bpt id="p2">[</bpt>Windows Server 2016<ept id="p2">](https://www.microsoft.com/en-us/cloud-platform/windows-server)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you are using Windows Server 2016, you must enable containers manually since the Docker for Windows installer will not enable the feature.</source>
          <target state="translated">Si vous utilisez Windows Server 2016, vous devez activer manuellement les conteneurs dans la mesure où le programme d’installation de Docker pour Windows n’active pas cette fonctionnalité.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Make sure all updates have run for the OS and then follow the instructions from the <bpt id="p1">[</bpt>Container Host Deployment<ept id="p1">](https://msdn.microsoft.com/en-us/virtualization/windowscontainers/deployment/deployment)</ept> article to install the containers and Docker features.</source>
          <target state="translated">Vérifiez que toutes les mises à jour ont été exécutées pour le système d’exploitation, puis suivez les instructions indiquées dans l’article <bpt id="p1">[</bpt>Déploiement d’un hôte de conteneurs<ept id="p1">](https://msdn.microsoft.com/en-us/virtualization/windowscontainers/deployment/deployment)</ept> pour installer les fonctionnalités Docker et les conteneurs.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You need to have Docker for Windows, version 1.12 Beta 26 or higher to support Windows containers.</source>
          <target state="translated">Vous devez disposer de Docker pour Windows, version 1.12 bêta 26 ou ultérieure, pour prendre en charge les conteneurs Windows.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>By default, Docker enables Linux based containers; switch to Windows containers by right clicking the Docker icon in the system tray and select <bpt id="p1">**</bpt>Switch to Windows containers<ept id="p1">**</ept>.</source>
          <target state="translated">Par défaut, Docker autorise les conteneurs Linux ; basculez vers les conteneurs Windows en cliquant avec le bouton droit sur l’icône Docker dans la barre d’état système et en sélectionnant <bpt id="p1">**</bpt>Switch to Windows containers<ept id="p1">**</ept> (Basculer vers les conteneurs Windows).</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Docker will run the process to change and a restart may be required.</source>
          <target state="translated">Docker exécute le processus de modification et un redémarrage peut être nécessaire.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Windows-Containers</source>
          <target state="translated">Conteneurs Windows</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Building the application</source>
          <target state="translated">Génération de l’application</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Typically console applications are distributed through an installer, FTP, or File Share deployment.</source>
          <target state="translated">En général, les applications console sont distribuées par le biais d’un programme d’installation, de FTP ou d’un déploiement avec partage de fichiers.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When deploying to a container, the assets need to be compiled and staged to a location that can be used when the Docker image is created.</source>
          <target state="translated">Pendant le déploiement sur un conteneur, les ressources doivent être compilées et transférées vers un emplacement qui peut être utilisé au moment de la création de l’image Docker.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">*</bpt>build.ps1<ept id="p1">*</ept>, the script uses <bpt id="p2">[</bpt>MSBuild<ept id="p2">](https://msdn.microsoft.com/en-us/library/dd393574.aspx)</ept> to compile the application to complete the task of building the assets.</source>
          <target state="translated">Dans <bpt id="p1">*</bpt>build.ps1<ept id="p1">*</ept>, le script utilise <bpt id="p2">[</bpt>MSBuild<ept id="p2">](https://msdn.microsoft.com/en-us/library/dd393574.aspx)</ept> pour compiler l’application afin de terminer la tâche de création des ressources.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>There are a few parameters passed to MSBuild to finalize the needed assets.</source>
          <target state="translated">Quelques paramètres sont passés à MSBuild pour finaliser les ressources nécessaires :</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The name of the project file or solution to be compiled, the location for the output and finally the configuration (Release or Debug).</source>
          <target state="translated">le nom de la solution ou du fichier de projet à compiler, l’emplacement de la sortie et enfin la configuration (débogage ou release).</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In the call to <ph id="ph1">`Invoke-MSBuild`</ph> the <ph id="ph2">`OutputPath`</ph> is set to <bpt id="p1">**</bpt>publish<ept id="p1">**</ept> and  <ph id="ph3">`Configuration`</ph> set to <bpt id="p2">**</bpt>Release<ept id="p2">**</ept>.</source>
          <target state="translated">Dans l’appel à <ph id="ph1">`Invoke-MSBuild`</ph>, <ph id="ph2">`OutputPath`</ph> est défini sur <bpt id="p1">**</bpt>publish<ept id="p1">**</ept> et <ph id="ph3">`Configuration`</ph> sur <bpt id="p2">**</bpt>Release<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Creating the Dockerfile</source>
          <target state="translated">Création du fichier Dockerfile</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The base image used for a console .NET Framework application is <ph id="ph1">`microsoft/windowsservercore`</ph>, publicly available on <bpt id="p1">[</bpt>Docker Hub<ept id="p1">](https://hub.docker.com/r/microsoft/windowsservercore/)</ept>.</source>
          <target state="translated">L’image de base utilisée pour une application console .NET Framework est <ph id="ph1">`microsoft/windowsservercore`</ph>, disponible publiquement sur le <bpt id="p1">[</bpt>Hub Docker<ept id="p1">](https://hub.docker.com/r/microsoft/windowsservercore/)</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The base image contains a minimal installation of Windows Server 2016, .NET Framework 4.6.2 and serves as the base OS image for Windows Containers.</source>
          <target state="translated">L’image de base contient une installation minimale de Windows Server 2016, .NET Framework 4.6.2, et sert d’image de système d’exploitation de base pour les conteneurs Windows.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The first line in the Dockerfile designates the base image using the <bpt id="p1">[</bpt><ph id="ph1">`FROM`</ph><ept id="p1">](https://docs.docker.com/engine/reference/builder/#/from)</ept> instruction.</source>
          <target state="translated">La première ligne du fichier Dockerfile désigne l’image de base à l’aide de l’instruction <bpt id="p1">[</bpt><ph id="ph1">`FROM`</ph><ept id="p1">](https://docs.docker.com/engine/reference/builder/#/from)</ept>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Next, <bpt id="p1">[</bpt><ph id="ph1">`ADD`</ph><ept id="p1">](https://docs.docker.com/engine/reference/builder/#/add)</ept> in the file copies the application assets from the <bpt id="p2">**</bpt>publish<ept id="p2">**</ept> folder to root folder of the container and last; setting the <bpt id="p3">[</bpt><ph id="ph2">`ENTRYPOINT`</ph><ept id="p3">](https://docs.docker.com/engine/reference/builder/#/entrypoint)</ept> of the image states that this is the command or application that will run when the container starts.</source>
          <target state="translated">Ensuite, l’instruction <bpt id="p1">[</bpt><ph id="ph1">`ADD`</ph><ept id="p1">](https://docs.docker.com/engine/reference/builder/#/add)</ept> dans le fichier copie les ressources de l’application à partir du dossier <bpt id="p2">**</bpt>publish<ept id="p2">**</ept> vers le dossier racine du conteneur. Enfin, le paramètre <bpt id="p3">[</bpt><ph id="ph2">`ENTRYPOINT`</ph><ept id="p3">](https://docs.docker.com/engine/reference/builder/#/entrypoint)</ept> de l’image indique qu’il s’agit de la commande ou de l’application qui s’exécute au démarrage du conteneur.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Creating the image</source>
          <target state="translated">Création de l’image</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In order to create the Docker image, the following code is added to the <bpt id="p1">*</bpt>build.ps1<ept id="p1">*</ept> script.</source>
          <target state="translated">Pour créer l’image Docker, le code suivant est ajouté au script <bpt id="p1">*</bpt>build.ps1<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When the script is run, the <ph id="ph1">`console-random-answer-generator`</ph> image is created using the assets compiled from MSBuild defined in the <bpt id="p1">[</bpt>Building the application<ept id="p1">](#building-the-application)</ept> section.</source>
          <target state="translated">Quand le script est exécuté, l’image <ph id="ph1">`console-random-answer-generator`</ph> est créée en utilisant les ressources compilées à partir de MSBuild, comme défini dans la section <bpt id="p1">[</bpt>Génération de l’application<ept id="p1">](#building-the-application)</ept>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Run the script using <ph id="ph1">`.\build.ps1`</ph> from the PowerShell command prompt.</source>
          <target state="translated">Exécutez le script à l’aide de <ph id="ph1">`.\build.ps1`</ph> à partir de l’invite de commandes PowerShell.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>When the build is complete, using the <ph id="ph1">`docker images`</ph> command from a command line or PowerShell prompt; you'll see that the image is created and ready to be run.</source>
          <target state="translated">Quand la build est terminée, vous pouvez utiliser la commande <ph id="ph1">`docker images`</ph> à partir d’une ligne de commande ou d’une invite de commandes PowerShell pour constater que l’image est créée et prête à être exécutée.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Running the container</source>
          <target state="translated">Exécution du conteneur</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can start the container from the command line using the Docker commands.</source>
          <target state="translated">Vous pouvez démarrer le conteneur à partir de la ligne de commande en utilisant les commandes Docker.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The output is</source>
          <target state="translated">La sortie est la suivante :</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If you run the <ph id="ph1">`docker ps -a`</ph> command from PowerShell, you can see that the container still exists.</source>
          <target state="translated">Si vous exécutez la commande <ph id="ph1">`docker ps -a`</ph> à partir de PowerShell, vous pouvez voir que le conteneur existe toujours.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The STATUS column shows at "About a minute ago", the application was complete and could be shut down.</source>
          <target state="translated">La colonne STATUS indique que l’application s’est terminée et qu’elle a pu être arrêtée environ une minute auparavant (« About a minute ago »).</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If the command was run a hundred times, there would be a hundred containers left static with no work to do.</source>
          <target state="translated">Si la commande était exécutée une centaine de fois, une centaine de conteneurs demeureraient statiques sans aucune tâche à effectuer.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the beginning scenario the ideal operation was to do the work and shutdown or cleanup.</source>
          <target state="translated">Dans le scénario initial, l’opération idéale était d’effectuer le travail, puis de procéder à un arrêt ou nettoyage.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To accomplish that workflow, adding the <ph id="ph1">`--rm`</ph> option to the <ph id="ph2">`docker run`</ph> command will remove the container as soon as the <ph id="ph3">`Exited`</ph> signal is received.</source>
          <target state="translated">Pour accomplir ce flux de travail, l’ajout de l’option <ph id="ph1">`--rm`</ph> à la commande <ph id="ph2">`docker run`</ph> permet de supprimer le conteneur dès la réception du signal <ph id="ph3">`Exited`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Running the command with this option and then looking at the output of <ph id="ph1">`docker ps -a`</ph> command; notice that the container id (the <ph id="ph2">`Environment.MachineName`</ph>) is not in the list.</source>
          <target state="translated">Exécutez la commande avec cette option, puis consultez le résultat de la commande <ph id="ph1">`docker ps -a`</ph> ; vous pouvez constater que l’ID de conteneur (<ph id="ph2">`Environment.MachineName`</ph>) n’est pas dans la liste.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Running the container using PowerShell</source>
          <target state="translated">Exécution du conteneur à l’aide de PowerShell</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In the sample project files there is also a <bpt id="p1">*</bpt>run.ps1<ept id="p1">*</ept> which is an example of how to use PowerShell to run the application accepting the arguments.</source>
          <target state="translated">Les exemples de fichiers de projet contiennent également un script <bpt id="p1">*</bpt>run.ps1<ept id="p1">*</ept> qui montre comment utiliser PowerShell pour exécuter l’application acceptant les arguments.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To run, open PowerShell and use the following command:</source>
          <target state="translated">Pour ce faire, ouvrez PowerShell et utilisez la commande suivante :</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Résumé</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Just by adding a Dockerfile and publishing the application, you can containerize your .NET Framework console applications and now take the advantage of running multiple instances, clean start and stop and more Windows Server 2016 capabilities without making any changes to the application code at all.</source>
          <target state="translated">Simplement en ajoutant un fichier Dockerfile et en publiant l’application, vous pouvez exécuter vos applications console .NET Framework dans des conteneurs et tirer enfin parti de l’exécution de plusieurs instances, d’un démarrage/arrêt propre et d’autres fonctionnalités de Windows Server 2016 sans apporter de modification au code de l’application.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>