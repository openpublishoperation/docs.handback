<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5712f14d53b86552a0b82af38ecf579577ef3fa1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\program-structure\coding-conventions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be79e139dde0c8f78fddab32bfd5865e2810f39f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1fbb454b2fd9324655076dceac28fb8b2452449</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Visual Basic Coding Conventions | Microsoft Docs</source>
          <target state="translated">Conventions de codage Visual Basic | Documents Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Visual Basic Coding Conventions</source>
          <target state="translated">Conventions de codage Visual Basic</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Microsoft develops samples and documentation that follow the guidelines in this topic.</source>
          <target state="translated">Microsoft développe des exemples et une documentation qui suivent les instructions de cette rubrique.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you follow the same coding conventions, you may gain the following benefits:</source>
          <target state="translated">Si vous suivez les mêmes conventions de codage, vous pouvez bénéficiez des avantages suivants :</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Your code will have a consistent look, so that readers can better focus on content, not layout.</source>
          <target state="translated">Votre code aura une apparence cohérente, afin que les lecteurs peuvent mieux se concentrer sur le contenu, pas sur la disposition.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Readers understand your code more quickly because they can make assumptions based on previous experience.</source>
          <target state="translated">Lecteurs de comprennent votre code plus rapidement car ils peuvent apporter des hypothèses selon leur expérience précédente.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can copy, change, and maintain the code more easily.</source>
          <target state="translated">Vous pouvez copier, modifier et mettre à jour le code plus facilement.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You help ensure that your code demonstrates "best practices" for Visual Basic.</source>
          <target state="translated">Vous assurer que votre code illustre les « meilleures pratiques » pour Visual Basic.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Naming Conventions</source>
          <target state="translated">Conventions d'affectation de noms</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For information about naming guidelines, see <bpt id="p1">[</bpt>Naming Guidelines<ept id="p1">](http://msdn.microsoft.com/library/fc076d66-9b5f-42d3-aa65-61d970c794a3)</ept> topic.</source>
          <target state="translated">Pour plus d’informations sur les instructions d’affectation de noms, consultez <bpt id="p1">[</bpt>recommandées<ept id="p1">](http://msdn.microsoft.com/library/fc076d66-9b5f-42d3-aa65-61d970c794a3)</ept> rubrique.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Do not use "My" or "my" as part of a variable name.</source>
          <target state="translated">N’utilisez pas « Mon » ou « my » en tant que partie d’un nom de variable.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This practice creates confusion with the <ph id="ph1">`My`</ph> objects.</source>
          <target state="translated">Cela crée la confusion avec le <ph id="ph1">`My`</ph> objets.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You do not have to change the names of objects in auto-generated code to make them fit the guidelines.</source>
          <target state="translated">Vous n’avez pas à modifier les noms des objets dans le code généré automatiquement pour les rendre conformes aux indications.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Layout Conventions</source>
          <target state="translated">Conventions de disposition</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Insert tabs as spaces, and use smart indenting with four-space indents.</source>
          <target state="translated">Insérer des tabulations en espaces et utiliser la mise en retrait intelligente avec retrait de quatre espaces.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">**</bpt>Pretty listing (reformatting) of code<ept id="p1">**</ept> to reformat your code in the code editor.</source>
          <target state="translated">Utilisez <bpt id="p1">**</bpt>liste assez (Reformatage) d’un code<ept id="p1">**</ept> pour remettre en forme votre code dans l’éditeur de code.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Options, Text Editor, Basic (Visual Basic)<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/options-text-editor-basic-visual-basic)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Options, éditeur de texte, Basic (Visual Basic)<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/options-text-editor-basic-visual-basic)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Use only one statement per line.</source>
          <target state="translated">Utiliser qu’une seule instruction par ligne.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Don't use the Visual Basic line separator character (:).</source>
          <target state="translated">N’utilisez pas le caractère de séparation de ligne Visual Basic ( :).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Avoid using the explicit line continuation character "_" in favor of implicit line continuation wherever the language allows it.</source>
          <target state="translated">Évitez d’utiliser le caractère de continuation de ligne explicite « _ » en faveur de la continuation de ligne implicite partout où il permet à la langue.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Use only one declaration per line.</source>
          <target state="translated">Utilisez uniquement une seule déclaration par ligne.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>Pretty listing (reformatting) of code<ept id="p1">**</ept> doesn't format continuation lines automatically, manually indent continuation lines one tab stop.</source>
          <target state="translated">Si <bpt id="p1">**</bpt>liste assez (Reformatage) d’un code<ept id="p1">**</ept> ne les lignes de continuation format automatiquement, manuellement mettre en retrait continuation lignes un taquet de tabulation.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>However, always left-align items in a list.</source>
          <target state="translated">Toutefois, toujours aligner à gauche des éléments dans une liste.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Add at least one blank line between method and property definitions.</source>
          <target state="translated">Ajoutez au moins une ligne vide entre les définitions de méthode et de propriété.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Commenting Conventions</source>
          <target state="translated">Conventions de commentaires</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Put comments on a separate line instead of at the end of a line of code.</source>
          <target state="translated">Placer des commentaires sur une ligne distincte et non à la fin d’une ligne de code.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Start comment text with an uppercase letter, and end comment text with a period.</source>
          <target state="translated">Démarrer le commentaire par une lettre majuscule et le texte de commentaire fin avec une période.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Insert one space between the comment delimiter (') and the comment text.</source>
          <target state="translated">Insérez un espace entre le délimiteur de commentaire (') et le texte du commentaire.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#2<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines n °&amp;2;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Do not surround comments with formatted blocks of asterisks.</source>
          <target state="translated">N’encadrez pas de commentaires avec des blocs d’astérisques mis en forme.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Program Structure</source>
          <target state="translated">Structure du programme</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When you use the <ph id="ph1">`Main`</ph> method, use the default construct for new console applications, and use <ph id="ph2">`My`</ph> for command-line arguments.</source>
          <target state="translated">Lorsque vous utilisez la <ph id="ph1">`Main`</ph> (méthode), utilisez la construction par défaut pour les nouvelles applications de console et <ph id="ph2">`My`</ph> pour les arguments de ligne de commande.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#3<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines n °&amp;3;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Language Guidelines</source>
          <target state="translated">Directives du langage</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>String Data Type</source>
          <target state="translated">String, type de données</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To concatenate strings, use an ampersand (&amp;).</source>
          <target state="translated">Pour concaténer des chaînes, utilisez une esperluette (&amp;).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#4<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines n °&amp;4;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To append strings in loops, use the &lt;xref:System.Text.StringBuilder&gt; object.</source>
          <target state="translated">Pour ajouter des chaînes dans des boucles, utilisez le &lt;xref:System.Text.StringBuilder&gt;objet.&lt;/xref:System.Text.StringBuilder&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#5<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines n °&amp;5;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Relaxed Delegates in Event Handlers</source>
          <target state="translated">Délégués souples dans les gestionnaires d’événements</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Do not explicitly qualify the arguments (Object and EventArgs) to event handlers.</source>
          <target state="translated">Ne qualifiez pas explicitement les arguments (objet et EventArgs) aux gestionnaires d’événements.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you are not using the event arguments that are passed to an event (for example, sender as Object, e as EventArgs), use relaxed delegates, and leave out the event arguments in your code:</source>
          <target state="translated">Si vous n’utilisez pas les arguments d’événement sont passés à un événement (par exemple, l’expéditeur en tant qu’objet, e comme EventArgs), utilisez les délégués non stricts et laisser de côté les arguments d’événement dans votre code :</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#7<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines&amp;#7;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Unsigned Data Type</source>
          <target state="translated">Type de données non signé</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`Integer`</ph> rather than unsigned types, except where they are necessary.</source>
          <target state="translated">Utilisez <ph id="ph1">`Integer`</ph> plutôt que les types non signés, sauf s’ils sont nécessaires.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Tableaux</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Use the short syntax when you initialize arrays on the declaration line.</source>
          <target state="translated">Utilisez la syntaxe courte lorsque vous initialisez des tableaux sur la ligne de déclaration.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, use the following syntax.</source>
          <target state="translated">Par exemple, utilisez la syntaxe suivante.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#8<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines n °&amp;8;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Do not use the following syntax.</source>
          <target state="translated">N’utilisez pas la syntaxe suivante.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#9<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_7.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines&amp;#9;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_7.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Put the array designator on the type, not on the variable.</source>
          <target state="translated">Placez l’indicateur de tableau sur le type, et non sur la variable.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, use the following syntax:</source>
          <target state="translated">Par exemple, utilisez la syntaxe suivante :</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#11<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_8.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines&amp;#11;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_8.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Do not use the following syntax:</source>
          <target state="translated">N’utilisez pas la syntaxe suivante :</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#10<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_9.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines&amp;#10;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_9.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Use the { } syntax when you declare and initialize arrays of basic data types.</source>
          <target state="translated">Utilisez la syntaxe {} lorsque vous déclarez et initialisez des tableaux de types de base de données.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For example, use the following syntax:</source>
          <target state="translated">Par exemple, utilisez la syntaxe suivante :</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#12<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_10.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines&amp;#12;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_10.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Do not use the following syntax:</source>
          <target state="translated">N’utilisez pas la syntaxe suivante :</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#13<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_11.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines&amp;#13;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_11.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Use the With Keyword</source>
          <target state="translated">Utilisez le mot clé</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When you make a series of calls to one object, consider using the <ph id="ph1">`With`</ph> keyword:</source>
          <target state="translated">Lorsque vous effectuez une série d’appels à un objet, envisagez d’utiliser le <ph id="ph1">`With`</ph> mot clé :</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#15<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_12.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines&amp;#15;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_12.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Use the Try...Catch and Using Statements when you use Exception Handling</source>
          <target state="translated">Utilisez les instructions Try... Catch et les instructions Using lorsque vous utilisez la gestion des exceptions</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Do not use <ph id="ph1">`On Error Goto`</ph>.</source>
          <target state="translated">N’utilisez pas <ph id="ph1">`On Error Goto`</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Use the IsNot Keyword</source>
          <target state="translated">Utilisez le mot-clé IsNot</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`IsNot`</ph> keyword instead of <ph id="ph2">`Not...Is Nothing`</ph>.</source>
          <target state="translated">Utilisez le <ph id="ph1">`IsNot`</ph> (mot clé) au lieu de <ph id="ph2">`Not...Is Nothing`</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>New Keyword</source>
          <target state="translated">Nouveau mot clé</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Use short instantiation.</source>
          <target state="translated">Utilisez l’instanciation courte.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, use the following syntax:</source>
          <target state="translated">Par exemple, utilisez la syntaxe suivante :</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#21<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_13.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines n °&amp;21;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_13.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The preceding line is equivalent to this:</source>
          <target state="translated">La ligne précédente est équivalente à ceci :</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#22<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_14.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines&amp;#22;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_14.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Use object initializers for new objects instead of the parameterless constructor:</source>
          <target state="translated">Utilisez des initialiseurs d’objets pour les nouveaux objets au lieu du constructeur sans paramètre :</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#23<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_15.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines n °&amp;23;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_15.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Event Handling</source>
          <target state="translated">Gestion des événements</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`Handles`</ph> rather than <ph id="ph2">`AddHandler`</ph>:</source>
          <target state="translated">Utilisez <ph id="ph1">`Handles`</ph> plutôt que <ph id="ph2">`AddHandler`</ph>:</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#24<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_16.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines&amp;#24;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_16.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`AddressOf`</ph>, and do not instantiate the delegate explicitly:</source>
          <target state="translated">Utilisez <ph id="ph1">`AddressOf`</ph>et vous n’instanciez pas le délégué explicitement :</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#25<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_17.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines&amp;#25;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_17.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>When you define an event, use the short syntax, and let the compiler define the delegate:</source>
          <target state="translated">Lorsque vous définissez un événement, utilisez la syntaxe courte et laissez le compilateur définir le délégué :</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#26<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_18.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines&amp;#26;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_18.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Do not verify whether an event is <ph id="ph1">`Nothing`</ph> (null) before you call the <ph id="ph2">`RaiseEvent`</ph> method.</source>
          <target state="translated">Ne pas vérifier si un événement est <ph id="ph1">`Nothing`</ph> (null) avant d’appeler le <ph id="ph2">`RaiseEvent`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`RaiseEvent`</ph> checks for <ph id="ph2">`Nothing`</ph> before it raises the event.</source>
          <target state="translated"><ph id="ph1">`RaiseEvent`</ph>vérifie le <ph id="ph2">`Nothing`</ph> avant de déclencher l’événement.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Using Shared Members</source>
          <target state="translated">À l’aide de membres partagés</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`Shared`</ph> members by using the class name, not from an instance variable.</source>
          <target state="translated">Appelez <ph id="ph1">`Shared`</ph> membres en utilisant le nom de classe, pas à partir d’une variable d’instance.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Use XML Literals</source>
          <target state="translated">Utiliser des littéraux XML</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>XML literals simplify the most common tasks that you encounter when you work with XML (for example, load, query, and transform).</source>
          <target state="translated">Les littéraux XML simplifient les tâches les plus courantes que vous rencontrez lorsque vous utilisez XML (par exemple, charge, requête et transformation).</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>When you develop with XML, follow these guidelines:</source>
          <target state="translated">Lorsque vous développez avec XML, suivez ces instructions :</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Use XML literals to create XML documents and fragments instead of calling XML APIs directly.</source>
          <target state="translated">Utiliser des littéraux XML pour créer des documents XML et des fragments au lieu d’appeler directement des API XML.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Import XML namespaces at the file or project level to take advantage of the performance optimizations for XML literals.</source>
          <target state="translated">Importez les espaces de noms XML au niveau du fichier ou du projet pour tirer parti des optimisations des performances des littéraux XML.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Use the XML axis properties to access elements and attributes in an XML document.</source>
          <target state="translated">Utilisez les propriétés d’axe XML pour accéder aux éléments et attributs dans un document XML.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Use embedded expressions to include values and to create XML from existing values instead of using API calls such as the <ph id="ph1">`Add`</ph> method:</source>
          <target state="translated">Utiliser des expressions incorporées pour inclure des valeurs et créer du code XML à partir de valeurs existantes au lieu d’utiliser des appels d’API tels que la <ph id="ph1">`Add`</ph> méthode :</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#27<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_19.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>27 VbVbalrGuidelines<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_19.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>LINQ Queries</source>
          <target state="translated">Requêtes LINQ</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Use meaningful names for query variables:</source>
          <target state="translated">Utilisez des noms explicites pour les variables de requête :</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#28<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_20.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines&amp;#28;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_20.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Provide names for elements in a query to make sure that property names of anonymous types are correctly capitalized using Pascal casing:</source>
          <target state="translated">Fournir des noms pour les éléments dans une requête pour vous assurer que les noms de propriété des types anonymes sont correctement écrits en majuscules à l’aide de la casse Pascal casse :</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#29<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_21.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines&amp;#29;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_21.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Rename properties when the property names in the result would be ambiguous.</source>
          <target state="translated">Renommez les propriétés lorsque les noms de propriétés dans le résultat sont ambigus.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For example, if your query returns a customer name and an order ID, rename them instead of leaving them as <ph id="ph1">`Name`</ph> and <ph id="ph2">`ID`</ph> in the result:</source>
          <target state="translated">Par exemple, si votre requête retourne un client, nom et un ID de commande, les renommer au lieu de les laisser en tant que <ph id="ph1">`Name`</ph> et <ph id="ph2">`ID`</ph> dans le résultat :</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#30<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_22.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>30 VbVbalrGuidelines<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_22.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Use type inference in the declaration of query variables and range variables:</source>
          <target state="translated">Utiliser l’inférence de type dans la déclaration de variables de requête et des variables de portée :</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#31<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_23.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines&amp;#31;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_23.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Align query clauses under the <ph id="ph1">`From`</ph> statement:</source>
          <target state="translated">Alignez les clauses de requête sous la <ph id="ph1">`From`</ph> instruction :</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#32<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_24.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines n°&amp;32;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_24.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`Where`</ph> clauses before other query clauses so that later query clauses operate on the filtered set of data:</source>
          <target state="translated">Utilisez <ph id="ph1">`Where`</ph> clauses avant les autres clauses de requête afin que les clauses de requête ultérieures opèrent sur l’ensemble filtré de données :</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#33<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_25.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines&amp;#33;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_25.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`Join`</ph> clause to explicitly define a join operation instead of using the <ph id="ph2">`Where`</ph> clause to implicitly define a join operation:</source>
          <target state="translated">Utilisez le <ph id="ph1">`Join`</ph> clause pour définir explicitement une opération de jointure au lieu d’utiliser le <ph id="ph2">`Where`</ph> clause définir implicitement une opération de jointure :</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#34<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_26.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines&amp;#34;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_26.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Voir aussi</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Secure Coding Guidelines<ept id="p1">](http://msdn.microsoft.com/library/4f882d94-262b-4494-b0a6-ba9ba1f5f177)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Instructions de codage sécurisé<ept id="p1">](http://msdn.microsoft.com/library/4f882d94-262b-4494-b0a6-ba9ba1f5f177)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>