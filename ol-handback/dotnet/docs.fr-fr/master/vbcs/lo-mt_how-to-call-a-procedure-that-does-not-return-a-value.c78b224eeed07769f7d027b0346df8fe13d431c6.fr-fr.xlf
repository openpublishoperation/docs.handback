<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17b2b902f3ee6ab79b2614b7742aa08fefab2420</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\procedures\how-to-call-a-procedure-that-does-not-return-a-value.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e003ded6b136cacef1903c9249bd0a120e9d745</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3569e2cd3f9fd0a3cd218cac8d239d25515fddb2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Call a Procedure that Does Not Return a Value (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Comment : appeler une procédure qui ne retourne pas de valeur (Visual Basic) | Documents Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Call a Procedure that Does Not Return a Value (Visual Basic)</source>
          <target state="translated">Comment : appeler une procédure qui ne retourne pas de valeur (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Sub`</ph> procedure does not return a value to the calling code.</source>
          <target state="translated">Un <ph id="ph1">`Sub`</ph> procédure ne retourne pas de valeur au code appelant.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You call it explicitly with a stand-alone calling statement.</source>
          <target state="translated">Vous l’appelez explicitement avec une instruction d’appel autonome.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You cannot call it by simply using its name within an expression.</source>
          <target state="translated">Vous ne pouvez pas l’appeler en utilisant simplement son nom dans une expression.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To call a Sub procedure</source>
          <target state="translated">Pour appeler une procédure Sub</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Specify the name of the <ph id="ph1">`Sub`</ph> procedure.</source>
          <target state="translated">Spécifiez le nom de la <ph id="ph1">`Sub`</ph> procédure.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Follow the procedure name with parentheses to enclose the argument list.</source>
          <target state="translated">Suivre le nom de procédure avec des parenthèses pour encadrer la liste d’arguments.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If there are no arguments, you can optionally omit the parentheses.</source>
          <target state="translated">S’il n’y a pas d’arguments, vous pouvez éventuellement omettre les parenthèses.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>However, using the parentheses makes your code easier to read.</source>
          <target state="translated">Toutefois, à l’aide de parenthèses rend votre code plus facile à lire.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Place the arguments in the argument list within the parentheses, separated by commas.</source>
          <target state="translated">Placez les arguments dans la liste d’arguments entre parenthèses, séparées par des virgules.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Be sure you supply the arguments in the same order that the <ph id="ph1">`Sub`</ph> procedure defines the corresponding parameters.</source>
          <target state="translated">Assurez-vous de fournir les arguments dans le même ordre que les <ph id="ph1">`Sub`</ph> procédure définit les paramètres correspondants.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following example calls the <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> &lt;xref:Microsoft.VisualBasic.Interaction.AppActivate%2A&gt; function to activate an application window.</source>
          <target state="translated">L’exemple suivant appelle la <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> &lt;xref:Microsoft.VisualBasic.Interaction.AppActivate%2A&gt;fonction pour activer une fenêtre d’application.&lt;/xref:Microsoft.VisualBasic.Interaction.AppActivate%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>&lt;xref:Microsoft.VisualBasic.Interaction.AppActivate%2A&gt; takes the window title as its sole argument.</source>
          <target state="translated">&lt;xref:Microsoft.VisualBasic.Interaction.AppActivate%2A&gt;accepte le titre de la fenêtre comme unique argument.&lt;/xref:Microsoft.VisualBasic.Interaction.AppActivate%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>It does not return a value to the calling code.</source>
          <target state="translated">Il ne retourne pas de valeur au code appelant.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If a Notepad process is not running, the example throws an &lt;xref:System.ArgumentException&gt;.</source>
          <target state="translated">Si un processus Notepad n’est pas en cours d’exécution, l’exemple lève un &lt;xref:System.ArgumentException&gt;.&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Shell`</ph> procedure assumes the applications are in the paths specified.</source>
          <target state="translated">Le <ph id="ph1">`Shell`</ph> procédure suppose que les applications se trouvent dans les chemins d’accès spécifiés.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef#11<ept id="p2">](./codesnippet/VisualBasic/how-to-call-a-procedure-that-does-not-return-a-value_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrCatRef&amp;#11;<ept id="p2">](./codesnippet/VisualBasic/how-to-call-a-procedure-that-does-not-return-a-value_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Voir aussi</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>&lt;xref:Microsoft.VisualBasic.Interaction.Shell%2A&gt;</source>
          <target state="translated">&lt;xref:Microsoft.VisualBasic.Interaction.Shell%2A&gt;&lt;/xref:Microsoft.VisualBasic.Interaction.Shell%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.ArgumentException&gt;</source>
          <target state="translated">&lt;xref:System.ArgumentException&gt;&lt;/xref:System.ArgumentException&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procédures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Sub Procedures<ept id="p1">](./sub-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procédures Sub<ept id="p1">](./sub-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Parameters and Arguments<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Arguments et paramètres de procédure<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Sub Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/sub-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Sub (instruction)<ept id="p1">](../../../../visual-basic/language-reference/statements/sub-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create a Procedure<ept id="p1">](./how-to-create-a-procedure.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Comment : créer une procédure<ept id="p1">](./how-to-create-a-procedure.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Call a Procedure That Returns a Value<ept id="p1">](./how-to-call-a-procedure-that-returns-a-value.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Comment : appeler une procédure qui retourne une valeur<ept id="p1">](./how-to-call-a-procedure-that-returns-a-value.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Call an Event Handler in Visual Basic<ept id="p1">](./how-to-call-an-event-handler.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Comment : appeler un gestionnaire d’événements en Visual Basic<ept id="p1">](./how-to-call-an-event-handler.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>