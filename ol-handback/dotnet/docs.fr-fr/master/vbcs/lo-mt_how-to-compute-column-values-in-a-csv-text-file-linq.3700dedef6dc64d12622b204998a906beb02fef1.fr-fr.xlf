<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36fbe64601ab66f7a87669fa4293f2e6d43d95c0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\how-to-compute-column-values-in-a-csv-text-file-linq.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b8ee16d22851d492a34e0c28612e2e83de8de53</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42a402c69f6689015d16f40cebc017e4e730101e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Compute Column Values in a CSV Text File (LINQ) (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Comment : calculer des valeurs de colonne dans un fichier de texte CSV (LINQ) (Visual Basic) | Documents Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Compute Column Values in a CSV Text File (LINQ) (Visual Basic)</source>
          <target state="translated">Comment : calculer des valeurs de colonne dans un fichier de texte CSV (LINQ) (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This example shows how to perform aggregate computations such as Sum, Average, Min, and Max on the columns of a .csv file.</source>
          <target state="translated">Cet exemple montre comment effectuer des calculs d’agrégation telles que somme, moyenne, Min et Max sur les colonnes d’un fichier .csv.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The example principles that are shown here can be applied to other types of structured text.</source>
          <target state="translated">Les principes d’exemple montrés ici sont applicables à d’autres types de texte structuré.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To create the source file</source>
          <target state="translated">Pour créer le fichier source</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Copy the following lines into a file that is named scores.csv and save it in your project folder.</source>
          <target state="translated">Copiez les lignes suivantes dans un fichier nommé scores.csv et enregistrez-le dans votre dossier de projet.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Assume that the first column represents a student ID, and subsequent columns represent scores from four exams.</source>
          <target state="translated">Supposons que la première colonne représente un ID d’étudiant et les colonnes suivantes représentent les résultats de quatre examens.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Exemple</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The query works by using the &lt;xref:System.String.Split%2A&gt; method to convert each line of text into an array.</source>
          <target state="translated">La requête fonctionne à l’aide de la &lt;xref:System.String.Split%2A&gt;méthode pour convertir chaque ligne de texte dans un tableau.&lt;/xref:System.String.Split%2A&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Each array element represents a column.</source>
          <target state="translated">Chaque élément du tableau représente une colonne.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Finally, the text in each column is converted to its numeric representation.</source>
          <target state="translated">Enfin, le texte dans chaque colonne est converti en sa représentation sous forme numérique.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If your file is a tab-separated file, just update the argument in the <ph id="ph1">`Split`</ph> method to <ph id="ph2">`\t`</ph>.</source>
          <target state="translated">Si votre fichier est un fichier séparé par des tabulations, modifiez simplement l’argument dans le <ph id="ph1">`Split`</ph> méthode <ph id="ph2">`\t`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
          <target state="translated">Compilation du code</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Create a project that targets the .NET Framework version 3.5 or higher with a reference to System.Core.dll and a <ph id="ph1">`Imports`</ph> statement for the System.Linq namespace.</source>
          <target state="translated">Créer un projet qui cible le .NET Framework version 3.5 ou une version ultérieure avec une référence à System.Core.dll et une <ph id="ph1">`Imports`</ph> instruction pour l’espace de noms System.Linq.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Voir aussi</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ and Strings (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-and-strings.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>LINQ et chaînes (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-and-strings.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>LINQ and File Directories (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-and-file-directories.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>LINQ et répertoires de fichiers (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-and-file-directories.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>