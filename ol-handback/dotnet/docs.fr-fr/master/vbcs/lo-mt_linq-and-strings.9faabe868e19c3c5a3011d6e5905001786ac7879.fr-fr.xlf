<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a79d1427331070da9c545fdd3175115fe187e879</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\linq-and-strings.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3d76934e41668dc09b460b6dab9597626010b96</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3237bd53f49a5b8633658d53e1be723f5b6c9105</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>LINQ and Strings (Visual Basic) | Microsoft Docs</source>
          <target state="translated">LINQ et chaînes (Visual Basic) | Documents Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>LINQ and Strings (Visual Basic)</source>
          <target state="translated">LINQ et chaînes (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>LINQ can be used to query and transform strings and collections of strings.</source>
          <target state="translated">LINQ peut être utilisé pour interroger et transformer des chaînes et des collections de chaînes.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It can be especially useful with semi-structured data in text files.</source>
          <target state="translated">Il peut être particulièrement utile avec les données semi-structurées dans les fichiers texte.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>LINQ queries can be combined with traditional string functions and regular expressions.</source>
          <target state="translated">Les requêtes LINQ peuvent être combinées avec les fonctions de chaîne traditionnelles et les expressions régulières.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, you can use the &lt;xref:System.String.Split%2A&gt; or &lt;xref:System.Text.RegularExpressions.Regex.Split%2A&gt; method to create an array of strings that you can then query or modify by using LINQ.</source>
          <target state="translated">Par exemple, vous pouvez utiliser la &lt;xref:System.String.Split%2A&gt;ou &lt;xref:System.Text.RegularExpressions.Regex.Split%2A&gt;pour créer un tableau de chaînes que vous pouvez ensuite interroger ou modifier en utilisant LINQ.&lt;/xref:System.Text.RegularExpressions.Regex.Split%2A&gt; &lt;/xref:System.String.Split%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can use the &lt;xref:System.Text.RegularExpressions.Regex.IsMatch%2A&gt; method in the <ph id="ph1">`where`</ph> clause of a LINQ query.</source>
          <target state="translated">Vous pouvez utiliser la &lt;xref:System.Text.RegularExpressions.Regex.IsMatch%2A&gt;méthode dans le <ph id="ph1">`where`</ph> clause d’une requête LINQ.&lt;/xref:System.Text.RegularExpressions.Regex.IsMatch%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>And you can use LINQ to query or modify the &lt;xref:System.Text.RegularExpressions.MatchCollection&gt; results returned by a regular expression.</source>
          <target state="translated">Et vous pouvez utiliser LINQ pour interroger ou modifier le &lt;xref:System.Text.RegularExpressions.MatchCollection&gt;les résultats retournés par une expression régulière.&lt;/xref:System.Text.RegularExpressions.MatchCollection&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can also use the techniques described in this section to transform semi-structured text data to XML.</source>
          <target state="translated">Vous pouvez également utiliser les techniques décrites dans cette section pour transformer des données de texte semi-structurées en XML.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Generate XML from CSV Files<ept id="p1">](how-to-generate-xml-from-csv-files.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Comment : générer du code XML à partir de fichiers CSV<ept id="p1">](how-to-generate-xml-from-csv-files.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The examples in this section fall into two categories:</source>
          <target state="translated">Les exemples de cette section se répartissent en deux catégories :</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Querying a Block of Text</source>
          <target state="translated">Interrogation d’un bloc de texte</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can query, analyze, and modify text blocks by splitting them into a queryable array of smaller strings by using the &lt;xref:System.String.Split%2A&gt; method or the &lt;xref:System.Text.RegularExpressions.Regex.Split%2A&gt; method.</source>
          <target state="translated">Vous pouvez interroger, analyser et modifier des blocs de texte en les fractionnant en un tableau requêtable de plus petites chaînes à l’aide de la &lt;xref:System.String.Split%2A&gt;méthode ou &lt;xref:System.Text.RegularExpressions.Regex.Split%2A&gt;méthode.&lt;/xref:System.Text.RegularExpressions.Regex.Split%2A&gt; &lt;/xref:System.String.Split%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can split the source text into words, sentences, paragraphs, pages, or any other criteria, and then perform additional splits if they are required in your query.</source>
          <target state="translated">Vous pouvez fractionner le texte source en mots, phrases, paragraphes, pages ou d’autres critères et puis effectuer des fractionnements supplémentaires s’ils sont requis dans votre requête.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Count Occurrences of a Word in a String (LINQ) (Visual Basic)<ept id="p1">](how-to-count-occurrences-of-a-word-in-a-string-linq.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Comment : compter les Occurrences d’un mot dans une chaîne (LINQ) (Visual Basic)<ept id="p1">](how-to-count-occurrences-of-a-word-in-a-string-linq.md)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Shows how to use LINQ for simple querying over text.</source>
          <target state="translated">Montre comment utiliser LINQ pour les interrogations simples sur le texte.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Query for Sentences that Contain a Specified Set of Words (LINQ) (Visual Basic)<ept id="p1">](how-to-query-for-sentences-that-contain-a-specified-set-of-words.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Comment : rechercher des phrases qui contiennent un jeu spécifié de mots (LINQ) (Visual Basic)<ept id="p1">](how-to-query-for-sentences-that-contain-a-specified-set-of-words.md)</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Shows how to split text files on arbitrary boundaries and how to perform queries against each part.</source>
          <target state="translated">Montre comment fractionner des fichiers texte avec des limites arbitraires et comment exécuter des requêtes sur chaque partie.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Query for Characters in a String (LINQ) (Visual Basic)<ept id="p1">](how-to-query-for-characters-in-a-string-linq.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Comment : interroger des caractères dans une chaîne (LINQ) (Visual Basic)<ept id="p1">](how-to-query-for-characters-in-a-string-linq.md)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Demonstrates that a string is a queryable type.</source>
          <target state="translated">Montre qu’une chaîne est un type requêtable.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Combine LINQ Queries with Regular Expressions (Visual Basic)<ept id="p1">](how-to-combine-linq-queries-with-regular-expressions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Comment : combiner des requêtes LINQ avec des Expressions régulières (Visual Basic)<ept id="p1">](how-to-combine-linq-queries-with-regular-expressions.md)</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Shows how to use regular expressions in LINQ queries for complex pattern matching on filtered query results.</source>
          <target state="translated">Montre comment utiliser des expressions régulières dans les requêtes LINQ pour les critères spéciaux complexes sur les résultats de requête filtrée.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Querying Semi-Structured Data in Text Format</source>
          <target state="translated">Interrogation des données semi-structurées au Format texte</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Many different types of text files consist of a series of lines, often with similar formatting, such as tab- or comma-delimited files or fixed-length lines.</source>
          <target state="translated">Différents types de fichiers texte sont constitués d’une série de lignes, généralement avec la même mise en forme, telles que les fichiers délimité par des tabulations ou des virgules ou des lignes de longueur fixe.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>After you read such a text file into memory, you can use LINQ to query and/or modify the lines.</source>
          <target state="translated">Après avoir lu un tel fichier texte dans la mémoire, vous pouvez utiliser LINQ pour interroger et/ou modifier les lignes.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>LINQ queries also simplify the task of combining data from multiple sources.</source>
          <target state="translated">Requêtes LINQ simplifient également la combinaison des données provenant de plusieurs sources.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Find the Set Difference Between Two Lists (LINQ) (Visual Basic)<ept id="p1">](how-to-find-the-set-difference-between-two-lists-linq.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Comment : rechercher la différence définie entre deux listes (LINQ) (Visual Basic)<ept id="p1">](how-to-find-the-set-difference-between-two-lists-linq.md)</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Shows how to find all the strings that are present in one list but not the other.</source>
          <target state="translated">Montre comment rechercher toutes les chaînes qui sont présents dans une liste, mais pas l’autre.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Sort or Filter Text Data by Any Word or Field (LINQ) (Visual Basic)<ept id="p1">](how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Comment : trier ou filtrer des données texte par mot ou par champ (LINQ) (Visual Basic)<ept id="p1">](how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md)</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Shows how to sort text lines based on any word or field.</source>
          <target state="translated">Montre comment trier les lignes de texte en fonction de n’importe quel mot ou le champ.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Reorder the Fields of a Delimited File (LINQ) (Visual Basic)<ept id="p1">](how-to-reorder-the-fields-of-a-delimited-file.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Comment : réorganiser les champs d’un fichier délimité (LINQ) (Visual Basic)<ept id="p1">](how-to-reorder-the-fields-of-a-delimited-file.md)</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Shows how to reorder fields in a line in a .csv file.</source>
          <target state="translated">Montre comment réorganiser les champs dans une ligne dans un fichier .csv.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Combine and Compare String Collections (LINQ) (Visual Basic)<ept id="p1">](how-to-combine-and-compare-string-collections-linq.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Comment : combiner et comparer des Collections de chaînes (LINQ) (Visual Basic)<ept id="p1">](how-to-combine-and-compare-string-collections-linq.md)</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Shows how to combine string lists in various ways.</source>
          <target state="translated">Montre comment combiner des listes de chaîne de différentes manières.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Populate Object Collections from Multiple Sources (LINQ) (Visual Basic)<ept id="p1">](how-to-populate-object-collections-from-multiple-sources-linq.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Comment : remplir des Collections d’objets issues de plusieurs Sources (LINQ) (Visual Basic)<ept id="p1">](how-to-populate-object-collections-from-multiple-sources-linq.md)</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Shows how to create object collections by using multiple text files as data sources.</source>
          <target state="translated">Montre comment créer des collections d’objets à l’aide de plusieurs fichiers texte comme sources de données.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Join Content from Dissimilar Files (LINQ) (Visual Basic)<ept id="p1">](how-to-join-content-from-dissimilar-files-linq.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Comment : joindre du contenu issu de différents fichiers (LINQ) (Visual Basic)<ept id="p1">](how-to-join-content-from-dissimilar-files-linq.md)</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Shows how to combine strings in two lists into a single string by using a matching key.</source>
          <target state="translated">Montre comment combiner des chaînes dans deux listes en une seule chaîne à l’aide d’une clé correspondante.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Split a File Into Many Files by Using Groups (LINQ) (Visual Basic)<ept id="p1">](how-to-split-a-file-into-many-files-by-using-groups-linq.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Comment : fractionner un fichier en plusieurs fichiers à l’aide de groupes (LINQ) (Visual Basic)<ept id="p1">](how-to-split-a-file-into-many-files-by-using-groups-linq.md)</ept></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Shows how to create new files by using a single file as a data source.</source>
          <target state="translated">Montre comment créer des fichiers à l’aide d’un seul fichier comme source de données.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Compute Column Values in a CSV Text File (LINQ) (Visual Basic)<ept id="p1">](how-to-compute-column-values-in-a-csv-text-file-linq.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Comment : calculer des valeurs de colonne dans un fichier de texte CSV (LINQ) (Visual Basic)<ept id="p1">](how-to-compute-column-values-in-a-csv-text-file-linq.md)</ept></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Shows how to perform mathematical computations on text data in .csv files.</source>
          <target state="translated">Montre comment effectuer des calculs mathématiques sur des données texte dans des fichiers .csv.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Voir aussi</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Language-Integrated Query (LINQ) (Visual Basic)<ept id="p1">](index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Language-Integrated Query (LINQ) (Visual Basic)<ept id="p1">](index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Generate XML from CSV Files<ept id="p1">](how-to-generate-xml-from-csv-files.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Guide pratique : générer du code XML à partir de fichiers CSV<ept id="p1">](how-to-generate-xml-from-csv-files.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>