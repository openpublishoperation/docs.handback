<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9fc95cd5f7cfd5637f6282c6ef571eb81bac1816</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\procedures\recursive-procedures.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe08d283738dba319fbbebb24b7abc69c04266ca</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5eebabfe97fe54a0d78f3b3ed4a8dafad0bbb24b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Recursive Procedures (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Procédures récursives (Visual Basic) | Documents Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Recursive Procedures (Visual Basic)</source>
          <target state="translated">Procédures récursives (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>recursive<ept id="p1">*</ept> procedure is one that calls itself.</source>
          <target state="translated">A <bpt id="p1">*</bpt>récursive<ept id="p1">*</ept> procédure est celle qui s’appelle elle-même.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In general, this is not the most effective way to write <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> code.</source>
          <target state="translated">En général, cela n’est pas le moyen le plus efficace pour écrire <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> code.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following procedure uses recursion to calculate the factorial of its original argument.</source>
          <target state="translated">La procédure suivante utilise la récursivité pour calculer la factorielle de son argument d’origine.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#51<ept id="p2">](./codesnippet/VisualBasic/recursive-procedures_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#51;<ept id="p2">](./codesnippet/VisualBasic/recursive-procedures_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Considerations with Recursive Procedures</source>
          <target state="translated">Considérations sur les procédures récursives</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Limiting Conditions<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Conditions de limitation<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You must design a recursive procedure to test for at least one condition that can terminate the recursion, and you must also handle the case where no such condition is satisfied within a reasonable number of recursive calls.</source>
          <target state="translated">Vous devez concevoir une procédure récursive à tester au moins une condition qui peut mettre fin à la récurrence, et vous devez également gérer le cas où aucune de ces conditions n’est satisfaite un nombre raisonnable d’appels récursifs.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Without at least one condition that can be met without fail, your procedure runs a high risk of executing in an infinite loop.</source>
          <target state="translated">Au moins une condition qui peut être satisfaite sans erreur, votre procédure s’exécute à un risque élevé d’exécution dans une boucle infinie.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Memory Usage<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Utilisation de la mémoire<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Your application has a limited amount of space for local variables.</source>
          <target state="translated">Votre application dispose d’une quantité limitée d’espace pour les variables locales.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Each time a procedure calls itself, it uses more of that space for additional copies of its local variables.</source>
          <target state="translated">Chaque fois qu’une procédure appelle elle-même, elle davantage d’espace utilise des copies supplémentaires de ses variables locales.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If this process continues indefinitely, it eventually causes a &lt;xref:System.StackOverflowException&gt; error.</source>
          <target state="translated">Si ce processus se poursuit indéfiniment, il provoque finalement un &lt;xref:System.StackOverflowException&gt;erreur.&lt;/xref:System.StackOverflowException&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Efficiency<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>L’efficacité<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can almost always substitute a loop for recursion.</source>
          <target state="translated">Vous pouvez presque toujours remplacer une boucle de récurrence.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A loop does not have the overhead of passing arguments, initializing additional storage, and returning values.</source>
          <target state="translated">Une boucle n’a pas la surcharge de passer des arguments, initialiser le stockage supplémentaire et retourner des valeurs.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Your performance can be much better without recursive calls.</source>
          <target state="translated">Votre performance peut être considérablement améliorée sans appels récurrents.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Mutual Recursion<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Récurrence mutuelle<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You might observe very poor performance, or even an infinite loop, if two procedures call each other.</source>
          <target state="translated">Vous pouvez observer une performance médiocre ou même une boucle infinie, si deux procédures s’appellent mutuellement.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Such a design presents the same problems as a single recursive procedure, but can be harder to detect and debug.</source>
          <target state="translated">Ce type de conception présente les mêmes problèmes qu’une procédure récursive simple, mais il peut être difficile à détecter et à déboguer.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Calling with Parentheses<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Appel avec parenthèses<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">`Function`</ph> procedure calls itself recursively, you must follow the procedure name with parentheses, even if there is no argument list.</source>
          <target state="translated">Lorsqu’un <ph id="ph1">`Function`</ph> procédure appelle de manière récursive, vous devez suivre le nom de la procédure de parenthèses, même s’il n’existe aucune liste d’arguments.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Otherwise, the function name is taken as representing the return value of the function.</source>
          <target state="translated">Dans le cas contraire, le nom de fonction est utilisé en tant que représentant la valeur de retour de la fonction.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Testing<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Test<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If you write a recursive procedure, you should test it very carefully to make sure it always meets some limiting condition.</source>
          <target state="translated">Si vous écrivez une procédure récursive, vous devez la tester soigneusement pour vous assurer qu’il répond toujours à certaines conditions de limitation.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You should also ensure that you cannot run out of memory due to having too many recursive calls.</source>
          <target state="translated">Vous devez également vous assurer que vous ne pouvez pas manquer de mémoire en raison d’un trop grand nombre d’appels récursive.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Voir aussi</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.StackOverflowException&gt;</source>
          <target state="translated">&lt;xref:System.StackOverflowException&gt;&lt;/xref:System.StackOverflowException&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procédures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Sub Procedures<ept id="p1">](./sub-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procédures Sub<ept id="p1">](./sub-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Function Procedures<ept id="p1">](./function-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procédures Function<ept id="p1">](./function-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Property Procedures<ept id="p1">](./property-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procédures de propriété<ept id="p1">](./property-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operator Procedures<ept id="p1">](./operator-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procédures d’opérateur<ept id="p1">](./operator-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Parameters and Arguments<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Arguments et paramètres de procédure<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Overloading<ept id="p1">](./procedure-overloading.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Surcharge de procédure<ept id="p1">](./procedure-overloading.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Troubleshooting Procedures<ept id="p1">](./troubleshooting-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procédures de dépannage<ept id="p1">](./troubleshooting-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Loop Structures<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/loop-structures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Structures de boucle<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/loop-structures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Troubleshooting Exceptions: System.StackOverflowException<ept id="p1">](http://msdn.microsoft.com/library/51b71217-c507-4f5b-bc35-0236180d7968)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Dépannage des exceptions : System.StackOverflowException<ept id="p1">](http://msdn.microsoft.com/library/51b71217-c507-4f5b-bc35-0236180d7968)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>