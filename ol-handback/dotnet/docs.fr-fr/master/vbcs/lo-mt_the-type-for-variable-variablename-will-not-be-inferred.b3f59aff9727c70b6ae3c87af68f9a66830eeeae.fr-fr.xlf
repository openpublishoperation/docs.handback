<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab7d69c34a58dc898553868258c4fdf6b81db343</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\error-messages\the-type-for-variable-variablename-will-not-be-inferred.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff265ba10c1e6480b3eb812d61de32e111a3f844</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">542831102731a023da5007bd708d504c016b6172</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The type for variable &amp;#39;<ph id="ph1">&amp;lt;</ph>variablename<ph id="ph2">&amp;gt;</ph>&amp;#39; will not be inferred because it is bound to a field in an enclosing scope | Microsoft Docs</source>
          <target state="translated">Le type de variable '<ph id="ph1">&amp;lt;</ph>variablename<ph id="ph2">&amp;gt;</ph>» ne sera pas déduit, car il est lié à un champ dans une portée englobante | Documents Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The type for variable &amp;#39;<ph id="ph1">&amp;lt;</ph>variablename<ph id="ph2">&amp;gt;</ph>&amp;#39; will not be inferred because it is bound to a field in an enclosing scope</source>
          <target state="translated">Le type de variable '<ph id="ph1">&amp;lt;</ph>variablename<ph id="ph2">&amp;gt;</ph>» ne sera pas déduit, car il est lié à un champ dans une portée englobante</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The type for variable '<ph id="ph1">\&lt;</ph>variablename&gt;' will not be inferred because it is bound to a field in an enclosing scope.</source>
          <target state="translated">Le type de variable '<ph id="ph1">\&lt;</ph>variablename &gt; » ne sera pas déduit, car il est lié à un champ dans une portée englobante.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Either change the name of '<ph id="ph1">\&lt;</ph>variablename&gt;', or use the fully qualified name (for example, 'Me.variablename' or 'MyBase.variablename').</source>
          <target state="translated">Modifiez le nom de «<ph id="ph1">\&lt;</ph>variablename &gt; », ou utilisez le nom qualifié complet (par exemple, 'Me.NomVariable' ou 'MyBase.NomVariable').</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A loop control variable in your code has the same name as a field of the class or other enclosing scope.</source>
          <target state="translated">Une variable de contrôle de boucle dans votre code a le même nom qu’un champ de la classe ou une autre portée englobante.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Because the control variable is used without an <ph id="ph1">`As`</ph> clause, it is bound to the field in the enclosing scope, and the compiler does not create a new variable for it or infer its type.</source>
          <target state="translated">Étant donné que la variable de contrôle est utilisée sans un <ph id="ph1">`As`</ph> clause, elle est liée au champ dans la portée englobante, et le compilateur ne pas créer une variable pour lui ou déduire son type.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In the following example, <ph id="ph1">`Index`</ph>, the control variable in the <ph id="ph2">`For`</ph> statement, is bound to the <ph id="ph3">`Index`</ph> field in the <ph id="ph4">`Customer`</ph> class.</source>
          <target state="translated">Dans l’exemple suivant, <ph id="ph1">`Index`</ph>, la variable de contrôle dans les <ph id="ph2">`For`</ph> instruction, est lié à la <ph id="ph3">`Index`</ph> champ la <ph id="ph4">`Customer`</ph> classe.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The compiler does not create a new variable for the control variable <ph id="ph1">`Index`</ph> or infer its type.</source>
          <target state="translated">Le compilateur ne crée pas de variable pour la variable de contrôle <ph id="ph1">`Index`</ph> ou déduire son type.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By default, this message is a warning.</source>
          <target state="translated">Par défaut, ce message est un avertissement.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For information about how to hide warnings or how to treat warnings as errors, see <bpt id="p1">[</bpt>Configuring Warnings in Visual Basic<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/configuring-warnings-in-visual-basic)</ept>.</source>
          <target state="translated">Pour plus d’informations sur le masquage des avertissements ou de considérer les avertissements comme des erreurs, consultez <bpt id="p1">[</bpt>configuration d’avertissements en Visual Basic<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/configuring-warnings-in-visual-basic)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Error ID:<ept id="p1">**</ept> BC42110</source>
          <target state="translated"><bpt id="p1">**</bpt>ID d’erreur :<ept id="p1">**</ept> BC42110</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To address this warning</source>
          <target state="translated">Pour traiter cet avertissement</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Make the loop control variable local by changing its name to an identifier that is not also the name of a field of the class.</source>
          <target state="translated">Vérifiez la variable de contrôle de boucle local en modifiant son nom à un identificateur qui n’est pas le nom d’un champ de la classe.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Clarify that the loop control variable binds to the class field by prefixing <ph id="ph1">`Me.`</ph> to the variable name.</source>
          <target state="translated">Précisez que la variable de contrôle de boucle crée une liaison pour le champ de classe en ajoutant le préfixe <ph id="ph1">`Me.`</ph> au nom de variable.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Instead of relying on local type inference, use an <ph id="ph1">`As`</ph> clause to specify a type for the loop control variable.</source>
          <target state="translated">Au lieu de compter sur l’inférence de type local, utilisez un <ph id="ph1">`As`</ph> clause pour spécifier un type pour la variable de contrôle de boucle.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Exemple</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following code shows the earlier example with the first correction in place.</source>
          <target state="translated">Le code suivant montre l’exemple précédent avec la première correction en place.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Voir aussi</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Option Infer Statement<ept id="p1">](../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Instruction Option Infer<ept id="p1">](../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>For Each...Next Statement<ept id="p1">](../../../visual-basic/language-reference/statements/for-each-next-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>For Each... Instruction suivante<ept id="p1">](../../../visual-basic/language-reference/statements/for-each-next-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>For...Next Statement<ept id="p1">](../../../visual-basic/language-reference/statements/for-next-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Pour... Instruction suivante<ept id="p1">](../../../visual-basic/language-reference/statements/for-next-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Refer to the Current Instance of an Object<ept id="p1">](../../../visual-basic/programming-guide/language-features/variables/how-to-refer-to-the-current-instance-of-an-object.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Comment : faire référence à l’Instance actuelle d’un objet<ept id="p1">](../../../visual-basic/programming-guide/language-features/variables/how-to-refer-to-the-current-instance-of-an-object.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Local Type Inference<ept id="p1">](../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Inférence de Type local<ept id="p1">](../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Me, My, MyBase, and MyClass<ept id="p1">](../../../visual-basic/programming-guide/program-structure/me-my-mybase-and-myclass.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Me, My, MyBase et MyClass<ept id="p1">](../../../visual-basic/programming-guide/program-structure/me-my-mybase-and-myclass.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>