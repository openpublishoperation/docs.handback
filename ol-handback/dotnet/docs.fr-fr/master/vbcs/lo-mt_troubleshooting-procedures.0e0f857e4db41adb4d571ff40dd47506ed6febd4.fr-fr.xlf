<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5445d6da982e4eea5b1047505e4bee3380ed472</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\procedures\troubleshooting-procedures.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ea4a239464e0128462e89956c162a09e6bf262d4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ee14f34c5f46c120e79c05d5ecc71b5f9b3acfb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Troubleshooting Procedures (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Procédures de dépannage (Visual Basic) | Documents Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Troubleshooting Procedures (Visual Basic)</source>
          <target state="translated">Procédures de dépannage (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This page lists some common problems that can occur when working with procedures.</source>
          <target state="translated">Cette page répertorie quelques problèmes courants qui peuvent se produire lorsque vous travaillez avec des procédures.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Returning an Array Type from a Function Procedure</source>
          <target state="translated">Retourner un Type de tableau à partir d’une procédure (fonction)</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If a <ph id="ph1">`Function`</ph> procedure returns an array data type, you cannot use the <ph id="ph2">`Function`</ph> name to store values in the elements of the array.</source>
          <target state="translated">Si un <ph id="ph1">`Function`</ph> procédure retourne un type de données de tableau, vous ne pouvez pas utiliser le <ph id="ph2">`Function`</ph> nom pour stocker des valeurs dans les éléments du tableau.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you attempt to do this, the compiler interprets it as a call to the <ph id="ph1">`Function`</ph>.</source>
          <target state="translated">Si vous tentez cette opération, le compilateur interprète comme un appel à la <ph id="ph1">`Function`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following example generates compiler errors.</source>
          <target state="translated">L’exemple suivant génère des erreurs du compilateur.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`' The following statement generates a`</ph>   <ph id="ph2">`COMPILER ERROR`</ph>  <ph id="ph3">`.`</ph></source>
          <target state="translated"><ph id="ph1">`' The following statement generates a`</ph>   <ph id="ph2">`COMPILER ERROR`</ph>  <ph id="ph3">`.`</ph></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`' The following statement generates a`</ph>   <ph id="ph2">`COMPILER ERROR`</ph>  <ph id="ph3">`.`</ph></source>
          <target state="translated"><ph id="ph1">`' The following statement generates a`</ph>   <ph id="ph2">`COMPILER ERROR`</ph>  <ph id="ph3">`.`</ph></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The statement <ph id="ph1">`allOnes(i) = 1`</ph> generates a compiler error because it appears to call <ph id="ph2">`allOnes`</ph> with an argument of the wrong data type (a singleton <ph id="ph3">`Integer`</ph> instead of an <ph id="ph4">`Integer`</ph> array).</source>
          <target state="translated">L’instruction <ph id="ph1">`allOnes(i) = 1`</ph> génère une erreur du compilateur parce qu’elle semble appeler <ph id="ph2">`allOnes`</ph> avec un argument de type de données incorrect (un singleton <ph id="ph3">`Integer`</ph> au lieu d’un <ph id="ph4">`Integer`</ph> tableau).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The statement <ph id="ph1">`Return allOnes()`</ph> generates a compiler error because it appears to call <ph id="ph2">`allOnes`</ph> with no argument.</source>
          <target state="translated">L’instruction <ph id="ph1">`Return allOnes()`</ph> génère une erreur du compilateur parce qu’elle semble appeler <ph id="ph2">`allOnes`</ph> sans aucun argument.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Correct Approach:<ept id="p1">**</ept> To be able to modify the elements of an array that is to be returned, define an internal array as a local variable.</source>
          <target state="translated"><bpt id="p1">**</bpt>Approche correcte :<ept id="p1">**</ept> pour être en mesure de modifier les éléments d’un tableau qui doit être retourné, définir un tableau interne en tant que variable locale.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following example compiles without error.</source>
          <target state="translated">L’exemple suivant compile sans erreur.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#66<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#66;<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Argument Not Being Modified by Procedure Call</source>
          <target state="translated">Argument non modifié par un appel de procédure</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you intend to allow a procedure to change a programming element underlying an argument in the calling code, you must pass it by reference.</source>
          <target state="translated">Si vous souhaitez autoriser une procédure modifier un élément de programmation sous-jacent d’un argument dans le code appelant, vous devez le passer par référence.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>But a procedure can access the elements of a reference type argument even if you pass it by value.</source>
          <target state="translated">Mais une procédure peut accéder aux éléments d’un argument de type référence même si vous le passez par valeur.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Underlying Variable<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Sous-jacent Variable<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To allow the procedure to replace the value of the underlying variable element itself, the procedure must declare the parameter <bpt id="p1">[</bpt>ByRef<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept>.</source>
          <target state="translated">Pour permettre à la procédure de remplacer la valeur de l’élément variable sous-jacent lui-même, la procédure doit déclarer le paramètre <bpt id="p1">[</bpt>ByRef<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Also, the calling code must not enclose the argument in parentheses, because that would override the <ph id="ph1">`ByRef`</ph> passing mechanism.</source>
          <target state="translated">En outre, le code appelant ne doit pas mettre l’argument entre parenthèses, parce qui remplace le <ph id="ph1">`ByRef`</ph> mécanisme de transmission.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Reference Type Elements<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Référence des éléments de Type<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you declare a parameter <bpt id="p1">[</bpt>ByVal<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byval.md)</ept>, the procedure cannot modify the underlying variable element itself.</source>
          <target state="translated">Si vous déclarez un paramètre <bpt id="p1">[</bpt>ByVal<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byval.md)</ept>, la procédure ne peut pas modifier l’élément variable sous-jacent lui-même.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>However, if the argument is a reference type, the procedure can modify the members of the object to which it points, even though it cannot replace the variable's value.</source>
          <target state="translated">Toutefois, si l’argument est un type référence, la procédure peut modifier les membres de l’objet sur lequel il pointe, même si elle ne peut pas remplacer la valeur de la variable.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, if the argument is an array variable, the procedure cannot assign a new array to it, but it can change one or more of its elements.</source>
          <target state="translated">Par exemple, si l’argument est une variable tableau, la procédure ne peut pas affecter un nouveau tableau à elle, mais elle peut modifier un ou plusieurs de ses éléments.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The changed elements are reflected in the underlying array variable in the calling code.</source>
          <target state="translated">Les éléments modifiés sont réfléchis dans la variable tableau sous-jacente dans le code appelant.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following example defines two procedures that take an array variable by value and operate on its elements.</source>
          <target state="translated">L’exemple suivant définit deux procédures qui acceptent une variable tableau par valeur et opèrent sur ses éléments.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Procedure <ph id="ph1">`increase`</ph> simply adds one to each element.</source>
          <target state="translated">Procédure <ph id="ph1">`increase`</ph> ajoute simplement la valeur&amp;1; à chaque élément.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Procedure <ph id="ph1">`replace`</ph> assigns a new array to the parameter <ph id="ph2">`a()`</ph> and then adds one to each element.</source>
          <target state="translated">Procédure <ph id="ph1">`replace`</ph> assigne un nouveau tableau au paramètre <ph id="ph2">`a()`</ph> , puis l’ajoute à chaque élément.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>However, the reassignment does not affect the underlying array variable in the calling code because <ph id="ph1">`a()`</ph> is declared <ph id="ph2">`ByVal`</ph>.</source>
          <target state="translated">Cependant, la réassignation n’affecte pas la variable tableau sous-jacente dans le code appelant, car <ph id="ph1">`a()`</ph> est déclarée <ph id="ph2">`ByVal`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#35<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#35;<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#38<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#38;<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example makes calls to <ph id="ph1">`increase`</ph> and <ph id="ph2">`replace`</ph>.</source>
          <target state="translated">L’exemple suivant effectue des appels à <ph id="ph1">`increase`</ph> et <ph id="ph2">`replace`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#37<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#37;<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">`MsgBox`</ph> call displays "After increase(n): 11, 21, 31, 41".</source>
          <target state="translated">Le premier <ph id="ph1">`MsgBox`</ph> appel affiche « après Increase (n) : 11, 21, 31, 41 ».</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">`n`</ph> is a reference type, <ph id="ph2">`increase`</ph> can change its members, even though it is passed <ph id="ph3">`ByVal`</ph>.</source>
          <target state="translated">Étant donné que <ph id="ph1">`n`</ph> est un type référence, <ph id="ph2">`increase`</ph> peut modifier ses membres, même s’il est passé <ph id="ph3">`ByVal`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">`MsgBox`</ph> call displays "After replace(n): 11, 21, 31, 41".</source>
          <target state="translated">La seconde <ph id="ph1">`MsgBox`</ph> appel affiche « après Replace (n) : 11, 21, 31, 41 ».</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">`n`</ph> is passed <ph id="ph2">`ByVal`</ph>, <ph id="ph3">`replace`</ph> cannot modify the variable <ph id="ph4">`n`</ph> by assigning a new array to it.</source>
          <target state="translated">Étant donné que <ph id="ph1">`n`</ph> est passée <ph id="ph2">`ByVal`</ph>, <ph id="ph3">`replace`</ph> ne peut pas modifier la variable <ph id="ph4">`n`</ph> en lui assignant un nouveau tableau.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`replace`</ph> creates the new array instance <ph id="ph2">`k`</ph> and assigns it to the local variable <ph id="ph3">`a`</ph>, it loses the reference to <ph id="ph4">`n`</ph> passed in by the calling code.</source>
          <target state="translated">Lors de la <ph id="ph1">`replace`</ph> crée la nouvelle instance de tableau <ph id="ph2">`k`</ph> et l’assigne à la variable locale <ph id="ph3">`a`</ph>, il perd la référence à <ph id="ph4">`n`</ph> passée par le code appelant.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When it increments the members of <ph id="ph1">`a`</ph>, only the local array <ph id="ph2">`k`</ph> is affected.</source>
          <target state="translated">Lorsqu’il incrémente les membres de <ph id="ph1">`a`</ph>, seul le tableau local <ph id="ph2">`k`</ph> est affecté.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Correct Approach:<ept id="p1">**</ept> To be able to modify an underlying variable element itself, pass it by reference.</source>
          <target state="translated"><bpt id="p1">**</bpt>Approche correcte :<ept id="p1">**</ept> pour être en mesure de modifier un élément de variable sous-jacent lui-même, passer par référence.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The following example shows the change in the declaration of <ph id="ph1">`replace`</ph> that allows it to replace one array with another in the calling code.</source>
          <target state="translated">L’exemple suivant montre la modification dans la déclaration de <ph id="ph1">`replace`</ph> qui lui permet de remplacer un tableau par un autre dans le code appelant.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#64<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#64;<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Unable to Define an Overload</source>
          <target state="translated">Impossible de définir une surcharge</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you want to define an overloaded version of a procedure, you must use the same name but a different signature.</source>
          <target state="translated">Si vous souhaitez définir une version surchargée d’une procédure, vous devez utiliser le même nom mais une signature différente.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If the compiler cannot differentiate your declaration from an overload with the same signature, it generates an error.</source>
          <target state="translated">Si le compilateur ne peut pas différencier votre déclaration d’une surcharge avec la même signature, il génère une erreur.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>signature<ept id="p1">*</ept> of a procedure is determined by the procedure name and the parameter list.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>signature<ept id="p1">*</ept> d’une procédure est déterminée par le nom de la procédure et la liste de paramètres.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Each overload must have the same name as all the other overloads but must differ from all of them in at least one of the other components of the signature.</source>
          <target state="translated">Chaque surcharge doit avoir le même nom que les autres surcharges, mais doit être différent de tous les dans au moins un des autres composants de la signature.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Procedure Overloading<ept id="p1">](./procedure-overloading.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>surcharge de procédure<ept id="p1">](./procedure-overloading.md)</ept>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The following items, even though they pertain to the parameter list, are not components of a procedure's signature:</source>
          <target state="translated">Les éléments suivants, même si elles se rapportent à la liste de paramètres, ne sont pas des composants de la signature d’une procédure :</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Procedure modifier keywords, such as <ph id="ph1">`Public`</ph>, <ph id="ph2">`Shared`</ph>, and <ph id="ph3">`Static`</ph></source>
          <target state="translated">Mots clés de modificateur de procédure, tel que <ph id="ph1">`Public`</ph>, <ph id="ph2">`Shared`</ph>, et<ph id="ph3">`Static`</ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Parameter names</source>
          <target state="translated">Noms de paramètres</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Parameter modifier keywords, such as <ph id="ph1">`ByRef`</ph> and <ph id="ph2">`Optional`</ph></source>
          <target state="translated">Mots clés de modificateur de paramètre, tel que <ph id="ph1">`ByRef`</ph> et<ph id="ph2">`Optional`</ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The data type of the return value (except for a conversion operator)</source>
          <target state="translated">Le type de données de la valeur de retour (à l’exception d’un opérateur de conversion)</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You cannot overload a procedure by varying only one or more of the preceding items.</source>
          <target state="translated">Vous ne pouvez pas surcharger une procédure en faisant varier uniquement un ou plusieurs des éléments précédents.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Correct Approach:<ept id="p1">**</ept> To be able to define a procedure overload, you must vary the signature.</source>
          <target state="translated"><bpt id="p1">**</bpt>Approche correcte :<ept id="p1">**</ept> pour pouvoir définir une surcharge de procédure, vous devez varier la signature.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Because you must use the same name, you must vary the number, order, or data types of the parameters.</source>
          <target state="translated">Étant donné que vous devez utiliser le même nom, vous devez varier le nombre, l’ordre ou les types de données des paramètres.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In a generic procedure, you can vary the number of type parameters.</source>
          <target state="translated">Dans une procédure générique, vous pouvez varier le nombre de paramètres de type.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In a conversion operator (<bpt id="p1">[</bpt>CType Function<ept id="p1">](../../../../visual-basic/language-reference/functions/ctype-function.md)</ept>), you can vary the return type.</source>
          <target state="translated">Un opérateur de conversion (<bpt id="p1">[</bpt>CType, fonction<ept id="p1">](../../../../visual-basic/language-reference/functions/ctype-function.md)</ept>), vous pouvez modifier le type de retour.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Overload Resolution with Optional and ParamArray Arguments</source>
          <target state="translated">Surcharge de résolution en option et les Arguments ParamArray</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If you are overloading a procedure with one or more <bpt id="p1">[</bpt>Optional<ept id="p1">](../../../../visual-basic/language-reference/modifiers/optional.md)</ept> parameters or a <bpt id="p2">[</bpt>ParamArray<ept id="p2">](../../../../visual-basic/language-reference/modifiers/paramarray.md)</ept> parameter, you must avoid duplicating any of the <bpt id="p3">*</bpt>implicit overloads<ept id="p3">*</ept>.</source>
          <target state="translated">Si vous surchargez une procédure avec un ou plusieurs <bpt id="p1">[</bpt>facultatif<ept id="p1">](../../../../visual-basic/language-reference/modifiers/optional.md)</ept> paramètres ou un <bpt id="p2">[</bpt>ParamArray<ept id="p2">](../../../../visual-basic/language-reference/modifiers/paramarray.md)</ept> paramètre, vous devez éviter de dupliquer de la <bpt id="p3">*</bpt>surcharges implicites<ept id="p3">*</ept>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For information, see <bpt id="p1">[</bpt>Considerations in Overloading Procedures<ept id="p1">](./considerations-in-overloading-procedures.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>considérations dans les procédures<ept id="p1">](./considerations-in-overloading-procedures.md)</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Calling a Wrong Version of an Overloaded Procedure</source>
          <target state="translated">Appel d’une Version incorrecte d’une procédure surchargée</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If a procedure has several overloaded versions, you should be familiar with all their parameter lists and understand how <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> resolves calls among the overloads.</source>
          <target state="translated">Si une procédure dispose de plusieurs versions surchargées, vous devez être familiarisé avec toutes leurs listes de paramètres et comprendre comment <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> résout les appels parmi les surcharges.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Otherwise you could call an overload other than the intended one.</source>
          <target state="translated">Dans le cas contraire, vous pouvez appeler une surcharge différent de celui prévu.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When you have determined which overload you want to call, be careful to observe the following rules:</source>
          <target state="translated">Lorsque vous avez identifié la surcharge à appeler, veillez à respecter les règles suivantes :</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Supply the correct number of arguments, and in the correct order.</source>
          <target state="translated">Fournissez le nombre correct d’arguments et dans l’ordre correct.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Ideally, your arguments should have the exact same data types as the corresponding parameters.</source>
          <target state="translated">Dans l’idéal, vos arguments doivent avoir les mêmes types de données exacts que les paramètres correspondants.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In any case, the data type of each argument must widen to that of its corresponding parameter.</source>
          <target state="translated">Dans tous les cas, le type de données de chaque argument doit s’étendre à celui de son paramètre correspondant.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This is true even with the <bpt id="p1">[</bpt>Option Strict Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept> set to <ph id="ph1">`Off`</ph>.</source>
          <target state="translated">Cela est vrai même avec la <bpt id="p1">[</bpt>Option Strict, instruction<ept id="p1">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept> la valeur <ph id="ph1">`Off`</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If an overload requires any narrowing conversion from your argument list, that overload is not eligible to be called.</source>
          <target state="translated">Si une surcharge requiert une conversion restrictive de votre liste d’arguments, cette surcharge n’est pas susceptible d’être appelée.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If you supply arguments that require widening, make their data types as close as possible to the corresponding parameter data types.</source>
          <target state="translated">Si vous fournissez des arguments qui requièrent l’extension, vérifiez les types de données aussi proche que possible pour les types de données de paramètre correspondant.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If two or more overloads accept your argument data types, the compiler resolves your call to the overload that calls for the least amount of widening.</source>
          <target state="translated">Si deux ou plusieurs surcharges acceptent vos types de données d’argument, le compilateur résout votre appel à la surcharge qui demande le moins importante.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You can reduce the chance of data type mismatches by using the <bpt id="p1">[</bpt>CType Function<ept id="p1">](../../../../visual-basic/language-reference/functions/ctype-function.md)</ept> conversion keyword when preparing your arguments.</source>
          <target state="translated">Vous pouvez réduire les risques d’incompatibilité de type de données à l’aide de la <bpt id="p1">[</bpt>CType, fonction<ept id="p1">](../../../../visual-basic/language-reference/functions/ctype-function.md)</ept> mot clé de conversion lors de la préparation de vos arguments.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Overload Resolution Failure</source>
          <target state="translated">Échec de résolution de surcharge</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>When you call an overloaded procedure, the compiler attempts to eliminate all but one of the overloads.</source>
          <target state="translated">Lorsque vous appelez une procédure surchargée, le compilateur tente de conserver une seule des surcharges.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If it succeeds, it resolves the call to that overload.</source>
          <target state="translated">Si elle réussit, il résout l’appel à cette surcharge.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If it eliminates all the overloads, or if it cannot reduce the eligible overloads to a single candidate, it generates an error.</source>
          <target state="translated">S’il élimine toutes les surcharges, ou si elle ne peut pas réduire les surcharges admissibles à un seul candidat, il génère une erreur.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The following example illustrates the overload resolution process.</source>
          <target state="translated">L’exemple suivant illustre le processus de résolution de surcharge.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#62<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#62;<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#63<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_7.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#63;<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_7.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>In the first call, the compiler eliminates the first overload because the type of the first argument (<ph id="ph1">`Short`</ph>) narrows to the type of the corresponding parameter (<ph id="ph2">`Byte`</ph>).</source>
          <target state="translated">Dans le premier appel, le compilateur élimine la première surcharge parce que le type du premier argument (<ph id="ph1">`Short`</ph>) restreint au type du paramètre correspondant (<ph id="ph2">`Byte`</ph>).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>It then eliminates the third overload because each argument type in the second overload (<ph id="ph1">`Short`</ph> and <ph id="ph2">`Single`</ph>) widens to the corresponding type in the third overload (<ph id="ph3">`Integer`</ph> and <ph id="ph4">`Single`</ph>).</source>
          <target state="translated">Il élimine ensuite la troisième surcharge parce que chaque argument de type dans la deuxième surcharge (<ph id="ph1">`Short`</ph> et <ph id="ph2">`Single`</ph>) s’étend au type correspondant dans la troisième surcharge (<ph id="ph3">`Integer`</ph> et <ph id="ph4">`Single`</ph>).</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The second overload requires less widening, so the compiler uses it for the call.</source>
          <target state="translated">La deuxième surcharge requérant une extension moins importante, donc le compilateur utilise pour l’appel.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>In the second call, the compiler cannot eliminate any of the overloads on the basis of narrowing.</source>
          <target state="translated">Dans le deuxième appel, le compilateur ne peut pas supprimer les surcharges en fonction restrictives.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>It eliminates the third overload for the same reason as in the first call, because it can call the second overload with less widening of the argument types.</source>
          <target state="translated">Il élimine la troisième surcharge pour la même raison que le premier appel, car il peut appeler la deuxième surcharge moyennant une extension moins importante des types d’arguments.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>However, the compiler cannot resolve between the first and second overloads.</source>
          <target state="translated">Toutefois, le compilateur ne peut pas résoudre entre les premier et deuxième surcharges.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Each has one defined parameter type that widens to the corresponding type in the other (<ph id="ph1">`Byte`</ph> to <ph id="ph2">`Short`</ph>, but <ph id="ph3">`Single`</ph> to <ph id="ph4">`Double`</ph>).</source>
          <target state="translated">Chacune possède un type de paramètre défini qui s’étend au type correspondant dans l’autre (<ph id="ph1">`Byte`</ph> à <ph id="ph2">`Short`</ph>, mais <ph id="ph3">`Single`</ph> à <ph id="ph4">`Double`</ph>).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The compiler therefore generates an overload resolution error.</source>
          <target state="translated">Par conséquent, le compilateur génère une erreur de résolution de surcharge.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Correct Approach:<ept id="p1">**</ept> To be able to call an overloaded procedure without ambiguity, use <bpt id="p2">[</bpt>CType Function<ept id="p2">](../../../../visual-basic/language-reference/functions/ctype-function.md)</ept> to match the argument data types to the parameter types.</source>
          <target state="translated"><bpt id="p1">**</bpt>Approche correcte :<ept id="p1">**</ept> pour être en mesure d’appeler une procédure surchargée sans ambiguïté, utilisez <bpt id="p2">[</bpt>CType, fonction<ept id="p2">](../../../../visual-basic/language-reference/functions/ctype-function.md)</ept> pour faire correspondre les types de données d’argument pour les types de paramètres.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The following example shows a call to <ph id="ph1">`z`</ph> that forces resolution to the second overload.</source>
          <target state="translated">L’exemple suivant montre un appel à <ph id="ph1">`z`</ph> qui force la résolution sur la deuxième surcharge.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#65<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_8.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#65;<ept id="p2">](./codesnippet/VisualBasic/troubleshooting-procedures_8.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Overload Resolution with Optional and ParamArray Arguments</source>
          <target state="translated">Surcharge de résolution en option et les Arguments ParamArray</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If two overloads of a procedure have identical signatures except that the last parameter is declared <bpt id="p1">[</bpt>Optional<ept id="p1">](../../../../visual-basic/language-reference/modifiers/optional.md)</ept> in one and <bpt id="p2">[</bpt>ParamArray<ept id="p2">](../../../../visual-basic/language-reference/modifiers/paramarray.md)</ept> in the other, the compiler resolves a call to that procedure according to the closest match.</source>
          <target state="translated">Si deux surcharges d’une procédure ont des signatures identiques, mais que le dernier paramètre est déclaré <bpt id="p1">[</bpt>facultatif<ept id="p1">](../../../../visual-basic/language-reference/modifiers/optional.md)</ept> dans un et <bpt id="p2">[</bpt>ParamArray<ept id="p2">](../../../../visual-basic/language-reference/modifiers/paramarray.md)</ept> dans l’autre, le compilateur résout un appel à cette procédure en fonction de la correspondance la plus proche.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Overload Resolution<ept id="p1">](./overload-resolution.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>résolution de surcharge<ept id="p1">](./overload-resolution.md)</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Voir aussi</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Procedures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Procédures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Sub Procedures<ept id="p1">](./sub-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procédures Sub<ept id="p1">](./sub-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Function Procedures<ept id="p1">](./function-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procédures Function<ept id="p1">](./function-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Property Procedures<ept id="p1">](./property-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procédures de propriété<ept id="p1">](./property-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operator Procedures<ept id="p1">](./operator-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procédures d’opérateur<ept id="p1">](./operator-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Parameters and Arguments<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Arguments et paramètres de procédure<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Overloading<ept id="p1">](./procedure-overloading.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Surcharge de procédure<ept id="p1">](./procedure-overloading.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Considerations in Overloading Procedures<ept id="p1">](./considerations-in-overloading-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Considérations sur les surcharges de procédures<ept id="p1">](./considerations-in-overloading-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Overload Resolution<ept id="p1">](./overload-resolution.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Résolution de surcharge<ept id="p1">](./overload-resolution.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>