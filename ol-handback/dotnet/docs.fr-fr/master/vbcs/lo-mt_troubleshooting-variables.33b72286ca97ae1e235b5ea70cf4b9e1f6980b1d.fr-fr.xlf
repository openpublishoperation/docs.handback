<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9cddf7ced50c42514ebc9a613f49adee31edde0b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\variables\troubleshooting-variables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ad529e5075ee288f86dfb792e83611ad33881d7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a3e1a62506a20032d556ddcbd86753b068f09a2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Troubleshooting Variables in Visual Basic | Microsoft Docs</source>
          <target state="translated">Dépannage des Variables en Visual Basic | Documents Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Troubleshooting Variables in Visual Basic</source>
          <target state="translated">Dépannage des variables en Visual Basic</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This page lists some common problems that can occur when working with variables in <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</source>
          <target state="translated">Cette page répertorie quelques problèmes courants qui peuvent se produire lorsque vous travaillez avec des variables dans <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Unable to Access Members of an Object</source>
          <target state="translated">Impossible d’accéder aux membres d’un objet</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If your code attempts to access a property or method on an object, there are two possible error outcomes:</source>
          <target state="translated">Si votre code tente d’accéder à une propriété ou à une méthode sur un objet, il existe deux résultats possibles en cas d’erreur :</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The compiler can generate an error message if you declare the object variable to be of a specific type and then refer to a member not defined by that type.</source>
          <target state="translated">Le compilateur peut générer un message d’erreur si vous déclarez la variable objet comme étant d’un type spécifique et que vous faites ensuite référence à un membre non défini par ce type.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A run-time &lt;xref:System.MemberAccessException&gt; occurs when the object assigned to an object variable does not expose the member your code is trying to access.</source>
          <target state="translated">Une exécution &lt;xref:System.MemberAccessException&gt;se produit lorsque l’objet assigné à une variable objet n’expose pas le membre que votre code tente d’accéder.&lt;/xref:System.MemberAccessException&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the case of a variable of <bpt id="p1">[</bpt>Object Data Type<ept id="p1">](../../../../visual-basic/language-reference/data-types/object-data-type.md)</ept>, you can also get this exception if the member is not <ph id="ph1">`Public`</ph>.</source>
          <target state="translated">Dans le cas d’une variable de <bpt id="p1">[</bpt>Type de données Object<ept id="p1">](../../../../visual-basic/language-reference/data-types/object-data-type.md)</ept>, vous pouvez également obtenir cette exception si le membre n’est pas <ph id="ph1">`Public`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This is because late binding allows access only to <ph id="ph1">`Public`</ph> members.</source>
          <target state="translated">Cela est dû au fait que la liaison tardive autorise l’accès uniquement aux membres <ph id="ph1">`Public`</ph> .</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When the <bpt id="p1">[</bpt>Option Strict Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept> sets type checking <ph id="ph1">`On`</ph>, an object variable can access only the methods and properties of the class with which you declare it.</source>
          <target state="translated">Lors de la <bpt id="p1">[</bpt>Option Strict, instruction<ept id="p1">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept> définit la vérification de type <ph id="ph1">`On`</ph>, une variable objet peut accéder qu’aux méthodes et propriétés de la classe avec laquelle vous la déclarez.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following example illustrates this.</source>
          <target state="translated">L'exemple suivant illustre ce comportement.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrVariables#2<ept id="p2">](../../../../visual-basic/programming-guide/language-features/variables/codesnippet/VisualBasic/troubleshooting-variables_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrVariables n °&amp;2;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/variables/codesnippet/VisualBasic/troubleshooting-variables_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In this example, <ph id="ph1">`p`</ph> can use only the members of the &lt;xref:System.Object&gt; class itself, which do not include the <ph id="ph2">`Left`</ph> property.</source>
          <target state="translated">Dans cet exemple, <ph id="ph1">`p`</ph> peut utiliser uniquement les membres de la &lt;xref:System.Object&gt;classe elle-même, qui n’incluent pas le <ph id="ph2">`Left`</ph> propriété.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>On the other hand, <ph id="ph1">`q`</ph> was declared to be of type &lt;xref:System.Windows.Forms.Label&gt;, so it can use all the methods and properties of the &lt;xref:System.Windows.Forms.Label&gt; class in the &lt;xref:System.Windows.Forms&gt; namespace.</source>
          <target state="translated">En revanche, <ph id="ph1">`q`</ph> a été déclaré comme étant de type &lt;xref:System.Windows.Forms.Label&gt;, donc il peut utiliser toutes les méthodes et propriétés de la &lt;xref:System.Windows.Forms.Label&gt;classe dans le &lt;xref:System.Windows.Forms&gt;espace de noms.&lt;/xref:System.Windows.Forms&gt; &lt;/xref:System.Windows.Forms.Label&gt; &lt;/xref:System.Windows.Forms.Label&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Correct Approach</source>
          <target state="translated">Approche correcte</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To be able to access all the members of an object of a particular class, declare the object variable to be of the type of that class when possible.</source>
          <target state="translated">Pour pouvoir accéder à tous les membres d’un objet d’une classe particulière, déclarez la variable objet comme étant du type de cette classe dans la mesure du possible.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you cannot do this, for example if you do not know the object type at compile time, you must set <ph id="ph1">`Option Strict`</ph> to <ph id="ph2">`Off`</ph> and declare the variable to be of the <bpt id="p1">[</bpt>Object Data Type<ept id="p1">](../../../../visual-basic/language-reference/data-types/object-data-type.md)</ept>.</source>
          <target state="translated">Si vous ne pouvez pas cela, par exemple, si vous ne connaissez pas l’objet de type au moment de la compilation, vous devez définir <ph id="ph1">`Option Strict`</ph> à <ph id="ph2">`Off`</ph> et déclarez la variable de la <bpt id="p1">[</bpt>Type de données Object<ept id="p1">](../../../../visual-basic/language-reference/data-types/object-data-type.md)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This allows objects of any type to be assigned to the variable, and you should take steps to ensure that the currently assigned object is of an acceptable type.</source>
          <target state="translated">Cela permet d’affecter des objets de tout type à la variable, et vous devez prendre les mesures nécessaires pour vous assurer que l’objet actuellement affecté est d’un type acceptable.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>TypeOf Operator<ept id="p1">](../../../../visual-basic/language-reference/operators/typeof-operator.md)</ept> to make this determination.</source>
          <target state="translated">Vous pouvez utiliser la <bpt id="p1">[</bpt>TypeOf, opérateur<ept id="p1">](../../../../visual-basic/language-reference/operators/typeof-operator.md)</ept> pour effectuer cette détermination.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Other Components Cannot Access Your Variable</source>
          <target state="translated">D’autres composants ne peuvent pas accéder à votre variable</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> names are <bpt id="p1">*</bpt>case-insensitive<ept id="p1">*</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>les noms sont <bpt id="p1">*</bpt>pas la casse<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If two names differ in alphabetic case only, the compiler interprets them as the same name.</source>
          <target state="translated">Si deux noms diffèrent uniquement par la casse, le compilateur les interprète comme étant identiques.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, it considers <ph id="ph1">`ABC`</ph> and <ph id="ph2">`abc`</ph> to refer to the same declared element.</source>
          <target state="translated">Par exemple, il considère que <ph id="ph1">`ABC`</ph> et <ph id="ph2">`abc`</ph> font référence au même élément déclaré.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>However, the common language runtime (CLR) uses <bpt id="p1">*</bpt>case-sensitive<ept id="p1">*</ept> binding.</source>
          <target state="translated">Toutefois, le Common Language Runtime (CLR) utilise la liaison <bpt id="p1">*</bpt>qui respecte la casse<ept id="p1">*</ept> .</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Therefore, when you produce an assembly or a DLL and make it available to other assemblies, your names are no longer case-insensitive.</source>
          <target state="translated">Ainsi, quand vous générez un assembly ou une DLL et que vous le mettez à disposition d’autres assemblys, la casse de vos noms est respectée.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, if you define a class with an element called <ph id="ph1">`ABC`</ph>, and other assemblies make use of your class through the common language runtime, they must refer to the element as <ph id="ph2">`ABC`</ph>.</source>
          <target state="translated">Par exemple, si vous définissez une classe avec un élément nommé <ph id="ph1">`ABC`</ph>et que d’autres assemblys utilisent votre classe par le biais du Common Language Runtime, ils doivent faire référence à l’élément en tant que <ph id="ph2">`ABC`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If you subsequently recompile your class and change the element's name to <ph id="ph1">`abc`</ph>, the other assemblies using your class can no longer access that element.</source>
          <target state="translated">Si, par la suite, vous recompilez votre classe et que vous changez le nom de l’élément en <ph id="ph1">`abc`</ph>, les autres assemblys qui utilisent votre classe ne peuvent plus accéder à cet élément.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Therefore, when you release an updated version of an assembly, you should not change the alphabetic case of any public elements.</source>
          <target state="translated">Ainsi, quand vous publiez une version mise à jour d’un assembly, vous ne devez pas modifier la casse des éléments publics.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Common Language Runtime<ept id="p1">](http://msdn.microsoft.com/library/059a624e-f7db-4134-ba9f-08b676050482)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Common Language Runtime<ept id="p1">](http://msdn.microsoft.com/library/059a624e-f7db-4134-ba9f-08b676050482)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Correct Approach</source>
          <target state="translated">Approche correcte</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To allow other components to access your variables, treat their names as if they were case-sensitive.</source>
          <target state="translated">Pour permettre à d’autres composants d’accéder à vos variables, traitez leurs noms comme s’ils respectaient la casse.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When you are testing your class or module, make sure other assemblies are binding to the variables you expect them to.</source>
          <target state="translated">Quand vous testez votre classe ou module, vérifiez que les autres assemblys se lient aux variables prévues.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Once you have published a component, do not make any modifications to existing variable names, including changing their cases.</source>
          <target state="translated">Une fois que vous avez publié un composant, ne modifiez pas les noms de variables existants, notamment leur casse.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Wrong Variable Being Used</source>
          <target state="translated">Variable incorrecte utilisée</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When you have more than one variable with the same name, the <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> compiler attempts to resolve each reference to that name.</source>
          <target state="translated">Lorsque vous avez plusieurs variables portant le même nom, le <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> compilateur tente de résoudre chaque référence à ce nom.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the variables have different scope, the compiler resolves a reference to the declaration with the narrowest scope.</source>
          <target state="translated">Si les variables ont une portée différente, le compilateur résout une référence à la déclaration dont la portée est la plus petite.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If they have the same scope, the resolution fails and the compiler signals an error.</source>
          <target state="translated">Si elles ont la même portée, la résolution échoue et le compilateur signale une erreur.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>References to Declared Elements<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>références aux éléments déclarés<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Correct Approach</source>
          <target state="translated">Approche correcte</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Avoid using variables with the same name but different scope.</source>
          <target state="translated">Évitez d’utiliser des variables ayant le même nom mais une portée différente.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If you are using other assemblies or projects, avoid using any names defined in those external components as much as possible.</source>
          <target state="translated">Si vous utilisez d’autres assemblys ou projets, évitez d’utiliser des noms définis dans ces composants externes.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you have more than one variable with the same name, be sure you qualify every reference to it.</source>
          <target state="translated">Si plusieurs variables ont le même nom, n’oubliez pas de qualifier chaque référence à celui-ci.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>References to Declared Elements<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>références aux éléments déclarés<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Voir aussi</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Variables<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Variables<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Variable Declaration<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/variable-declaration.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Déclaration de variable<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/variable-declaration.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Object Variables<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/object-variables.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Variables objets<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/object-variables.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Object Variable Declaration<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/object-variable-declaration.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Déclaration des variables objets<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/object-variable-declaration.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Access Members of an Object<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/how-to-access-members-of-an-object.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Comment : accéder aux membres d’un objet<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/how-to-access-members-of-an-object.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Object Variable Values<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/object-variable-values.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Valeurs des variables objets<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/object-variable-values.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Determine What Type an Object Variable Refers To<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/how-to-determine-what-type-an-object-variable-refers-to.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Comment : déterminer le Type désigné par une Variable objet<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/how-to-determine-what-type-an-object-variable-refers-to.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>References to Declared Elements<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Références aux éléments déclarés<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Declared Element Names<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Noms d’éléments déclarés<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>