<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28d5024f759b3a7474aef1fa344d39f9933b6322</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\collections\sorted-collection-types.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6313220f67d494783cd800aef94bce6d5b196dc8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3c1f078246e8fca1a2597120d0c88910135ccd8e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Sorted Collection Types</source>
          <target state="translated">Tipi di raccolta ordinati</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Sorted Collection Types</source>
          <target state="translated">Tipi di raccolta ordinati</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Sorted Collection Types</source>
          <target state="translated">Tipi di raccolta ordinati</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Collections.SortedList<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.SortedList)</ept> class, the <bpt id="p2">[</bpt>System.Collections.Generic.SortedList<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept> generic class, and the <bpt id="p3">[</bpt>System.Collections.Generic.SortedDictionary<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2)</ept> generic class are similar to the <bpt id="p4">[</bpt>Hashtable<ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept> class and the <bpt id="p5">[</bpt>Dictionary<ph id="ph5">&amp;lt;</ph>TKey, TValue<ph id="ph6">&amp;gt;</ph><ept id="p5">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept> generic class in that they implement the <bpt id="p6">[</bpt>IDictionary<ept id="p6">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept> interface, but they maintain their elements in sort order by key, and they do not have the O(1) insertion and retrieval characteristic of hash tables.</source>
          <target state="translated">La classe <bpt id="p1">[</bpt>System.Collections.SortedList<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.SortedList)</ept>, la classe generica <bpt id="p2">[</bpt>System.Collections.Generic.SortedList<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept> e la classe generica <bpt id="p3">[</bpt>System.Collections.Generic.SortedDictionary<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2)</ept> sono simili alla classe <bpt id="p4">[</bpt>Hashtable<ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept> e alla classe generica <bpt id="p5">[</bpt>Dictionary<ph id="ph5">&amp;lt;</ph>TKey, TValue<ph id="ph6">&amp;gt;</ph><ept id="p5">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept> poiché implementano l'interfaccia <bpt id="p6">[</bpt>IDictionary<ept id="p6">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept>, ma gestiscono gli elementi in ordine di chiave e non presentano la caratteristica di inserimento e recupero O(1) delle tabelle hash.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The three classes have several features in common:</source>
          <target state="translated">Le tre classi hanno diverse funzionalità in comune:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>All three classes implement the <bpt id="p1">[</bpt>System.Collections.IDictionary<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept> interface.</source>
          <target state="translated">Tutte e tre le classi implementano l'interfaccia <bpt id="p1">[</bpt>System.Collections.IDictionary<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The two generic classes also implement the <bpt id="p1">[</bpt>System.Collections.Generic.IDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IDictionary-2)</ept> generic interface.</source>
          <target state="translated">Le due classi generiche implementano anche l'interfaccia generica <bpt id="p1">[</bpt>System.Collections.Generic.IDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IDictionary-2)</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Each element is a key/value pair for enumeration purposes.</source>
          <target state="translated">Ogni elemento è una coppia chiave/valore per scopi di enumerazione.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The nongeneric <bpt id="p1">[</bpt>SortedList<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.SortedList)</ept> class returns <bpt id="p2">[</bpt>DictionaryEntry<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.DictionaryEntry)</ept> objects when enumerated, although the two generic types return <bpt id="p3">[</bpt>KeyValuePair<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.KeyValuePair-2)</ept> objects.</source>
          <target state="translated">La classe non generica <bpt id="p1">[</bpt>SortedList<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.SortedList)</ept> restituisce oggetti <bpt id="p2">[</bpt>DictionaryEntry<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.DictionaryEntry)</ept> quando enumerata, anche se i due tipi generici restituiscono oggetti <bpt id="p3">[</bpt>KeyValuePair<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.KeyValuePair-2)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Elements are sorted according to a <bpt id="p1">[</bpt>System.Collections.IComparer<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IComparer)</ept> implementation (for nongeneric <ph id="ph1">`SortedList`</ph>) or a <bpt id="p2">[</bpt>System.Collections.Generic.IComparer<ph id="ph2">&amp;lt;</ph>T<ph id="ph3">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IComparer-1)</ept> implementation (for the two generic classes).</source>
          <target state="translated">Gli elementi vengono ordinati in base a un'implementazione <bpt id="p1">[</bpt>System.Collections.IComparer<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IComparer)</ept> (per <ph id="ph1">`SortedList`</ph> non generico) o un'implementazione <bpt id="p2">[</bpt>System.Collections.Generic.IComparer<ph id="ph2">&amp;lt;</ph>T<ph id="ph3">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IComparer-1)</ept> (per le due classi generiche).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Each class provides properties that return collections containing only the keys or only the values.</source>
          <target state="translated">Ogni classe specifica le proprietà che restituiscono raccolte contenenti solo chiavi o solo valori.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following table lists some of the differences between the two sorted list classes and the <bpt id="p1">[</bpt>SortedDictionary&lt;TKey, TValue&gt;<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2)</ept> class.</source>
          <target state="translated">Nella tabella seguente sono elencate alcune delle differenze tra le due classi SortedList e la classe <bpt id="p1">[</bpt>SortedDictionary&lt;TKey, TValue&gt;<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SortedList`</ph> nongeneric class and <ph id="ph2">`SortedList&lt;TKey, TValue&gt;`</ph> generic class</source>
          <target state="translated">Classe non generica <ph id="ph1">`SortedList`</ph> e classe generica <ph id="ph2">`SortedList&lt;TKey, TValue&gt;`</ph></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SortedDictionary&lt;TKey, TValue&gt;`</ph> generic class</source>
          <target state="translated">Classe generica <ph id="ph1">`SortedDictionary&lt;TKey, TValue&gt;`</ph></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The properties that return keys and values are indexed, allowing efficient indexed retrieval.</source>
          <target state="translated">Le proprietà che restituiscono chiavi e valori vengono indicizzate, consentendo un efficiente recupero indicizzato.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>No indexed retrieval.</source>
          <target state="translated">Senza recupero indicizzato.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Retrieval is O(log n).</source>
          <target state="translated">Il recupero è O (log n).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Retrieval is O(log n).</source>
          <target state="translated">Il recupero è O (log n).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Insertion and removal are generally O(n); however, insertion is O(1) for data that are already in sort order, so that each element is added to the end of the list.</source>
          <target state="translated">L'inserimento e la rimozione sono in genere O(n); l'inserimento è tuttavia O(1) per i dati già presenti nel criterio di ordinamento in modo che ogni elemento venga aggiunto alla fine dell'elenco.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>(This assumes that a resize is not required.)</source>
          <target state="translated">(Ciò presuppone che non sia necessario un ridimensionamento).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Insertion and removal are O(log n).</source>
          <target state="translated">Inserimento e rimozione sono O(log n).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Uses less memory than a <ph id="ph1">`SortedDictionary&lt;TKey, TValue&gt;`</ph>.</source>
          <target state="translated">Usa meno memoria di un <ph id="ph1">`SortedDictionary&lt;TKey, TValue&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Uses more memory than the <ph id="ph1">`SortedList`</ph> nongeneric class and the <ph id="ph2">`SortedList&lt;TKey, TValue&gt;`</ph> generic class.</source>
          <target state="translated">Usa più memoria della classe non generica <ph id="ph1">`SortedList`</ph> e della classe generica <ph id="ph2">`SortedList&lt;TKey, TValue&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For sorted lists or dictionaries that must be accessible concurrently from multiple threads, you can add sorting logic to a class that derives from <bpt id="p1">[</bpt>ConcurrentDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept>.</source>
          <target state="translated">Per gli elenchi ordinati o i dizionari che devono essere accessibili contemporaneamente da più thread, è possibile aggiungere logica di ordinamento per una classe che deriva da <bpt id="p1">[</bpt>ConcurrentDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For values that contain their own keys (for example, employee records that contain an employee ID number), you can create a keyed collection that has some characteristics of a list and some characteristics of a dictionary by deriving from the <bpt id="p1">[</bpt>KeyedCollection<ph id="ph1">&amp;lt;</ph>TKey, TItem<ph id="ph2">&amp;gt;</ph><ept id="p1">]()</ept> generic class.</source>
          <target state="translated">Per i valori che contengono le proprie chiavi (ad esempio, record dei dipendenti che contengono un numero di ID dipendente) è possibile creare una raccolta con chiave che include alcune caratteristiche di un elenco e alcune caratteristiche di un dizionario mediante la derivazione dalla classe generica <bpt id="p1">[</bpt>KeyedCollection<ph id="ph1">&amp;lt;</ph>TKey, TItem<ph id="ph2">&amp;gt;</ph><ept id="p1">]()</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>SortedSet<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedSet-1)</ept> class provides a self-balancing tree that maintains data in sorted order after insertions, deletions, and searches.</source>
          <target state="translated">La classe <bpt id="p1">[</bpt>SortedSet<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedSet-1)</ept> presenta una struttura ad albero auto-bilanciata che mantiene i dati ordinati dopo inserimenti, eliminazioni e ricerche.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This class and the <bpt id="p1">[</bpt>HashSet<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.HashSet-1)</ept> class implement the <bpt id="p2">[</bpt>ISet<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.ISet-1)</ept> interface.</source>
          <target state="translated">Questa classe e la classe <bpt id="p1">[</bpt>HashSet<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.HashSet-1)</ept> implementano l'interfaccia <bpt id="p2">[</bpt>ISet<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.ISet-1)</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vedere anche</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.IDictionary<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.IDictionary<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic.IDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IDictionary-2)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic.IDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IDictionary-2)</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ConcurrentDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>ConcurrentDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Commonly Used Collection Types<ept id="p1">](commonly-used-collection-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Tipi di raccolte usate comunemente<ept id="p1">](commonly-used-collection-types.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>