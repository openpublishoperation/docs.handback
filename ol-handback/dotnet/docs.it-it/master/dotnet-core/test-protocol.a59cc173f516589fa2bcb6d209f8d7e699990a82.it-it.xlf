<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f0362aa" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">83555650a5a3ce9ed28d329aa82f5ead75e2d9cb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\test-protocol.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e618b25e49aa9cb637676c5386d24f07f432c88f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a314c30f40aa822195fbc4b01331f6093852380c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>.NET Core CLI test communication protocol | Microsoft Docs</source>
          <target state="translated">Protocollo di comunicazione dei test dell'interfaccia della riga di comando di .NET Core | Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>.NET Core CLI test communication protocol</source>
          <target state="translated">Protocollo di comunicazione dei test dell'interfaccia della riga di comando di .NET Core</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>.NET Core CLI test communication protocol</source>
          <target state="translated">Protocollo di comunicazione dei test dell'interfaccia della riga di comando di .NET Core</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic applies to .NET Core Tools Preview 2.</source>
          <target state="translated">Questo argomento si applica agli strumenti dell'anteprima 2 di .NET Core.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For the .NET Core Tools RC4 documentation, see the <bpt id="p1">[</bpt>.NET Core command-line interface tools (.NET Core Tools RC4)<ept id="p1">](../preview3/tools/index.md)</ept> section.</source>
          <target state="translated">Per la documentazione relativa agli strumenti di .NET Core versione RC4, vedere la sezione <bpt id="p1">[</bpt>Strumenti dell'interfaccia della riga di comando di .NET Core (strumenti di .NET Core RC4)<ept id="p1">](../preview3/tools/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduzione</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Anytime you pass a port to dotnet test, the command will run in design time.</source>
          <target state="translated">Quando si passa una porta al test dotnet, il comando viene eseguito in fase di progettazione.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>That means that <ph id="ph1">`dotnet test`</ph> will connect to that port using TCP and will then exchange an established set of messages with whatever else is connected to that port.</source>
          <target state="translated">Ciò significa che <ph id="ph1">`dotnet test`</ph> si connette alla porta tramite TCP e quindi scambia un determinato set di messaggi con qualsiasi altro componente connesso a tale porta.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When this happens, the runner also receives a new port that <ph id="ph1">`dotnet test`</ph> will use to communicate with it.</source>
          <target state="translated">Quando ciò accade, il runner riceve anche una nuova porta che viene usata da <ph id="ph1">`dotnet test`</ph> per le comunicazioni con il runner.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The reason why the runner also uses TCP to communicate with <ph id="ph1">`dotnet test`</ph> is because in design mode, it is not sufficient to just output results to the console.</source>
          <target state="translated">L'uso di TCP per le comunicazioni tra runner e <ph id="ph1">`dotnet test`</ph> è dovuto al fatto che, in modalità di progettazione, non è sufficiente inviare i risultati alla console.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The command needs to send the adapter structure messages containing the results of the test execution.</source>
          <target state="translated">Il comando deve inviare all'adapter i messaggi della struttura contenenti i risultati dell'esecuzione del test.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Communication protocol at design time.</source>
          <target state="translated">Protocollo di comunicazione in fase di progettazione</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Because during design time, <ph id="ph1">`dotnet test`</ph> connects to a port when it starts up, the adapter needs to be listening on that port otherwise <ph id="ph2">`dotnet test`</ph> will fail.</source>
          <target state="translated">Poiché, durante la fase di progettazione, <ph id="ph1">`dotnet test`</ph> si connette a una porta all'avvio, l'adapter deve essere in ascolto su tale porta, altrimenti <ph id="ph2">`dotnet test`</ph> avrà esito negativo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>We did it like this so that the adapter could reserve all the ports it needs by binding and listening to them before <ph id="ph1">`dotnet test`</ph> ran and tried to get ports for the runner.</source>
          <target state="translated">In questo modo, l'adapter può riservare tutte le porte necessarie rimanendo in ascolto su tali porte prima che <ph id="ph1">`dotnet test`</ph> venga eseguito e provi a ottenere le porte per il runner.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Once <ph id="ph1">`dotnet test`</ph> starts, it sends a TestSession.Connected message to the adapter indicating that it is ready to receive messages.</source>
          <target state="translated">Una volta avviato, <ph id="ph1">`dotnet test`</ph> invia all'adapter un messaggio TestSession.Connected per segnalare che è pronto a ricevere messaggi.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>It is possible to send an optional <bpt id="p1">[</bpt>version check<ept id="p1">](https://github.com/dotnet/cli/blob/rel/1.0.0-preview2/src/Microsoft.Extensions.Testing.Abstractions/Messages/ProtocolVersionMessage.cs)</ept> message with the adapter version of the protocol in it.</source>
          <target state="translated">È possibile inviare un messaggio facoltativo di <bpt id="p1">[</bpt>controllo della versione<ept id="p1">](https://github.com/dotnet/cli/blob/rel/1.0.0-preview2/src/Microsoft.Extensions.Testing.Abstractions/Messages/ProtocolVersionMessage.cs)</ept> in cui è riportata la versione del protocollo dell'adapter.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet test`</ph> will send back the version of the protocol that it supports.</source>
          <target state="translated">In risposta a questo messaggio, <ph id="ph1">`dotnet test`</ph> invierà la versione del protocollo supportata.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>All messages have the format described here: <bpt id="p1">[</bpt>Message.cs<ept id="p1">](https://github.com/dotnet/cli/blob/rel/1.0.0-preview2/src/Microsoft.Extensions.Testing.Abstractions/Messages/Message.cs)</ept>.</source>
          <target state="translated">Tutti i messaggi presentano il formato descritto qui: <bpt id="p1">[</bpt>Message.cs<ept id="p1">](https://github.com/dotnet/cli/blob/rel/1.0.0-preview2/src/Microsoft.Extensions.Testing.Abstractions/Messages/Message.cs)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The payload formats for each message is described in links to the classes used to serialize/deserialize the information in the description of the protocol.</source>
          <target state="translated">I formati del payload per ogni messaggio sono descritti nei collegamenti alle classi usate per serializzare o deserializzare le informazioni nella descrizione del protocollo.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Test Execution</source>
          <target state="translated">Esecuzione dei test</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Test Execution</source>
          <target state="translated">Esecuzione dei test</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>After the optional version check, the adapter sends a TestExecution.GetTestRunnerProcessStartInfo, with the <bpt id="p1">[</bpt>tests<ept id="p1">](https://github.com/dotnet/cli/blob/rel/1.0.0-preview2/src/Microsoft.Extensions.Testing.Abstractions/Messages/RunTestsMessage.cs)</ept> it wants to execute inside of it.</source>
          <target state="translated">Dopo il controllo della versione facoltativo, l'adapter invia un messaggio TestExecution.GetTestRunnerProcessStartInfo, con l'indicazione dei <bpt id="p1">[</bpt>test<ept id="p1">](https://github.com/dotnet/cli/blob/rel/1.0.0-preview2/src/Microsoft.Extensions.Testing.Abstractions/Messages/RunTestsMessage.cs)</ept> che vuole eseguire.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet test`</ph> sends back a FileName and Arguments inside a <bpt id="p1">[</bpt>TestStartInfo<ept id="p1">](https://github.com/dotnet/cli/blob/rel/1.0.0-preview2/src/dotnet/commands/dotnet-test/TestStartInfo.cs)</ept> payload that the adapter can use to start the runner.</source>
          <target state="translated"><ph id="ph1">`dotnet test`</ph> restituisce un nome di file e gli argomenti all'interno di un payload <bpt id="p1">[</bpt>TestStartInfo<ept id="p1">](https://github.com/dotnet/cli/blob/rel/1.0.0-preview2/src/dotnet/commands/dotnet-test/TestStartInfo.cs)</ept> che l'adapter può usare per avviare il runner.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In the past, we would send the list of tests to run as part of that argument, but we were actually going over the command line size limit for some test projects.</source>
          <target state="translated">In passato, l'elenco dei test da eseguire veniva inviato come parte dell'argomento, ma per alcuni progetti di test veniva superato il limite delle dimensioni della riga di comando.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>As part of the arguments, we send a port that the runner should connect to and for executing tests, a --wait-command flag, that indicates that the runner should connect to the port and wait for commands, instead of going ahead and executing the tests.</source>
          <target state="translated">Come parte degli argomenti, viene inviata una porta a cui il runner deve connettersi e, per l'esecuzione di test, un flag --wait-command, indicante che il runner deve connettersi alla porta e rimanere in attesa dei comandi, anziché procedere con l'esecuzione dei test.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>At this point, the adapter can launch the runner (and attach to it for debugging if it chooses to).</source>
          <target state="translated">A questo punto, l'adapter può avviare il runner ed eventualmente connettersi ad esso per il debug.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Once the runner starts, it sends <ph id="ph1">`dotnet test`</ph> a TestRunner.WaitCommand message that indicates it is ready to receive commands, at which point <ph id="ph2">`dotnet test`</ph> sends a TestRunner.Execute with the list of <bpt id="p1">[</bpt>tests<ept id="p1">](https://github.com/dotnet/cli/blob/rel/1.0.0-preview2/src/Microsoft.Extensions.Testing.Abstractions/Messages/RunTestsMessage.cs)</ept> to run.</source>
          <target state="translated">Una volta avviato, il runner invia a <ph id="ph1">`dotnet test`</ph> un messaggio TestRunner.WaitCommand per segnalare che è pronto a ricevere comandi. A questo punto, <ph id="ph2">`dotnet test`</ph> invia un messaggio TestRunner.Execute con l'elenco di <bpt id="p1">[</bpt>test<ept id="p1">](https://github.com/dotnet/cli/blob/rel/1.0.0-preview2/src/Microsoft.Extensions.Testing.Abstractions/Messages/RunTestsMessage.cs)</ept> da eseguire.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This bypasses the command line size limit described above.</source>
          <target state="translated">Ciò consente di evitare il problema descritto in precedenza riguardo al limite delle dimensioni della riga di comando.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The runner then sends <ph id="ph1">`dotnet test`</ph> (and it passes forward to the adapter) a TestExecution.TestStarted for each tests as they start with the <bpt id="p1">[</bpt>test<ept id="p1">](https://github.com/dotnet/cli/blob/rel/1.0.0-preview2/src/Microsoft.Extensions.Testing.Abstractions/Test.cs)</ept> information inside of it.</source>
          <target state="translated">Il runner invia quindi a <ph id="ph1">`dotnet test`</ph> (e inoltra all'adapter) un messaggio TestExecution.TestStarted per ogni test avviato, con le informazioni relative ai <bpt id="p1">[</bpt>test<ept id="p1">](https://github.com/dotnet/cli/blob/rel/1.0.0-preview2/src/Microsoft.Extensions.Testing.Abstractions/Test.cs)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The runner also sends <ph id="ph1">`dotnet test`</ph> (and it forwards to the adapter) a TestExecution.TestResult for each test with the <bpt id="p1">[</bpt>individual result<ept id="p1">](https://github.com/dotnet/cli/blob/rel/1.0.0-preview2/src/Microsoft.Extensions.Testing.Abstractions/TestResult.cs)</ept> of the test.</source>
          <target state="translated">Il runner invia anche a <ph id="ph1">`dotnet test`</ph> (e inoltra all'adapter) un messaggio TestExecution.TestResult per ogni test, con il <bpt id="p1">[</bpt>singolo risultato<ept id="p1">](https://github.com/dotnet/cli/blob/rel/1.0.0-preview2/src/Microsoft.Extensions.Testing.Abstractions/TestResult.cs)</ept> del test.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>After all tests finish, the runner sends a TestRunner.Completed message to dotnet test, which <ph id="ph1">`dotnet test`</ph> sends as TestExecution.Completed to the adapter.</source>
          <target state="translated">Al termine di tutti i test, il runner invia a dotnet test un messaggio TestRunner.Completed, che <ph id="ph1">`dotnet test`</ph> invia all'adapter come TestExecution.Completed.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Once the adapter is done, it sends <ph id="ph1">`dotnet test`</ph> a TestSession.Terminate which will cause <ph id="ph2">`dotnet test`</ph> to shutdown.</source>
          <target state="translated">Al termine, l'adapter invia a <ph id="ph1">`dotnet test`</ph> un messaggio TestSession.Terminate che determina l'arresto di <ph id="ph2">`dotnet test`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Test discovery</source>
          <target state="translated">Individuazione dei test</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Test discovery</source>
          <target state="translated">Individuazione dei test</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>After the optional version check, the adapter sends a TestDiscovery.Start message.</source>
          <target state="translated">Dopo il controllo della versione facoltativo, l'adapter invia un messaggio TestDiscovery.Start.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Because in this case, the adapter does not need to attach to the process, <ph id="ph1">`dotnet test`</ph> will start the runner itself.</source>
          <target state="translated">Poiché in questo caso l'adapter non deve connettersi al processo, <ph id="ph1">`dotnet test`</ph> avvia direttamente il runner.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Also, since there is no long list of arguments to be passed to the runner, no --wait-command flag is needed to be passed to the runner.</source>
          <target state="translated">Inoltre, poiché non deve essere passato un lungo elenco di argomenti al runner, non è richiesto l'invio del flag --wait-command al runner.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet test`</ph> only passes a --list argument to the runner, which means the runner should not run the tests, just list them.</source>
          <target state="translated"><ph id="ph1">`dotnet test`</ph> passa solo un argomento --list al runner. Ciò significa che il runner non deve eseguire i test ma solo elencarli.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The runner then sends <ph id="ph1">`dotnet test`</ph> (and it passes forward to the adapter) a TestDiscovery.TestFound for each <bpt id="p1">[</bpt>test<ept id="p1">](https://github.com/dotnet/cli/blob/rel/1.0.0-preview2/src/Microsoft.Extensions.Testing.Abstractions/Test.cs)</ept> found.</source>
          <target state="translated">Il runner invia quindi a <ph id="ph1">`dotnet test`</ph> (e inoltra all'adapter) un messaggio TestDiscovery.TestFound per ogni <bpt id="p1">[</bpt>test<ept id="p1">](https://github.com/dotnet/cli/blob/rel/1.0.0-preview2/src/Microsoft.Extensions.Testing.Abstractions/Test.cs)</ept> trovato.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>After all tests are discovered, the runner sends a TestRunner.Completed message to dotnet test, which <ph id="ph1">`dotnet test`</ph> sends as TestDiscovery.Completed to the adapter.</source>
          <target state="translated">Dopo aver individuato tutti i test, il runner invia a dotnet test un messaggio TestRunner.Completed che <ph id="ph1">`dotnet test`</ph> invia all'adapter come TestDiscovery.Completed.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Once the adapter is done, it sends <ph id="ph1">`dotnet test`</ph> a TestSession.Terminate which will cause <ph id="ph2">`dotnet test`</ph> to shutdown.</source>
          <target state="translated">Al termine, l'adapter invia a <ph id="ph1">`dotnet test`</ph> un messaggio TestSession.Terminate che determina l'arresto di <ph id="ph2">`dotnet test`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>