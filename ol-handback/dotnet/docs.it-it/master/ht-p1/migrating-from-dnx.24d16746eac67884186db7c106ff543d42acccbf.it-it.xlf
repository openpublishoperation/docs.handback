<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f01c6521becb930923693a6b6867479f3b5d6df9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\migrating-from-dnx.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af9834f73c6bad720e15657c3a6c7e0cbd0acc0f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">defb9cd7a64178a68a21e9fcbf80be48c0ae00d6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Migrating from DNX to .NET Core CLI</source>
          <target state="translated">Migrazione da DNX all'interfaccia della riga di comando .NET Core</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Migrating from DNX to .NET Core CLI</source>
          <target state="translated">Migrazione da DNX all'interfaccia della riga di comando .NET Core</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Migrating from DNX to .NET Core CLI</source>
          <target state="translated">Migrazione da DNX all'interfaccia della riga di comando .NET Core</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Panoramica</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The RC1 release of .NET Core and ASP.NET Core 1.0 introduced DNX tooling.</source>
          <target state="translated">La versione RC1 di .NET Core e ASP.NET Core 1.0 Microsoft hanno presentato gli strumenti DNX.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The RC2 release of .NET Core and ASP.NET Core 1.0 moved from DNX to the .NET Core CLI.</source>
          <target state="translated">La versione RC2 di .NET Core e ASP.NET Core 1.0 hanno eseguito il passaggio da DNX all'interfaccia della riga di comando di .NET Core.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>As a slight refresher, let's recap what DNX was about.</source>
          <target state="translated">Di seguito è riportato un breve riepilogo delle caratteristiche di DNX.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>DNX was a runtime and a toolset used to build .NET Core and, more specifically, ASP.NET Core 1.0 applications.</source>
          <target state="translated">DNX è un runtime e un set di strumenti usati per creare applicazioni .NET Core e, più specificamente, ASP.NET Core 1.0.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It consisted of 3 main pieces:</source>
          <target state="translated">È costituito da tre componenti principali:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>DNVM - an install script for obtaining DNX</source>
          <target state="translated">DNVM: uno script di installazione per l'acquisizione di DNX</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>DNX (Dotnet Execution Runtime) - the runtime that executes your code</source>
          <target state="translated">DNX (Dotnet Execution Runtime): il runtime che esegue il codice</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>DNU (Dotnet Developer Utility) - tooling for managing dependencies, building and publishing your applications</source>
          <target state="translated">DNU (Dotnet Developer Utility): strumenti per la gestione delle dipendenze e per la creazione e la pubblicazione di applicazioni</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>With the introduction of the CLI, all of the above are now part of a single toolset.</source>
          <target state="translated">Con l'introduzione dell'interfaccia della riga di comando, tutti gli elementi sopra elencati sono parte di un unico set di strumenti.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>However, since DNX was available in RC1 timeframe, you might have projects that were built using it that you would want to move off to the new CLI tooling.</source>
          <target state="translated">Tuttavia, poiché DNX era disponibile durante il periodo di commercializzazione della versione RC1, è possibile che gli utenti dispongano di progetti creati con DNX di cui vogliono eseguire la migrazione ai nuovi strumenti dell'interfaccia della riga di comando.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This migration guide will cover the essentials on how to migrate projects off of DNX and onto .NET Core CLI.</source>
          <target state="translated">Questa guida fornisce le istruzioni di base per la migrazione dei progetti da DNX all'interfaccia della riga di comando di .NET Core.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you are just starting a project on .NET Core from scratch, you can freely skip this document.</source>
          <target state="translated">Se si sta iniziando un progetto direttamente in .NET Core, è possibile ignorare questo documento.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Main changes in the tooling</source>
          <target state="translated">Principali modifiche apportate agli strumenti</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>There are some general changes in the tooling that should be outlined first.</source>
          <target state="translated">Riguardo agli strumenti sono state apportate alcune modifiche di carattere generale che devono essere descritte per prime.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>No more DNVM</source>
          <target state="translated">DNVM non più disponibile</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>DNVM, short for <bpt id="p1">*</bpt>DotNet Version Manager<ept id="p1">*</ept> was a bash/PowerShell script used to install a DNX on your machine.</source>
          <target state="translated">DNVM, acronimo di <bpt id="p1">*</bpt>DotNet Version Manager<ept id="p1">*</ept>, era uno script bash/PowerShell usato per installare un'istanza di DNX nel computer in uso.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It helped users get the DNX they need from the feed they specified (or default ones) as well as mark a certain DNX "active", which would put it on the $PATH for the given session.</source>
          <target state="translated">DNVM consentiva agli utenti di ottenere il DNX necessario dal feed specificato o dai feed predefiniti. Permetteva inoltre di contrassegnare un determinato DNX come "attivo", inserendolo in $PATH per la sessione in oggetto.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This would allow you to use the various tools.</source>
          <target state="translated">Questo consentiva di usare i diversi strumenti.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>DNVM was discontinued because its feature set was made redundant by changes coming in the .NET Core CLI tools.</source>
          <target state="translated">DNVM è stato messo fuori produzione perché il relativo set di funzionalità è ormai ridondante a causa delle modifiche apportate agli strumenti dell'interfaccia della riga di comando di .NET Core.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The CLI tools come packaged in two main ways, as was explained in the <bpt id="p1">[</bpt>overview document<ept id="p1">](tools/index.md#installation)</ept>:</source>
          <target state="translated">Gli strumenti dell'interfaccia della riga di comando vengono forniti in due modi principali, come descritto in <bpt id="p1">[</bpt>Overview document<ept id="p1">](tools/index.md#installation)</ept> (Documento di anteprima):</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Native installers for a given platform</source>
          <target state="translated">Programmi di installazione nativi per una determinata piattaforma</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Install script for other situations (like CI servers)</source>
          <target state="translated">Script di installazione per altre situazioni, ad esempio server CI</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Given this, the DNVM install features are not needed.</source>
          <target state="translated">Tenendo conto di quanto affermato sopra, le funzionalità di installazione DNVM non sono necessarie.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>But what about the runtime selection features?</source>
          <target state="translated">Qual è tuttavia la situazione per le funzionalità di selezione del runtime?</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You reference a runtime in your <ph id="ph1">`project.json`</ph> by adding a package of a certain version to your dependencies.</source>
          <target state="translated">Si fa riferimento a un runtime in <ph id="ph1">`project.json`</ph> aggiungendo alle dipendenze un pacchetto di una determinata versione.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>With this change, your application will be able to use the new runtime bits.</source>
          <target state="translated">Con questa modifica, l'applicazione sarà in grado di usare i nuovi componenti di runtime.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Getting these bits to your machine is the same as with the CLI: you install the runtime via one of the native installers it supports or via its install script.</source>
          <target state="translated">L'installazione di questi componenti nel computer in uso è analoga all'installazione con l'interfaccia della riga di comando: è possibile installare il runtime tramite uno dei programmi di installazione nativi oppure tramite lo script di installazione.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Different commands</source>
          <target state="translated">Comandi differenti</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If you were using DNX, you used some commands from one of its three parts (DNX, DNU or DNVM).</source>
          <target state="translated">Se si usa DNX, sono disponibili i comandi di uno dei tre componenti (DNX, DNU o DNVM).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>With the CLI, some of these commands change, some are not available and some are the same but have slightly different semantics.</source>
          <target state="translated">Con l'interfaccia della riga di comando, alcuni di questi comandi risultano diversi, alcuni non sono disponibili e altri infine sono uguali ma con una semantica leggermente differente.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The table below shows the mapping between the DNX/DNU commands and their CLI counterparts.</source>
          <target state="translated">La tabella seguente mostra il mapping tra i comandi DNX/DNU e i corrispondenti comandi dell'interfaccia della riga di comando.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>DNX command</source>
          <target state="translated">Comando DNX</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>CLI command</source>
          <target state="translated">Comando dell'interfaccia della riga di comando</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descrizione</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>dnx run</source>
          <target state="translated">dnx run</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>dotnet run</source>
          <target state="translated">dotnet run</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Run code from source.</source>
          <target state="translated">Esegue il codice dall'origine.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>dnu build</source>
          <target state="translated">dnu build</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>dotnet build</source>
          <target state="translated">dotnet build</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Build an IL binary of your code.</source>
          <target state="translated">Crea un file binario IL (Intermediate Language) del codice.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>dnu pack</source>
          <target state="translated">dnu pack</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>dotnet pack</source>
          <target state="translated">dotnet pack</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Package up a NuGet package of your code.</source>
          <target state="translated">Crea un pacchetto NuGet del codice.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>dnx <ph id="ph1">\[</ph>command] (for example, "dnx web")</source>
          <target state="translated">dnx <ph id="ph1">\[</ph>command] (ad esempio, "dnx web")</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>N/A<ph id="ph1">\*</ph></source>
          <target state="translated">N/D<ph id="ph1">\*</ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>In DNX world, run a command as defined in the project.json.</source>
          <target state="translated">In DNX esegue un comando in base a quanto definito nel file project.json.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>dnu install</source>
          <target state="translated">dnu install</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>N/A<ph id="ph1">\*</ph></source>
          <target state="translated">N/D<ph id="ph1">\*</ph></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the DNX world, install a package as a dependency.</source>
          <target state="translated">In DNX installa un pacchetto come dipendenza.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>dnu restore</source>
          <target state="translated">dnu restore</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>dotnet restore</source>
          <target state="translated">dotnet restore</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Restore dependencies specified in your project.json.</source>
          <target state="translated">Ripristina le dipendenze specificate nel file project.json.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>dnu publish</source>
          <target state="translated">dnu publish</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>dotnet publish</source>
          <target state="translated">dotnet publish</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Publish your application for deployment in one of the three forms (portable, portable with native and standalone).</source>
          <target state="translated">Pubblica l'applicazione per la distribuzione in una delle tre forme possibili: portabile, portabile con nativo e autonoma.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>dnu wrap</source>
          <target state="translated">dnu wrap</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>N/A<ph id="ph1">\*</ph></source>
          <target state="translated">N/D<ph id="ph1">\*</ph></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>In DNX world, wrap a project.json in csproj.</source>
          <target state="translated">In DNX esegue il wrapping di un file project.json in csproj.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>dnu commands</source>
          <target state="translated">dnu commands</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>N/A<ph id="ph1">\*</ph></source>
          <target state="translated">N/D<ph id="ph1">\*</ph></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In DNX world, manage the globally installed commands.</source>
          <target state="translated">In DNX gestisce i comandi installati a livello globale.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>(<ph id="ph1">\*</ph>) - these features are not supported in the CLI by design.</source>
          <target state="translated">(<ph id="ph1">\*</ph>) Queste funzionalità non sono supportate nell'interfaccia della riga di comando in base alla progettazione.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>DNX features that are not supported</source>
          <target state="translated">Funzionalità DNX non supportate</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>As the table above shows, there are features from the DNX world that we decided not to support in the CLI, at least for the time being.</source>
          <target state="translated">Come mostrato dalla tabella sopra riportata, esistono alcune funzionalità di DNX che, almeno per il momento, si è deciso di non supportare nell'interfaccia della riga di comando.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This section will go through the most important ones and outline the rationale behind not supporting them as well as workarounds if you do need them.</source>
          <target state="translated">Questa sezione indica le più importanti di queste funzionalità e descrive i motivi per cui non sono supportate. Illustra inoltre le soluzioni alternative da adottare nel caso in cui sia comunque necessario usare queste funzionalità.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Global commands</source>
          <target state="translated">Comandi globali</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>DNU came with a concept called "global commands".</source>
          <target state="translated">DNU integrava un concetto denominato "comandi globali".</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>These were, essentially, console applications packaged up as NuGet packages with a shell script that would invoke the DNX you specified to run the application.</source>
          <target state="translated">Si trattava essenzialmente di applicazioni console create come pacchetti NuGet con uno script della shell che richiamava il DNX specificato per l'esecuzione dell'applicazione.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The CLI does not support this concept.</source>
          <target state="translated">L'interfaccia della riga di comando non supporta questo concetto.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>It does, however, support the concept of adding per-project commands that can be invoked using the familiar <ph id="ph1">`dotnet &lt;command&gt;`</ph> syntax.</source>
          <target state="translated">Supporta tuttavia l'aggiunta di comandi per progetto che è possibile richiamare usando la comune sintassi <ph id="ph1">`dotnet &lt;command&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>More about this can be found in the <bpt id="p1">[</bpt>extensibility overview<ept id="p1">](tools/index.md#extensibility)</ept>.</source>
          <target state="translated">Per altre informazioni, vedere <bpt id="p1">[</bpt>Extensibility overview<ept id="p1">](tools/index.md#extensibility)</ept> (Panoramica sull'estendibilità).</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Installing dependencies</source>
          <target state="translated">Installazione delle dipendenze</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>As of v1, the .NET Core CLI tools don't have an <ph id="ph1">`install`</ph> command for installing dependencies.</source>
          <target state="translated">A partire dalla versione 1, gli strumenti dell'interfaccia della riga di comando di .NET Core non dispongono di un comando <ph id="ph1">`install`</ph> per l'installazione delle dipendenze.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In order to install a package from NuGet, you would need to add it as a dependency to your <ph id="ph1">`project.json`</ph> file and then run <ph id="ph2">`dotnet restore`</ph>.</source>
          <target state="translated">Per installare un pacchetto da NuGet, è necessario aggiungerlo come dipendenza al file <ph id="ph1">`project.json`</ph> e quindi eseguire <ph id="ph2">`dotnet restore`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Running your code</source>
          <target state="translated">Esecuzione del codice</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>There are two main ways to run your code.</source>
          <target state="translated">È possibile eseguire il codice in due modi:</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>One is from source, with <ph id="ph1">`dotnet run`</ph>.</source>
          <target state="translated">Dal sorgente, con <ph id="ph1">`dotnet run`</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Unlike <ph id="ph1">`dnx run`</ph>, this will not do any in-memory compilation.</source>
          <target state="translated">A differenza di <ph id="ph1">`dnx run`</ph>, questo comando non esegue alcuna compilazione in memoria,</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>It will actually invoke <ph id="ph1">`dotnet build`</ph> to build your code and then run the built binary.</source>
          <target state="translated">ma richiama <ph id="ph1">`dotnet build`</ph> per compilare il codice e quindi eseguire il file binario compilato.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Another way is using the <ph id="ph1">`dotnet`</ph> itself to run your code.</source>
          <target state="translated">Un altro modo consiste nell'usare <ph id="ph1">`dotnet`</ph> per eseguire il codice.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>This is done by providing a path to your assembly: <ph id="ph1">`dotnet path/to/an/assembly.dll`</ph>.</source>
          <target state="translated">A tale scopo, fornire un percorso all'assembly: <ph id="ph1">`dotnet path/to/an/assembly.dll`</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Migrating your DNX project to .NET Core CLI</source>
          <target state="translated">Migrazione di un progetto DNX all'interfaccia della riga di comando di .NET Core</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>In addition to using new commands when working with your code, there are three major things left in migrating from DNX:</source>
          <target state="translated">Oltre all'uso di nuovi comandi per la gestione del codice, la migrazione da DNX consente anche le tre operazioni seguenti:</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Migrate the <ph id="ph1">`global.json`</ph> file if you have it to be able to use CLI.</source>
          <target state="translated">Migrazione del file <ph id="ph1">`global.json`</ph> se tale file è in grado di usare l'interfaccia della riga di comando.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Migrating the project file (<ph id="ph1">`project.json`</ph>) itself to the CLI tooling.</source>
          <target state="translated">Migrazione del file di progetto stesso (<ph id="ph1">`project.json`</ph>) agli strumenti dell'interfaccia della riga di comando.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Migrating off of any DNX APIs to their BCL counterparts.</source>
          <target state="translated">Migrazione di qualsiasi API DNX alla corrispondente controparte BCL.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Changing the global.json file</source>
          <target state="translated">Modifica del file global.json</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`global.json`</ph> file acts like a solution file for both the RC1 and RC2 (or later) projects.</source>
          <target state="translated">Il file <ph id="ph1">`global.json`</ph> funge da file di soluzione sia per progetti RC1 che per progetti RC2 (o versioni successive).</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In order for the CLI tools (as well as Visual Studio) to differentiate between RC1 and later versions, they use the <ph id="ph1">`"sdk": { "version" }`</ph> property to make the distinction which project is RC1 or later.</source>
          <target state="translated">Per consentire agli strumenti dell'interfaccia della riga di comando (oltre che a Visual Studio) di distinguere tra RC1 e le versioni successive, viene usata la proprietà <ph id="ph1">`"sdk": { "version" }`</ph>. Tale proprietà consente di stabilire se un progetto è stato creato con RC1 o una versione successiva.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`global.json`</ph> doesn't have this node at all, it is assumed to be the latest.</source>
          <target state="translated">Se il file <ph id="ph1">`global.json`</ph> non dispone affatto di questo nodo, presuppone che si tratti della versione più recente.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>In order to update the <ph id="ph1">`global.json`</ph> file, either remove the property or set it to the exact version of the tools that you wish to use, in this case <bpt id="p1">**</bpt>1.0.0-preview2-003121<ept id="p1">**</ept>:</source>
          <target state="translated">Per aggiornare il file <ph id="ph1">`global.json`</ph>, rimuovere la proprietà o impostarla sulla versione esatta degli strumenti che si intende usare, in questo caso <bpt id="p1">**</bpt>1.0.0-preview2-003121<ept id="p1">**</ept>:</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Migrating the project file</source>
          <target state="translated">Migrazione del file di progetto</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The CLI and DNX both use the same basic project system based on <ph id="ph1">`project.json`</ph> file.</source>
          <target state="translated">L'interfaccia della riga di comando e DNX usano entrambi lo stesso sistema di progetto basato sul file <ph id="ph1">`project.json`</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The syntax and the semantics of the project file are pretty much the same, with small differences based on the scenarios.</source>
          <target state="translated">La sintassi e la semantica del file di progetto sono molto simili, a parte alcune differenze dipendenti dallo scenario.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>There are also some changes to the schema which you can see in the <bpt id="p1">[</bpt>schema file<ept id="p1">](http://json.schemastore.org/project)</ept> or in a more friendly <bpt id="p2">[</bpt>project.json reference<ept id="p2">](tools/project-json.md)</ept>.</source>
          <target state="translated">Sono presenti anche alcune modifiche dello schema che è possibile vedere nel <bpt id="p1">[</bpt>file di schema<ept id="p1">](http://json.schemastore.org/project)</ept> o, in modo più semplice, nell'argomento <bpt id="p2">[</bpt>project.json reference<ept id="p2">](tools/project-json.md)</ept> (Riferimento project.json).</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If you are building a console application, you need to add the following snippet to your project file:</source>
          <target state="translated">Se si sta creando un'applicazione console, è necessario aggiungere al file di progetto il frammento seguente:</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This instructs <ph id="ph1">`dotnet build`</ph> to emit an entry point for your application, effectively making your code runnable.</source>
          <target state="translated">Questo frammento indica a <ph id="ph1">`dotnet build`</ph> di creare un punto di ingresso per l'applicazione, consentendo così l'esecuzione del codice.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>If you are building a class library, simply omit the above section.</source>
          <target state="translated">Se si sta creando una libreria di classi, ignorare semplicemente questa sezione.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Of course, once you add the above snippet to your <ph id="ph1">`project.json`</ph> file, you need to add a static entry point.</source>
          <target state="translated">Naturalmente, dopo aver aggiunto al file <ph id="ph1">`project.json`</ph> il frammento sopra riportato, è necessario aggiungere un punto di ingresso statico.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>With the move off DNX, the DI services it provided are no longer available and thus this needs to be a basic .NET entry point: <ph id="ph1">`static void Main()`</ph>.</source>
          <target state="translated">Con la sospensione di DNX, i servizi DI forniti da quest'ultimo non sono più disponibili e il punto di ingresso statico deve essere un punto di ingresso .NET di base: <ph id="ph1">`static void Main()`</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If you have a "commands" section in your <ph id="ph1">`project.json`</ph>, you can remove it.</source>
          <target state="translated">Se nel file <ph id="ph1">`project.json`</ph> è presente una sezione "commands", è possibile rimuoverla.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Some of the commands that used to exist as DNU commands, such as Entity Framework CLI commands, are being ported to be per-project extensions to the CLI.</source>
          <target state="translated">Alcuni comandi usati per rappresentare comandi DNU, ad esempio comandi dell'interfaccia della riga di comando di Entity Framework, vengono trasferiti nell'interfaccia della riga di comando come estensioni per progetto.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>If you built your own commands that you are using in your projects, you need to replace them with CLI extensions.</source>
          <target state="translated">Se sono stati creati comandi personalizzati che vengono usati nei progetti, è necessario sostituirli con estensioni dell'interfaccia della riga di comando.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>In this case, the <ph id="ph1">`commands`</ph> node in <ph id="ph2">`project.json`</ph> needs to be replaced by the <ph id="ph3">`tools`</ph> node and it needs to list the tools dependencies as explained in the <bpt id="p1">[</bpt>CLI extensibility section<ept id="p1">](tools/index.md#extensibility)</ept>.</source>
          <target state="translated">In questo caso, il nodo <ph id="ph1">`commands`</ph> di <ph id="ph2">`project.json`</ph> deve essere sostituito dal nodo <ph id="ph3">`tools`</ph>. Tale nodo deve elencare le dipendenze degli strumenti, come illustrato nella sezione <bpt id="p1">[</bpt>CLI extensibility<ept id="p1">](tools/index.md#extensibility)</ept> (Estendibilità dell'interfaccia della riga di comando).</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>After these things are done, you need to decide which type of portability you wish for you app.</source>
          <target state="translated">Al termine di queste operazioni, è necessario decidere il tipo di portabilità per l'app.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>With .NET Core, we have invested into providing a spectrum of portability options that you can choose from.</source>
          <target state="translated">Con .NET Core, Microsoft ha reso disponibile un'ampia gamma di opzioni di portabilità.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>For instance, you may want to have a fully <bpt id="p1">*</bpt>portable<ept id="p1">*</ept> application or you may want to have a <bpt id="p2">*</bpt>self-contained<ept id="p2">*</ept> application.</source>
          <target state="translated">È possibile, ad esempio, creare un'applicazione completamente <bpt id="p1">*</bpt>portabile<ept id="p1">*</ept> o un'applicazione <bpt id="p2">*</bpt>autonoma<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The portable application option is more like .NET Framework applications work: it needs a shared component to execute it on the target machine (.NET Core).</source>
          <target state="translated">Il funzionamento di un'applicazione portabile è simile a quello delle applicazioni .NET Framework: è necessario un componente condiviso (.NET Core) da eseguire nel computer di destinazione.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The self-contained application doesn't require .NET Core to be installed on the target, but you have to produce one application for each OS you wish to support.</source>
          <target state="translated">L'applicazione autonoma non richiede l'installazione di .NET Core nel computer di destinazione, ma è necessario creare un'applicazione per ogni sistema operativo che si vuole supportare.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>These portability types and more are discussed in the <bpt id="p1"> [</bpt>application portability type<ept id="p1">](deploying/index.md)</ept> document.</source>
          <target state="translated">Questi e altri tipi di portabilità sono discussi nel documento <bpt id="p1"> [</bpt>Application portability type<ept id="p1">](deploying/index.md)</ept> (Tipo di portabilità delle applicazioni).</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Once you make a call on what type of portability you want, you need to change your targeted framework(s).</source>
          <target state="translated">Una volta deciso il tipo di portabilità, è necessario modificare i framework di destinazione.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>If you were writing applications for .NET Core, you were most likely using <ph id="ph1">`dnxcore50`</ph> as  your targeted framework.</source>
          <target state="translated">Se si stanno creando applicazioni per .NET Core, è probabile che come framework di destinazione venga usato <ph id="ph1">`dnxcore50`</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>With the CLI and the changes that the new <bpt id="p1">[</bpt>.NET Standard Library<ept id="p1">](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/net-platform-standard.md)</ept> brought, the framework needs to be one of the following:</source>
          <target state="translated">Con l'interfaccia della riga di comando e i cambiamenti apportati dalla nuova <bpt id="p1">[</bpt>libreria .NET Standard<ept id="p1">](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/net-platform-standard.md)</ept>, è necessario che il framework sia uno dei seguenti:</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`netcoreapp1.0`</ph> - if you are writing applications on .NET Core (including ASP.NET Core applications)</source>
          <target state="translated"><ph id="ph1">`netcoreapp1.0`</ph>: se si stanno creando applicazioni in .NET Core (incluse applicazioni ASP.NET Core)</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`netstandard1.6`</ph> - if you are writing class libraries for .NET Core</source>
          <target state="translated"><ph id="ph1">`netstandard1.6`</ph>: se si stanno creando librerie di classi per .NET Core</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If you are using other <ph id="ph1">`dnx`</ph> targets, like <ph id="ph2">`dnx451`</ph> you will need to change those as well.</source>
          <target state="translated">Se si usano altre destinazioni <ph id="ph1">`dnx`</ph>, ad esempio <ph id="ph2">`dnx451`</ph>, sarà necessario modificare anche tali destinazioni.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dnx451`</ph> should be changed to <ph id="ph2">`net451`</ph>.</source>
          <target state="translated"><ph id="ph1">`dnx451`</ph> deve essere modificato in <ph id="ph2">`net451`</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Please refer to the <bpt id="p1">[</bpt>.NET Standard Library document<ept id="p1">](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/net-platform-standard.md)</ept> for more information.</source>
          <target state="translated">Per altre informazioni, vedere il <bpt id="p1">[</bpt>documento della libreria .NET Standard<ept id="p1">](https://github.com/dotnet/corefx/blob/master/Documentation/architecture/net-platform-standard.md)</ept>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Your <ph id="ph1">`project.json`</ph> is now mostly ready.</source>
          <target state="translated">Il file <ph id="ph1">`project.json`</ph> è ora praticamente pronto.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>You need to go through your dependencies list and update the dependencies to their newer versions, especially if you are using ASP.NET Core dependencies.</source>
          <target state="translated">È necessario scorrere l'elenco delle dipendenze e aggiornarle alle versioni più recenti, in particolare se si usano dipendenze ASP.NET Core.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>If you were using separate packages for BCL APIs, you can use the runtime package as explained in the <bpt id="p1">[</bpt>application portability type<ept id="p1">](deploying/index.md)</ept> document.</source>
          <target state="translated">Se si usano pacchetti separati per le API BCL, è possibile usare il pacchetto di runtime, come spiegato nel documento <bpt id="p1">[</bpt>Application portability type<ept id="p1">](deploying/index.md)</ept> (Tipo di portabilità delle applicazioni).</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Once you are ready, you can try restoring with <ph id="ph1">`dotnet restore`</ph>.</source>
          <target state="translated">Al termine, è possibile tentare il ripristino con <ph id="ph1">`dotnet restore`</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Depending on the version of your dependencies, you may encounter errors if NuGet cannot resolve the dependencies for one of the targeted frameworks above.</source>
          <target state="translated">A seconda della versione delle dipendenze, si potrebbero verificare errori se NuGet non è in grado di risolvere le dipendenze stesse per uno dei framework di destinazione sopra indicati.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>This is a "point-in-time" problem; as time progresses, more and more packages will include support for these frameworks.</source>
          <target state="translated">Si tratta di un problema momentaneo: con il passare del tempo saranno sempre di più i pacchetti che includono il supporto per questi framework.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For now, if you run into this, you can use the <ph id="ph1">`imports`</ph> statement within the <ph id="ph2">`framework`</ph> node to specify to NuGet that it can restore the packages targeting the framework within the "imports" statement.</source>
          <target state="translated">Per ora, se si verifica questo problema, è possibile usare l'istruzione <ph id="ph1">`imports`</ph> all'interno del nodo <ph id="ph2">`framework`</ph> per indicare a NuGet che può ripristinare i pacchetti che hanno come destinazione il framework indicato nell'istruzione "imports".</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The restoring errors you get in this case should provide enough information to tell you which frameworks you need to import.</source>
          <target state="translated">I messaggi di errore di ripristino visualizzati in questo caso dovrebbero fornire informazioni sufficienti per stabilire quali framework è necessario importare.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>If you are slightly lost or new to this, in general, specifying <ph id="ph1">`dnxcore50`</ph> and <ph id="ph2">`portable-net45+win8`</ph> in the <ph id="ph3">`imports`</ph> statement should do the trick.</source>
          <target state="translated">In caso di dubbi o se si esegue questa operazione per la prima volta, come indicazione generale specificare <ph id="ph1">`dnxcore50`</ph> e <ph id="ph2">`portable-net45+win8`</ph> nell'istruzione <ph id="ph3">`imports`</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The JSON snippet below shows how this looks like:</source>
          <target state="translated">Il frammento JSON seguente mostra un esempio di questo scenario:</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Running <ph id="ph1">`dotnet build`</ph> will show any eventual build errors, though there shouldn't be too many of them.</source>
          <target state="translated">L'esecuzione di <ph id="ph1">`dotnet build`</ph> mostrerà eventuali errori di compilazione, che tuttavia non dovrebbero essere numerosi.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>After your code is building and running properly, you can test it out with the runner.</source>
          <target state="translated">Dopo aver compilato ed eseguito correttamente il codice, è possibile testarlo con Test Runner.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Execute <ph id="ph1">`dotnet &lt;path-to-your-assembly&gt;`</ph> and see it run.</source>
          <target state="translated">Eseguire <ph id="ph1">`dotnet &lt;path-to-your-assembly&gt;`</ph> e osservare l'esecuzione.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>