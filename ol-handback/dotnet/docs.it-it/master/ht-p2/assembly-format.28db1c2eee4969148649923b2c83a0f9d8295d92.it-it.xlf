<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6212a63e74f2d1525e87480b092861be9f92379</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\assembly-format.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ede6c3854aab9b51f42f4e28a43b61926e492e83</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8d15d44ca3191cc1e0e54fe0234341b0299397c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>.NET Assembly File Format</source>
          <target state="translated">Formato dei file di assembly .NET</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>.NET Assembly File Format</source>
          <target state="translated">Formato dei file di assembly .NET</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>.NET Assembly File Format</source>
          <target state="translated">Formato dei file di assembly .NET</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The .NET platform defines a binary file format - “assembly” - that is used to fully-describe and contain .NET programs.</source>
          <target state="translated">La piattaforma .NET definisce un formato di file binario, "assembly", che viene usato per descrivere completamente e contenere i programmi .NET.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Assemblies are used for the programs themselves as well as any dependent libraries.</source>
          <target state="translated">Gli assembly vengono usati per i programmi, nonché per tutte le librerie dipendenti.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A .NET program can be executed as one of more assemblies, with no other required artifacts, beyond the appropriate .NET runtime.</source>
          <target state="translated">Un programma .NET può essere eseguito come uno di più assembly, senza altri elementi necessari, oltre il runtime .NET appropriato.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Native dependencies, including operating system APIs, are a separate concern and are not contained within the .NET assembly format, although are sometimes described with this format (for example, WinRT).</source>
          <target state="translated">Le dipendenze native, incluse le API del sistema operativo, rappresentano una problematica separata e non sono contenute nel formato di assembly .NET, anche se a volte vengono descritte con questo formato (ad esempio, WinRT).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Each CLI component carries the metadata for declarations, implementations, and references specific to that component.</source>
          <target state="translated">Ogni componente CLI usa metadati specifici per dichiarazioni, implementazioni e riferimenti.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Therefore, the component-specific metadata is referred to as component metadata, and the resulting component is said to be self-describing – from ECMA 335 I.9.1, Components and assemblies.</source>
          <target state="translated">Quindi, i metadati specifici di un componente sono indicati come metadati del componente e il componente risultante viene definito come autodescrittivo, in base alla specifica ECMA 335 I.9.1 relativa a componenti e assembly.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The format is fully specified and standardized as ECMA 335.</source>
          <target state="translated">Il formato è completamente specificato e standardizzato come ECMA 335.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>All .NET compilers and runtimes use this format.</source>
          <target state="translated">Tutti i compilatori e runtime .NET usano questo formato.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The presence of a documented and infrequently updated binary format has been a major benefit (arguably a requirement) for interoperatibility.</source>
          <target state="translated">La presenza di un formato binario documentato e aggiornato di rado richiede rappresenta uno dei principali vantaggi, probabilmente un requisito, in termini di interoperabilità.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The format was last updated in a substantive way in 2005 (.NET 2.0) to accommodate generics and processor architecture.</source>
          <target state="translated">Il formato è stato aggiornato in modo sostanziale per l'ultima volta nel 2005 (.NET 2.0) per supportare generics e architettura del processore.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The format is CPU- and OS-agnostic.</source>
          <target state="translated">Il formato è indipendente dalla CPU e dal sistema operativo.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It has been used as part of .NET runtimes that target many chips and CPUs.</source>
          <target state="translated">È stato usato come parte dei runtime di .NET che usano molti chip e CPU.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>While the format itself has Windows heritage, it is implementable on any operating system.</source>
          <target state="translated">Anche se è basato su Windows, il formato può essere implementato in qualsiasi sistema operativo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It’s arguably most significant choice for OS interoperability is that most values are stored in little-endian format.</source>
          <target state="translated">Il motivo per cui è considerato la scelta migliore per l'interoperabilità del sistema operativo è il fatto che la maggior parte dei valori vengono archiviati in formato little endian.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It doesn’t have a specific affinity to machine pointer size (for example, 32-bit, 64-bit).</source>
          <target state="translated">Non presenta un'affinità specifica alle dimensioni del puntatore del computer, ad esempio 32 bit o 64 bit.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The .NET assembly format is also very descriptive about the structure of a given program or library.</source>
          <target state="translated">Il formato di assembly .NET offre anche una descrizione accurata della struttura di un programma o una libreria specifica.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It describes the internal components of an assembly, specifically: assembly references and types defined and their internal structure.</source>
          <target state="translated">Descrive i componenti interni di un assembly, in particolare i riferimenti e i tipi di assembly e la relativa struttura interna.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Tools or APIs can read and process this information for display or to make programmatic decisions.</source>
          <target state="translated">Gli strumenti o le API sono in grado di leggere ed elaborare queste informazioni per la visualizzazione o per prendere decisioni a livello di codice.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Formato</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The .NET binary format is based on the Windows <bpt id="p1">[</bpt>PE file<ept id="p1">](http://en.wikipedia.org/wiki/Portable_Executable)</ept> format.</source>
          <target state="translated">Il formato binario .NET è basato sul formato di <bpt id="p1">[</bpt>file PE<ept id="p1">](http://en.wikipedia.org/wiki/Portable_Executable)</ept> di Windows.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In fact, .NET class libraries are conformant Windows PEs, and appear on first glance to be Windows dynamic link libraries (DLLs) or application executables (EXEs).</source>
          <target state="translated">Di fatto le librerie di classi .NET sono compatibili ai file PE di Windows e appaiono a prima vista come librerie a collegamento dinamico (DLL) o file eseguibili di applicazione (EXE) di Windows.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This is a very useful characteristic on Windows, where they can masquerade as native executable binaries and get some of the same treatment (for example, OS load, PE tools).</source>
          <target state="translated">Questa è una caratteristica molto utile in Windows, poiché le librerie possono essere mascherate da file binari eseguibili nativi e ricevere lo stesso trattamento (ad esempio, il carico del sistema operativo e gli strumenti PE).</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Assembly headers</source>
          <target state="translated">Intestazioni di assembly</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Assembly Headers from ECMA 335 II.25.1, Structure of the runtime file format.</source>
          <target state="translated">Intestazioni di assembly da ECMA 335 II.25.1, struttura del formato di file di runtime.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Processing the Assemblies</source>
          <target state="translated">Elaborazione degli assembly</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>It is possible to write tools or APIs to process assemblies.</source>
          <target state="translated">È possibile scrivere strumenti o API per elaborare gli assembly.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Assembly information enables making programmatic decisions at runtime, re-writing assemblies, providing API IntelliSense in an editor and generating documentation.</source>
          <target state="translated">Le informazioni sugli assembly consentono di prendere decisioni a livello di codice in fase di runtime, riscrivere gli assembly, inserire IntelliSense di API in un editor e generare documentazione.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Reflection<ept id="p1">](https://msdn.microsoft.com/library/system.reflection.aspx)</ept> and <bpt id="p2">[</bpt>Mono.Cecil<ept id="p2">](http://www.mono-project.com/docs/tools+libraries/libraries/Mono.Cecil/)</ept> are good examples of tools that are frequently used for this purpose.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Reflection<ept id="p1">](https://msdn.microsoft.com/library/system.reflection.aspx)</ept> e <bpt id="p2">[</bpt>Mono.Cecil<ept id="p2">](http://www.mono-project.com/docs/tools+libraries/libraries/Mono.Cecil/)</ept> sono due esempi di strumenti usati di frequente per questo scopo.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>