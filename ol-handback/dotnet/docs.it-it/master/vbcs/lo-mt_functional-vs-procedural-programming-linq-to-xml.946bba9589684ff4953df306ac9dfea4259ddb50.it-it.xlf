<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d5afe31c8c81f4b099853a5e6e274156a1baa7f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\functional-vs-procedural-programming-linq-to-xml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">689e8a9c188c207ec58ce9c36b3372381db1adbc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a46b63e77d0fb76563eb3c6f06d267e03e1f4c44</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Functional vs. Procedural Programming (LINQ to XML) (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Programmazione Programmazione procedurale (LINQ to XML) (Visual Basic) | Documenti di Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Functional vs. Procedural Programming (LINQ to XML) (Visual Basic)</source>
          <target state="translated">Programmazione Programmazione procedurale (LINQ to XML) (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>There are various types of XML applications:</source>
          <target state="translated">Sono disponibili diversi tipi di applicazioni XML:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Some applications take source XML documents, and produce new XML documents that are in a different shape than the source documents.</source>
          <target state="translated">In alcune applicazioni da documenti XML di origine vengono prodotti nuovi documenti XML con una forma diversa.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Some applications take source XML documents, and produce result documents in an entirely different form, such as HTML or CSV text files.</source>
          <target state="translated">In alcune applicazioni da documenti XML di origine vengono prodotti documenti risultanti in un formato completamente diverso, ad esempio file di testo CSV o HTML.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Some applications take source XML documents, and insert records into a database.</source>
          <target state="translated">In alcune applicazioni da documenti XML di origine vengono inseriti record in un database.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Some applications take data from another source, such as a database, and create XML documents from it.</source>
          <target state="translated">In alcune applicazioni dai dati di un'altra origine, ad esempio un database, vengono creati documenti XML.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>These are not all of the types of XML applications, but these are a representative set of the types of functionality that an XML programmer has to implement.</source>
          <target state="translated">Quelli elencati non sono tutti i tipi di applicazioni XML disponibili, ma sono rappresentativi dei tipi di funzionalità che i programmatori XML devono implementare.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>With all of these types of applications, there are two contrasting approaches that a developer can take:</source>
          <target state="translated">Con tutti questi tipi di applicazioni, gli sviluppatori possono adottare due approcci completamente diversi:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Functional construction using a declarative approach.</source>
          <target state="translated">Costruzione funzionale usando un approccio dichiarativo.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In-memory XML tree modification using procedural code.</source>
          <target state="translated">Modifica dell'albero XML in memoria usando codice procedurale.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>LINQ to XML supports both approaches.</source>
          <target state="translated">In LINQ to XML sono supportati entrambi gli approcci.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When using the functional approach, you write transformations that take the source documents and generate completely new result documents with the desired shape.</source>
          <target state="translated">Quando si usa l'approccio funzionale, vengono scritte trasformazioni che dai documenti di origine generano documenti completamente nuovi con la forma desiderata.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When modifying an XML tree in place, you write code that traverses and navigates through nodes in an in-memory XML tree, inserting, deleting, and modifying nodes as necessary.</source>
          <target state="translated">Quando si modifica un albero XML sul posto, viene scritto un codice che attraversa e si sposta attraverso i nodi in un albero XML in memoria, inserendo, eliminando e modificando i nodi secondo necessità.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can use LINQ to XML with either approach.</source>
          <target state="translated">È possibile usare LINQ to XML con uno di questi due approcci.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You use the same classes, and in some cases the same methods.</source>
          <target state="translated">Si usano le stesse classe e in alcuni casi gli stessi metodi.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>However, the structure and goals of the two approaches are very different.</source>
          <target state="translated">Tuttavia, la struttura e gli obiettivi dei due approcci sono molto diversi.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, in different situations, one or the other approach will often have better performance, and use more or less memory.</source>
          <target state="translated">In situazioni diverse, ad esempio, un approccio offre in genere prestazioni più elevate dell'altro e usa una quantità maggiore o minore di memoria.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In addition, one or the other approach will be easier to write and yield more maintainable code.</source>
          <target state="translated">Inoltre, un approccio sarà più facile da scrivere dell'altro e produrrà codice più facilmente gestibile.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To see the two approaches contrasted, see <bpt id="p1">[</bpt>In-Memory XML Tree Modification vs. Functional Construction (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/in-memory-xml-tree-modification-vs-functional-construction.md)</ept>.</source>
          <target state="translated">Per i due approcci analogie, vedere <bpt id="p1">[</bpt>Visual Studio modifica dell'albero XML In memoria. Costruzione funzionale (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/in-memory-xml-tree-modification-vs-functional-construction.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For a tutorial on writing functional transformations, see <bpt id="p1">[</bpt>Pure Functional Transformations of XML (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/pure-functional-transformations-of-xml.md)</ept>.</source>
          <target state="translated">Per un'esercitazione sulla scrittura di trasformazioni funzionali, vedere <bpt id="p1">[</bpt>Pure Functional Transformations of XML (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/pure-functional-transformations-of-xml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vedere anche</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ to XML Programming Overview (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-programming-overview.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>LINQ to Cenni preliminari sulla programmazione XML (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-programming-overview.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>