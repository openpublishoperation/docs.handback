<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c26a6f0debd165a925bf45e2ac5063e1afff693f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\how-to-write-a-query-that-finds-elements-based-on-context.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b2e33b5a7562a9b029acfdb9a1b1fef3d6911d61</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d26bc5bcdd886fbcc6fede6170deb9e1f48bd393</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Write a Query that Finds Elements Based on Context (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Procedura: scrivere una Query che trova gli elementi in base al contesto (Visual Basic) | Documenti di Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Write a Query that Finds Elements Based on Context (Visual Basic)</source>
          <target state="translated">Procedura: scrivere una Query che trova gli elementi in base al contesto (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Sometimes you might have to write a query that selects elements based on their context.</source>
          <target state="translated">A volte può essere necessario scrivere una query per selezionare gli elementi in base al contesto.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You might want to filter based on preceding or following sibling elements.</source>
          <target state="translated">In questo caso è anche possibile scegliere un filtro basato sugli elementi di pari livello precedenti o successivi</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You might want to filter based on child or ancestor elements.</source>
          <target state="translated">oppure sugli elementi figlio o sui predecessori.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can do this by writing a query and using the results of the query in the <ph id="ph1">`where`</ph> clause.</source>
          <target state="translated">Per ottenere questo risultato, scrivere una query e usare i relativi risultati nella clausola <ph id="ph1">`where`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If you have to first test against null, and then test the value, it is more convenient to do the query in a <ph id="ph1">`let`</ph> clause, and then use the results in the <ph id="ph2">`where`</ph> clause.</source>
          <target state="translated">Se è necessario verificare innanzitutto la presenza di valori Null e quindi testare il valore, è preferibile eseguire la query in una clausola <ph id="ph1">`let`</ph> e poi usare i risultati nella clausola <ph id="ph2">`where`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Esempio</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following example selects all <ph id="ph1">`p`</ph> elements that are immediately followed by a <ph id="ph2">`ul`</ph> element.</source>
          <target state="translated">Nell'esempio seguente vengono selezionati tutti gli elementi <ph id="ph1">`p`</ph> immediatamente seguiti da un elemento <ph id="ph2">`ul`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This code produces the following output:</source>
          <target state="translated">L'output del codice è il seguente:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Esempio</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following example shows the same query for XML that is in a namespace.</source>
          <target state="translated">Nell'esempio seguente è illustrata la stessa query per XML in uno spazio dei nomi.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>utilizzo di spazi dei nomi XML (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This code produces the following output:</source>
          <target state="translated">L'output del codice è il seguente:</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vedere anche</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XElement.Parse%2A&gt;&lt;/xref:System.Xml.Linq.XElement.Parse%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Linq.XContainer.Descendants%2A&gt;</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XContainer.Descendants%2A&gt;&lt;/xref:System.Xml.Linq.XContainer.Descendants%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Linq.XNode.ElementsAfterSelf%2A&gt;</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XNode.ElementsAfterSelf%2A&gt;&lt;/xref:System.Xml.Linq.XNode.ElementsAfterSelf%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A&gt;</source>
          <target state="translated">&lt;xref:System.Linq.Enumerable.FirstOrDefault%2A&gt;&lt;/xref:System.Linq.Enumerable.FirstOrDefault%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Basic Queries (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/basic-queries-linq-to-xml.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Query di base (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/basic-queries-linq-to-xml.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>