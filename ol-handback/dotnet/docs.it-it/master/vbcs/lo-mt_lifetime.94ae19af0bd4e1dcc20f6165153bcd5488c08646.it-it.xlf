<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa0cbdf4a8fe5e8fc41e4e4f373c79451fb7b75f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\declared-elements\lifetime.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">022c43d985d495bbb7731dabddd51b970ba41534</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8cc4415f003b59929429da4b12a080048e739a02</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Lifetime in Visual Basic | Microsoft Docs</source>
          <target state="translated">Durata in Visual Basic | Documenti di Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Lifetime in Visual Basic</source>
          <target state="translated">Durata in Visual Basic</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>lifetime<ept id="p1">*</ept> of a declared element is the period of time during which it is available for use.</source>
          <target state="translated">Il <bpt id="p1">*</bpt>durata<ept id="p1">*</ept> di un elemento dichiarato è il periodo di tempo durante il quale essa è disponibile per l'utilizzo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Variables are the only elements that have lifetime.</source>
          <target state="translated">Le variabili sono gli unici elementi che hanno una durata.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For this purpose, the compiler treats procedure parameters and function returns as special cases of variables.</source>
          <target state="translated">A questo scopo, il compilatore considera i parametri delle procedure e funzione restituisce come casi speciali di variabili.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The lifetime of a variable represents the period of time during which it can hold a value.</source>
          <target state="translated">La durata di una variabile rappresenta il periodo di tempo durante i quali può contenere un valore.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Its value can change over its lifetime, but it always holds some value.</source>
          <target state="translated">Tale valore può cambiare nel corso della durata, ma contiene sempre un valore.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Different Lifetimes</source>
          <target state="translated">Durata diversa</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>member variable<ept id="p1">*</ept> (declared at module level, outside any procedure) typically has the same lifetime as the element in which it is declared.</source>
          <target state="translated">Oggetto <bpt id="p1">*</bpt>variabile membro<ept id="p1">*</ept> (dichiarato a livello di modulo, all'esterno di qualsiasi routine) ha in genere la stessa durata dell'elemento in cui è dichiarata.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A nonshared variable declared in a class or structure exists as a separate copy for each instance of the class or structure in which it is declared.</source>
          <target state="translated">Una variabile non condivisa dichiarata in una classe o struttura esiste come una copia separata per ogni istanza della classe o struttura in cui è dichiarata.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Each such variable has the same lifetime as its instance.</source>
          <target state="translated">Ognuna di queste variabili ha la stessa durata della relativa istanza.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, a <ph id="ph1">`Shared`</ph> variable has only a single lifetime, which lasts for the entire time your application is running.</source>
          <target state="translated">Tuttavia, un <ph id="ph1">`Shared`</ph> variabile ha un'unica durata, la durata di esecuzione dell'applicazione.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>local variable<ept id="p1">*</ept> (declared inside a procedure) exists only while the procedure in which it is declared is running.</source>
          <target state="translated">Oggetto <bpt id="p1">*</bpt>variabile locale<ept id="p1">*</ept> (dichiarato all'interno di una routine) esiste solo durante l'esecuzione della routine in cui è dichiarata.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This applies also to that procedure's parameters and to any function return.</source>
          <target state="translated">Questo vale anche per i parametri della routine e a qualsiasi funzione restituito.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>However, if that procedure calls other procedures, the local variables retain their values while the called procedures are running.</source>
          <target state="translated">Tuttavia, se tale routine chiama altre procedure, le variabili locali mantengono i propri valori durante l'esecuzione delle routine chiamate.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Beginning of Lifetime</source>
          <target state="translated">Inizio della durata</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A local variable's lifetime begins when control enters the procedure in which it is declared.</source>
          <target state="translated">La durata di una variabile locale inizia quando il controllo entra la procedura in cui è dichiarata.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Every local variable is initialized to the default value for its data type as soon as the procedure begins running.</source>
          <target state="translated">Ogni variabile locale viene inizializzata sul valore predefinito per il tipo di dati non appena inizia la procedura in esecuzione.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When the procedure encounters a <ph id="ph1">`Dim`</ph> statement that specifies initial values, it sets those variables to those values, even if your code had already assigned other values to them.</source>
          <target state="translated">Quando la procedura rileva un <ph id="ph1">`Dim`</ph> istruzione che specifica i valori iniziali, imposta le variabili su tali valori, anche se il codice aveva già assegnato altri valori.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Each member of a structure variable is initialized as if it were a separate variable.</source>
          <target state="translated">Ogni membro di una variabile di struttura viene inizializzato come se fosse una variabile separata.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Similarly, each element of an array variable is initialized individually.</source>
          <target state="translated">Analogamente, ogni elemento di una variabile di matrice viene inizializzato singolarmente.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Variables declared within a block inside a procedure (such as a <ph id="ph1">`For`</ph> loop) are initialized on entry to the procedure.</source>
          <target state="translated">Le variabili dichiarate all'interno di un blocco all'interno di una routine (ad esempio un <ph id="ph1">`For`</ph> ciclo) vengono inizializzati alla routine.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>These initializations take effect whether or not your code ever executes the block.</source>
          <target state="translated">Queste inizializzazioni effettive verrà mai eseguito il blocco o meno.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>End of Lifetime</source>
          <target state="translated">Fine del ciclo di vita</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When a procedure terminates, the values of its local variables are not preserved, and <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> reclaims their memory.</source>
          <target state="translated">Al termine di una routine, i valori delle variabili locali non vengono conservati e <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> recupera la memoria.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The next time you call the procedure, all its local variables are created afresh and reinitialized.</source>
          <target state="translated">Al successivo che si chiama la routine, tutte le variabili locali vengono ricreate e reinizializzate.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When an instance of a class or structure terminates, its nonshared variables lose their memory and their values.</source>
          <target state="translated">Al termine di un'istanza di una classe o struttura, le variabili non perdono la memoria e i relativi valori.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Each new instance of the class or structure creates and reinitializes its nonshared variables.</source>
          <target state="translated">Ogni nuova istanza della classe o struttura crea e reinizializza le variabili non condivise.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>However, <ph id="ph1">`Shared`</ph> variables are preserved until your application stops running.</source>
          <target state="translated">Tuttavia, <ph id="ph1">`Shared`</ph> le variabili vengono mantenute fino a quando l'esecuzione dell'applicazione.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Extension of Lifetime</source>
          <target state="translated">Estensione della durata</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you declare a local variable with the <ph id="ph1">`Static`</ph> keyword, its lifetime is longer than the execution time of its procedure.</source>
          <target state="translated">Se si dichiara una variabile locale con il <ph id="ph1">`Static`</ph> (parola chiave), la sua durata è maggiore rispetto al tempo di esecuzione della relativa routine.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following table shows how the procedure declaration determines how long a <ph id="ph1">`Static`</ph> variable exists.</source>
          <target state="translated">Nella tabella seguente viene illustrato come la dichiarazione della routine determina per quanto tempo un <ph id="ph1">`Static`</ph> variabile esista.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Procedure location and sharing</source>
          <target state="translated">Posizione della routine e condivisione</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Static variable lifetime begins</source>
          <target state="translated">Inizio della durata della variabile statica</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Static variable lifetime ends</source>
          <target state="translated">Fine della durata della variabile statica</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In a module (shared by default)</source>
          <target state="translated">In un modulo (condiviso per impostazione predefinita)</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The first time the procedure is called</source>
          <target state="translated">La prima volta che viene chiamata la routine</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When your application stops running</source>
          <target state="translated">Al termine dell'esecuzione dell'applicazione</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In a class, <ph id="ph1">`Shared`</ph> (procedure is not an instance member)</source>
          <target state="translated">In una classe, <ph id="ph1">`Shared`</ph> (procedura non è un membro di istanza)</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The first time the procedure is called either on a specific instance or on the class or structure name itself</source>
          <target state="translated">La prima volta la procedura viene chiamata su un'istanza specifica o al nome di classe o struttura stessa</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When your application stops running</source>
          <target state="translated">Al termine dell'esecuzione dell'applicazione</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In an instance of a class, not <ph id="ph1">`Shared`</ph> (procedure is an instance member)</source>
          <target state="translated">In un'istanza di una classe, non <ph id="ph1">`Shared`</ph> (la routine è un membro di istanza)</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The first time the procedure is called on the specific instance</source>
          <target state="translated">La prima volta la routine viene chiamata sull'istanza specifica</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When the instance is released for garbage collection (GC)</source>
          <target state="translated">Quando l'istanza viene rilasciata per la garbage collection (GC)</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Static Variables of the Same Name</source>
          <target state="translated">Variabili statiche con lo stesso nome</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can declare static variables with the same name in more than one procedure.</source>
          <target state="translated">È possibile dichiarare le variabili statiche con lo stesso nome in più di una procedura.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you do this, the <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> compiler considers each such variable to be a separate element.</source>
          <target state="translated">In tal caso, il <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> compilatore considera ognuna di queste variabili per un elemento distinto.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The initialization of one of these variables does not affect the values of the others.</source>
          <target state="translated">L'inizializzazione di una di queste variabili non influenza i valori degli altri.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The same applies if you define a procedure with a set of overloads and declare a static variable with the same name in each overload.</source>
          <target state="translated">Lo stesso vale se si definisce una routine con un set di overload e dichiara una variabile statica con lo stesso nome in ogni overload.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Containing Elements for Static Variables</source>
          <target state="translated">Contenente gli elementi per le variabili statiche</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can declare a static local variable within a class, that is, inside a procedure in that class.</source>
          <target state="translated">È possibile dichiarare una variabile locale statica all'interno di una classe, vale a dire all'interno di una routine in tale classe.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>However, you cannot declare a static local variable within a structure, either as a structure member or as a local variable of a procedure within that structure.</source>
          <target state="translated">Tuttavia, è possibile dichiarare una variabile locale statica all'interno di una struttura, come un membro della struttura o come una variabile locale di una procedura all'interno di tale struttura.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Esempio</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descrizione</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The following example declares a variable with the <bpt id="p1">[</bpt>Static<ept id="p1">](../../../../visual-basic/language-reference/modifiers/static.md)</ept> keyword.</source>
          <target state="translated">Nell'esempio seguente viene dichiarata una variabile con il <bpt id="p1">[</bpt>statico<ept id="p1">](../../../../visual-basic/language-reference/modifiers/static.md)</ept> (parola chiave).</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>(Note that you do not need the <ph id="ph1">`Dim`</ph> keyword when the <bpt id="p1">[</bpt>Dim Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/dim-statement.md)</ept> uses a modifier such as <ph id="ph2">`Static`</ph>.)</source>
          <target state="translated">(Si noti che non è necessario il <ph id="ph1">`Dim`</ph> (parola chiave) quando il <bpt id="p1">[</bpt>Dim (istruzione)<ept id="p1">](../../../../visual-basic/language-reference/statements/dim-statement.md)</ept> utilizza un modificatore, ad esempio <ph id="ph2">`Static`</ph>.)</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Codice</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrKeywords#13<ept id="p2">](../../../../visual-basic/language-reference/codesnippet/VisualBasic/lifetime_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>13 VbVbalrKeywords<ept id="p2">](../../../../visual-basic/language-reference/codesnippet/VisualBasic/lifetime_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Commenti</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>In the preceding example, the variable <ph id="ph1">`applesSold`</ph> continues to exist after the procedure <ph id="ph2">`runningTotal`</ph> returns to the calling code.</source>
          <target state="translated">Nell'esempio precedente, la variabile <ph id="ph1">`applesSold`</ph> continua a esistere dopo la procedura <ph id="ph2">`runningTotal`</ph> restituisce al codice chiamante.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The next time <ph id="ph1">`runningTotal`</ph> is called, <ph id="ph2">`applesSold`</ph> retains its previously calculated value.</source>
          <target state="translated">La volta successiva che <ph id="ph1">`runningTotal`</ph> viene chiamato, <ph id="ph2">`applesSold`</ph> mantiene il valore calcolato in precedenza.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`applesSold`</ph> had been declared without using <ph id="ph2">`Static`</ph>, the previous accumulated values would not be preserved across calls to <ph id="ph3">`runningTotal`</ph>.</source>
          <target state="translated">Se <ph id="ph1">`applesSold`</ph> fosse stato dichiarato senza l'utilizzo di <ph id="ph2">`Static`</ph>, i valori precedentemente accumulati non verranno conservati tra le chiamate a <ph id="ph3">`runningTotal`</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The next time <ph id="ph1">`runningTotal`</ph> was called, <ph id="ph2">`applesSold`</ph> would have been recreated and initialized to 0, and <ph id="ph3">`runningTotal`</ph> would have simply returned the same value with which it was called.</source>
          <target state="translated">La volta successiva che <ph id="ph1">`runningTotal`</ph> è stato chiamato, <ph id="ph2">`applesSold`</ph> verrà ricreata e inizializzata su 0, e <ph id="ph3">`runningTotal`</ph> restituirà semplicemente lo stesso valore con cui è stato chiamato.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
          <target state="translated">Compilazione del codice</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>You can initialize the value of a static local variable as part of its declaration.</source>
          <target state="translated">È possibile inizializzare il valore di una variabile locale statica come parte della relativa dichiarazione.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If you declare an array to be <ph id="ph1">`Static`</ph>, you can initialize its rank (number of dimensions), the length of each dimension, and the values of the individual elements.</source>
          <target state="translated">Se si dichiara una matrice come <ph id="ph1">`Static`</ph>, è possibile inizializzare il rango (numero di dimensioni), la lunghezza di ogni dimensione e i valori dei singoli elementi.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Sicurezza</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In the preceding example, you can produce the same lifetime by declaring <ph id="ph1">`applesSold`</ph> at module level.</source>
          <target state="translated">Nell'esempio precedente, è possibile ottenere la stessa durata dichiarando <ph id="ph1">`applesSold`</ph> a livello di modulo.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>If you changed the scope of a variable this way, however, the procedure would no longer have exclusive access to it.</source>
          <target state="translated">Se si modifica l'ambito di una variabile in questo modo, tuttavia, la procedura non avrebbe accesso esclusivo a essa.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Because other procedures could access <ph id="ph1">`applesSold`</ph> and change its value, the running total could be unreliable and the code could be more difficult to maintain.</source>
          <target state="translated">Poiché in grado di accedere ad altre procedure <ph id="ph1">`applesSold`</ph> e modificarne il valore, il totale parziale potrebbe non essere affidabile e il codice potrebbe essere più difficile da gestire.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vedere anche</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Shared<ept id="p1">](../../../../visual-basic/language-reference/modifiers/shared.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Condiviso<ept id="p1">](../../../../visual-basic/language-reference/modifiers/shared.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Nothing<ept id="p1">](../../../../visual-basic/language-reference/nothing.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Nothing<ept id="p1">](../../../../visual-basic/language-reference/nothing.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Declared Element Names<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Nomi elementi dichiarati<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>References to Declared Elements<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Riferimenti a elementi dichiarati<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Scope in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/scope.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Ambito in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/scope.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Access Levels in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Livelli di accesso in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Variables<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Variabili<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Variable Declaration<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/variable-declaration.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Dichiarazione di variabile<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/variable-declaration.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Troubleshooting Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Risoluzione dei tipi di dati<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Static<ept id="p1">](../../../../visual-basic/language-reference/modifiers/static.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Static<ept id="p1">](../../../../visual-basic/language-reference/modifiers/static.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>