<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54db297ecd39e37492dcf8bb4de4f64476662670</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\maintaining-name-value-pairs.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2be8a303f931c0693f267499c3148b40459cf871</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">503dca79697845b6a014bd56d041b085ca701cee</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Maintaining Name-Value Pairs (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Gestione di coppie nome-valore (Visual Basic) | Documenti di Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Maintaining Name/Value Pairs (Visual Basic)</source>
          <target state="translated">Gestione di coppie nome/valore (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Many applications have to maintain information that is best kept as name/value pairs.</source>
          <target state="translated">In molte applicazioni è necessario gestire informazioni che è preferibile mantenere come coppie nome/valore.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This information might be configuration information or global settings.</source>
          <target state="translated">Queste informazioni potrebbero essere di configurazione o impostazioni globali.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> contains some methods that make it easy to keep a set of name/value pairs.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> include alcuni metodi che consentono di mantenere facilmente coppie nome/valore.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can either keep the information as attributes or as a set of child elements.</source>
          <target state="translated">È possibile mantenere le informazioni come attributi o come un set di elementi figlio.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>One difference between keeping the information as attributes or as child elements is that attributes have the constraint that there can be only one attribute with a particular name for an element.</source>
          <target state="translated">Una differenza tra il mantenere le informazioni come attributi o come elementi figlio è che gli attributi prevedono un vincolo in base al quale per un elemento può esistere un unico attributo con un nome specifico.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This limitation does not apply to child elements.</source>
          <target state="translated">Questa limitazione non si applica invece agli elementi figlio.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>SetAttributeValue and SetElementValue</source>
          <target state="translated">SetAttributeValue e SetElementValue</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The two methods that facilitate keeping name/value pairs are &lt;xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt; and &lt;xref:System.Xml.Linq.XElement.SetElementValue%2A&gt;.</source>
          <target state="translated">I due metodi che facilitano il mantenimento nome/valore sono coppie &lt;xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt;e &lt;xref:System.Xml.Linq.XElement.SetElementValue%2A&gt;.&lt;/xref:System.Xml.Linq.XElement.SetElementValue%2A&gt; &lt;/xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>These two methods have similar semantics.</source>
          <target state="translated">Si tratta di metodi contraddistinti da una semantica simile.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt; can add, modify, or remove attributes of an element.</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt;può aggiungere, modificare o rimuovere gli attributi di un elemento.&lt;/xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you call &lt;xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt; with a name of an attribute that does not exist, the method creates a new attribute and adds it to the specified element.</source>
          <target state="translated">Se si chiama &lt;xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt;con un nome di un attributo che non esiste, il metodo crea un nuovo attributo e lo aggiunge all'elemento specificato.&lt;/xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If you call &lt;xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt; with a name of an existing attribute and with some specified content, the contents of the attribute are replaced with the specified content.</source>
          <target state="translated">Se si chiama &lt;xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt;con un nome di un attributo esistente e specificato il contenuto, il contenuto dell'attributo viene sostituito con il contenuto specificato.&lt;/xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you call &lt;xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt; with a name of an existing attribute, and specify null for the content, the attribute is removed from its parent.</source>
          <target state="translated">Se si chiama &lt;xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt;con un nome di un attributo e si specifica null per il contenuto, l'attributo viene rimosso dal relativo elemento padre.&lt;/xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Linq.XElement.SetElementValue%2A&gt; can add, modify, or remove child elements of an element.</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XElement.SetElementValue%2A&gt;può aggiungere, modificare o rimuovere gli elementi figlio di un elemento.&lt;/xref:System.Xml.Linq.XElement.SetElementValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you call &lt;xref:System.Xml.Linq.XElement.SetElementValue%2A&gt; with a name of a child element that does not exist, the method creates a new element and adds it to the specified element.</source>
          <target state="translated">Se si chiama &lt;xref:System.Xml.Linq.XElement.SetElementValue%2A&gt;con un nome di un elemento figlio che non esiste, il metodo crea un nuovo elemento e lo aggiunge all'elemento specificato.&lt;/xref:System.Xml.Linq.XElement.SetElementValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you call &lt;xref:System.Xml.Linq.XElement.SetElementValue%2A&gt; with a name of an existing element and with some specified content, the contents of the element are replaced with the specified content.</source>
          <target state="translated">Se si chiama &lt;xref:System.Xml.Linq.XElement.SetElementValue%2A&gt;con un nome di un elemento esistente e specificato il contenuto, il contenuto dell'elemento viene sostituito con il contenuto specificato.&lt;/xref:System.Xml.Linq.XElement.SetElementValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you call &lt;xref:System.Xml.Linq.XElement.SetElementValue%2A&gt; with a name of an existing element, and specify null for the content, the element is removed from its parent.</source>
          <target state="translated">Se si chiama &lt;xref:System.Xml.Linq.XElement.SetElementValue%2A&gt;con un nome di un elemento esistente e si specifica null per il contenuto, l'elemento viene rimosso dal relativo elemento padre.&lt;/xref:System.Xml.Linq.XElement.SetElementValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Esempio</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following example creates an element with no attributes.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento senza attributi.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>It then uses the &lt;xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt; method to create and maintain a list of name/value pairs.</source>
          <target state="translated">Viene quindi utilizzato il &lt;xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt;per creare e gestire un elenco di coppie nome/valore.&lt;/xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Esempio</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following example creates an element with no child elements.</source>
          <target state="translated">Nell'esempio seguente viene creato un elemento senza elementi figlio.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It then uses the &lt;xref:System.Xml.Linq.XElement.SetElementValue%2A&gt; method to create and maintain a list of name/value pairs.</source>
          <target state="translated">Viene quindi utilizzato il &lt;xref:System.Xml.Linq.XElement.SetElementValue%2A&gt;per creare e gestire un elenco di coppie nome/valore.&lt;/xref:System.Xml.Linq.XElement.SetElementValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">Questo esempio produce il seguente output:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vedere anche</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt;</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt;&lt;/xref:System.Xml.Linq.XElement.SetAttributeValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Linq.XElement.SetElementValue%2A&gt;</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XElement.SetElementValue%2A&gt;&lt;/xref:System.Xml.Linq.XElement.SetElementValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Modifying XML Trees (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/modifying-xml-trees-linq-to-xml.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Modifica di strutture ad albero XML (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/modifying-xml-trees-linq-to-xml.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>