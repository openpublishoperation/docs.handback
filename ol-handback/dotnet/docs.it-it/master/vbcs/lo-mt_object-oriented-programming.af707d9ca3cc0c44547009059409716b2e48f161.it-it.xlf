<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5491b3bd5a25908194d02063f688a319509bb77</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\object-oriented-programming.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">247c95a78f51f0c54560faa85fd2d320a0ca0218</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c21998c7daccdc53003ba72fc80342b8f4d552f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Object-Oriented Programming (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Orientato a oggetti di programmazione (Visual Basic) | Documenti di Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Object-Oriented Programming (Visual Basic)</source>
          <target state="translated">Programmazione orientata agli oggetti (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Visual Basic provides full support for object-oriented programming including encapsulation, inheritance, and polymorphism.</source>
          <target state="translated">Visual Basic fornisce supporto completo perla programmazione orientata agli oggetti inclusi incapsulamento, ereditarietà e polimorfismo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Encapsulation<ept id="p1">*</ept> means that a group of related properties, methods, and other members are treated as a single unit or object.</source>
          <target state="translated"><bpt id="p1">*</bpt>Incapsulamento<ept id="p1">*</ept> indica che un gruppo di proprietà correlate, metodi e gli altri membri vengono considerati come una singola unità o un oggetto.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Inheritance<ept id="p1">*</ept> describes the ability to create new classes based on an existing class.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ereditarietà<ept id="p1">*</ept> descrive la possibilità di creare nuove classi basate su una classe esistente.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Polymorphism<ept id="p1">*</ept> means that you can have multiple classes that can be used interchangeably, even though each class implements the same properties or methods in different ways.</source>
          <target state="translated"><bpt id="p1">*</bpt>Polimorfismo<ept id="p1">*</ept> significa che è possibile avere più classi che possono essere utilizzate in modo intercambiabile, anche se ciascuna classe implementa le stesse proprietà o metodi in modi diversi.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This section describes the following concepts:</source>
          <target state="translated">In questa sezione vengono descritti i concetti seguenti:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Classes and Objects<ept id="p1">](#Classes)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Classi e oggetti<ept id="p1">](#Classes)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Class Members<ept id="p1">](#Members)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Membri di classe<ept id="p1">](#Members)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Properties and Fields<ept id="p1">](#Properties)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Proprietà e campi<ept id="p1">](#Properties)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Methods<ept id="p1">](#Methods)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Metodi<ept id="p1">](#Methods)</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Constructors<ept id="p1">](#Constructors)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Costruttori<ept id="p1">](#Constructors)</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Destructors<ept id="p1">](#Destructors)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Distruttori<ept id="p1">](#Destructors)</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Events<ept id="p1">](#Events)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Eventi<ept id="p1">](#Events)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nested Classes<ept id="p1">](#NestedClasses)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Classi annidate<ept id="p1">](#NestedClasses)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Access Modifiers and Access Levels<ept id="p1">](#AccessModifiers)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Modificatori di accesso e livelli di accesso<ept id="p1">](#AccessModifiers)</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Instantiating Classes<ept id="p1">](#InstantiatingClasses)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Creazione di classi<ept id="p1">](#InstantiatingClasses)</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Shared Classes and Members<ept id="p1">](#Static)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Le classi condivise e i membri<ept id="p1">](#Static)</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Anonymous Types<ept id="p1">](#AnonymousTypes)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Tipi anonimi<ept id="p1">](#AnonymousTypes)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Inheritance<ept id="p1">](#Inheritance)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Ereditarietà<ept id="p1">](#Inheritance)</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Overriding Members<ept id="p1">](#Overriding)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Override di membri<ept id="p1">](#Overriding)</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Interfaces<ept id="p1">](#Interfaces)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Interfacce<ept id="p1">](#Interfaces)</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generics<ept id="p1">](#Generics)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Generics<ept id="p1">](#Generics)</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Delegates<ept id="p1">](#Delegates)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Delegati<ept id="p1">](#Delegates)</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="Classes"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Classes and Objects</source>
          <target state="translated"><bpt id="p1">&lt;a name="Classes"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>Classi e oggetti</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The terms <bpt id="p1">*</bpt>class<ept id="p1">*</ept> and <bpt id="p2">*</bpt>object<ept id="p2">*</ept> are sometimes used interchangeably, but in fact, classes describe the <bpt id="p3">*</bpt>type<ept id="p3">*</ept> of objects, while objects are usable <bpt id="p4">*</bpt>instances<ept id="p4">*</ept> of classes.</source>
          <target state="translated">Le condizioni di <bpt id="p1">*</bpt>classe<ept id="p1">*</ept> e <bpt id="p2">*</bpt>oggetto<ept id="p2">*</ept> vengono talvolta utilizzati in modo intercambiabile, ma in realtà, le classi descrivono il <bpt id="p3">*</bpt>tipo<ept id="p3">*</ept> degli oggetti, mentre gli oggetti sono utilizzabili <bpt id="p4">*</bpt>istanze<ept id="p4">*</ept> delle classi.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>So, the act of creating an object is called <bpt id="p1">*</bpt>instantiation<ept id="p1">*</ept>.</source>
          <target state="translated">L'atto di creare un oggetto viene pertanto chiamato <bpt id="p1">*</bpt>la creazione di istanze<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Using the blueprint analogy, a class is a blueprint, and an object is a building made from that blueprint.</source>
          <target state="translated">Rifacendoci all'analogia precedente, la classe corrisponde al progetto iniziale e l'oggetto all'edificio realizzato in base a tale progetto.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To define a class:</source>
          <target state="translated">Per definire una classe:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Visual Basic also provides a light version of classes called <bpt id="p1">*</bpt>structures<ept id="p1">*</ept> that are useful when you need to create large array of objects and do not want to consume too much memory for that.</source>
          <target state="translated">Visual Basic fornisce inoltre una versione ridotta delle classi chiamate <bpt id="p1">*</bpt>strutture<ept id="p1">*</ept> che sono utili quando è necessario creare una matrice di oggetti di grandi dimensioni e si desidera utilizzare una quantità eccessiva di memoria per tale.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To define a structure:</source>
          <target state="translated">Per definire una struttura:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For more information, see:</source>
          <target state="translated">Per altre informazioni, vedere:</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Class Statement<ept id="p1">](../../../visual-basic/language-reference/statements/class-statement.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Istruzione Class<ept id="p1">](../../../visual-basic/language-reference/statements/class-statement.md)</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Structure Statement<ept id="p1">](../../../visual-basic/language-reference/statements/structure-statement.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Istruzione Structure<ept id="p1">](../../../visual-basic/language-reference/statements/structure-statement.md)</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="Members"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Class Members</source>
          <target state="translated"><bpt id="p1">&lt;a name="Members"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>Membri di classe</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Each class can have different <bpt id="p1">*</bpt>class members<ept id="p1">*</ept> that include properties that describe class data, methods that define class behavior, and events that provide communication between different classes and objects.</source>
          <target state="translated">Ogni classe può avere diversi <bpt id="p1">*</bpt>i membri della classe<ept id="p1">*</ept> che includono proprietà che descrivono dati relativi a classi, metodi che definiscono il comportamento della classe e gli eventi che forniscono la comunicazione tra classi e oggetti diversi.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="Properties"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Properties and Fields</source>
          <target state="translated"><bpt id="p1">&lt;a name="Properties"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>Proprietà e campi</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Fields and properties represent information that an object contains.</source>
          <target state="translated">I campi e le proprietà rappresentano le informazioni contenute in un oggetto.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Fields are like variables because they can be read or set directly.</source>
          <target state="translated">I campi sono simili a variabili in quanto possono essere letti o impostati direttamente.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>To define a field:</source>
          <target state="translated">Per definire un campo:</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Properties have get and set procedures, which provide more control on how values are set or returned.</source>
          <target state="translated">Le proprietà dispongono di routine Get e Set, che forniscono un maggiore controllo sul modo in cui i valori vengono impostati o restituiti.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Visual Basic allows you either to create a private field for storing the property value or use so-called auto-implemented properties that create this field automatically behind the scenes and provide the basic logic for the property procedures.</source>
          <target state="translated">Visual Basic consente di creare un campo privato per archiviare il valore della proprietà o utilizzare le cosiddette proprietà implementate automaticamente che creano automaticamente questo campo e forniscono la logica di base per le routine di proprietà.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To define an auto-implemented property:</source>
          <target state="translated">Per definire una proprietà implementata automaticamente:</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you need to perform some additional operations for reading and writing the property value, define a field for storing the property value and provide the basic logic for storing and retrieving it:</source>
          <target state="translated">Se è necessario eseguire alcune operazioni aggiuntive per la lettura e la scrittura del valore della proprietà, definire un campo per archiviare il valore della proprietà e fornire la logica di base per archiviarlo e recuperarlo:</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Most properties have methods or procedures to both set and get the property value.</source>
          <target state="translated">La maggior parte delle proprietà dispone di metodi o di routine per impostare e ottenere il valore della proprietà.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>However, you can create read-only or write-only properties to restrict them from being modified or read.</source>
          <target state="translated">È possibile, tuttavia, creare proprietà di sola lettura o di sola scrittura per impedirne la modifica o la lettura.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In Visual Basic you can use <ph id="ph1">`ReadOnly`</ph> and <ph id="ph2">`WriteOnly`</ph> keywords.</source>
          <target state="translated">In Visual Basic è possibile utilizzare le parole chiave <ph id="ph1">`ReadOnly`</ph> e <ph id="ph2">`WriteOnly`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>However, auto-implemented properties cannot be read-only or write-only.</source>
          <target state="translated">Proprietà implementate automaticamente, tuttavia, non può essere in sola lettura o in sola lettura.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For more information, see:</source>
          <target state="translated">Per altre informazioni, vedere:</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Property Statement<ept id="p1">](../../../visual-basic/language-reference/statements/property-statement.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Istruzione Property<ept id="p1">](../../../visual-basic/language-reference/statements/property-statement.md)</ept></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Get Statement<ept id="p1">](../../../visual-basic/language-reference/statements/get-statement.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Istruzione Get<ept id="p1">](../../../visual-basic/language-reference/statements/get-statement.md)</ept></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Set Statement<ept id="p1">](../../../visual-basic/language-reference/statements/set-statement.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Istruzione Set<ept id="p1">](../../../visual-basic/language-reference/statements/set-statement.md)</ept></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ReadOnly<ept id="p1">](../../../visual-basic/language-reference/modifiers/readonly.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>ReadOnly<ept id="p1">](../../../visual-basic/language-reference/modifiers/readonly.md)</ept></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>WriteOnly<ept id="p1">](../../../visual-basic/language-reference/modifiers/writeonly.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>WriteOnly<ept id="p1">](../../../visual-basic/language-reference/modifiers/writeonly.md)</ept></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="Methods"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Methods</source>
          <target state="translated"><bpt id="p1">&lt;a name="Methods"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>Metodi</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>method<ept id="p1">*</ept> is an action that an object can perform.</source>
          <target state="translated">Oggetto <bpt id="p1">*</bpt>metodo<ept id="p1">*</ept> che un oggetto può eseguire l'azione.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In Visual Basic, there are two ways to create a method: the <ph id="ph1">`Sub`</ph> statement is used if the method does not return a value; the <ph id="ph2">`Function`</ph> statement is used if a method returns a value.</source>
          <target state="translated">In Visual Basic, è possibile creare un metodo in due modi: se il metodo non restituisce un valore, viene utilizzata l'istruzione <ph id="ph1">`Sub`</ph>, se invece un metodo restituisce un valore, viene utilizzata l'istruzione <ph id="ph2">`Function`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>To define a method of a class:</source>
          <target state="translated">Per definire un metodo di una classe:</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A class can have several implementations, or <bpt id="p1">*</bpt>overloads<ept id="p1">*</ept>, of the same method that differ in the number of parameters or parameter types.</source>
          <target state="translated">Una classe può avere diverse implementazioni, o <bpt id="p1">*</bpt>overload<ept id="p1">*</ept>, dello stesso metodo che differiscono per il numero di parametri o tipi di parametro.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To overload a method:</source>
          <target state="translated">Per essere in rapporto di overload con un metodo:</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In most cases you declare a method within a class definition.</source>
          <target state="translated">Nella maggior parte dei casi si dichiara un metodo all'interno di una definizione della classe.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>However, Visual Basic also supports <bpt id="p1">*</bpt>extension methods<ept id="p1">*</ept> that allow you to add methods to an existing class outside the actual definition of the class.</source>
          <target state="translated">Tuttavia, Visual Basic supporta anche <bpt id="p1">*</bpt>metodi di estensione<ept id="p1">*</ept> che consente di aggiungere metodi a una classe esistente di fuori della definizione effettiva della classe.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For more information, see:</source>
          <target state="translated">Per altre informazioni, vedere:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Function Statement<ept id="p1">](../../../visual-basic/language-reference/statements/function-statement.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Istruzione Function<ept id="p1">](../../../visual-basic/language-reference/statements/function-statement.md)</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Sub Statement<ept id="p1">](../../../visual-basic/language-reference/statements/sub-statement.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Istruzione Sub<ept id="p1">](../../../visual-basic/language-reference/statements/sub-statement.md)</ept></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Overloads<ept id="p1">](../../../visual-basic/language-reference/modifiers/overloads.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Overload<ept id="p1">](../../../visual-basic/language-reference/modifiers/overloads.md)</ept></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Extension Methods<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/extension-methods.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Metodi di estensione<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/extension-methods.md)</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="Constructors"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Constructors</source>
          <target state="translated"><bpt id="p1">&lt;a name="Constructors"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>Costruttori</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Constructors are class methods that are executed automatically when an object of a given type is created.</source>
          <target state="translated">I costruttori sono metodi di classe che vengono eseguiti automaticamente durante la creazione di un oggetto di un tipo specifico.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Constructors usually initialize the data members of the new object.</source>
          <target state="translated">I costruttori in genere inizializzano i membri dati del nuovo oggetto.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A constructor can run only once when a class is created.</source>
          <target state="translated">Un costruttore può essere eseguito solo una volta alla creazione di una classe.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Furthermore, the code in the constructor always runs before any other code in a class.</source>
          <target state="translated">Inoltre, il codice nel costruttore viene sempre eseguito prima di qualsiasi altro codice in una classe.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>However, you can create multiple constructor overloads in the same way as for any other method.</source>
          <target state="translated">Tuttavia, è possibile creare più overload del costruttore esattamente come per qualsiasi altro metodo.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>To define a constructor for a class:</source>
          <target state="translated">Per definire un costruttore per una classe:</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For more information, see: <bpt id="p1">[</bpt>Object Lifetime: How Objects Are Created and Destroyed<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-lifetime-how-objects-are-created-and-destroyed.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere: <bpt id="p1">[</bpt>la durata degli oggetti: come gli oggetti sono creare e distruggere<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-lifetime-how-objects-are-created-and-destroyed.md)</ept>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="Destructors"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Destructors</source>
          <target state="translated"><bpt id="p1">&lt;a name="Destructors"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>Distruttori</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Destructors are used to destruct instances of classes.</source>
          <target state="translated">I distruttori sono utilizzati per distruggere istanze di classi.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In the .NET Framework, the garbage collector automatically manages the allocation and release of memory for the managed objects in your application.</source>
          <target state="translated">In .NET Framework, il Garbage Collector gestisce l'allocazione e il rilascio di memoria per gli oggetti gestiti di un'applicazione.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>However, you may still need destructors to clean up any unmanaged resources that your application creates.</source>
          <target state="translated">Potrebbero, tuttavia, essere necessari distruttori per pulire eventuali risorse non gestite create dall'applicazione.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>There can be only one destructor for a class.</source>
          <target state="translated">Può esistere un solo distruttore per classe.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For more information about destructors and garbage collection in the .NET Framework, see <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](../../../standard/garbagecollection/index.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sui distruttori e garbage collection in .NET Framework, vedere <bpt id="p1">[</bpt>operazione di Garbage Collection<ept id="p1">](../../../standard/garbagecollection/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="Events"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Events</source>
          <target state="translated"><bpt id="p1">&lt;a name="Events"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>Eventi</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Events enable a class or object to notify other classes or objects when something of interest occurs.</source>
          <target state="translated">Tramite gli eventi una classe o un oggetto sono in grado di segnalare ad altre classi o oggetti una situazione di interesse.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The class that sends (or raises) the event is called the <bpt id="p1">*</bpt>publisher<ept id="p1">*</ept> and the classes that receive (or handle) the event are called <bpt id="p2">*</bpt>subscribers<ept id="p2">*</ept>.</source>
          <target state="translated">La classe che invia (o genera) l'evento viene chiamata il <bpt id="p1">*</bpt>publisher<ept id="p1">*</ept> e le classi che ricevono (o gestiscono) l'evento sono chiamate <bpt id="p2">*</bpt>sottoscrittori<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For more information about events, how they are raised and handled, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sugli eventi, come essi vengono generati e gestiti, vedere <bpt id="p1">[</bpt>eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To declare events, use the <bpt id="p1">[</bpt>Event Statement<ept id="p1">](../../../visual-basic/language-reference/statements/event-statement.md)</ept>.</source>
          <target state="translated">Per dichiarare gli eventi, utilizzare il <bpt id="p1">[</bpt>istruzione Event<ept id="p1">](../../../visual-basic/language-reference/statements/event-statement.md)</ept>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>To raise events, use the <bpt id="p1">[</bpt>RaiseEvent Statement<ept id="p1">](../../../visual-basic/language-reference/statements/raiseevent-statement.md)</ept>.</source>
          <target state="translated">Per generare eventi, utilizzare il <bpt id="p1">[</bpt>istruzione RaiseEvent<ept id="p1">](../../../visual-basic/language-reference/statements/raiseevent-statement.md)</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>To specify event handlers using a declarative way, use the <bpt id="p1">[</bpt>WithEvents<ept id="p1">](../../../visual-basic/language-reference/modifiers/withevents.md)</ept> statement and the <bpt id="p2">[</bpt>Handles<ept id="p2">](../../../visual-basic/language-reference/statements/handles-clause.md)</ept> clause.</source>
          <target state="translated">Per specificare i gestori eventi utilizzando una modalità dichiarativa, utilizzare il <bpt id="p1">[</bpt>WithEvents<ept id="p1">](../../../visual-basic/language-reference/modifiers/withevents.md)</ept> istruzione e <bpt id="p2">[</bpt>gestisce<ept id="p2">](../../../visual-basic/language-reference/statements/handles-clause.md)</ept> clausola.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>To be able to dynamically add, remove, and change the event handler associated with an event, use the <bpt id="p1">[</bpt>AddHandler Statement<ept id="p1">](../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept> and <bpt id="p2">[</bpt>RemoveHandler Statement<ept id="p2">](../../../visual-basic/language-reference/statements/removehandler-statement.md)</ept> together with the <bpt id="p3">[</bpt>AddressOf Operator<ept id="p3">](../../../visual-basic/language-reference/operators/addressof-operator.md)</ept>.</source>
          <target state="translated">Per poter aggiungere, rimuovere e modificare il gestore dell'evento associato a un evento, utilizzare il <bpt id="p1">[</bpt>AddHandler (istruzione)<ept id="p1">](../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept> e <bpt id="p2">[</bpt>RemoveHandler (istruzione)<ept id="p2">](../../../visual-basic/language-reference/statements/removehandler-statement.md)</ept> con il <bpt id="p3">[</bpt>AddressOf (operatore)<ept id="p3">](../../../visual-basic/language-reference/operators/addressof-operator.md)</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="NestedClasses"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Nested Classes</source>
          <target state="translated"><bpt id="p1">&lt;a name="NestedClasses"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>Classi annidate</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A class defined within another class is called <bpt id="p1">*</bpt>nested<ept id="p1">*</ept>.</source>
          <target state="translated">Una classe definita all'interno di un'altra classe è denominata <bpt id="p1">*</bpt>nidificate<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>By default, the nested class is private.</source>
          <target state="translated">Per impostazione predefinita, la classe annidata è privata.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To create an instance of the nested class, use the name of the container class followed by the dot and then followed by the name of the nested class:</source>
          <target state="translated">Per creare un'istanza della classe annidata, utilizzare il nome della classe dei contenitori seguita dal punto, quindi dal nome della classe annidata:</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="AccessModifiers"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Access Modifiers and Access Levels</source>
          <target state="translated"><bpt id="p1">&lt;a name="AccessModifiers"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>Modificatori di accesso e livelli di accesso</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>All classes and class members can specify what access level they provide to other classes by using <bpt id="p1">*</bpt>access modifiers<ept id="p1">*</ept>.</source>
          <target state="translated">Tutte le classi e membri di classe possono specificare quale livello di accesso forniscono alle altre classi utilizzando <bpt id="p1">*</bpt>modificatori di accesso<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The following access modifiers are available:</source>
          <target state="translated">Sono disponibili i seguenti modificatori di accesso:</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Visual Basic Modifier</source>
          <target state="translated">Modificatore di Visual Basic</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">Definizione</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Public<ept id="p1">](../../../visual-basic/language-reference/modifiers/public.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Public<ept id="p1">](../../../visual-basic/language-reference/modifiers/public.md)</ept></target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The type or member can be accessed by any other code in the same assembly or another assembly that references it.</source>
          <target state="translated">Il tipo o il membro è accessibile da altro codice nello stesso assembly o in un altro assembly che vi fa riferimento.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Private<ept id="p1">](../../../visual-basic/language-reference/modifiers/private.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Private<ept id="p1">](../../../visual-basic/language-reference/modifiers/private.md)</ept></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The type or member can only be accessed by code in the same class.</source>
          <target state="translated">Il tipo o il membro è accessibile solo dal codice nella stessa classe.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Protected<ept id="p1">](../../../visual-basic/language-reference/modifiers/protected.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Protected<ept id="p1">](../../../visual-basic/language-reference/modifiers/protected.md)</ept></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The type or member can only be accessed by code in the same class or in a derived class.</source>
          <target state="translated">Il tipo o il membro è accessibile solo dal codice nella stessa classe o in una classe derivata.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Friend<ept id="p1">](../../../visual-basic/language-reference/modifiers/friend.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Friend<ept id="p1">](../../../visual-basic/language-reference/modifiers/friend.md)</ept></target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The type or member can be accessed by any code in the same assembly, but not from another assembly.</source>
          <target state="translated">Il tipo o il membro è accessibile dal codice nello stesso assembly ma non da un altro assembly.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The type or member can be accessed by any code in the same assembly, or by any derived class in another assembly.</source>
          <target state="translated">Il tipo o il membro è accessibile dal codice nello stesso assembly o da una classe derivata in un altro assembly.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Access Levels in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>livelli di accesso in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="InstantiatingClasses"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Instantiating Classes</source>
          <target state="translated"><bpt id="p1">&lt;a name="InstantiatingClasses"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>Creazione di classi</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>To create an object, you need to instantiate a class, or create a class instance.</source>
          <target state="translated">Per creare un oggetto, è necessario creare un'istanza di una classe.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>After instantiating a class, you can assign values to the instance's properties and fields and invoke class methods.</source>
          <target state="translated">Dopo avere creato un'istanza di una classe, è possibile assegnare i valori alle proprietà e ai campi dell'istanza e richiamare i metodi della classe.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>To assign values to properties during the class instantiation process, use object initializers:</source>
          <target state="translated">Per assegnare i valori alle proprietà durante il processo di creazione dell'istanza della classe, utilizzare gli inizializzatori di oggetto:</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>For more information, see:</source>
          <target state="translated">Per altre informazioni, vedere:</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>New Operator<ept id="p1">](../../../visual-basic/language-reference/operators/new-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operatore New<ept id="p1">](../../../visual-basic/language-reference/operators/new-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Object Initializers: Named and Anonymous Types<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-initializers-named-and-anonymous-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Inizializzatori di oggetto: tipi denominati e tipi anonimi<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-initializers-named-and-anonymous-types.md)</ept></target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="Static"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Shared Classes and Members</source>
          <target state="translated"><bpt id="p1">&lt;a name="Static"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>Le classi condivise e i membri</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A shared member of the class is a property, procedure, or field that is shared by all instances of a class.</source>
          <target state="translated">Un membro condiviso della classe è una proprietà, procedura o campo condiviso da tutte le istanze di una classe.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>To define a shared member:</source>
          <target state="translated">Per definire un membro condiviso:</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>To access the shared member, use the name of the class without creating an object of this class:</source>
          <target state="translated">Per accedere al membro condiviso, utilizzare il nome della classe senza creare un oggetto di questa classe:</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Shared modules in Visual Basic have shared members only and cannot be instantiated.</source>
          <target state="translated">Moduli condivisi in Visual Basic condiviso solo membri e non possono essere creata un'istanza.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Shared members also cannot access non-shared properties, fields or methods</source>
          <target state="translated">Membri condivisi non possono accedere inoltre non condivisi di proprietà, campi o metodi</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>For more information, see:</source>
          <target state="translated">Per altre informazioni, vedere:</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Shared<ept id="p1">](../../../visual-basic/language-reference/modifiers/shared.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Shared<ept id="p1">](../../../visual-basic/language-reference/modifiers/shared.md)</ept></target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Module Statement<ept id="p1">](../../../visual-basic/language-reference/statements/module-statement.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Istruzione Module<ept id="p1">](../../../visual-basic/language-reference/statements/module-statement.md)</ept></target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="AnonymousTypes"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Anonymous Types</source>
          <target state="translated"><bpt id="p1">&lt;a name="AnonymousTypes"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>Tipi anonimi</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Anonymous types enable you to create objects without writing a class definition for the data type.</source>
          <target state="translated">I tipi anonimi consentono di creare oggetti senza scrivere una definizione della classe per il tipo di dati.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Instead, the compiler generates a class for you.</source>
          <target state="translated">La classe viene generata direttamente dal compilatore.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The class has no usable name and contains the properties you specify in declaring the object.</source>
          <target state="translated">La classe non ha un nome utilizzabile e contiene le proprietà specificate nella dichiarazione dell'oggetto.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>To create an instance of an anonymous type:</source>
          <target state="translated">Per creare un'istanza di un tipo anonimo:</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>For more information, see: <bpt id="p1">[</bpt>Anonymous Types<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere: <bpt id="p1">[</bpt>tipi anonimi<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="Inheritance"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Inheritance</source>
          <target state="translated"><bpt id="p1">&lt;a name="Inheritance"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>Ereditarietà</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Inheritance enables you to create a new class that reuses, extends, and modifies the behavior that is defined in another class.</source>
          <target state="translated">L'ereditarietà permette di creare una nuova classe che riutilizza, estende e modifica il comportamento definito in un'altra classe.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The class whose members are inherited is called the <bpt id="p1">*</bpt>base class<ept id="p1">*</ept>, and the class that inherits those members is called the <bpt id="p2">*</bpt>derived class<ept id="p2">*</ept>.</source>
          <target state="translated">La classe i cui membri vengono ereditati è denominata la <bpt id="p1">*</bpt>classe di base<ept id="p1">*</ept>, mentre la classe che eredita tali membri è denominata la <bpt id="p2">*</bpt>derivata<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>However, all classes in Visual Basic implicitly inherit from the &lt;xref:System.Object&gt; class that supports .NET class hierarchy and provides low-level services to all classes.</source>
          <target state="translated">Tuttavia, tutte le classi in Visual Basic ereditano in modo implicito dalla &lt;xref:System.Object&gt;classe che supporta la gerarchia di classi .NET e fornisce servizi di basso livello per tutte le classi.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Visual Basic doesn't support multiple inheritance.</source>
          <target state="translated">Visual Basic non supporta l'ereditarietà multipla.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>That is, you can specify only one base class for a derived class.</source>
          <target state="translated">Vale a dire, è possibile specificare solo una classe base per una classe derivata.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>To inherit from a base class:</source>
          <target state="translated">Per ereditare da una classe base:</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>By default all classes can be inherited.</source>
          <target state="translated">Per impostazione predefinita, tutte le classi possono essere ereditate.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>However, you can specify whether a class must not be used as a base class, or create a class that can be used as a base class only.</source>
          <target state="translated">Tuttavia, è possibile specificare se una classe non deve essere utilizzata come classe base oppure creare una classe utilizzabile solo come classe base.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>To specify that a class cannot be used as a base class:</source>
          <target state="translated">Per specificare che una classe non può essere utilizzata come classe base:</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>To specify that a class can be used as a base class only and cannot be instantiated:</source>
          <target state="translated">Per specificare che una classe può essere utilizzata solo come classe base e che non è possibile crearne un'istanza:</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>For more information, see:</source>
          <target state="translated">Per altre informazioni, vedere:</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Inherits Statement<ept id="p1">](../../../visual-basic/language-reference/statements/inherits-statement.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Istruzione Inherits<ept id="p1">](../../../visual-basic/language-reference/statements/inherits-statement.md)</ept></target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>NotInheritable<ept id="p1">](../../../visual-basic/language-reference/modifiers/notinheritable.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>NotInheritable<ept id="p1">](../../../visual-basic/language-reference/modifiers/notinheritable.md)</ept></target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>MustInherit<ept id="p1">](../../../visual-basic/language-reference/modifiers/mustinherit.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>MustInherit<ept id="p1">](../../../visual-basic/language-reference/modifiers/mustinherit.md)</ept></target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="Overriding"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Overriding Members</source>
          <target state="translated"><bpt id="p1">&lt;a name="Overriding"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>Override di membri</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>By default, a derived class inherits all members from its base class.</source>
          <target state="translated">Per impostazione predefinita, in una classe derivata vengono ereditati tutti i membri della classe base relativa.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>If you want to change the behavior of the inherited member, you need to override it.</source>
          <target state="translated">Se si desidera modificare il comportamento del membro ereditato, è necessario eseguirne l'override.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>That is, you can define a new implementation of the method, property or event in the derived class.</source>
          <target state="translated">È possibile definire una nuova implementazione del metodo, della proprietà o dell'evento nella classe derivata.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The following modifiers are used to control how properties and methods are overridden:</source>
          <target state="translated">I seguenti modificatori consentono di controllare le modalità di override di proprietà e metodi:</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Visual Basic Modifier</source>
          <target state="translated">Modificatore di Visual Basic</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">Definizione</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Overridable<ept id="p1">](../../../visual-basic/language-reference/modifiers/overridable.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Overridable<ept id="p1">](../../../visual-basic/language-reference/modifiers/overridable.md)</ept></target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Allows a class member to be overridden in a derived class.</source>
          <target state="translated">Consente a un membro della classe di essere sottoposto a override in una classe derivata.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Overrides<ept id="p1">](../../../visual-basic/language-reference/modifiers/overrides.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Overrides<ept id="p1">](../../../visual-basic/language-reference/modifiers/overrides.md)</ept></target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Overrides a virtual (overridable) member defined in the base class.</source>
          <target state="translated">Esegue l'override di un membro virtuale (sottoponibile a override) definito nella classe base.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>NotOverridable<ept id="p1">](../../../visual-basic/language-reference/modifiers/notoverridable.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>NotOverridable<ept id="p1">](../../../visual-basic/language-reference/modifiers/notoverridable.md)</ept></target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Prevents a member from being overridden in an inheriting class.</source>
          <target state="translated">Consente di impedire l'override di un membro in una classe che eredita.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>MustOverride<ept id="p1">](../../../visual-basic/language-reference/modifiers/mustoverride.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>MustOverride<ept id="p1">](../../../visual-basic/language-reference/modifiers/mustoverride.md)</ept></target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Requires that a class member to be overridden in the derived class.</source>
          <target state="translated">Richiede che un membro della classe venga sottoposto a override nella classe derivata.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Shadows<ept id="p1">](../../../visual-basic/language-reference/modifiers/shadows.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Shadows<ept id="p1">](../../../visual-basic/language-reference/modifiers/shadows.md)</ept></target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Hides a member inherited from a base class</source>
          <target state="translated">Nasconde un membro ereditato da una classe base.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="Interfaces"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Interfaces</source>
          <target state="translated"><bpt id="p1">&lt;a name="Interfaces"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>Interfacce</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Interfaces, like classes, define a set of properties, methods, and events.</source>
          <target state="translated">Le interfacce, come le classi, consentono di definire un insieme di proprietà, metodi ed eventi.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>But unlike classes, interfaces do not provide implementation.</source>
          <target state="translated">A differenza delle classi, però, le interfacce non forniscono l'implementazione.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>They are implemented by classes, and defined as separate entities from classes.</source>
          <target state="translated">Esse sono infatti implementate dalle classi e definite come entità distinte da queste.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>An interface represents a contract, in that a class that implements an interface must implement every aspect of that interface exactly as it is defined.</source>
          <target state="translated">Un'interfaccia rappresenta un contratto, in quanto è necessario che una classe che implementa un'interfaccia implementi ogni aspetto esattamente come è stato definito.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>To define an interface:</source>
          <target state="translated">Per definire un'interfaccia:</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>To implement an interface in a class:</source>
          <target state="translated">Per implementare un'interfaccia in una classe:</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>For more information, see:</source>
          <target state="translated">Per altre informazioni, vedere:</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Interfaces<ept id="p1">](../../../visual-basic/programming-guide/language-features/interfaces/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Interfacce<ept id="p1">](../../../visual-basic/programming-guide/language-features/interfaces/index.md)</ept></target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Interface Statement<ept id="p1">](../../../visual-basic/language-reference/statements/interface-statement.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Istruzione Interface<ept id="p1">](../../../visual-basic/language-reference/statements/interface-statement.md)</ept></target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Implements Statement<ept id="p1">](../../../visual-basic/language-reference/statements/implements-statement.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Istruzione Implements<ept id="p1">](../../../visual-basic/language-reference/statements/implements-statement.md)</ept></target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="Generics"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Generics</source>
          <target state="translated"><bpt id="p1">&lt;a name="Generics"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>Generics</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Classes, structures, interfaces and methods in the .NET Framework can include <bpt id="p1">*</bpt>type parameters<ept id="p1">*</ept> that define types of objects that they can store or use.</source>
          <target state="translated">Classi, strutture, interfacce e metodi in .NET Framework possono includere <bpt id="p1">*</bpt>parametri di tipo<ept id="p1">*</ept> che definiscono i tipi di oggetti che possono archiviare o utilizzare.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The most common example of generics is a collection, where you can specify the type of objects to be stored in a collection.</source>
          <target state="translated">L'esempio più comune di generics è una raccolta, dove è possibile specificare il tipo di oggetti da archiviare in una raccolta.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>To define a generic class:</source>
          <target state="translated">Per definire una classe generica:</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>To create an instance of a generic class:</source>
          <target state="translated">Per creare un'istanza di una classe generica:</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>For more information, see:</source>
          <target state="translated">Per altre informazioni, vedere:</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generics<ept id="p1">](https://msdn.microsoft.com/library/ms172192)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Generics<ept id="p1">](https://msdn.microsoft.com/library/ms172192)</ept></target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generic Types in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Tipi generici in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept></target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="Delegates"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Delegates</source>
          <target state="translated"><bpt id="p1">&lt;a name="Delegates"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>Delegati</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>delegate<ept id="p1">*</ept> is a type that defines a method signature, and can provide a reference to any method with a compatible signature.</source>
          <target state="translated">Oggetto <bpt id="p1">*</bpt>delegare<ept id="p1">*</ept> è un tipo che definisce una firma di metodo e può fornire un riferimento a qualsiasi metodo con una firma compatibile.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>You can invoke (or call) the method through the delegate.</source>
          <target state="translated">Tramite il delegato è possibile invocare (o chiamare) il metodo.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Delegates are used to pass methods as arguments to other methods.</source>
          <target state="translated">I delegati vengono utilizzati per passare metodi come argomenti ad altri metodi.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Event handlers are nothing more than methods that are invoked through delegates.</source>
          <target state="translated">I gestori di evento non sono altro che metodi richiamati tramite delegati.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>For more information about using delegates in event handling, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
          <target state="translated">Per ulteriori informazioni sull'utilizzo dei delegati nella gestione degli eventi, vedere <bpt id="p1">[</bpt>eventi<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>To create a delegate:</source>
          <target state="translated">Per creare un delegato:</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>To create a reference to a method that matches the signature specified by the delegate:</source>
          <target state="translated">Per creare un riferimento a un metodo che corrisponde alla firma specificata dal delegato:</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>For more information, see:</source>
          <target state="translated">Per altre informazioni, vedere:</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Delegates<ept id="p1">](../../../visual-basic/programming-guide/language-features/delegates/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Delegati<ept id="p1">](../../../visual-basic/programming-guide/language-features/delegates/index.md)</ept></target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Delegate Statement<ept id="p1">](../../../visual-basic/language-reference/statements/delegate-statement.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Istruzione Delegate<ept id="p1">](../../../visual-basic/language-reference/statements/delegate-statement.md)</ept></target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>AddressOf Operator<ept id="p1">](../../../visual-basic/language-reference/operators/addressof-operator.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operatore AddressOf<ept id="p1">](../../../visual-basic/language-reference/operators/addressof-operator.md)</ept></target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vedere anche</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Visual Basic Programming Guide<ept id="p1">](../../../visual-basic/programming-guide/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guida per programmatori Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/index.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>