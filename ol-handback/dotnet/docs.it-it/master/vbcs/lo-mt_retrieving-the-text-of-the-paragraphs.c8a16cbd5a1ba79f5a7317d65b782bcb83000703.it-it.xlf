<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">147c8e60e44fd71869df84cbee9836213d96c0fd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\retrieving-the-text-of-the-paragraphs.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0966c2fb29e225577d08b841064ab26d5fc12d6e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ba3ac8b410ad6c84a52a2248e702ed44edc5bcc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Retrieving the Text of the Paragraphs (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Recupero del testo dei paragrafi (Visual Basic) | Documenti di Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Retrieving the Text of the Paragraphs (Visual Basic)</source>
          <target state="translated">Recupero del testo dei paragrafi (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This example builds on the previous example, <bpt id="p1">[</bpt>Retrieving the Paragraphs and Their Styles (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/retrieving-the-paragraphs-and-their-styles.md)</ept>.</source>
          <target state="translated">Questo esempio si basa sull'esempio precedente, <bpt id="p1">[</bpt>recupero i paragrafi e dei relativi stili (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/retrieving-the-paragraphs-and-their-styles.md)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This new example retrieves the text of each paragraph as a string.</source>
          <target state="translated">Questo nuovo esempio consente di recuperare il testo di ciascun paragrafo sotto forma di stringa.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To retrieve the text, this example adds an additional query that iterates through the collection of anonymous types and projects a new collection of an anonymous type with the addition of a new member, <ph id="ph1">`Text`</ph>.</source>
          <target state="translated">Per recuperare il testo, nell'esempio viene aggiunta un'ulteriore query che scorre la raccolta di tipi anonimi e proietta una nuova raccolta di un tipo anonimo con l'aggiunta di un nuovo membro <ph id="ph1">`Text`</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It uses the &lt;xref:System.Linq.Enumerable.Aggregate%2A&gt; standard query operator to concatenate multiple strings into one string.</source>
          <target state="translated">Usa il &lt;xref:System.Linq.Enumerable.Aggregate%2A&gt;operatore di query standard per concatenare più stringhe in un'unica stringa.&lt;/xref:System.Linq.Enumerable.Aggregate%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This technique (that is, first projecting to a collection of an anonymous type, then using this collection to project to a new collection of an anonymous type) is a common and useful idiom.</source>
          <target state="translated">Questa tecnica, che prevede dapprima la proiezione di una raccolta di un tipo anonimo e quindi l'uso di questa raccolta per la proiezione in una nuova raccolta di un tipo anonimo, costituisce un idioma comune e utile.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This query could have been written without projecting to the first anonymous type.</source>
          <target state="translated">Sarebbe stato possibile scrivere la query senza la proiezione nel primo tipo anonimo,</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>However, because of lazy evaluation, doing so does not use much additional processing power.</source>
          <target state="translated">tuttavia, a causa della valutazione lazy, tale tecnica non è più onerosa in termini di potenza di elaborazione.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The idiom creates more short lived objects on the heap, but this does not substantially degrade performance.</source>
          <target state="translated">L'idioma crea più oggetti temporanei sull'heap, ma senza influire sostanzialmente sulle prestazioni.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Of course, it would be possible to write a single query that contains the functionality to retrieve the paragraphs, the style of each paragraph, and the text of each paragraph.</source>
          <target state="translated">Sarebbe naturalmente possibile scrivere una singola query che contiene la funzionalità per recuperare i paragrafi, nonché lo stile e il testo di ogni paragrafo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, it often is useful to break up a more complicated query into multiple queries because the resulting code is more modular and easier to maintain.</source>
          <target state="translated">Tuttavia, è spesso utile suddividere una query più complessa in più query perché il codice risultante è più modulare e più facilmente gestibile.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Furthermore, if you need to reuse a portion of the query, it is easier to refactor if the queries are written in this manner.</source>
          <target state="translated">Se inoltre è necessario riutilizzare parte della query, risulta più agevole effettuare il refactoring se le query sono scritte in questo modo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>These queries, which are chained together, use the processing model that is examined in detail in the topic <bpt id="p1">[</bpt>Tutorial: Deferred Execution (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/tutorial-deferred-execution.md)</ept>.</source>
          <target state="translated">Queste query, che vengono concatenate, utilizzano il modello di elaborazione esaminato in dettaglio nell'argomento <bpt id="p1">[</bpt>esercitazione: esecuzione posticipata (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/tutorial-deferred-execution.md)</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Esempio</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This example processes a WordprocessingML document, determining the element node, the style name, and the text of each paragraph.</source>
          <target state="translated">In questo esempio viene elaborato un documento WordprocessingML, determinando il nodo dell'elemento, il nome dello stile e il testo di ciascun paragrafo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This example builds on the previous examples in this tutorial.</source>
          <target state="translated">Questo esempio si basa su esempi precedenti di questa esercitazione.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The new query is called out in comments in the code below.</source>
          <target state="translated">La nuova query è indicata nei commenti del codice riportato di seguito.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For instructions for creating the source document for this example, see <bpt id="p1">[</bpt>Creating the Source Office Open XML Document (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/creating-the-source-office-open-xml-document.md)</ept>.</source>
          <target state="translated">Per istruzioni sulla creazione del documento di origine per questo esempio, vedere <bpt id="p1">[</bpt>la creazione di origine documento Office Open XML (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/creating-the-source-office-open-xml-document.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This example uses classes from the WindowsBase assembly.</source>
          <target state="translated">In questo esempio vengono usate classi dell'assembly WindowsBase</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It uses types in the &lt;xref:System.IO.Packaging?displayProperty=fullName&gt; namespace.</source>
          <target state="translated">Utilizza i tipi di &lt;xref:System.IO.Packaging?displayProperty=fullName&gt;dello spazio dei nomi.&lt;/xref:System.IO.Packaging?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This example produces the following output when applied to the document described in <bpt id="p1">[</bpt>Creating the Source Office Open XML Document (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/creating-the-source-office-open-xml-document.md)</ept>.</source>
          <target state="translated">In questo esempio produce il seguente output quando viene applicato al documento descritto <bpt id="p1">[</bpt>la creazione di origine documento Office Open XML (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/creating-the-source-office-open-xml-document.md)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="translated">Passaggi successivi</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The next example shows how to use an extension method, instead of &lt;xref:System.Linq.Enumerable.Aggregate%2A&gt;, to concatenate multiple strings into a single string.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare un metodo di estensione, anziché &lt;xref:System.Linq.Enumerable.Aggregate%2A&gt;, per concatenare più stringhe in un'unica stringa.&lt;/xref:System.Linq.Enumerable.Aggregate%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Refactoring Using an Extension Method (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/refactoring-using-an-extension-method.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Refactoring tramite un metodo di estensione (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/refactoring-using-an-extension-method.md)</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vedere anche</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Tutorial: Manipulating Content in a WordprocessingML Document (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/tutorial-manipulating-content-in-a-wordprocessingml-document.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Esercitazione: Manipolazione di contenuto in un documento WordprocessingML (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/tutorial-manipulating-content-in-a-wordprocessingml-document.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Deferred Execution and Lazy Evaluation in LINQ to XML (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/deferred-execution-and-lazy-evaluation-in-linq-to-xml.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Esecuzione posticipata e valutazione differita in LINQ to XML (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/deferred-execution-and-lazy-evaluation-in-linq-to-xml.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>