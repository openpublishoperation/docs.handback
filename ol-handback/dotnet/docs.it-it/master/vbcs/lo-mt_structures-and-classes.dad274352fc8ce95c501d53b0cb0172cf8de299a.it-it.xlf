<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7402ec0fcfc279470d39a4919d3b5ec8b5d9dff</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\data-types\structures-and-classes.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad3aeb05a6eb801d11a7118faa7babd02bf82958</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e791bc1570715fed0060c8c58d5509ff02983807</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Structures and Classes (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Strutture e classi (Visual Basic) | Documenti di Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Structures and Classes (Visual Basic)</source>
          <target state="translated">Strutture e classi (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> unifies the syntax for structures and classes, with the result that both entities support most of the same features.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>Unisce la sintassi per le strutture e classi, con il risultato che entrambe le entità supportano la maggior parte delle stesse funzionalità.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>However, there are also important differences between structures and classes.</source>
          <target state="translated">Tuttavia, esistono anche differenze importanti tra strutture e classi.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Classes have the advantage of being reference types — passing a reference is more efficient than passing a structure variable with all its data.</source>
          <target state="translated">Presentano il vantaggio di essere tipi di riferimento, passando un riferimento è più efficiente passare una variabile di struttura con tutti i relativi dati.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>On the other hand, structures do not require allocation of memory on the global heap.</source>
          <target state="translated">D'altra parte, le strutture non richiedono l'allocazione di memoria nell'heap globale.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Because you cannot inherit from a structure, structures should be used only for objects that do not need to be extended.</source>
          <target state="translated">Poiché non è possibile ereditare da una struttura, utilizzare strutture solo per gli oggetti che non è necessario essere esteso.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use structures when the object you wish to create has a small instance size, and take into account the performance characteristics of classes versus structures.</source>
          <target state="translated">Utilizzare le strutture quando l'oggetto che si desidera creare ha una dimensione di un'istanza ridotta e prendere in considerazione le caratteristiche delle classi e strutture di prestazioni.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Similarities</source>
          <target state="translated">Analogie</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Structures and classes are similar in the following respects:</source>
          <target state="translated">Classi e strutture sono simili per i seguenti aspetti:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Both are <bpt id="p1">*</bpt>container<ept id="p1">*</ept> types, meaning that they contain other types as members.</source>
          <target state="translated">Entrambi sono <bpt id="p1">*</bpt>contenitore<ept id="p1">*</ept> tipi, vale a dire che contengono altri tipi come membri.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Both have members, which can include constructors, methods, properties, fields, constants, enumerations, events, and event handlers.</source>
          <target state="translated">Entrambi sono membri, che possono includere costruttori, metodi, proprietà, campi, costanti, enumerazioni, eventi e gestori di eventi.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>However, do not confuse these members with the declared <bpt id="p1">*</bpt>elements<ept id="p1">*</ept> of a structure.</source>
          <target state="translated">Tuttavia, non confondere questi membri con il dichiarato <bpt id="p1">*</bpt>elementi<ept id="p1">*</ept> di una struttura.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Members of both can have individualized access levels.</source>
          <target state="translated">I membri di entrambe possono avere livelli di accesso personalizzati.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, one member can be declared <ph id="ph1">`Public`</ph> and another <ph id="ph2">`Private`</ph>.</source>
          <target state="translated">Ad esempio, è possibile dichiarare un membro <ph id="ph1">`Public`</ph> e un altro <ph id="ph2">`Private`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Both can implement interfaces.</source>
          <target state="translated">Entrambi possono implementare interfacce.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Both can have shared constructors, with or without parameters.</source>
          <target state="translated">Entrambe possono avere condivisi costruttori, con o senza parametri.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Both can expose a <bpt id="p1">*</bpt>default property<ept id="p1">*</ept>, provided that property takes at least one parameter.</source>
          <target state="translated">Entrambe possono esporre un <bpt id="p1">*</bpt>predefiniti delle proprietà<ept id="p1">*</ept>, a condizione che accetti almeno un parametro.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Both can declare and raise events, and both can declare delegates.</source>
          <target state="translated">Entrambe possono dichiarare e generare eventi e sia possibile dichiarare i delegati.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Differences</source>
          <target state="translated">Differenze</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Structures and classes differ in the following particulars:</source>
          <target state="translated">Classi e strutture sono diversi per le seguenti indicazioni:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Structures are <bpt id="p1">*</bpt>value types<ept id="p1">*</ept>; classes are <bpt id="p2">*</bpt>reference types<ept id="p2">*</ept>.</source>
          <target state="translated">Le strutture sono <bpt id="p1">*</bpt>i tipi di valore<ept id="p1">*</ept>; le classi sono <bpt id="p2">*</bpt>tipi di riferimento<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A variable of a structure type contains the structure's data, rather than containing a reference to the data as a class type does.</source>
          <target state="translated">Una variabile di un tipo di struttura contiene i dati della struttura, anziché contenente un riferimento a dati come un tipo di classe.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Structures use stack allocation; classes use heap allocation.</source>
          <target state="translated">Strutture di utilizzano l'allocazione dello stack; le classi utilizzano l'allocazione di heap.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>All structure elements are <ph id="ph1">`Public`</ph> by default; class variables and constants are <ph id="ph2">`Private`</ph> by default, while other class members are <ph id="ph3">`Public`</ph> by default.</source>
          <target state="translated">Tutti gli elementi di struttura sono <ph id="ph1">`Public`</ph> per impostazione predefinita; classe variabili e costanti sono <ph id="ph2">`Private`</ph> per impostazione predefinita, mentre altri membri della classe sono <ph id="ph3">`Public`</ph> per impostazione predefinita.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This behavior for class members provides compatibility with the Visual Basic 6.0 system of defaults.</source>
          <target state="translated">Questo comportamento per i membri di classe fornisce la compatibilità con il sistema di Visual Basic 6.0 di valori predefiniti.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A structure must have at least one nonshared variable or nonshared, noncustom event element; a class can be completely empty.</source>
          <target state="translated">Una struttura deve contenere almeno uno non personalizzato non condiviso di variabile o condiviso, elemento di un evento; una classe può essere completamente vuota.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Structure elements cannot be declared as <ph id="ph1">`Protected`</ph>; class members can.</source>
          <target state="translated">Elementi di struttura non possono essere dichiarati come <ph id="ph1">`Protected`</ph>; i membri di classe possono.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A structure procedure can handle events only if it is a <bpt id="p1">[</bpt>Shared<ept id="p1">](../../../../visual-basic/language-reference/modifiers/shared.md)</ept><ph id="ph1">`Sub`</ph> procedure, and only by means of the <bpt id="p2">[</bpt>AddHandler Statement<ept id="p2">](../../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept>; any class procedure can handle events, using either the <bpt id="p3">[</bpt>Handles<ept id="p3">](../../../../visual-basic/language-reference/statements/handles-clause.md)</ept> keyword or the <ph id="ph2">`AddHandler`</ph> statement.</source>
          <target state="translated">Una routine di struttura può gestire eventi solo se è un <bpt id="p1">[</bpt>Shared<ept id="p1">](../../../../visual-basic/language-reference/modifiers/shared.md)</ept> <ph id="ph1">`Sub`</ph> procedura e solo per mezzo di <bpt id="p2">[</bpt>AddHandler (istruzione)<ept id="p2">](../../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept>; qualsiasi routine di classe può gestire gli eventi utilizzando il <bpt id="p3">[</bpt>gestisce<ept id="p3">](../../../../visual-basic/language-reference/statements/handles-clause.md)</ept> (parola chiave) o <ph id="ph2">`AddHandler`</ph> istruzione.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](../../../../visual-basic/programming-guide/language-features/events/index.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>eventi<ept id="p1">](../../../../visual-basic/programming-guide/language-features/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Structure variable declarations cannot specify initializers or initial sizes for arrays; class variable declarations can.</source>
          <target state="translated">Dichiarazioni di variabili di struttura non possono specificare inizializzatori o dimensioni iniziali per le matrici. dichiarazioni di variabili di classe possono.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Structures implicitly inherit from the &lt;xref:System.ValueType?displayProperty=fullName&gt; class and cannot inherit from any other type; classes can inherit from any class or classes other than &lt;xref:System.ValueType?displayProperty=fullName&gt;.</source>
          <target state="translated">Le strutture ereditano in modo implicito dalla &lt;xref:System.ValueType?displayProperty=fullName&gt;classe e non può ereditare da qualsiasi altro tipo; le classi possono ereditare da qualsiasi classe o una classe diversa da &lt;xref:System.ValueType?displayProperty=fullName&gt;.&lt;/xref:System.ValueType?displayProperty=fullName&gt; &lt;/xref:System.ValueType?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Structures are not inheritable; classes are.</source>
          <target state="translated">Strutture non sono ereditabili; le classi sono.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Structures are never terminated, so the common language runtime (CLR) never calls the &lt;xref:System.Object.Finalize%2A&gt; method on any structure; classes are terminated by the garbage collector (GC), which calls &lt;xref:System.Object.Finalize%2A&gt; on a class when it detects there are no active references remaining.</source>
          <target state="translated">Le strutture non vengono mai terminate, common language runtime (CLR) non chiama mai il &lt;xref:System.Object.Finalize%2A&gt;metodo in una struttura; le classi vengono terminate dal garbage collector (GC), che chiama &lt;xref:System.Object.Finalize%2A&gt;su una classe quando rilevato che non sono presenti riferimenti attivi.&lt;/xref:System.Object.Finalize%2A&gt; &lt;/xref:System.Object.Finalize%2A&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A structure does not require a constructor; a class does.</source>
          <target state="translated">Una struttura non richiede un costruttore. esegue una classe.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Structures can have nonshared constructors only if they take parameters; classes can have them with or without parameters.</source>
          <target state="translated">Strutture possono disporre di costruttori non condivisi solo se hanno parametri. le classi possono avere li con o senza parametri.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Every structure has an implicit public constructor without parameters.</source>
          <target state="translated">Ogni struttura dispone di un costruttore pubblico senza parametri.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This constructor initializes all the structure's data elements to their default values.</source>
          <target state="translated">Questo costruttore inizializza gli elementi di dati della struttura sui valori predefiniti.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You cannot redefine this behavior.</source>
          <target state="translated">È possibile ridefinire il problema.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Instances and Variables</source>
          <target state="translated">Istanze e variabili</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Because structures are value types, each structure variable is permanently bound to an individual structure instance.</source>
          <target state="translated">Poiché le strutture sono tipi di valore, ogni variabile di struttura in modo permanente è associato a un'istanza di struttura individuale.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>But classes are reference types, and an object variable can refer to various class instances at different times.</source>
          <target state="translated">Tuttavia, le classi sono tipi di riferimento e una variabile oggetto può fare riferimento a diverse istanze di classi in momenti diversi.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This distinction affects your usage of structures and classes in the following ways:</source>
          <target state="translated">Questa differenza influisce sull'utilizzo di strutture e classi nei modi seguenti:</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Initialization.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Inizializzazione.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A structure variable implicitly includes an initialization of the elements using the structure's parameterless constructor.</source>
          <target state="translated">Una variabile di struttura include implicitamente un'inizializzazione degli elementi utilizzando il costruttore della struttura senza parametri.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Therefore, <ph id="ph1">`Dim s As struct1`</ph> is equivalent to <ph id="ph2">`Dim s As struct1 = New struct1()`</ph>.</source>
          <target state="translated">Di conseguenza, <ph id="ph1">`Dim s As struct1`</ph> equivale a <ph id="ph2">`Dim s As struct1 = New struct1()`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Assigning Variables.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Assegnazione di variabili.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When you assign one structure variable to another, or pass a structure instance to a procedure argument, the current values of all the variable elements are copied to the new structure.</source>
          <target state="translated">Quando si assegna una variabile di struttura a un altro, o passa un'istanza della struttura a un argomento di routine, i valori correnti di tutti gli elementi variabile vengono copiati nella nuova struttura.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When you assign one object variable to another, or pass an object variable to a procedure, only the reference pointer is copied.</source>
          <target state="translated">Quando si assegna una variabile oggetto a un altro o si passa una variabile oggetto a una routine, viene copiato solo il puntatore di riferimento.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Assigning Nothing.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Assegnare il valore Nothing.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You can assign the value <bpt id="p1">[</bpt>Nothing<ept id="p1">](../../../../visual-basic/language-reference/nothing.md)</ept> to a structure variable, but the instance continues to be associated with the variable.</source>
          <target state="translated">È possibile assegnare il valore <bpt id="p1">[</bpt>nulla<ept id="p1">](../../../../visual-basic/language-reference/nothing.md)</ept> a una struttura variabile, ma l'istanza continua a essere associato alla variabile.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can still call its methods and access its data elements, although variable elements are reinitialized by the assignment.</source>
          <target state="translated">È comunque possibile chiamarne i metodi e accedere ai relativi elementi di dati, anche se gli elementi variabile vengano reinizializzati dall'assegnazione.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In contrast, if you set an object variable to <ph id="ph1">`Nothing`</ph>, you dissociate it from any class instance, and you cannot access any members through the variable until you assign another instance to it.</source>
          <target state="translated">Al contrario, se si imposta una variabile oggetto su <ph id="ph1">`Nothing`</ph>, si dissocia tale variabile da qualsiasi istanza della classe e non può accedere ad alcun membro tramite la variabile finché non verrà assegnato un'altra istanza.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Multiple Instances.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Più istanze.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An object variable can have different class instances assigned to it at different times, and several object variables can refer to the same class instance at the same time.</source>
          <target state="translated">Una variabile oggetto può disporre di istanze di classe diversi in momenti diversi, e diverse variabili di oggetto possono fare riferimento alla stessa istanza di classe nello stesso momento.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Changes you make to the values of class members affect those members when accessed through another variable pointing to the same instance.</source>
          <target state="translated">Le modifiche apportate ai valori dei membri della classe influiscono su tali membri quando si accede tramite un'altra variabile che punta alla stessa istanza.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Structure elements, however, are isolated within their own instance.</source>
          <target state="translated">Elementi della struttura, tuttavia, sono isolati all'interno della relativa istanza.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Changes to their values are not reflected in any other structure variables, even in other instances of the same <ph id="ph1">`Structure`</ph> declaration.</source>
          <target state="translated">In base ai valori non vengono riflesse in altre variabili di struttura, anche in altre istanze dello stesso <ph id="ph1">`Structure`</ph> dichiarazione.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Equality.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Uguaglianza.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Equality testing of two structures must be performed with an element-by-element test.</source>
          <target state="translated">Test di uguaglianza di due strutture deve essere eseguito con un elemento per elemento test.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Two object variables can be compared using the &lt;xref:System.Object.Equals%2A&gt; method.</source>
          <target state="translated">Due variabili di oggetto possono essere confrontate utilizzando il &lt;xref:System.Object.Equals%2A&gt;(metodo).&lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Object.Equals%2A&gt; indicates whether the two variables point to the same instance.</source>
          <target state="translated">&lt;xref:System.Object.Equals%2A&gt;indica se le due variabili puntano alla stessa istanza.&lt;/xref:System.Object.Equals%2A&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vedere anche</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Tipi di dati<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Composite Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/composite-data-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Tipi di dati compositi<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/composite-data-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Value Types and Reference Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Tipi di valore e tipi di riferimento<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Structures<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/structures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Strutture<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/structures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Troubleshooting Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Risoluzione dei tipi di dati<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Structures and Other Programming Elements<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/structures-and-other-programming-elements.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Strutture e altri elementi di programmazione<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/structures-and-other-programming-elements.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Objects and Classes<ept id="p1">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Oggetti e classi<ept id="p1">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>