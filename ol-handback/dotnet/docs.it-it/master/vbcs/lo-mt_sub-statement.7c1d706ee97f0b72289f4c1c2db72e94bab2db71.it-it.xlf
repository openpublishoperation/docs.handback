<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0eb78f92f22502d9e8595051361b45d9bf53ed64</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\statements\sub-statement.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af3bbf4ff56c5fca97ee40a8ec1534c4a08a54bf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8aefaeee3f8a7ad51aca5b95b3f34c8e22086bec</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Sub Statement (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Sub Statement (Visual Basic) | Documenti di Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Sub Statement (Visual Basic)</source>
          <target state="translated">Istruzione Sub (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Declares the name, parameters, and code that define a <ph id="ph1">`Sub`</ph> procedure.</source>
          <target state="translated">Dichiara il nome, parametri e il codice che definiscono un <ph id="ph1">`Sub`</ph> procedura.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Sintassi</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">Parti</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Facoltativo.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Attribute List<ept id="p1">](attribute-list.md)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>elenco attributi<ept id="p1">](attribute-list.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Facoltativo.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Indicates definition of a partial method.</source>
          <target state="translated">Indica la definizione di un metodo parziale.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Partial Methods<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/partial-methods.md)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>metodi parziali<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/partial-methods.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Facoltativo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Can be one of the following:</source>
          <target state="translated">Può essere uno dei seguenti:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Public<ept id="p1">](../modifiers/public.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Public<ept id="p1">](../modifiers/public.md)</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Protected<ept id="p1">](../modifiers/protected.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Protected<ept id="p1">](../modifiers/protected.md)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Friend<ept id="p1">](../modifiers/friend.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Friend<ept id="p1">](../modifiers/friend.md)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Private<ept id="p1">](../modifiers/private.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Private<ept id="p1">](../modifiers/private.md)</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Access Levels in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>livelli in Visual Basic di accesso<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Facoltativo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Can be one of the following:</source>
          <target state="translated">Può essere uno dei seguenti:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Overloads<ept id="p1">](../modifiers/overloads.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Overload<ept id="p1">](../modifiers/overloads.md)</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Overrides<ept id="p1">](../modifiers/overrides.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Overrides<ept id="p1">](../modifiers/overrides.md)</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Overridable<ept id="p1">](../modifiers/overridable.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Overridable<ept id="p1">](../modifiers/overridable.md)</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>NotOverridable<ept id="p1">](../modifiers/notoverridable.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>NotOverridable<ept id="p1">](../modifiers/notoverridable.md)</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>MustOverride<ept id="p1">](../modifiers/mustoverride.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>MustOverride<ept id="p1">](../modifiers/mustoverride.md)</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Facoltativo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Shared<ept id="p1">](../modifiers/shared.md)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>condivisi<ept id="p1">](../modifiers/shared.md)</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Facoltativo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Shadows<ept id="p1">](../modifiers/shadows.md)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>ombreggiature<ept id="p1">](../modifiers/shadows.md)</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Facoltativo.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Async<ept id="p1">](../modifiers/async.md)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>Async<ept id="p1">](../modifiers/async.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Obbligatorio.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Name of the procedure.</source>
          <target state="translated">Nome della routine.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Declared Element Names<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>dichiarati i nomi degli elementi<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To create a constructor procedure for a class, set the name of a <ph id="ph1">`Sub`</ph> procedure to the <ph id="ph2">`New`</ph> keyword.</source>
          <target state="translated">Per creare una routine di costruttore per una classe, impostare il nome di un <ph id="ph1">`Sub`</ph> procedura per la <ph id="ph2">`New`</ph> (parola chiave).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Object Lifetime: How Objects Are Created and Destroyed<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-lifetime-how-objects-are-created-and-destroyed.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>la durata degli oggetti: come gli oggetti sono creare e distruggere<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-lifetime-how-objects-are-created-and-destroyed.md)</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Facoltativo.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>List of type parameters for a generic procedure.</source>
          <target state="translated">Elenco di parametri di tipo per una procedura generica.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Type List<ept id="p1">](type-list.md)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>digitare elenco<ept id="p1">](type-list.md)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Facoltativo.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>List of local variable names representing the parameters of this procedure.</source>
          <target state="translated">Elenco di nomi di variabili locali che rappresentano i parametri di questa procedura.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Parameter List<ept id="p1">](parameter-list.md)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>elenco parametri<ept id="p1">](parameter-list.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Facoltativo.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Indicates that this procedure implements one or more <ph id="ph1">`Sub`</ph> procedures, each one defined in an interface implemented by this procedure's containing class or structure.</source>
          <target state="translated">Indica che questa procedura viene implementato uno o più <ph id="ph1">`Sub`</ph> procedure, ognuna definita in un'interfaccia implementata dalla classe o struttura che contiene questa procedura.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Implements Statement<ept id="p1">](implements-statement.md)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>implementa istruzione<ept id="p1">](implements-statement.md)</ept>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Required if <ph id="ph1">`Implements`</ph> is supplied.</source>
          <target state="translated">Necessario se si fornisce <ph id="ph1">`Implements`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>List of <ph id="ph1">`Sub`</ph> procedures being implemented.</source>
          <target state="translated">Elenco delle routine <ph id="ph1">`Sub`</ph> implementate.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`implementedprocedure`</ph> has the following syntax and parts:</source>
          <target state="translated">Ogni <ph id="ph1">`implementedprocedure`</ph> presenta la sintassi e le parti seguenti:</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Part</source>
          <target state="translated">Parte</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descrizione</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Obbligatorio.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Name of an interface implemented by this procedure's containing class or structure.</source>
          <target state="translated">Nome di un'interfaccia implementata da questa procedura contenente classe o struttura.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Obbligatorio.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Name by which the procedure is defined in <ph id="ph1">`interface`</ph>.</source>
          <target state="translated">Nome mediante il quale la routine viene definita in <ph id="ph1">`interface`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Facoltativo.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Indicates that this procedure can handle one or more specific events.</source>
          <target state="translated">Indica che questa procedura può gestire uno o più eventi specifici.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Handles<ept id="p1">](handles-clause.md)</ept>.</source>
          <target state="translated">Vedere <bpt id="p1">[</bpt>gestisce<ept id="p1">](handles-clause.md)</ept>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Required if <ph id="ph1">`Handles`</ph> is supplied.</source>
          <target state="translated">Necessario se si fornisce <ph id="ph1">`Handles`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>List of events this procedure handles.</source>
          <target state="translated">Elenco di eventi gestiti dalla routine.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`eventspecifier`</ph> has the following syntax and parts:</source>
          <target state="translated">Ogni <ph id="ph1">`eventspecifier`</ph> presenta la sintassi e le parti seguenti:</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Part</source>
          <target state="translated">Parte</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descrizione</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Obbligatorio.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Object variable declared with the data type of the class or structure that raises the event.</source>
          <target state="translated">Variabile oggetto dichiarata con il tipo di dati della classe o struttura che genera l'evento.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Obbligatorio.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Name of the event this procedure handles.</source>
          <target state="translated">Nome dell'evento gestito dalla routine.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Facoltativo.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Block of statements to run within this procedure.</source>
          <target state="translated">Blocco di istruzioni da eseguire all'interno di questa procedura.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Terminates the definition of this procedure.</source>
          <target state="translated">Termina la definizione di questa procedura.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">Note</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>All executable code must be inside a procedure.</source>
          <target state="translated">Tutto il codice eseguibile deve essere all'interno di una routine.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Use a <ph id="ph1">`Sub`</ph> procedure when you don't want to return a value to the calling code.</source>
          <target state="translated">Utilizzare un <ph id="ph1">`Sub`</ph> procedure quando non si desidera restituire un valore al codice chiamante.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Use a <ph id="ph1">`Function`</ph> procedure when you want to return a value.</source>
          <target state="translated">Utilizzare un <ph id="ph1">`Function`</ph> procedura quando si desidera restituire un valore.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Defining a Sub Procedure</source>
          <target state="translated">Definizione di una routine Sub</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can define a <ph id="ph1">`Sub`</ph> procedure only at the module level.</source>
          <target state="translated">È possibile definire un <ph id="ph1">`Sub`</ph> procedura solo a livello di modulo.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The declaration context for a sub procedure must, therefore, be a class, a structure, a module, or an interface and can't be a source file, a namespace, a procedure, or a block.</source>
          <target state="translated">Il contesto della dichiarazione per una routine sub deve, pertanto, essere una classe, una struttura, un modulo o un'interfaccia e non può essere un file di origine, uno spazio dei nomi, una routine o un blocco.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Declaration Contexts and Default Access Levels<ept id="p1">](declaration-contexts-and-default-access-levels.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>contesti delle dichiarazioni e livelli di accesso predefinito<ept id="p1">](declaration-contexts-and-default-access-levels.md)</ept>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Sub`</ph> procedures default to public access.</source>
          <target state="translated"><ph id="ph1">`Sub`</ph>Per impostazione predefinita le procedure per l'accesso pubblico.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You can adjust their access levels by using the access modifiers.</source>
          <target state="translated">È possibile regolare i livelli di accesso mediante i modificatori di accesso.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If the procedure uses the <ph id="ph1">`Implements`</ph> keyword, the containing class or structure must have an <ph id="ph2">`Implements`</ph> statement that immediately follows its <ph id="ph3">`Class`</ph> or <ph id="ph4">`Structure`</ph> statement.</source>
          <target state="translated">Se la routine utilizza il <ph id="ph1">`Implements`</ph> (parola chiave), classe o struttura deve avere un <ph id="ph2">`Implements`</ph> istruzione che segue immediatamente il <ph id="ph3">`Class`</ph> o <ph id="ph4">`Structure`</ph> istruzione.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Implements`</ph> statement must include each interface that's specified in <ph id="ph2">`implementslist`</ph>.</source>
          <target state="translated">Il <ph id="ph1">`Implements`</ph> istruzione deve includere ogni interfaccia specificata in <ph id="ph2">`implementslist`</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>However, the name by which an interface defines the <ph id="ph1">`Sub`</ph> (in <ph id="ph2">`definedname`</ph>) doesn't have to match the name of this procedure (in <ph id="ph3">`name`</ph>).</source>
          <target state="translated">Tuttavia, il nome con cui si definisce un'interfaccia di <ph id="ph1">`Sub`</ph> (in <ph id="ph2">`definedname`</ph>) non deve necessariamente corrispondere al nome di questa procedura (in <ph id="ph3">`name`</ph>).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Returning from a Sub Procedure</source>
          <target state="translated">Restituzione da una routine Sub</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">`Sub`</ph> procedure returns to the calling code, execution continues with the statement after the statement that called it.</source>
          <target state="translated">Quando un <ph id="ph1">`Sub`</ph> procedure restituisce al codice chiamante, l'esecuzione continua con l'istruzione successiva all'istruzione che lo hanno chiamato.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The following example shows a return from a <ph id="ph1">`Sub`</ph> procedure.</source>
          <target state="translated">Nell'esempio seguente viene illustrato un ritorno da una <ph id="ph1">`Sub`</ph> procedura.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Exit Sub`</ph> and <ph id="ph2">`Return`</ph> statements cause an immediate exit from a <ph id="ph3">`Sub`</ph> procedure.</source>
          <target state="translated">Il <ph id="ph1">`Exit Sub`</ph> e <ph id="ph2">`Return`</ph> istruzioni uscire immediatamente da un <ph id="ph3">`Sub`</ph> procedura.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Any number of <ph id="ph1">`Exit Sub`</ph> and <ph id="ph2">`Return`</ph> statements can appear anywhere in the procedure, and you can mix <ph id="ph3">`Exit Sub`</ph> and <ph id="ph4">`Return`</ph> statements.</source>
          <target state="translated">Un numero qualsiasi di <ph id="ph1">`Exit Sub`</ph> e <ph id="ph2">`Return`</ph> istruzioni possono trovarsi in qualsiasi punto della procedura, ed è possibile combinare <ph id="ph3">`Exit Sub`</ph> e <ph id="ph4">`Return`</ph> istruzioni.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Calling a Sub Procedure</source>
          <target state="translated">Chiamare una routine Sub</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>You call a <ph id="ph1">`Sub`</ph> procedure by using the procedure name in a statement and then following that name with its argument list in parentheses.</source>
          <target state="translated">Si chiama un <ph id="ph1">`Sub`</ph> procedure utilizzando il nome della routine in un'istruzione e quindi seguendo questo nome con il relativo elenco di argomenti racchiuso tra parentesi.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>You can omit the parentheses only if you don't supply any arguments.</source>
          <target state="translated">È possibile omettere le parentesi solo se non si fornisce alcun argomento.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>However, your code is more readable if you always include the parentheses.</source>
          <target state="translated">Tuttavia, il codice è più leggibile se si includono sempre le parentesi.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Sub`</ph> procedure and a <ph id="ph2">`Function`</ph> procedure  can have parameters and perform a series of statements.</source>
          <target state="translated">Oggetto <ph id="ph1">`Sub`</ph> procedura e un <ph id="ph2">`Function`</ph> procedura può avere parametri ed eseguire una serie di istruzioni.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>However, a <ph id="ph1">`Function`</ph> procedure returns a value, and a <ph id="ph2">`Sub`</ph> procedure doesn't.</source>
          <target state="translated">Tuttavia, un <ph id="ph1">`Function`</ph> procedura restituisce un valore e un <ph id="ph2">`Sub`</ph> non di procedura.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Therefore, you can't use a <ph id="ph1">`Sub`</ph> procedure in an expression.</source>
          <target state="translated">Pertanto, è possibile utilizzare un <ph id="ph1">`Sub`</ph> procedure in un'espressione.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">`Call`</ph> keyword when you call a <ph id="ph2">`Sub`</ph> procedure, but that keyword isn't recommended for most uses.</source>
          <target state="translated">È possibile utilizzare il <ph id="ph1">`Call`</ph> parola chiave quando si chiama un <ph id="ph2">`Sub`</ph> procedura, ma la parola chiave non è consigliato per la maggior parte dei casi.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Call Statement<ept id="p1">](call-statement.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>istruzione Call<ept id="p1">](call-statement.md)</ept>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Visual Basic sometimes rearranges arithmetic expressions to increase internal efficiency.</source>
          <target state="translated">Visual Basic vengono a volte riorganizzate espressioni aritmetiche per aumentare l'efficienza interna.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For that reason, if your argument list includes expressions that call other procedures, you shouldn't assume that those expressions will be called in a particular order.</source>
          <target state="translated">Per questo motivo, se all'elenco di argomenti sono incluse le espressioni che chiamano altre routine, non deve presupporre che le espressioni verranno chiamate in un ordine particolare.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Async Sub Procedures</source>
          <target state="translated">Async Sub (routine)</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>By using the Async feature, you can invoke asynchronous functions without using explicit callbacks or manually splitting your code across multiple functions or lambda expressions.</source>
          <target state="translated">Utilizzando la funzionalità Async, è possibile richiamare funzioni asincrone senza utilizzare callback esplicito o suddividere manualmente il codice in più funzioni o espressioni lambda.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If you mark a procedure with the <bpt id="p1">[</bpt>Async<ept id="p1">](../modifiers/async.md)</ept> modifier, you can use the <bpt id="p2">[</bpt>Await<ept id="p2">](../../../visual-basic/language-reference/operators/await-operator.md)</ept> operator in the procedure.</source>
          <target state="translated">Se si contrassegna una routine con il <bpt id="p1">[</bpt>Async<ept id="p1">](../modifiers/async.md)</ept> modificatore, è possibile utilizzare il <bpt id="p2">[</bpt>Await<ept id="p2">](../../../visual-basic/language-reference/operators/await-operator.md)</ept> operatore nella procedura.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>When control reaches an <ph id="ph1">`Await`</ph> expression in the <ph id="ph2">`Async`</ph> procedure, control returns to the caller, and progress in the procedure is suspended until the awaited task completes.</source>
          <target state="translated">Quando il controllo raggiunge un <ph id="ph1">`Await`</ph> espressione la <ph id="ph2">`Async`</ph> procedura, il controllo ritorna al chiamante e lo stato di avanzamento della procedura viene sospesa fino al completamento dell'attività di attesa.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>When the task is complete, execution can resume in the procedure.</source>
          <target state="translated">Una volta completata l'attività, nella procedura possibile riprendere l'esecuzione.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`Async`</ph> procedure returns to the caller when either the first awaited object that’s not yet complete is encountered or the end of the <ph id="ph2">`Async`</ph> procedure is reached, whichever occurs first.</source>
          <target state="translated">Un <ph id="ph1">`Async`</ph> restituito al chiamante quando viene rilevato un il primo oggetto atteso che non è ancora completo o alla fine della routine di <ph id="ph2">`Async`</ph> procedura viene raggiunto, qualunque si verifichi prima.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>You can also mark a <bpt id="p1">[</bpt>Function Statement<ept id="p1">](function-statement.md)</ept> with the <ph id="ph1">`Async`</ph> modifier.</source>
          <target state="translated">È inoltre possibile contrassegnare un <bpt id="p1">[</bpt>istruzione Function<ept id="p1">](function-statement.md)</ept> con il <ph id="ph1">`Async`</ph> modificatore.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`Async`</ph> function can have a return type of &lt;xref:System.Threading.Tasks.Task%601&gt; or &lt;xref:System.Threading.Tasks.Task&gt;.</source>
          <target state="translated">Un <ph id="ph1">`Async`</ph> funzione può avere un tipo restituito &lt;xref:System.Threading.Tasks.Task%601&gt;o &lt;xref:System.Threading.Tasks.Task&gt;.&lt;/xref:System.Threading.Tasks.Task&gt; &lt;/xref:System.Threading.Tasks.Task%601&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>An example later in this topic shows an <ph id="ph1">`Async`</ph> function that has a return type of &lt;xref:System.Threading.Tasks.Task%601&gt;.</source>
          <target state="translated">Un esempio più avanti in questo argomento viene illustrato un <ph id="ph1">`Async`</ph> funzione che dispone di un tipo restituito di &lt;xref:System.Threading.Tasks.Task%601&gt;.&lt;/xref:System.Threading.Tasks.Task%601&gt;</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Async`</ph> <ph id="ph2">`Sub`</ph> procedures are primarily used for event handlers, where a value can't be returned.</source>
          <target state="translated"><ph id="ph1">`Async`</ph><ph id="ph2">`Sub`</ph> procedure vengono utilizzate principalmente per i gestori eventi, in cui non può essere restituito un valore.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`Async``Sub`</ph> procedure can't be awaited, and the caller of an <ph id="ph2">`Async``Sub`</ph> procedure can't catch exceptions that the <ph id="ph3">`Sub`</ph> procedure throws.</source>
          <target state="translated">Un <ph id="ph1">`Async``Sub`</ph> procedura non può essere atteso e il chiamante di un <ph id="ph2">`Async``Sub`</ph> procedura non può intercettare le eccezioni che il <ph id="ph3">`Sub`</ph> procedura genera un'eccezione.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`Async`</ph> procedure can't declare any <bpt id="p1">[</bpt>ByRef<ept id="p1">](../modifiers/byref.md)</ept> parameters.</source>
          <target state="translated">Un <ph id="ph1">`Async`</ph> procedura non può dichiarare <bpt id="p1">[</bpt>ByRef<ept id="p1">](../modifiers/byref.md)</ept> parametri.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">`Async`</ph> procedures, see <bpt id="p1">[</bpt>Asynchronous Programming with Async and Await<ept id="p1">](../../../visual-basic/programming-guide/concepts/async/index.md)</ept>, <bpt id="p2">[</bpt>Control Flow in Async Programs<ept id="p2">](../../../visual-basic/programming-guide/concepts/async/control-flow-in-async-programs.md)</ept>, and <bpt id="p3">[</bpt>Async Return Types<ept id="p3">](../../../visual-basic/programming-guide/concepts/async/async-return-types.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni su <ph id="ph1">`Async`</ph> procedure, vedere <bpt id="p1">[</bpt>la programmazione asincrona con Async e Await<ept id="p1">](../../../visual-basic/programming-guide/concepts/async/index.md)</ept>, <bpt id="p2">[</bpt>flusso di controllo in programmi asincroni<ept id="p2">](../../../visual-basic/programming-guide/concepts/async/control-flow-in-async-programs.md)</ept>, e <bpt id="p3">[</bpt>Async restituire tipi<ept id="p3">](../../../visual-basic/programming-guide/concepts/async/async-return-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Esempio</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`Sub`</ph> statement to define the name, parameters, and code that form the body of a <ph id="ph2">`Sub`</ph> procedure.</source>
          <target state="translated">Nell'esempio seguente viene utilizzata la <ph id="ph1">`Sub`</ph> istruzione per definire il nome, parametri e il codice che formano il corpo di un <ph id="ph2">`Sub`</ph> procedura.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#58<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/sub-statement_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements&amp;#58;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/sub-statement_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Esempio</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>In the following example, <ph id="ph1">`DelayAsync`</ph> is an an <ph id="ph2">`Async``Function`</ph> that has a return type of &lt;xref:System.Threading.Tasks.Task%601&gt;.</source>
          <target state="translated">Nell'esempio seguente, <ph id="ph1">`DelayAsync`</ph> è un un <ph id="ph2">`Async``Function`</ph> che presenta un tipo restituito di &lt;xref:System.Threading.Tasks.Task%601&gt;.&lt;/xref:System.Threading.Tasks.Task%601&gt;</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`DelayAsync`</ph> has a <ph id="ph2">`Return`</ph> statement that returns an integer.</source>
          <target state="translated"><ph id="ph1">`DelayAsync`</ph> ha un'istruzione <ph id="ph2">`Return`</ph> che restituisce un numero intero.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Therefore, the function declaration of <ph id="ph1">`DelayAsync`</ph> must have a return type of <ph id="ph2">`Task(Of Integer)`</ph>.</source>
          <target state="translated">Pertanto, la dichiarazione della funzione di <ph id="ph1">`DelayAsync`</ph> deve avere un tipo restituito di <ph id="ph2">`Task(Of Integer)`</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Because the return type is <ph id="ph1">`Task(Of Integer)`</ph>, the evaluation of the <ph id="ph2">`Await`</ph> expression in <ph id="ph3">`DoSomethingAsync`</ph> produces an integer, as the following statement shows: <ph id="ph4">`Dim result As Integer = Await delayTask`</ph>.</source>
          <target state="translated">Poiché il tipo restituito è <ph id="ph1">`Task(Of Integer)`</ph>, la valutazione di <ph id="ph2">`Await`</ph> espressione <ph id="ph3">`DoSomethingAsync`</ph> produce un numero intero, come illustrato nell'istruzione seguente: <ph id="ph4">`Dim result As Integer = Await delayTask`</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`startButton_Click`</ph> procedure is an example of an <ph id="ph2">`Async Sub`</ph> procedure.</source>
          <target state="translated">Il <ph id="ph1">`startButton_Click`</ph> procedura è un esempio di un <ph id="ph2">`Async Sub`</ph> procedura.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">`DoSomethingAsync`</ph> is an <ph id="ph2">`Async`</ph> function, the task for the call to <ph id="ph3">`DoSomethingAsync`</ph> must be awaited, as the following statement shows: <ph id="ph4">`Await DoSomethingAsync()`</ph>.</source>
          <target state="translated">Poiché <ph id="ph1">`DoSomethingAsync`</ph> è un <ph id="ph2">`Async`</ph> (funzione), l'attività per la chiamata a <ph id="ph3">`DoSomethingAsync`</ph> deve essere atteso, come illustrato nell'istruzione seguente: <ph id="ph4">`Await DoSomethingAsync()`</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`startButton_Click``Sub`</ph> procedure must be defined with the <ph id="ph2">`Async`</ph> modifier because it has an <ph id="ph3">`Await`</ph> expression.</source>
          <target state="translated">Il <ph id="ph1">`startButton_Click``Sub`</ph> procedura deve essere definita con la <ph id="ph2">`Async`</ph> modificatore perché contiene un <ph id="ph3">`Await`</ph> espressione.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>csAsyncMethod#1<ept id="p2">](../../../csharp/programming-guide/classes-and-structs/codesnippet/VisualBasic/sub-statement_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>csAsyncMethod n.&amp;1;<ept id="p2">](../../../csharp/programming-guide/classes-and-structs/codesnippet/VisualBasic/sub-statement_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vedere anche</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Implements Statement<ept id="p1">](implements-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Implements (istruzione)<ept id="p1">](implements-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Function Statement<ept id="p1">](function-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Istruzione Function<ept id="p1">](function-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Parameter List<ept id="p1">](parameter-list.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Elenco di parametri<ept id="p1">](parameter-list.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Dim Statement<ept id="p1">](dim-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Dim (istruzione)<ept id="p1">](dim-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Call Statement<ept id="p1">](call-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Istruzione Call<ept id="p1">](call-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Of<ept id="p1">](of-clause.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Of<ept id="p1">](of-clause.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Parameter Arrays<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/parameter-arrays.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Matrici di parametri<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/parameter-arrays.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Use a Generic Class<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/how-to-use-a-generic-class.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procedura: utilizzare una classe generica<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/how-to-use-a-generic-class.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Troubleshooting Procedures<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/troubleshooting-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Le procedure di risoluzione<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/troubleshooting-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Partial Methods<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/partial-methods.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Metodi parziali<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/partial-methods.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>