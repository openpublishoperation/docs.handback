<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0ca64c3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">028fd4961c97e31ea9f213b832c723b2ce2cf27c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\class-libraries.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92e33f28118649674ef0d7d1a61b4e06ee5a3a4a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">831754c1a672c75f630705e685461e8923725eca</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>.NET Class Libraries</source>
          <target state="translated">.NET クラス ライブラリ</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>.NET Class Libraries</source>
          <target state="translated">.NET クラス ライブラリ</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>.NET Class Libraries</source>
          <target state="translated">.NET クラス ライブラリ</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Class libraries are the <bpt id="p1">[</bpt>shared library<ept id="p1">](http://en.wikipedia.org/wiki/Library_%28computing%29#Shared_libraries)</ept> concept for .NET.</source>
          <target state="translated">クラス ライブラリは、.NET の<bpt id="p1">[</bpt>共有ライブラリ<ept id="p1">](http://en.wikipedia.org/wiki/Library_%28computing%29#Shared_libraries)</ept>の概念です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>They enable you to componentize useful functionality into modules that can be used by multiple applications.</source>
          <target state="translated">クラス ライブラリを使用すると、役に立つ機能をモジュールとしてコンポーネント化して、複数のアプリケーションで使用することができます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>They can also be used as a means of loading functionality that is not needed or not known at application startup.</source>
          <target state="translated">また、アプリケーションの起動時には不要または認識されない機能を読み込むための手段としても使用できます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Class libraries are described using the <bpt id="p1">[</bpt>.NET Assembly file format<ept id="p1">](assembly-format.md)</ept>.</source>
          <target state="translated">クラス ライブラリは、<bpt id="p1">[</bpt>.NET アセンブリ ファイルの形式<ept id="p1">](assembly-format.md)</ept>を使用して記述されます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>There are three types of class libraries that you can use:</source>
          <target state="translated">次の&amp;3; 種類のクラス ライブラリを使用できます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Platform-specific<ept id="p1">**</ept> class libraries have access to all the APIs in a given platform (for example, .NET Framework, Xamarin iOS), but can only be used by apps and libraries that target that platform.</source>
          <target state="translated"><bpt id="p1">**</bpt>プラットフォーム固有<ept id="p1">**</ept> クラス ライブラリは、特定のプラットフォーム (たとえば、.NET Framework、Xamarin iOS) のすべての API にアクセスできますが、そのプラットフォームを対象とするアプリケーションとライブラリでのみ使用できます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Portable<ept id="p1">**</ept> class libraries have access to a subset of APIs, and can be used by apps and libraries that target multiple platforms.</source>
          <target state="translated"><bpt id="p1">**</bpt>ポータブル<ept id="p1">**</ept> クラス ライブラリは、API のサブセットへのアクセスがあり、複数のプラットフォームを対象とするアプリケーションとライブラリで使用できます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>.NET Core<ept id="p1">**</ept> class libraries are a merger of the platform-specific and portable library concept into a single model that provides the best of both.</source>
          <target state="translated"><bpt id="p1">**</bpt>.NET Core<ept id="p1">**</ept> クラス ライブラリは、プラットフォーム固有のライブラリとポータブル ライブラリの概念を両方の長所を持つ&amp;1; つのモデルに統合しています。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Platform-specific Class Libraries</source>
          <target state="translated">プラットフォーム固有のクラス ライブラリ</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Platform-specific libraries are bound to a single .NET platform (for example, .NET Framework on Windows) and can therefore take significant dependencies on a known execution environment.</source>
          <target state="translated">プラットフォーム固有のライブラリは&amp;1; つの .NET プラットフォーム (たとえば、Windows 上の .NET Framework) にバインドされるため、既知の&amp;1; つの実行環境に大きく依存する可能性があります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Such an environment will expose a known set of APIs (.NET and OS APIs) and will maintain and expose expected state (for example, Windows registry).</source>
          <target state="translated">そのような環境は既知の API のセット (.NET および OS API) を公開し、予想される状態 (Windows レジストリ) を維持および公開します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Developers who create platform specific libraries can fully exploit the underlying platform.</source>
          <target state="translated">プラットフォーム固有のライブラリを作成する開発者は、基になるプラットフォームのすべての機能を利用できます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The libraries will only ever run on that given platform, making platform checks or other forms of conditional code unnecessary (modulo single sourcing code for multiple platforms).</source>
          <target state="translated">このライブラリは特定のプラットフォーム上でのみ実行されるので、プラットフォームの確認や他の形式の条件付きコードの確認は必要ありません (複数プラットフォーム用のモジュール単一ソース コード)。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Platform-specific libraries have been the primary class library type for the .NET Framework.</source>
          <target state="translated">プラットフォーム固有のライブラリは、 .NET Framework のプライマリ クラス ライブラリの種類です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Even as other .NET platforms emerged, platform-specific libraries remained the dominant library type.</source>
          <target state="translated">他の .NET プラットフォームが登場しても、プラットフォーム固有のライブラリは、基準となるライブラリの種類として残っています。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Portable Class Libraries</source>
          <target state="translated">ポータブル クラス ライブラリ</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Portable libraries are supported on multiple .NET platforms.</source>
          <target state="translated">ポータブル ライブラリは、複数の .NET プラットフォームでサポートされます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>They can still take dependencies on a known execution environment, however, the environment is a synthetic one that is generated by the intersection of a set of concrete .NET platforms.</source>
          <target state="translated">このライブラリは、既知の実行環境に依存することは同じですが、その環境は、完全な .NET プラットフォームのセットの共通部分によって生成されます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This means that exposed APIs and platform assumptions are a subset of what would be available to a platform-specific library.</source>
          <target state="translated">つまり、公開される API およびプラットフォームの前提は、プラットフォーム固有のライブラリで使用できる機能のサブセットです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You choose a platform configuration when you create a portable library.</source>
          <target state="translated">ポータブル ライブラリを作成するときに、プラットフォームの構成を選択します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>These are the set of platforms that you need to support (for example, .NET Framework 4.5+, Windows Phone 8.0+).</source>
          <target state="translated">これらはサポートする必要があるプラットフォーム (たとえば、.NET Framework 4.5 以降、Windows Phone 8.0 以降) のセットです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The more platforms you opt to support, the fewer APIs and fewer platform assumptions you can make, the lowest common denominator.</source>
          <target state="translated">サポートするプラットフォームが増えるほど、想定可能な API とプラットフォームが減り、共通分母が最小になります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This characteristic can be confusing at first, since people often think “more is better”, but find that more supported platforms results in fewer available APIs.</source>
          <target state="translated">このような特性は、最初は混乱を招くことがあります。ユーザーは多くの場合、「多いほどよい」と考えますが、結果はサポートするプラットフォームが増えるほど、使用可能な API は少なくなります。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Many library developers have switched from producing multiple platform-specific libraries from one source (using conditional compilation directives) to portable libraries.</source>
          <target state="translated">多くのライブラリ開発者は、1 つのソースから複数のプラットフォーム固有のライブラリを生成する方法 (条件付きコンパイル ディレクティブを使用) からポータブル ライブラリに切り替えています。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>There are <bpt id="p1">[</bpt>several approaches<ept id="p1">](http://blog.stephencleary.com/2012/11/portable-class-library-enlightenment.html)</ept> for accessing platform-specific functionality within portable libraries, with <bpt id="p2">[</bpt>bait-and-switch<ept id="p2">](http://log.paulbetts.org/the-bait-and-switch-pcl-trick/)</ept> being the most widely accepted technique at this point.</source>
          <target state="translated">ポータブル ライブラリ内のプラットフォーム固有の機能にアクセスする<bpt id="p1">[</bpt>方法はいくつか<ept id="p1">](http://blog.stephencleary.com/2012/11/portable-class-library-enlightenment.html)</ept>あります。現時点で最も広く採用されている手法は、<bpt id="p2">[</bpt>bait-and-switch<ept id="p2">](http://log.paulbetts.org/the-bait-and-switch-pcl-trick/)</ept> です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>.NET Core Class Libraries</source>
          <target state="translated">.NET Core クラス ライブラリ</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>.NET Core libraries are a replacement of the platform-specific and portable libraries concepts.</source>
          <target state="translated">.NET Core ライブラリは、プラットフォームに固有のライブラリおよびポータブル ライブラリの概念に代わるものです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>They are platform-specific in the sense that they expose all functionality from the underlying platform (no synthetic platforms or platform intersections).</source>
          <target state="translated">これらは、基になるプラットフォームのすべての機能を公開するという意味でプラットフォーム固有です (統合プラットフォームまたはプラットフォームの交差はありません)。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>They are portable in the sense that they work on all supporting platforms.</source>
          <target state="translated">これらは、すべてのサポートされるプラットフォーム上で機能するという意味でポータブルです。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>.NET Core exposes a set of library <bpt id="p1">_</bpt>contracts<ept id="p1">_</ept>.</source>
          <target state="translated">.NET Core は、ライブラリ <bpt id="p1">_</bpt>コントラクト<ept id="p1">_</ept>のセットを公開します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>.NET platforms must support each contract fully or not at all.</source>
          <target state="translated">.NET プラットフォームは、各コントラクトを完全にサポートするか、またはまったくサポートしない必要があります。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Each platform, therefore, supports a set of .NET Core contracts.</source>
          <target state="translated">各プラットフォームは、そのため、.NET Core コントラクトのセットをサポートしています。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The corollary is that each .NET Core class library is supported on the platforms that support it’s contract dependencies.</source>
          <target state="translated">当然の結果として、各 .NET Core クラス ライブラリは、コントラクトの依存関係をサポートするプラットフォームでサポートされています。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>.NET Core contracts do not expose the entire functionality of the .NET Framework (nor is that a goal), however, they do expose many more APIs than Portable Class Libraries.</source>
          <target state="translated">.NET Core コントラクトは、.NET Framework のすべての機能を公開しません (それが目的でもありません)。ただし、ポータブル クラス ライブラリよりも多くの API を公開する操作を行います。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>More APIs will be added over time.</source>
          <target state="translated">時間の経過と共にさらに API が追加されます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following platforms support .NET Core class libraries:</source>
          <target state="translated">次のプラットフォームは、.NET Core クラス ライブラリをサポートします。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>.NET Core</source>
          <target state="translated">.NET Core</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>ASP.NET Core</source>
          <target state="translated">ASP.NET Core</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>.NET Framework 4.5+</source>
          <target state="translated">.NET Framework 4.5 以降</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Windows Store Apps</source>
          <target state="translated">Windows ストア アプリ</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Windows Phone 8+</source>
          <target state="translated">Windows Phone 8 以降</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Mono Class Libraries</source>
          <target state="translated">Mono クラス ライブラリ</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Class libraries are supported on Mono, including the three types of libraries described above.</source>
          <target state="translated">クラス ライブラリは、上記の&amp;3; 種類のライブラリを含む Mono 上でサポートされます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Mono has often been seen (correctly) as a cross-platform implementation of the Microsoft .NET Framework.</source>
          <target state="translated">多くの場合、Mono は、Microsoft .NET Framework のクロスプラット フォームの実装として (正しく) 確認されています。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>In part, this was because platform-specific .NET Framework libraries could run on the Mono runtime without modification or recompilation.</source>
          <target state="translated">これは、部分的には、プラットフォーム固有の .NET Framework ライブラリを変更や再コンパイルせずに Mono ランタイム上で実行できたためです。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This characteristic was in place before the creation of portable class libraries, so was an obvious choice to enable binary portability between the .NET Framework and Mono (although it only worked in one direction).</source>
          <target state="translated">このような特徴は、ポータブル クラス ライブラリの作成前に見られたので、NET Framework と Mono の間でバイナリを移植できるようにすることが当然の選択肢でした。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>