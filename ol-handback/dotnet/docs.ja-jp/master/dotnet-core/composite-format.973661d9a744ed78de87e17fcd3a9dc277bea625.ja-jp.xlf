<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-bf14093" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b61b4736880d57f02070150d8613d860505b268</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\composite-format.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d9832564a26d6ff6f7bde1b294962c36e08569bd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02eb081844fab88da492d9b924b7f16a4e3d5f8e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Composite formatting</source>
          <target state="translated">複合書式指定</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Composite formatting</source>
          <target state="translated">複合書式指定</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Composite formatting</source>
          <target state="translated">複合書式指定</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The .NET composite formatting feature takes a list of objects and a composite format string as input.</source>
          <target state="translated">.NET の複合書式指定機能は、オブジェクトのリストおよび複合書式指定文字列を入力として使用します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A composite format string consists of fixed text intermixed with indexed placeholders, called format items, that correspond to the objects in the list.</source>
          <target state="translated">複合書式指定文字列は、固定テキストに、書式指定項目と呼ばれるインデックス化されたプレースホルダーが混合されて構成されます。このプレースホルダーはリスト内のオブジェクトに対応します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The formatting operation yields a result string that consists of the original fixed text intermixed with the string representation of the objects in the list.</source>
          <target state="translated">書式設定操作によって生成される結果の文字列は、元の固定テキストに文字列で表されたリスト内のオブジェクトが混合されて構成されます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The composite formatting feature is supported by methods such as the following:</source>
          <target state="translated">複合書式指定機能をサポートするメソッドには、次のようなものがあります。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept>, which returns a formatted result string.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept>。書式設定された結果文字列を返します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept>, which appends a formatted result string to a <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept>。これは書式設定された結果文字列を <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> オブジェクトに追加します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Some overloads of the <bpt id="p1">[</bpt>Console<ept id="p1">](xref:System.Console)</ept> <ph id="ph1">`WriteLine`</ph> method, which display a formatted result string to the console.</source>
          <target state="translated"><bpt id="p1">[</bpt>Console<ept id="p1">](xref:System.Console)</ept> <ph id="ph1">`WriteLine`</ph> メソッドの一部のオーバーロード。書式設定された結果文字列をコンソールに表示します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Some overloads of the <bpt id="p1">[</bpt>TextWriter<ept id="p1">](xref:System.IO.TextWriter)</ept> <ph id="ph1">`WriteLine`</ph> method, which write the formatted result string to a stream or file.</source>
          <target state="translated"><bpt id="p1">[</bpt>TextWriter<ept id="p1">](xref:System.IO.TextWriter)</ept> <ph id="ph1">`WriteLine`</ph> メソッドの一部のオーバーロード。書式設定された結果文字列をストリームまたはファイルに書き込みます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Classes derived from <bpt id="p1">[</bpt>TextWriter<ept id="p1">](xref:System.IO.TextWriter)</ept>, such as <bpt id="p2">[</bpt>StreamWriter<ept id="p2">](xref:System.IO.StreamWriter)</ept>, also share this functionality.</source>
          <target state="translated"><bpt id="p1">[</bpt>TextWriter<ept id="p1">](xref:System.IO.TextWriter)</ept> から派生したクラス (<bpt id="p2">[</bpt>StreamWriter<ept id="p2">](xref:System.IO.StreamWriter)</ept> など) も、この機能を共有します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debug.WriteLine(String, Object[])<ept id="p1">](xref:System.Diagnostics.Debug.WriteLine(System.String,System.Object[]))</ept>, which outputs a formatted message to trace listeners.</source>
          <target state="translated"><bpt id="p1">[</bpt>Debug.WriteLine(String, Object[])<ept id="p1">](xref:System.Diagnostics.Debug.WriteLine(System.String,System.Object[]))</ept>。書式設定されたメッセージをトレース リスナーに出力します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Trace.TraceError(String, Object[])<ept id="p1">](xref:System.Diagnostics.Trace.TraceError(System.String,System.Object[]))</ept>, <bpt id="p2">[</bpt>Trace.TraceInformation(String, Object[])<ept id="p2">](xref:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[]))</ept>, and <bpt id="p3">[</bpt>Trace.TraceWarning(String, Object[])<ept id="p3">](xref:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[]))</ept> methods, which output formatted messages to trace listeners.</source>
          <target state="translated"><bpt id="p1">[</bpt>Trace.TraceError(String, Object[])<ept id="p1">](xref:System.Diagnostics.Trace.TraceError(System.String,System.Object[]))</ept>、<bpt id="p2">[</bpt>Trace.TraceInformation(String, Object[])<ept id="p2">](xref:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[]))</ept>、および <bpt id="p3">[</bpt>Trace.TraceWarning(String, Object[])<ept id="p3">](xref:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[]))</ept> メソッド。書式設定されたメッセージをトレース リスナーに出力します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>TraceSource.TraceInformation(String, Object[])<ept id="p1">](xref:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[]))</ept> method, which writes an informational method to trace listeners.</source>
          <target state="translated"><bpt id="p1">[</bpt>TraceSource.TraceInformation(String, Object[])<ept id="p1">](xref:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[]))</ept> メソッド。情報提供メソッドをトレース リスナーに書き込みます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Composite Format String</source>
          <target state="translated">複合書式指定文字列</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A composite format string and object list are used as arguments of methods that support the composite formatting feature.</source>
          <target state="translated">複合書式指定文字列とオブジェクト リストは、複合書式指定機能をサポートするメソッドの引数として使用されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A composite format string consists of zero or more runs of fixed text intermixed with one or more format items.</source>
          <target state="translated">複合書式指定文字列は、1 つ以上の書式指定項目が混合された&amp;0; 個以上の固定テキストで構成されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The fixed text is any string that you choose, and each format item corresponds to an object or boxed structure in the list.</source>
          <target state="translated">固定テキストはユーザーが任意に選択した文字列で、各書式指定項目はリスト内のオブジェクトまたはボックス化された構造体に対応します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The composite formatting feature returns a new result string where each format item is replaced by the string representation of the corresponding object in the list.</source>
          <target state="translated">複合書式指定機能は、各書式指定項目がリスト内の対応するオブジェクトの文字列表現で置換された新しい文字列を返します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Consider the following <bpt id="p1">[</bpt>Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> code fragment.</source>
          <target state="translated">次の <bpt id="p1">[</bpt>Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> コード フラグメントを考慮してください。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The fixed text is <ph id="ph1">`"Name = "`</ph> and <ph id="ph2">`", hours = "`</ph>.</source>
          <target state="translated">固定テキストは、<ph id="ph1">`"Name = "`</ph> および <ph id="ph2">`", hours = "`</ph> です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The format items are <ph id="ph1">`"{0}"`</ph>, whose index is 0, which corresponds to the object <ph id="ph2">`name`</ph> and <ph id="ph3">`"{1:hh}"`</ph>, whose index is 1, which corresponds to the object <ph id="ph4">`DateTime.Now`</ph>.</source>
          <target state="translated">書式指定項目の 1 つは、インデックスが 0 である <ph id="ph1">`"{0}"`</ph> であり、オブジェクト <ph id="ph2">`name`</ph> に対応します。もう 1 つはインデックスが 1 である <ph id="ph3">`"{1:hh}"`</ph> であり、オブジェクト <ph id="ph4">`DateTime.Now`</ph> に対応します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Format Item Syntax</source>
          <target state="translated">書式指定項目の構文</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Each format item takes the following form and consists of the following components:</source>
          <target state="translated">各書式指定項目は、次の形式を使用し、次のコンポーネントで構成されます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">__</bpt>{<ept id="p1">__</ept><bpt id="p2">*</bpt>index<ept id="p2">*</ept>[,<bpt id="p3">*</bpt>alignment<ept id="p3">*</ept>][:<bpt id="p4">*</bpt>formatString<ept id="p4">*</ept>]<bpt id="p5">__</bpt>}<ept id="p5">__</ept></source>
          <target state="translated"><bpt id="p1">__</bpt>{<ept id="p1">__</ept><bpt id="p2">*</bpt>index<ept id="p2">*</ept>[,<bpt id="p3">*</bpt>alignment<ept id="p3">*</ept>][:<bpt id="p4">*</bpt>formatString<ept id="p4">*</ept>]<bpt id="p5">__</bpt>}<ept id="p5">__</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The matching braces ("{" and "}") are required.</source>
          <target state="translated">対になった中かっこ ("{" と "}") が必要です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Index Component</source>
          <target state="translated">Index コンポーネント</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The mandatory <bpt id="p1">*</bpt>index<ept id="p1">*</ept> component, also called a parameter specifier, is a number starting from 0 that identifies a corresponding item in the list of objects.</source>
          <target state="translated">必須の <bpt id="p1">*</bpt>index<ept id="p1">*</ept> コンポーネントは、パラメーター指定子とも呼ばれ、オブジェクトのリスト内で対応する項目を識別するための 0 から始まる数値です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>That is, the format item whose parameter specifier is 0 formats the first object in the list, the format item whose parameter specifier is 1 formats the second object in the list, and so on.</source>
          <target state="translated">つまり、パラメーター指定子が 0 である書式指定項目はリスト内の最初のオブジェクトを書式設定し、パラメーター指定子が 1 である書式指定項目はリスト内の 2 番目のオブジェクトを書式設定します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example includes four parameter specifiers, numbered zero through three, to represent prime numbers less than ten:</source>
          <target state="translated">次の例には、10 未満の素数を表す&amp;4; つのパラメーター指定子 (0 ～&amp;3; の番号が付けられている) が含まれています。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Multiple format items can refer to the same element in the list of objects by specifying the same parameter specifier.</source>
          <target state="translated">同じパラメーター指定子を指定することによって、複数の書式指定項目でオブジェクトのリスト内の同じ要素を参照できます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For example, you can format the same numeric value in hexadecimal, scientific, and number format by specifying a composite format string such as : "0x{0:X} {0:E} {0:N}", as the following example shows.</source>
          <target state="translated">たとえば、複合書式指定文字列で "0x{0:X} {0:E} {0:N}" のように指定することによって、1 つの数値を&amp;16; 進形式、指数形式、および数値形式で書式設定できます。以下に例を示します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Each format item can refer to any object in the list.</source>
          <target state="translated">各書式指定項目は、リスト内のどのオブジェクトでも参照できます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, if there are three objects, you can format the second, first, and third object by specifying a composite format string like this: "{1} {0} {2}".</source>
          <target state="translated">たとえば、3 つのオブジェクトが存在する場合、2 番目、1 番目、3 番目のオブジェクトを書式設定するには、"{1} {0} {2}" のような複合書式指定文字列を指定します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An object that is not referenced by a format item is ignored.</source>
          <target state="translated">書式指定項目で参照されないオブジェクトは無視されます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>FormatException<ept id="p1">](xref:System.FormatException)</ept> is thrown at runtime if a parameter specifier designates an item outside the bounds of the list of objects.</source>
          <target state="translated">パラメーター指定子がオブジェクトのリストの範囲外の項目を指定する場合は、ランタイムに <bpt id="p1">[</bpt>FormatException<ept id="p1">](xref:System.FormatException)</ept> がスローされます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Alignment Component</source>
          <target state="translated">Alignment コンポーネント</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The optional <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> component is a signed integer indicating the preferred formatted field width.</source>
          <target state="translated">省略可能な <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> コンポーネントは、書式設定フィールドの幅を指定する符号付き整数です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the value of <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> is less than the length of the formatted string, <bpt id="p2">*</bpt>alignment<ept id="p2">*</ept> is ignored and the length of the formatted string is used as the field width.</source>
          <target state="translated"><bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> の値が書式設定する文字列の長さよりも小さい場合、<bpt id="p2">*</bpt>alignment<ept id="p2">*</ept> は無視され、書式設定する文字列の長さがフィールドの幅として使用されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The formatted data in the field is right-aligned if <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> is positive and left-aligned if <bpt id="p2">*</bpt>alignment<ept id="p2">*</ept> is negative.</source>
          <target state="translated">フィールド内の書式設定されたデータは、<bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> が正の場合は右揃え、<bpt id="p2">*</bpt>alignment<ept id="p2">*</ept> が負の場合は左揃えされます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If padding is necessary, white space is used.</source>
          <target state="translated">埋め込みが必要な場合は、空白が使用されます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The comma is required if <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept>  is specified.</source>
          <target state="translated"><bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> を指定する場合は、コンマが必要です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following example defines two arrays, one containing the names of employees and the other containing the hours they worked over a two-week period.</source>
          <target state="translated">次の例では、2 つの配列を定義します。1 つの配列には従業員の名前が含まれていて、もう&amp;1; つの配列には従業員が&amp;2; 週間にわたって作業した時間数が含まれています。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The composite format string left-aligns the names in a 20-character field, and right-aligns their hours in a 5-character field.</source>
          <target state="translated">複合書式指定文字列では、名前が 20 文字のフィールドに左揃えに指定され、時間数が 5 文字のフィールドに右揃えに指定されます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Note that the "N1" standard format string is also used to format the hours with one fractional digit.</source>
          <target state="translated">"N1" 標準書式指定文字列も、時間を&amp;1; 桁の小数部で書式設定するために使用されることに注意してください。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Format String Component</source>
          <target state="translated">Format String コンポーネント</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The optional <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> component is a format string that is appropriate for the type of object being formatted.</source>
          <target state="translated">オプションの <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> コンポーネントは、書式設定されるオブジェクトの種類に適した書式指定文字列です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Specify a standard or custom numeric format string if the corresponding object is a numeric value, a standard or custom date and time format string if the corresponding object is a <bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept> object, or an <bpt id="p2">[</bpt>enumeration format string<ept id="p2">](enumeration-format.md)</ept> if the corresponding object is an enumeration value.</source>
          <target state="translated">対応するオブジェクトが数値の場合は標準またはカスタムの数値書式指定文字列を指定し、対応するオブジェクトが <bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept> オブジェクトの場合は標準またはカスタムの日時書式指定文字列を指定し、対応するオブジェクトが列挙値の場合は<bpt id="p2">[</bpt>列挙型書式指定文字列<ept id="p2">](enumeration-format.md)</ept>を指定します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified, the general ("G") format specifier for a numeric, date and time, or enumeration type is used.</source>
          <target state="translated"><bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> が指定されない場合は、数値、日付と時刻、または列挙型の汎用 ("G") 書式指定子が使用されます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The colon is required if <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is specified.</source>
          <target state="translated"><bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> を指定する場合はコロンが必要です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following table lists types or categories of types in the .NET Framework class library that support a predefined set of format strings, and provides links to the topics that list the supported format strings.</source>
          <target state="translated">次の表は、定義済みの一連の書式指定文字列をサポートする .NET Framework クラス ライブラリ内の型または型のカテゴリの一覧です。サポートされている書式指定文字列が示されているトピックへのリンクも含まれています。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Note that string formatting is an extensible mechanism that makes it possible to define new format strings for all existing types as well as to define a set of format strings supported by an application-defined type.</source>
          <target state="translated">文字列の書式設定とは拡張可能な機構で、既存のすべての型に対する新しい書式指定文字列を定義できるだけでなく、アプリケーション定義の型でサポートされる一連の書式指定文字列も定義できます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> and <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> interface topics.</source>
          <target state="translated">詳細については、<bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> インターフェイスと <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> インターフェイスに関するトピックを参照してください。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Type or type category</source>
          <target state="translated">型または型のカテゴリ</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>See</source>
          <target state="translated">参照トピック</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Date and time types (<bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept>, <bpt id="p2">[</bpt>DateTimeOffset<ept id="p2">](xref:System.DateTimeOffset)</ept>)</source>
          <target state="translated">日付/時刻型 (<bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept>、<bpt id="p2">[</bpt>DateTimeOffset<ept id="p2">](xref:System.DateTimeOffset)</ept>)</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](standard-datetime.md)</ept>, <bpt id="p2">[</bpt>Custom date and time format strings<ept id="p2">](custom-datetime.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準の日時書式指定文字列<ept id="p1">](standard-datetime.md)</ept>、<bpt id="p2">[</bpt>カスタム日時書式指定文字列<ept id="p2">](custom-datetime.md)</ept></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Enumeration types (all types derived from <bpt id="p1">[</bpt>System.Enum<ept id="p1">](xref:System.Enum)</ept>)</source>
          <target state="translated">列挙型 (<bpt id="p1">[</bpt>System.Enum<ept id="p1">](xref:System.Enum)</ept> から派生したすべての型)</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](enumeration-format.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](enumeration-format.md)</ept></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Numeric types (<bpt id="p1">[</bpt>BigInteger<ept id="p1">](xref:System.Numerics.BigInteger)</ept>, <bpt id="p2">[</bpt>Byte<ept id="p2">](xref:System.Byte)</ept>, <bpt id="p3">[</bpt>Decimal<ept id="p3">](xref:System.Decimal)</ept>, <bpt id="p4">[</bpt>Double<ept id="p4">](xref:System.Double)</ept>, <bpt id="p5">[</bpt>Int16<ept id="p5">](xref:System.Int16)</ept>, <bpt id="p6">[</bpt>Int32<ept id="p6">](xref:System.Int32)</ept>, <bpt id="p7">[</bpt>Int64<ept id="p7">](xref:System.Int64)</ept>, <bpt id="p8">[</bpt>SByte<ept id="p8">](xref:System.SByte)</ept>, <bpt id="p9">[</bpt>Single<ept id="p9">](xref:System.Single)</ept>, <bpt id="p10">[</bpt>UInt16<ept id="p10">](xref:System.UInt16)</ept>, <bpt id="p11">[</bpt>UInt32<ept id="p11">](xref:System.UInt32)</ept>, <bpt id="p12">[</bpt>UInt64<ept id="p12">](xref:System.UInt64)</ept>)</source>
          <target state="translated">数値型 (<bpt id="p1">[</bpt>BigInteger<ept id="p1">](xref:System.Numerics.BigInteger)</ept>、<bpt id="p2">[</bpt>Byte<ept id="p2">](xref:System.Byte)</ept>、<bpt id="p3">[</bpt>Decimal<ept id="p3">](xref:System.Decimal)</ept>、<bpt id="p4">[</bpt>Double<ept id="p4">](xref:System.Double)</ept>、<bpt id="p5">[</bpt>Int16<ept id="p5">](xref:System.Int16)</ept>、<bpt id="p6">[</bpt>Int32<ept id="p6">](xref:System.Int32)</ept>、<bpt id="p7">[</bpt>Int64<ept id="p7">](xref:System.Int64)</ept>、<bpt id="p8">[</bpt>SByte<ept id="p8">](xref:System.SByte)</ept>、<bpt id="p9">[</bpt>Single<ept id="p9">](xref:System.Single)</ept>、<bpt id="p10">[</bpt>UInt16<ept id="p10">](xref:System.UInt16)</ept>、<bpt id="p11">[</bpt>UInt32<ept id="p11">](xref:System.UInt32)</ept>、<bpt id="p12">[</bpt>UInt64<ept id="p12">](xref:System.UInt64)</ept>)</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](standard-numeric.md)</ept>, <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](custom-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](standard-numeric.md)</ept>、<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](custom-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Guid<ept id="p1">](xref:System.Guid)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guid<ept id="p1">](xref:System.Guid)</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Guid.ToString(String)<ept id="p1">](xref:System.Guid.ToString(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guid.ToString(String)<ept id="p1">](xref:System.Guid.ToString(System.String))</ept></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>TimeSpan<ept id="p1">](xref:System.TimeSpan)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>TimeSpan<ept id="p1">](xref:System.TimeSpan)</ept></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard TimeSpan Format Strings<ept id="p1">](standard-timespan.md)</ept>, <bpt id="p2">[</bpt>Custom TimeSpan Format Strings<ept id="p2">](custom-timespan.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準の TimeSpan 書式指定文字列<ept id="p1">](standard-timespan.md)</ept>、<bpt id="p2">[</bpt>カスタム TimeSpan 書式指定文字列<ept id="p2">](custom-timespan.md)</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Escaping Braces</source>
          <target state="translated">エスケープ中かっこ ({})</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Opening and closing braces are interpreted as starting and ending a format item.</source>
          <target state="translated">左中かっこ ({) および右中かっこ (}) は、書式指定項目の開始および終了として解釈されます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Consequently, you must use an escape sequence to display a literal opening brace or closing brace.</source>
          <target state="translated">したがって、左中かっこおよび右中かっこを文字として表示するためには、エスケープ シーケンスを使用する必要があります。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Specify two opening braces ("{{") in the fixed text to display one opening brace ("{"), or two closing braces ("}}") to display one closing brace ("}").</source>
          <target state="translated">左中かっこを&amp;1; つ ("{") 表示するには、左中かっこ&amp;2; つ ("{{") を固定テキストに指定します。また、右中かっこを&amp;1; つ ("}") 表示するには、右中かっこ&amp;2; つ ("}}") を指定します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Braces in a format item are interpreted sequentially in the order they are encountered.</source>
          <target state="translated">書式指定項目に使用されている中かっこは、指定されている順序に従って解釈されます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Interpreting nested braces is not supported.</source>
          <target state="translated">入れ子になった中かっこを解釈する機能はサポートされていません。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The way escaped braces are interpreted can lead to unexpected results.</source>
          <target state="translated">エスケープされた中かっこの解釈によっては、予測しない結果になる場合があります。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For example, consider the format item "{{{0:D}}}", which is intended to display an opening brace, a numeric value formatted as a decimal number, and a closing brace.</source>
          <target state="translated">たとえば、"{{{0:D}}}" という書式指定項目について考えます。この書式指定項目は、左中かっこ、10 進数として書式設定された数値、および右中かっこを表示することを意図しています。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>However, the format item is actually interpreted in the following manner:</source>
          <target state="translated">しかし、この書式指定項目は、実際には、次のように解釈されます。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The first two opening braces ("{{") are escaped and yield one opening brace.</source>
          <target state="translated">最初の&amp;2; つの左中かっこ ("{{") がエスケープされ、左中かっこ&amp;1; つが作成されます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The next three characters ("{0:") are interpreted as the start of a format item.</source>
          <target state="translated">次の&amp;3; 文字 ("{0:") は、書式指定項目の開始として解釈されます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The next character ("D") would be interpreted as the Decimal standard numeric format specifier, but the next two escaped braces ("}}") yield a single brace.</source>
          <target state="translated">次の文字 ("D") は、Decimal 標準数値書式指定子として解釈できますが、エスケープされた次の&amp;2; つの右中かっこ ("}}") からは単一の中かっこが作成されます。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Because the resulting string ("D}") is not a standard numeric format specifier, the resulting string is interpreted as a custom format string that means display the literal string "D}".</source>
          <target state="translated">結果として作成される文字列 ("D}") は、標準数値書式指定子ではないため、リテラル文字列 "D}" の表示を意味するカスタム書式指定文字列として解釈されます。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The last brace ("}") is interpreted as the end of the format item.</source>
          <target state="translated">最後の中かっこ ("}") は、書式指定項目の終わりとして解釈されます。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The final result that is displayed is the literal string, "{D}".</source>
          <target state="translated">最終的には、"{D}" というリテラル文字列が表示されます。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The numeric value that was to be formatted is not displayed.</source>
          <target state="translated">書式設定対象だった数値は、表示されません。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>One way to write your code to avoid misinterpreting escaped braces and format items is to format the braces and format item separately.</source>
          <target state="translated">エスケープした中かっこと書式指定項目とが誤って解釈されないコードを記述するためには、中かっこと書式指定項目を別々に書式設定するという方法があります。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>That is, in the first format operation display a literal opening brace, in the next operation display the result of the format item, then in the final operation display a literal closing brace.</source>
          <target state="translated">つまり、最初の書式設定操作でリテラルの開く中かっこを表示し、次の書式設定操作で書式指定項目の結果を表示し、最後の操作でリテラルの閉じる中かっこを表示します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The following example illustrates this approach.</source>
          <target state="translated">このアプローチの例を次に示します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Processing Order</source>
          <target state="translated">処理の順序</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If the call to the composite formatting method includes an <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument whose value is not null, the runtime calls its <bpt id="p2">[</bpt>IFormatProvider.GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> method to request an <bpt id="p3">[</bpt>ICustomFormatter<ept id="p3">](xref:System.ICustomFormatter)</ept> implementation.</source>
          <target state="translated">複合書式指定メソッドの呼び出しに、値が null でない <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 引数が含まれている場合、ランタイムはその <bpt id="p2">[</bpt>IFormatProvider.GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> メソッドを呼び出して、<bpt id="p3">[</bpt>ICustomFormatter<ept id="p3">](xref:System.ICustomFormatter)</ept> 実装を要求します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If the method is able to return an <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> implementation, it is cached for later use.</source>
          <target state="translated">このメソッドが <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> 実装を返すことができる場合、実装は後で使用できるようにキャッシュされます。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Each value in the parameter list that corresponds to a format item is converted to a string by performing the following steps.</source>
          <target state="translated">書式指定項目に対応するパラメーター リストのそれぞれの値は、次の手順を実行することで文字列に変換されます。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If any condition in the first three steps is true, the string representation of the value is returned in that step, and subsequent steps are not executed.</source>
          <target state="translated">最初の&amp;3; つの手順の条件のいずれかに該当する場合は、その手順で値の文字列形式が返され、後続の手順は実行されません。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If the value to be formatted is <ph id="ph1">`null`</ph>, an empty string ("") is returned.</source>
          <target state="translated">書式設定する値が <ph id="ph1">`null`</ph> の場合は、空の文字列 ("") が返されます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If an <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> implementation is available, the runtime calls its <bpt id="p2">[</bpt>Format<ept id="p2">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> method.</source>
          <target state="translated"><bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> 実装が利用できる場合、ランタイムはその <bpt id="p2">[</bpt>Format<ept id="p2">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>It passes the method the format item's <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> value, if one is present, or <ph id="ph1">`null`</ph> if it is not, along with the <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> implementation.</source>
          <target state="translated">メソッドには書式指定項目の <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> 値 (ある場合) または <ph id="ph1">`null`</ph> (ない場合) と、<bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> 実装が渡されます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If the value implements the <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> interface, the interface's <bpt id="p2">[</bpt>ToString(String,IFormatProvider)<ept id="p2">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> method is called.</source>
          <target state="translated">値が <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> インターフェイスを実装している場合は、インターフェイスの <bpt id="p2">[</bpt>ToString(String,IFormatProvider)<ept id="p2">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The method is passed the <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> value, if one is present in the format item, or <ph id="ph1">`null`</ph> if it is not.</source>
          <target state="translated">メソッドは、<bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> 値 (書式指定項目内に値がある場合) または <ph id="ph1">`null`</ph> (ない場合) を受け取ります。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument is determined as follows:</source>
          <target state="translated"><bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 引数は、次のように判断されます。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For a numeric value, if a composite formatting method with a non-null <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument is called, the runtime requests a <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> object from its <bpt id="p3">[</bpt>IFormatProvider.GetFormat<ept id="p3">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> method.</source>
          <target state="translated">数値の場合、null 以外の <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 引数を持つ複合書式指定メソッドが呼び出されると、ランタイムは <bpt id="p3">[</bpt>IFormatProvider.GetFormat<ept id="p3">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> メソッドから <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> オブジェクトを要求します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If it is unable to supply one, if the value of the argument is <ph id="ph1">`null`</ph>, or if the composite formatting method does not have an <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> parameter, the <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> object for the current thread culture is used.</source>
          <target state="translated">オブジェクトを&amp;1; つも取得できないか、引数の値が <ph id="ph1">`null`</ph> であるか、または複合書式指定メソッドに <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> パラメーターがない場合は、現在のスレッド カルチャの <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> オブジェクトが使用されます。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>For a date and time value, if a composite formatting method with a non-null <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument is called, the runtime requests a <bpt id="p2">[</bpt>DateTimeFormatInfo<ept id="p2">](xref:System.Globalization.DateTimeFormatInfo)</ept> object from its <bpt id="p3">[</bpt>IFormatProvider.GetFormat<ept id="p3">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> method.</source>
          <target state="translated">日付/時刻値の場合、null 以外の <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 引数を持つ複合書式指定メソッドが呼び出されると、ランタイムは <bpt id="p3">[</bpt>IFormatProvider.GetFormat<ept id="p3">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> メソッドから <bpt id="p2">[</bpt>DateTimeFormatInfo<ept id="p2">](xref:System.Globalization.DateTimeFormatInfo)</ept> オブジェクトを要求します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If it is unable to supply one, if the value of the argument is <ph id="ph1">`null`</ph>, or if the composite formatting method does not have an <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> parameter, the <bpt id="p2">[</bpt>DateTimeFormatInfo<ept id="p2">](xref:System.Globalization.DateTimeFormatInfo)</ept> object for the current thread culture is used.</source>
          <target state="translated">オブジェクトを&amp;1; つも取得できないか、引数の値が <ph id="ph1">`null`</ph> であるか、または複合書式指定メソッドに <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> パラメーターがない場合は、現在のスレッド カルチャの <bpt id="p2">[</bpt>DateTimeFormatInfo<ept id="p2">](xref:System.Globalization.DateTimeFormatInfo)</ept> オブジェクトが使用されます。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For objects of other types, if a composite formatting is called with an <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument, its value (including a <ph id="ph1">`null`</ph>, if no <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> object is supplied) is passed directly to the <bpt id="p3">[</bpt>IFormattable.ToString<ept id="p3">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> implementation.</source>
          <target state="translated">他の型のオブジェクトの場合、<bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 引数を持つ複合書式指定が呼び出されると、その値 (<bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> オブジェクトが指定されない場合の <ph id="ph1">`null`</ph> を含む) は <bpt id="p3">[</bpt>IFormattable.ToString<ept id="p3">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> 実装に直接渡されます。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Otherwise, a <bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> object that represents the current thread culture is passed to the <bpt id="p2">[</bpt>IFormattable.ToString<ept id="p2">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> implementation.</source>
          <target state="translated">それ以外の場合は、現在のスレッド カルチャを表す <bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> オブジェクトが <bpt id="p2">[</bpt>IFormattable.ToString<ept id="p2">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> 実装に渡されます。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The type's parameterless <ph id="ph1">`ToString`</ph> method, which either overrides <bpt id="p1">[</bpt>Object.ToString()<ept id="p1">](xref:System.Object.ToString)</ept> or inherits the behavior of its base class, is called.</source>
          <target state="translated"><bpt id="p1">[</bpt>Object.ToString()<ept id="p1">](xref:System.Object.ToString)</ept> をオーバーライドするか、基底クラスの動作を継承する、型のパラメーターなしの <ph id="ph1">`ToString`</ph> メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>In this case, the format string specified by the <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> component in the format item, if it is present, is ignored.</source>
          <target state="translated">この場合、書式指定項目の <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> コンポーネントで指定されている書式指定文字列は、存在していても無視されます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Alignment is applied after the preceding steps have been performed.</source>
          <target state="translated">前の手順が実行された後、アラインメントが適用されます。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Code Examples</source>
          <target state="translated">コード例</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The following example shows one string created using composite formatting and another created using an object's <ph id="ph1">`ToString`</ph> method.</source>
          <target state="translated">複合書式指定を使用して文字列を作成する方法と、オブジェクトの <ph id="ph1">`ToString`</ph> メソッドを使用して文字列を作成する方法を示すコード例を次に示します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Both types of formatting produce equivalent results.</source>
          <target state="translated">この&amp;2; つの書式設定方法では、等価の文字列が作成されます。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Assuming that the current day is a Thursday in May, the value of both strings in the preceding example is <ph id="ph1">`Thursday May`</ph> in the U.S. English culture.</source>
          <target state="translated">現在の曜日が木曜日であり、月が&amp;5; 月であり、現在のカルチャが英語 (U.S.) の場合、上記のコード例で作成される&amp;2; つの文字列の値はどちらも <ph id="ph1">`Thursday May`</ph>です。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept> exposes the same functionality as <bpt id="p2">[</bpt>String.Format<ept id="p2">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept> は、<bpt id="p2">[</bpt>String.Format<ept id="p2">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> と同じ機能を公開します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The only difference between the two methods is that <bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> returns its result as a string, while <bpt id="p2">[</bpt>Console.WriteLine<ept id="p2">](xref:System.Console.WriteLine)</ept> writes the result to the output stream associated with the <bpt id="p3">[</bpt>Console<ept id="p3">](xref:System.Console)</ept> object.</source>
          <target state="translated">これら&amp;2; つのメソッドの唯一の違いは、<bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> が結果を文字列で返すのに対し、<bpt id="p2">[</bpt>Console.WriteLine<ept id="p2">](xref:System.Console.WriteLine)</ept> は、<bpt id="p3">[</bpt>Console<ept id="p3">](xref:System.Console)</ept> オブジェクトに関連付けられた出力ストリームに結果を書き出す点です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept> method to format the value of <ph id="ph1">`MyInt`</ph> to a currency value.</source>
          <target state="translated"><bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept> メソッドを使用して値 <ph id="ph1">`MyInt`</ph> を通貨値として書式設定するコード例を次に示します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The following example demonstrates formatting multiple objects, including formatting one object two different ways.</source>
          <target state="translated">1 つのオブジェクトを&amp;2; つの方法で書式設定する例を含め、複数のオブジェクトを書式設定する例を次に示します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the use of alignment in formatting.</source>
          <target state="translated">書式設定でアラインメントを使用する方法を示す例を次に示します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The arguments that are formatted are placed between vertical bar characters (|) to highlight the resulting alignment.</source>
          <target state="translated">アラインメント結果を強調表示するため、書式が設定される引数を縦棒 (|) で囲んでいます。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept></target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting types<ept id="p1">](formatting-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>型の書式設定<ept id="p1">](formatting-types.md)</ept></target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard date and time format strings<ept id="p1">](standard-datetime.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準の日時書式指定文字列<ept id="p1">](standard-datetime.md)</ept></target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom date and time format strings<ept id="p1">](custom-datetime.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>カスタム日時書式指定文字列<ept id="p1">](custom-datetime.md)</ept></target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Enumeration format strings<ept id="p1">](enumeration-format.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>列挙型書式指定文字列<ept id="p1">](enumeration-format.md)</ept></target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard numeric format strings<ept id="p1">](standard-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](standard-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom numeric format strings<ept id="p1">](custom-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>カスタム数値書式指定文字列<ept id="p1">](custom-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard TimeSpan format strings<ept id="p1">](standard-timespan.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準 TimeSpan 書式指定文字列<ept id="p1">](standard-timespan.md)</ept></target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom TimeSpan format strings<ept id="p1">](custom-timespan.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>カスタム TimeSpan 書式指定文字列<ept id="p1">](custom-timespan.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>