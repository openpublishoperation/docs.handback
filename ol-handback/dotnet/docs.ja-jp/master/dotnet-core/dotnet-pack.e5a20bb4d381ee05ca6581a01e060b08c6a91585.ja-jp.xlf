<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-4a95368" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">227bdaabc88bddbf2014788d72ef87e75f956795</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\dotnet-pack.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">097dcd13d501eebfeb39909d4416659f08ee1145</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4046d6387253100d9858f8cf0a64080aaf5fac0f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-pack command | Microsoft Docs</source>
          <target state="translated">dotnet-pack コマンド | Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-pack command creates NuGet packages for your .NET Core project.</source>
          <target state="translated">dotnet-pack コマンドでは、.NET Core プロジェクトの NuGet パッケージを作成します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-pack, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-pack, CLI, CLI コマンド, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-pack</source>
          <target state="translated">dotnet-pack</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic applies to .NET Core Tools Preview 2.</source>
          <target state="translated">このトピックは .NET Core Tools Preview 2 を対象としています。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For the  Visual Studio 2017 RC - .NET Core Tools Preview 4 version, see the <bpt id="p1">[</bpt>dotnet-pack (Tooling Preview 4)<ept id="p1">](../preview3/tools/dotnet-pack.md)</ept> topic.</source>
          <target state="translated">Visual Studio 2017 RC - .NET Core Tools Preview 4 バージョンについては、「<bpt id="p1">[</bpt>dotnet-pack (Tooling Preview 4)<ept id="p1">](../preview3/tools/dotnet-pack.md)</ept>」トピックを参照してください。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">名前</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet-pack`</ph> - Packs the code into a NuGet package.</source>
          <target state="translated"><ph id="ph1">`dotnet-pack`</ph> - NuGet パッケージにコードをパックします。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet pack`</ph> command builds the project and creates NuGet packages.</source>
          <target state="translated"><ph id="ph1">`dotnet pack`</ph> コマンドはプロジェクトをビルドし、NuGet パッケージを作成します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The result of this operation is two packages with the <ph id="ph1">`nupkg`</ph> extension.</source>
          <target state="translated">この操作の結果として、拡張子が <ph id="ph1">`nupkg`</ph> の&amp;2; つのパッケージが生成されます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>One package contains the code and the other contains the debug symbols.</source>
          <target state="translated">1 つのパッケージにコードが含まれ、もう&amp;1; つにはデバッグ シンボルが含まれます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>NuGet dependencies of the project being packed are added to the nuspec file, so they are able to be resolved when the package is installed.</source>
          <target state="translated">パックされるプロジェクトの NuGet 依存関係が nuspec ファイルに追加されるため、パッケージのインストール時に解決できます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Project-to-project references are not packaged inside the project.</source>
          <target state="translated">プロジェクト間参照はプロジェクト内にはパッケージ化されません。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Currently, you need to have a package per project if you have project-to-project dependencies.</source>
          <target state="translated">現時点では、プロジェクト間の依存関係がある場合は、プロジェクトごとにパッケージが必要になります。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet pack`</ph> by default first builds the project.</source>
          <target state="translated"><ph id="ph1">`dotnet pack`</ph>では、既定で最初にプロジェクトがビルドされます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you wish to avoid this, pass the <ph id="ph1">`--no-build`</ph> option.</source>
          <target state="translated">これを避けたい場合は、<ph id="ph1">`--no-build`</ph> オプションを渡します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This can be useful in Continuous Integration (CI) build scenarios in which you know the code was just previously built, for example.</source>
          <target state="translated">これは、コードが既にビルドされていることがわかっている場合などの継続的インテグレーション (CI) ビルド シナリオで役立ちます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">オプション</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">コマンドの短いヘルプを印刷します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The project to pack.</source>
          <target state="translated">パックするプロジェクトです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It can be either a path to a <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> file or to a directory.</source>
          <target state="translated"><bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> ファイルまたはディレクトリのパスを指定できます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If omitted, it will default to the current directory.</source>
          <target state="translated">省略すると、既定で現在のディレクトリに設定されます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Places the built packages in the directory specified.</source>
          <target state="translated">指定したディレクトリにビルド済みパッケージを配置します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Does not build the project before packing.</source>
          <target state="translated">パッキングの前にプロジェクトをビルドしません。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Places the temporary build artifacts in the specified directory.</source>
          <target state="translated">指定したディレクトリに一時的なビルド成果物を配置します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>By default, they go to the <ph id="ph1">`obj`</ph> directory in the current directory.</source>
          <target state="translated">既定では、現在のディレクトリの <ph id="ph1">`obj`</ph> ディレクトリに配置されます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Configuration to use when building the project.</source>
          <target state="translated">プロジェクトのビルド時に使用する構成です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If not specified, will default to <ph id="ph1">`Debug`</ph>.</source>
          <target state="translated">指定しない場合、既定で <ph id="ph1">`Debug`</ph> に設定されます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Updates the star in <ph id="ph1">`-*`</ph> package version suffix with a specified string.</source>
          <target state="translated">指定された文字列で <ph id="ph1">`-*`</ph> パッケージ バージョン サフィックスのアスタリスクを更新します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Pack the project in the current directory:</source>
          <target state="translated">現在のディレクトリのプロジェクトをパックします。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Pack the app1 project:</source>
          <target state="translated">app1 プロジェクトをパックします。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Pack the project in the current directory and place the resulting packages into the specified folder:</source>
          <target state="translated">プロジェクトを現在のディレクトリにパックし、指定したフォルダーに生成されたパッケージを配置します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Pack the project in the current directory into the specified folder and skip the build step:</source>
          <target state="translated">現在のディレクトリのプロジェクトを指定したフォルダーにパックし、ビルド ステップをスキップします。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Pack the current project and updates the resulting packages version with the given suffix.</source>
          <target state="translated">現在のプロジェクトをパックし、結果のパッケージ バージョンを指定されたサフィックスで更新します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, version <ph id="ph1">`1.0.0-*`</ph> will be updated to <ph id="ph2">`1.0.0-ci-1234`</ph>.</source>
          <target state="translated">たとえば、バージョン <ph id="ph1">`1.0.0-*`</ph> は <ph id="ph2">`1.0.0-ci-1234`</ph> に更新されます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>