<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-4a95368" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f44193d8f7bc9f67acb8b04966e02beca18a0653</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\samples-and-tutorials\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44deb9259d9fc73d24a0a473fc36aa5a6f6d4edc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55593a28655ff64a6ec911908d525066f887a959</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Samples and Tutorials</source>
          <target state="translated">サンプルおよびチュートリアル</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Samples and Tutorials</source>
          <target state="translated">サンプルおよびチュートリアル</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET</source>
          <target state="translated">.NET</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Samples and Tutorials</source>
          <target state="translated">サンプルおよびチュートリアル</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>We've got a rich catalog of samples and tutorials that you can use to learn more about .NET.</source>
          <target state="translated">.NET について詳しく理解できる、サンプルとチュートリアルが豊富なカタログを作成しました。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This area contains samples and tutorials for .NET Core, and the C# Language.</source>
          <target state="translated">この領域には、.NET Core および C# 言語のためのサンプルとチュートリアルが含まれています。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can find great resources to learn the F# programming language on the <bpt id="p1">[</bpt>F# Foundation's site<ept id="p1">](http://fsharp.org/learn.html)</ept>.</source>
          <target state="translated">F# プログラミング言語の学習に最適なリソースは、<bpt id="p1">[</bpt>F# Foundation のサイト<ept id="p1">](http://fsharp.org/learn.html)</ept>にあります。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can find great resources for learning ASP.NET Core on the <bpt id="p1">[</bpt>ASP.NET site<ept id="p1">](https://docs.microsoft.com/aspnet/core/tutorials/)</ept>.</source>
          <target state="translated">ASP.NET Core の学習に最適なリソースは、<bpt id="p1">[</bpt>ASP.NET のサイト<ept id="p1">](https://docs.microsoft.com/aspnet/core/tutorials/)</ept>にあります。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In addition, if you are interested in exploring C# using an online playground, try these <bpt id="p1">[</bpt>interactive tutorials<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=817234)</ept>.</source>
          <target state="translated">さらに、オンライン プレイグラウンドを使用した C# の学習に関心がある場合は、<bpt id="p1">[</bpt>インタラクティブ チュートリアル<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=817234)</ept>をお試しください。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>General</source>
          <target state="translated">全般</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Samples</source>
          <target state="translated">サンプル</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Unit Testing in .NET Core using dotnet test<ept id="p2">](../core/testing/unit-testing-with-dotnet-test.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>dotnet テストを使用した .NET Core での単体テスト<ept id="p2">](../core/testing/unit-testing-with-dotnet-test.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This guide shows how to create an ASP.NET Core web application and the associated unit tests.</source>
          <target state="translated">このガイドでは、ASP.NET Core の Web アプリケーションとそれに関連付けられた単体テストを作成する方法を示します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It will start by creating a simple web service application and then add tests, and continue by creating more tests to guide implementing new features.</source>
          <target state="translated">最初に簡単な Web サービス アプリケーションを作成し、テストを追加した後、さらにテストを作成して新しい機能の実装について紹介します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The completed code is available <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/getting-started/unit-testing-using-dotnet-test)</ept>.</source>
          <target state="translated">完成したコードは <bpt id="p1">[</bpt>GitHub の core-docs リポジトリ<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/getting-started/unit-testing-using-dotnet-test)</ept>にあります。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Tutorials</source>
          <target state="translated">チュートリアル</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Writing .NET Core console apps using the CLI tools: A step-by-step guide<ept id="p2">](../core/tutorials/using-with-xplat-cli.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>CLI ツールを使用する .NET Core コンソール アプリの作成: 手順ガイド<ept id="p2">](../core/tutorials/using-with-xplat-cli.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This guide will show you how to use the .NET Core CLI tooling to build cross-platform console apps.</source>
          <target state="translated">このガイドでは、.NET Core CLI ツールを使用してクロスプラットフォーム コンソール アプリを作成する方法を説明します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It will start with the most basic console app and eventually span multiple projects, including testing.</source>
          <target state="translated">最も基本的なコンソール アプリから始めて、最終的にテストを含む複数プロジェクトまで拡張します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You'll add these features step-by-step, building on what you've already seen and built.</source>
          <target state="translated">既に作成してあるものを基にして、これらの機能を追加していきます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/console-apps)</ept>.</source>
          <target state="translated">作成するコードの完成版は、<bpt id="p1">[</bpt>GitHub の core-docs リポジトリ<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/console-apps)</ept>にあります。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Writing Libraries with Cross Platform Tools<ept id="p2">](../core/tutorials/libraries.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>クロス プラットフォーム ツールによるライブラリの作成<ept id="p2">](../core/tutorials/libraries.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This sample covers how you can write libraries for .NET using cross-platform CLI tools.</source>
          <target state="translated">このサンプルでは、クロスプラットフォーム CLI ツールを使用して .NET 用ライブラリを作成する方法について説明します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>They provide an efficient and low-level experience that works across any supported OS.</source>
          <target state="translated">サポートされる任意の OS で動作する効率的で低レベルのエクスペリエンスを提供します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The completed code is available <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/libraries/frameworks-library)</ept>.</source>
          <target state="translated">完成したコードは <bpt id="p1">[</bpt>GitHub の core-docs リポジトリ<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/libraries/frameworks-library)</ept>にあります。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>C# Language</source>
          <target state="translated">C# 言語</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Samples</source>
          <target state="translated">サンプル</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Iterators<ept id="p2">](../csharp/iterators.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>反復子<ept id="p2">](../csharp/iterators.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This sample demonstrates the syntax and features for creating and consuming C# iterators.</source>
          <target state="translated">このサンプルは、C# 反復子の作成と使用のための構文および機能を示しています。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/iterators)</ept>.</source>
          <target state="translated">作成するコードの完成版は、<bpt id="p1">[</bpt>GitHub の core-docs リポジトリ<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/iterators)</ept>にあります。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Indexers<ept id="p2">](../csharp/indexers.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>インデクサー<ept id="p2">](../csharp/indexers.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This sample demonstrates the syntax and features for C# indexers.</source>
          <target state="translated">このサンプルは、C# インデクサーの構文および機能を示しています。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/indexers)</ept>.</source>
          <target state="translated">作成するコードの完成版は、<bpt id="p1">[</bpt>GitHub の core-docs リポジトリ<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/indexers)</ept>にあります。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Delegates and Events<ept id="p2">](../csharp/delegates-events.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>デリゲートとイベント<ept id="p2">](../csharp/delegates-events.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This sample demonstrates the syntax and features for C# delegates and events.</source>
          <target state="translated">このサンプルは、C# デリゲートとイベントの構文および機能を示しています。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/delegates-and-events)</ept>.</source>
          <target state="translated">作成するコードの完成版は、<bpt id="p1">[</bpt>GitHub の core-docs リポジトリ<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/delegates-and-events)</ept>にあります。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A second sample, focused on events is also in the <bpt id="p1">[</bpt>same repository<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/events)</ept>.</source>
          <target state="translated">イベントに重点を置いた&amp;2; つ目のサンプルも、<bpt id="p1">[</bpt>同じリポジトリ<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/events)</ept>にあります。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Expression Trees<ept id="p2">](../csharp/expression-trees.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>式ツリー<ept id="p2">](../csharp/expression-trees.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This sample demonstrates many of the problems that can be solved by using Expression Trees.</source>
          <target state="translated">このサンプルは、式ツリーを使用して解決できる問題の多くを示しています。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/expression-trees)</ept>.</source>
          <target state="translated">作成するコードの完成版は、<bpt id="p1">[</bpt>GitHub の core-docs リポジトリ<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/expression-trees)</ept>にあります。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>LINQ Samples<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>LINQ のサンプル<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>These series of samples demonstrate many of the features of Language Integrated Query.</source>
          <target state="translated">これらの一連のサンプルは、統合言語クエリ機能の多くを示しています。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/linq/csharp)</ept>.</source>
          <target state="translated">作成するコードの完成版は、<bpt id="p1">[</bpt>GitHub の core-docs リポジトリ<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/linq/csharp)</ept>にあります。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Tutorials</source>
          <target state="translated">チュートリアル</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Console Application<ept id="p2">](../csharp/tutorials/console-teleprompter.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>コンソール アプリケーション<ept id="p2">](../csharp/tutorials/console-teleprompter.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This tutorial demonstrates Console I/O, the structure of a Console application, and the basics of the Task based asynchronous programming model.</source>
          <target state="translated">このチュートリアルでは、コンソール I/O、コンソール アプリケーションの構造、およびタスクベースの非同期プログラミング モデルの基礎について説明します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/getting-started/console-teleprompter)</ept>.</source>
          <target state="translated">作成するコードの完成版は、<bpt id="p1">[</bpt>GitHub の core-docs リポジトリ<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/getting-started/console-teleprompter)</ept>にあります。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>REST Client<ept id="p2">](../csharp/tutorials/console-webapiclient.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>REST クライアント<ept id="p2">](../csharp/tutorials/console-webapiclient.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This tutorial demonstrates web communications, JSON serialization, and Object Oriented features in the C# language.</source>
          <target state="translated">このチュートリアルでは、Web 通信、JSON シリアル化、および C# 言語でのオブジェクト指向の機能について説明します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/getting-started/console-webapiclient)</ept>.</source>
          <target state="translated">作成するコードの完成版は、<bpt id="p1">[</bpt>GitHub の core-docs リポジトリ<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/getting-started/console-webapiclient)</ept>にあります。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Working with LINQ<ept id="p2">](../csharp/tutorials/working-with-linq.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>LINQ の使用<ept id="p2">](../csharp/tutorials/working-with-linq.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This tutorial demonstrates many of the features of LINQ and the language elements that support it.</source>
          <target state="translated">このチュートリアルでは、LINQ の多くの機能と、それをサポートする言語要素について説明します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/getting-started/console-linq)</ept>.</source>
          <target state="translated">作成するコードの完成版は、<bpt id="p1">[</bpt>GitHub の core-docs リポジトリ<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/getting-started/console-linq)</ept>にあります。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Microservices hosted in Docker<ept id="p2">](../csharp/tutorials/microservices.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Docker でホストされているマイクロサービス<ept id="p2">](../csharp/tutorials/microservices.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This tutorial demonstrates building an ASP.NET Core microservice and hosting it in Docker.</source>
          <target state="translated">このチュートリアルでは、ASP.NET Core のマイクロ サービスの構築と、これを Docker でホストする方法について説明します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/getting-started/WeatherMicroservice)</ept>.</source>
          <target state="translated">作成するコードの完成版は、<bpt id="p1">[</bpt>GitHub の core-docs リポジトリ<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/csharp/getting-started/WeatherMicroservice)</ept>にあります。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Deploying to Containers</source>
          <target state="translated">コンテナーへの展開</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Running ASP.NET MVC Applications in Windows Docker Containers<ept id="p2">](../framework/docker/aspnetmvc.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Windows Docker コンテナーでの ASP.NET MVC アプリケーションの実行<ept id="p2">](../framework/docker/aspnetmvc.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This tutorial demonstrates how to deploy an existing ASP.NET MVC application in a Windows Docker Container.</source>
          <target state="translated">このチュートリアルでは、Windows Docker コンテナーで既存の ASP.NET MVC アプリケーションを展開する方法について説明します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/docker/MVCRandomAnswerGenerator)</ept>.</source>
          <target state="translated">作成するコードの完成版は、<bpt id="p1">[</bpt>GitHub の core-docs リポジトリ<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/docker/MVCRandomAnswerGenerator)</ept>にあります。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Running .NET Framework Console Applications in Windows Containers<ept id="p2">](../framework/docker/console.md)</ept><ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><bpt id="p2">[</bpt>Windows コンテナーでの .NET Framework コンソール アプリケーションの実行<ept id="p2">](../framework/docker/console.md)</ept><ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This tutorial demonstrates how to deploy and existing console application in a Windows container.</source>
          <target state="translated">このチュートリアルでは、Windows コンテナーで既存のコンソール アプリケーションを展開する方法について説明します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A finished version of the code you'll build is located <bpt id="p1">[</bpt>in the core-docs repository on GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/docker/ConsoleRandomAnswerGenerator)</ept>.</source>
          <target state="translated">作成するコードの完成版は、<bpt id="p1">[</bpt>GitHub の core-docs リポジトリ<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/docker/ConsoleRandomAnswerGenerator)</ept>にあります。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>