<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b5c25fc" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">beaae03add6f90692189325c0e1cff5ab761abb5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\project-json-to-csproj.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">903208aeebd0af4c5fb9a91e202fb6b6f6850599</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">313ee5e727767a0daeac6af79542c80b5521a6e8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>project.json and csproj comparison - .NET Core | Microsoft Docs</source>
          <target state="translated">project.json と csproj の比較 - .NET Core | Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>See a mapping between project.json and csproj elements.</source>
          <target state="translated">「project.json 要素と csproj 要素の間のマッピング」を参照してください。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>project.json, csproj, .NET Core, MSBuild</source>
          <target state="translated">project.json, csproj, .NET Core, MSBuild</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A mapping between project.json and csproj properties</source>
          <target state="translated">project.json プロパティと csproj プロパティの間のマッピング</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By <bpt id="p1">[</bpt>Nate McMaster<ept id="p1">](http://github.com/natemcmaster)</ept></source>
          <target state="translated">作成者: <bpt id="p1">[</bpt>Nate McMaster<ept id="p1">](http://github.com/natemcmaster)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>During the development of the .NET Core tooling, an important design change was made to no longer support <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> files and instead move the .NET Core projects to the MSBuild/csproj format.</source>
          <target state="translated">.NET Core ツールの開発中、重要なデザイン変更が行われました。<bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> ファイルのサポートが終了となり、代わりに.NET Core プロジェクトが MSBuild/csproj 形式に移行されました。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This article shows how the settings in <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> are represented in the MSBuild/csproj format so you can learn how to use the new format and understand the changes made by the migration tools when you're upgrading your project to the latest version of the tooling.</source>
          <target state="translated">この記事では、<bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> の設定が MSBuild/csproj 形式でどのように表示されるか説明します。最新バージョンのツールにプロジェクトをアップグレードするとき、新しい形式の利用方法を知り、移行ツールで行われた変更を理解できます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The csproj format</source>
          <target state="translated">csproj 形式</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The new format, <ph id="ph1">\*</ph>.csproj, is an XML-based format.</source>
          <target state="translated">新しい形式の <ph id="ph1">\*</ph>.csproj は XML ベースの形式です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following example shows the root node of a .NET Core project using the <ph id="ph1">`Microsoft.NET.Sdk`</ph>.</source>
          <target state="translated">次の例は、<ph id="ph1">`Microsoft.NET.Sdk`</ph> を利用した .NET Core プロジェクトのルート ノードです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For web projects, the SDK used is <ph id="ph1">`Microsoft.NET.Sdk.Web`</ph>.</source>
          <target state="translated">Web プロジェクトの場合、使用される SDK は <ph id="ph1">`Microsoft.NET.Sdk.Web`</ph> です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Common top-level properties</source>
          <target state="translated">一般的な最上位プロパティ</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="translated">name</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>No longer supported.</source>
          <target state="translated">サポート対象から除外されました。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In csproj, this is determined by the project filename, which is defined by the directory name.</source>
          <target state="translated">csproj では、これは、ディレクトリ名により定義される、プロジェクト ファイル名により決定されます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`MyProjectName.csproj`</ph>.</source>
          <target state="translated">たとえば、<ph id="ph1">`MyProjectName.csproj`</ph> のようにします。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>By default, the project filename also specifies the value of the <ph id="ph1">`&lt;AssemblyName&gt;`</ph> and <ph id="ph2">`&lt;PackageId&gt;`</ph> properties.</source>
          <target state="translated">既定では、プロジェクト ファイル名により、<ph id="ph1">`&lt;AssemblyName&gt;`</ph> プロパティと <ph id="ph2">`&lt;PackageId&gt;`</ph> プロパティの値も指定されます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;AssemblyName&gt;`</ph> will have a different value then <ph id="ph2">`&lt;PackageId&gt;`</ph> if <ph id="ph3">`buildOptions\outputName`</ph> property was defined in project.json.</source>
          <target state="translated"><ph id="ph3">`buildOptions\outputName`</ph> プロパティが project.json で定義された場合、<ph id="ph1">`&lt;AssemblyName&gt;`</ph> には別の値 <ph id="ph2">`&lt;PackageId&gt;`</ph> が設定されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Other common build options<ept id="p1">](#other-common-build-options)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>その他の共通ビルド オプション<ept id="p1">](#other-common-build-options)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>version</source>
          <target state="translated">version</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`VersionPrefix`</ph> and <ph id="ph2">`VersionSuffix`</ph> properties:</source>
          <target state="translated"><ph id="ph1">`VersionPrefix`</ph> プロパティおよび <ph id="ph2">`VersionSuffix`</ph> プロパティを使用します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can also use the <ph id="ph1">`Version`</ph> property, but this may override version settings during packaging:</source>
          <target state="translated"><ph id="ph1">`Version`</ph> プロパティを使用することもできますが、これにより、パッケージ処理中にバージョン設定が上書きされることがあります。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Other common root-level options</source>
          <target state="translated">その他の共通のルートレベル オプション</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>frameworks</source>
          <target state="translated">frameworks</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>One target framework</source>
          <target state="translated">1 つのターゲット フレームワーク</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Multiple target frameworks</source>
          <target state="translated">複数のターゲット フレームワーク</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`TargetFrameworks`</ph> property to define your list of target frameworks.</source>
          <target state="translated"><ph id="ph1">`TargetFrameworks`</ph> プロパティを使用し、ターゲット フレームワークの一覧を定義します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Use semi-colon to separate multiple framework values.</source>
          <target state="translated">複数のフレームワーク値を区切るには、セミコロンを使用します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>dependencies</source>
          <target state="translated">依存関係</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the dependency is a <bpt id="p1">**</bpt>project<ept id="p1">**</ept> and not a package, the format is different.</source>
          <target state="translated">依存関係がパッケージではなく、<bpt id="p1">**</bpt>プロジェクト<ept id="p1">**</ept>の場合、形式は異なります。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>dependency type<ept id="p1">](#dependency-type)</ept> section.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>依存関係の種類<ept id="p1">](#dependency-type)</ept>」セクションを参照してください。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>NETStandard.Library metapackage</source>
          <target state="translated">NETStandard.Library のメタパッケージ</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Microsoft.NETCore.App metapackage</source>
          <target state="translated">Microsoft.NETCore.App のメタパッケージ</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Note that the <ph id="ph1">`&lt;RuntimeFrameworkVersion&gt;`</ph> value in the migrated project is determined by the version of the SDK you have installed.</source>
          <target state="translated">移行されたプロジェクトの <ph id="ph1">`&lt;RuntimeFrameworkVersion&gt;`</ph> 値はインストールした SDK のバージョンにより決定されます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Top-level dependencies</source>
          <target state="translated">最上位の依存関係</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Per-framework dependencies</source>
          <target state="translated">フレームワーク別の依存関係</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>imports</source>
          <target state="translated">インポート</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>dependency type</source>
          <target state="translated">依存関係の種類</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>type: project</source>
          <target state="translated">type: project</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This will break the way that <ph id="ph1">`dotnet pack --version-suffix $suffix`</ph> determines the dependency version of a project reference.</source>
          <target state="translated"><ph id="ph1">`dotnet pack --version-suffix $suffix`</ph> がプロジェクト参照の依存関係バージョンを決定する方法が無効になります。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>type: build</source>
          <target state="translated">type: build</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>type: platform</source>
          <target state="translated">type: platform</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>There is no equivalent in csproj.</source>
          <target state="translated">csproj には同等のものがありません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>runtimes</source>
          <target state="translated">runtimes</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Standalone apps (self-contained deployment)</source>
          <target state="translated">スタンドアロン アプリ (自己完結型の展開)</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>In project.json, defining a <ph id="ph1">`runtimes`</ph> section means the app was standalone during build and publish.</source>
          <target state="translated">project.json では、<ph id="ph1">`runtimes`</ph> セクションを定義することは、ビルドと公開の間にアプリがスタンドアロンであったことを意味します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In MSBuild, all projects are <bpt id="p1">*</bpt>portable<ept id="p1">*</ept> during build, but can be published as standalone.</source>
          <target state="translated">MSBuild では、ビルド中、すべてのプロジェクトが<bpt id="p1">*</bpt>移植可能<ept id="p1">*</ept>ですが、スタンドアロンとして公開できます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Self-contained deployments (SCD)<ept id="p1">](../deploying/index.md#self-contained-deployments-scd)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>自己完結型の展開 (SCD)<ept id="p1">](../deploying/index.md#self-contained-deployments-scd)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>tools</source>
          <target state="translated">ツール</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`imports`</ph> on tools are not supported in csproj.</source>
          <target state="translated">ツールの <ph id="ph1">`imports`</ph> は、csproj ではサポートされません。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Tools that need imports will not work with the new <ph id="ph1">`Microsoft.NET.Sdk`</ph>.</source>
          <target state="translated">インポートを必要とするツールは、新しい <ph id="ph1">`Microsoft.NET.Sdk`</ph> で機能しません。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>buildOptions</source>
          <target state="translated">buildOptions</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>See also <bpt id="p1">[</bpt>Files<ept id="p1">](#files)</ept>.</source>
          <target state="translated">「<bpt id="p1">[</bpt>Files<ept id="p1">](#files)</ept>」も参照してください。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>emitEntryPoint</source>
          <target state="translated">emitEntryPoint</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`emitEntryPoint`</ph> was <ph id="ph2">`false`</ph>, the value of <ph id="ph3">`OutputType`</ph> is converted to <ph id="ph4">`Library`</ph>, which is the default value:</source>
          <target state="translated"><ph id="ph1">`emitEntryPoint`</ph> が <ph id="ph2">`false`</ph> であった場合、<ph id="ph3">`OutputType`</ph> の値は <ph id="ph4">`Library`</ph> に変換されます。これが既定値です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>keyFile</source>
          <target state="translated">keyFile</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`keyFile`</ph> element expands to three properties in MSBuild:</source>
          <target state="translated"><ph id="ph1">`keyFile`</ph> 要素は、MSBuild で&amp;3; つのプロパティになりました。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Other common build options</source>
          <target state="translated">その他の共通ビルド オプション</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>packOptions</source>
          <target state="translated">packOptions</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>See also <bpt id="p1">[</bpt>Files<ept id="p1">](#files)</ept>.</source>
          <target state="translated">「<bpt id="p1">[</bpt>Files<ept id="p1">](#files)</ept>」も参照してください。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Common pack options</source>
          <target state="translated">共通パック オプション</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>There is no equivalent for the <ph id="ph1">`owners`</ph> element in MSBuild.</source>
          <target state="translated">MSBuild では、<ph id="ph1">`owners`</ph> 要素に相当するものはありません。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`summary`</ph>, you can use the MSBuild <ph id="ph2">`&lt;Description&gt;`</ph> property, even though the value of <ph id="ph3">`summary`</ph> is not migrated automatically to that property, since that property is mapped to the <bpt id="p1">[</bpt><ph id="ph4">`description`</ph><ept id="p1">](#-other-common-root-level-options)</ept> element.</source>
          <target state="translated"><ph id="ph1">`summary`</ph> の場合、MSBuild の <ph id="ph2">`&lt;Description&gt;`</ph> プロパティを利用できます (ただし、<ph id="ph3">`summary`</ph> の値はそのプロパティに自動的に移行されません)。そのプロパティが <bpt id="p1">[</bpt><ph id="ph4">`description`</ph><ept id="p1">](#-other-common-root-level-options)</ept> 要素にマッピングされているためです。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>scripts</source>
          <target state="translated">スクリプト</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Their equivalent in MSBuild are <bpt id="p1">[</bpt>targets<ept id="p1">](https://docs.microsoft.com/visualstudio/msbuild/msbuild-targets)</ept>:</source>
          <target state="translated">MSBuild でこれに相当するものは<bpt id="p1">[</bpt>ターゲット<ept id="p1">](https://docs.microsoft.com/visualstudio/msbuild/msbuild-targets)</ept>です。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>runtimeOptions</source>
          <target state="translated">runtimeOptions</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>All settings in this group, except for the "System.GC.Server" property, are placed into a file called <bpt id="p1">*</bpt>runtimeconfig.template.json<ept id="p1">*</ept> in the project folder, with options lifted to the root object during the migration process:</source>
          <target state="translated">"System.GC.Server" プロパティを除き、このグループのすべての設定がプロジェクト フォルダーの <bpt id="p1">*</bpt>runtimeconfig.template.json<ept id="p1">*</ept> というファイルに配置されます。オプションは移行プロセス中にルート オブジェクトに移動します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The "System.GC.Server" property is migrated into the csproj file:</source>
          <target state="translated">"System.GC.Server" プロパティは csproj ファイルに移行されます。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>However, you can set all those values in the csproj as well as MSBuild properties:</source>
          <target state="translated">ただし、csproj のこれらの値はすべて MSBuild プロパティと共に設定できます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>shared</source>
          <target state="translated">shared</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Not supported in csproj.</source>
          <target state="translated">csproj ではサポートされていません。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You must instead create include content files in your <bpt id="p1">*</bpt>.nuspec<ept id="p1">*</ept> file.</source>
          <target state="translated">代わりに、<bpt id="p1">*</bpt>.nuspec<ept id="p1">*</ept> ファイルにコンテンツ ファイルを追加する必要があります。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Including content files<ept id="p1">](https://docs.microsoft.com/nuget/schema/nuspec#including-content-files)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>Including content files<ept id="p1">](https://docs.microsoft.com/nuget/schema/nuspec#including-content-files)</ept>」 (コンテンツ ファイルを追加する) を参照してください。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>files</source>
          <target state="translated">ファイル</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>, build and pack could be extended to compile and embed from different folders.</source>
          <target state="translated"><bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> では、ビルドとパックは、複数のフォルダーからのコンパイルと埋め込みまで拡張できます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In MSBuild, this is done using <bpt id="p1">[</bpt>items<ept id="p1">](https://docs.microsoft.com/visualstudio/msbuild/common-msbuild-project-items)</ept>.</source>
          <target state="translated">MSBuild では、これは<bpt id="p1">[</bpt>項目<ept id="p1">](https://docs.microsoft.com/visualstudio/msbuild/common-msbuild-project-items)</ept>の使用により行われます。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The following example is a common conversion:</source>
          <target state="translated">次の例は一般的な変換です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Many of default globbing patterns are added automatically by the .NET Core SDK.</source>
          <target state="translated">既定のグロビング パターンの多くは .NET Core SDK により自動的に追加されます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Default Compile Item Values<ept id="p1">](https://aka.ms/sdkimplicititems)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>Default Compile Item Values<ept id="p1">](https://aka.ms/sdkimplicititems)</ept>」 (既定のコンパイル項目値) を参照してください。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>All MSBuild <ph id="ph1">`ItemGroup`</ph> elements support <ph id="ph2">`Include`</ph>, <ph id="ph3">`Exclude`</ph>, and <ph id="ph4">`Remove`</ph>.</source>
          <target state="translated">すべての MSBuild <ph id="ph1">`ItemGroup`</ph> 要素で <ph id="ph2">`Include`</ph>、<ph id="ph3">`Exclude`</ph>、<ph id="ph4">`Remove`</ph> がサポートされています。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Package layout inside the .nupkg can be modified with <ph id="ph1">`PackagePath="path"`</ph>.</source>
          <target state="translated">.nupkg 内のパッケージ レイアウトは <ph id="ph1">`PackagePath="path"`</ph> で変更できます。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Except for <ph id="ph1">`Content`</ph>, most item groups require explicitly adding <ph id="ph2">`Pack="true"`</ph> to be included in the package.</source>
          <target state="translated"><ph id="ph1">`Content`</ph> を除き、ほとんどの項目グループで、パッケージに <ph id="ph2">`Pack="true"`</ph> を明示的に追加する必要があります。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Content`</ph> will be put in the <bpt id="p1">*</bpt>content<ept id="p1">*</ept> folder in a package since the MSBuild <ph id="ph2">`&lt;IncludeContentInPack&gt;`</ph> property is set to <ph id="ph3">`true`</ph> by default.</source>
          <target state="translated">MSBuild の <ph id="ph2">`&lt;IncludeContentInPack&gt;`</ph> プロパティが既定で <ph id="ph3">`true`</ph> に設定されているため、<ph id="ph1">`Content`</ph> はパッケージの<bpt id="p1">*</bpt>コンテンツ<ept id="p1">*</ept> フォルダーに置かれます。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Including content in a package<ept id="p1">](https://docs.microsoft.com/nuget/schema/msbuild-targets#including-content-in-a-package)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>Including content in a package<ept id="p1">](https://docs.microsoft.com/nuget/schema/msbuild-targets#including-content-in-a-package)</ept>」 (パッケージにコンテンツを追加する) を参照してください。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`PackagePath="%(Identity)"`</ph> is a short way of setting package path to the project-relative file path.</source>
          <target state="translated"><ph id="ph1">`PackagePath="%(Identity)"`</ph> は、パッケージ パスをプロジェクト関連のファイル パスに設定する簡単な方法です。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>testRunner</source>
          <target state="translated">testRunner</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>xUnit</source>
          <target state="translated">xUnit</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>MSTest</source>
          <target state="translated">MSTest</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>project.json reference<ept id="p1">](project-json.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>project.json 参照<ept id="p1">](project-json.md)</ept></target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>High-level overview of changes in CLI<ept id="p1">](../tools/cli-msbuild-architecture.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>CLI の変更の概要<ept id="p1">](../tools/cli-msbuild-architecture.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>