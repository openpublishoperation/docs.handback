<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8eb9274def2683fae20765cbf701b706293744fc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2edd7b1f455399ae3233ab3f1b477f75a54c96fa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40518b9883242ba4484d0e98f199b5aa77e34fb8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>About .NET</source>
          <target state="translated">.NET について</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn about the .NET Platform.</source>
          <target state="translated">.NET プラットフォームについて説明します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>.NET Platform Guide</source>
          <target state="translated">.NET プラットフォーム ガイド</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article is going to be rewritten.</source>
          <target state="translated">この記事は書き直される予定です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Check out the <bpt id="p1">[</bpt>"Getting Started with .NET Core" tutorials<ept id="p1">](../core/getting-started.md)</ept> to learn how to create a simple .NET Core application.</source>
          <target state="translated">「<bpt id="p1">[</bpt>Getting Started with .NET Core<ept id="p1">](../core/getting-started.md)</ept>」 (.NET Core の概要) では、単純な .NET Core アプリケーションを作成する方法を学習できます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It only takes a few minutes to get your first app up and running.</source>
          <target state="translated">最初のアプリを、ほんの数分で起動および実行できます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>.NET is a general purpose development platform.</source>
          <target state="translated">.NET は、汎用的な開発プラットフォームです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It can be used for any kind of app type or workload where general purpose solutions are used.</source>
          <target state="translated">汎用的なソリューションが使用される、あらゆる種類のアプリまたはワークロードに使用できます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It has several key features that are attractive to many developers, including automatic memory management and modern programming languages, that make it easier to efficiently build high-quality applications.</source>
          <target state="translated">自動メモリ管理や、高品質なアプリケーションの効率的な構築が簡単になる最新のプログラミング言語など、多くの開発者にとって魅力的な主要機能が含まれています。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>.NET enables a high-level programming environment with many convenience features, while providing low-level access to native memory and APIs.</source>
          <target state="translated">.NET では、多くの便利な機能によって高度なプログラミング環境が有効になり、同時にネイティブ メモリおよび API へのローレベル アクセスも提供されます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>C#, F# and Visual Basic are popular languages that target and rely on the .NET platform.</source>
          <target state="translated">C#、F#、および Visual Basic は .NET プラットフォームを対象とし、これに依存している一般的な言語です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The .NET languages are known for key features such as their asynchronous programming model, language-integrated query, generic types and type system reflection.</source>
          <target state="translated">.NET 言語は、非同期プログラミング モデル、統合言語クエリ、ジェネリック型および型システム リフレクションといった主要機能が知られています。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The languages also provide great options for both object-oriented and functional programming paradigms.</source>
          <target state="translated">この言語ではオブジェクト指向プログラミングと関数型プログラミングの両方のパラダイムに対して優れたオプションが提供されています。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>There is great diversity across these languages, in philosophy and syntax, but also symmetry provided by a shared type system.</source>
          <target state="translated">これらの言語は考え方と構文に関して多様性に優れているだけでなく、共有型システムによって対称性も提供されています。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This type system is provided by the underlying runtime environment.</source>
          <target state="translated">この型システムは、基になるランタイム環境から提供されています。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>.NET was designed around the idea of a "common language runtime" that could support the requirements of diverse languages -- for example, dynamic and statically typed languages -- and enable interoperability between them.</source>
          <target state="translated">.NET は、動的および静的に型指定された言語など、多様な言語の要件をサポートし、そうした言語の間の相互運用性を有効にする "共通言語ランタイム" の理念に基づいて設計されています。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, it's possible to pass a collection of <ph id="ph1">`People`</ph> objects between languages with no loss in semantics or capability.</source>
          <target state="translated">たとえば、言語間で <ph id="ph1">`People`</ph> オブジェクトのコレクションをセマンティクスや機能を失うことなく渡すことができます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Multiple <bpt id="p1">[</bpt>.NET implementations and products<ept id="p1">](components.md)</ept> are available, based on open <bpt id="p2">[</bpt>.NET Standards<ept id="p2">](https://github.com/dotnet/coreclr/blob/master/Documentation/project-docs/dotnet-standards.md)</ept> that specify the fundamentals of the platform.</source>
          <target state="translated">プラットフォームの基礎を指定するオープンな <bpt id="p2">[</bpt>.NET 標準<ept id="p2">](https://github.com/dotnet/coreclr/blob/master/Documentation/project-docs/dotnet-standards.md)</ept>に基づき、複数の <bpt id="p1">[</bpt>.NET 実装および製品<ept id="p1">](components.md)</ept>を使用できます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>They are separately optimized for different application types (for example, desktop, mobile, gaming, cloud) and support many chips (for example, x86/x64, ARM) and operating systems (for example, Windows, Linux, iOS, Android, macOS).</source>
          <target state="translated">これらはアプリケーションの種類 (デスクトップ、モバイル、ゲーム、クラウドなど) ごとに個別に最適化されており、多くのチップ (x86/x64、ARM など) およびオペレーティング システム (Windows、Linux、iOS、Android、macOS など) をサポートしています。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Open source is also an important part of the .NET ecosystem, with multiple .NET implementations and many libraries available under OSI-approved licenses.</source>
          <target state="translated">.NET エコシステムでは、オープン ソースが重要な要素です。OSI 承認ライセンスによって複数の .NET 実装および多くのライブラリが利用できます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Learn about <bpt id="p1">[</bpt>C#<ept id="p1">](../csharp/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>C#<ept id="p1">](../csharp/index.md)</ept> の詳細情報</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Learn about <bpt id="p1">[</bpt>F#<ept id="p1">](../fsharp/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>F#<ept id="p1">](../fsharp/index.md)</ept> の詳細情報</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Browse the <bpt id="p1">[</bpt>.NET API Library<ept id="p1">](../../api/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>.NET API ライブラリ<ept id="p1">](../../api/index.md)</ept>の参照</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Introduction to the Common Language Runtime<ept id="p1">](https://github.com/dotnet/coreclr/blob/master/Documentation/botr/intro-to-clr.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>共通言語ランタイムの概要<ept id="p1">](https://github.com/dotnet/coreclr/blob/master/Documentation/botr/intro-to-clr.md)</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Fundamentals</source>
          <target state="translated">Fundamentals</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Multi-Language<ept id="p1">**</ept> -- .NET provides a well-defined type system, file formats, runtime, framework and tools that can be used by multiple languages, both for their own execution and also to interoperate with other languages using those same components of .NET as their shared currency.</source>
          <target state="translated"><bpt id="p1">**</bpt>多言語<ept id="p1">**</ept> -- .NET は、複数の言語で使用できる、適切に定義された型システム、ファイル形式、ランタイム、フレームワーク、ツールを提供しています。いずれも、自身で実行するためだけでなく、共有されている通貨と同じ .NET のコンポーネントを使用して他の言語と相互運用するためでもあります。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Managed Memory<ept id="p1">**</ept> -- .NET automatically manages memory for you via a garbage collector.</source>
          <target state="translated"><bpt id="p1">**</bpt>マネージ メモリ<ept id="p1">**</ept> -- .NET はガベージ コレクターを使用して、自動的にメモリを管理します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It ensures that you always reference live objects, guaranteeing that you avoid nasty problems like buffer overruns and access violations.</source>
          <target state="translated">これにより、常にライブ オブジェクトが参照されるため、バッファー オーバーランやアクセス違反といった厄介な問題が回避されることが保証されます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This includes array bounds checking.</source>
          <target state="translated">これには、配列の境界のチェックが含まれます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Type Safety<ept id="p1">**</ept> -- The primary .NET model for functionality and memory representation is "types".</source>
          <target state="translated"><bpt id="p1">**</bpt>タイプ セーフ<ept id="p1">**</ept> -- 機能およびメモリ表現のための主要 .NET モデルが "型" です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Types define shape and optionally behavior.</source>
          <target state="translated">型によって図形と、場合によって動作が定義されます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The runtime ensures that calling code can only operate on types according to their definition and specified visibility of members, providing consistent, reliable and secure results.</source>
          <target state="translated">ランタイムでは、コードの呼び出しが、その定義およびメンバーの指定した参照可能範囲に応じて型に対してのみ動作するようになり、これによって一貫した、信頼性のある安全な結果が提供されます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">フィーチャー</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>User-defined Value Types<ept id="p1">**</ept> -- Value types are a useful category of types since they offer the semantic of "pass by value" instead of "pass by reference", as is the case for classes.</source>
          <target state="translated"><bpt id="p1">**</bpt>ユーザー定義の値型<ept id="p1">**</ept> -- 値型は型の便利なカテゴリです。値型では、クラスの場合と同様に "参照によって渡す" のではなく "値によって渡す" というセマンティックが提供されるためです。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Value types are most obviously usefully for numeric data.</source>
          <target state="translated">値型が特に役に立つのは数値データの場合です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>.NET enables value types for both primitive types, like integers, and user-defined types.</source>
          <target state="translated">.NET では、整数のようなプリミティブ型とユーザー定義型の両方で値型が有効になります。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Generic types<ept id="p1">**</ept> -- Generic types are types with one or more type parameters that can be specified on a per-instantiation basis.</source>
          <target state="translated"><bpt id="p1">**</bpt>ジェネリック型<ept id="p1">**</ept> -- ジェネリック型は、インスタンス化を行うごとに指定できる、1 つ以上の型パラメーターを含む型です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This is useful for many types, which otherwise would  expose contents as the Object type or require multiple type definitions.</source>
          <target state="translated">これは、場合によってはコンテンツがオブジェクト型として公開されたり、型定義が必要になる、多くの型で役に立ちます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example, a given instantiation of a collection type can be made specific to People, GPS locations or strings.</source>
          <target state="translated">たとえば、コレクション型に指定したインスタンス化をユーザー、GPS の位置、または文字列ごとに行うことができます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Reflection<ept id="p1">**</ept> -- .NET defines a metadata format that describes the types within a binary.</source>
          <target state="translated"><bpt id="p1">**</bpt>リフレクション<ept id="p1">**</ept> -- .NET はバイナリ内の型を示すメタデータ形式を定義します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The reflection subsystem uses this data, exposing APIs for both reading and instantiating types at runtime.</source>
          <target state="translated">リフレクション サブシステムはこのデータを使用して、ランタイムに API を型の読み取りおよびインスタンス化の両方のために公開します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This facility is very useful for dynamic scenarios where it is not convenient to know the exact implementation of a program ahead of time.</source>
          <target state="translated">この機能は、事前にプログラムの正確な実装を把握しても役に立たない、動的なシナリオでとても便利です。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Flexible code generation<ept id="p1">**</ept> -- .NET does not prescribe a specific approach to transforming .NET binaries into machine code.</source>
          <target state="translated"><bpt id="p1">**</bpt>柔軟なコード生成<ept id="p1">**</ept> -- .NET では、.NET バイナリをマシン コードに変換するための方法が規定されていません。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Many approaches have been used successfully, including interpretation, just-in-time (JIT) compilation, ahead-of-time (AOT) compilation with JIT fallback and AOT compilation with no JIT fallback.</source>
          <target state="translated">解釈、Just-In-Time (JIT) コンパイル、JIT フォールバックを使用した Ahead Of Time (AOT) コンパイル、JIT フォールバックを使用しない AOT コンパイルを含め、多くの方法が成功しています。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Each of these strategies can be valuable and there are opportunities for using them together.</source>
          <target state="translated">これらの戦略にはそれぞれ価値があり、一緒に使用できる可能性があります。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Cross-platform<ept id="p1">**</ept> -- .NET was intended to be cross platform from its inception.</source>
          <target state="translated"><bpt id="p1">**</bpt>クロスプラットフォーム<ept id="p1">**</ept> -- .NET は当初からクロスプラットフォームになることが想定されていました。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The binary format and the instruction set are operating system, CPU and pointer-size agnostic.</source>
          <target state="translated">バイナリ形式および命令セットはオペレーティング システム、CPU およびポインターのサイズに依存しません。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A given .NET binary built in 2000 to run on a 32-bit Windows machine can run on the ARM64 iOS device on 2016 without modification.</source>
          <target state="translated">32 ビットの Windows マシンで実行するように 2000 で構築された指定の .NET バイナリは、変更なしで 2016 の ARM64 iOS デバイスでも動作します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Open source</source>
          <target state="translated">ソースを開く</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>.NET Core<ept id="p1">](https://github.com/dotnet/core)</ept> and <bpt id="p2">[</bpt>Mono<ept id="p2">](https://github.com/mono/mono)</ept> implementations of .NET are open source, using the MIT license.</source>
          <target state="translated"><bpt id="p1">[</bpt>.NET Core<ept id="p1">](https://github.com/dotnet/core)</ept> と .NET の <bpt id="p2">[</bpt>Mono<ept id="p2">](https://github.com/mono/mono)</ept> の実装は、MIT ライセンスを使用したオープン ソースです。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Documentation uses the <bpt id="p1">[</bpt>Creative Commons CC-BY<ept id="p1">](https://creativecommons.org/licenses/by/4.0/)</ept> license.</source>
          <target state="translated">ドキュメントでは<bpt id="p1">[</bpt>クリエイティブ コモンズ CC-BY<ept id="p1">](https://creativecommons.org/licenses/by/4.0/)</ept> ライセンスを使用しています。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>.NET Core and Mono are sponsored by Microsoft and have many contributors from the community.</source>
          <target state="translated">.NET Core と Mono にはマイクロソフトが出資しており、コミュニティからの多くの共同作成者がいます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>These general purpose runtimes can be used as the basis of academic research or teaching/learning or commercial products.</source>
          <target state="translated">こうした汎用ランタイムは学術研究、教育/学習、商用製品の基礎として使用することができます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Their open nature also means that anyone can contribute back to the upstream product code given a bug or the desire for a new feature.</source>
          <target state="translated">オープンな性質であるということは、誰でもアップストリーム製品コードにバグや新機能の要望を含めることができることを意味します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Projects</source>
          <target state="translated">プロジェクト</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CoreCLR<ept id="p1">](https://github.com/dotnet/coreclr)</ept> - .NET runtime, used by .NET Core.</source>
          <target state="translated"><bpt id="p1">[</bpt>CoreCLR<ept id="p1">](https://github.com/dotnet/coreclr)</ept> - .NET Core で使用される .NET ランタイム。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Mono<ept id="p1">](https://github.com/mono/mono)</ept> - .NET runtime, used by Xamarin and others.</source>
          <target state="translated"><bpt id="p1">[</bpt>Mono<ept id="p1">](https://github.com/mono/mono)</ept> - Xamarin などで使用される .NET ランタイム。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CoreFX<ept id="p1">](https://github.com/dotnet/coreclr)</ept> - .NET class libraries, used by .NET Core and to a degree by Mono via source sharing.</source>
          <target state="translated"><bpt id="p1">[</bpt>CoreFX<ept id="p1">](https://github.com/dotnet/coreclr)</ept> - .NET Core、およびソース共有を介して Mono である程度使用される .NET クラス ライブラリ。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Roslyn<ept id="p1">](https://github.com/dotnet/roslyn)</ept> - C# and Visual Basic compilers, used by most .NET platforms and tools.</source>
          <target state="translated"><bpt id="p1">[</bpt>Roslyn<ept id="p1">](https://github.com/dotnet/roslyn)</ept> - ほとんどの .NET プラットフォームとツールで使用される C# および Visual Basic のコンパイラ。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Exposes APIs for reading, writing and analyzing source code.</source>
          <target state="translated">ソース コードの読み取り、書き込み、分析のために API が公開されます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>F#<ept id="p1">](https://github.com/microsoft/visualfsharp)</ept> - F# compiler.</source>
          <target state="translated"><bpt id="p1">[</bpt>F#<ept id="p1">](https://github.com/microsoft/visualfsharp)</ept> - F# コンパイラ。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Xamarin SDK<ept id="p1">](http://open.xamarin.com)</ept> - Tools and libraries needed to write Android, iOS and macOS in C# and F#.</source>
          <target state="translated"><bpt id="p1">[</bpt>Xamarin SDK<ept id="p1">](http://open.xamarin.com)</ept> - Android、iOS、および macOS の C# および F# を記述するために必要なツールとライブラリ。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Standardized</source>
          <target state="translated">標準化</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>.NET is specified via open <bpt id="p1">[</bpt>ECMA standards<ept id="p1">](https://github.com/dotnet/coreclr/blob/master/Documentation/project-docs/dotnet-standards.md)</ept> that outline its capabilities and that can be used to make a new implementation.</source>
          <target state="translated">.NET はオープンな <bpt id="p1">[</bpt>ECMA 規格<ept id="p1">](https://github.com/dotnet/coreclr/blob/master/Documentation/project-docs/dotnet-standards.md)</ept>によって指定されています。この規格は各機能について概説したもので、新しい実装を行う場合に使用することができます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>There are other .NET implementations, with Mono and Unity being the most popular beyond the Microsoft ones.</source>
          <target state="translated">Microsoft の .NET 以外に、Mono と Unity が最も普及している .NET 実装もあります。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>