<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">066c721e66192658ae841721c90c194686a0730d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\parsing-strings.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d36ff7fc52ae070c4e17cb25cee9c9fcd0f2cf0f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dbb67426c6ff6364f53a2c799526a5c9b7f715b9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Parsing strings in .NET</source>
          <target state="translated">.NET での文字列の解析</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Parsing strings in .NET</source>
          <target state="translated">.NET での文字列の解析</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Parsing strings in .NET</source>
          <target state="translated">.NET での文字列の解析</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A parsing operation converts a string that represents a .NET base type into that base type.</source>
          <target state="translated">解析操作では、.NET の基本データ型を表す文字列をその基本データ型に変換します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, a parsing operation is used to convert a string to a floating-point number or to a date and time value.</source>
          <target state="translated">たとえば解析操作は、文字列を浮動小数点数や日付と時刻の値に変換するために使用します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The method most commonly used to perform a parsing operation is the <ph id="ph1">`Parse`</ph> method.</source>
          <target state="translated">解析操作を実行するには、<ph id="ph1">`Parse`</ph> メソッドがよく使用されます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Because parsing is the reverse operation of formatting (which involves converting a base type into its string representation), many of the same rules and conventions apply.</source>
          <target state="translated">解析は書式設定の逆の操作 (基本データ型のその文字列形式への変換を含む) であるため、多くの同じ規則が適用されます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Just as formatting uses an object that implements the <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> interface to provide culture-sensitive formatting information, parsing also uses an object that implements the <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> interface to determine how to interpret a string representation.</source>
          <target state="translated">カルチャに依存する書式情報を指定するために、書式設定で <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> インターフェイスを実装するオブジェクトを使用するのと同じように、解析でも <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> インターフェイスを実装するオブジェクトを使用し、文字列形式を解釈する方法を決定します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Formatting Types in .NET<ept id="p1">](formatting-types.md)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>.NET での型の書式設定<ept id="p1">](formatting-types.md)</ept>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In This Section</source>
          <target state="translated">このセクションの内容</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Parsing Numeric Strings in .NET<ept id="p1">](parsing-numeric.md)</ept> - Describes how to convert strings into .NET numeric types.</source>
          <target state="translated"><bpt id="p1">[</bpt>.NET での数値文字列の解析<ept id="p1">](parsing-numeric.md)</ept> - 文字列を .NET の数値文字列に変換する方法について説明します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Parsing Date and Time Strings in .NET<ept id="p1">](parsing-datetime.md)</ept> - Describes how to convert strings into .NET <ph id="ph1">`DateTime`</ph> types.</source>
          <target state="translated"><bpt id="p1">[</bpt>.NET での日付と時刻文字列の解析<ept id="p1">](parsing-datetime.md)</ept> - 文字列を .NET の <ph id="ph1">`DateTime`</ph> 型に変換する方法について説明します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Parsing Other Strings in .NET<ept id="p1">](parsing-other.md)</ept> - Describes how to convert strings into <bpt id="p2">[</bpt>Char<ept id="p2">](xref:System.Char)</ept>, <bpt id="p3">[</bpt>Boolean<ept id="p3">](xref:System.Boolean)</ept>, and <bpt id="p4">[</bpt>Enum<ept id="p4">](xref:System.Enum)</ept> types.</source>
          <target state="translated"><bpt id="p1">[</bpt>.NET でのその他の文字列の解析<ept id="p1">](parsing-other.md)</ept> - 文字列を <bpt id="p2">[</bpt>Char<ept id="p2">](xref:System.Char)</ept>、<bpt id="p3">[</bpt>Boolean<ept id="p3">](xref:System.Boolean)</ept>、および <bpt id="p4">[</bpt>Enum<ept id="p4">](xref:System.Enum)</ept> 型に変換する方法について説明します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting Types in .NET<ept id="p1">](formatting-types.md)</ept> - Describes basic formatting concepts like format specifiers and format providers.</source>
          <target state="translated"><bpt id="p1">[</bpt>.NET での型の書式設定<ept id="p1">](formatting-types.md)</ept> - 書式指定子および書式プロバイダーなどの基本書式の概念について説明します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Type Conversion in .NET<ept id="p1">](type-conversion.md)</ept> - Describes how to convert types.</source>
          <target state="translated"><bpt id="p1">[</bpt>.NET での型変換<ept id="p1">](type-conversion.md)</ept> - 型を変換する方法について説明します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Working with Base Types in .NET<ept id="p1">](index.md)</ept> - Describes common operations that you can perform on .NET base types.</source>
          <target state="translated"><bpt id="p1">[</bpt>.NET での基本データ型の操作<ept id="p1">](index.md)</ept> - .NET の基本データ型で実行できる一般的な操作について説明します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>