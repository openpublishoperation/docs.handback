<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e02d18d6566c67c7fff7003671f340f97b0dfce</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\substitutions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e17f09a28978cda51c5e2d38c47aa074460d2cd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81cf9bc6d95a1b4d9c4f62a6fca4c0b461bdd641</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Substitutions in regular expressions</source>
          <target state="translated">正規表現での置換</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Substitutions in regular expressions</source>
          <target state="translated">正規表現での置換</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Substitutions in regular expressions</source>
          <target state="translated">正規表現での置換</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Substitutions are language elements that are recognized only within replacement patterns.</source>
          <target state="translated">置換は、置換パターン内でのみ認識される言語要素です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>They use a regular expression pattern to define all or part of the text that is to replace matched text in the input string.</source>
          <target state="translated">置換では、正規表現パターンを使用して、入力文字列内の一致するテキストを置換するテキストの全体または一部を定義します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The replacement pattern can consist of one or more substitutions along with literal characters.</source>
          <target state="translated">置換パターンは、1 個以上の置換と、リテラル文字で構成されます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Replacement patterns are provided to overloads of the <bpt id="p1">[</bpt>Regex.Replace<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions))</ept> method that have a <bpt id="p2">*</bpt>replacement<ept id="p2">*</ept> parameter and to the <bpt id="p3">[</bpt>Match.Result<ept id="p3">](xref:System.Text.RegularExpressions.Match.Result(System.String))</ept> method.</source>
          <target state="translated">置換パターンは、<bpt id="p2">*</bpt>replacement<ept id="p2">*</ept> パラメーターを指定した <bpt id="p1">[</bpt>Regex.Replace<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions))</ept> メソッドのオーバーロードと、<bpt id="p3">[</bpt>Match.Result<ept id="p3">](xref:System.Text.RegularExpressions.Match.Result(System.String))</ept> メソッドに用意されています。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The methods replace the matched pattern with the pattern that is defined by the <bpt id="p1">*</bpt>replacement<ept id="p1">*</ept> parameter.</source>
          <target state="translated">メソッドは、一致するパターンを、<bpt id="p1">*</bpt>replacement<ept id="p1">*</ept> パラメーターで定義されているパターンで置換します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>.NET defines the substitution elements listed in the following table.</source>
          <target state="translated">.NET では、次の表に示す置換要素が定義されています。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Substitution</source>
          <target state="translated">代入</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt><ph id="ph1">$</ph><ept id="p1">**</ept><bpt id="p2">_</bpt>number<ept id="p2">_</ept></source>
          <target state="translated"><bpt id="p1">**</bpt><ph id="ph1">$</ph><ept id="p1">**</ept><bpt id="p2">_</bpt>number<ept id="p2">_</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Includes the last substring matched by the capturing group that is identified by <bpt id="p1">*</bpt>number<ept id="p1">*</ept>, where <bpt id="p2">*</bpt>number<ept id="p2">*</ept> is a decimal value, in the replacement string.</source>
          <target state="translated"><bpt id="p1">*</bpt>number<ept id="p1">*</ept> で識別されるキャプチャ グループに一致する最後の部分文字列を置換文字列に含めます。<bpt id="p2">*</bpt>number<ept id="p2">*</ept> は 10 進値です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Substituting a numbered group<ept id="p1">](#substituting-a-numbered-group)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>番号付きグループの置換<ept id="p1">](#substituting-a-numbered-group)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>${<ept id="p1">**</ept><bpt id="p2">_</bpt>name<ept id="p2">_</ept><bpt id="p3">**</bpt>}<ept id="p3">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>${<ept id="p1">**</ept><bpt id="p2">_</bpt>name<ept id="p2">_</ept><bpt id="p3">**</bpt>}<ept id="p3">**</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Includes the last substring matched by the named group that is designated by <bpt id="p1">**</bpt>(?&lt;<ept id="p1">**</ept><bpt id="p2">_</bpt>name<ept id="p2">_</ept><bpt id="p3">**</bpt>&gt;)<ept id="p3">**</ept> in the replacement string.</source>
          <target state="translated"><bpt id="p1">**</bpt>(?&lt;<ept id="p1">**</ept><bpt id="p2">_</bpt>name<ept id="p2">_</ept><bpt id="p3">**</bpt>&gt;)<ept id="p3">**</ept> で指定された名前付きグループに一致する最後の部分文字列を置換文字列に含めます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Substituting a named group<ept id="p1">](#substituting-a-named-group)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>名前付きグループの置換<ept id="p1">](#substituting-a-named-group)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Includes a single "$" literal in the replacement string.</source>
          <target state="translated">置換文字列に 1 つの "$" リテラルを含めます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Substituting a "$" character<ept id="p1">](#substituting-a--character)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>"$" 文字の置換<ept id="p1">](#substituting-a--character)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Includes a copy of the entire match in the replacement string.</source>
          <target state="translated">一致した文字列全体のコピーを置換文字列に含めます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Substituting the entire match<ept id="p1">](#substituting-the-entire-match)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>一致した文字列全体の置換<ept id="p1">](#substituting-the-entire-match)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Includes all the text of the input string before the match in the replacement string.</source>
          <target state="translated">一致した場所より前にある入力文字列のテキストすべてを置換文字列に含めます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Substituting the text before the match<ept id="p1">](#substituting-the-text-before-the-match)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>一致した文字列より前にあるテキストの置換<ept id="p1">](#substituting-the-text-before-the-match)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$'<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>$'<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Includes all the text of the input string after the match in the replacement string.</source>
          <target state="translated">一致した場所より後にある入力文字列のテキストすべてを置換文字列に含めます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Substituting the text after the match<ept id="p1">](#substituting-the-text-after-the-match)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>一致した文字列より後にあるテキストの置換<ept id="p1">](#substituting-the-text-after-the-match)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Includes the last group captured in the replacement string.</source>
          <target state="translated">最後にキャプチャされたグループを置換文字列に含めます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Substituting the last captured group<ept id="p1">](#substituting-the-last-captured-group)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>キャプチャされた最後のグループの置換<ept id="p1">](#substituting-the-last-captured-group)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>$_<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>$_<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Includes the entire input string in the replacement string.</source>
          <target state="translated">入力文字列全体を置換文字列に含めます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Substituting the entire input string<ept id="p1">](#substituting-the-entire-input-string)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>入力文字列全体の置換<ept id="p1">](#substituting-the-entire-input-string)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Substitution elements and replacement patterns</source>
          <target state="translated">置換要素と置換パターン</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Substitutions are the only special constructs recognized in a replacement pattern.</source>
          <target state="translated">置換構成体は、置換パターンで認識される特殊な構成体です。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>None of the other regular expression language elements, including character escapes and the period (<bpt id="p1">**</bpt>.<ept id="p1">**</ept>), which matches any character, are supported.</source>
          <target state="translated">文字エスケープやピリオド (<bpt id="p1">**</bpt>.<ept id="p1">**</ept>) など、任意の文字に一致する他の正規表現言語要素はいずれもサポートされていません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Similarly, substitution language elements are recognized only in replacement patterns and are never valid in regular expression patterns.</source>
          <target state="translated">同様に、置換言語要素は置換パターン内でのみ認識され、正規表現パターン内では有効ではありません。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The only character that can appear either in a regular expression pattern or in a substitution is the <bpt id="p1">**</bpt><ph id="ph1">$</ph><ept id="p1">**</ept> character, although it has a different meaning in each context.</source>
          <target state="translated">正規表現パターンと置換の両方に使用できる文字は <bpt id="p1">**</bpt><ph id="ph1">$</ph><ept id="p1">**</ept> 文字だけですが、この文字の意味はコンテキストによって異なります。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>In a regular expression pattern, <bpt id="p1">**</bpt><ph id="ph1">$</ph><ept id="p1">**</ept> is an anchor that matches the end of the string.</source>
          <target state="translated">正規表現パターンでは、<bpt id="p1">**</bpt><ph id="ph1">$</ph><ept id="p1">**</ept> は文字列の末尾に一致するアンカーです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In a replacement pattern, <bpt id="p1">**</bpt><ph id="ph1">$</ph><ept id="p1">**</ept> indicates the beginning of a substitution.</source>
          <target state="translated">置換パターンでは、<bpt id="p1">**</bpt><ph id="ph1">$</ph><ept id="p1">**</ept> は置換の先頭を示します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For functionality similar to a replacement pattern within a regular expression, use a backreference.</source>
          <target state="translated">正規表現の中で置換パターンに似た機能を利用するには、前方参照を使用します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information about backreferences, see <bpt id="p1">[</bpt>Backreference constructs<ept id="p1">](backreference.md)</ept>.</source>
          <target state="translated">前方参照の詳細については、「<bpt id="p1">[</bpt>前方参照構成体<ept id="p1">](backreference.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Substituting a numbered group</source>
          <target state="translated">番号付きグループの置換</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt><ph id="ph1">$</ph><ept id="p1">**</ept><bpt id="p2">_</bpt>number<ept id="p2">_</ept> language element includes the last substring matched by the number capturing group in the replacement string, where <bpt id="p3">*</bpt>number<ept id="p3">*</ept> is the index of the capturing group.</source>
          <target state="translated"><bpt id="p1">**</bpt><ph id="ph1">$</ph><ept id="p1">**</ept><bpt id="p2">_</bpt>number<ept id="p2">_</ept> 言語要素は、number キャプチャ グループに一致する最後の部分文字列を置換文字列に含めます。<bpt id="p3">*</bpt>number<ept id="p3">*</ept> は、キャプチャ グループのインデックスです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>For example, the replacement pattern <ph id="ph1">`$1`</ph> indicates that the matched substring is to be replaced by the first captured group.</source>
          <target state="translated">たとえば、置換パターン <ph id="ph1">`$1`</ph> は、一致した部分文字列がキャプチャされた最初のグループに置き換えられることを示します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For more information about numbered capturing groups, see <bpt id="p1">[</bpt>Grouping constructs in regular expressions<ept id="p1">](grouping.md)</ept>.</source>
          <target state="translated">番号付きキャプチャ グループの詳細については、「<bpt id="p1">[</bpt>正規表現でのグループ化構成体<ept id="p1">](grouping.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>All digits that follow <bpt id="p1">**</bpt><ph id="ph1">$</ph><ept id="p1">**</ept> are interpreted as belonging to the number group.</source>
          <target state="translated"><bpt id="p1">**</bpt><ph id="ph1">$</ph><ept id="p1">**</ept> 以降のすべての数字が、number グループに所属すると解釈されます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If this is not your intent, you can substitute a named group instead.</source>
          <target state="translated">そうしたくない場合は、代わりに名前付きグループを使用できます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, you can use the replacement string <bpt id="p1">**</bpt>${1}1<ept id="p1">**</ept> instead of <bpt id="p2">**</bpt>$11<ept id="p2">**</ept> to define the replacement string as the value of the first captured group along with the number "1".</source>
          <target state="translated">たとえば、<bpt id="p2">**</bpt>$11<ept id="p2">**</ept> の代わりに、置換文字列 <bpt id="p1">**</bpt>${1}1<ept id="p1">**</ept> を使用して、最初のキャプチャ グループの値と数字 "1" を置換文字列として定義できます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Substituting a named group<ept id="p1">](#substituting-a-named-group)</ept>.</source>
          <target state="translated">詳細については、「<bpt id="p1">[</bpt>名前付きグループの置換<ept id="p1">](#substituting-a-named-group)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Capturing groups that are not explicitly assigned names using the <bpt id="p1">**</bpt>(?&lt;<ept id="p1">**</ept>_name-<bpt id="p2">**</bpt>&gt;)<ept id="p2">**</ept> syntax are numbered from left to right starting at one.</source>
          <target state="translated"><bpt id="p1">**</bpt>(?&lt;<ept id="p1">**</ept>_name-<bpt id="p2">**</bpt>&gt;)<ept id="p2">**</ept> 構文を使用して名前が明示的に割り当てられていないキャプチャ グループには、1 から開始する番号が左から右の順に割り当てられます。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Named groups are also numbered from left to right, starting at one greater than the index of the last unnamed group.</source>
          <target state="translated">名前付きグループにも、最後の名前のないグループのインデックスよりも 1 つ大きい数値から開始する番号が、左から右へと順に割り当てられます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For example, in the regular expression <ph id="ph1">`(\w)(?&lt;digit&gt;\d)`</ph>, the index of the <ph id="ph2">`digit`</ph> named group is 2.</source>
          <target state="translated">たとえば、正規表現 <ph id="ph1">`(\w)(?&lt;digit&gt;\d)`</ph> では、<ph id="ph2">`digit`</ph> という名前付きグループのインデックスは 2 です。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>number<ept id="p1">*</ept> does not specify a valid capturing group defined in the regular expression pattern, <bpt id="p2">**</bpt><ph id="ph1">$</ph><ept id="p2">**</ept><bpt id="p3">_</bpt>number<ept id="p3">_</ept> is interpreted as a literal character sequence that is used to replace each match.</source>
          <target state="translated"><bpt id="p1">*</bpt>number<ept id="p1">*</ept> が、正規表現パターンで定義される有効なキャプチャ グループを指定していない場合は、<bpt id="p2">**</bpt><ph id="ph1">$</ph><ept id="p2">**</ept><bpt id="p3">_</bpt>number<ept id="p3">_</ept> が、一致した各文字列の置換に使用されるリテラル文字列シーケンスとして解釈されます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">**</bpt><ph id="ph1">$</ph><ept id="p1">**</ept><bpt id="p2">_</bpt>number<ept id="p2">_</ept> substitution to strip the currency symbol from a decimal value.</source>
          <target state="translated">次の例では、<bpt id="p1">**</bpt><ph id="ph1">$</ph><ept id="p1">**</ept><bpt id="p2">_</bpt>number<ept id="p2">_</ept> の置換を使用して、10 進値から通貨記号を削除しています。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>It removes currency symbols found at the beginning or end of a monetary value, and recognizes the two most common decimal separators ("." and ",").</source>
          <target state="translated">通貨値の先頭または末尾に見つかった通貨記号を削除し、最も一般的な 2 つの桁区切り記号 ("." および ",") を認識します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The regular expression pattern <ph id="ph1">`\p{Sc}*(\s?\d+[.,]?\d*)\p{Sc}*`</ph> is defined as shown in the following table.</source>
          <target state="translated">正規表現パターン <ph id="ph1">`\p{Sc}*(\s?\d+[.,]?\d*)\p{Sc}*`</ph> は、次の表に示すように定義されています。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">パターン</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Match zero or more currency symbol characters.</source>
          <target state="translated">0 個以上の通貨記号文字と一致します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Match zero or one white-space characters.</source>
          <target state="translated">0 個または 1 個の空白文字と一致します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Match one or more decimal digits.</source>
          <target state="translated">1 個以上の 10 進数と一致します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Match zero or one period or comma.</source>
          <target state="translated">0 個または 1 個のピリオドまたはコンマと一致します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Match zero or more decimal digits.</source>
          <target state="translated">0 個以上の 10 進数と一致します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Match a white space followed by one or more decimal digits, followed by zero or one period or comma, followed by zero or more decimal digits.</source>
          <target state="translated">空白の後に 1 つ以上の 10 進数、0 個または 1 個のピリオドまたはコンマ、さらに 0 個以上の 10 進数が続くパターンに一致します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This is the first capturing group.</source>
          <target state="translated">これが最初のキャプチャ グループです。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Because the replacement pattern is <ph id="ph1">`$1`</ph>, the call to the <bpt id="p1">[</bpt>Regex.Replace<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions))</ept> method replaces the entire matched substring with this captured group.</source>
          <target state="translated">置換パターンは <ph id="ph1">`$1`</ph> であるため、<bpt id="p1">[</bpt>Regex.Replace<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions))</ept> メソッドを呼び出すと、一致する部分文字列全体がこのキャプチャされたグループに置き換えられます。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Substituting a named group</source>
          <target state="translated">名前付きのグループの置換</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>${<ept id="p1">**</ept><bpt id="p2">_</bpt>name<ept id="p2">_</ept><bpt id="p3">**</bpt>}<ept id="p3">**</ept> language element substitutes the last substring matched by the <bpt id="p4">*</bpt>name<ept id="p4">*</ept> capturing group, where <bpt id="p5">*</bpt>name<ept id="p5">*</ept> is the name of a capturing group defined by the <bpt id="p6">**</bpt>(?&lt;<ept id="p6">**</ept><bpt id="p7">_</bpt>name<ept id="p7">_</ept><bpt id="p8">**</bpt>&gt;)<ept id="p8">**</ept> language element.</source>
          <target state="translated"><bpt id="p1">**</bpt>${<ept id="p1">**</ept><bpt id="p2">_</bpt>name<ept id="p2">_</ept><bpt id="p3">**</bpt>}<ept id="p3">**</ept> 言語要素は、<bpt id="p4">*</bpt>name<ept id="p4">*</ept> キャプチャ グループに一致する最後の部分文字列を置換します。ここで、<bpt id="p5">*</bpt>name<ept id="p5">*</ept> は <bpt id="p6">**</bpt>(?&lt;<ept id="p6">**</ept><bpt id="p7">_</bpt>name<ept id="p7">_</ept><bpt id="p8">**</bpt>&gt;)<ept id="p8">**</ept> 言語要素で定義されているキャプチャ グループの名前です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information about named capturing groups, see <bpt id="p1">[</bpt>Grouping constructs in regular expressions<ept id="p1">](grouping.md)</ept>.</source>
          <target state="translated">名前付きキャプチャ グループの詳細については、「<bpt id="p1">[</bpt>正規表現でのグループ化構成体<ept id="p1">](grouping.md)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>name<ept id="p1">*</ept> doesn't specify a valid named capturing group defined in the regular expression pattern but consists of digits, <bpt id="p2">**</bpt>${<ept id="p2">**</ept><bpt id="p3">_</bpt>name<ept id="p3">_</ept><bpt id="p4">**</bpt>}<ept id="p4">**</ept> is interpreted as a numbered group.</source>
          <target state="translated"><bpt id="p1">*</bpt>name<ept id="p1">*</ept> が正規表現パターンで定義されている有効な名前付きキャプチャ グループを指定していないものの、数字で構成されている場合、<bpt id="p2">**</bpt>${<ept id="p2">**</ept><bpt id="p3">_</bpt>name<ept id="p3">_</ept><bpt id="p4">**</bpt>}<ept id="p4">**</ept> は番号付きグループとして解釈されます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>name<ept id="p1">*</ept> specifies neither a valid named capturing group nor a valid numbered capturing group defined in the regular expression pattern, <bpt id="p2">**</bpt>${<ept id="p2">**</ept><bpt id="p3">_</bpt>name<ept id="p3">_</ept><bpt id="p4">**</bpt>}<ept id="p4">**</ept> is interpreted as a literal character sequence that is used to replace each match.</source>
          <target state="translated"><bpt id="p1">*</bpt>name<ept id="p1">*</ept> が、正規表現パターンで定義されている有効な名前付きキャプチャ グループも有効な番号付きキャプチャ グループも指定していない場合、<bpt id="p2">**</bpt>${<ept id="p2">**</ept><bpt id="p3">_</bpt>name<ept id="p3">_</ept><bpt id="p4">**</bpt>}<ept id="p4">**</ept> は、一致した各文字列の置換に使用されるリテラル文字列シーケンスとして解釈されます。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">**</bpt>${<ept id="p1">**</ept><bpt id="p2">_</bpt>name<ept id="p2">_</ept><bpt id="p3">**</bpt>}<ept id="p3">**</ept> substitution to strip the currency symbol from a decimal value.</source>
          <target state="translated">次の例では、<bpt id="p1">**</bpt>${<ept id="p1">**</ept><bpt id="p2">_</bpt>name<ept id="p2">_</ept><bpt id="p3">**</bpt>}<ept id="p3">**</ept> の置換を使用して、10 進値から通貨記号を削除しています。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It removes currency symbols found at the beginning or end of a monetary value, and recognizes the two most common decimal separators ("." and ",").</source>
          <target state="translated">通貨値の先頭または末尾に見つかった通貨記号を削除し、最も一般的な 2 つの桁区切り記号 ("." および ",") を認識します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The regular expression pattern <ph id="ph1">`\p{Sc}*(?&lt;amount&gt;\s?\d[.,]?\d*)\p{Sc}*`</ph> is defined as shown in the following table.</source>
          <target state="translated">正規表現パターン <ph id="ph1">`\p{Sc}*(?&lt;amount&gt;\s?\d[.,]?\d*)\p{Sc}*`</ph> は、次の表に示すように定義されています。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">パターン</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Match zero or more currency symbol characters.</source>
          <target state="translated">0 個以上の通貨記号文字と一致します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Match zero or one white-space characters.</source>
          <target state="translated">0 個または 1 個の空白文字と一致します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Match one or more decimal digits.</source>
          <target state="translated">1 個以上の 10 進数と一致します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Match zero or one period or comma.</source>
          <target state="translated">0 個または 1 個のピリオドまたはコンマと一致します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Match zero or more decimal digits.</source>
          <target state="translated">0 個以上の 10 進数と一致します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Match a white space, followed by one or more decimal digits, followed by zero or one period or comma, followed by zero or more decimal digits.</source>
          <target state="translated">空白の後に 1 つ以上の 10 進数、0 個または 1 個のピリオドまたはコンマ、さらに 0 個以上の 10 進数が続くパターンに一致します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This is the capturing group named amount.</source>
          <target state="translated">これは、amount という名前のキャプチャ グループです。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Because the replacement pattern is <ph id="ph1">`${amount}`</ph>, the call to the <bpt id="p1">[</bpt>Regex.Replace<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions))</ept> method replaces the entire matched substring with this captured group.</source>
          <target state="translated">置換パターンは <ph id="ph1">`${amount}`</ph> であるため、<bpt id="p1">[</bpt>Regex.Replace<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions))</ept> メソッドを呼び出すと、一致する部分文字列全体がこのキャプチャされたグループに置き換えられます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Substituting a $ character</source>
          <target state="translated">$ 文字の置換</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt><ph id="ph1">$$</ph><ept id="p1">**</ept> substitution inserts a literal "$" character in the replaced string.</source>
          <target state="translated"><bpt id="p1">**</bpt><ph id="ph1">$$</ph><ept id="p1">**</ept> の置換は、リテラル文字 "$" を置換文字列に挿入します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept> object to determine the current culture's currency symbol and its placement in a currency string.</source>
          <target state="translated">次の例では、<bpt id="p1">[</bpt>NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept> オブジェクトを使用して、現在のカルチャの通貨記号と、通貨文字列内でのその配置を決定します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>It then builds both a regular expression pattern and a replacement pattern dynamically.</source>
          <target state="translated">次に、正規表現パターンと置換パターンの両方を動的に構築します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If the example is run on a computer whose current culture is en-US, it generates the regular expression pattern <ph id="ph1">`\b(\d+)(\.(\d+))?`</ph> and the replacement pattern <ph id="ph2">`$$ $1$2`</ph>.</source>
          <target state="translated">現在 en-US カルチャが使用されているコンピューターでこの例を実行すると、<ph id="ph1">`\b(\d+)(\.(\d+))?`</ph> という正規表現パターンと <ph id="ph2">`$$ $1$2`</ph> という置換パターンが生成されます。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The replacement pattern replaces the matched text with a currency symbol and a space followed by the first and second captured groups.</source>
          <target state="translated">置換パターンは、一致するテキストを、通貨記号と空白に続いて、キャプチャされた最初および 2 番目のグループで置換します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The regular expression pattern <ph id="ph1">`\b(\d+)(\.(\d+))?`</ph> is defined as shown in the following table.</source>
          <target state="translated">正規表現パターン <ph id="ph1">`\b(\d+)(\.(\d+))?`</ph> は、次の表に示すように定義されています。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">パターン</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Start the match at the beginning of a word boundary.</source>
          <target state="translated">ワード境界の先頭から照合を開始します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Match one or more decimal digits.</source>
          <target state="translated">1 個以上の 10 進数と一致します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This is the first capturing group.</source>
          <target state="translated">これが最初のキャプチャ グループです。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Match a period (the decimal separator).</source>
          <target state="translated">ピリオド (桁区切り記号) と一致します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Match one or more decimal digits.</source>
          <target state="translated">1 個以上の 10 進数と一致します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This is the third capturing group.</source>
          <target state="translated">これが 3 番目のキャプチャ グループです。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Match zero or one occurrence of a period followed by one or more decimal digits.</source>
          <target state="translated">ピリオドの後に 1 つ以上の 10 進数が続くパターンの 0 回または 1 回の出現と一致します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>This is the second capturing group.</source>
          <target state="translated">これが 2 番目のキャプチャ グループです。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Substituting the entire match</source>
          <target state="translated">一致した文字列全体の置換</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt><ph id="ph1">$&amp;</ph><ept id="p1">**</ept> substitution includes the entire match in the replacement string.</source>
          <target state="translated"><bpt id="p1">**</bpt><ph id="ph1">$&amp;</ph><ept id="p1">**</ept> の置換は、一致した文字列全体を置換文字列に含めます。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Often, it is used to add a substring to the beginning or end of the matched string.</source>
          <target state="translated">通常は、一致した文字列の先頭または末尾に部分文字列を追加するために使用されます。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">`($&amp;)`</ph> replacement pattern adds parentheses to the beginning and end of each match.</source>
          <target state="translated">たとえば、<ph id="ph1">`($&amp;)`</ph> という置換パターンは、一致した各文字列の先頭と末尾にかっこを追加します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If there is no match, the <bpt id="p1">**</bpt><ph id="ph1">$&amp;</ph><ept id="p1">**</ept> substitution has no effect.</source>
          <target state="translated">一致する文字列がない場合、<bpt id="p1">**</bpt><ph id="ph1">$&amp;</ph><ept id="p1">**</ept> の置換は無効です。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">**</bpt><ph id="ph1">$&amp;</ph><ept id="p1">**</ept> substitution to add quotation marks at the beginning and end of book titles stored in a string array.</source>
          <target state="translated"><bpt id="p1">**</bpt><ph id="ph1">$&amp;</ph><ept id="p1">**</ept> の置換を使用して、文字列配列に格納されている書籍タイトルの先頭と末尾に引用符を追加する例を次に示します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The regular expression pattern <ph id="ph1">`^(\w+\s?)+$`</ph> is defined as shown in the following table.</source>
          <target state="translated">正規表現パターン <ph id="ph1">`^(\w+\s?)+$`</ph> は、次の表に示すように定義されています。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">パターン</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Start the match at the beginning of the input string.</source>
          <target state="translated">入力文字列の先頭から照合を開始します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Match the pattern of one or more word characters followed by zero or one white-space characters one or more times.</source>
          <target state="translated">1 つ以上の単語文字の後に 0 個または 1 個の空白文字が 1 回以上続くパターンに一致します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Match the end of the input string.</source>
          <target state="translated">入力文字列の末尾と一致します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`"$&amp;"`</ph> replacement pattern adds a literal quotation mark to the beginning and end of each match.</source>
          <target state="translated"><ph id="ph1">`"$&amp;"`</ph> という置換パターンは、各一致文字列の先頭と末尾にリテラルの一重引用符を追加します。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Substituting the text before the match</source>
          <target state="translated">一致した文字列より前にあるテキストの置換</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt><ph id="ph1">$</ph><ph id="ph2">`** substitution replaces the matched string with the entire input string before the match. That is, it duplicates the input string up to the match while removing the matched text. Any text that follows the matched text is unchanged in the result string. If there are multiple matches in an input string, the replacement text is derived from the original input string, rather than from the string in which text has been replaced by earlier matches. (The example provides an illustration.) If there is no match, the **$`</ph><ept id="p1">**</ept> substitution has no effect.</source>
          <target state="translated"><bpt id="p1">**</bpt><ph id="ph1">$</ph><ph id="ph2">`** substitution replaces the matched string with the entire input string before the match. That is, it duplicates the input string up to the match while removing the matched text. Any text that follows the matched text is unchanged in the result string. If there are multiple matches in an input string, the replacement text is derived from the original input string, rather than from the string in which text has been replaced by earlier matches. (The example provides an illustration.) If there is no match, the **$`</ph><ept id="p1">**</ept> の置換は無効です。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The following example uses the regular expression pattern <ph id="ph1">`\d+`</ph> to match a sequence of one or more decimal digits in the input string.</source>
          <target state="translated">次の例では、正規表現パターン <ph id="ph1">`\d+`</ph> を使用して、入力文字列内の 1 つ以上の 10 進数のシーケンスを照合します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The replacement string <bpt id="p1">**</bpt><ph id="ph1">$`</ph><ept id="p1">**</ept> replaces these digits with the text that precedes the match.</source>
          <target state="translated">置換文字列 <bpt id="p1">**</bpt><ph id="ph1">$`</ph><ept id="p1">**</ept> は、これらの数字を、一致文字列より前にあるテキストで置換します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>In this example, the input string <ph id="ph1">`"aa1bb2cc3dd4ee5"`</ph> contains five matches.</source>
          <target state="translated">この例では、入力文字列 <ph id="ph1">`"aa1bb2cc3dd4ee5"`</ph> に 5 つの一致が含まれています。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The following table illustrates how the $` substitution causes the regular expression engine to replace each match in the input string.</source>
          <target state="translated">$` の置換によって、正規表現エンジンが入力文字列の各一致文字列をどのように置換するかを、次の表に示します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Inserted text is shown in bold in the Result string column.</source>
          <target state="translated">挿入されたテキストは結果文字列の列に太字で示されています。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Match</source>
          <target state="translated">一致したもの</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Position</source>
          <target state="translated">位置</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>String before match</source>
          <target state="translated">一致した場所より前にある文字列</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Result string</source>
          <target state="translated">結果文字列</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>aa</source>
          <target state="translated">aa</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>aa<bpt id="p1">**</bpt>aa<ept id="p1">**</ept>bb2cc3dd4ee5</source>
          <target state="translated">aa<bpt id="p1">**</bpt>aa<ept id="p1">**</ept>bb2cc3dd4ee5</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>aa1bb</source>
          <target state="translated">aa1bb</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>aaaabb<bpt id="p1">**</bpt>aa1bb<ept id="p1">**</ept>cc3dd4ee5</source>
          <target state="translated">aaaabb<bpt id="p1">**</bpt>aa1bb<ept id="p1">**</ept>cc3dd4ee5</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>aa1bb2cc</source>
          <target state="translated">aa1bb2cc</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>aaaabbaa1bbcc<bpt id="p1">**</bpt>aa1bb2cc<ept id="p1">**</ept>dd4ee5</source>
          <target state="translated">aaaabbaa1bbcc<bpt id="p1">**</bpt>aa1bb2cc<ept id="p1">**</ept>dd4ee5</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>11</source>
          <target state="translated">11</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>aa1bb2cc3dd</source>
          <target state="translated">aa1bb2cc3dd</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>aaaabbaa1bbccaa1bb2ccdd<bpt id="p1">**</bpt>aa1bb2cc3dd<ept id="p1">**</ept>ee5</source>
          <target state="translated">aaaabbaa1bbccaa1bb2ccdd<bpt id="p1">**</bpt>aa1bb2cc3dd<ept id="p1">**</ept>ee5</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>14</source>
          <target state="translated">14</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>aa1bb2cc3dd4ee</source>
          <target state="translated">aa1bb2cc3dd4ee</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>aaaabbaa1bbccaa1bb2ccddaa1bb2cc3ddee <bpt id="p1">**</bpt>aa1bb2cc3dd4ee<ept id="p1">**</ept></source>
          <target state="translated">aaaabbaa1bbccaa1bb2ccddaa1bb2cc3ddee <bpt id="p1">**</bpt>aa1bb2cc3dd4ee<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Substituting the text after the match</source>
          <target state="translated">一致した文字列より後にあるテキストの置換</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>$'<ept id="p1">**</ept> substitution replaces the matched string with the entire input string after the match.</source>
          <target state="translated"><bpt id="p1">**</bpt>$'<ept id="p1">**</ept> の置換は、一致した場所より後にある入力文字列全体で一致した文字列を置換します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>That is, it duplicates the input string after the match while removing the matched text.</source>
          <target state="translated">つまり、一致した場所より後にある入力文字列を複製し、一致したテキストを削除します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Any text that precedes the matched text is unchanged in the result string.</source>
          <target state="translated">結果文字列では、一致したテキストより前にあるテキストは変更されません。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If there is no match, the <bpt id="p1">**</bpt>$'<ept id="p1">**</ept> substitution has no effect.</source>
          <target state="translated">一致する文字列がない場合、<bpt id="p1">**</bpt>$'<ept id="p1">**</ept> の置換は無効です。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The following example uses the regular expression pattern <ph id="ph1">`\d+`</ph> to match a sequence of one or more decimal digits in the input string.</source>
          <target state="translated">次の例では、正規表現パターン <ph id="ph1">`\d+`</ph> を使用して、入力文字列内の 1 つ以上の 10 進数のシーケンスを照合します。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The replacement string <bpt id="p1">**</bpt>$'<ept id="p1">**</ept> replaces these digits with the text that follows the match.</source>
          <target state="translated">置換文字列 <bpt id="p1">**</bpt>$'<ept id="p1">**</ept> は、これらの数字を、一致文字列に続くテキストで置換します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>In this example, the input string <ph id="ph1">`"aa1bb2cc3dd4ee5"`</ph> contains five matches.</source>
          <target state="translated">この例では、入力文字列 <ph id="ph1">`"aa1bb2cc3dd4ee5"`</ph> に 5 つの一致が含まれています。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The following table illustrates how the <bpt id="p1">**</bpt>$'<ept id="p1">**</ept> substitution causes the regular expression engine to replace each match in the input string.</source>
          <target state="translated"><bpt id="p1">**</bpt>$'<ept id="p1">**</ept> の置換によって、正規表現エンジンが入力文字列の各一致文字列をどのように置換するかを、次の表に示します。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Inserted text is shown in bold in the Result string column.</source>
          <target state="translated">挿入されたテキストは結果文字列の列に太字で示されています。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Match</source>
          <target state="translated">一致したもの</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Position</source>
          <target state="translated">位置</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>String before match</source>
          <target state="translated">一致した場所より前にある文字列</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Result string</source>
          <target state="translated">結果文字列</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>bb2cc3dd4ee5</source>
          <target state="translated">bb2cc3dd4ee5</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>aa<bpt id="p1">**</bpt>bb2cc3dd4ee5<ept id="p1">**</ept>bb2cc3dd4ee5</source>
          <target state="translated">aa<bpt id="p1">**</bpt>bb2cc3dd4ee5<ept id="p1">**</ept>bb2cc3dd4ee5</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>cc3dd4ee5</source>
          <target state="translated">cc3dd4ee5</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>aabb2cc3dd4ee5bb<bpt id="p1">**</bpt>cc3dd4ee5<ept id="p1">**</ept>cc3dd4ee5</source>
          <target state="translated">aabb2cc3dd4ee5bb<bpt id="p1">**</bpt>cc3dd4ee5<ept id="p1">**</ept>cc3dd4ee5</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>8</source>
          <target state="translated">8</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>dd4ee5</source>
          <target state="translated">dd4ee5</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>aabb2cc3dd4ee5bbcc3dd4ee5cc<bpt id="p1">**</bpt>dd4ee5<ept id="p1">**</ept>dd4ee5</source>
          <target state="translated">aabb2cc3dd4ee5bbcc3dd4ee5cc<bpt id="p1">**</bpt>dd4ee5<ept id="p1">**</ept>dd4ee5</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>11</source>
          <target state="translated">11</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>ee5</source>
          <target state="translated">ee5</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>aabb2cc3dd4ee5bbcc3dd4ee5ccdd4ee5dd<bpt id="p1">**</bpt>ee5<ept id="p1">**</ept>ee5</source>
          <target state="translated">aabb2cc3dd4ee5bbcc3dd4ee5ccdd4ee5dd<bpt id="p1">**</bpt>ee5<ept id="p1">**</ept>ee5</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>14</source>
          <target state="translated">14</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Empty<ept id="p1">](xref:System.String.Empty)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Empty<ept id="p1">](xref:System.String.Empty)</ept></target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>aabb2cc3dd4ee5bbcc3dd4ee5ccdd4ee5ddee5ee</source>
          <target state="translated">aabb2cc3dd4ee5bbcc3dd4ee5ccdd4ee5ddee5ee</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Substituting the last captured group</source>
          <target state="translated">キャプチャされた最後のグループの置換</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt><ph id="ph1">$+</ph><ept id="p1">**</ept> substitution replaces the matched string with the last captured group.</source>
          <target state="translated"><bpt id="p1">**</bpt><ph id="ph1">$+</ph><ept id="p1">**</ept> の置換は、キャプチャされた最後のグループで一致した文字列を置換します。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>If there are no captured groups or if the value of the last captured group is <bpt id="p1">[</bpt>String.Empty<ept id="p1">](xref:System.String.Empty)</ept>, the <bpt id="p2">**</bpt><ph id="ph1">$+</ph><ept id="p2">**</ept> substitution has no effect.</source>
          <target state="translated">キャプチャされたグループがない場合、またはキャプチャされた最後のグループの値が <bpt id="p1">[</bpt>String.Empty<ept id="p1">](xref:System.String.Empty)</ept> の場合、<bpt id="p2">**</bpt><ph id="ph1">$+</ph><ept id="p2">**</ept> の置換は無効です。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The following example identifies duplicate words in a string and uses the <bpt id="p1">**</bpt><ph id="ph1">$+</ph><ept id="p1">**</ept> substitution to replace them with a single occurrence of the word.</source>
          <target state="translated">次の例では、文字列内の重複する単語を識別し、<bpt id="p1">**</bpt><ph id="ph1">$+</ph><ept id="p1">**</ept> の置換を使用して、これらの単語をその単語 1 つに置換します。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>RegexOptions.IgnoreCase<ept id="p1">](xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase)</ept> option is used to ensure that words that differ in case but that are otherwise identical are considered duplicates.</source>
          <target state="translated"><bpt id="p1">[</bpt>RegexOptions.IgnoreCase<ept id="p1">](xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase)</ept> オプションを使用すると、大文字と小文字の違いを除いて同一である単語が重複と見なされるようになります。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The regular expression pattern <ph id="ph1">`\b(\w+)\s\1\b`</ph> is defined as shown in the following table.</source>
          <target state="translated">正規表現パターン <ph id="ph1">`\b(\w+)\s\1\b`</ph> は、次の表に示すように定義されています。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">パターン</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Begin the match at a word boundary.</source>
          <target state="translated">ワード境界から照合を開始します。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Match one or more word characters.</source>
          <target state="translated">1 つ以上の単語文字に一致します。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>This is the first capturing group.</source>
          <target state="translated">これが最初のキャプチャ グループです。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Match a white-space character.</source>
          <target state="translated">空白文字と一致します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Match the first captured group.</source>
          <target state="translated">キャプチャされた最初のグループと一致します。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>End the match at a word boundary.</source>
          <target state="translated">ワード境界で照合を終了します。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Substituting the entire input string</source>
          <target state="translated">入力文字列全体の置換</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>$_<ept id="p1">**</ept> substitution replaces the matched string with the entire input string.</source>
          <target state="translated"><bpt id="p1">**</bpt>$_<ept id="p1">**</ept> の置換は、一致した文字列を入力文字列全体で置換します。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>That is, it removes the matched text and replaces it with the entire string, including the matched text.</source>
          <target state="translated">つまり、一致したテキストを削除し、一致したテキストを含む文字列全体でそのテキストを置換します。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The following example matches one or more decimal digits in the input string.</source>
          <target state="translated">次の例では、入力文字列の 1 つ以上の 10 進数を照合します。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">**</bpt>$_<ept id="p1">**</ept> substitution to replace them with the entire input string.</source>
          <target state="translated"><bpt id="p1">**</bpt>$_<ept id="p1">**</ept> の置換を使用して、これらを入力文字列全体で置換します。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>In this example, the input string <ph id="ph1">`"ABC123DEF456"`</ph> contains two matches.</source>
          <target state="translated">この例では、入力文字列 <ph id="ph1">`"ABC123DEF456"`</ph> に 2 つの一致が含まれています。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The following table illustrates how the <bpt id="p1">**</bpt>$_<ept id="p1">**</ept> substitution causes the regular expression engine to replace each match in the input string.</source>
          <target state="translated"><bpt id="p1">**</bpt>$_<ept id="p1">**</ept> の置換によって、正規表現エンジンが入力文字列の各一致文字列をどのように置換するかを、次の表に示します。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Inserted text is shown in bold in the Result string column.</source>
          <target state="translated">挿入されたテキストは結果文字列の列に太字で示されています。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Match</source>
          <target state="translated">一致したもの</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Position</source>
          <target state="translated">位置</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>String before match</source>
          <target state="translated">一致した場所より前にある文字列</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Result string</source>
          <target state="translated">結果文字列</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>3</source>
          <target state="translated">3</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>123</source>
          <target state="translated">123</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>ABC<bpt id="p1">**</bpt>ABC123DEF456<ept id="p1">**</ept>DEF456</source>
          <target state="translated">ABC<bpt id="p1">**</bpt>ABC123DEF456<ept id="p1">**</ept>DEF456</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>5</source>
          <target state="translated">5</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>456</source>
          <target state="translated">456</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>ABCABC123DEF456DEF<bpt id="p1">**</bpt>ABC123DEF456<ept id="p1">**</ept></source>
          <target state="translated">ABCABC123DEF456DEF<bpt id="p1">**</bpt>ABC123DEF456<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Regular expression language - quick reference<ept id="p1">](quick-ref.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>正規表現言語 - クイック リファレンス<ept id="p1">](quick-ref.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>