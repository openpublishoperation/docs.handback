<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa15daee8f3b6ddcc137356896a20cf82e0cc1d0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\modifiers\async.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1ab8ef0c035c8811d18da1aed77b5aeec05b063</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">03e16aa82c89d69af075f059f4d5c27987d48b2f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Async (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Async (Visual Basic) |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Async (Visual Basic)</source>
          <target state="translated">Async (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Async`</ph> modifier indicates that the method or <bpt id="p1">[</bpt>lambda expression<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md)</ept> that it modifies is asynchronous.</source>
          <target state="translated"><ph id="ph1">`Async`</ph>修飾子をメソッドまたは<bpt id="p1">[</bpt>ラムダ式<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md)</ept>が非同期で修飾します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Such methods are referred to as <bpt id="p1">*</bpt>async methods<ept id="p1">*</ept>.</source>
          <target state="translated">このようなメソッドは、参照として<bpt id="p1">*</bpt>非同期メソッド<ept id="p1">*</ept>します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>An async method provides a convenient way to do potentially long-running work without blocking the caller's thread.</source>
          <target state="translated">非同期メソッドは、呼び出し元のスレッドをブロックすることなく、実行に時間のかかる可能性のある処理を行うことができる、便利な方法です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The caller of an async method can resume its work without waiting for the async method to finish.</source>
          <target state="translated">非同期メソッドの呼び出し元は、非同期メソッドの完了を待たずに作業を再開できます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Async`</ph> and <ph id="ph2">`Await`</ph> keywords were introduced in Visual Studio 2012.</source>
          <target state="translated"><ph id="ph1">`Async`</ph> キーワードおよび <ph id="ph2">`Await`</ph> キーワードは、Visual Studio 2012 で導入されました。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For an introduction to async programming, see <bpt id="p1">[</bpt>Asynchronous Programming with Async and Await<ept id="p1">](../../../visual-basic/programming-guide/concepts/async/index.md)</ept>.</source>
          <target state="translated">非同期のプログラミングの概要については、次を参照してください。 <bpt id="p1">[</bpt>Async および Await を使用した非同期プログラミング<ept id="p1">](../../../visual-basic/programming-guide/concepts/async/index.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following example shows the structure of an async method.</source>
          <target state="translated">次の例は、非同期メソッドの構造を示しています。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>By convention, async method names end in "Async."</source>
          <target state="translated">規則により、非同期メソッドの名前の末尾は "Async" になります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Typically, a method modified by the <ph id="ph1">`Async`</ph> keyword contains at least one <bpt id="p1">[</bpt>Await<ept id="p1">](../../../visual-basic/language-reference/modifiers/async.md)</ept> expression or statement.</source>
          <target state="translated">通常で修飾されているメソッド、<ph id="ph1">`Async`</ph>キーワードは、少なくとも&amp;1; つを含む<bpt id="p1">[</bpt>Await<ept id="p1">](../../../visual-basic/language-reference/modifiers/async.md)</ept>式またはステートメントです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The method runs synchronously until it reaches the first <ph id="ph1">`Await`</ph>, at which point it suspends until the awaited task completes.</source>
          <target state="translated">メソッドは、最初の <ph id="ph1">`Await`</ph> に到達するまで同期的に実行されますが、この時点で、待機していたタスクが完了するまで中断されます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In the meantime, control is returned to the caller of the method.</source>
          <target state="translated">その間、コントロールはメソッドの呼び出し元に戻されます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the method doesn’t contain an <ph id="ph1">`Await`</ph> expression or statement, the method isn’t suspended and executes as a synchronous method does.</source>
          <target state="translated">メソッドに <ph id="ph1">`Await`</ph> 式またはステートメントが含まれていない場合、メソッドは中断されず、同期メソッドのように実行されます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A compiler warning alerts you to any async methods that don't contain <ph id="ph1">`Await`</ph> because that situation might indicate an error.</source>
          <target state="translated"><ph id="ph1">`Await`</ph> が含まれていない非同期メソッドが存在する場合は、その状態がエラーを示す可能性があるため、コンパイラによって警告が通知されます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>compiler error<ept id="p1">](../../../visual-basic/language-reference/error-messages/because-this-call-is-not-awaited-the-current-method-continues-to-run.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。、<bpt id="p1">[</bpt>コンパイラ エラー<ept id="p1">](../../../visual-basic/language-reference/error-messages/because-this-call-is-not-awaited-the-current-method-continues-to-run.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Async`</ph> keyword is an unreserved keyword.</source>
          <target state="translated"><ph id="ph1">`Async`</ph> キーワードは、予約されていないキーワードです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>It is a keyword when it modifies a method or a lambda expression.</source>
          <target state="translated">メソッドまたはラムダ式を修飾する場合にキーワードとなります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In all other contexts, it is interpreted as an identifier.</source>
          <target state="translated">それ以外の場合は、識別子として解釈されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Return Types</source>
          <target state="translated">戻り値の型</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An async method is either a <bpt id="p1">[</bpt>Sub<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/sub-procedures.md)</ept> procedure, or a <bpt id="p2">[</bpt>Function<ept id="p2">](../../../visual-basic/programming-guide/language-features/procedures/function-procedures.md)</ept> procedure that has a return type of &lt;xref:System.Threading.Tasks.Task&gt; or &lt;xref:System.Threading.Tasks.Task%601&gt;.</source>
          <target state="translated">非同期のメソッドは、いずれか、 <bpt id="p1">[</bpt>Sub<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/sub-procedures.md)</ept>プロシージャ、または<bpt id="p2">[</bpt>関数<ept id="p2">](../../../visual-basic/programming-guide/language-features/procedures/function-procedures.md)</ept>&lt;xref:System.Threading.Tasks.Task&gt;または&lt;xref:System.Threading.Tasks.Task%601&gt;.&lt;/xref:System.Threading.Tasks.Task%601&gt;&lt;/xref:System.Threading.Tasks.Task&gt;の戻り値の型を含むプロシージャ</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The method cannot declare any <bpt id="p1">[</bpt>ByRef<ept id="p1">](../../../visual-basic/language-reference/modifiers/byref.md)</ept> parameters.</source>
          <target state="translated">メソッドを宣言できません<bpt id="p1">[</bpt>ByRef<ept id="p1">](../../../visual-basic/language-reference/modifiers/byref.md)</ept>パラメーター。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You specify <ph id="ph1">`Task(Of TResult)`</ph> for the return type of an async method if the <bpt id="p1">[</bpt>Return<ept id="p1">](../../../visual-basic/language-reference/statements/return-statement.md)</ept> statement of the method has an operand of type TResult.</source>
          <target state="translated">指定した<ph id="ph1">`Task(Of TResult)`</ph>、非同期メソッドの戻り値の型の場合、<bpt id="p1">[</bpt>返す<ept id="p1">](../../../visual-basic/language-reference/statements/return-statement.md)</ept>メソッドのステートメントに TResult 型のオペランド。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You use <ph id="ph1">`Task`</ph> if no meaningful value is returned when the method is completed.</source>
          <target state="translated">メソッドの完了時に意味のある値を返さない場合は、<ph id="ph1">`Task`</ph> を使用します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>That is, a call to the method returns a <ph id="ph1">`Task`</ph>, but when the <ph id="ph2">`Task`</ph> is completed, any <ph id="ph3">`Await`</ph> statement that's awaiting the <ph id="ph4">`Task`</ph> doesn’t produce a result value.</source>
          <target state="translated">これにより、メソッドの呼び出しでは <ph id="ph1">`Task`</ph> が返されますが、<ph id="ph2">`Task`</ph> の完了時に、<ph id="ph3">`Await`</ph> を待機している <ph id="ph4">`Task`</ph> ステートメントは結果値を生成しません。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Async subroutines are used primarily to define event handlers where a <ph id="ph1">`Sub`</ph> procedure is required.</source>
          <target state="translated">非同期サブルーチンは主として、<ph id="ph1">`Sub`</ph> プロシージャが必要なイベント ハンドラーの定義に使用されます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The caller of an async subroutine can't await it and can't catch exceptions that the method throws.</source>
          <target state="translated">非同期サブルーチンの呼び出し元は、このサブルーチンを待機できず、このメソッドがスローする例外をキャッチできません。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information and examples, see <bpt id="p1">[</bpt>Async Return Types<ept id="p1">](../../../visual-basic/programming-guide/concepts/async/async-return-types.md)</ept>.</source>
          <target state="translated">詳細と例については、次を参照してください。 <bpt id="p1">[</bpt>Async を返す型<ept id="p1">](../../../visual-basic/programming-guide/concepts/async/async-return-types.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following examples show an async event handler, an async lambda expression, and an async method.</source>
          <target state="translated">次の例は、非同期のイベント ハンドラー、非同期ラムダ式、および非同期メソッドを示しています。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For a full example that uses these elements, see <bpt id="p1">[</bpt>Walkthrough: Accessing the Web by Using Async and Await<ept id="p1">](../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>.</source>
          <target state="translated">これらの要素を使用する完全な例を参照してください。<bpt id="p1">[</bpt>チュートリアル: を使用して Async と Await による Web にアクセスする<ept id="p1">](../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You can download the walkthrough code from <bpt id="p1">[</bpt>Developer Code Samples<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255191)</ept>.</source>
          <target state="translated">このチュートリアルのコードからをダウンロードする<bpt id="p1">[</bpt>デベロッパー サンプル コード集<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255191)</ept>します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Runtime.CompilerServices.AsyncStateMachineAttribute&gt;</source>
          <target state="translated">&lt;xref:System.Runtime.CompilerServices.AsyncStateMachineAttribute&gt;&lt;/xref:System.Runtime.CompilerServices.AsyncStateMachineAttribute&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Await Operator<ept id="p1">](../../../visual-basic/language-reference/operators/await-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Await 演算子<ept id="p1">](../../../visual-basic/language-reference/operators/await-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Asynchronous Programming with Async and Await<ept id="p1">](../../../visual-basic/programming-guide/concepts/async/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>非同期プログラミングを Async と Await<ept id="p1">](../../../visual-basic/programming-guide/concepts/async/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Walkthrough: Accessing the Web by Using Async and Await<ept id="p1">](../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>チュートリアル: Async と Await を使用した Web へのアクセス<ept id="p1">](../../../visual-basic/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>