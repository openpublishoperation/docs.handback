<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72fdb8ecf0cc593dfbf23bc42872c396220ea4a4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\basic-queries-linq-to-xml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46d85bd50ce7694c45c783455b3f225c9ba7f239</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cd885755f5909aca763ec078d9147166523573e2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Basic Queries (LINQ to XML) (Visual Basic) | Microsoft Docs</source>
          <target state="translated">基本的なクエリ (LINQ to XML) (Visual Basic) |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Basic Queries (LINQ to XML) (Visual Basic)</source>
          <target state="translated">基本的なクエリ (LINQ to XML) (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This section provides examples of basic <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> queries.</source>
          <target state="translated">ここでは、基本的な <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> クエリの例について説明します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In This Section</source>
          <target state="translated">このセクションの内容</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Topic</source>
          <target state="translated">トピック</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Find an Element with a Specific Attribute (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-find-an-element-with-a-specific-attribute.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>方法: 特定の属性 (Visual Basic) で要素を検索<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-find-an-element-with-a-specific-attribute.md)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Shows how to find a particular element that has an attribute that has a specific value.</source>
          <target state="translated">特定の値を含む属性を持つ特定の要素を検索する方法について説明します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Find an Element with a Specific Child Element (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-find-an-element-with-a-specific-child-element.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>方法: 特定の子要素 (Visual Basic) を持つ要素を検索<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-find-an-element-with-a-specific-child-element.md)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Shows how to find a particular element that has a child element that has a specific value.</source>
          <target state="translated">特定の値を含む子要素を持つ特定の要素を検索する方法について説明します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Querying an XDocument vs. Querying an XElement (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/querying-an-xdocument-vs-querying-an-xelement.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>XDocument のクエリと (Visual Basic) XElement のクエリ<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/querying-an-xdocument-vs-querying-an-xelement.md)</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Explains the differences between writing queries on an XML tree that is rooted in &lt;xref:System.Xml.Linq.XElement&gt; and writing queries on an XML tree that is rooted in &lt;xref:System.Xml.Linq.XDocument&gt;.</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XElement&gt; &lt;xref:System.Xml.Linq.XDocument&gt;。&lt;/xref:System.Xml.Linq.XDocument&gt;をルートとする XML ツリーに対してクエリを作成して&lt;/xref:System.Xml.Linq.XElement&gt;ルートとする XML ツリーに対するクエリの記述の違いについて説明します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Find Descendants with a Specific Element Name (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-find-descendants-with-a-specific-element-name.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>方法: 特定の要素の名前 (Visual Basic) を持つ子孫を検索<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-find-descendants-with-a-specific-element-name.md)</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Shows how to find all the descendants of an element that have a specific name.</source>
          <target state="translated">特定の名前を持つ要素のすべての子孫を検索する方法について説明します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This example uses the &lt;xref:System.Xml.Linq.XContainer.Descendants%2A&gt; axis.</source>
          <target state="translated">この例では、&lt;xref:System.Xml.Linq.XContainer.Descendants%2A&gt;軸&lt;/xref:System.Xml.Linq.XContainer.Descendants%2A&gt;。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Find a Single Descendant Using the Descendants Method (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-find-a-single-descendant-using-the-descendants-method.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>方法: Descendants メソッド (Visual Basic) を使用して単一の子孫を検索<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-find-a-single-descendant-using-the-descendants-method.md)</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Shows how to use the &lt;xref:System.Xml.Linq.XContainer.Descendants%2A&gt; axis method to find a single uniquely named element.</source>
          <target state="translated">使用する方法を示しています、 &lt;xref:System.Xml.Linq.XContainer.Descendants%2A&gt;、1 つを一意に検出するための軸メソッドの名前付き要素&lt;/xref:System.Xml.Linq.XContainer.Descendants%2A&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Write Queries with Complex Filtering (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-write-queries-with-complex-filtering.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>方法: 複雑なフィルター (Visual Basic) クエリの作成<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-write-queries-with-complex-filtering.md)</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Shows how to write a query with a more complex filter.</source>
          <target state="translated">複雑なフィルターを使用してクエリを記述する方法について説明します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Filter on an Optional Element (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-filter-on-an-optional-element.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>方法: 省略可能な要素 (Visual Basic) をフィルター処理<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-filter-on-an-optional-element.md)</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Shows how to find nodes in an irregularly shaped tree.</source>
          <target state="translated">不規則な形のツリーでノードを検索する方法について説明します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Find All Nodes in a Namespace (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-find-all-nodes-in-a-namespace.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>方法: Namespace (Visual Basic) ですべてのノードを検索<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-find-all-nodes-in-a-namespace.md)</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Shows how to find all nodes that are in a specific namespace.</source>
          <target state="translated">特定の名前空間内のすべてのノードを検索する方法について説明します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Sort Elements (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-sort-elements.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>方法: 要素 (Visual Basic) を並べ替える<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-sort-elements.md)</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Shows how to write a query that sorts its results.</source>
          <target state="translated">結果を並べ替えるクエリを記述する方法について説明します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Sort Elements on Multiple Keys (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-sort-elements-on-multiple-keys.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>方法: 複数のキー (Visual Basic) に基づいて要素を並べ替える<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-sort-elements-on-multiple-keys.md)</ept></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Shows how to sort on multiple keys.</source>
          <target state="translated">複数のキーに基づく並べ替えの方法について説明します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Calculate Intermediate Values (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-calculate-intermediate-values.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>方法: 中間値 (Visual Basic) を計算<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-calculate-intermediate-values.md)</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Shows how to use the <ph id="ph1">`Let`</ph> clause to calculate intermediate values in a <ph id="ph2">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> query.</source>
          <target state="translated">使用する方法を示しています、<ph id="ph1">`Let`</ph>の中間値を計算する句、<ph id="ph2">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>クエリ。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Write a Query that Finds Elements Based on Context (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-write-a-query-that-finds-elements-based-on-context.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>方法: (Visual Basic) のコンテキストに基づいて要素を検索するクエリを記述<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-write-a-query-that-finds-elements-based-on-context.md)</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Shows how to select elements based on other elements in the tree.</source>
          <target state="translated">ツリー内の他の要素に基づいて要素を選択する方法について説明します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Debug Empty Query Results Sets (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-debug-empty-query-results-sets.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>方法: 空のクエリの結果セット (Visual Basic) のデバッグ<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-debug-empty-query-results-sets.md)</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Shows the appropriate fix when debugging queries on XML that is in a default namespace.</source>
          <target state="translated">既定の名前空間の XML に対するクエリをデバッグする際の適切な修正方法について説明します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Querying XML Trees (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/querying-xml-trees.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>XML ツリー (Visual Basic) のクエリ<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/querying-xml-trees.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>