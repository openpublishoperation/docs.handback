<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe2df73aaf49f1b61dafcad9a6c6e0f3d014f8ec</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\async\cancel-an-async-task-or-a-list-of-tasks.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">975d54a8705f1f826f1a4d6357a9987318898078</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a0c824cc32d0749541279e47c6f84e011497810</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Cancel an Async Task or a List of Tasks (Visual Basic) | Microsoft Docs</source>
          <target state="translated">非同期タスクまたはタスク (Visual Basic) の一覧を取り消す |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Cancel an Async Task or a List of Tasks (Visual Basic)</source>
          <target state="translated">非同期タスクまたはタスク (Visual Basic) の一覧をキャンセルします。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can set up a button that you can use to cancel an async application if you don't want to wait for it to finish.</source>
          <target state="translated">非同期のアプリケーションが終了するまで待機しない場合、それを取り消すために使用できるボタンを設定できます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>By following the examples in this topic, you can add a cancellation button to an application that downloads the contents of one website or a list of websites.</source>
          <target state="translated">このトピックの例に従うと、1 つの Web サイトのコンテンツまたは Web サイトのリストをダウンロードするアプリケーションにキャンセル ボタンを追加できます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The examples use the UI that <bpt id="p1">[</bpt>Fine-Tuning Your Async Application (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/fine-tuning-your-async-application.md)</ept> describes.</source>
          <target state="translated">例では、UI を使用している<bpt id="p1">[</bpt>微調整 Your Async アプリケーション (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/fine-tuning-your-async-application.md)</ept>について説明します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To run the examples, you must have Visual Studio 2012 or newer and the .NET Framework 4.5 or newer installed on your computer.</source>
          <target state="translated">例を実行するには、Visual Studio 2012 以降と .NET Framework 4.5 が必要または以降のコンピューターにインストールします。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_CancelaTask"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Cancel a Task</source>
          <target state="translated"><bpt id="p1">&lt;a name="BKMK_CancelaTask"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>タスクをキャンセルします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The first example associates the <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button with a single download task.</source>
          <target state="translated">最初の使用例、<bpt id="p1">**</bpt>キャンセル<ept id="p1">**</ept>ボタンを&amp;1; 回のダウンロード タスクとします。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you choose the button while the application is downloading content, the download is canceled.</source>
          <target state="translated">アプリケーションがコンテンツをダウンロード中にボタンをクリックすると、ダウンロードは取り消されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Downloading the Example</source>
          <target state="translated">例をダウンロードする</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can download the complete Windows Presentation Foundation (WPF) project from <bpt id="p1">[</bpt>Async Sample: Fine Tuning Your Application<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept> and then follow these steps.</source>
          <target state="translated">完全な Windows Presentation Foundation (WPF) プロジェクトをダウンロードすることができます<bpt id="p1">[</bpt>Async サンプル: 細かいアプリケーションの調整<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept>し次の手順に従います。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Decompress the file that you downloaded, and then start Visual Studio.</source>
          <target state="translated">ダウンロードしたファイルを圧縮解除し、Visual Studio を起動します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>On the menu bar, choose <bpt id="p1">**</bpt>File<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Open<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Project/Solution<ept id="p3">**</ept>.</source>
          <target state="translated">メニュー バーで <bpt id="p1">**</bpt>[ファイル]<ept id="p1">**</ept>、 <bpt id="p2">**</bpt>[開く]<ept id="p2">**</ept>、 <bpt id="p3">**</bpt>[プロジェクト/ソリューション]<ept id="p3">**</ept>の順に選択します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Open Project<ept id="p1">**</ept> dialog box, open the folder that holds the sample code that you decompressed, and then open the solution (.sln) file for AsyncFineTuningVB.</source>
          <target state="translated"><bpt id="p1">**</bpt>プロジェクトを開く<ept id="p1">**</ept> ダイアログ ボックスでは、圧縮解除したサンプル コードが含まれるフォルダーを開き、AsyncFineTuningVB のソリューション (.sln) ファイルを開きます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, open the shortcut menu for the <bpt id="p2">**</bpt>CancelATask<ept id="p2">**</ept> project, and then choose <bpt id="p3">**</bpt>Set as StartUp Project<ept id="p3">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>ソリューション エクスプ ローラー<ept id="p1">**</ept>、ショートカット メニューを開き、 <bpt id="p2">**</bpt>CancelATask<ept id="p2">**</ept>プロジェクトを開いて、<bpt id="p3">**</bpt>スタートアップ プロジェクトとして設定<ept id="p3">**</ept>します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Choose the F5 key to run the project.</source>
          <target state="translated">F5 キーを押してプロジェクトを実行します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Choose the Ctrl+F5 keys to run the project without debugging it.</source>
          <target state="translated">Ctrl + F5 キーを押して、デバッグを行わずにプロジェクトを実行します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you don't want to download the project, you can review the MainWindow.xaml.vb files at the end of this topic.</source>
          <target state="translated">プロジェクトをダウンロードできない場合は、このトピックの最後の MainWindow.xaml.vb ファイルを確認できます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Building the Example</source>
          <target state="translated">例のビルド</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following changes add a <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button to an application that downloads a website.</source>
          <target state="translated">次の変更を追加、<bpt id="p1">**</bpt>キャンセル<ept id="p1">**</ept>ボタン、web サイトをダウンロードするアプリケーションをクリックします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you don't want to download or build the example, you can review the final product in the "Complete Examples" section at the end of this topic.</source>
          <target state="translated">この例のダウンロードまたはビルドをしない場合は、このトピックの最後にある「コード例全体」のセクションで最終製品をレビューできます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Asterisks mark the changes in the code.</source>
          <target state="translated">アスタリスクはコードの変更点を示しています。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To build the example yourself, step by step, follow the instructions in the "Downloading the Example" section, but choose <bpt id="p1">**</bpt>StarterCode<ept id="p1">**</ept> as the <bpt id="p2">**</bpt>StartUp Project<ept id="p2">**</ept> instead of <bpt id="p3">**</bpt>CancelATask<ept id="p3">**</ept>.</source>
          <target state="translated">例をビルドする、自分のステップ バイ ステップ「例をダウンロードする」セクション指示従いますが、選択<bpt id="p1">**</bpt>StarterCode<ept id="p1">**</ept>として、<bpt id="p2">**</bpt>スタートアップ プロジェクト<ept id="p2">**</ept>代わりに<bpt id="p3">**</bpt>CancelATask<ept id="p3">**</ept>します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Then add the following changes to the MainWindow.xaml.vb file of that project.</source>
          <target state="translated">そのプロジェクトの MainWindow.xaml.vb ファイルに次の変更点を追加します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Declare a <ph id="ph1">`CancellationTokenSource`</ph> variable, <ph id="ph2">`cts`</ph>, that’s in scope for all methods that access it.</source>
          <target state="translated">アクセスするすべてのメソッドのスコープである <ph id="ph1">`CancellationTokenSource`</ph> 変数、<ph id="ph2">`cts`</ph> を宣言します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Add the following event handler for the <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button.</source>
          <target state="translated">次のイベント ハンドラーを追加、<bpt id="p1">**</bpt>キャンセル<ept id="p1">**</ept> ボタンをクリックします。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The event handler uses the &lt;xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=fullName&gt; method to notify <ph id="ph1">`cts`</ph> when the user requests cancellation.</source>
          <target state="translated">イベント ハンドラーを使用して、&lt;xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=fullName&gt;メソッドへの通知を<ph id="ph1">`cts`</ph>ユーザーがキャンセルを要求した場合&lt;/xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Make the following changes in the event handler for the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> button, <ph id="ph1">`startButton_Click`</ph>.</source>
          <target state="translated">次の変更、イベント ハンドラーを作成、<bpt id="p1">**</bpt>開始<ept id="p1">**</ept>ボタン<ph id="ph1">`startButton_Click`</ph>します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Instantiate the <ph id="ph1">`CancellationTokenSource`</ph>, <ph id="ph2">`cts`</ph>.</source>
          <target state="translated"><ph id="ph1">`CancellationTokenSource`</ph>、<ph id="ph2">`cts`</ph> をインスタンス化します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In the call to <ph id="ph1">`AccessTheWebAsync`</ph>, which downloads the contents of a specified website, send the &lt;xref:System.Threading.CancellationTokenSource.Token%2A?displayProperty=fullName&gt; property of <ph id="ph2">`cts`</ph> as an argument.</source>
          <target state="translated">呼び出しで<ph id="ph1">`AccessTheWebAsync`</ph>、指定された web サイトのコンテンツをダウンロード、送信、&lt;xref:System.Threading.CancellationTokenSource.Token%2A?displayProperty=fullName&gt;の<ph id="ph2">`cts`</ph>を引数として&lt;/xref:System.Threading.CancellationTokenSource.Token%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Token`</ph> property propagates the message if cancellation is requested.</source>
          <target state="translated">取り消しが要求されると、<ph id="ph1">`Token`</ph> プロパティがメッセージを伝達します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Add a catch block that displays a message if the user chooses to cancel the download operation.</source>
          <target state="translated">ユーザーがダウンロード操作の取り消しを選択するとメッセージを表示する catch ブロックを追加します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following code shows the changes.</source>
          <target state="translated">次のコードは変更点を示しています。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">`AccessTheWebAsync`</ph>, use the  &lt;xref:System.Net.Http.HttpClient.GetAsync%28System.String%2CSystem.Threading.CancellationToken%29?displayProperty=fullName&gt; overload of the <ph id="ph2">`GetAsync`</ph> method in the &lt;xref:System.Net.Http.HttpClient&gt; type to download the contents of a website.</source>
          <target state="translated"><ph id="ph1">`AccessTheWebAsync`</ph>を使用して、&lt;xref:System.Net.Http.HttpClient.GetAsync%28System.String%2CSystem.Threading.CancellationToken%29?displayProperty=fullName&gt;のオーバー ロード、<ph id="ph2">`GetAsync`</ph>メソッドで、 &lt;xref:System.Net.Http.HttpClient&gt;、web サイトのコンテンツをダウンロードする型&lt;/xref:System.Net.Http.HttpClient&gt;&lt;/xref:System.Net.Http.HttpClient.GetAsync%28System.String%2CSystem.Threading.CancellationToken%29?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Pass <ph id="ph1">`ct`</ph>, the &lt;xref:System.Threading.CancellationToken&gt; parameter of <ph id="ph2">`AccessTheWebAsync`</ph>, as the second argument.</source>
          <target state="translated">渡す<ph id="ph1">`ct`</ph>、&lt;xref:System.Threading.CancellationToken&gt;のパラメーター <ph id="ph2">`AccessTheWebAsync`</ph>、2 番目の引数として&lt;/xref:System.Threading.CancellationToken&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The token carries the message if the user chooses the <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button.</source>
          <target state="translated">ユーザーが選択した場合、トークンがメッセージを送信、<bpt id="p1">**</bpt>キャンセル<ept id="p1">**</ept> ボタンをクリックします。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following code shows the changes in <ph id="ph1">`AccessTheWebAsync`</ph>.</source>
          <target state="translated">次のコードは、<ph id="ph1">`AccessTheWebAsync`</ph> の変更点を示しています。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If you don’t cancel the program, it produces the following output.</source>
          <target state="translated">プログラムの取り消しをしない場合、次の出力を生成します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If you choose the <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button before the program finishes downloading the content, the program produces the following output.</source>
          <target state="translated">選択した場合、<bpt id="p1">**</bpt>キャンセル<ept id="p1">**</ept> ボタンをクリックして、プログラムの前に、コンテンツのダウンロードが完了すると、プログラムは、次の出力を生成します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_CancelaListofTasks"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Cancel a List of Tasks</source>
          <target state="translated"><bpt id="p1">&lt;a name="BKMK_CancelaListofTasks"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>タスクの一覧を取り消す</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can extend the previous example to cancel many tasks by associating the same <ph id="ph1">`CancellationTokenSource`</ph> instance with each task.</source>
          <target state="translated">前の例を拡張すると、同じ <ph id="ph1">`CancellationTokenSource`</ph> のインスタンスを各タスクに関連付けることによって、多数のタスクを取り消すことができます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you choose the <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button, you cancel all tasks that aren’t yet complete.</source>
          <target state="translated">選択した場合、<bpt id="p1">**</bpt>キャンセル<ept id="p1">**</ept> ボタンを完了していないすべてのタスクをキャンセルします。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Downloading the Example</source>
          <target state="translated">例をダウンロードする</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You can download the complete Windows Presentation Foundation (WPF) project from <bpt id="p1">[</bpt>Async Sample: Fine Tuning Your Application<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept> and then follow these steps.</source>
          <target state="translated">完全な Windows Presentation Foundation (WPF) プロジェクトをダウンロードすることができます<bpt id="p1">[</bpt>Async サンプル: 細かいアプリケーションの調整<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept>し次の手順に従います。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Decompress the file that you downloaded, and then start Visual Studio.</source>
          <target state="translated">ダウンロードしたファイルを圧縮解除し、Visual Studio を起動します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>On the menu bar, choose <bpt id="p1">**</bpt>File<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Open<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Project/Solution<ept id="p3">**</ept>.</source>
          <target state="translated">メニュー バーで <bpt id="p1">**</bpt>[ファイル]<ept id="p1">**</ept>、 <bpt id="p2">**</bpt>[開く]<ept id="p2">**</ept>、 <bpt id="p3">**</bpt>[プロジェクト/ソリューション]<ept id="p3">**</ept>の順に選択します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Open Project<ept id="p1">**</ept> dialog box, open the folder that holds the sample code that you decompressed, and then open the solution (.sln) file for AsyncFineTuningVB.</source>
          <target state="translated"><bpt id="p1">**</bpt>プロジェクトを開く<ept id="p1">**</ept> ダイアログ ボックスでは、圧縮解除したサンプル コードが含まれるフォルダーを開き、AsyncFineTuningVB のソリューション (.sln) ファイルを開きます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, open the shortcut menu for the <bpt id="p2">**</bpt>CancelAListOfTasks<ept id="p2">**</ept> project, and then choose <bpt id="p3">**</bpt>Set as StartUp Project<ept id="p3">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>ソリューション エクスプ ローラー<ept id="p1">**</ept>、ショートカット メニューを開き、 <bpt id="p2">**</bpt>CancelAListOfTasks<ept id="p2">**</ept>プロジェクトを開いて、<bpt id="p3">**</bpt>スタートアップ プロジェクトとして設定<ept id="p3">**</ept>します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Choose the F5 key to run the project.</source>
          <target state="translated">F5 キーを押してプロジェクトを実行します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Choose the Ctrl+F5 keys to run the project without debugging it.</source>
          <target state="translated">Ctrl + F5 キーを押して、デバッグを行わずにプロジェクトを実行します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If you don't want to download the project, you can review the MainWindow.xaml.vb files at the end of this topic.</source>
          <target state="translated">プロジェクトをダウンロードできない場合は、このトピックの最後の MainWindow.xaml.vb ファイルを確認できます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Building the Example</source>
          <target state="translated">例のビルド</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>To extend the example yourself, step by step, follow the instructions in the "Downloading the Example" section, but choose <bpt id="p1">**</bpt>CancelATask<ept id="p1">**</ept> as the <bpt id="p2">**</bpt>StartUp Project<ept id="p2">**</ept>.</source>
          <target state="translated">例を拡張する、自分のステップ バイ ステップ「例をダウンロードする」セクション指示従いますが、選択<bpt id="p1">**</bpt>CancelATask<ept id="p1">**</ept>として、<bpt id="p2">**</bpt>スタートアップ プロジェクト<ept id="p2">**</ept>します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Add the following changes to that project.</source>
          <target state="translated">次の変更点をプロジェクトに追加します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Asterisks mark the changes in the program.</source>
          <target state="translated">アスタリスクはプログラムの変更点を示しています。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Add a method to create a list of web addresses.</source>
          <target state="translated">Web アドレスのリストを作成するメソッドを追加します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Call the method in <ph id="ph1">`AccessTheWebAsync`</ph>.</source>
          <target state="translated"><ph id="ph1">`AccessTheWebAsync`</ph> のメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Add the following loop in <ph id="ph1">`AccessTheWebAsync`</ph> to process each web address in the list.</source>
          <target state="translated">次のループを <ph id="ph1">`AccessTheWebAsync`</ph> に追加して、リストの各 Web アドレスを処理します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">`AccessTheWebAsync`</ph> displays the lengths, the method doesn't need to return anything.</source>
          <target state="translated"><ph id="ph1">`AccessTheWebAsync`</ph> は長さを表示するため、メソッドは何も返す必要はありません。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Remove the return statement, and change the return type of the method to &lt;xref:System.Threading.Tasks.Task&gt; instead of &lt;xref:System.Threading.Tasks.Task%601&gt;.</source>
          <target state="translated">Return ステートメントを削除および&lt;xref:System.Threading.Tasks.Task&gt;&lt;xref:System.Threading.Tasks.Task%601&gt;。&lt;/xref:System.Threading.Tasks.Task%601&gt;ではなく&lt;/xref:System.Threading.Tasks.Task&gt;にメソッドの戻り値の型を変更します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;CodeContentPlaceHolder&gt;</bpt>10<ept id="p1">&lt;/CodeContentPlaceHolder&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;CodeContentPlaceHolder&gt;</bpt>10<ept id="p1">&lt;/CodeContentPlaceHolder&gt;</ept></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Call the method from <ph id="ph1">`startButton_Click`</ph> by using a statement instead of an expression.</source>
          <target state="translated">式の代わりにステートメントを使って、<ph id="ph1">`startButton_Click`</ph> からメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If you don’t cancel the program, it produces the following output.</source>
          <target state="translated">プログラムの取り消しをしない場合、次の出力を生成します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If you choose the <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button before the downloads are complete, the output contains the lengths of the downloads that completed before the cancellation.</source>
          <target state="translated">選択した場合、<bpt id="p1">**</bpt>キャンセル<ept id="p1">**</ept>ボタン ダウンロードが完了する前に、出力には、取り消しの前に完了したダウンロードの長さが含まれています。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="BKMK_CompleteExamples"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Complete Examples</source>
          <target state="translated"><bpt id="p1">&lt;a name="BKMK_CompleteExamples"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>コード例を全体します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following sections contain the code for each of the previous examples.</source>
          <target state="translated">次のセクションには、前の例の各コードが含まれています。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Notice that you must add a reference for &lt;xref:System.Net.Http&gt;.</source>
          <target state="translated">&lt;xref:System.Net.Http&gt;。&lt;/xref:System.Net.Http&gt;への参照を追加する必要があることに注意してください。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You can download the projects from <bpt id="p1">[</bpt>Async Sample: Fine Tuning Your Application<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept>.</source>
          <target state="translated">プロジェクトをダウンロードする<bpt id="p1">[</bpt>Async サンプル: 細かいアプリケーションの調整<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept>します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Cancel a Task Example</source>
          <target state="translated">タスクを取り消す例</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The following code is the complete MainWindow.xaml.vb file for the example that cancels a single task.</source>
          <target state="translated">次のコードは、たとえば、1 つのタスクをキャンセルする完全な MainWindow.xaml.vb ファイルです。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Cancel a List of Tasks Example</source>
          <target state="translated">タスクの一覧を取り消す例</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The following code is the complete MainWindow.xaml.vb file for the example that cancels a list of tasks.</source>
          <target state="translated">次のコードは、タスクのリストを取り消す例の完全な MainWindow.xaml.vb ファイルです。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Threading.CancellationTokenSource&gt;</source>
          <target state="translated">&lt;xref:System.Threading.CancellationTokenSource&gt;&lt;/xref:System.Threading.CancellationTokenSource&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Threading.CancellationToken&gt;</source>
          <target state="translated">&lt;xref:System.Threading.CancellationToken&gt;&lt;/xref:System.Threading.CancellationToken&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Asynchronous Programming with Async and Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>非同期プログラミングを Async と Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Fine-Tuning Your Async Application (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/fine-tuning-your-async-application.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>非同期アプリケーション (Visual Basic) の微調整<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/fine-tuning-your-async-application.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Async Sample: Fine Tuning Your Application<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>アプリケーションの微調整の非同期のサンプル:<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>