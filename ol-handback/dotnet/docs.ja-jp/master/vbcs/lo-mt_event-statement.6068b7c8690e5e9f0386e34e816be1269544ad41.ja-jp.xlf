<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0ea8074f996622df3cd88a7e87fc1156b63dcaf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\statements\event-statement.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">890c4a11d0d5c7ce7c59ed1f614e33af033ca9b1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8a932bcddff6cbae050f9a00a55beec2c748871</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Event Statement | Microsoft Docs</source>
          <target state="translated">Event ステートメント |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Event Statement</source>
          <target state="translated">Event ステートメント</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Declares a user-defined event.</source>
          <target state="translated">ユーザー定義イベントを宣言します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">指定項目</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Part</source>
          <target state="translated">パーツ</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">省略可能です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>List of attributes that apply to this event.</source>
          <target state="translated">このイベントに適用される属性の一覧です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Multiple attributes are separated by commas.</source>
          <target state="translated">複数の属性を指定するときは、コンマで区切ります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You must enclose the <bpt id="p1">[</bpt>Attribute List<ept id="p1">](../../../visual-basic/language-reference/statements/attribute-list.md)</ept> in angle brackets ("<ph id="ph1">`&lt;`</ph>" and "<ph id="ph2">`&gt;`</ph>").</source>
          <target state="translated">囲む必要があります、<bpt id="p1">[</bpt>属性リスト<ept id="p1">](../../../visual-basic/language-reference/statements/attribute-list.md)</ept>山かっこで ("<ph id="ph1">`&lt;`</ph>「と」<ph id="ph2">`&gt;`</ph>") です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">省略可能です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Specifies what code can access the event.</source>
          <target state="translated">どのようなコードからイベントにアクセスできるのかを指定します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Can be one of the following:</source>
          <target state="translated">次のいずれかの値を指定します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> -   </ph><bpt id="p1">[</bpt>Public<ept id="p1">](../../../visual-basic/language-reference/modifiers/public.md)</ept>—any code that can access the element that declares it can access it.</source>
          <target state="translated"><ph id="ph1"> -   </ph><bpt id="p1">[</bpt>パブリック<ept id="p1">](../../../visual-basic/language-reference/modifiers/public.md)</ept>: 宣言された要素にアクセスできる任意のコードがアクセスできます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><bpt id="p1">[</bpt>Protected<ept id="p1">](../../../visual-basic/language-reference/modifiers/protected.md)</ept>—only code within its class or a derived class can access it.</source>
          <target state="translated"><ph id="ph1">-   </ph><bpt id="p1">[</bpt>保護されている<ept id="p1">](../../../visual-basic/language-reference/modifiers/protected.md)</ept>— のみ、クラスまたは派生クラス内のコードでアクセスできます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><bpt id="p1">[</bpt>Friend<ept id="p1">](../../../visual-basic/language-reference/modifiers/friend.md)</ept>—only code in the same assembly can access it.</source>
          <target state="translated"><ph id="ph1">-   </ph><bpt id="p1">[</bpt>フレンド<ept id="p1">](../../../visual-basic/language-reference/modifiers/friend.md)</ept>— のみ同じアセンブリ内のコードでアクセスできます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><bpt id="p1">[</bpt>Private<ept id="p1">](../../../visual-basic/language-reference/modifiers/private.md)</ept>—only code in the element that declares it can access it.</source>
          <target state="translated"><ph id="ph1">-   </ph><bpt id="p1">[</bpt>プライベート<ept id="p1">](../../../visual-basic/language-reference/modifiers/private.md)</ept>: 宣言された要素のコードからのみアクセスできます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can specify <ph id="ph1">`Protected Friend`</ph> to enable access from code in the event's class, a derived class, or the same assembly.</source>
          <target state="translated"><ph id="ph1">`Protected Friend`</ph> と指定すると、イベントのクラス、その派生クラス、または同じアセンブリ内のコードからアクセスできます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">省略可能です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Specifies that this event is not associated with a specific instance of a class or structure.</source>
          <target state="translated">このイベントがクラスまたは構造体の特定のインスタンスに関連付けられないことを指定します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">省略可能です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Indicates that this event redeclares and hides an identically named programming element, or set of overloaded elements, in a base class.</source>
          <target state="translated">このイベントが、基本クラスにある、同じ名前を持つプログラミング要素、またはオーバーロードされる要素のセットを宣言し直して隠ぺいすることを示します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can shadow any kind of declared element with any other kind.</source>
          <target state="translated">宣言された要素は、他の任意の種類の要素でシャドウできます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A shadowed element is unavailable from within the derived class that shadows it, except from where the shadowing element is inaccessible.</source>
          <target state="translated">シャドウされた要素は、その要素をシャドウする派生クラスからは使用できません。ただし、シャドウする要素がアクセスできない要素の場合は例外です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, if a <ph id="ph1">`Private`</ph> element shadows a base-class element, code that does not have permission to access the <ph id="ph2">`Private`</ph> element accesses the base-class element instead.</source>
          <target state="translated">たとえば、<ph id="ph1">`Private`</ph> 要素が基本クラスの要素をシャドウすると、<ph id="ph2">`Private`</ph> 要素へのアクセス許可を持たないコードは、代わりに基本クラスにアクセスします。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必須です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Name of the event; follows standard variable naming conventions.</source>
          <target state="translated">イベントの名前です。変数の標準的な名前付け規則に従って名前を付けます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">省略可能です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>List of local variables that represent the parameters of this event.</source>
          <target state="translated">このイベントのパラメーターを表すローカル変数のリストです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You must enclose the <bpt id="p1">[</bpt>Parameter List<ept id="p1">](../../../visual-basic/language-reference/statements/parameter-list.md)</ept> in parentheses.</source>
          <target state="translated">囲む必要があります、<bpt id="p1">[</bpt>パラメーター リスト<ept id="p1">](../../../visual-basic/language-reference/statements/parameter-list.md)</ept>かっこ内に示します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">省略可能です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Indicates that this event implements an event of an interface.</source>
          <target state="translated">このイベントがインターフェイスのイベントを実装することを示します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Required if <ph id="ph1">`Implements`</ph> is supplied.</source>
          <target state="translated"><ph id="ph1">`Implements`</ph> を指定する場合は、必ず指定します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>List of <ph id="ph1">`Sub`</ph> procedures being implemented.</source>
          <target state="translated">実装される <ph id="ph1">`Sub`</ph> プロシージャのリストです。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Multiple procedures are separated by commas:</source>
          <target state="translated">複数のプロシージャを指定するときは、コンマで区切ります。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>implementedprocedure<ept id="p1">*</ept> [ , <bpt id="p2">*</bpt>implementedprocedure<ept id="p2">*</ept> ... ]</source>
          <target state="translated"><bpt id="p1">*</bpt>implementedprocedure<ept id="p1">*</ept> [、 <bpt id="p2">*</bpt>implementedprocedure<ept id="p2">*</ept> ...]</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`implementedprocedure`</ph> has the following syntax and parts:</source>
          <target state="translated"><ph id="ph1">`implementedprocedure`</ph> の構文と指定項目は次のとおりです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`interface`</ph>.<ph id="ph2">`definedname`</ph></source>
          <target state="translated"><ph id="ph1">`interface`</ph>.<ph id="ph2">`definedname`</ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> -   </ph><ph id="ph2">`interface`</ph> - Required.</source>
          <target state="translated"><ph id="ph1"> -   </ph><ph id="ph2">`interface`</ph>必要です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Name of an interface that this procedure's containing class or structure is implementing.</source>
          <target state="translated">このプロシージャの包含クラスまたは包含構造体が実装しているインターフェイスの名前です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">`Definedname`</ph> - Required.</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`Definedname`</ph>必要です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Name by which the procedure is defined in <ph id="ph1">`interface`</ph>.</source>
          <target state="translated"><ph id="ph1">`interface`</ph> の中でプロシージャを定義するために使用する名前。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This does not have to be the same as <ph id="ph1">`name`</ph>, the name that this procedure is using to implement the defined procedure.</source>
          <target state="translated">これは、<ph id="ph1">`name`</ph> (定義されているプロシージャを実装するためにこのプロシージャが使用している名前) と同じである必要はありません。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必須です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Events declared as <ph id="ph1">`Custom`</ph> must define custom <ph id="ph2">`AddHandler`</ph>, <ph id="ph3">`RemoveHandler`</ph>, and <ph id="ph4">`RaiseEvent`</ph> accessors.</source>
          <target state="translated"><ph id="ph1">`Custom`</ph> として宣言されたイベントでは、<ph id="ph2">`AddHandler`</ph>、<ph id="ph3">`RemoveHandler`</ph>、および <ph id="ph4">`RaiseEvent`</ph> の各カスタム アクセサーを定義する必要があります。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">省略可能です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The name of a delegate that specifies the event-handler signature.</source>
          <target state="translated">イベント ハンドラーの署名を指定するデリゲートの名前。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必須です。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Declares an <ph id="ph1">`AddHandler`</ph> accessor, which specifies the statements to execute when an event handler is added, either explicitly by using the <ph id="ph2">`AddHandler`</ph> statement or implicitly by using the <ph id="ph3">`Handles`</ph> clause.</source>
          <target state="translated"><ph id="ph1">`AddHandler`</ph> アクセサーを宣言します。ここでは、イベント ハンドラーが追加されたとき実行するステートメントを、<ph id="ph2">`AddHandler`</ph> ステートメントを使って明示的に指定するか、<ph id="ph3">`Handles`</ph> 句を使って暗黙的に指定します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必須です。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Terminates the <ph id="ph1">`AddHandler`</ph> block.</source>
          <target state="translated"><ph id="ph1">`AddHandler`</ph> ブロックを終了します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必須です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Parameter name.</source>
          <target state="translated">パラメーター名です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必須です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Declares a <ph id="ph1">`RemoveHandler`</ph> accessor, which specifies the statements to execute when an event handler is removed using the <ph id="ph2">`RemoveHandler`</ph> statement.</source>
          <target state="translated"><ph id="ph1">`RemoveHandler`</ph> アクセサーを宣言します。ここでは、イベント ハンドラーが削除されたときに実行するステートメントを、<ph id="ph2">`RemoveHandler`</ph> ステートメントを使って指定します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必須です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Terminates the <ph id="ph1">`RemoveHandler`</ph> block.</source>
          <target state="translated"><ph id="ph1">`RemoveHandler`</ph> ブロックを終了します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必須です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Declares a <ph id="ph1">`RaiseEvent`</ph> accessor, which specifies the statements to execute when the event is raised using the <ph id="ph2">`RaiseEvent`</ph> statement.</source>
          <target state="translated"><ph id="ph1">`RaiseEvent`</ph> アクセサーを宣言します。ここでは、イベントが発生したときに実行するステートメントを、<ph id="ph2">`RaiseEvent`</ph> ステートメントを使って指定します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Typically, this invokes a list of delegates maintained by the <ph id="ph1">`AddHandler`</ph> and <ph id="ph2">`RemoveHandler`</ph> accessors.</source>
          <target state="translated">通常は、<ph id="ph1">`AddHandler`</ph> アクセサーと <ph id="ph2">`RemoveHandler`</ph> アクセサーによって管理されるデリゲートのリストが呼び出されます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必須です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Terminates the <ph id="ph1">`RaiseEvent`</ph> block.</source>
          <target state="translated"><ph id="ph1">`RaiseEvent`</ph> ブロックを終了します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必須です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>List of parameters that matches the parameters required by the <ph id="ph1">`delegatename`</ph> delegate.</source>
          <target state="translated"><ph id="ph1">`delegatename`</ph> デリゲートに必要なパラメーターと一致するパラメーターのリストです。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You must enclose the <bpt id="p1">[</bpt>Parameter List<ept id="p1">](../../../visual-basic/language-reference/statements/parameter-list.md)</ept> in parentheses.</source>
          <target state="translated">囲む必要があります、<bpt id="p1">[</bpt>パラメーター リスト<ept id="p1">](../../../visual-basic/language-reference/statements/parameter-list.md)</ept>かっこ内に示します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">省略可能です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Statements that contain the bodies of the <ph id="ph1">`AddHandler`</ph>, <ph id="ph2">`RemoveHandler`</ph>, and <ph id="ph3">`RaiseEvent`</ph> methods.</source>
          <target state="translated"><ph id="ph1">`AddHandler`</ph>、<ph id="ph2">`RemoveHandler`</ph>、および <ph id="ph3">`RaiseEvent`</ph> の各メソッドの本体が含まれるステートメントです。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必須です。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Terminates the <ph id="ph1">`Event`</ph> block.</source>
          <target state="translated"><ph id="ph1">`Event`</ph> ブロックを終了します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">コメント</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Once the event has been declared, use the <ph id="ph1">`RaiseEvent`</ph> statement to raise the event.</source>
          <target state="translated">宣言したイベントは、<ph id="ph1">`RaiseEvent`</ph> ステートメントを使って発生させます。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A typical event might be declared and raised as shown in the following fragments:</source>
          <target state="translated">通常、イベントの宣言と発生は、次のように行われます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents#13<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/event-statement_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents&amp;#13;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/event-statement_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You can declare event arguments just as you do arguments of procedures, with the following exceptions: events cannot have named arguments, <ph id="ph1">`ParamArray`</ph> arguments, or <ph id="ph2">`Optional`</ph> arguments.</source>
          <target state="translated">イベントの引数は、プロシージャの引数と同様に宣言できます。ただし、イベントに対して名前付き引数、<ph id="ph1">`ParamArray`</ph> 引数、または <ph id="ph2">`Optional`</ph> 引数を指定することはできません。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Events do not have return values.</source>
          <target state="translated">イベントは値を返しません。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To handle an event, you must associate it with an event handler subroutine using either the <ph id="ph1">`Handles`</ph> or <ph id="ph2">`AddHandler`</ph> statement.</source>
          <target state="translated">イベントを処理するためには、<ph id="ph1">`Handles`</ph> ステートメントまたは <ph id="ph2">`AddHandler`</ph> ステートメントを使用して、イベントをイベント ハンドラー サブルーチンに関連付ける必要があります。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The signatures of the subroutine and the event must match.</source>
          <target state="translated">サブルーチンとイベントの署名が一致する必要があります。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To handle a shared event, you must use the <ph id="ph1">`AddHandler`</ph> statement.</source>
          <target state="translated">共有イベントを処理するには、<ph id="ph1">`AddHandler`</ph> ステートメントを使う必要があります。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You can use <ph id="ph1">`Event`</ph> only at module level.</source>
          <target state="translated"><ph id="ph1">`Event`</ph> は、モジュール レベルでのみ使用できます。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This means the <bpt id="p1">*</bpt>declaration context<ept id="p1">*</ept> for an event must be a class, structure, module, or interface, and cannot be a source file, namespace, procedure, or block.</source>
          <target state="translated">つまり、<bpt id="p1">*</bpt>宣言コンテキスト<ept id="p1">*</ept>イベントは、クラス、構造体、モジュール、またはインターフェイスである必要があり、ソース ファイル、名前空間、プロシージャ、またはブロックすることはできません。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Declaration Contexts and Default Access Levels<ept id="p1">](../../../visual-basic/language-reference/statements/declaration-contexts-and-default-access-levels.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>宣言コンテキストとアクセス レベルの既定の<ept id="p1">](../../../visual-basic/language-reference/statements/declaration-contexts-and-default-access-levels.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>In most circumstances, you can use the first syntax in the Syntax section of this topic for declaring events.</source>
          <target state="translated">ほとんどの状況で、このトピックの「構文」のセクションにある最初の構文を使ってイベントを宣言できますが、</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>However, some scenarios require that you have more control over the detailed behavior of the event.</source>
          <target state="translated">一部のシナリオでは、イベントの動作をより詳細に制御することが必要になります。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The last syntax in the Syntax section of this topic, which uses the <ph id="ph1">`Custom`</ph> keyword, provides that control by enabling you to define custom events.</source>
          <target state="translated">このトピックの「構文」セクションの最後には、<ph id="ph1">`Custom`</ph> キーワードを使用した構文があります。これを使用すると、カスタム イベントを定義してイベントを詳細に制御できます。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>In a custom event, you specify exactly what occurs when code adds or removes an event handler to or from the event, or when code raises the event.</source>
          <target state="translated">カスタム イベントでは、コードでイベント ハンドラーを追加または削除するときに、つまりコードでイベントを生成するときに、何が起こるかを正確に指定します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For examples, see <bpt id="p1">[</bpt>How to: Declare Custom Events To Conserve Memory<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-conserve-memory.md)</ept> and <bpt id="p2">[</bpt>How to: Declare Custom Events To Avoid Blocking<ept id="p2">](../../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md)</ept>.</source>
          <target state="translated">例については、次を参照してください。<bpt id="p1">[</bpt>方法: 節約メモリにカスタム イベントを宣言<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-conserve-memory.md)</ept>と<bpt id="p2">[</bpt>方法: 宣言カスタム イベントをしないようにブロック<ept id="p2">](../../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The following example uses events to count down seconds from 10 to 0.</source>
          <target state="translated">次の例では、イベントを使用して 10 秒から 0 秒までカウント ダウンします。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The code illustrates several of the event-related methods, properties, and statements.</source>
          <target state="translated">このコードは、イベント関連のいくつかのメソッド、プロパティ、およびステートメントの例を示しています。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This includes the <ph id="ph1">`RaiseEvent`</ph> statement.</source>
          <target state="translated"><ph id="ph1">`RaiseEvent`</ph> ステートメントの使用例も含まれています。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The class that raises an event is the event source, and the methods that process the event are the event handlers.</source>
          <target state="translated">イベントを発生させるクラスをイベント ソース、イベントを処理するメソッドをイベント ハンドラーと呼びます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>An event source can have multiple handlers for the events it generates.</source>
          <target state="translated">イベント ソースでは、生成されるイベントに対して複数のイベント ハンドラーを設定できます。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When the class raises the event, that event is raised on every class that has elected to handle events for that instance of the object.</source>
          <target state="translated">クラスでイベントが発生すると、そのイベントは、オブジェクトのインスタンスに対するイベントを処理するために選択されたすべてのクラスで発生します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The example also uses a form (<ph id="ph1">`Form1`</ph>) with a button (<ph id="ph2">`Button1`</ph>) and a text box (<ph id="ph3">`TextBox1`</ph>).</source>
          <target state="translated">また、この例では、ボタン (<ph id="ph2">`Button1`</ph>) とテキスト ボックス (<ph id="ph3">`TextBox1`</ph>) を含んだフォーム (<ph id="ph1">`Form1`</ph>) も使用しています。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>When you click the button, the first text box displays a countdown from 10 to 0 seconds.</source>
          <target state="translated">ボタンをクリックすると、1 つ目のテキスト ボックスに 10 秒から 0 秒までのカウントダウンが表示されます。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>When the full time (10 seconds) has elapsed, the first text box displays "Done".</source>
          <target state="translated">カウントダウンが終わると (10 秒が経過すると)、1 つ目のテキスト ボックスに "Done" と表示されます。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The code for <ph id="ph1">`Form1`</ph> specifies the initial and terminal states of the form.</source>
          <target state="translated"><ph id="ph1">`Form1`</ph> のコードでは、フォームの初期状態と終了状態を指定しています。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>It also contains the code executed when events are raised.</source>
          <target state="translated">イベント発生時に実行されるコードも含まれています。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To use this example, open a new Windows Forms project.</source>
          <target state="translated">この例を使用するには、新しい Windows フォーム プロジェクトを開きます。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Then add a button named <ph id="ph1">`Button1`</ph> and a text box named <ph id="ph2">`TextBox1`</ph> to the main form, named <ph id="ph3">`Form1`</ph>.</source>
          <target state="translated">次に、<ph id="ph1">`Button1`</ph> という名前のボタンと <ph id="ph2">`TextBox1`</ph> という名前のテキスト ボックスを、<ph id="ph3">`Form1`</ph> という名前のメイン フォームに追加します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Then right-click the form and click <bpt id="p1">**</bpt>View Code<ept id="p1">**</ept> to open the code editor.</source>
          <target state="translated">フォームを右クリックし、をクリックし、<bpt id="p1">**</bpt>コードの表示<ept id="p1">**</ept>コード エディターを開きます。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">`WithEvents`</ph> variable to the declarations section of the <ph id="ph2">`Form1`</ph> class:</source>
          <target state="translated"><ph id="ph2">`Form1`</ph> クラスの宣言セクションに、<ph id="ph1">`WithEvents`</ph> 変数を追加します。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents#14<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/event-statement_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents&amp;#14;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/event-statement_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Add the following code to the code for <ph id="ph1">`Form1`</ph>.</source>
          <target state="translated"><ph id="ph1">`Form1`</ph> のコードに次のコードを追加します。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Replace any duplicate procedures that may exist, such as <ph id="ph1">`Form_Load`</ph> or <ph id="ph2">`Button_Click`</ph>.</source>
          <target state="translated"><ph id="ph1">`Form_Load`</ph> や <ph id="ph2">`Button_Click`</ph> など、重複して存在する可能性のあるプロシージャを置き換えます。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents#15<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/event-statement_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents&amp;#15;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/event-statement_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Press F5 to run the previous example, and click the button labeled <bpt id="p1">**</bpt>Start<ept id="p1">**</ept>.</source>
          <target state="translated">前の例を実行し、というボタンをクリックし、f5 キーを押して<bpt id="p1">**</bpt>開始<ept id="p1">**</ept>します。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The first text box starts to count down the seconds.</source>
          <target state="translated">最初のテキスト ボックスで、秒のカウント ダウンが開始されます。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>When the full time (10 seconds) has elapsed, the first text box displays "Done".</source>
          <target state="translated">カウントダウンが終わると (10 秒が経過すると)、1 つ目のテキスト ボックスに "Done" と表示されます。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Application.DoEvents`</ph> method does not process events in the same way the form does.</source>
          <target state="translated"><ph id="ph1">`My.Application.DoEvents`</ph> メソッドがイベントを処理する方法は、フォームと同じではありません。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>To enable the form to handle the events directly, you can use multithreading.</source>
          <target state="translated">フォームでイベントを直接処理するには、マルチスレッドを使用します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Threading<ept id="p1">](http://msdn.microsoft.com/library/552f6c68-dbdb-4327-ae36-32cf9063d88c)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>スレッド<ept id="p1">](http://msdn.microsoft.com/library/552f6c68-dbdb-4327-ae36-32cf9063d88c)</ept>します。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>RaiseEvent Statement<ept id="p1">](../../../visual-basic/language-reference/statements/raiseevent-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>RaiseEvent ステートメント<ept id="p1">](../../../visual-basic/language-reference/statements/raiseevent-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Implements Statement<ept id="p1">](../../../visual-basic/language-reference/statements/implements-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Implements ステートメント<ept id="p1">](../../../visual-basic/language-reference/statements/implements-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Events<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>イベント<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>AddHandler Statement<ept id="p1">](../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>AddHandler ステートメント<ept id="p1">](../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>RemoveHandler Statement<ept id="p1">](../../../visual-basic/language-reference/statements/removehandler-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>RemoveHandler ステートメント<ept id="p1">](../../../visual-basic/language-reference/statements/removehandler-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Handles<ept id="p1">](../../../visual-basic/language-reference/statements/handles-clause.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>ハンドル<ept id="p1">](../../../visual-basic/language-reference/statements/handles-clause.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Delegate Statement<ept id="p1">](../../../visual-basic/language-reference/statements/delegate-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Delegate ステートメント<ept id="p1">](../../../visual-basic/language-reference/statements/delegate-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Declare Custom Events To Conserve Memory<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-conserve-memory.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法: メモリを節約するためにカスタム イベントを宣言します。<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-conserve-memory.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Declare Custom Events To Avoid Blocking<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法: ブロックされないようにするカスタム イベントを宣言します。<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Shared<ept id="p1">](../../../visual-basic/language-reference/modifiers/shared.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>共有<ept id="p1">](../../../visual-basic/language-reference/modifiers/shared.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Shadows<ept id="p1">](../../../visual-basic/language-reference/modifiers/shadows.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Shadows<ept id="p1">](../../../visual-basic/language-reference/modifiers/shadows.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>