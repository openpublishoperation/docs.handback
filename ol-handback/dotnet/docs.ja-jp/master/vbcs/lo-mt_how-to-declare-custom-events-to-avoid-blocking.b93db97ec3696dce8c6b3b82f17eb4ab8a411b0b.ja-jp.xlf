<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34b222bdbfdae0673b7150c220ca477b7e286dda</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\events\how-to-declare-custom-events-to-avoid-blocking.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">20e51342fd5c8b67644bac6bb3c95d22010a9f2c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8daa2e91c9a92b13b49752ab1e2f153f5369975</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Declare Custom Events To Avoid Blocking (Visual Basic) | Microsoft Docs</source>
          <target state="translated">方法: (Visual Basic の場合) がブロックされないようにするカスタム イベントを宣言する |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Declare Custom Events To Avoid Blocking (Visual Basic)</source>
          <target state="translated">方法: カスタム イベントを宣言してブロックを回避する (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>There are several circumstances when it is important that one event handler not block subsequent event handlers.</source>
          <target state="translated">その&amp;1; つのイベント ハンドラーが後続のイベント ハンドラーをブロックしない重要な場合は、いくつかの状況にもあります。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Custom events allow the event to call its event handlers asynchronously.</source>
          <target state="translated">カスタム イベントは、そのイベント ハンドラーを非同期的に呼び出すイベントを許可します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By default, the backing-store field for an event declaration is a multicast delegate that serially combines all the event handlers.</source>
          <target state="translated">既定では、イベント宣言のバッキング ストア フィールドは、すべてのイベント ハンドラーを順番に結合したマルチキャスト デリゲートです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This means that if one handler takes a long time to complete, it blocks the other handlers until it completes.</source>
          <target state="translated">これは、1 つのハンドラーに完了までに時間がある場合は、パラメーターを妨げる他のハンドラーが完了するまでことを意味します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>(Well-behaved event handlers should never perform lengthy or potentially blocking operations.)</source>
          <target state="translated">(正常に動作するイベント ハンドラーは、時間のかかる処理を妨げる可能性のある操作を実行する必要があることはありません) します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Instead of using the default implementation of events that Visual Basic provides, you can use a custom event to execute the event handlers asynchronously.</source>
          <target state="translated">Visual Basic ではイベントの既定の実装を使用する代わりに、イベント ハンドラーを非同期的に実行するのにカスタム イベントを使用できます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In this example, the <ph id="ph1">`AddHandler`</ph> accessor adds the delegate for each handler of the <ph id="ph2">`Click`</ph> event to an &lt;xref:System.Collections.ArrayList&gt; stored in the <ph id="ph3">`EventHandlerList`</ph> field.</source>
          <target state="translated">この例では、<ph id="ph1">`AddHandler`</ph>アクセサーは、の各ハンドラーのデリゲートを追加、<ph id="ph2">`Click`</ph>イベントを&lt;xref:System.Collections.ArrayList&gt;に格納されている、<ph id="ph3">`EventHandlerList`</ph>フィールド&lt;/xref:System.Collections.ArrayList&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When code raises the <ph id="ph1">`Click`</ph> event, the <ph id="ph2">`RaiseEvent`</ph> accessor invokes all the event handler delegates asynchronously using the &lt;xref:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke%2A&gt; method.</source>
          <target state="translated">コードを発生させるのと、 <ph id="ph1">`Click`</ph> 、イベント、<ph id="ph2">`RaiseEvent`</ph>アクセサーが非同期的を使用してすべてのイベント ハンドラーのデリゲートを呼び出す、&lt;xref:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke%2A&gt;メソッド&lt;/xref:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke%2A&gt;。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>That method invokes each handler on a worker thread and returns immediately, so handlers cannot block one another.</source>
          <target state="translated">そのメソッドでは、ワーカー スレッドで各ハンドラーが呼び出され、ハンドラーは、互いをブロックできませんので、すぐに返します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents#27<ept id="p2">](../../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/how-to-declare-custom-events-to-avoid-blocking_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents #&amp;27;<ept id="p2">](../../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/how-to-declare-custom-events-to-avoid-blocking_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Collections.ArrayList&gt;</source>
          <target state="translated">&lt;xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke%2A&gt;</source>
          <target state="translated">&lt;xref:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke%2A&gt;&lt;/xref:System.Web.Services.Protocols.LogicalMethodInfo.BeginInvoke%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Events<ept id="p1">](../../../../visual-basic/programming-guide/language-features/events/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>イベント<ept id="p1">](../../../../visual-basic/programming-guide/language-features/events/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Declare Custom Events To Conserve Memory<ept id="p1">](../../../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-conserve-memory.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法: カスタム イベントを宣言してメモリを節約する<ept id="p1">](../../../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-conserve-memory.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>