<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eea3466534f1797170ae4bc72afbcba899929911</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\procedures\how-to-force-an-argument-to-be-passed-by-value.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b4c08aa9649ce339965ca6f784316d7f30c666e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf5672e70b5ed89889dfddc96b528cd29b346c60</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Force an Argument to Be Passed by Value (Visual Basic) | Microsoft Docs</source>
          <target state="translated">方法: 引数 (Visual Basic) を値渡しを強制する |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Force an Argument to Be Passed by Value (Visual Basic)</source>
          <target state="translated">方法: 引数の値渡しを強制する (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The procedure declaration determines the passing mechanism.</source>
          <target state="translated">プロシージャの宣言では、引き渡し方法を決定します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If a parameter is declared <bpt id="p1">[</bpt>ByRef<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept>, <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> expects to pass the corresponding argument by reference.</source>
          <target state="translated">パラメーターが宣言されている場合<bpt id="p1">[</bpt>ByRef<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept>、<ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>参照によって、対応する引数を渡すが必要です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This allows the procedure to change the value of the programming element underlying the argument in the calling code.</source>
          <target state="translated">これにより、呼び出し元のコードで引数を基になるプログラミングの要素の値を変更する手順です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you wish to protect the underlying element against such change, you can override the <ph id="ph1">`ByRef`</ph> passing mechanism in the procedure call by enclosing the argument name in parentheses.</source>
          <target state="translated">このような変更を基になる要素を保護する場合をオーバーライドできます、<ph id="ph1">`ByRef`</ph>引き渡し方法の手順で呼び出す引数の名前をかっこで囲みます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>These parentheses are in addition to the parentheses enclosing the argument list in the call.</source>
          <target state="translated">このかっこは、呼び出しで引数リストを囲むかっこに追加します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The calling code cannot override a <bpt id="p1">[</bpt>ByVal<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byval.md)</ept> mechanism.</source>
          <target state="translated">呼び出し元のコードを上書きできません、 <bpt id="p1">[</bpt>ByVal<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byval.md)</ept>メカニズムです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To force an argument to be passed by value</source>
          <target state="translated">引数の値渡しを強制するには</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the corresponding parameter is declared <ph id="ph1">`ByVal`</ph> in the procedure, you do not need to take any additional steps.</source>
          <target state="translated">対応するパラメーターが宣言されている場合<ph id="ph1">`ByVal`</ph>の手順では、追加の手順を実行する必要はありません。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> already expects to pass the argument by value.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>既に、引数の値渡しを期待しています。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the corresponding parameter is declared <ph id="ph1">`ByRef`</ph> in the procedure, enclose the argument in parentheses in the procedure call.</source>
          <target state="translated">対応するパラメーターが宣言されている場合<ph id="ph1">`ByRef`</ph>の手順でプロシージャの呼び出しにかっこで囲まれた引数を囲みます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following example overrides a <ph id="ph1">`ByRef`</ph> parameter declaration.</source>
          <target state="translated">次の例では、オーバーライド、<ph id="ph1">`ByRef`</ph>パラメーター宣言します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the call that forces <ph id="ph1">`ByVal`</ph>, note the two levels of parentheses.</source>
          <target state="translated">強制的の呼び出しで<ph id="ph1">`ByVal`</ph>かっこの&amp;2; つのレベルに注意してください。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#39<ept id="p2">](./codesnippet/VisualBasic/how-to-force-an-argument-to-be-passed-by-value_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#39;<ept id="p2">](./codesnippet/VisualBasic/how-to-force-an-argument-to-be-passed-by-value_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#40<ept id="p2">](./codesnippet/VisualBasic/how-to-force-an-argument-to-be-passed-by-value_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures #&amp;40;<ept id="p2">](./codesnippet/VisualBasic/how-to-force-an-argument-to-be-passed-by-value_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`str`</ph> is enclosed in extra parentheses within the argument list, the <ph id="ph2">`setNewString`</ph> procedure cannot change its value in the calling code, and <ph id="ph3">`MsgBox`</ph> displays "Cannot be replaced if passed ByVal".</source>
          <target state="translated"><ph id="ph1">`str`</ph>引数リスト内で余分なかっこで囲まれた、<ph id="ph2">`setNewString`</ph>プロシージャが呼び出し元のコードにはその値を変更できませんと<ph id="ph3">`MsgBox`</ph>ByVal が渡された場合は、「を置き換えることはできません」が表示されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`str`</ph> is not enclosed in extra parentheses, the procedure can change it, and <ph id="ph2">`MsgBox`</ph> displays "This is a new value for the inString argument."</source>
          <target state="translated"><ph id="ph1">`str`</ph>囲まれていない余分なかっこで囲まれた、プロシージャを変更できますが、および<ph id="ph2">`MsgBox`</ph>「inString 引数の新しい値はこれです。」が表示されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
          <target state="translated">コードのコンパイル</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When you pass a variable by reference, you must use the <ph id="ph1">`ByRef`</ph> keyword to specify this mechanism.</source>
          <target state="translated">参照渡しで変数を渡す場合は、使用、<ph id="ph1">`ByRef`</ph>キーワードを明示的に指定します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The default in <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> is to pass arguments by value.</source>
          <target state="translated">既定で<ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>は引数の値渡しします。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>However, it is good programming practice to include either the <bpt id="p1">[</bpt>ByVal<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byval.md)</ept> or <bpt id="p2">[</bpt>ByRef<ept id="p2">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept> keyword with every declared parameter.</source>
          <target state="translated">いずれかを指定することをお勧めします<bpt id="p1">[</bpt>ByVal<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byval.md)</ept>または<bpt id="p2">[</bpt>ByRef<ept id="p2">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept>キーワード パラメーターを宣言します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This makes your code easier to read.</source>
          <target state="translated">これは、コードを読みやすくするためです。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Robust Programming</source>
          <target state="translated">信頼性の高いプログラミング</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If a procedure declares a parameter <bpt id="p1">[</bpt>ByRef<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept>, the correct execution of the code might depend on being able to change the underlying element in the calling code.</source>
          <target state="translated">プロシージャ パラメーターを宣言する場合は、 <bpt id="p1">[</bpt>ByRef<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept>コードの適切な実行は呼び出し元のコードの基になる要素に変更できることを依存している可能性があります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the calling code overrides this calling mechanism by enclosing the argument in parentheses, or if it passes a nonmodifiable argument, the procedure cannot change the underlying element.</source>
          <target state="translated">呼び出し元のコードは、引数をかっこで囲んででこの呼び出し元のメカニズムをオーバーライドする場合、または変更できない引数を渡す場合は、プロシージャは、基になる要素を変更できません。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This might produce unexpected results in the calling code.</source>
          <target state="translated">これは、呼び出し元のコードで予期しない結果となる可能性があります。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework セキュリティ</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>There is always a potential risk in allowing a procedure to change the value underlying an argument in the calling code.</source>
          <target state="translated">呼び出し元のコードで引数を基になる値を変更する手順を可能にすることは潜在的なリスクは常にします。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Make sure you expect this value to be changed, and be prepared to check it for validity before using it.</source>
          <target state="translated">この値を変更し、使用する前に有効性を確認する準備を期待することを確認します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Procedures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>手順<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Parameters and Arguments<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>プロシージャのパラメーターと引数<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Pass Arguments to a Procedure<ept id="p1">](./how-to-pass-arguments-to-a-procedure.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法: プロシージャに引数を渡す<ept id="p1">](./how-to-pass-arguments-to-a-procedure.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Passing Arguments by Value and by Reference<ept id="p1">](./passing-arguments-by-value-and-by-reference.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>値渡しと参照による引数渡し<ept id="p1">](./passing-arguments-by-value-and-by-reference.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Differences Between Modifiable and Nonmodifiable Arguments<ept id="p1">](./differences-between-modifiable-and-nonmodifiable-arguments.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>引数と変更できない引数の違い<ept id="p1">](./differences-between-modifiable-and-nonmodifiable-arguments.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Differences Between Passing an Argument By Value and By Reference<ept id="p1">](./differences-between-passing-an-argument-by-value-and-by-reference.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>値と参照渡しの引数を渡しの違い<ept id="p1">](./differences-between-passing-an-argument-by-value-and-by-reference.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Change the Value of a Procedure Argument<ept id="p1">](./how-to-change-the-value-of-a-procedure-argument.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法: プロシージャ引数の値を変更します。<ept id="p1">](./how-to-change-the-value-of-a-procedure-argument.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Protect a Procedure Argument Against Value Changes<ept id="p1">](./how-to-protect-a-procedure-argument-against-value-changes.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法: プロシージャ引数の値は変更しないように<ept id="p1">](./how-to-protect-a-procedure-argument-against-value-changes.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Passing Arguments by Position and by Name<ept id="p1">](./passing-arguments-by-position-and-by-name.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>位置と名前による引数渡し<ept id="p1">](./passing-arguments-by-position-and-by-name.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Value Types and Reference Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>値型と参照型<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>