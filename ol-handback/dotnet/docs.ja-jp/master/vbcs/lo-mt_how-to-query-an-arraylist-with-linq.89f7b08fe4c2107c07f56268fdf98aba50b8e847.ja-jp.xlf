<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f48b06c23b1e28fccb953638954a8d9afefe574e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\how-to-query-an-arraylist-with-linq.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">380a4831fa61ea2a763c408b84b3a4678ab79e01</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d23ba98192136a2a72244fb0884a027b87ea734</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Query an ArrayList with LINQ (Visual Basic) | Microsoft Docs</source>
          <target state="translated">方法: LINQ (Visual Basic) で ArrayList を照会 |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Query an ArrayList with LINQ (Visual Basic)</source>
          <target state="translated">方法: クエリ、LINQ で ArrayList を (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When using LINQ to query non-generic &lt;xref:System.Collections.IEnumerable&gt; collections such as &lt;xref:System.Collections.ArrayList&gt;, you must explicitly declare the type of the range variable to reflect the specific type of the objects in the collection.</source>
          <target state="translated">LINQ を使用してクエリの非ジェネリックする&lt;xref:System.Collections.IEnumerable&gt;などコレクション&lt;xref:System.Collections.ArrayList&gt;、コレクション内のオブジェクトの特定の種類を反映するように範囲変数の型を明示的に宣言する必要があります&lt;/xref:System.Collections.ArrayList&gt;&lt;/xref:System.Collections.IEnumerable&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, if you have an &lt;xref:System.Collections.ArrayList&gt; of <ph id="ph1">`Student`</ph> objects, your <bpt id="p1">[</bpt>From Clause<ept id="p1">](../../../../visual-basic/language-reference/queries/from-clause.md)</ept> should look like this:</source>
          <target state="translated">ある場合など、&lt;xref:System.Collections.ArrayList&gt;の<ph id="ph1">`Student`</ph>オブジェクト、 <bpt id="p1">[</bpt>From 句<ept id="p1">](../../../../visual-basic/language-reference/queries/from-clause.md)</ept>次のようになります:&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By specifying the type of the range variable, you are casting each item in the &lt;xref:System.Collections.ArrayList&gt; to a <ph id="ph1">`Student`</ph>.</source>
          <target state="translated">内の各項目のキャストの範囲変数の型を指定することによって、&lt;xref:System.Collections.ArrayList&gt;に、 <ph id="ph1">`Student`</ph>&lt;/xref:System.Collections.ArrayList&gt; 。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The use of an explicitly typed range variable in a query expression is equivalent to calling the &lt;xref:System.Linq.Enumerable.Cast%2A&gt; method.</source>
          <target state="translated">クエリ式で明示的に型指定された範囲変数の使用は呼び出すことと同じ、&lt;xref:System.Linq.Enumerable.Cast%2A&gt;メソッド&lt;/xref:System.Linq.Enumerable.Cast%2A&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Enumerable.Cast%2A&gt; throws an exception if the specified cast cannot be performed.</source>
          <target state="translated">&lt;xref:System.Linq.Enumerable.Cast%2A&gt;指定されたキャストは実行できない場合は、例外をスローします。&lt;/xref:System.Linq.Enumerable.Cast%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Enumerable.Cast%2A&gt; and &lt;xref:System.Linq.Enumerable.OfType%2A&gt; are the two Standard Query Operator methods that operate on non-generic &lt;xref:System.Collections.IEnumerable&gt; types.</source>
          <target state="translated">&lt;xref:System.Linq.Enumerable.Cast%2A&gt;&lt;xref:System.Linq.Enumerable.OfType%2A&gt;非ジェネリックで動作する&amp;2; つの標準クエリ演算子メソッドを&lt;xref:System.Collections.IEnumerable&gt;の種類&lt;/xref:System.Collections.IEnumerable&gt;&lt;/xref:System.Linq.Enumerable.OfType%2A&gt;。&lt;/xref:System.Linq.Enumerable.Cast%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In Visual Basic, you must explicitly call the &lt;xref:System.Linq.Enumerable.Cast%2A&gt; method on the data source to ensure a specific range variable type.</source>
          <target state="translated">Visual basic で明示的に呼び出す必要があります、&lt;xref:System.Linq.Enumerable.Cast%2A&gt;メソッドをデータ ソースを特定の範囲変数の型を確認します&lt;/xref:System.Linq.Enumerable.Cast%2A&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see<bpt id="p1">[</bpt>Type Relationships in Query Operations (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/type-relationships-in-query-operations.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>クエリ操作 (Visual Basic) での型の関係<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/type-relationships-in-query-operations.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following example shows a simple query over an &lt;xref:System.Collections.ArrayList&gt;.</source>
          <target state="translated">次の例は、 &lt;xref:System.Collections.ArrayList&gt;。&lt;/xref:System.Collections.ArrayList&gt;経由で簡単なクエリを示します</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Note that this example uses object initializers when the code calls the &lt;xref:System.Collections.ArrayList.Add%2A&gt; method, but this is not a requirement.</source>
          <target state="translated">この例では、コードを呼び出すときに、オブジェクト初期化子が使用して、メモ、&lt;xref:System.Collections.ArrayList.Add%2A&gt;メソッドが、これは必須ではありません&lt;/xref:System.Collections.ArrayList.Add%2A&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ to Objects (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-objects.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>LINQ to Objects (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-objects.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>