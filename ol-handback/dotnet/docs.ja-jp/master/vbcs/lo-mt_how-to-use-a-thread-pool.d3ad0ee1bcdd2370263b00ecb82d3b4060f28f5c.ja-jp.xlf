<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d60bceea0ed956075233f5f045131ffb2eb37eef</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\threading\how-to-use-a-thread-pool.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1df602dde91906f5048d01c74939a51258cc79f7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">46fad651eb3be3d792d34fec45e6ac93bb194df2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Use a Thread Pool (Visual Basic) | Microsoft Docs</source>
          <target state="translated">方法: スレッド プール (Visual Basic) を使用する |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Use a Thread Pool (Visual Basic)</source>
          <target state="translated">方法: スレッド プール (Visual Basic) を使用します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Thread pooling<ept id="p1">*</ept> is a form of multithreading in which tasks are added to a queue and automatically started when threads are created.</source>
          <target state="translated"><bpt id="p1">*</bpt>スレッド プール<ept id="p1">*</ept>の形式は、どのタスクがキューに追加され、スレッドを作成するときに自動的に開始のマルチ スレッド処理します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Thread Pooling (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/threading/thread-pooling.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>(Visual Basic) スレッド プール<ept id="p1">](../../../../visual-basic/programming-guide/concepts/threading/thread-pooling.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following example uses the .NET Framework thread pool to calculate the <ph id="ph1">`Fibonacci`</ph> result for ten numbers between 20 and 40.</source>
          <target state="translated">次の例で、.NET Framework スレッド プールを使用して、計算、 <ph id="ph1">`Fibonacci`</ph> 20 ~ 40 の間の 10 個の数字の結果。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`Fibonacci`</ph> result is represented by the <ph id="ph2">`Fibonacci`</ph> class, which provides a method named <ph id="ph3">`ThreadPoolCallback`</ph> that performs the calculation.</source>
          <target state="translated">各<ph id="ph1">`Fibonacci`</ph>で結果を表す、<ph id="ph2">`Fibonacci`</ph>という名前のメソッドを提供するクラス<ph id="ph3">`ThreadPoolCallback`</ph>計算を実行します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>An object that represents each <ph id="ph1">`Fibonacci`</ph> value is created, and the <ph id="ph2">`ThreadPoolCallback`</ph> method is passed to &lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;, which assigns an available thread in the pool to execute the method.</source>
          <target state="translated">それぞれを表すオブジェクト<ph id="ph1">`Fibonacci`</ph>値を作成すると、および<ph id="ph2">`ThreadPoolCallback`</ph>をメソッドに渡されます&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;、メソッドの実行にプールで利用可能なスレッドが割り当てられます&lt;/xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Because each <ph id="ph1">`Fibonacci`</ph> object is given a semi-random value to compute, and because each thread will be competing for processor time, you cannot know in advance how long it will take for all ten results to be calculated.</source>
          <target state="translated">各<ph id="ph1">`Fibonacci`</ph>オブジェクトにを計算するための半ランダムな値が指定され、ため、各スレッドは、プロセッサ時間の競合は、事前に時間が&amp;10; 個すべての結果を計算するを知ることはできません。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>That is why each <ph id="ph1">`Fibonacci`</ph> object is passed an instance of the &lt;xref:System.Threading.ManualResetEvent&gt; class during construction.</source>
          <target state="translated">そういう各<ph id="ph1">`Fibonacci`</ph>オブジェクトには、インスタンスが渡される、&lt;xref:System.Threading.ManualResetEvent&gt;の構築時にクラス&lt;/xref:System.Threading.ManualResetEvent&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Each object signals the provided event object when its calculation is complete, which allows the primary thread to block execution with &lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt; until all ten <ph id="ph1">`Fibonacci`</ph> objects have calculated a result.</source>
          <target state="translated">各オブジェクトが指定されたイベント オブジェクトに通知の計算が終了すると、これにより、プライマリ スレッドで実行をブロックする&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;10 まで<ph id="ph1">`Fibonacci`</ph>オブジェクトが、結果を計算します&lt;/xref:System.Threading.WaitHandle.WaitAll%2A&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Main`</ph> method then displays each <ph id="ph2">`Fibonacci`</ph> result.</source>
          <target state="translated"><ph id="ph1">`Main`</ph>メソッドは、それぞれ表示<ph id="ph2">`Fibonacci`</ph>結果。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Following is an example of the output.</source>
          <target state="translated">出力の例を次に示します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Threading.Mutex&gt;</source>
          <target state="translated">&lt;xref:System.Threading.Mutex&gt;&lt;/xref:System.Threading.Mutex&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</source>
          <target state="translated">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;&lt;/xref:System.Threading.WaitHandle.WaitAll%2A&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Threading.ManualResetEvent&gt;</source>
          <target state="translated">&lt;xref:System.Threading.ManualResetEvent&gt;&lt;/xref:System.Threading.ManualResetEvent&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Threading.EventWaitHandle.Set%2A&gt;</source>
          <target state="translated">&lt;xref:System.Threading.EventWaitHandle.Set%2A&gt;&lt;/xref:System.Threading.EventWaitHandle.Set%2A&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Threading.ThreadPool&gt;</source>
          <target state="translated">&lt;xref:System.Threading.ThreadPool&gt;&lt;/xref:System.Threading.ThreadPool&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;</source>
          <target state="translated">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;&lt;/xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Threading.ManualResetEvent&gt;</source>
          <target state="translated">&lt;xref:System.Threading.ManualResetEvent&gt;&lt;/xref:System.Threading.ManualResetEvent&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Thread Pooling (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/threading/thread-pooling.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>スレッド プール (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/threading/thread-pooling.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Threading (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/threading/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>スレッド処理 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/threading/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Security<ept id="p1">](http://msdn.microsoft.com/library/9a9621d7-8883-4a4f-a874-65e8e09e20a6)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>セキュリティ<ept id="p1">](http://msdn.microsoft.com/library/9a9621d7-8883-4a4f-a874-65e8e09e20a6)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>