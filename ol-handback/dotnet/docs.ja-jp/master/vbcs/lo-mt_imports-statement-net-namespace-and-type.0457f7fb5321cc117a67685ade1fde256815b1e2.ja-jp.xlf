<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">393f3e9a264817d8658585267c954d973290530a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\statements\imports-statement-net-namespace-and-type.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b3551749296380ecf46d8c8f4dccbc38d40695df</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65a350bc220c96a474f4b24566c08b744ae47069</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Imports Statement (.NET Namespace and Type) | Microsoft Docs</source>
          <target state="translated">Imports ステートメント (.NET Namespace よぶ型) |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Imports Statement (.NET Namespace and Type)</source>
          <target state="translated">Imports ステートメント (.NET 名前空間および型)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Enables type names to be referenced without namespace qualification.</source>
          <target state="translated">有効では、名前空間の修飾せずに参照する名前を入力します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">指定項目</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="translated">用語</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">定義</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">省略可能です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">*</bpt>import alias<ept id="p1">*</ept> or name by which code can refer to <ph id="ph1">`namespace`</ph> instead of the full qualification string.</source>
          <target state="translated"><bpt id="p1">*</bpt>インポート エイリアス<ept id="p1">*</ept>または名前ではコードから参照する<ph id="ph1">`namespace`</ph>完全に修飾文字列の代わりにします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Declared Element Names<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.</source>
          <target state="translated">参照してください<bpt id="p1">[</bpt>宣言された要素の名前<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必須です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The fully qualified name of the namespace being imported.</source>
          <target state="translated">インポートされる名前空間の完全修飾名。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Can be a string of namespaces nested to any level.</source>
          <target state="translated">名前空間の文字列はネストできます任意のレベルに。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">省略可能です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The name of a programming element declared in the namespace.</source>
          <target state="translated">プログラミングの要素の名前は、名前空間で宣言します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Can be any container element.</source>
          <target state="translated">任意のコンテナー要素を指定できます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">コメント</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Imports`</ph>  statement enables types that are contained in a given namespace to be referenced directly.</source>
          <target state="translated"><ph id="ph1">`Imports`</ph>ステートメントにより、型を直接参照できる特定の名前空間に含まれています。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can supply a single namespace name or a string of nested namespaces.</source>
          <target state="translated">単一の名前空間名または入れ子になった名前空間の文字列を指定することができます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Each nested namespace is separated from the next higher level namespace by a period (<ph id="ph1">`.`</ph>), as the following example illustrates.</source>
          <target state="translated">入れ子になった各名前空間がピリオドで区切った次のより高いレベルの名前空間から (<ph id="ph1">`.`</ph>) 次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Each source file can contain any number of <ph id="ph1">`Imports`</ph> statements.</source>
          <target state="translated">各ソース ファイルは、任意の数を含めることができます<ph id="ph1">`Imports`</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>These must follow any option declarations, such as the <ph id="ph1">`Option Strict`</ph> statement, and they must precede any programming element declarations, such as <ph id="ph2">`Module`</ph> or <ph id="ph3">`Class`</ph> statements.</source>
          <target state="translated">これらをたどるに任意のオプションを宣言など、<ph id="ph1">`Option Strict`</ph>ステートメント、およびそれらの前に指定任意のプログラミング要素宣言など<ph id="ph2">`Module`</ph>または<ph id="ph3">`Class`</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can use <ph id="ph1">`Imports`</ph> only at file level.</source>
          <target state="translated">使用する<ph id="ph1">`Imports`</ph>ファイル レベルでのみです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This means the declaration context for importation must be a source file, and cannot be a namespace, class, structure, module, interface, procedure, or block.</source>
          <target state="translated">つまり、宣言コンテキストのインポートでソース ファイルである名前空間、クラス、構造体、モジュール、インターフェイス、プロシージャ、またはブロックすることはできません。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Note that the <ph id="ph1">`Imports`</ph> statement does not make elements from other projects and assemblies available to your project.</source>
          <target state="translated"><ph id="ph1">`Imports`</ph>ステートメントは行いませんから他のプロジェクトおよびアセンブリの要素をプロジェクトで使用します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Importing does not take the place of setting a reference.</source>
          <target state="translated">インポートは行われず、参照を設定します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It only removes the need to qualify names that are already available to your project.</source>
          <target state="translated">既にプロジェクトに使用できる名前を修飾する必要性のみを削除します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information, see "Importing Containing Elements" in <bpt id="p1">[</bpt>References to Declared Elements<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>.</source>
          <target state="translated">詳細については、「を含む要素のインポート」を参照してください<bpt id="p1">[</bpt>宣言された要素への参照<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can define implicit <ph id="ph1">`Imports`</ph> statements by using the <bpt id="p1">[</bpt>References Page, Project Designer (Visual Basic)<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/references-page-project-designer-visual-basic)</ept>.</source>
          <target state="translated">暗黙の型を定義する<ph id="ph1">`Imports`</ph>ステートメントを使用して、<bpt id="p1">[</bpt>参照設定 ページ、プロジェクト デザイナー) (Visual Basic)<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/references-page-project-designer-visual-basic)</ept>します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Imported Namespaces (Visual Basic)<ept id="p1">](http://msdn.microsoft.com/library/44cebec3-0ea0-47c2-8406-4edeab6a997e)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>方法: 追加またはインポートされた名前空間 (Visual Basic) を削除する<ept id="p1">](http://msdn.microsoft.com/library/44cebec3-0ea0-47c2-8406-4edeab6a997e)</ept>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Import Aliases</source>
          <target state="translated">インポート エイリアス</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">*</bpt>import alias<ept id="p1">*</ept> defines the alias for a namespace or type.</source>
          <target state="translated"><bpt id="p1">*</bpt>インポート エイリアス<ept id="p1">*</ept>名前空間または型のエイリアスを定義します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Import aliases are useful when you need to use items with the same name that are declared in one or more namespaces.</source>
          <target state="translated">インポート エイリアスは、1 つ以上の名前空間で宣言されているのと同じ名前を持つ項目を使用する必要がある場合に役立ちます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information and an example, see "Qualifying an Element Name" in <bpt id="p1">[</bpt>References to Declared Elements<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>.</source>
          <target state="translated">詳細および例に、「an 要素名を修飾する」を参照してください<bpt id="p1">[</bpt>宣言された要素への参照<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You should not declare a member at module level with the same name as <ph id="ph1">`aliasname`</ph>.</source>
          <target state="translated">同じ名前のモジュール レベルでメンバーを宣言する必要があります<ph id="ph1">`aliasname`</ph>します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you do, the Visual Basic compiler uses <ph id="ph1">`aliasname`</ph> only for the declared member and no longer recognizes it as an import alias.</source>
          <target state="translated">Visual Basic コンパイラを使用した場合、<ph id="ph1">`aliasname`</ph>宣言されたメンバーに対してのみとしません。 インポート エイリアスとして認識します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Although the syntax used for declaring an import alias is like that used for importing an XML namespace prefix, the results are different.</source>
          <target state="translated">インポート エイリアスを宣言するために使用される構文は、XML 名前空間プレフィックスをインポートするため使用されることはそのようなが、結果は異なります。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An import alias can be used as an expression in your code, whereas an XML namespace prefix can be used only in XML literals or XML axis properties as the prefix for a qualified element or attribute name.</source>
          <target state="translated">インポート エイリアスは、XML 名前空間プレフィックスとして使用できます XML リテラルと XML 軸プロパティだけで、プレフィックスで修飾された要素または属性の名前には、コードでは、式として使用できます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Element Names</source>
          <target state="translated">要素の名前</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If you supply <ph id="ph1">`element`</ph>, it must represent a <bpt id="p1">*</bpt>container element<ept id="p1">*</ept>, that is, a programming element that can contain other elements.</source>
          <target state="translated">指定した場合<ph id="ph1">`element`</ph>、表している必要があります、<bpt id="p1">*</bpt>コンテナー要素<ept id="p1">*</ept>、その他の要素を含めることができるプログラミング要素は、です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Container elements include classes, structures, modules, interfaces, and enumerations.</source>
          <target state="translated">コンテナー要素には、クラス、構造体、モジュール、インターフェイス、および列挙が含まれます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The scope of the elements made available by an <ph id="ph1">`Imports`</ph> statement depends on whether you specify <ph id="ph2">`element`</ph>.</source>
          <target state="translated">によって提供される要素のスコープ、<ph id="ph1">`Imports`</ph>ステートメントは、指定するかどうかによって異なります<ph id="ph2">`element`</ph>します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you specify only <ph id="ph1">`namespace`</ph>, all uniquely named members of that namespace, and members of container elements within that namespace, are available without qualification.</source>
          <target state="translated">だけを指定する場合は、 <ph id="ph1">`namespace`</ph>、すべて一意にその名前空間のメンバーとその名前空間内のコンテナー要素のメンバーの名前、修飾なしで利用されます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you specify both <ph id="ph1">`namespace`</ph> and <ph id="ph2">`element`</ph>, only the members of that element are available without qualification.</source>
          <target state="translated">両方を指定する場合は、<ph id="ph1">`namespace`</ph>と<ph id="ph2">`element`</ph>、のみ、その要素のメンバーを修飾なしで使用します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following example returns all the folders in the C:\ directory by using the &lt;xref:System.IO.DirectoryInfo&gt; class.</source>
          <target state="translated">次の例は、&lt;xref:System.IO.DirectoryInfo&gt;クラス&lt;/xref:System.IO.DirectoryInfo&gt;を使用して、C:\ ディレクトリ内のすべてのフォルダーを返します</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The code has no <ph id="ph1">`Imports`</ph> statements at the top of the file.</source>
          <target state="translated">コードは いいえ<ph id="ph1">`Imports`</ph>ステートメントをファイルの先頭にします。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Therefore, the <ph id="ph1">`DirectoryInfo`</ph>, &lt;xref:System.Text.StringBuilder&gt;, and &lt;xref:Microsoft.VisualBasic.ControlChars.CrLf&gt; references are all fully qualified with the namespaces.</source>
          <target state="translated">したがって、 <ph id="ph1">`DirectoryInfo`</ph>、 &lt;xref:System.Text.StringBuilder&gt;、および&lt;xref:Microsoft.VisualBasic.ControlChars.CrLf&gt;参照はすべて完全修飾名前空間にします&lt;/xref:Microsoft.VisualBasic.ControlChars.CrLf&gt;&lt;/xref:System.Text.StringBuilder&gt;。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#152<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;152;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following example includes <ph id="ph1">`Imports`</ph> statements for the referenced namespaces.</source>
          <target state="translated">次の例が含まれます<ph id="ph1">`Imports`</ph>参照先の名前空間ステートメントです。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Therefore, the types do not have to be fully qualified with the namespaces.</source>
          <target state="translated">そのため、型は、完全修飾名前空間にするのにはありません。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#153<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;153;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#154<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;154;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following example includes <ph id="ph1">`Imports`</ph> statements that create aliases for the referenced namespaces.</source>
          <target state="translated">次の例が含まれます<ph id="ph1">`Imports`</ph>参照先の名前空間の別名を作成するステートメントです。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The types are qualified with the aliases.</source>
          <target state="translated">種類は、エイリアスを持つ修飾されます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#155<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;155;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#156<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;156;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The following example includes <ph id="ph1">`Imports`</ph> statements that create aliases for the referenced types.</source>
          <target state="translated">次の例が含まれます<ph id="ph1">`Imports`</ph>の参照先の型のエイリアスを作成するステートメントです。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Aliases are used to specify the types.</source>
          <target state="translated">エイリアスを使用して、種類を指定します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#157<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;157;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#158<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_7.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;158;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_7.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Namespace Statement<ept id="p1">](../../../visual-basic/language-reference/statements/namespace-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Namespace ステートメント<ept id="p1">](../../../visual-basic/language-reference/statements/namespace-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Namespaces in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/program-structure/namespaces.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Visual Basic における名前空間<ept id="p1">](../../../visual-basic/programming-guide/program-structure/namespaces.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>References and the Imports Statement<ept id="p1">](../../../visual-basic/programming-guide/program-structure/references-and-the-imports-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>参照と Imports ステートメント<ept id="p1">](../../../visual-basic/programming-guide/program-structure/references-and-the-imports-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Imports Statement (XML Namespace)<ept id="p1">](../../../visual-basic/language-reference/statements/imports-statement-xml-namespace.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Imports ステートメント (XML Namespace)<ept id="p1">](../../../visual-basic/language-reference/statements/imports-statement-xml-namespace.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>References to Declared Elements<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>宣言された要素の参照<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>