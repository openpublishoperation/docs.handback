<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ed8ecf69170acf9745a4038975e7e3421722d52d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\xml\names-of-declared-xml-elements-and-attributes.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">893093d30ee6877829858cbf3c4c0cd92011a4a9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a171bbb1a2262d9c097b9ed6db72767f928cffa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Names of Declared XML Elements and Attributes (Visual Basic) | Microsoft Docs</source>
          <target state="translated">宣言する XML 要素と属性 (Visual Basic) の名前。Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Names of Declared XML Elements and Attributes (Visual Basic)</source>
          <target state="translated">宣言する XML 要素と属性の名前 (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic provides <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> guidelines for naming XML elements and attributes in XML literals.</source>
          <target state="translated">このトピックでは<ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>XML リテラルの XML 要素および属性を名前付けのガイドラインです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In an XML literal, you can specify a local name or a qualified name.</source>
          <target state="translated">XML リテラルでは、ローカル名または修飾名を指定できます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A qualified name consists of an XML namespace prefix, a colon, and a local name.</source>
          <target state="translated">修飾名は、XML 名前空間プレフィックス、コロン、およびローカル名で構成されます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information about XML namespace prefixes, see <bpt id="p1">[</bpt>XML Element Literal<ept id="p1">](../../../../visual-basic/language-reference/xml-literals/xml-element-literal.md)</ept>.</source>
          <target state="translated">XML 名前空間プレフィックスの詳細については、次を参照してください。 <bpt id="p1">[</bpt>XML 要素リテラル<ept id="p1">](../../../../visual-basic/language-reference/xml-literals/xml-element-literal.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Rules</source>
          <target state="translated">ルール</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A local name of an element or attribute in <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> must adhere to the following rules.</source>
          <target state="translated">要素または属性のローカル名<ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>次の規則に従う必要があります。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It can begin with a namespace.</source>
          <target state="translated">名前空間がそれを開始できます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It must begin with an alphabetical character or an underscore (<ph id="ph1">`_`</ph>).</source>
          <target state="translated">英文字またはアンダー スコアで始まる必要があります (<ph id="ph1">`_`</ph>)。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It must contain only alphabetical characters, decimal digits, underscores, periods (.), and hyphens (-).</source>
          <target state="translated">のみ英文字、10 進数字、アンダー スコア、ピリオド (.)、およびハイフンを含める必要があります (-)。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>It must not be more than 1,024 characters long.</source>
          <target state="translated">1,024 を超える文字はできません。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Colons that appear in names indicate namespace demarcation.</source>
          <target state="translated">名前に含まれるコロンは、名前空間の区切りを示します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Therefore, you can use colons only to specify an XML namespace for a particular name.</source>
          <target state="translated">したがって、特定の名前の XML 名前空間を指定する場合のみ、コロンを使用できます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In addition, you should adhere to the following guideline.</source>
          <target state="translated">さらに、次のガイドラインに従う必要があります。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The XML 1.0 specification reserves all names starting with the string "xml", of any capitalization variation.</source>
          <target state="translated">XML 1.0 仕様では、大文字と小文字のいずれかのバリエーションの"xml"を文字列で始まるすべての名前を予約します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Therefore, do not use those names for your element and attribute names.</source>
          <target state="translated">したがって、これらの要素名および属性名は使用しないでください。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Name Length Guidelines</source>
          <target state="translated">名前の長さのガイドライン</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>As a practical matter, a name should be as short as possible while still clearly identifying the nature of the element.</source>
          <target state="translated">実際には、名前する必要がありますできるだけ短く中の要素の特性を明確にします。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This improves the readability of your code and reduces line length and source-file size.</source>
          <target state="translated">これにより、コードの読みやすさを向上し、行の長さとソース ファイルのサイズを小さきます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>However, your name should not be so short that it does not adequately describe the element or how your code uses it.</source>
          <target state="translated">ただし、自分の名前は、長さいない適切に記述できる要素かどうか、コードがこれを使用する方法である必要があります。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This is important for the readability of your code.</source>
          <target state="translated">これは、コードの読みやすさにとって重要です。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If somebody else is trying to understand it, or if you yourself are looking at it a long time after you wrote it, appropriate element names can save time.</source>
          <target state="translated">使い方も理解しようとする他の人がいる場合、または自分で検索する場合に作成した後、長い時間は、適切な要素の名前は、時間を節約できます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Case Sensitivity in Names</source>
          <target state="translated">名前に大文字小文字の区別</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>XML element names are case sensitive.</source>
          <target state="translated">XML 要素名は、大文字小文字が区別されます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This means that when the <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> compiler compares two names that differ in alphabetical case only, it interprets them as different names.</source>
          <target state="translated">つまり、<ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>コンパイラがアルファベットの大文字小文字の表記が異なる&amp;2; つの名前を比較し、異なる名前として解釈します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For example, it interprets <ph id="ph1">`ABC`</ph> and <ph id="ph2">`abc`</ph> as referring to separate elements.</source>
          <target state="translated">たとえば、解釈<ph id="ph1">`ABC`</ph>と<ph id="ph2">`abc`</ph>要素を区切る参照するものとします。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>XML Namespaces</source>
          <target state="translated">XML 名前空間</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>When creating an XML element literal, you can specify the XML namespace prefix for the element name.</source>
          <target state="translated">XML 要素リテラルを作成する場合は、要素名の XML 名前空間プレフィックスを指定できます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>XML Element Literal<ept id="p1">](../../../../visual-basic/language-reference/xml-literals/xml-element-literal.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>XML 要素リテラル<ept id="p1">](../../../../visual-basic/language-reference/xml-literals/xml-element-literal.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Creating XML in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Visual Basic で XML を作成します。<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XML Element Literal<ept id="p1">](../../../../visual-basic/language-reference/xml-literals/xml-element-literal.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>XML 要素リテラル<ept id="p1">](../../../../visual-basic/language-reference/xml-literals/xml-element-literal.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>