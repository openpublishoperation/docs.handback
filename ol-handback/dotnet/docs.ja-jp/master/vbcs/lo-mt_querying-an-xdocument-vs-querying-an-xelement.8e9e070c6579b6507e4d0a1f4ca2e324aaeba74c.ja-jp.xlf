<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">29044cd118bfd8ecc12bddca722ee3656d455e0f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\querying-an-xdocument-vs-querying-an-xelement.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">491302f7277d01bba0b0fd969d42c871c827c653</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">35a0c4b1050d3cb06c23355ca9dceeb9422ad89e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Querying an XDocument vs. Querying an XElement (Visual Basic) | Microsoft Docs</source>
          <target state="translated">XDocument のクエリと (Visual Basic) XElement のクエリ |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Querying an XDocument vs. Querying an XElement (Visual Basic)</source>
          <target state="translated">XDocument のクエリと (Visual Basic) XElement のクエリ</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When you load a document via &lt;xref:System.Xml.Linq.XDocument.Load%2A?displayProperty=fullName&gt;, you will notice that you have to write queries slightly differently than when you load via &lt;xref:System.Xml.Linq.XElement.Load%2A?displayProperty=fullName&gt;.</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XDocument.Load%2A?displayProperty=fullName&gt; &lt;xref:System.Xml.Linq.XElement.Load%2A?displayProperty=fullName&gt;。&lt;/xref:System.Xml.Linq.XElement.Load%2A?displayProperty=fullName&gt;を使用して読み込む場合よりも少し異なる方法でクエリを記述する必要があることを確認は、&lt;/xref:System.Xml.Linq.XDocument.Load%2A?displayProperty=fullName&gt;使用してドキュメントを読み込む場合</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Comparison of XDocument.Load and XElement.Load</source>
          <target state="translated">XDocument.Load と XElement.Load の比較</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When you load an XML document into an &lt;xref:System.Xml.Linq.XElement&gt; via &lt;xref:System.Xml.Linq.XElement.Load%2A?displayProperty=fullName&gt;, the &lt;xref:System.Xml.Linq.XElement&gt; at the root of the XML tree contains the root element of the loaded document.</source>
          <target state="translated">XML ドキュメントを読み込む場合、&lt;xref:System.Xml.Linq.XElement&gt;経由で&lt;xref:System.Xml.Linq.XElement.Load%2A?displayProperty=fullName&gt;、&lt;xref:System.Xml.Linq.XElement&gt;ツリーには XML のルートには、読み込んだドキュメントのルート要素が含まれています&lt;/xref:System.Xml.Linq.XElement&gt;&lt;/xref:System.Xml.Linq.XElement.Load%2A?displayProperty=fullName&gt;&lt;/xref:System.Xml.Linq.XElement&gt;。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>However, when you load the same XML document into an &lt;xref:System.Xml.Linq.XDocument&gt; via &lt;xref:System.Xml.Linq.XDocument.Load%2A?displayProperty=fullName&gt;, the root of the tree is an &lt;xref:System.Xml.Linq.XDocument&gt; node, and the root element of the loaded document is the one allowed child &lt;xref:System.Xml.Linq.XElement&gt; node of the &lt;xref:System.Xml.Linq.XDocument&gt;.</source>
          <target state="translated">ただし、読み込む場合、同じ XML ドキュメントに、&lt;xref:System.Xml.Linq.XDocument&gt;&lt;xref:System.Xml.Linq.XDocument.Load%2A?displayProperty=fullName&gt;ツリーのルートの&lt;xref:System.Xml.Linq.XDocument&gt;ノードで、読み込んだドキュメントのルート要素は&amp;1; つの許可されている子&lt;xref:System.Xml.Linq.XElement&gt;&lt;xref:System.Xml.Linq.XDocument&gt;。&lt;/xref:System.Xml.Linq.XDocument&gt;ノード&lt;/xref:System.Xml.Linq.XElement&gt;&lt;/xref:System.Xml.Linq.XDocument&gt;、&lt;/xref:System.Xml.Linq.XDocument.Load%2A?displayProperty=fullName&gt;使用して&lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> axes operate relative to the root node.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> 軸は、ルート ノードを基準に動作します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This first example loads an XML tree using &lt;xref:System.Xml.Linq.XElement.Load%2A&gt;.</source>
          <target state="translated">この最初の例は、 &lt;xref:System.Xml.Linq.XElement.Load%2A&gt;。&lt;/xref:System.Xml.Linq.XElement.Load%2A&gt;を使用して XML ツリーを読み込みます</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It then queries for the child elements of the root of the tree.</source>
          <target state="translated">次に、ツリーのルートの子要素をクエリします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>As expected, this example produces the following output:</source>
          <target state="translated">この例では、次の出力が生成されることが想定されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following example is the same as the one above, with the exception that the XML tree is loaded into an &lt;xref:System.Xml.Linq.XDocument&gt; instead of an &lt;xref:System.Xml.Linq.XElement&gt;.</source>
          <target state="translated">次の例は、1 つとして前、に、 &lt;xref:System.Xml.Linq.XDocument&gt; &lt;xref:System.Xml.Linq.XElement&gt;。&lt;/xref:System.Xml.Linq.XElement&gt;ではなく&lt;/xref:System.Xml.Linq.XDocument&gt;XML ツリーが読み込まれている例外で同じ</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Notice that the same query returned the one <ph id="ph1">`Root`</ph> node instead of the three child nodes.</source>
          <target state="translated">この同じクエリでは、3 つの子ノードではなく&amp;1; つの <ph id="ph1">`Root`</ph> ノードが返されたことがわかります。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>One approach to dealing with this is to use the &lt;xref:System.Xml.Linq.XDocument.Root%2A&gt; property before accessing the axes methods, as follows:</source>
          <target state="translated">これに対処する方法の&amp;1; つは、使用する、&lt;xref:System.Xml.Linq.XDocument.Root%2A&gt;軸メソッドを次のようにアクセスする前にプロパティ:&lt;/xref:System.Xml.Linq.XDocument.Root%2A&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This query now performs in the same way as the query on the tree rooted in &lt;xref:System.Xml.Linq.XElement&gt;.</source>
          <target state="translated">このクエリは、同じようになりました実行&lt;xref:System.Xml.Linq.XElement&gt;&lt;/xref:System.Xml.Linq.XElement&gt;ルートとすると、ツリーのクエリ方法。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The example produces the following output:</source>
          <target state="translated">この例では次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic Queries (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/basic-queries-linq-to-xml.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>基本的なクエリ (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/basic-queries-linq-to-xml.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>