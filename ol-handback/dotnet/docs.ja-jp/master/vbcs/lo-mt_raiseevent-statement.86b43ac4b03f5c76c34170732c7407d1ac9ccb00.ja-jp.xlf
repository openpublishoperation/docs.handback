<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">059b1347c4a35b896f5aa19cadb28fbceb8b25c9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\statements\raiseevent-statement.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7964dc18dc3e82f623e9dbc1db790ccdf42feb01</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3b60fd47194322e7bd8d14aab5e3097706d483a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>RaiseEvent Statement | Microsoft Docs</source>
          <target state="translated">RaiseEvent ステートメント |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>RaiseEvent Statement</source>
          <target state="translated">RaiseEvent ステートメント</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Triggers an event declared at module level within a class, form, or document.</source>
          <target state="translated">クラス、フォーム、またはドキュメント内のモジュール レベルで宣言されているイベントをトリガーします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">構文</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">指定項目</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必須です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name of the event to trigger.</source>
          <target state="translated">トリガーするイベントの名前です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">省略可能です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Comma-delimited list of variables, arrays, or expressions.</source>
          <target state="translated">変数、配列、または式のコンマ区切りリスト。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`argumentlist`</ph> argument must be enclosed by parentheses.</source>
          <target state="translated"><ph id="ph1">`argumentlist`</ph>引数をかっこで囲む必要があります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If there are no arguments, the parentheses must be omitted.</source>
          <target state="translated">引数がない場合は、かっこを省略する必要があります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">コメント</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The required <ph id="ph1">`eventname`</ph> is the name of an event declared within the module.</source>
          <target state="translated">必要な<ph id="ph1">`eventname`</ph>は、モジュール内で宣言されたイベントの名前。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It follows Visual Basic variable naming conventions.</source>
          <target state="translated">これは、Visual Basic 変数の名前付け規則に従います。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the event has not been declared within the module in which it is raised, an error occurs.</source>
          <target state="translated">イベントは発生のモジュール内で宣言されていない、エラーが発生します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following code fragment illustrates an event declaration and a procedure in which the event is raised.</source>
          <target state="translated">次のコード フラグメントでは、イベントの宣言と、イベントが発生する手順を示しています。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents#37<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/raiseevent-statement_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents #&amp;37;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/raiseevent-statement_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You cannot use <ph id="ph1">`RaiseEvent`</ph> to raise events that are not explicitly declared in the module.</source>
          <target state="translated">使用することはできません<ph id="ph1">`RaiseEvent`</ph>モジュールで明示的に宣言されていないイベントを発生させます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, all forms inherit a &lt;xref:System.Windows.Forms.Control.Click&gt; event from &lt;xref:System.Windows.Forms.Form?displayProperty=fullName&gt;, it cannot be raised using <ph id="ph1">`RaiseEvent`</ph> in a derived form.</source>
          <target state="translated">たとえば、すべてのフォームの継承、&lt;xref:System.Windows.Forms.Control.Click&gt;からイベントを&lt;xref:System.Windows.Forms.Form?displayProperty=fullName&gt;を使用すると発生することはできません<ph id="ph1">`RaiseEvent`</ph>派生フォームで&lt;/xref:System.Windows.Forms.Form?displayProperty=fullName&gt;&lt;/xref:System.Windows.Forms.Control.Click&gt;。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you declare a <ph id="ph1">`Click`</ph> event in the form module, it shadows the form's own &lt;xref:System.Windows.Forms.Control.Click&gt; event.</source>
          <target state="translated">宣言する場合、<ph id="ph1">`Click`</ph>イベント モジュールでは、フォーム、フォーム自体のシャドウ&lt;xref:System.Windows.Forms.Control.Click&gt;イベント&lt;/xref:System.Windows.Forms.Control.Click&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can still invoke the form's &lt;xref:System.Windows.Forms.Control.Click&gt; event by calling the &lt;xref:System.Windows.Forms.Control.OnClick%2A&gt; method.</source>
          <target state="translated">フォームを引き続き呼び出すことができます&lt;xref:System.Windows.Forms.Control.Click&gt;イベントを呼び出して、&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;メソッド&lt;/xref:System.Windows.Forms.Control.OnClick%2A&gt;&lt;/xref:System.Windows.Forms.Control.Click&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>By default, an event defined in Visual Basic raises its event handlers in the order that the connections are established.</source>
          <target state="translated">既定では、Visual Basic で定義されたイベントは、接続が確立されている順序では、そのイベント ハンドラーを生成します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Because events can have <ph id="ph1">`ByRef`</ph> parameters, a process that connects late may receive parameters that have been changed by an earlier event handler.</source>
          <target state="translated">イベントがあるため<ph id="ph1">`ByRef`</ph>パラメーター、接続するプロセスは以前のイベント ハンドラーによって変更されているパラメーターを受け取ることがあります。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>After the event handlers execute, control is returned to the subroutine that raised the event.</source>
          <target state="translated">イベント ハンドラーの実行後は、イベントを発生させたサブルーチンに制御が返されます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Non-shared events should not be raised within the constructor of the class in which they are declared.</source>
          <target state="translated">非共有イベントが宣言されているクラスのコンス トラクター内で発生しない必要があります。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Although such events do not cause run-time errors, they may fail to be caught by associated event handlers.</source>
          <target state="translated">このようなイベントでは、実行時エラーが発生しない、関連付けられたイベント ハンドラーでキャッチできる、されない場合があります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`Shared`</ph> modifier to create a shared event if you need to raise an event from a constructor.</source>
          <target state="translated">使用して、<ph id="ph1">`Shared`</ph>修飾子をコンス トラクターからイベントを発生させる必要がある場合は、共有のイベントを作成します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can change the default behavior of events by defining a custom event.</source>
          <target state="translated">イベントの既定の動作を変更するには、カスタム イベントを定義します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For custom events, the <ph id="ph1">`RaiseEvent`</ph> statement invokes the event's <ph id="ph2">`RaiseEvent`</ph> accessor.</source>
          <target state="translated">カスタム イベントの場合、<ph id="ph1">`RaiseEvent`</ph>ステートメントで呼び出されるイベントの<ph id="ph2">`RaiseEvent`</ph>アクセサー。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information on custom events, see <bpt id="p1">[</bpt>Event Statement<ept id="p1">](../../../visual-basic/language-reference/statements/event-statement.md)</ept>.</source>
          <target state="translated">カスタム イベントの詳細については、次を参照してください。 <bpt id="p1">[</bpt>Event ステートメント<ept id="p1">](../../../visual-basic/language-reference/statements/event-statement.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example uses events to count down seconds from 10 to 0.</source>
          <target state="translated">次の例では、イベントを使用して 10 秒から 0 秒までカウント ダウンします。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The code illustrates several of the event-related methods, properties, and statements, including the <ph id="ph1">`RaiseEvent`</ph> statement.</source>
          <target state="translated">コードに示すいくつかのイベントに関連するメソッド、プロパティ、およびなど、ステートメント、<ph id="ph1">`RaiseEvent`</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The class that raises an event is the event source, and the methods that process the event are the event handlers.</source>
          <target state="translated">イベントを発生させるクラスをイベント ソース、イベントを処理するメソッドをイベント ハンドラーと呼びます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An event source can have multiple handlers for the events it generates.</source>
          <target state="translated">イベント ソースでは、生成されるイベントに対して複数のイベント ハンドラーを設定できます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When the class raises the event, that event is raised on every class that has elected to handle events for that instance of the object.</source>
          <target state="translated">クラスでイベントが発生すると、そのイベントは、オブジェクトのインスタンスに対するイベントを処理するために選択されたすべてのクラスで発生します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The example also uses a form (<ph id="ph1">`Form1`</ph>) with a button (<ph id="ph2">`Button1`</ph>) and a text box (<ph id="ph3">`TextBox1`</ph>).</source>
          <target state="translated">また、この例では、ボタン (<ph id="ph2">`Button1`</ph>) とテキスト ボックス (<ph id="ph3">`TextBox1`</ph>) を含んだフォーム (<ph id="ph1">`Form1`</ph>) も使用しています。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When you click the button, the first text box displays a countdown from 10 to 0 seconds.</source>
          <target state="translated">ボタンをクリックすると、1 つ目のテキスト ボックスに 10 秒から 0 秒までのカウントダウンが表示されます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When the full time (10 seconds) has elapsed, the first text box displays "Done".</source>
          <target state="translated">カウントダウンが終わると (10 秒が経過すると)、1 つ目のテキスト ボックスに "Done" と表示されます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The code for <ph id="ph1">`Form1`</ph> specifies the initial and terminal states of the form.</source>
          <target state="translated"><ph id="ph1">`Form1`</ph> のコードでは、フォームの初期状態と終了状態を指定しています。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>It also contains the code executed when events are raised.</source>
          <target state="translated">イベント発生時に実行されるコードも含まれています。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To use this example, open a new Windows Application project, add a button named <ph id="ph1">`Button1`</ph> and a text box named <ph id="ph2">`TextBox1`</ph> to the main form, named <ph id="ph3">`Form1`</ph>.</source>
          <target state="translated">この例を使用する新しい Windows アプリケーション プロジェクトを開き、という名前のボタンを追加<ph id="ph1">`Button1`</ph>とという名前のテキスト ボックス<ph id="ph2">`TextBox1`</ph>という名前のメイン フォームに<ph id="ph3">`Form1`</ph>します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Then right-click the form and click <bpt id="p1">**</bpt>View Code<ept id="p1">**</ept> to open the Code Editor.</source>
          <target state="translated">フォームを右クリックし、をクリックし、<bpt id="p1">**</bpt>コードの表示<ept id="p1">**</ept>コード エディターを開きます。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">`WithEvents`</ph> variable to the declarations section of the <ph id="ph2">`Form1`</ph> class.</source>
          <target state="translated">追加、<ph id="ph1">`WithEvents`</ph>変数の宣言セクションに、<ph id="ph2">`Form1`</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents#14<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/raiseevent-statement_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents&amp;#14;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/raiseevent-statement_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Add the following code to the code for <ph id="ph1">`Form1`</ph>.</source>
          <target state="translated"><ph id="ph1">`Form1`</ph> のコードに次のコードを追加します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Replace any duplicate procedures that may exist, such as <ph id="ph1">`Form_Load`</ph>, or <ph id="ph2">`Button_Click`</ph>.</source>
          <target state="translated">など、存在するすべての重複するプロシージャを置き換える<ph id="ph1">`Form_Load`</ph>、または<ph id="ph2">`Button_Click`</ph>です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents#15<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/raiseevent-statement_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents&amp;#15;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/raiseevent-statement_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Press F5 to run the preceding example, and click the button labeled <bpt id="p1">**</bpt>Start<ept id="p1">**</ept>.</source>
          <target state="translated">前の例を実行 ボタンをクリックして f5 キーを押して<bpt id="p1">**</bpt>開始<ept id="p1">**</ept>します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The first text box starts to count down the seconds.</source>
          <target state="translated">最初のテキスト ボックスで、秒のカウント ダウンが開始されます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When the full time (10 seconds) has elapsed, the first text box displays "Done".</source>
          <target state="translated">カウントダウンが終わると (10 秒が経過すると)、1 つ目のテキスト ボックスに "Done" と表示されます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Application.DoEvents`</ph> method does not process events in exactly the same way as the form does.</source>
          <target state="translated"><ph id="ph1">`My.Application.DoEvents`</ph>フォームは、メソッドがまったく同じ方法でイベントを処理できません。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To allow the form to handle the events directly, you can use multithreading.</source>
          <target state="translated">使用できるイベントを直接処理するためのフォームを許可するようにマルチ スレッドです。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Threading<ept id="p1">](http://msdn.microsoft.com/library/552f6c68-dbdb-4327-ae36-32cf9063d88c)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>スレッド<ept id="p1">](http://msdn.microsoft.com/library/552f6c68-dbdb-4327-ae36-32cf9063d88c)</ept>します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Events<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>イベント<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Event Statement<ept id="p1">](../../../visual-basic/language-reference/statements/event-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Event ステートメント<ept id="p1">](../../../visual-basic/language-reference/statements/event-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>AddHandler Statement<ept id="p1">](../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>AddHandler ステートメント<ept id="p1">](../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>RemoveHandler Statement<ept id="p1">](../../../visual-basic/language-reference/statements/removehandler-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>RemoveHandler ステートメント<ept id="p1">](../../../visual-basic/language-reference/statements/removehandler-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Handles<ept id="p1">](../../../visual-basic/language-reference/statements/handles-clause.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>ハンドル<ept id="p1">](../../../visual-basic/language-reference/statements/handles-clause.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>