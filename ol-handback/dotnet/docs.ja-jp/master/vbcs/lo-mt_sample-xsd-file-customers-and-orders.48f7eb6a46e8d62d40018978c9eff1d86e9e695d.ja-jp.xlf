<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e3f67d0bbdca27a95cdc2ed41faf010b63d9e199</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\sample-xsd-file-customers-and-orders.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">785721e95a8a1a07b4f7fc8f1fad61ad0e6d4670</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">222f9a6a35165d13db2afe3279cb4d00175219f1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Sample XSD File: Customers and Orders2 | Microsoft Docs</source>
          <target state="translated">サンプル XSD ファイル: 顧客と Orders2 |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Sample XSD File: Customers and Orders</source>
          <target state="translated">サンプル XSD ファイル : 顧客と注文</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following XSD file is used in various examples in the <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> documentation.</source>
          <target state="translated">次の XSD ファイルは、<ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> ドキュメントのさまざまな例で使用されます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This file contains a schema definition for the <bpt id="p1">[</bpt>Sample XML File: Customers and Orders (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-customers-and-orders-linq-to-xml.md)</ept>.</source>
          <target state="translated">このファイルのスキーマ定義を含む、<bpt id="p1">[</bpt>サンプル XML ファイル: 顧客と注文 (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-customers-and-orders-linq-to-xml.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The schema uses the <ph id="ph1">`xs:key`</ph> and <ph id="ph2">`xs:keyref`</ph> features of XSD to establish that the <ph id="ph3">`CustomerID`</ph> attribute of the <ph id="ph4">`Customer`</ph> element is a key, and to establish a relationship between the <ph id="ph5">`CustomerID`</ph> element in each <ph id="ph6">`Order`</ph> element and the <ph id="ph7">`CustomerID`</ph> attribute in each <ph id="ph8">`Customer`</ph> element.</source>
          <target state="translated">このスキーマは、XSD の <ph id="ph1">`xs:key`</ph> 機能と <ph id="ph2">`xs:keyref`</ph> 機能を使用して、<ph id="ph3">`CustomerID`</ph> 要素の <ph id="ph4">`Customer`</ph> 属性がキーであることを確立し、各 <ph id="ph5">`CustomerID`</ph> 要素の <ph id="ph6">`Order`</ph> 要素と各 <ph id="ph7">`CustomerID`</ph> 要素の <ph id="ph8">`Customer`</ph> 属性の間にリレーションシップを確立します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For an example of writing LINQ queries that take advantage of this relationship using the <ph id="ph1">`Join`</ph> clause, see <bpt id="p1">[</bpt>How to: Join Two Collections (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-join-two-collections-linq-to-xml.md)</ept>.</source>
          <target state="translated">このリレーションシップを使用して利用する LINQ クエリの作成例については、<ph id="ph1">`Join`</ph>句を参照してください<bpt id="p1">[</bpt>方法:&amp;2; つのコレクションを結合 (する linq TO XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-join-two-collections-linq-to-xml.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>CustomersOrders.xsd</source>
          <target state="translated">CustomersOrders.xsd</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Sample XML Documents (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-documents-linq-to-xml.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>サンプル XML ドキュメント (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-documents-linq-to-xml.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>