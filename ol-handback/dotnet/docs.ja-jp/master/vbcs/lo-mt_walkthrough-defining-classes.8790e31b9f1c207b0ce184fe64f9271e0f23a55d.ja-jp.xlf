<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aeaa5c2bb85c1a642da15c6a29546cf065380e27</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\objects-and-classes\walkthrough-defining-classes.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3bc43c75cdd4794a4b9ca5242e89527049a5b88</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">302dd6187d2456f9c0dec9953586191f411b4889</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defining Classes (Visual Basic) | Microsoft Docs</source>
          <target state="translated">クラスの定義 (Visual Basic) |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Defining Classes (Visual Basic)</source>
          <target state="translated">チュートリアル: クラスの定義 (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This walkthrough demonstrates how to define classes, which you can then use to create objects.</source>
          <target state="translated">このチュートリアルでは、オブジェクトの作成に使用することができますし、クラスを定義する方法を示します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It also shows you how to add properties and methods to the new class, and demonstrates how to initialize an object.</source>
          <target state="translated">また、新しいクラスにプロパティとメソッドを追加する方法を説明し、オブジェクトを初期化する方法を示します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To define a class</source>
          <target state="translated">クラスを定義するには</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Create a project by clicking <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>File<ept id="p2">**</ept> menu.</source>
          <target state="translated">クリックして、プロジェクトを作成<bpt id="p1">**</bpt>新しいプロジェクト<ept id="p1">**</ept>上、<bpt id="p2">**</bpt>ファイル<ept id="p2">**</ept>メニュー。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box appears.</source>
          <target state="translated"><bpt id="p1">**</bpt>[新しいプロジェクト]<ept id="p1">**</ept> ダイアログ ボックスが表示されます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Select Windows Application from the list of <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> project templates to display the new project.</source>
          <target state="translated">一覧から Windows アプリケーションを選択<ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>プロジェクト テンプレートを新しいプロジェクトを表示します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Add a new class to the project by clicking <bpt id="p1">**</bpt>Add Class<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>Project<ept id="p2">**</ept> menu.</source>
          <target state="translated">クリックして新しいクラスをプロジェクトに追加<bpt id="p1">**</bpt>クラスの追加<ept id="p1">**</ept>上、<bpt id="p2">**</bpt>プロジェクト<ept id="p2">**</ept>メニュー。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Add New Item<ept id="p1">**</ept> dialog box appears.</source>
          <target state="translated"><bpt id="p1">**</bpt>新しい項目の追加<ept id="p1">**</ept> ダイアログ ボックスが表示されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Class<ept id="p1">**</ept> template.</source>
          <target state="translated">選択、<bpt id="p1">**</bpt>クラス<ept id="p1">**</ept>テンプレートです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name the new class <ph id="ph1">`UserNameInfo.vb`</ph>, and then click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> to display the code for the new class.</source>
          <target state="translated">新しいクラスの名前を<ph id="ph1">`UserNameInfo.vb`</ph>、 をクリックし、<bpt id="p1">**</bpt>追加<ept id="p1">**</ept>新しいクラスのコードを表示します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#5<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP&amp;#5;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept> to add a class to your startup form by typing the <ph id="ph2">`Class`</ph> keyword followed by the name of the new class.</source>
          <target state="translated">使用することができます、 <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> <bpt id="p1">**</bpt>コード エディター<ept id="p1">**</ept> 」と入力してクラスをスタートアップ フォームに追加する、<ph id="ph2">`Class`</ph>キーワードの後に、新しいクラスの名前。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept> provides a corresponding <ph id="ph1">`End Class`</ph> statement for you.</source>
          <target state="translated"><bpt id="p1">**</bpt>コード エディター<ept id="p1">**</ept> 、対応する説明<ph id="ph1">`End Class`</ph>するステートメントです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Define a private field for the class by adding the following code between the <ph id="ph1">`Class`</ph> and <ph id="ph2">`End Class`</ph> statements:</source>
          <target state="translated">間に次のコードを追加することで、クラスのプライベート フィールドを定義、<ph id="ph1">`Class`</ph>と<ph id="ph2">`End Class`</ph>ステートメント。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#7<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP&amp;#7;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Declaring the field as <ph id="ph1">`Private`</ph> means it can be used only within the class.</source>
          <target state="translated">ものとしてフィールドを宣言する<ph id="ph1">`Private`</ph>クラス内でのみ使用できることを意味します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can make fields available from outside a class by using access modifiers such as <ph id="ph1">`Public`</ph> that provide more access.</source>
          <target state="translated">利用できるフィールドからクラスの外部でなどのアクセス修飾子を使用して、<ph id="ph1">`Public`</ph>以上のアクセスを提供します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Access Levels in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Visual Basic でのアクセス レベル<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Define a property for the class by adding the following code:</source>
          <target state="translated">次のコードを追加することで、クラスのプロパティを定義します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#8<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP&amp;#8;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Define a method for the class by adding the following code:</source>
          <target state="translated">次のコードを追加することで、クラスのメソッドを定義します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#9<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP&amp;#9;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Define a parameterized constructor for the new class by adding a procedure named <ph id="ph1">`Sub New`</ph>:</source>
          <target state="translated">という名前のプロシージャを追加することで、新しいクラスにパラメーター化されたコンス トラクターを定義<ph id="ph1">`Sub New`</ph>:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#10<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP&amp;#10;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Sub New`</ph> constructor is called automatically when an object based on this class is created.</source>
          <target state="translated"><ph id="ph1">`Sub New`</ph>コンス トラクターはこのクラスに基づくオブジェクトの作成時に自動的に呼び出されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This constructor sets the value of the field that holds the user name.</source>
          <target state="translated">このコンス トラクターは、ユーザー名を保持するフィールドの値を設定します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To create a button to test the class</source>
          <target state="translated">クラスをテストするためのボタンを作成するには</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Change the startup form to design mode by right-clicking its name in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> and then clicking <bpt id="p2">**</bpt>View Designer<ept id="p2">**</ept>.</source>
          <target state="translated">その名前を右クリックして、スタートアップ フォームをデザイン モードに変更<bpt id="p1">**</bpt>ソリューション エクスプ ローラー<ept id="p1">**</ept>クリックし、<bpt id="p2">**</bpt>ビュー デザイナー<ept id="p2">**</ept>します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>By default, the startup form for Windows Application projects is named Form1.vb.</source>
          <target state="translated">既定では、Windows アプリケーション プロジェクトのスタートアップ フォームを Form1.vb と呼びます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The main form will then appear.</source>
          <target state="translated">メイン フォームが表示されます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Add a button to the main form and double-click it to display the code for the <ph id="ph1">`Button1_Click`</ph> event handler.</source>
          <target state="translated">メイン フォームにボタンを追加し、ダブルクリックのコードを表示して、<ph id="ph1">`Button1_Click`</ph>イベント ハンドラーです。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Add the following code to call the test procedure:</source>
          <target state="translated">テストのプロシージャを呼び出すには、次のコードを追加します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#12<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP&amp;#12;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To run your application</source>
          <target state="translated">アプリケーションを実行するには</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Run your application by pressing F5.</source>
          <target state="translated">F5 キーを押して、アプリケーションを実行します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Click the button on the form to call the test procedure.</source>
          <target state="translated">テスト プロシージャを呼び出すためのフォーム上のボタンをクリックします。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>It displays a message stating that the original <ph id="ph1">`UserName`</ph> is "MOORE, BOBBY", because the procedure called the <ph id="ph2">`Capitalize`</ph> method of the object.</source>
          <target state="translated">元のことを示すメッセージが表示<ph id="ph1">`UserName`</ph>"MOORE、BOBBY"は、プロシージャが呼び出されるため、<ph id="ph2">`Capitalize`</ph>オブジェクトのメソッドです。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> to dismiss the message box.</source>
          <target state="translated">クリックして<bpt id="p1">**</bpt>OK<ept id="p1">**</ept>メッセージ ボックスを閉じます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Button1 Click`</ph> procedure changes the value of the <ph id="ph2">`UserName`</ph> property and displays a message stating that the new value of <ph id="ph3">`UserName`</ph> is "Worden, Joe".</source>
          <target state="translated"><ph id="ph1">`Button1 Click`</ph>の値を変更する手順、<ph id="ph2">`UserName`</ph>プロパティの新しい値のことを示すメッセージを表示および<ph id="ph3">`UserName`</ph>"Worden、Joe"は、です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Object-Oriented Programming<ept id="p1">](http://msdn.microsoft.com/library/1cf6e655-3f30-45f1-9a5d-4a88ca24a1c2)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>オブジェクト指向プログラミング<ept id="p1">](http://msdn.microsoft.com/library/1cf6e655-3f30-45f1-9a5d-4a88ca24a1c2)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Objects and Classes<ept id="p1">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>クラスとオブジェクト<ept id="p1">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>