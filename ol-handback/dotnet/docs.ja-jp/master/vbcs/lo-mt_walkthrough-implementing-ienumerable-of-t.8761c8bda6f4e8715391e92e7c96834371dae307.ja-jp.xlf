<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68c37c46cbceb1056d50972cdc58ddb7c7577447</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\control-flow\walkthrough-implementing-ienumerable-of-t.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44a1bb3bc348fb4c7f691143488a3615775db78f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d541a25277adf7c594042ec7536f910696bd927</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implementing IEnumerable in Visual Basic | Microsoft Docs</source>
          <target state="translated">Visual Basic での IEnumerable を実装する |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Implementing IEnumerable(Of T) in Visual Basic</source>
          <target state="translated">チュートリアル: Visual Basic での IEnumerable(Of T) の実装</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.Generic.IEnumerable%601&gt; interface is implemented by classes that can return a sequence of values one item at a time.</source>
          <target state="translated">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;インターフェイスは、一度に&amp;1; つの項目の値のシーケンスを返すことができるクラスによって実装されます&lt;/xref:System.Collections.Generic.IEnumerable%601&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The advantage of returning data one item at a time is that you do not have to load the complete set of data into memory to work with it.</source>
          <target state="translated">データの完全なセットを使用してメモリに読み込みする必要はありません、一度に&amp;1; つの項目は、データを返すことの利点です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You only have to use sufficient memory to load a single item from the data.</source>
          <target state="translated">のみ、データから&amp;1; つの項目を読み込むための十分なメモリを使用する必要があるとします。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Classes that implement the <ph id="ph1">`IEnumerable(T)`</ph> interface can be used with <ph id="ph2">`For Each`</ph> loops or LINQ queries.</source>
          <target state="translated">実装するクラス、<ph id="ph1">`IEnumerable(T)`</ph>インターフェイスを使用するで<ph id="ph2">`For Each`</ph>ループまたは LINQ クエリ。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, consider an application that must read a large text file and return each line from the file that matches particular search criteria.</source>
          <target state="translated">たとえば、大きなテキスト ファイルを読み取る必要があり、特定の検索条件に一致するファイルの各行を返すアプリケーションがあるとします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The application uses a LINQ query to return lines from the file that match the specified criteria.</source>
          <target state="translated">アプリケーションでは、LINQ クエリを使用して、指定した条件に一致するファイルから行を返します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To query the contents of the file by using a LINQ query, the application could load the contents of the file into an array or a collection.</source>
          <target state="translated">ファイルの内容を照会するには、LINQ クエリを使用して、アプリケーションが、配列またはコレクションに、ファイルの内容を読み込む可能性があります。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>However, loading the whole file into an array or collection would consume far more memory than is required.</source>
          <target state="translated">ただし、配列またはコレクションにファイル全体を読み込むには、必要なよりはるかに多くのメモリが消費します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The LINQ query could instead query the file contents by using an enumerable class, returning only values that match the search criteria.</source>
          <target state="translated">LINQ クエリは、検索条件に一致する値のみを返す、列挙可能なクラスを使用して、ファイルの内容を代わりにクエリでした。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Queries that return only a few matching values would consume far less memory.</source>
          <target state="translated">いくつかのみを返すクエリをはるかに少ないメモリを消費し一致する値。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can create a class that implements the &lt;xref:System.Collections.Generic.IEnumerable%601&gt; interface to expose source data as enumerable data.</source>
          <target state="translated">実装するクラスを作成する、&lt;xref:System.Collections.Generic.IEnumerable%601&gt;列挙可能なデータとしてソース データを公開するインターフェイス&lt;/xref:System.Collections.Generic.IEnumerable%601&gt;。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Your class that implements the <ph id="ph1">`IEnumerable(T)`</ph> interface will require another class that implements the &lt;xref:System.Collections.Generic.IEnumerator%601&gt; interface to iterate through the source data.</source>
          <target state="translated">実装するためのクラス、<ph id="ph1">`IEnumerable(T)`</ph>インターフェイスを実装する別のクラスが必要になります、&lt;xref:System.Collections.Generic.IEnumerator%601&gt;ソース データを反復処理するインターフェイス&lt;/xref:System.Collections.Generic.IEnumerator%601&gt;。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>These two classes enable you to return items of data sequentially as a specific type.</source>
          <target state="translated">これら&amp;2; つのクラスを使用すると、順番には、特定の種類のデータ項目を返すことができます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In this walkthrough, you will create a class that implements the <ph id="ph1">`IEnumerable(Of String)`</ph> interface and a class that implements the <ph id="ph2">`IEnumerator(Of String)`</ph> interface to read a text file one line at a time.</source>
          <target state="translated">このチュートリアルを実装するクラスを作成する、<ph id="ph1">`IEnumerable(Of String)`</ph>インターフェイスおよび実装するクラス、<ph id="ph2">`IEnumerator(Of String)`</ph>を一度にテキスト ファイルの&amp;1; つの行を読み取るインターフェイス。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creating the Enumerable Class</source>
          <target state="translated">列挙可能なクラスを作成します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To create the enumerable class project</source>
          <target state="translated">クラスの列挙可能なプロジェクトを作成するには</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>1.  In <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>, on the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, point to <bpt id="p2">**</bpt>New<ept id="p2">**</ept> and then click <bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</source>
          <target state="translated">1.<ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>の<bpt id="p1">**</bpt>ファイル<ept id="p1">**</ept> メニューをポイント<bpt id="p2">**</bpt>新規<ept id="p2">**</ept> をクリックし、<bpt id="p3">**</bpt>プロジェクト<ept id="p3">**</ept>します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>2.  In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box, in the <bpt id="p2">**</bpt>Project Types<ept id="p2">**</ept> pane, make sure that <bpt id="p3">**</bpt>Windows<ept id="p3">**</ept> is selected.</source>
          <target state="translated">2.<bpt id="p1">**</bpt>新しいプロジェクト<ept id="p1">**</ept>ダイアログ ボックスで、<bpt id="p2">**</bpt>プロジェクトの種類<ept id="p2">**</ept> ウィンドウで、ことを確認して<bpt id="p3">**</bpt>Windows<ept id="p3">**</ept>が選択されています。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Class Library<ept id="p1">**</ept> in the <bpt id="p2">**</bpt>Templates<ept id="p2">**</ept> pane.</source>
          <target state="translated">選択<bpt id="p1">**</bpt>クラス ライブラリ<ept id="p1">**</ept>で、<bpt id="p2">**</bpt>テンプレート<ept id="p2">**</ept>ウィンドウです。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> box, type <ph id="ph1">`StreamReaderEnumerable`</ph>, and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>名<ept id="p1">**</ept>ボックスに、入力<ph id="ph1">`StreamReaderEnumerable`</ph>、 をクリックし、 <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The new project is displayed.</source>
          <target state="translated">新しいプロジェクトが表示されます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>3.  In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the Class1.vb file and click <bpt id="p2">**</bpt>Rename<ept id="p2">**</ept>.</source>
          <target state="translated">3.<bpt id="p1">**</bpt>ソリューション エクスプ ローラー<ept id="p1">**</ept>Class1.vb ファイルを右クリックし、クリックして、<bpt id="p2">**</bpt>の名前を変更<ept id="p2">**</ept>します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Rename the file to <ph id="ph1">`StreamReaderEnumerable.vb`</ph> and press ENTER.</source>
          <target state="translated">ファイルを<ph id="ph1">`StreamReaderEnumerable.vb`</ph>ENTER キーを押します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Renaming the file will also rename the class to <ph id="ph1">`StreamReaderEnumerable`</ph>.</source>
          <target state="translated">ファイルの名前変更の名前も変更は、クラスに<ph id="ph1">`StreamReaderEnumerable`</ph>します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This class will implement the <ph id="ph1">`IEnumerable(Of String)`</ph> interface.</source>
          <target state="translated">このクラスは実装、<ph id="ph1">`IEnumerable(Of String)`</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>4.  Right-click the StreamReaderEnumerable project, point to <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>New Item<ept id="p2">**</ept>.</source>
          <target state="translated">4.StreamReaderEnumerable プロジェクトを右クリックし、順にポイント<bpt id="p1">**</bpt>追加<ept id="p1">**</ept>、クリックして<bpt id="p2">**</bpt>新しい項目の<ept id="p2">**</ept>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Class<ept id="p1">**</ept> template.</source>
          <target state="translated">選択、<bpt id="p1">**</bpt>クラス<ept id="p1">**</ept>テンプレートです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> box, type <ph id="ph1">`StreamReaderEnumerator.vb`</ph> and click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>名<ept id="p1">**</ept>ボックスに、入力<ph id="ph1">`StreamReaderEnumerator.vb`</ph> をクリック<bpt id="p2">**</bpt>OK<ept id="p2">**</ept>します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The first class in this project is the enumerable class and will implement the <ph id="ph1">`IEnumerable(Of String)`</ph> interface.</source>
          <target state="translated">このプロジェクトの最初のクラスは列挙可能なクラスであり、実装、<ph id="ph1">`IEnumerable(Of String)`</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This generic interface implements the &lt;xref:System.Collections.IEnumerable&gt; interface and guarantees that consumers of this class can access values typed as <ph id="ph1">`String`</ph>.</source>
          <target state="translated">このジェネリック インターフェイスを実装して、&lt;xref:System.Collections.IEnumerable&gt;インターフェイスととして型指定された値をこのクラスのコンシューマーがアクセスできることを保証<ph id="ph1">`String`</ph>&lt;/xref:System.Collections.IEnumerable&gt;。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To add the code to implement IEnumerable</source>
          <target state="translated">IEnumerable を実装するコードを追加するには</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>1.  Open the StreamReaderEnumerable.vb file.</source>
          <target state="translated">1.StreamReaderEnumerable.vb ファイルを開きます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>2.  On the line after <ph id="ph1">`Public Class StreamReaderEnumerable`</ph>, type the following and press ENTER.</source>
          <target state="translated">2.後の行に<ph id="ph1">`Public Class StreamReaderEnumerable`</ph>ENTER キーを押すし、次を入力します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#1<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough&amp;#1;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> automatically populates the class with the members that are required by the <ph id="ph2">`IEnumerable(Of String)`</ph> interface.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>自動的に入力が必要とするメンバーを持つクラス、<ph id="ph2">`IEnumerable(Of String)`</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>3.  This enumerable class will read lines from a text file one line at a time.</source>
          <target state="translated">3.この列挙可能なクラスに、一度にテキスト ファイルの&amp;1; つの行から行を読み取ります。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Add the following code to the class to expose a public constructor that takes a file path as an input parameter.</source>
          <target state="translated">ファイル パスを入力パラメーターとして受け取り、パブリック コンス トラクターを公開するクラスに次のコードを追加します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#2<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough&amp;#2;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>4.  Your implementation of the &lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt; method of the <ph id="ph1">`IEnumerable(Of String)`</ph> interface will return a new instance of the <ph id="ph2">`StreamReaderEnumerator`</ph> class.</source>
          <target state="translated">4.実装、&lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;のメソッド、<ph id="ph1">`IEnumerable(Of String)`</ph>インターフェイスがの新しいインスタンスを返す、<ph id="ph2">`StreamReaderEnumerator`</ph>クラス&lt;/xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The implementation of the <ph id="ph1">`GetEnumerator`</ph> method of the <ph id="ph2">`IEnumerable`</ph> interface can be made <ph id="ph3">`Private`</ph>, because you have to expose only members of the <ph id="ph4">`IEnumerable(Of String)`</ph> interface.</source>
          <target state="translated">実装、<ph id="ph1">`GetEnumerator`</ph>のメソッド、<ph id="ph2">`IEnumerable`</ph>インターフェイスが可能である<ph id="ph3">`Private`</ph>のメンバーだけを公開する必要があるため、<ph id="ph4">`IEnumerable(Of String)`</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Replace the code that <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> generated for the <ph id="ph2">`GetEnumerator`</ph> methods with the following code.</source>
          <target state="translated">コードに置き換えますを<ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>に対して生成された、<ph id="ph2">`GetEnumerator`</ph>メソッドを次のコードでします。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#3<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough&amp;#3;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To add the code to implement IEnumerator</source>
          <target state="translated">IEnumerator を実装するコードを追加するには</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>1.  Open the StreamReaderEnumerator.vb file.</source>
          <target state="translated">1.StreamReaderEnumerator.vb ファイルを開きます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>2.  On the line after <ph id="ph1">`Public Class StreamReaderEnumerator`</ph>, type the following and press ENTER.</source>
          <target state="translated">2.後の行に<ph id="ph1">`Public Class StreamReaderEnumerator`</ph>ENTER キーを押すし、次を入力します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#4<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough&amp;4;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> automatically populates the class with the members that are required by the <ph id="ph2">`IEnumerator(Of String)`</ph> interface.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>自動的に入力が必要とするメンバーを持つクラス、<ph id="ph2">`IEnumerator(Of String)`</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>3.  The enumerator class opens the text file and performs the file I/O to read the lines from the file.</source>
          <target state="translated">3.列挙子クラスは、テキスト ファイルを開きし、ファイルをファイルから行を読み取る I/O を実行します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Add the following code to the class to expose a public constructor that takes a file path as an input parameter and open the text file for reading.</source>
          <target state="translated">クラス ファイルのパスを入力パラメーターとして受け取り、パブリック コンス トラクターを公開し、テキスト ファイルを読み取り用に次のコードを追加します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#5<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough&amp;#5;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>4.  The <ph id="ph1">`Current`</ph> properties for both the <ph id="ph2">`IEnumerator(Of String)`</ph> and <ph id="ph3">`IEnumerator`</ph> interfaces return the current item from the text file as a <ph id="ph4">`String`</ph>.</source>
          <target state="translated">4.<ph id="ph1">`Current`</ph>両方のプロパティ、<ph id="ph2">`IEnumerator(Of String)`</ph>と<ph id="ph3">`IEnumerator`</ph>インターフェイスでは、テキスト ファイルから現在の項目を返す、<ph id="ph4">`String`</ph>です。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The implementation of the <ph id="ph1">`Current`</ph> property of the <ph id="ph2">`IEnumerator`</ph> interface can be made <ph id="ph3">`Private`</ph>, because you have to expose only members of the <ph id="ph4">`IEnumerator(Of String)`</ph> interface.</source>
          <target state="translated">実装、<ph id="ph1">`Current`</ph>のプロパティ、<ph id="ph2">`IEnumerator`</ph>インターフェイスが可能である<ph id="ph3">`Private`</ph>のメンバーだけを公開する必要があるため、<ph id="ph4">`IEnumerator(Of String)`</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Replace the code that <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> generated for the <ph id="ph2">`Current`</ph> properties with the following code.</source>
          <target state="translated">コードに置き換えますを<ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>に対して生成された、<ph id="ph2">`Current`</ph>プロパティを次のコードです。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#6<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough&amp;6;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>5.  The <ph id="ph1">`MoveNext`</ph> method of the <ph id="ph2">`IEnumerator`</ph> interface navigates to the next item in the text file and updates the value that is returned by the <ph id="ph3">`Current`</ph> property.</source>
          <target state="translated">5.<ph id="ph1">`MoveNext`</ph>のメソッド、<ph id="ph2">`IEnumerator`</ph>インターフェイスは、テキスト ファイルに次の項目に移動し、によって返される値を更新して、<ph id="ph3">`Current`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If there are no more items to read, the <ph id="ph1">`MoveNext`</ph> method returns <ph id="ph2">`False`</ph>; otherwise the <ph id="ph3">`MoveNext`</ph> method returns <ph id="ph4">`True`</ph>.</source>
          <target state="translated">読み取るには、項目がある場合、<ph id="ph1">`MoveNext`</ph>メソッドが返す<ph id="ph2">`False`</ph>以外の場合、<ph id="ph3">`MoveNext`</ph>メソッドを返します。<ph id="ph4">`True`</ph>します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Add the following code to the <ph id="ph1">`MoveNext`</ph> method.</source>
          <target state="translated"><ph id="ph1">`MoveNext`</ph> メソッドに次のコードを追加します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#7<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_7.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough&amp;#7;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_7.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>6.  The <ph id="ph1">`Reset`</ph> method of the <ph id="ph2">`IEnumerator`</ph> interface directs the iterator to point to the start of the text file and clears the current item value.</source>
          <target state="translated">6.<ph id="ph1">`Reset`</ph>のメソッド、<ph id="ph2">`IEnumerator`</ph>インターフェイスがテキスト ファイルの先頭を指す反復子に指示し、現在のアイテムの値をクリアします。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Add the following code to the <ph id="ph1">`Reset`</ph> method.</source>
          <target state="translated"><ph id="ph1">`Reset`</ph> メソッドに次のコードを追加します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#8<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_8.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough&amp;#8;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_8.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>7.  The <ph id="ph1">`Dispose`</ph> method of the <ph id="ph2">`IEnumerator`</ph> interface guarantees that all unmanaged resources are released before the iterator is destroyed.</source>
          <target state="translated">7.<ph id="ph1">`Dispose`</ph>のメソッド、<ph id="ph2">`IEnumerator`</ph>インターフェイスで、反復子が破棄される前に、すべてのアンマネージ リソースが解放されることが保証されます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The file handle that is used by the <ph id="ph1">`StreamReader`</ph> object is an unmanaged resource and must be closed before the iterator instance is destroyed.</source>
          <target state="translated">使用されるファイル ハンドル、<ph id="ph1">`StreamReader`</ph>オブジェクトは、アンマネージ リソースであり、反復子インスタンスが破棄される前に閉じる必要があります。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Replace the code that <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> generated for the <ph id="ph2">`Dispose`</ph> method with the following code.</source>
          <target state="translated">コードに置き換えますを<ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>に対して生成された、<ph id="ph2">`Dispose`</ph>メソッドを次のコードです。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#9<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_9.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough&amp;#9;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_9.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Using the Sample Iterator</source>
          <target state="translated">サンプルの反復子を使用</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can use an enumerable class in your code together with control structures that require an object that implements <ph id="ph1">`IEnumerable`</ph>, such as a <ph id="ph2">`For Next`</ph> loop or a LINQ query.</source>
          <target state="translated">列挙可能なクラスを使用するには制御構造を実装するオブジェクトを必要とすると、コードで<ph id="ph1">`IEnumerable`</ph>など、<ph id="ph2">`For Next`</ph>ループまたは LINQ クエリ。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The following example shows the <ph id="ph1">`StreamReaderEnumerable`</ph> in a LINQ query.</source>
          <target state="translated">例を次に、 <ph id="ph1">`StreamReaderEnumerable`</ph> LINQ クエリでします。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#10<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_10.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough&amp;#10;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_10.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Introduction to LINQ in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Visual Basic における LINQ の概要<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Control Flow<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>制御フロー<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Loop Structures<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/loop-structures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>ループ構造<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/loop-structures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>For Each...Next Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/for-each-next-statement.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>For Each...Next ステートメント<ept id="p1">](../../../../visual-basic/language-reference/statements/for-each-next-statement.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>