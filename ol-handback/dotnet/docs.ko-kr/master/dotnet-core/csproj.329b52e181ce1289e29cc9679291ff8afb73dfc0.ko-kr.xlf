<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b5c25fc" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e67270cf713857a5fea16ebdd0abab774f555808</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\csproj.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09db10cd830b9ce2638f9d3f65389244af876c5c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">50ddfc14bca5f978202608cf2bce8784e63dd6fc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>csproj reference | Microsoft Docs</source>
          <target state="translated">csproj 참조 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn about the differences between existing and .NET Core csproj files</source>
          <target state="translated">기존 및 .NET Core csproj 파일 간의 차이점에 대해 알아보기</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>reference, csproj, .NET Core</source>
          <target state="translated">참조, csproj, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Additions to the csproj format for .NET Core</source>
          <target state="translated">.NET Core용 csproj 형식에 대한 추가 사항</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This document outlines the changes that were added to the project files as part of the move from <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> to <bpt id="p2">*</bpt>csproj<ept id="p2">*</ept> and <bpt id="p3">[</bpt>MSBuild<ept id="p3">](https://github.com/Microsoft/MSBuild)</ept>.</source>
          <target state="translated">이 문서는 <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>에서 <bpt id="p2">*</bpt>csproj<ept id="p2">*</ept> 및 <bpt id="p3">[</bpt>MSBuild<ept id="p3">](https://github.com/Microsoft/MSBuild)</ept>로 프로젝트 시스템을 전환함에 따라 프로젝트 파일에 추가된 변경 내용을 간략하게 설명합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For more information about general project file syntax and reference, see <bpt id="p1">[</bpt>the MSBuild project file<ept id="p1">](https://docs.microsoft.com/visualstudio/msbuild/msbuild-project-file-schema-reference)</ept> documentation.</source>
          <target state="translated">일반 프로젝트 파일 구문 및 참조에 대한 자세한 내용은 <bpt id="p1">[</bpt>MSBuild 프로젝트 파일<ept id="p1">](https://docs.microsoft.com/visualstudio/msbuild/msbuild-project-file-schema-reference)</ept> 설명서를 참조하세요.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Implicit package references</source>
          <target state="translated">암시적 패키지 참조</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Metapackages are now implicitly referenced based on the target framework specified in the <ph id="ph1">`&lt;TargetFramework&gt;`</ph> or <ph id="ph2">`&lt;TargetFrameworks&gt;`</ph> property of your project file.</source>
          <target state="translated">메타패키지는 현재 프로젝트 파일의 <ph id="ph1">`&lt;TargetFramework&gt;`</ph> 또는 <ph id="ph2">`&lt;TargetFrameworks&gt;`</ph> 속성에 지정된 대상 프레임워크를 기준으로 암시적으로 참조됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If the target framework is <ph id="ph1">`netcoreap1.x`</ph>, the proper version of the <ph id="ph2">`Microsoft.NETCore.App`</ph> metapackage is referenced.</source>
          <target state="translated">대상 프레임워크가 <ph id="ph1">`netcoreap1.x`</ph>인 경우 적합한 버전의 <ph id="ph2">`Microsoft.NETCore.App`</ph> 메타패키지가 참조됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Otherwise, if the target framework is <ph id="ph1">`netstandard1.x`</ph>, the proper version of the <ph id="ph2">`NetStandard.Library`</ph> metapackage is referenced.</source>
          <target state="translated">또는 대상 프레임워크가 <ph id="ph1">`netstandard1.x`</ph>인 경우 적합한 버전의 <ph id="ph2">`NetStandard.Library`</ph> 메타패키지가 참조됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>As far as the rest of the behavior is concerned, the tools will work as expected and most of the gestures will remain the same (for example, <ph id="ph1">`dotnet restore`</ph>).</source>
          <target state="translated">나머지 동작에 대해서는 도구가 예상대로 작동하고, 대부분의 제스처가 동일하게 유지됩니다(예: <ph id="ph1">`dotnet restore`</ph>).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Recommendations</source>
          <target state="translated">권장 사항</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Since <ph id="ph1">`Microsoft.NETCore.App`</ph> or <ph id="ph2">`NetStandard.Library`</ph> metapackages are now implicitly referenced, the following are our recommended best practices:</source>
          <target state="translated"><ph id="ph1">`Microsoft.NETCore.App`</ph> 또는 <ph id="ph2">`NetStandard.Library`</ph> 메타패키지가 현재 암시적으로 참조되기 때문에 권장되는 최선의 구현 방법은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Never have an explicit reference to the <ph id="ph1">`Microsoft.NETCore.App`</ph> or <ph id="ph2">`NetStandard.Library`</ph> metapackages via the <ph id="ph3">`&lt;PackageReference&gt;`</ph> property in your project file.</source>
          <target state="translated">절대로 프로젝트 파일의 <ph id="ph3">`&lt;PackageReference&gt;`</ph> 속성을 통해 <ph id="ph1">`Microsoft.NETCore.App`</ph> 또는 <ph id="ph2">`NetStandard.Library`</ph> 메타패키지를 명시적으로 참조하지 않습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you need a specific version of the runtime, you should use the <ph id="ph1">`&lt;RuntimeFrameworkVersion&gt;`</ph> property in your project (for example, <ph id="ph2">`1.0.4`</ph>) instead of referencing the metapackage.</source>
          <target state="translated">특정 버전의 런타임이 필요한 경우 메타패키지를 참조하는 대신 프로젝트의 <ph id="ph1">`&lt;RuntimeFrameworkVersion&gt;`</ph> 속성(예: <ph id="ph2">`1.0.4`</ph>)을 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This might happen if you are using <bpt id="p1">[</bpt>self-contained deployments<ept id="p1">](../deploying/index.md#self-contained-deployments-scd)</ept> and you need a specific patch version of 1.0.0 LTS runtime, for example.</source>
          <target state="translated">예를 들어 <bpt id="p1">[</bpt>자체 포함 배포<ept id="p1">](../deploying/index.md#self-contained-deployments-scd)</ept>를 사용하고, 1.0.0 LTS 런타임이라는 특정 패치 버전이 필요한 경우 이런 일이 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you need a specific version of the <ph id="ph1">`NetStandard.Library`</ph> metapackage, you can use the <ph id="ph2">`&lt;NetStandardImplicitPackageVersion&gt;`</ph> property and set the version you need.</source>
          <target state="translated">특정 버전의 <ph id="ph1">`NetStandard.Library`</ph> 메타패키지가 필요한 경우 <ph id="ph2">`&lt;NetStandardImplicitPackageVersion&gt;`</ph> 속성을 사용하고 필요한 버전을 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Default compilation includes in .NET Core projects</source>
          <target state="translated">.NET Core 프로젝트의 기본 컴파일 포함 사항</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>With the move to the <bpt id="p1">*</bpt>csproj<ept id="p1">*</ept> format in the latest SDK versions, we've moved the default includes and excludes for compile items and embedded resources to the SDK properties files.</source>
          <target state="translated">최신 SDK 버전의 <bpt id="p1">*</bpt>csproj<ept id="p1">*</ept> 형식으로 전환하면서 컴파일 항목에 대한 기본 포함 사항과 제외 사항 및 포함 리소스를 SDK 속성 파일로 이동했습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This means that you no longer need to specify these items in your project file.</source>
          <target state="translated">따라서 더 이상 프로젝트 파일에서 컴파일 항목을 지정할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The main reason for doing this is to reduce the clutter on your project file.</source>
          <target state="translated">이렇게 하는 주된 이유는 프로젝트 파일에서 혼란을 줄이기 위해서입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The defaults that are present in the SDK should cover most common use cases, so there is no need to repeat them in every project that you create.</source>
          <target state="translated">SDK의 기본값은 가장 일반적인 사용 사례를 다루므로 개발자가 만드는 모든 프로젝트에서 반복할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This leads to smaller project files that are much easier to understand as well as edit by hand, if needed.</source>
          <target state="translated">결과적으로 프로젝트 파일 수가 줄어 훨씬 쉽게 이해하고 편집(필요한 경우)할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following table shows which element and which globs are both included and excluded in the SDK:</source>
          <target state="translated">다음 표에는 SDK에 모두 포함되거나 제외되는 요소 및 GLOB가 나와 있습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Element</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Include glob</source>
          <target state="translated">GLOB 포함</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Exclude glob</source>
          <target state="translated">GLOB 제외</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Remove glob</source>
          <target state="translated">GLOB 제거</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Compile</source>
          <target state="translated">Compile</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.cs (or other language extensions)</source>
          <target state="translated"><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.cs(또는 기타 언어 확장)</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.user;  <ph id="ph5">\*</ph><ph id="ph6">\*</ph><ph id="ph7">/</ph><ph id="ph8">\*</ph>.<ph id="ph9">\*</ph>proj;  <ph id="ph10">\*</ph><ph id="ph11">\*</ph><ph id="ph12">/</ph><ph id="ph13">\*</ph>.sln;  <ph id="ph14">\*</ph><ph id="ph15">\*</ph><ph id="ph16">/</ph><ph id="ph17">\*</ph>.vssscc</source>
          <target state="translated"><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.user;  <ph id="ph5">\*</ph><ph id="ph6">\*</ph><ph id="ph7">/</ph><ph id="ph8">\*</ph>.<ph id="ph9">\*</ph>proj;  <ph id="ph10">\*</ph><ph id="ph11">\*</ph><ph id="ph12">/</ph><ph id="ph13">\*</ph>.sln;  <ph id="ph14">\*</ph><ph id="ph15">\*</ph><ph id="ph16">/</ph><ph id="ph17">\*</ph>.vssscc</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="translated">N/A</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>EmbeddedResource</source>
          <target state="translated">EmbeddedResource</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.resx</source>
          <target state="translated"><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.resx</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.user; <ph id="ph5">\*</ph><ph id="ph6">\*</ph><ph id="ph7">/</ph><ph id="ph8">\*</ph>.<ph id="ph9">\*</ph>proj; <ph id="ph10">\*</ph><ph id="ph11">\*</ph><ph id="ph12">/</ph><ph id="ph13">\*</ph>.sln; <ph id="ph14">\*</ph><ph id="ph15">\*</ph><ph id="ph16">/</ph><ph id="ph17">\*</ph>.vssscc</source>
          <target state="translated"><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.user; <ph id="ph5">\*</ph><ph id="ph6">\*</ph><ph id="ph7">/</ph><ph id="ph8">\*</ph>.<ph id="ph9">\*</ph>proj; <ph id="ph10">\*</ph><ph id="ph11">\*</ph><ph id="ph12">/</ph><ph id="ph13">\*</ph>.sln; <ph id="ph14">\*</ph><ph id="ph15">\*</ph><ph id="ph16">/</ph><ph id="ph17">\*</ph>.vssscc</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="translated">N/A</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">없음</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.user; <ph id="ph5">\*</ph><ph id="ph6">\*</ph><ph id="ph7">/</ph><ph id="ph8">\*</ph>.<ph id="ph9">\*</ph>proj; <ph id="ph10">\*</ph><ph id="ph11">\*</ph><ph id="ph12">/</ph><ph id="ph13">\*</ph>.sln; <ph id="ph14">\*</ph><ph id="ph15">\*</ph><ph id="ph16">/</ph><ph id="ph17">\*</ph>.vssscc</source>
          <target state="translated"><ph id="ph1">\*</ph><ph id="ph2">\*</ph><ph id="ph3">/</ph><ph id="ph4">\*</ph>.user; <ph id="ph5">\*</ph><ph id="ph6">\*</ph><ph id="ph7">/</ph><ph id="ph8">\*</ph>.<ph id="ph9">\*</ph>proj; <ph id="ph10">\*</ph><ph id="ph11">\*</ph><ph id="ph12">/</ph><ph id="ph13">\*</ph>.sln; <ph id="ph14">\*</ph><ph id="ph15">\*</ph><ph id="ph16">/</ph><ph id="ph17">\*</ph>.vssscc</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">- </ph><ph id="ph2">\*</ph><ph id="ph3">\*</ph><ph id="ph4">/</ph><ph id="ph5">\*</ph>.cs; <ph id="ph6">\*</ph><ph id="ph7">\*</ph><ph id="ph8">/</ph><ph id="ph9">\*</ph>.resx</source>
          <target state="translated"><ph id="ph1">- </ph><ph id="ph2">\*</ph><ph id="ph3">\*</ph><ph id="ph4">/</ph><ph id="ph5">\*</ph>.cs; <ph id="ph6">\*</ph><ph id="ph7">\*</ph><ph id="ph8">/</ph><ph id="ph9">\*</ph>.resx</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If you have globs in your project and you try to build it using the newest SDK, you'll get the following error:</source>
          <target state="translated">프로젝트에 GLOB가 있고 최신 SDK를 사용하여 빌드하려는 경우 다음 오류가 발생합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Duplicate Compile items were included.</source>
          <target state="translated">중복된 컴파일 항목이 포함되었습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The .NET SDK includes Compile items from your project directory by default.</source>
          <target state="translated">.NET SDK에는 기본적으로 프로젝트 디렉터리의 컴파일 항목이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You can either remove these items from your project file, or set the 'EnableDefaultCompileItems' property to 'false' if you want to explicitly include them in your project file.</source>
          <target state="translated">프로젝트 파일에서 이러한 항목을 제거하거나, 프로젝트 파일에서 이러한 항목을 명시적으로 포함하려면 'EnableDefaultCompileItems' 속성을 'false'로 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In order to get around this error, you can either remove the explicit <ph id="ph1">`Compile`</ph> items that match the ones listed on the previous table, or you can set the <ph id="ph2">`&lt;EnableDefaultCompileItems&gt;`</ph> property to <ph id="ph3">`false`</ph>, like this:</source>
          <target state="translated">이 오류를 해결하려면 이전 표에 나열된 항목과 일치하는 명시적인 <ph id="ph1">`Compile`</ph> 항목을 제거하거나 다음과 같이 <ph id="ph2">`&lt;EnableDefaultCompileItems&gt;`</ph> 속성을 <ph id="ph3">`false`</ph>로 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Setting this property to <ph id="ph1">`false`</ph> will override implicit inclusion and the behavior will revert back to the previous SDKs where you had to specify the default globs in your project.</source>
          <target state="translated">이 속성을 <ph id="ph1">`false`</ph>로 설정하면 암시적인 포함이 재정의되고, 프로젝트에서 기본 GLOB를 지정해야 했던 이전 SDK로 동작이 되돌아갑니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This change does not modify the main mechanics of other includes.</source>
          <target state="translated">이러한 변경으로 인해 다른 포함 항목의 기본 메커니즘이 수정되지 않습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>However, if you wish to specify, for example, some files to get published with your app, you can still use the known mechanisms in <bpt id="p1">*</bpt>csproj<ept id="p1">*</ept> for that (for example, the <ph id="ph1">`&lt;Content&gt;`</ph> element).</source>
          <target state="translated">그러나 예를 들어 일부 파일을 지정하여 앱에 게시하려는 경우 해당 사항에 대해 <bpt id="p1">*</bpt>csproj<ept id="p1">*</ept>의 알려진 메커니즘을 계속 사용할 수 있습니다(예: <ph id="ph1">`&lt;Content&gt;`</ph> 요소).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Recommendation</source>
          <target state="translated">권장 사항</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>With csproj, we recommend that you remove the default globs from your project and only add globs file paths for those artifacts that your app/library needs for various scenarios (runtime, NuGet packaging, etc.)</source>
          <target state="translated">csproj를 사용하는 경우 프로젝트에서 기본 GLOB를 제거하고 다양한 시나리오(런타임, NuGet 패키징 등)에 대해 앱/라이브러리에서 필요로 하는 아티팩트에 대한 GLOB 파일 경로만 추가하는 것이 좋습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Additions</source>
          <target state="translated">추가</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Sdk attribute</source>
          <target state="translated">SDK 특성</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;Project&gt;`</ph> element of the <bpt id="p1">*</bpt>.csproj<ept id="p1">*</ept> file has a new attribute called <ph id="ph2">`Sdk`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>.csproj<ept id="p1">*</ept> 파일의 <ph id="ph1">`&lt;Project&gt;`</ph> 요소에 <ph id="ph2">`Sdk`</ph>라고 하는 새 특성이 있습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Sdk`</ph> specifies which SDK will be used by the project.</source>
          <target state="translated"><ph id="ph1">`Sdk`</ph>는 프로젝트에서 사용될 SDK를 지정합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The SDK, as the <bpt id="p1">[</bpt>layering document<ept id="p1">](cli-msbuild-architecture.md)</ept> describes, is a set of MSBuild <bpt id="p2">[</bpt>tasks<ept id="p2">](https://docs.microsoft.com/visualstudio/msbuild/msbuild-tasks)</ept> and <bpt id="p3">[</bpt>targets<ept id="p3">](https://docs.microsoft.com/visualstudio/msbuild/msbuild-targets)</ept> that can build .NET Core code.</source>
          <target state="translated"><bpt id="p1">[</bpt>레이어 문서<ept id="p1">](cli-msbuild-architecture.md)</ept>에 설명된 것처럼 SDK는 .NET Core 코드를 빌드할 수 있는 MSBuild <bpt id="p2">[</bpt>작업<ept id="p2">](https://docs.microsoft.com/visualstudio/msbuild/msbuild-tasks)</ept> 및 <bpt id="p3">[</bpt>대상<ept id="p3">](https://docs.microsoft.com/visualstudio/msbuild/msbuild-targets)</ept>의 집합입니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>We ship two main SDKs with the .NET Core tools:</source>
          <target state="translated">.NET Core 도구와 함께 다음의 두 주요 SDK가 제공됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The .NET Core SDK with the ID of <ph id="ph1">`Microsoft.NET.Sdk`</ph></source>
          <target state="translated"><ph id="ph1">`Microsoft.NET.Sdk`</ph>의 ID와 함께 .NET Core SDK</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The .NET Core web SDK with the ID of <ph id="ph1">`Microsoft.NET.Sdk.Web`</ph></source>
          <target state="translated"><ph id="ph1">`Microsoft.NET.Sdk.Web`</ph>의 ID와 함께 .NET Core 웹 SDK</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You need to have the <ph id="ph1">`Sdk`</ph> attribute set to one of those IDs on the <ph id="ph2">`&lt;Project&gt;`</ph> element in order to use the .NET Core tools and build your code.</source>
          <target state="translated">.NET Core 도구를 사용하고 코드를 빌드하려면 <ph id="ph2">`&lt;Project&gt;`</ph> 요소의 해당 ID 중 하나에 대한 <ph id="ph1">`Sdk`</ph> 특성 집합이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>PackageReference</source>
          <target state="translated">PackageReference</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Item that specifies a NuGet dependency in the project.</source>
          <target state="translated">프로젝트의 NuGet 종속성을 지정하는 항목입니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Include`</ph> attribute specifies the package ID.</source>
          <target state="translated"><ph id="ph1">`Include`</ph> 특성은 패키지 ID를 지정합니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">버전</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Version`</ph> specifies the version of the package to restore.</source>
          <target state="translated"><ph id="ph1">`Version`</ph>은 복원할 패키지 버전을 지정합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The element respects the rules of the NuGet versioning scheme.</source>
          <target state="translated">요소는 NuGet 버전 지정 체계의 규칙을 따릅니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>IncludeAssets, ExcludeAssets and PrivateAssets</source>
          <target state="translated">IncludeAssets, ExcludeAssets 및 PrivateAssets</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`IncludeAssets`</ph> attribute specifies what assets belonging to the package specified by <ph id="ph2">`&lt;PackageReference&gt;`</ph> should be consumed.</source>
          <target state="translated"><ph id="ph1">`IncludeAssets`</ph> 특성은 <ph id="ph2">`&lt;PackageReference&gt;`</ph>에서 지정한 패키지에 속하여 사용해야 하는 자산을 지정합니다.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ExcludeAssets`</ph> attribute specifies what assets belonging to the package specified by <ph id="ph2">`&lt;PackageReference&gt;`</ph> should not be consumed.</source>
          <target state="translated"><ph id="ph1">`ExcludeAssets`</ph> 특성은 <ph id="ph2">`&lt;PackageReference&gt;`</ph>에서 지정한 패키지에 속하여 사용하지 말아야 하는 자산을 지정합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`PrivateAssets`</ph> attribute specifies what assets belonging to the package specified by <ph id="ph2">`&lt;PackageReference&gt;`</ph> should be consumed but that they should not flow to the next project.</source>
          <target state="translated"><ph id="ph1">`PrivateAssets`</ph> 특성은 <ph id="ph2">`&lt;PackageReference&gt;`</ph>에서 지정한 패키지에 속하여 사용해야 하지만 다음 프로젝트로 전달하지 말아야 하는 자산을 지정합니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`PrivateAssets`</ph> is equivalent to the <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept><ph id="ph2">/</ph><bpt id="p2">*</bpt>xproj<ept id="p2">*</ept> <ph id="ph3">`SuppressParent`</ph> element.</source>
          <target state="translated"><ph id="ph1">`PrivateAssets`</ph>는 <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept><ph id="ph2">/</ph><bpt id="p2">*</bpt>xproj<ept id="p2">*</ept> <ph id="ph3">`SuppressParent`</ph> 요소와 같습니다.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>These attributes can contain one or more of the following items:</source>
          <target state="translated">이러한 특성은 다음 항목 중 하나 이상을 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Compile`</ph> – the contents of the lib folder are available to compile against.</source>
          <target state="translated"><ph id="ph1">`Compile`</ph> - lib 폴더의 콘텐츠를 컴파일에 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Runtime`</ph> – the contents of the runtime folder are distributed.</source>
          <target state="translated"><ph id="ph1">`Runtime`</ph> - 런타임 폴더의 콘텐츠가 분산됩니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ContentFiles`</ph> – the contents of the <bpt id="p1">*</bpt>contentfiles<ept id="p1">*</ept> folder are used.</source>
          <target state="translated"><ph id="ph1">`ContentFiles`</ph> - <bpt id="p1">*</bpt>contentfiles<ept id="p1">*</ept> 폴더의 콘텐츠가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Build`</ph> – the props/targets in the build folder are used.</source>
          <target state="translated"><ph id="ph1">`Build`</ph> - 빌드 폴더의 속성/대상이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Native`</ph> – the contents from native assets are copied to the output folder for runtime.</source>
          <target state="translated"><ph id="ph1">`Native`</ph> - 런타임에 네이티브 자산의 콘텐츠가 출력 폴더에 복사됩니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Analyzers`</ph> – the analyzers are used.</source>
          <target state="translated"><ph id="ph1">`Analyzers`</ph> – 분석기가 사용됩니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Alternatively, the attribute can contain:</source>
          <target state="translated">또는 다음 특성이 포함될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`None`</ph> – none of the assets are used.</source>
          <target state="translated"><ph id="ph1">`None`</ph> – 자산이 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`All`</ph> – all assets are used.</source>
          <target state="translated"><ph id="ph1">`All`</ph> – 모든 자산이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>DotnetCliToolReference</source>
          <target state="translated">DotnetCliToolReference</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`&lt;DotnetCliToolReference&gt;`</ph> item element specifies the CLI tool that the user wants to restore in the context of the project.</source>
          <target state="translated"><ph id="ph1">`&lt;DotnetCliToolReference&gt;`</ph> 항목 요소는 사용자가 프로젝트의 컨텍스트에서 복원할 CLI 도구를 지정합니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>It's a replacement for the <ph id="ph1">`tools`</ph> node in <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>.</source>
          <target state="translated">이 요소는 <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>의 <ph id="ph1">`tools`</ph> 노드를 대체합니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">버전</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Version`</ph> specifies the version of the package to restore.</source>
          <target state="translated"><ph id="ph1">`Version`</ph>은 복원할 패키지 버전을 지정합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The attribute respect the rules of the NuGet versioning scheme.</source>
          <target state="translated">이 특성은 NuGet 버전 지정 체계의 규칙을 따릅니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>RuntimeIdentifiers</source>
          <target state="translated">RuntimeIdentifiers</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;RuntimeIdentifiers&gt;`</ph> element lets you specify a semicolon-delimited list of <bpt id="p1">[</bpt>Runtime Identifiers (RIDs)<ept id="p1">](../rid-catalog.md)</ept> for the project.</source>
          <target state="translated"><ph id="ph1">`&lt;RuntimeIdentifiers&gt;`</ph> 요소를 사용하면 프로젝트에 대해 세미콜론으로 구분된 <bpt id="p1">[</bpt>RID(런타임 식별자)<ept id="p1">](../rid-catalog.md)</ept> 목록을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>RIDs enable publishing a self-contained deployments.</source>
          <target state="translated">RID를 통해 자체 포함 배포를 게시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>RuntimeIdentifier</source>
          <target state="translated">RuntimeIdentifier</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;RuntimeIdentifier&gt;`</ph> element allows you to specify only one <bpt id="p1">[</bpt>Runtime Identifier (RID)<ept id="p1">](../rid-catalog.md)</ept> for the project.</source>
          <target state="translated"><ph id="ph1">`&lt;RuntimeIdentifier&gt;`</ph> 요소를 사용하면 프로젝트의 <bpt id="p1">[</bpt>RID(런타임 식별자)<ept id="p1">](../rid-catalog.md)</ept>를 하나만 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>RIDs enable publishing a self-contained deployment.</source>
          <target state="translated">RID를 통해 자체 포함 배포를 게시할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>PackageTargetFallback</source>
          <target state="translated">PackageTargetFallback</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`&lt;PackageTargetFallback&gt;`</ph> element allows you to specify a set of compatible targets to be used when restoring packages.</source>
          <target state="translated"><ph id="ph1">`&lt;PackageTargetFallback&gt;`</ph> 요소를 사용하면 패키지를 복원할 때 사용할 호환 가능한 대상 집합을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>It's designed to allow packages that use the dotnet <bpt id="p1">[</bpt>TxM (Target x Moniker)<ept id="p1">](https://docs.microsoft.com/nuget/schema/target-frameworks)</ept> to operate with packages that don't declare a dotnet TxM.</source>
          <target state="translated">이는 dotnet <bpt id="p1">[</bpt>TxM(대상 x 모니커)<ept id="p1">](https://docs.microsoft.com/nuget/schema/target-frameworks)</ept>을 사용하는 패키지가 dotnet TxM을 선언하지 않은 패키지와 작동하도록 허용합니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If your project uses the dotnet TxM, then all the packages it depends on must also have a dotnet TxM, unless you add the <ph id="ph1">`&lt;PackageTargetFallback&gt;`</ph> to your project in order to allow non-dotnet platforms to be compatible with dotnet.</source>
          <target state="translated">프로젝트에서 dotnet TxM을 사용하는 경우 프로젝트에 <ph id="ph1">`&lt;PackageTargetFallback&gt;`</ph>을 추가하여 dotnet이 아닌 플랫폼이 dotnet과 호환되도록 허용하지 않는 이상, 프로젝트에 사용하는 모든 패키지에도 dotnet TxM이 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The following example provides the fallbacks for all targets in your project:</source>
          <target state="translated">다음 예제에서는 프로젝트의 모든 대상에 대한 대체를 제공합니다.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The following example specifies the fallbacks only for the <ph id="ph1">`netcoreapp1.0`</ph> target:</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`netcoreapp1.0`</ph> 대상에 대해서만 대체를 지정합니다.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>NuGet metadata properties</source>
          <target state="translated">NuGet 메타데이터 속성</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>With the move to MSbuild, we have moved the input metadata that is used when packing a NuGet package from <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept> to <bpt id="p2">*</bpt>.csproj<ept id="p2">*</ept> files.</source>
          <target state="translated">MSbuild로 전환하면서 NuGet 패키지를 압축할 때 사용되는 입력 메타데이터를 <bpt id="p1">*</bpt>project.json<ept id="p1">*</ept>에서 <bpt id="p2">*</bpt>.csproj<ept id="p2">*</ept> 파일로 전환했습니다.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The inputs are MSBuild properties so they have to go within a <ph id="ph1">`&lt;PropertyGroup&gt;`</ph> group.</source>
          <target state="translated">이 입력은 MSBuild 속성이므로 <ph id="ph1">`&lt;PropertyGroup&gt;`</ph> 그룹 내에서 이동해야 합니다.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The following is the list of properties that are used as inputs to the packing process when using the <ph id="ph1">`dotnet pack`</ph> command or the <ph id="ph2">`Pack`</ph> MSBuild target that is part of the SDK.</source>
          <target state="translated">다음은 <ph id="ph1">`dotnet pack`</ph> 명령 또는 SDK의 일부인 <ph id="ph2">`Pack`</ph> MSBuild 대상을 사용할 때 압축 프로세스의 입력으로 사용되는 속성 목록입니다.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>IsPackable</source>
          <target state="translated">IsPackable</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A Boolean value that specifies whether the project can be packed.</source>
          <target state="translated">프로젝트를 압축할 수 있는지 여부를 지정하는 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">`true`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>PackageVersion</source>
          <target state="translated">PackageVersion</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Specifies the version that the resulting package will have.</source>
          <target state="translated">결과 패키지의 버전을 지정합니다.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Accepts all forms of NuGet version string.</source>
          <target state="translated">모든 형식의 NuGet 버전 문자열을 수락합니다.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Default is the value of <ph id="ph1">`$(Version)`</ph>, that is, of the property <ph id="ph2">`Version`</ph> in the project.</source>
          <target state="translated">기본값은 <ph id="ph1">`$(Version)`</ph>의 값입니다. 즉 프로젝트에서 <ph id="ph2">`Version`</ph> 속성의 값입니다.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>PackageId</source>
          <target state="translated">PackageId</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Specifies the name for the resulting package.</source>
          <target state="translated">결과 패키지의 이름을 지정합니다.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>If not specified, the <ph id="ph1">`pack`</ph> operation will default to using the <ph id="ph2">`AssemblyName`</ph> or directory name as the name of the package.</source>
          <target state="translated">지정하지 않으면 <ph id="ph1">`pack`</ph> 작업에서 기본값으로 <ph id="ph2">`AssemblyName`</ph>을 사용하거나 패키지 이름으로 디렉터리 이름을 사용합니다.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">제목</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A human-friendly title of the package, typically used in UI displays as on nuget.org and the Package Manager in Visual Studio.</source>
          <target state="translated">사람들에게 친숙한 패키지 제목이며 보통 nuget.org 및 Visual Studio의 패키지 관리자에서 UI 표시에 사용됩니다.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If not specified, the package ID is used instead.</source>
          <target state="translated">지정하지 않으면 패키지 ID가 대신 사용됩니다.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Authors</source>
          <target state="translated">만든 이</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A semicolon-separated list of packages authors, matching the profile names on nuget.org.</source>
          <target state="translated">nuget.org에서 프로필 이름과 일치하는, 세미콜론으로 구분된 패키지 작성자 목록입니다.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>These are displayed in the NuGet Gallery on nuget.org and are used to cross-reference packages by the same authors.</source>
          <target state="translated">이러한 목록은 nuget.org의 NuGet 갤러리에 표시되고 동일한 작성자가 패키지를 상호 참조하는 데 사용됩니다.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A long description of the package for UI display.</source>
          <target state="translated">UI 표시를 위한 패키지에 대한 자세한 설명입니다.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Copyright</source>
          <target state="translated">Copyright</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Copyright details for the package.</source>
          <target state="translated">패키지에 대한 저작권 정보입니다.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>PackageRequireLicenseAcceptance</source>
          <target state="translated">PackageRequireLicenseAcceptance</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A Boolean value that specifies whether the client must prompt the consumer to accept the package license before installing the package.</source>
          <target state="translated">클라이언트에서, 소비자가 패키지를 설치하기 전에 패키지 라이선스에 동의하도록 물어야 할지 여부를 지정하는 부울 값입니다.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">`false`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>PackageLicenseUrl</source>
          <target state="translated">PackageLicenseUrl</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>An URL to the license that is applicable to the package.</source>
          <target state="translated">패키지에 적용되는 라이선스에 대한 URL입니다.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>PackageProjectUrl</source>
          <target state="translated">PackageProjectUrl</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A URL for the package's home page, often shown in UI displays as well as nuget.org.</source>
          <target state="translated">nuget.org뿐만 아니라 종종 UI 표시에 표시되는 패키지의 홈페이지에 대한 URL입니다.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>PackageIconUrl</source>
          <target state="translated">PackageIconUrl</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A URL for a 64x64 image with transparent background to use as the icon for the package in UI display.</source>
          <target state="translated">UI 표시에서 패키지에 대한 아이콘으로 사용하는 투명한 배경의 64x64 이미지에 대한 URL입니다.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>PackageReleaseNotes</source>
          <target state="translated">PackageReleaseNotes</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Release notes for the package.</source>
          <target state="translated">패키지에 대한 릴리스 정보입니다.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>PackageTags</source>
          <target state="translated">PackageTags</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>A semicolon-delimited list of tags that designates the package.</source>
          <target state="translated">패키지를 지정하는 세미콜론으로 구분된 태그 목록입니다.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>PackageOutputPath</source>
          <target state="translated">PackageOutputPath</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Determines the output path in which the packed package will be dropped.</source>
          <target state="translated">압축된 패키지가 삭제되는 출력 경로를 결정합니다.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Default is <ph id="ph1">`$(OutputPath)`</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">`$(OutputPath)`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>IncludeSymbols</source>
          <target state="translated">IncludeSymbols</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>This Boolean value indicates whether the package should create an additional symbols package when the project is packed.</source>
          <target state="translated">이 부울 값은 프로젝트가 압축될 때 패키지에서 추가 기호 패키지를 만들어야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>This package will have a <bpt id="p1">*</bpt>.symbols.nupkg<ept id="p1">*</ept> extension and will copy the PDB files along with the DLL and other output files.</source>
          <target state="translated">이 패키지에는 <bpt id="p1">*</bpt>. symbols.nupkg<ept id="p1">*</ept> 확장이 있으며 DLL 및 기타 출력 파일과 함께 PDB 파일을 복사합니다.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>IncludeSource</source>
          <target state="translated">IncludeSource</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>This Boolean value indicates whether the pack process should create a source package.</source>
          <target state="translated">이 부울 값은 팩 프로세스에서 소스 패키지를 만들어야 하는지 여부를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The source package contains the library's source code as well as PDB files.</source>
          <target state="translated">소스 패키지에는 PDB 파일뿐만 아니라 라이브러리의 소스 코드가 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Source files are put under the <ph id="ph1">`src/ProjectName`</ph> directory in the resulting package file.</source>
          <target state="translated">소스 파일은 결과 패키지 파일의 <ph id="ph1">`src/ProjectName`</ph> 디렉터리 아래에 놓입니다.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>IsTool</source>
          <target state="translated">IsTool</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Specifies whether all output files are copied to the <bpt id="p1">*</bpt>tools<ept id="p1">*</ept> folder instead of the <bpt id="p2">*</bpt>lib<ept id="p2">*</ept> folder.</source>
          <target state="translated">모든 출력 파일이 <bpt id="p2">*</bpt>lib<ept id="p2">*</ept> 폴더 대신 <bpt id="p1">*</bpt>tools<ept id="p1">*</ept> 폴더에 복사되는지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Note that this is different from a <ph id="ph1">`DotNetCliTool`</ph> which is specified by setting the <ph id="ph2">`PackageType`</ph> in the <bpt id="p1">*</bpt>.csproj<ept id="p1">*</ept> file.</source>
          <target state="translated">이것은 <bpt id="p1">*</bpt>.csproj<ept id="p1">*</ept> 파일에서 <ph id="ph2">`PackageType`</ph>을 설정하여 지정하는 <ph id="ph1">`DotNetCliTool`</ph>과 다릅니다.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>RepositoryUrl</source>
          <target state="translated">RepositoryUrl</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Specifies the URL for the repository where the source code for the package resides and/or from which it's being built.</source>
          <target state="translated">패키지에 대한 소스 코드 및/또는 빌드 중인 소스 코드가 있는 리포지토리의 URL을 지정합니다.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>RepositoryType</source>
          <target state="translated">RepositoryType</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Specifies the type of the repository.</source>
          <target state="translated">리포지토리의 유형을 지정합니다.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Default is "git".</source>
          <target state="translated">기본값은 "git"입니다.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>NoPackageAnalysis</source>
          <target state="translated">NoPackageAnalysis</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Specifies that pack should not run package analysis after building the package.</source>
          <target state="translated">패키지를 빌드한 후 팩에서 패키지 분석을 실행하지 않아야 함을 지정합니다.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>MinClientVersion</source>
          <target state="translated">MinClientVersion</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Specifies the minimum version of the NuGet client that can install this package, enforced by nuget.exe and the Visual Studio Package Manager.</source>
          <target state="translated">nuget.exe 및 Visual Studio 패키지 관리자에 의해 적용되는, 이 패키지를 설치할 수 있는 NuGet 클라이언트의 최소 버전을 지정합니다.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>IncludeBuildOutput</source>
          <target state="translated">IncludeBuildOutput</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This Boolean values specifies whether the build output assemblies should be packed into the <bpt id="p1">*</bpt>.nupkg<ept id="p1">*</ept> file or not.</source>
          <target state="translated">이 부울 값은 빌드 출력 어셈블리를 <bpt id="p1">*</bpt>.nupkg<ept id="p1">*</ept> 파일에 압축해야 할지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>IncludeContentInPack</source>
          <target state="translated">IncludeContentInPack</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>This Boolean value specifies whether any items that have a type of <ph id="ph1">`Content`</ph> will be included in the resulting package automatically.</source>
          <target state="translated">이 부울 값은 <ph id="ph1">`Content`</ph> 형식이 있는 항목이 결과 패키지에 자동으로 포함될지 여부를 지정합니다.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">`true`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>BuildOutputTargetFolder</source>
          <target state="translated">BuildOutputTargetFolder</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Specifies the folder where to place the output assemblies..</source>
          <target state="translated">출력 어셈블리를 배치할 폴더를 지정합니다.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The output assemblies (and other output files) are copied into their respective framework folders.</source>
          <target state="translated">출력 어셈블리(및 기타 출력 파일)는 해당 프레임워크 폴더에 복사됩니다.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>ContentTargetFolders</source>
          <target state="translated">ContentTargetFolders</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>This property specifies the default location of where all the content files should go if <ph id="ph1">`PackagePath`</ph> is not specified for them.</source>
          <target state="translated">이 속성은 <ph id="ph1">`PackagePath`</ph>가 지정되지 않은 경우 모든 콘텐츠 파일의 기본 위치를 지정합니다.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The default value is "content;contentFiles".</source>
          <target state="translated">기본값은 "content;contentFiles"입니다.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>NuspecFile</source>
          <target state="translated">NuspecFile</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Relative or absolute path to the <bpt id="p1">*</bpt>.nuspec<ept id="p1">*</ept> file being used for packing.</source>
          <target state="translated">압축에 사용되는 <bpt id="p1">*</bpt>.nuspec<ept id="p1">*</ept> 파일에 대한 상대 또는 절대 경로입니다.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">*</bpt>.nuspec<ept id="p1">*</ept> file is specified, it's used <bpt id="p2">**</bpt>exclusively<ept id="p2">**</ept> for packaging information and any information in the projects is not used.</source>
          <target state="translated"><bpt id="p1">*</bpt>.nuspec<ept id="p1">*</ept> 파일이 지정된 경우 패키징 정보에 대해 <bpt id="p2">**</bpt>단독으로<ept id="p2">**</ept> 사용되며 프로젝트의 모든 정보는 사용되지 않습니다.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>NuspecBasePath</source>
          <target state="translated">NuspecBasePath</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Base path for the <bpt id="p1">*</bpt>.nuspec<ept id="p1">*</ept> file.</source>
          <target state="translated"><bpt id="p1">*</bpt>.nuspec<ept id="p1">*</ept> 파일에 대한 기본 경로입니다.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>NuspecProperties</source>
          <target state="translated">NuspecProperties</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Semicolon separated list of key=value pairs.</source>
          <target state="translated">key=value 쌍의 세미콜론으로 구분된 목록입니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>