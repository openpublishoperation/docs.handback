<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f0362aa" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">57ae01419c6f7a75970816e1245094c38c5247fa</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\preview3\tools\dotnet-migrate.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53aa35d54b08ce1c3ed88508ce45fa970fef93a0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df41a6b7c8aac0b82b1ca0cf63287e9545a7281e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-migrate command | Microsoft Docs</source>
          <target state="translated">dotnet-migrate 명령 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-migrate command migrates a project and all of its dependencies.</source>
          <target state="translated">dotnet-migrate 명령은 프로젝트와 모든 종속성을 마이그레이션합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-migrate, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-migrate, CLI, CLI 명령, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-migrate</source>
          <target state="translated">dotnet-migrate</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">이름</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>dotnet-migrate -- Migrates a Preview 2 .NET Core project to RC4 .NET Core project</source>
          <target state="translated">dotnet-migrate - Preview 2 .NET Core 프로젝트를 RC4 .NET Core 프로젝트로 마이그레이션</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">개요</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet migrate`</ph> command will migrate a valid Preview 2 <ph id="ph2">`project.json`</ph> based project to a valid RC4 <ph id="ph3">`csproj`</ph> project.</source>
          <target state="translated"><ph id="ph1">`dotnet migrate`</ph> 명령은 유효한 Preview 2 <ph id="ph2">`project.json`</ph> 기반 프로젝트를 유효한 RC4 <ph id="ph3">`csproj`</ph> 프로젝트로 마이그레이션합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>By default, the command will migrate the root project and any project references that the root project contains.</source>
          <target state="translated">기본적으로 이 명령은 루트 프로젝트와, 루트 프로젝트에 포함된 모든 프로젝트 참조를 마이그레이션합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This behavior can be disabled using the <ph id="ph1">`--skip-project-references`</ph> option at runtime.</source>
          <target state="translated">이 동작은 런타임에 <ph id="ph1">`--skip-project-references`</ph> 옵션을 사용하여 사용하지 않도록 설정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Migration can be done on either:</source>
          <target state="translated">마이그레이션은 다음 위치에서 수행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A single project by specifying the <ph id="ph1">`project.json`</ph> file to migrate</source>
          <target state="translated">마이그레이션할 <ph id="ph1">`project.json`</ph> 파일을 지정하는 단일 프로젝트</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>All of the directories specified in the <ph id="ph1">`global.json`</ph> file by passing in a path to the <ph id="ph2">`global.json`</ph> file</source>
          <target state="translated"><ph id="ph2">`global.json`</ph> 파일로 경로를 전달하여 <ph id="ph1">`global.json`</ph> 파일에 지정된 모든 디렉터리</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>On all sub-directories of the given directory recursively</source>
          <target state="translated">지정된 디렉터의 모든 하위 디렉터리(재귀적)</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The migrate command will keep the migrated <ph id="ph1">`project.json`</ph> file inside a <ph id="ph2">`backup`</ph> directory which it will create if it doesn't exist.</source>
          <target state="translated">migrate 명령은 마이그레이션된 <ph id="ph1">`project.json`</ph> 파일을 <ph id="ph2">`backup`</ph> 디렉터리에서 유지합니다. 이 디렉터리는 없는 경우 생성됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This can be overriden using the <ph id="ph1">`--skip-backup`</ph> option.</source>
          <target state="translated"><ph id="ph1">`--skip-backup`</ph> 옵션을 사용하여 재정의할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>By default, the migration operation will output the state of the migration process to standard output (STDOUT).</source>
          <target state="translated">기본적으로 마이그레이션 작업은 표준 출력(STDOUT)에 마이그레이션 프로세스의 상태를 출력합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you use the <ph id="ph1">`--report-file`</ph> option, that output will also be saved to a file that you specify.</source>
          <target state="translated"><ph id="ph1">`--report-file`</ph> 옵션을 사용하는 경우 출력은 지정한 파일에도 저장됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>As of RC4, the <ph id="ph1">`dotnet migrate`</ph> command only supports valid Preview 2 <ph id="ph2">`project.json`</ph> files.</source>
          <target state="translated">RC4부터 <ph id="ph1">`dotnet migrate`</ph> 명령은 유효한 Preview 2 <ph id="ph2">`project.json`</ph> 파일만 지원합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This means that you cannot use it to migrate old DNX or Preview 1 <ph id="ph1">`project.json`</ph> files directly to csproj; you first need to migrate them to Preview 2 project.json files and then to csproj files.</source>
          <target state="translated">즉, 오래된 DNX 또는 Preview 1 <ph id="ph1">`project.json`</ph> 파일을 직접 csproj로 마이그레이션하는 데 사용할 수 없습니다. 먼저 Preview 2 project.json 파일로 마이그레이션한 다음 csproj 파일로 마이그레이션해야 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In the future, we will add support for Preview 1 projects.</source>
          <target state="translated">나중에 Preview 1 프로젝트에 대한 지원이 추가될 예정입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">옵션</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">명령에 대한 간단한 도움말을 출력합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Template csproj file to use for migration.</source>
          <target state="translated">마이그레이션에 사용할 템플릿 csproj 파일입니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>By default, the same template as the one dropped by <ph id="ph1">`dotnet new`</ph> will be used.</source>
          <target state="translated">기본적으로 <ph id="ph1">`dotnet new`</ph>에서 삭제한 것과 동일한 템플릿이 사용됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The version of the sdk package that will be referenced in the migrated app.</source>
          <target state="translated">마이그레이션된 앱에서 참조할 sdk 패키지의 버전입니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The default is the version of the sdk in dotnet new.</source>
          <target state="translated">기본값은 새 dotnet의 sdk 버전입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The path to the xproj file to use.</source>
          <target state="translated">사용할 xproj 파일에 대한 경로입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Required when there is more than one xproj in a project directory.</source>
          <target state="translated">프로젝트 디렉터리에 둘 이상의 xproj 있을 때 필요합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Skip migrating project references.</source>
          <target state="translated">마이그레이션 프로젝트 참조를 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>By default project references are migrated recursively.</source>
          <target state="translated">기본적으로 프로젝트 참조는 재귀적으로 마이그레이션됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Output migration report to a file in addition to the console.</source>
          <target state="translated">마이그레이션 보고서를 콘솔 외에도 파일에 출력합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Output migration report file as json rather than user messages.</source>
          <target state="translated">사용자 메시지가 아닌 json으로 마이그레이션 보고서 파일을 출력합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Skip moving project.json, global.json, and <ph id="ph1">\*</ph>.xproj to a <ph id="ph2">`backup`</ph> directory after successful migration.</source>
          <target state="translated">마이그레이션을 완료한 후 project.json, global.json, 및 <ph id="ph1">\*</ph>.xproj를 <ph id="ph2">`backup`</ph> 디렉터리로 이동하는 작업을 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Migrate a project in the current directory and all of its project to project dependencies:</source>
          <target state="translated">현재 디렉터리의 프로젝트와 해당하는 모든 프로젝트를 프로젝트 종속성으로 마이그레이션합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Migrate all projects that <ph id="ph1">`global.json`</ph> file points to:</source>
          <target state="translated"><ph id="ph1">`global.json`</ph> 파일에서 가리키는 프로젝트를 모두 마이그레이션합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Migrate only the current project and no project to project dependencies and use a specific SDK version:</source>
          <target state="translated">현재 프로젝트만 프로젝트 종속성으로 마이그레이션하고 특정 SDK 버전을 사용합니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>