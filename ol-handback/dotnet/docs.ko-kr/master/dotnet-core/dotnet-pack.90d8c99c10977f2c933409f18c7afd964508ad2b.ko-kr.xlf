<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-4a95368" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">03fab8ad488f4001929524298e52cafeffc45e7f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\preview3\tools\dotnet-pack.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c41a2b8f64d068aeb4a4b28f85fa076a8d513ffb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a96c9215d53551b300f3aef0391783fd0bc8af2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-pack command | Microsoft Docs</source>
          <target state="translated">dotnet-pack 명령 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-pack command creates NuGet packages for your .NET Core project.</source>
          <target state="translated">dotnet-pack 명령은 .NET Core 프로젝트에 대한 NuGet 패키지를 만듭니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-pack, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-pack, CLI, CLI 명령, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-pack (Tooling Preview 4)</source>
          <target state="translated">dotnet-pack(Tooling Preview 4)</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic applies to Visual Studio 2017 RC - .NET Core Tools Preview 4.</source>
          <target state="translated">이 항목은 Visual Studio 2017 RC - .NET Core Tools Preview 4에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For the .NET Core Tools Preview 2 version, see the <bpt id="p1">[</bpt>dotnet-pack<ept id="p1">](../../tools/dotnet-pack.md)</ept> topic.</source>
          <target state="translated">.NET Core Tools Preview 2 버전의 경우 <bpt id="p1">[</bpt>dotnet-pack<ept id="p1">](../../tools/dotnet-pack.md)</ept> 항목을 참조하세요.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">이름</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet-pack`</ph> - Packs the code into a NuGet package.</source>
          <target state="translated"><ph id="ph1">`dotnet-pack`</ph> - 코드를 NuGet 패키지로 압축합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">개요</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet pack`</ph> command builds the project and creates NuGet packages.</source>
          <target state="translated"><ph id="ph1">`dotnet pack`</ph> 명령은 프로젝트를 빌드하고 NuGet 패키지를 만듭니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The result of this command is a NuGet package.</source>
          <target state="translated">이 명령의 결과가 NuGet 패키지입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`--include-symbols`</ph> option is present, another package containing the debug symbols will be created.</source>
          <target state="translated"><ph id="ph1">`--include-symbols`</ph> 옵션이 있는 경우 디버그 기호를 포함하는 다른 패키지가 생성됩니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>NuGet dependencies of the project being packed are added to the <ph id="ph1">`nuspec`</ph> file, so they are able to be resolved when the package is installed.</source>
          <target state="translated">압축할 프로젝트의 NuGet 종속성은 <ph id="ph1">`nuspec`</ph> 파일에 추가되므로 패키지를 설치할 때 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Project-to-project references are not packaged inside the project.</source>
          <target state="translated">프로젝트 간 참조는 프로젝트 내에서 패키지되지 않습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Currently, you need to have a package per project if you have project-to-project dependencies.</source>
          <target state="translated">현재 프로젝트 간 종속성이 있는 경우 프로젝트당 패키지가 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet pack`</ph> by default first builds the project.</source>
          <target state="translated"><ph id="ph1">`dotnet pack`</ph>은 기본적으로 프로젝트를 먼저 빌드합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you wish to avoid this, pass the <ph id="ph1">`--no-build`</ph> option.</source>
          <target state="translated">이렇게 하지 않으려면 <ph id="ph1">`--no-build`</ph> 옵션을 전달합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This can be useful in Continuous Integration (CI) build scenarios in which you know the code was just previously built, for example.</source>
          <target state="translated">예를 들어 이 옵션은 코드가 이미 빌드된 CI(연속 통합) 빌드 시나리오에서 유용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">옵션</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">명령에 대한 간단한 도움말을 출력합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The project to pack.</source>
          <target state="translated">압축할 프로젝트입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It can be either a path to a <bpt id="p1">[</bpt>csproj file<ept id="p1">](csproj.md)</ept> or to a directory.</source>
          <target state="translated"><bpt id="p1">[</bpt>csproj file<ept id="p1">](csproj.md)</ept> 파일 또는 디렉터리에 대한 경로일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If omitted, it will default to the current directory.</source>
          <target state="translated">생략하면 현재 디렉터리로 기본 설정됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Places the built packages in the directory specified.</source>
          <target state="translated">지정된 디렉터리에 빌드된 패키지를 배치합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Does not build the project before packing.</source>
          <target state="translated">압축하기 전에 프로젝트를 빌드하지 않습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Includes the source files in the NuGet package.</source>
          <target state="translated">NuGet 패키지에 소스 파일을 포함합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The sources files are included in the <ph id="ph1">`src`</ph> folder within the <ph id="ph2">`nupkg`</ph>.</source>
          <target state="translated">소스 파일은 <ph id="ph2">`nupkg`</ph>의 <ph id="ph1">`src`</ph> 폴더에 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Generate the symbols nupkg.</source>
          <target state="translated">기호 nupkg를 생성합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Configuration to use when building the project.</source>
          <target state="translated">프로젝트를 빌드할 때 사용할 구성입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If not specified, will default to <ph id="ph1">`Debug`</ph>.</source>
          <target state="translated">지정하지 않으면 <ph id="ph1">`Debug`</ph>로 기본 설정됩니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Updates the star in <ph id="ph1">`-*`</ph> package version suffix with a specified string.</source>
          <target state="translated"><ph id="ph1">`-*`</ph> 패키지 버전 접미사의 별표를 지정된 문자열로 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Pack the project in the current directory:</source>
          <target state="translated">현재 디렉터리에 있는 프로젝트를 압축합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Pack the app1 project:</source>
          <target state="translated">app1 프로젝트를 압축합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Pack the project in the current directory and place the resulting packages into the specified folder:</source>
          <target state="translated">현재 디렉터리에 있는 프로젝트를 압축하고 결과 패키지를 지정된 폴더에 배치합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Pack the project in the current directory into the specified folder and skip the build step:</source>
          <target state="translated">현재 디렉터리에 있는 프로젝트를 지정된 폴더로 압축하고 빌드 단계를 건너뜁니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Pack the current project and updates the resulting packages version with the given suffix.</source>
          <target state="translated">현재 프로젝트를 압축하고 결과 패키지 버전을 지정된 접미사로 업데이트합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For example, version <ph id="ph1">`1.0.0-*`</ph> will be updated to <ph id="ph2">`1.0.0-ci-1234`</ph>.</source>
          <target state="translated">예를 들어 <ph id="ph1">`1.0.0-*`</ph> 버전은 <ph id="ph2">`1.0.0-ci-1234`</ph>로 업데이트됩니다.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>