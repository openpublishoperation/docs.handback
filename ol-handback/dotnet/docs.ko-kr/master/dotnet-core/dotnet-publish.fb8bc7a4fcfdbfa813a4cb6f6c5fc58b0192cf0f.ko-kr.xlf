<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-4a95368" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9fb64a90bdbd2096d4752279b1670fad8e8703f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\dotnet-publish.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f2e0ca87ff4d5cf23ed933c07c081fb07b52569</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b026711c21a04c6b1db3cbad3627ea035be37f7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-publish command | Microsoft Docs</source>
          <target state="translated">dotnet-publish 명령 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-publish command publishes your .NET Core project into a directory.</source>
          <target state="translated">dotnet-publish 명령은 .NET Core 프로젝트를 디렉터리에 게시합니다.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-publish, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-publish, CLI, CLI 명령, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-publish</source>
          <target state="translated">dotnet-publish</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic applies to .NET Core Tools Preview 2.</source>
          <target state="translated">이 항목은 .NET Core Tools Preview 2에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For the  Visual Studio 2017 RC - .NET Core Tools Preview 4 version, see the <bpt id="p1">[</bpt>dotnet-publish (Tooling Preview 4)<ept id="p1">](../preview3/tools/dotnet-publish.md)</ept> topic.</source>
          <target state="translated">Visual Studio 2017 RC - .NET Core Tools Preview 4 버전의 경우 <bpt id="p1">[</bpt>dotnet-publish(Tooling Preview 4)<ept id="p1">](../preview3/tools/dotnet-publish.md)</ept> 항목을 참조하세요.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">이름</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet-publish`</ph> - Packs the application and all of its dependencies into a folder getting it ready for publishing.</source>
          <target state="translated"><ph id="ph1">`dotnet-publish`</ph> - 응용 프로그램 및 모든 종속성을 폴더로 압축하여 게시할 준비를 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">개요</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet publish`</ph> compiles the application, reads through its dependencies specified in the <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> file and publishes the resulting set of files to a directory.</source>
          <target state="translated"><ph id="ph1">`dotnet publish`</ph>는 응용 프로그램을 컴파일하고 <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> 파일에 지정된 종속성을 읽은 다음 결과 파일 집합을 디렉터리에 게시합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Depending on the type of portable app, the resulting directory will contain the following:</source>
          <target state="translated">이식 가능한 앱의 유형에 따라 결과 디렉터리에 다음 항목이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Portable application<ept id="p1">*</ept> - application's intermediate language (IL) code and all of application's managed dependencies.</source>
          <target state="translated"><bpt id="p1">*</bpt>이식 가능한 응용 프로그램<ept id="p1">*</ept> - 응용 프로그램의 IL(중간 언어) 코드 및 응용 프로그램의 모든 관리 종속성입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Portable application with native dependencies<ept id="p1">*</ept> - same as above with a sub-directory for the supported platform of each native dependency.</source>
          <target state="translated"><bpt id="p1">*</bpt>기본 종속성이 있는 이식 가능한 응용 프로그램<ept id="p1">*</ept> - 위와 같으며 각 기본 종속성의 지원되는 플랫폼에 대한 하위 디렉터리를 포함합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Self-contained application<ept id="p1">*</ept> - same as above plus the entire runtime for the targeted platform.</source>
          <target state="translated"><bpt id="p1">*</bpt>자체 포함 응용 프로그램<ept id="p1">*</ept> - 위와 같으며 대상 플랫폼에 대한 전체 런타임을 포함합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>.NET Core Application Deployment<ept id="p1">](../deploying/index.md)</ept> topic.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>.NET Core 응용 프로그램 배포<ept id="p1">](../deploying/index.md)</ept> 항목을 참조하세요.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">옵션</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The project to publish, which defaults to the current directory if <ph id="ph1">`[project]`</ph> is not specified.</source>
          <target state="translated">게시할 프로젝트이며, <ph id="ph1">`[project]`</ph>를 지정하지 않을 경우 현재 디렉터리로 기본 설정됩니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This value can be a path to the <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> file or to the project directory that contains the <bpt id="p2">[</bpt>project.json<ept id="p2">](project-json.md)</ept> file.</source>
          <target state="translated">이 값은 <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> 파일 또는 <bpt id="p2">[</bpt>project.json<ept id="p2">](project-json.md)</ept> 파일을 포함하는 프로젝트 디렉터리에 대한 경로일 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If no <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> file can be found, <ph id="ph1">`dotnet publish`</ph> throws an error.</source>
          <target state="translated"><bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> 파일이 없으면 <ph id="ph1">`dotnet publish`</ph>에서 오류를 throw합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">명령에 대한 간단한 도움말을 출력합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Publishes the application for a given framework identifier (FID).</source>
          <target state="translated">지정된 FID(프레임워크 식별자)에 대한 응용 프로그램을 게시합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If not specified, FID is read from <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md#frameworks)</ept>.</source>
          <target state="translated">지정하지 않으면 <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md#frameworks)</ept>에서 FID를 읽어 옵니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If no valid framework is found, the command throws an error.</source>
          <target state="translated">유효한 프레임워크가 없으면 명령에서 오류를 throw합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If multiple valid frameworks are found, the command publishes for all valid frameworks.</source>
          <target state="translated">유효한 프레임워크가 여러 개이면 명령에서 유효한 프레임워크를 모두 게시합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Publishes the application for a given runtime.</source>
          <target state="translated">지정된 런타임에 대한 응용 프로그램을 게시합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For a list of Runtime Identifiers (RIDs) you can use, see the <bpt id="p1">[</bpt>RID catalog<ept id="p1">](../rid-catalog.md)</ept>.</source>
          <target state="translated">사용할 수 있는 RID(런타임 식별자) 목록은 <bpt id="p1">[</bpt>RID 카탈로그<ept id="p1">](../rid-catalog.md)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Directory in which to place temporary outputs.</source>
          <target state="translated">임시 출력을 배치할 디렉터리입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Specify the path where to place the directory.</source>
          <target state="translated">디렉터리를 배치할 경로를 지정합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If not specified, it will default to <bpt id="p1">*</bpt><bpt id="p2">_</bpt>./bin/[configuration]/[framework]/<ept id="p2">_</ept><ept id="p1">*</ept> for portable applications or <bpt id="p3">*</bpt><bpt id="p4">_</bpt>./bin/[configuration]/[framework]/[runtime]<ept id="p4">_</ept><ept id="p3">*</ept> for self-contained deployments.</source>
          <target state="translated">지정하지 않으면 이식 가능한 응용 프로그램의 경우 <bpt id="p1">*</bpt><bpt id="p2">_</bpt>./bin/[configuration]/[framework]/<ept id="p2">_</ept><ept id="p1">*</ept>로, 자체 포함 배포의 경우 <bpt id="p3">*</bpt><bpt id="p4">_</bpt>./bin/[configuration]/[framework]/[runtime]<ept id="p4">_</ept><ept id="p3">*</ept>으로 기본 설정됩니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Defines what <ph id="ph1">`*`</ph> should be replaced with in the version field in the project.json file.</source>
          <target state="translated">project.json 파일의 버전 필드에서 <ph id="ph1">`*`</ph>를 대체할 항목을 정의합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Configuration to use when publishing.</source>
          <target state="translated">게시할 때 사용할 구성입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`Debug`</ph>.</source>
          <target state="translated">기본값은 <ph id="ph1">`Debug`</ph>입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`[--native-subdirectory]`</ph> Temporary mechanism to include subdirectories from native assets of dependency packages in output.</source>
          <target state="translated"><ph id="ph1">`[--native-subdirectory]`</ph> - 종속성 패키지의 네이티브 자산에서 하위 디렉터리를 출력에 포함하는 임시 메커니즘입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`[--no-build]`</ph> Does not build projects before publishing.</source>
          <target state="translated"><ph id="ph1">`[--no-build]`</ph> - 게시하기 전에 프로젝트를 빌드하지 않습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Publish an application using the framework found in <ph id="ph1">`project.json`</ph>.</source>
          <target state="translated"><ph id="ph1">`project.json`</ph>에 있는 프레임워크를 사용하여 응용 프로그램을 게시합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`project.json`</ph> contains <bpt id="p1">[</bpt>runtimes<ept id="p1">](project-json.md#runtimes)</ept> node, publish for the RID of the current platform.</source>
          <target state="translated"><ph id="ph1">`project.json`</ph>에 <bpt id="p1">[</bpt>runtimes<ept id="p1">](project-json.md#runtimes)</ept> 노드가 포함된 경우 현재 플랫폼의 RID를 게시합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Publish the application using the specified <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept>:</source>
          <target state="translated">지정된 <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept>을 사용하여 응용 프로그램을 게시합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Publish the current application using the <ph id="ph1">`netcoreapp1.0`</ph> framework:</source>
          <target state="translated"><ph id="ph1">`netcoreapp1.0`</ph> 프레임워크를 사용하여 현재 응용 프로그램을 게시합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Publish the current application using the <ph id="ph1">`netcoreapp1.0`</ph> framework and runtime for <ph id="ph2">`OS X 10.10`</ph> (this RID has to exist in the <ph id="ph3">`project.json`</ph> <bpt id="p1">[</bpt>runtimes<ept id="p1">](project-json.md#runtimes)</ept> node):</source>
          <target state="translated"><ph id="ph1">`netcoreapp1.0`</ph> 프레임워크 및 <ph id="ph2">`OS X 10.10`</ph>에 대한 런타임을 사용하여 현재 응용 프로그램을 게시합니다. 이 RID는 <ph id="ph3">`project.json`</ph> <bpt id="p1">[</bpt>runtimes<ept id="p1">](project-json.md#runtimes)</ept> 노드에 있어야 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Frameworks<ept id="p1">](../../standard/frameworks.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>프레임워크<ept id="p1">](../../standard/frameworks.md)</ept></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Runtime IDentifier (RID) catalog<ept id="p1">](../rid-catalog.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>RID(런타임 식별자) 카탈로그<ept id="p1">](../rid-catalog.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>