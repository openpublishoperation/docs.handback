<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-4a95368" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">257fb74d0c07b0f203fa07edc08829b21b48bab6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b1e7171b59875239dc2071d5bd01cf12781cd231</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0dbe2a455f6e302897175f3c7badea75f2e747c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>.NET Core Command-Line Interface (CLI) Tools | Microsoft Docs</source>
          <target state="translated">.NET Core CLI(명령줄 인터페이스) 도구 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>An overview of what the Command-Line Interface (CLI) is and its main features</source>
          <target state="translated">CLI(명령줄 인터페이스)의 개념 및 주요 기능에 대한 개요</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>CLI, CLI tools, .NET, .NET Core</source>
          <target state="translated">CLI, CLI 도구, .NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>.NET Core command-line interface tools</source>
          <target state="translated">.NET Core 명령줄 인터페이스 도구</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic applies to .NET Core Tools Preview 2.</source>
          <target state="translated">이 항목은 .NET Core Tools Preview 2에 적용됩니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For the  Visual Studio 2017 RC - .NET Core Tools Preview 4 version, see the <bpt id="p1">[</bpt>.NET Core command-line interface tools (Tooling Preview 4)<ept id="p1">](../preview3/tools/index.md)</ept> topic.</source>
          <target state="translated">Visual Studio 2017 RC - .NET Core Tools Preview 4 버전의 경우 <bpt id="p1">[</bpt>.NET Core 명령줄 인터페이스 도구(Tooling Preview 4)<ept id="p1">](../preview3/tools/index.md)</ept> 항목을 참조하세요.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The .NET Core command-line interface (CLI) is a new foundational cross-platform toolchain for developing .NET Core applications.</source>
          <target state="translated">.NET Core CLI(명령줄 인터페이스)는 .NET Core 응용 프로그램 개발에 사용되는 새로운 기본 플랫폼 간 도구 체인입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>It is "foundational" because it is the primary layer on which other, higher-level tools, such as Integrated Development Environments (IDEs), editors and build orchestrators can build on.</source>
          <target state="translated">IDE(통합 개발 환경), 편집기 및 빌드 Orchestrator와 같은 기타 상위 수준 도구의 기반이 될 수 있는 주 계층이기 때문에 "기본"입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It is also cross-platform by default and has the same surface area on each of the supported platforms.</source>
          <target state="translated">기본적으로 플랫폼 간 인터페이스이며 지원되는 각 플랫폼에 동일한 노출 영역이 있습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This means that when you learn how to use the tooling, you can use it the same way from any of the supported platforms.</source>
          <target state="translated">즉, 도구 사용 방법을 익히면 지원되는 모든 플랫폼에서 동일한 방식으로 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">설치</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>As with any tooling, the first thing is to get the tools to your machine.</source>
          <target state="translated">모든 도구와 마찬가지로 먼저 컴퓨터에 도구를 가져와야 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Depending on your scenario, you can either use the native installers to install the CLI or use the installation shell script.</source>
          <target state="translated">시나리오에 따라 기본 설치 관리자를 사용하여 CLI를 설치하거나 설치 셸 스크립트를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The native installers are primarily meant for developer's machines.</source>
          <target state="translated">기본 설치 관리자는 주로 개발자의 컴퓨터를 위한 것입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The CLI is distributed using each supported platform's native install mechanism, for instance DEB packages on Ubuntu or MSI bundles on Windows.</source>
          <target state="translated">Ubuntu의 DEB 패키지 또는 Windows의 MSI 번들처럼 CLI는 지원되는 각 플랫폼의 기본 설치 메커니즘을 사용하여 배포됩니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>These installers will install and set up the environment as needed for the user to use the CLI immediately after the install.</source>
          <target state="translated">이러한 설치 관리자는 설치 후 CLI를 즉시 사용하려는 사용자에게 필요한 환경을 설치 및 설정합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>However, they also require administrative privileges on the machine.</source>
          <target state="translated">그러나 이러한 사용자는 컴퓨터에 대한 관리자 권한이 필요합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can view the installation instructions on the <bpt id="p1">[</bpt>.NET Core getting started page<ept id="p1">](https://aka.ms/dotnetcoregs)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>.NET Core 시작 페이지<ept id="p1">](https://aka.ms/dotnetcoregs)</ept>에서 설치 지침을 볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Install scripts, on the other hand, do not require administrative privileges.</source>
          <target state="translated">반면 설치 스크립트를 사용할 경우에는 관리 권한이 필요하지 않습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>However, they will also not install any prerequisites on the machine; you need to install all of the prerequisites manually.</source>
          <target state="translated">그러나 컴퓨터에 필수 구성 요소도 설치되지 않습니다. 모든 필수 구성 요소를 수동으로 설치해야 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The scripts are meant mostly for setting up build servers or when you wish to install the tools without administrative privileges (do note the prerequisites caveat above).</source>
          <target state="translated">스크립트는 대개 빌드 서버를 설정하거나 관리자 권한 없이 도구를 설치할 경우 사용됩니다(위의 필수 조건 주의 사항 참조).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can find more information on the <bpt id="p1">[</bpt>install script reference topic<ept id="p1">](dotnet-install-script.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>스크립트 참조 설치 항목<ept id="p1">](dotnet-install-script.md)</ept>에서 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If you are interested in how to set up CLI on your continuous integration (CI) build server you can take a look at the <bpt id="p1">[</bpt>CLI with CI servers<ept id="p1">](using-ci-with-cli.md)</ept> topic.</source>
          <target state="translated">CI(연속 통합) 빌드 서버에 CLI를 설치하는 방법에 관심이 있는 경우 <bpt id="p1">[</bpt>CI 서버와 CLI<ept id="p1">](using-ci-with-cli.md)</ept> 항목을 살펴볼 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>By default, the CLI will install in a side-by-side (SxS) manner.</source>
          <target state="translated">기본적으로 CLI는 "SxS”(병렬) 방식으로 설치됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>This means that multiple versions of the CLI tools can coexist at any given time on a single machine.</source>
          <target state="translated">즉, 특정 시간에 CLI 도구의 여러 버전이 단일 컴퓨터에 공존할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>How the correct version gets used is explained in more detail in the <bpt id="p1">[</bpt>driver<ept id="p1">](#driver)</ept> section.</source>
          <target state="translated">그러나 사용되는 올바른 버전에 대해서는 <bpt id="p1">[</bpt>드라이버 섹션<ept id="p1">](#driver)</ept>에 자세히 설명되어 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>What commands come in the box?</source>
          <target state="translated">기본적으로 제공되는 명령</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following commands are installed by default:</source>
          <target state="translated">다음은 기본적으로 설치되는 명령입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>new<ept id="p1">](dotnet-new.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>new<ept id="p1">](dotnet-new.md)</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>restore<ept id="p1">](dotnet-restore.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>restore<ept id="p1">](dotnet-restore.md)</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>run<ept id="p1">](dotnet-run.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>run<ept id="p1">](dotnet-run.md)</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>build<ept id="p1">](dotnet-build.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>build<ept id="p1">](dotnet-build.md)</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>test<ept id="p1">](dotnet-test.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>test<ept id="p1">](dotnet-test.md)</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>publish<ept id="p1">](dotnet-publish.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>publish<ept id="p1">](dotnet-publish.md)</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>pack<ept id="p1">](dotnet-pack.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>pack<ept id="p1">](dotnet-pack.md)</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>There is also a way to import more commands on a per-project basis as well as to add your own commands.</source>
          <target state="translated">프로젝트 단위로 더 많은 명령을 가져올 뿐만 아니라 고유한 명령을 추가할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This is explained in greater detail in the <bpt id="p1">[</bpt>extensibility section<ept id="p1">](#extensibility)</ept>.</source>
          <target state="translated">이 과정은 <bpt id="p1">[</bpt>확장성 섹션<ept id="p1">](#extensibility)</ept>에서 더 자세히 설명합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Working with the CLI</source>
          <target state="translated">CLI 작업</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Before we go into any more details, let's see how working with the CLI looks like from a 10,000-foot view.</source>
          <target state="translated">자세한 정보를 검토하기 전에 CLI를 사용한 작업이 10,000피트 보기에서 어떻게 표시되는지 살펴보겠습니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following example utilizes several commands from the CLI standard install to initialize a new simple console application, restore the dependencies, build the application and then run it.</source>
          <target state="translated">다음 예제에서는 CLI 표준 설치에서 여러 가지 명령을 활용하여 간단한 새 콘솔 응용 프로그램을 초기화하고 종속성을 복원한 다음 응용 프로그램을 빌드하여 실행합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>As you can see in the previous example, there is a pattern in the way you use the CLI tools.</source>
          <target state="translated">이전 예제와 같이 CLI 도구를 사용하는 방식에는 패턴이 있습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Within that pattern, we can identify three main pieces of each command:</source>
          <target state="translated">해당 패턴 내에서 각 명령의 세 가지 주요 조각을 식별할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>The driver ("dotnet")<ept id="p1">](#driver)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>드라이버("dotnet")<ept id="p1">](#driver)</ept></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>The command, or "verb"<ept id="p1">](#the-verb)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>명령 또는 "동사"<ept id="p1">](#the-verb)</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Command arguments<ept id="p1">](#the-arguments)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>명령 인수<ept id="p1">](#the-arguments)</ept></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Driver</source>
          <target state="translated">드라이버</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The driver is named <bpt id="p1">[</bpt>dotnet<ept id="p1">](dotnet.md)</ept>.</source>
          <target state="translated">드라이버 이름은 <bpt id="p1">[</bpt>dotnet<ept id="p1">](dotnet.md)</ept>이며,</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>It is the first part of what you invoke.</source>
          <target state="translated">처음으로 호출되는 부분입니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The driver has two responsibilities:</source>
          <target state="translated">드라이버에는 두 가지 책임이 있습니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Running portable apps</source>
          <target state="translated">이식 가능한 앱 실행</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Executing the verb</source>
          <target state="translated">동사 실행</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>What it does depends on what is specified on the command line.</source>
          <target state="translated">수행하는 작업은 명령줄에 지정된 항목에 따라 달라집니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In the first case, you would specify a portable app DLL that <ph id="ph1">`dotnet`</ph> would run similar to this: <ph id="ph2">`dotnet /path/to/your.dll`</ph>.</source>
          <target state="translated">첫 번째 경우에는 <ph id="ph1">`dotnet`</ph>이 <ph id="ph2">`dotnet /path/to/your.dll`</ph>과 같이 실행되는 이식 가능한 앱 DLL을 지정합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the second case, the driver attempts to invoke the specified command.</source>
          <target state="translated">두 번째 경우에는 드라이버가 지정된 명령을 호출하려고 시도합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This starts the CLI command execution process.</source>
          <target state="translated">그러면 CLI 명령 실행 프로세스가 시작됩니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>First, the driver determines the version of the tooling that you want.</source>
          <target state="translated">먼저 드라이버에서 원하는 도구의 버전을 확인합니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You can specify the version in the <bpt id="p1">[</bpt>global.json<ept id="p1">](global-json.md)</ept> file using the <ph id="ph1">`version`</ph> property.</source>
          <target state="translated"><bpt id="p1">[</bpt>global.json<ept id="p1">](global-json.md)</ept> 파일에서 <ph id="ph1">`version`</ph> 속성을 사용하여 버전을 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If that is not available, the driver finds the latest version of the tools that is installed on disk and uses that version.</source>
          <target state="translated">사용할 수 없는 경우 드라이버는 디스크에 설치된 최신 버전의 도구를 찾아 해당 버전을 사용합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Once the version is determined, it executes the command.</source>
          <target state="translated">버전이 확인되면 명령을 실행합니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The "verb"</source>
          <target state="translated">"동사"</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The verb is simply a command that performs an action.</source>
          <target state="translated">동사는 작업을 수행하는 명령일 뿐입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet build`</ph> builds your code.</source>
          <target state="translated"><ph id="ph1">`dotnet build`</ph>는 코드를 빌드합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet publish`</ph> publishes your code.</source>
          <target state="translated"><ph id="ph1">`dotnet publish`</ph>는 코드를 게시합니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The verb is implemented as a console application that is named per convention: <ph id="ph1">`dotnet-{verb}`</ph>.</source>
          <target state="translated">동사는 <ph id="ph1">`dotnet-{verb}`</ph>와 같이 규칙에 따라 명명된 콘솔 응용 프로그램으로 구현됩니다.합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>All of the logic is implemented in the console application that represents the verb.</source>
          <target state="translated">모든 논리는 동사를 나타내는 콘솔 응용 프로그램에서 구현됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The arguments</source>
          <target state="translated">인수</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The arguments that you pass on the command-line are the arguments to the actual verb/command being invoked.</source>
          <target state="translated">명령줄에서 전달하는 인수는 호출하려는 실제 동사/명령에 대한 인수입니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>For example, when you type <ph id="ph1">`dotnet publish --output publishedapp`</ph>, the <ph id="ph2">`--output`</ph> argument is passed to the <ph id="ph3">`publish`</ph> command.</source>
          <target state="translated">예를 들어 <ph id="ph1">`dotnet publish --output publishedapp`</ph>를 입력하면 <ph id="ph2">`--output`</ph> 인수가 <ph id="ph3">`publish`</ph> 명령에 전달됩니다.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Types of application portability</source>
          <target state="translated">응용 프로그램 이식성 유형</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>CLI enables applications to be portable in two main ways:</source>
          <target state="translated">CLI에서는 다음과 같은 두 가지 주요 방법으로 응용 프로그램을 이식할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Completely portable applications that can run anywhere .NET Core is installed</source>
          <target state="translated">.NET Core가 설치되어 있는 모든 위치에서 실행할 수 있는 완전히 이식 가능한 응용 프로그램</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Self-contained deployments</source>
          <target state="translated">자체 포함 배포</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You can learn more about both of these in the <bpt id="p1">[</bpt>.NET Core application deployment<ept id="p1">](../deploying/index.md)</ept> topic.</source>
          <target state="translated">이 두 가지 방법에 대한 자세한 내용은 <bpt id="p1">[</bpt>.NET Core 응용 프로그램 배포<ept id="p1">](../deploying/index.md)</ept> 항목을 참조하세요.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Migration from DNX</source>
          <target state="translated">DNX에서 마이그레이션</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If you used DNX in .NET Core 1.0 RC1, you may be wondering what happened to it and how do these new tools relate to the DNX tools.</source>
          <target state="translated">.NET Core 1.0 RC1에서 DNX를 사용하는 경우 이러한 도구에 발생되는 내용 및 이러한 새 도구가 DNX 도구에 연결되는 방법이 궁금할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>In short, the DNX tools have been replaced with the .NET Core CLI tools.</source>
          <target state="translated">즉, DNX 도구가 .NET Core CLI 도구로 대체되었습니다.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If you have existing projects or are just wondering how the commands map, you can use the <bpt id="p1">[</bpt>DNX to CLI migration<ept id="p1">](../migrating-from-dnx.md)</ept> topic to get all the details.</source>
          <target state="translated">기존 프로젝트가 있거나 명령이 매핑되는 방법이 궁금한 경우 <bpt id="p1">[</bpt>DNX에서 CLI로 마이그레이션<ept id="p1">](../migrating-from-dnx.md)</ept> 항목을 사용하여 자세한 정보를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Extensibility</source>
          <target state="translated">확장성</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Of course, not every tool that you could use in your workflow will be part of the core CLI tools.</source>
          <target state="translated">워크플로에서 사용할 수 있는 일부 도구는 핵심 CLI 도구의 일부가 아닐 수 있습니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>However, .NET Core CLI has an extensibility model that allows you to specify additional tools for your projects.</source>
          <target state="translated">그러나 .NET Core CLI에는 프로젝트에 맞게 추가 도구를 지정할 수 있는 확장성 모델이 있습니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>You can find out more in the <bpt id="p1">[</bpt>.NET Core CLI extensibility model<ept id="p1">](extensibility.md)</ept> topic.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>.NET Core CLI 확장성 모델<ept id="p1">](extensibility.md)</ept> 항목에서 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">요약</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>This was a short overview of the most important features of the CLI.</source>
          <target state="translated">CLI의 가장 중요한 기능에 대한 간략한 개요입니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>You can find out more by using the reference and conceptual topics on this site.</source>
          <target state="translated">자세한 내용은 이 사이트의 참조 및 개념 항목을 사용하여 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>There are also other resources you can use:</source>
          <target state="translated">다음과 같은 기타 리소스도 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>dotnet/CLI<ept id="p1">](https://github.com/dotnet/cli/)</ept> GitHub repo</source>
          <target state="translated"><bpt id="p1">[</bpt>dotnet/CLI<ept id="p1">](https://github.com/dotnet/cli/)</ept> GitHub 리포지토리</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Getting started instructions<ept id="p1">](https://aka.ms/dotnetcoregs/)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>시작 지침<ept id="p1">](https://aka.ms/dotnetcoregs/)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>