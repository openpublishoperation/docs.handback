<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">72e0c9401406dcac4eb693b056b88a531f2a0748</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\extract-protocol.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b37400f5a04b6d8a1eaa9324616d6030b29d8c13</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09437a7d6f73f1d19895e459bc79fa1d4679092e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: extract a protocol and port number from a URL</source>
          <target state="translated">방법: URL에서 프로토콜 및 포트 번호 추출</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to extract a protocol and port number from a URL</source>
          <target state="translated">URL에서 프로토콜 및 포트 번호를 추출하는 방법</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>How to: extract a protocol and port number from a URL</source>
          <target state="translated">방법: URL에서 프로토콜 및 포트 번호 추출</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following example extracts a protocol and port number from a URL.</source>
          <target state="translated">다음 예제에서는 URL에서 프로토콜 및 포트 번호를 추출합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The example uses the <bpt id="p1">[</bpt>Match.Result<ept id="p1">](xref:System.Text.RegularExpressions.Match.Result(System.String))</ept> method to return the protocol followed by a colon followed by the port number.</source>
          <target state="translated">이 예제에서는 <bpt id="p1">[</bpt>Match.Result<ept id="p1">](xref:System.Text.RegularExpressions.Match.Result(System.String))</ept> 메서드를 사용하여 프로토콜, 콜론, 포트 번호로 구성된 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The regular expression pattern <ph id="ph1">`^(?&lt;proto&gt;\w+)://[^/]+?(?&lt;port&gt;:\d+)?/`</ph> can be interpreted as shown in the following table.</source>
          <target state="translated">정규식 패턴 <ph id="ph1">`^(?&lt;proto&gt;\w+)://[^/]+?(?&lt;port&gt;:\d+)?/`</ph>는 다음 표와 같이 해석할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">패턴</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Begin the match at the start of the string.</source>
          <target state="translated">문자열의 시작 부분에서 일치 항목 찾기를 시작합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Match one or more word characters.</source>
          <target state="translated">하나 이상의 단어 문자를 찾습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Name this group proto.</source>
          <target state="translated">이 그룹의 이름을 proto로 지정합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Match a colon followed by two slash marks.</source>
          <target state="translated">콜론과 두 개의 슬래시 기호를 찾습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Match one or more occurrences (but as few as possible) of any character other than a slash mark.</source>
          <target state="translated">슬래시 기호 이외의 문자를 한 번 이상(가능한 적게) 찾습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Match zero or one occurrence of a colon followed by one or more digit characters.</source>
          <target state="translated">하나 이상의 숫자 문자 앞에 나오는 콜론을 0번 또는 한 번 찾습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Name this group port.</source>
          <target state="translated">이 그룹의 이름을 port로 지정합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Match a slash mark.</source>
          <target state="translated">슬래시 기호를 찾습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Match.Result<ept id="p1">](xref:System.Text.RegularExpressions.Match.Result(System.String))</ept> method expands the <ph id="ph1">`${proto}${port}`</ph> replacement sequence, which concatenates the value of the two named groups captured in the regular expression pattern.</source>
          <target state="translated"><bpt id="p1">[</bpt>Match.Result<ept id="p1">](xref:System.Text.RegularExpressions.Match.Result(System.String))</ept> 메서드는 정규식 패턴에 캡처된 두 개의 명명된 그룹 값을 연결하는 <ph id="ph1">`${proto}${port}`</ph> 대체 시퀀스를 확장합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It is a convenient alternative to explicitly concatenating the strings retrieved from the collection object returned by the <bpt id="p1">[</bpt>Match.Groups<ept id="p1">](xref:System.Text.RegularExpressions.Match.Groups)</ept> property.</source>
          <target state="translated">이 메서드는 <bpt id="p1">[</bpt>Match.Groups<ept id="p1">](xref:System.Text.RegularExpressions.Match.Groups)</ept> 속성에 반환된 컬렉션 개체에서 검색된 문자열을 명시적으로 연결하는 편리한 대체 방법입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The example uses the <bpt id="p1">[</bpt>Match.Result<ept id="p1">](xref:System.Text.RegularExpressions.Match.Result(System.String))</ept> method with two substitutions, <ph id="ph1">`${proto}`</ph> and <ph id="ph2">`${port}`</ph>, to include the captured groups in the output string.</source>
          <target state="translated">이 예제에서는 <bpt id="p1">[</bpt>Match.Result<ept id="p1">](xref:System.Text.RegularExpressions.Match.Result(System.String))</ept> 메서드를 <ph id="ph1">`${proto}`</ph> 및 <ph id="ph2">`${port}`</ph>라는 두 개의 대체와 함께 사용하여 캡처된 그룹을 출력 문자열에 포함합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can retrieve the captured groups from the match's <bpt id="p1">[</bpt>GroupCollection<ept id="p1">](xref:System.Text.RegularExpressions.GroupCollection)</ept> object instead, as the following code shows.</source>
          <target state="translated">대신, 다음 코드와 같이 일치 항목의 <bpt id="p1">[</bpt>GroupCollection<ept id="p1">](xref:System.Text.RegularExpressions.GroupCollection)</ept> 개체에서 캡처된 그룹을 검색할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET regular expressions<ept id="p1">](regular-expressions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>.NET 정규식<ept id="p1">](regular-expressions.md)</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Regular expression examples<ept id="p1">](regex-examples.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>정규식 예제<ept id="p1">](regex-examples.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>