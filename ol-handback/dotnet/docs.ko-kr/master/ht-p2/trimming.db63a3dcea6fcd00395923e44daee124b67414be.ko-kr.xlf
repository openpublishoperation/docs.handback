<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6105861882c3bfd525a2d902fd2600f5da10417d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\trimming.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">00f7c14283268c5ab33e41340faf3b2cb3bdb8fc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae2d2c1c2018a1a681f7cee43a8a815dc6035368</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Trimming and removing characters from strings</source>
          <target state="translated">문자열에서 문자 트리밍 및 제거</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Trimming and removing characters from strings</source>
          <target state="translated">문자열에서 문자 트리밍 및 제거</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Trimming and removing characters from strings</source>
          <target state="translated">문자열에서 문자 트리밍 및 제거</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If you are parsing a sentence into individual words, you might end up with words that have blank spaces (also called white spaces) on either end of the word.</source>
          <target state="translated">문장을 개별 단어로 구문 분석할 경우 단어의 끝에 빈 공간(공백이라고도 함)이 있는 단어가 생길 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In this situation, you can use one of the trim methods in the <bpt id="p1">[</bpt>System.String<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String)</ept> class to remove any number of spaces or other characters from a specified position in the string.</source>
          <target state="translated">이 경우에 <bpt id="p1">[</bpt>System.String<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String)</ept> 클래스에서 trim 메서드 중 하나를 사용하여 문자열에 지정된 위치에서 공백의 수나 다른 문자를 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following table describes the available trim methods.</source>
          <target state="translated">다음 테이블에서는 사용할 수 있는 trim 메서드에 대해 설명합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Method name</source>
          <target state="translated">메서드 이름</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">기능</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Trim<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.Trim)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Trim<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.Trim)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Removes white spaces or characters specified in an array of characters from the beginning and end of a string.</source>
          <target state="translated">문자열의 시작과 끝에서 문자 배열에 지정된 문자 또는 공백을 제거합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.TrimEnd<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.TrimEnd(System.Char[]))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.TrimEnd<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.TrimEnd(System.Char[]))</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Removes characters specified in an array of characters from the end of a string.</source>
          <target state="translated">문자열의 끝에서 문자 배열에 지정된 문자를 제거합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.TrimStart<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.TrimStart(System.Char[]))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.TrimStart<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.TrimStart(System.Char[]))</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Removes characters specified in an array of characters from the beginning of a string.</source>
          <target state="translated">문자열의 시작에서 문자 배열에 지정된 문자를 제거합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Remove<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.Remove(System.Int32))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Remove<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.Remove(System.Int32))</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Removes a specified number of characters from a specified index position in a string.</source>
          <target state="translated">문자열의 지정한 인덱스 위치에서 지정한 개수의 문자를 제거합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Trim</source>
          <target state="translated">Trim</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can easily remove white spaces from both ends of a string by using the <bpt id="p1">[</bpt>String.Trim<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.Trim)</ept> method, as shown in the following example.</source>
          <target state="translated">다음 예제와 같이 <bpt id="p1">[</bpt>String.Trim<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.Trim)</ept> 메서드를 사용하여 문자열의 양쪽 끝에서 공백의 쉽게 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can also remove characters that you specify in a character array from the beginning and end of a string.</source>
          <target state="translated">문자열의 시작과 끝의 문자 배열에서 지정하는 문자를 제거할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following example removes white-space characters, periods, and asterisks.</source>
          <target state="translated">다음 예제에서는 공백 문자, 마침표 또는 별표를 제거합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>TrimEnd</source>
          <target state="translated">TrimEnd</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.TrimEnd<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.TrimEnd(System.Char[]))</ept> method removes characters from the end of a string, creating a new string object.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.TrimEnd<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.TrimEnd(System.Char[]))</ept> 메서드는 새 문자열 개체를 생성하여 문자열의 끝에서 문자를 제거합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An array of characters is passed to this method to specify the characters to be removed.</source>
          <target state="translated">문자 배열을 이 메서드에 전달하여 제거할 문자를 지정합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The order of the elements in the character array does not affect the trim operation.</source>
          <target state="translated">문자 배열에서 요소의 순서는 trim 작업에 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The trim stops when a character not specified in the array is found.</source>
          <target state="translated">배열에 지정되지 않은 문자가 발견되면 trim이 중지됩니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following example removes the last letters of a string using the TrimEnd method.</source>
          <target state="translated">다음 예제에서는 TrimEnd 메서드를 사용하여 문자열의 마지막 문자를 제거합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In this example, the position of the <ph id="ph1">`'r'`</ph> character and the <ph id="ph2">`'W'`</ph> character are reversed to illustrate that the order of characters in the array does not matter.</source>
          <target state="translated">이 예제에서 배열에 있는 문자의 순서를 설명하기 위해 바뀐 <ph id="ph1">`'r'`</ph> 문자 및 <ph id="ph2">`'W'`</ph> 문자의 위치는 중요하지 않습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Notice that this code removes the last word of <ph id="ph1">`MyString`</ph> plus part of the first.</source>
          <target state="translated">이 코드는 <ph id="ph1">`MyString`</ph>의 마지막 단어 및 첫 번째 단어의 일부를 제거합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This code displays <ph id="ph1">`He`</ph> to the console.</source>
          <target state="translated">이 코드는 콘솔에 <ph id="ph1">`He`</ph>를 표시합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following example removes the last word of a string using the <bpt id="p1">[</bpt>TrimEnd<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.TrimEnd(System.Char[]))</ept> method.</source>
          <target state="translated">다음 예제에서는 <bpt id="p1">[</bpt>TrimEnd<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.TrimEnd(System.Char[]))</ept> 메서드를 사용하여 문자열의 마지막 단어를 제거합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In this code, a comma follows the word <ph id="ph1">`Hello`</ph> and, because the comma is not specified in the array of characters to trim, the trim ends at the comma.</source>
          <target state="translated">이 코드에서 쉼표는 <ph id="ph1">`Hello`</ph> 단어 뒤에 오면 쉼표가 trim에 대한 문자의 배열에 지정되지 않기 때문에 해당 trim은 쉼표에서 끝나게 됩니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This code displays <ph id="ph1">`Hello,`</ph> to the console.</source>
          <target state="translated">이 코드는 콘솔에 <ph id="ph1">`Hello,`</ph>를 표시합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>TrimStart</source>
          <target state="translated">TrimStart</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.TrimStart<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.TrimStart(System.Char[]))</ept> method is similar to the <bpt id="p2">[</bpt>String.TrimEnd<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.String.TrimEnd(System.Char[]))</ept> method except that it creates a new string by removing characters from the beginning of an existing string object.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.TrimStart<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.TrimStart(System.Char[]))</ept> 메서드는 기존 문자열 개체의 시작 부분에서 문자를 제거하여 새 문자열을 만든다는 점을 제외하고 <bpt id="p2">[</bpt>String.TrimEnd<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.String.TrimEnd(System.Char[]))</ept> 메서드와 유사합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An array of characters is passed to the <bpt id="p1">[</bpt>TrimStart<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.TrimStart(System.Char[]))</ept> method to specify the characters to be removed.</source>
          <target state="translated">문자 배열을 <bpt id="p1">[</bpt>TrimStart<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.TrimStart(System.Char[]))</ept> 메서드에 전달하여 제거할 문자를 지정합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>As with the <bpt id="p1">[</bpt>TrimEnd<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.TrimEnd(System.Char[]))</ept> method, the order of the elements in the character array does not affect the trim operation.</source>
          <target state="translated"><bpt id="p1">[</bpt>TrimEnd<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.TrimEnd(System.Char[]))</ept> 메서드와 마찬가지로 문자 배열에서 요소의 순서는 트리밍 작업에 영향을 주지 않습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The trim stops when a character not specified in the array is found.</source>
          <target state="translated">배열에 지정되지 않은 문자가 발견되면 trim이 중지됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following example removes the first word of a string.</source>
          <target state="translated">다음 예제에서는 문자열의 첫 번째 단어를 제거합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In this example, the position of the <ph id="ph1">`'l'`</ph> character and the <ph id="ph2">`'H'`</ph> character are reversed to illustrate that the order of characters in the array does not matter.</source>
          <target state="translated">이 예제에서 배열에 있는 문자의 순서를 설명하기 위해 바뀐 <ph id="ph1">`'l'`</ph> 문자 및 <ph id="ph2">`'H'`</ph> 문자의 위치는 중요하지 않습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This code displays <ph id="ph1">`World!`</ph> to the console.</source>
          <target state="translated">이 코드는 콘솔에 <ph id="ph1">`World!`</ph>를 표시합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Remove</source>
          <target state="translated">제거</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.Remove<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.Remove(System.Int32))</ept> method removes a specified number of characters that begin at a specified position in an existing string.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.Remove<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.Remove(System.Int32))</ept> 메서드는 기존 문자열의 지정된 위치에서 시작하는 지정된 수의 문자를 제거합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This method assumes a zero-based index.</source>
          <target state="translated">이 메서드에서는 0 기반 인덱스를 가정합니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following example removes ten characters from a string beginning at position five of a zero-based index of the string.</source>
          <target state="translated">다음 예제에서는 문자열의 0 기반 인덱스 중 5번째 위치에서 시작하는 문자열에서 10개의 문자를 제거합니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can also remove a specified character or substring from a string by calling the <bpt id="p1">[</bpt>String.Replace(String, String)<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.Replace(System.String,System.String))</ept> method and specifying an empty string (<bpt id="p2">[</bpt>String.Empty<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.String.Empty)</ept>) as the replacement.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.Replace(String, String)<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.String.Replace(System.String,System.String))</ept> 메서드를 호출하고 빈 문자열인 <bpt id="p2">[</bpt>String.Empty<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.String.Empty)</ept>를 대체로 지정하여 문자열에서 지정된 문자나 부분 문자열을 제거할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The following example removes all commas from a string.</source>
          <target state="translated">다음 예제에서는 문자열에서 모든 쉼표를 제거합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic string operations<ept id="p1">](basic-string-operations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>기본적인 문자열 작업<ept id="p1">](basic-string-operations.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>