<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">25f434a5b5f8caf013ad5f778897e4e98e3d825d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\xml-axis\extension-indexer-property.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f887279c187009d84d2e87a3fe341d81bfd32d5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac745d106adac0c942ace594565b0039d5f666f7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Extension Indexer Property (Visual Basic) | Microsoft Docs</source>
          <target state="translated">확장 인덱서 속성 (Visual Basic) | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Extension Indexer Property (Visual Basic)</source>
          <target state="translated">확장명 인덱서 속성(Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides access to individual elements in a collection.</source>
          <target state="translated">컬렉션의 개별 요소에 액세스할 수 있도록 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="translated">용어</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">정의</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 요소.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A queryable collection.</source>
          <target state="translated">쿼리 가능 컬렉션입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>That is, a collection that implements &lt;xref:System.Collections.Generic.IEnumerable%601&gt; or &lt;xref:System.Linq.IQueryable%601&gt;.</source>
          <target state="translated">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;또는 &lt;xref:System.Linq.IQueryable%601&gt;.&lt;/xref:System.Linq.IQueryable%601&gt; &lt;/xref:System.Collections.Generic.IEnumerable%601&gt; 를 구현 하는 컬렉션, 즉</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="translated">(</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 요소.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Denotes the start of the indexer property.</source>
          <target state="translated">인덱서 속성의 시작을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 요소.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An integer expression that specifies the zero-based position of an element of the collection.</source>
          <target state="translated">컬렉션에 있는 요소의&amp;0;부터 시작 위치를 지정 하는 정수 식입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 요소.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Denotes the end of the indexer property.</source>
          <target state="translated">인덱서 속성의 끝을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Return Value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The object from the specified location in the collection, or <ph id="ph1">`Nothing`</ph> if the index is out of range.</source>
          <target state="translated">컬렉션에서 지정된 된 위치에서 개체 또는 <ph id="ph1">`Nothing`</ph> 경우 인덱스가 범위를 벗어났습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">주의</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You can use the extension indexer property to access individual elements in a collection.</source>
          <target state="translated">컬렉션의 개별 요소에 액세스 하는 확장 인덱서 속성을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This indexer property is typically used on the output of XML axis properties.</source>
          <target state="translated">이 인덱서 속성은 일반적으로 XML 축 속성의 출력에 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The XML child and XML descendent axis properties return collections of &lt;xref:System.Xml.Linq.XElement&gt; objects or an attribute value.</source>
          <target state="translated">XML 자식 및 XML 하위 축 속성의 컬렉션을 반환 합니다. &lt;xref:System.Xml.Linq.XElement&gt;개체 또는 특성 값입니다.&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> compiler converts extension indexer properties to calls to the<ph id="ph2">`ElementAtOrDefault`</ph> method.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> 컴파일러에 대 한 호출을 확장 인덱서 속성을 변환의<ph id="ph2">`ElementAtOrDefault`</ph> 메서드.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Unlike an array indexer, the<ph id="ph1">`ElementAtOrDefault`</ph> method returns <ph id="ph2">`Nothing`</ph> if the index is out of range.</source>
          <target state="translated">배열 인덱서 달리는<ph id="ph1">`ElementAtOrDefault`</ph> 메서드가 반환 <ph id="ph2">`Nothing`</ph> 경우 인덱스가 범위를 벗어났습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This behavior is useful when you cannot easily determine the number of elements in a collection.</source>
          <target state="translated">이 동작은 컬렉션의 요소 수를 쉽게 확인할 수 없는 경우에 유용 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This indexer property is like an extension property for collections that implement &lt;xref:System.Collections.Generic.IEnumerable%601&gt; or &lt;xref:System.Linq.IQueryable%601&gt;: it is used only if the collection does not have an indexer or a default property.</source>
          <target state="translated">이 인덱서 속성을 구현 하는 컬렉션에 대 한 확장 속성 처럼 &lt;xref:System.Collections.Generic.IEnumerable%601&gt;또는 &lt;xref:System.Linq.IQueryable%601&gt;: 인덱서 또는 기본 속성 컬렉션에 없는 경우에 사용 됩니다.&lt;/xref:System.Linq.IQueryable%601&gt; &lt;/xref:System.Collections.Generic.IEnumerable%601&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To access the value of the first element in a collection of &lt;xref:System.Xml.Linq.XElement&gt; or &lt;xref:System.Xml.Linq.XAttribute&gt; objects, you can use the XML <ph id="ph1">`Value`</ph> property.</source>
          <target state="translated">컬렉션의 첫 번째 요소 값에 액세스 하려면 &lt;xref:System.Xml.Linq.XElement&gt;또는 &lt;xref:System.Xml.Linq.XAttribute&gt;개체, XML을 사용할 수 있습니다 <ph id="ph1">`Value`</ph> 속성.&lt;/xref:System.Xml.Linq.XAttribute&gt; &lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>XML Value Property<ept id="p1">](../../../visual-basic/language-reference/xml-axis/xml-value-property.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>XML 값 속성<ept id="p1">](../../../visual-basic/language-reference/xml-axis/xml-value-property.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the extension indexer to access the second child node in a collection of &lt;xref:System.Xml.Linq.XElement&gt; objects.</source>
          <target state="translated">다음 예제에서는 컬렉션의 두 번째 자식 노드에 액세스 하는 확장 인덱서를 사용 하 여 &lt;xref:System.Xml.Linq.XElement&gt;개체.&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The collection is accessed by using the child axis property, which gets all child elements named <ph id="ph1">`phone`</ph> in the <ph id="ph2">`contact`</ph> object.</source>
          <target state="translated">이라는 모든 자식 요소를 가져오는 자식 축 속성을 사용 하 여 액세스 됩니다 <ph id="ph1">`phone`</ph> 에 <ph id="ph2">`contact`</ph> 개체입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXMLSamples#24<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/extension-indexer-property_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXMLSamples #&amp;24;<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/extension-indexer-property_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This code displays the following text:</source>
          <target state="translated">이 코드의 텍스트는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Linq.XElement&gt;</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XML Axis Properties<ept id="p1">](../../../visual-basic/language-reference/xml-axis/xml-axis-properties.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>XML 축 속성<ept id="p1">](../../../visual-basic/language-reference/xml-axis/xml-axis-properties.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XML Literals<ept id="p1">](../../../visual-basic/language-reference/xml-literals/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>XML 리터럴<ept id="p1">](../../../visual-basic/language-reference/xml-literals/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Creating XML in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Visual Basic에서 XML 만들기<ept id="p1">](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XML Value Property<ept id="p1">](../../../visual-basic/language-reference/xml-axis/xml-value-property.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>XML 값 속성<ept id="p1">](../../../visual-basic/language-reference/xml-axis/xml-value-property.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>