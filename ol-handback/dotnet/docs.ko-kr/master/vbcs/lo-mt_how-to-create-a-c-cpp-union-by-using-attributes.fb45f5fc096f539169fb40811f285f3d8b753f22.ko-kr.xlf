<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3ff1686328630b233b25839c79d0009d48aab5ab</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\attributes\how-to-create-a-c-cpp-union-by-using-attributes.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19df8064ffd238bf1ba9961c5de165e281fbe299</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">518c61e9b7d5ac1e3436165d3fc1991f948cf7be</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Create a C-C++ Union by Using Attributes (Visual Basic) | Microsoft Docs</source>
          <target state="translated">방법: 특성 (Visual Basic)를 사용 하 여 C + + 공용 구조체 만들기 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create a C/C++ Union by Using Attributes (Visual Basic)</source>
          <target state="translated">방법: 특성 (Visual Basic)를 사용 하 여 C/c + + 공용 구조체 만들기</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>By using attributes you can customize how structs are laid out in memory.</source>
          <target state="translated">특성을 사용 하 여 구조체 레이아웃 하는 방법 메모리에 사용자 지정할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, you can create what is known as a union in C/C++ by using the <ph id="ph1">`StructLayout(LayoutKind.Explicit)`</ph> and <ph id="ph2">`FieldOffset`</ph> attributes.</source>
          <target state="translated">이것이 C/c + +에서 공용 구조체를 사용 하 여 만들 수는 예를 들어는 <ph id="ph1">`StructLayout(LayoutKind.Explicit)`</ph> 및 <ph id="ph2">`FieldOffset`</ph> 특성입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In this code segment, all of the fields of <ph id="ph1">`TestUnion`</ph> start at the same location in memory.</source>
          <target state="translated">이 코드 세그먼트의 필드를 모두에서 <ph id="ph1">`TestUnion`</ph> 메모리의 같은 위치에서 시작 합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following is another example where fields start at different explicitly set locations.</source>
          <target state="translated">다음은 또 다른 예 각 다른 필드의 시작 위치를 명시적으로 설정 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The two integer fields, <ph id="ph1">`i1`</ph> and <ph id="ph2">`i2`</ph>, share the same memory locations as <ph id="ph3">`lg`</ph>.</source>
          <target state="translated">두 개의 정수 필드 <ph id="ph1">`i1`</ph> 및 <ph id="ph2">`i2`</ph>와 동일한 메모리 위치를 공유 <ph id="ph3">`lg`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This sort of control over struct layout is useful when using platform invocation.</source>
          <target state="translated">이러한 종류의 구조체 레이아웃에 대 한 제어는 플랫폼 호출을 사용 하는 경우 유용 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Reflection&gt;</source>
          <target state="translated">&lt;xref:System.Reflection&gt;&lt;/xref:System.Reflection&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Attribute&gt;</source>
          <target state="translated">&lt;xref:System.Attribute&gt;&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Visual Basic Programming Guide<ept id="p1">](../../../../visual-basic/programming-guide/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Visual Basic 프로그래밍 가이드<ept id="p1">](../../../../visual-basic/programming-guide/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Attributes<ept id="p1">](https://msdn.microsoft.com/library/5x6cd29c)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>특성<ept id="p1">](https://msdn.microsoft.com/library/5x6cd29c)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Reflection (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/reflection.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>리플렉션 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/reflection.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Attributes (Visual Basic)<ept id="p1">](../../../../visual-basic/language-reference/attributes.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>특성 (Visual Basic)<ept id="p1">](../../../../visual-basic/language-reference/attributes.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Creating Custom Attributes (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/attributes/creating-custom-attributes.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>사용자 지정 특성 (Visual Basic) 만들기<ept id="p1">](../../../../visual-basic/programming-guide/concepts/attributes/creating-custom-attributes.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Accessing Attributes by Using Reflection (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/attributes/accessing-attributes-by-using-reflection.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>(Visual Basic) 리플렉션을 사용 하 여 특성 액세스<ept id="p1">](../../../../visual-basic/programming-guide/concepts/attributes/accessing-attributes-by-using-reflection.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>