<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1a69f7e833800ec7417bc35fad763f1001b3e7f9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\assemblies-gac\how-to-create-signed-friend-assemblies.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a4ef8d1968b37116eb270db54a5155048ea3eddc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e486aa6ac92452fa1f5b6bcbd6107b37da1550c7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Create Signed Friend Assemblies (Visual Basic) | Microsoft Docs</source>
          <target state="translated">방법: 서명 된 Friend 어셈블리 (Visual Basic) 만들기 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create Signed Friend Assemblies (Visual Basic)</source>
          <target state="translated">방법: 서명 된 Friend 어셈블리 (Visual Basic) 만들기</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This example shows how to use friend assemblies with assemblies that have strong names.</source>
          <target state="translated">이 예제에는 어셈블리에 강력한 이름을 갖고 friend 어셈블리를 사용 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Both assemblies must be strong named.</source>
          <target state="translated">두 어셈블리는 강력한 이름을 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Although both assemblies in this example use the same keys, you could use different keys for two assemblies.</source>
          <target state="translated">이 예에서 두 어셈블리가 모두 동일한 키를 사용 하지만 두 어셈블리에 대 한 서로 다른 키를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To create a signed assembly and a friend assembly</source>
          <target state="translated">서명된 된 어셈블리 및 friend 어셈블리를 만들려면</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Open a command prompt.</source>
          <target state="translated">명령 프롬프트를 엽니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use the following sequence of commands with the Strong Name tool to generate a keyfile and to display its public key.</source>
          <target state="translated">키 파일을 생성 하 고 해당 공개 키를 표시 하려면 다음 명령 시퀀스를 사용 하 여 강력한 이름 도구.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Sn.exe (Strong Name Tool)<ept id="p1">](https://msdn.microsoft.com/library/k5b5tt23)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>Sn.exe(강력한 이름 도구)<ept id="p1">](https://msdn.microsoft.com/library/k5b5tt23)</ept>를 참조하세요.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Generate a strong-name key for this example and store it in the file FriendAssemblies.snk:</source>
          <target state="translated">이 예제에 대 한 강력한 이름 키를 생성 하 고 FriendAssemblies.snk 파일에 저장 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Extract the public key from FriendAssemblies.snk and put it into FriendAssemblies.publickey:</source>
          <target state="translated">FriendAssemblies.snk에서 공개 키를 추출 하 고 FriendAssemblies.publickey에 넣습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Display the public key stored in the file FriendAssemblies.publickey:</source>
          <target state="translated">FriendAssemblies.publickey 파일에 저장 된 공개 키를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Create a Visual Basic file named <ph id="ph1">`friend_signed_A`</ph> that contains the following code.</source>
          <target state="translated">라는 Visual Basic 파일을 만듭니다 <ph id="ph1">`friend_signed_A`</ph> 하는 다음 코드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The code uses the &lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt; attribute to declare friend_signed_B as a friend assembly.</source>
          <target state="translated">코드를 사용 하는 &lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;friend_signed_B friend 어셈블리 선언 하는 특성입니다.&lt;/xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The Strong Name tool generates a new public key every time it runs.</source>
          <target state="translated">강력한 이름 도구를 실행할 때마다 새 공개 키를 생성 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Therefore, you must replace the public key in the following code with the public key you just generated, as shown in the following example.</source>
          <target state="translated">따라서 다음 예제와 같이 방금 생성 한 공개 키도 다음 코드에 공개 키를 대체 해야 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Compile and sign friend_signed_A by using the following command.</source>
          <target state="translated">컴파일 및 friend_signed_A 다음 명령을 사용 하 여 로그인 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Create a Visual Basic file that is named <ph id="ph1">`friend_signed_B`</ph> and contains the following code.</source>
          <target state="translated">라는 Visual Basic 파일 만들기 <ph id="ph1">`friend_signed_B`</ph> 다음 코드를 포함 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Because friend_signed_A specifies friend_signed_B as a friend assembly, the code in friend_signed_B can access <ph id="ph1">`Friend`</ph> types and members from friend_signed_A.</source>
          <target state="translated">Friend_signed_B의 코드에 액세스할 수 friend_signed_A friend_signed_B friend 어셈블리를 지정 하므로 <ph id="ph1">`Friend`</ph> 형식과 friend_signed_A에서 멤버입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The file contains the following code.</source>
          <target state="translated">다음 코드를 포함 하는 파일.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Compile and sign friend_signed_B by using the following command.</source>
          <target state="translated">컴파일 및 friend_signed_B 다음 명령을 사용 하 여 로그인 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The name of the assembly generated by the compiler must match the friend assembly name passed to the &lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt; attribute.</source>
          <target state="translated">컴파일러에서 생성 된 어셈블리의 이름에 전달 된 friend 어셈블리 이름과 같아야 합니다.는 &lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;특성.&lt;/xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can explicitly set the assembly by using the <ph id="ph1">`/out`</ph> compiler option.</source>
          <target state="translated">사용 하 여 어셈블리를 명시적으로 설정할 수는 <ph id="ph1">`/out`</ph> 컴파일러 옵션입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>/out (Visual Basic)<ept id="p1">](../../../../visual-basic/reference/command-line-compiler/out.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>/out (Visual Basic)<ept id="p1">](../../../../visual-basic/reference/command-line-compiler/out.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Run the friend_signed_B.exe file.</source>
          <target state="translated">Friend_signed_B.exe 파일을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The program prints the string "Class1.Test".</source>
          <target state="translated">프로그램은 문자열 "Class1.Test"를 인쇄합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>.NET Framework Security</source>
          <target state="translated">.NET Framework 보안</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>There are similarities between the &lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt; attribute and the &lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt; class.</source>
          <target state="translated">가 유사성 사이는 &lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;특성 및 &lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt;클래스가 있습니다.&lt;/xref:System.Security.Permissions.StrongNameIdentityPermission&gt; &lt;/xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The main difference is that &lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt; can demand security permissions to run a particular section of code, whereas the &lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt; attribute controls the visibility of <ph id="ph1">`Friend`</ph> types and members.</source>
          <target state="translated">주요 차이점은 &lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt;반면 코드의 특정 섹션을 실행 하는 보안 권한을 요구할 수 있습니다는 &lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;특성의 표시 유형을 제어 <ph id="ph1">`Friend`</ph> 형식 및 멤버.&lt;/xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt; &lt;/xref:System.Security.Permissions.StrongNameIdentityPermission&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</source>
          <target state="translated">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;&lt;/xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Assemblies and the Global Assembly Cache (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>어셈블리 및 전역 어셈블리 캐시 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Friend Assemblies (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/friend-assemblies.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Friend 어셈블리 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/friend-assemblies.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create Unsigned Friend Assemblies (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/how-to-create-unsigned-friend-assemblies.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>방법: 서명 되지 않은 Friend 어셈블리 (Visual Basic) 만들기<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/how-to-create-unsigned-friend-assemblies.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>/keyfile<ept id="p1">](../../../../visual-basic/reference/command-line-compiler/keyfile.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>/keyfile<ept id="p1">](../../../../visual-basic/reference/command-line-compiler/keyfile.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Sn.exe (Strong Name Tool)<ept id="p1">](https://msdn.microsoft.com/library/k5b5tt23)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Sn.exe (강력한 이름 도구)<ept id="p1">](https://msdn.microsoft.com/library/k5b5tt23)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Creating and Using Strong-Named Assemblies<ept id="p1">](https://msdn.microsoft.com/library/xwb8f617)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>강력한 이름의 어셈블리 만들기 및 사용<ept id="p1">](https://msdn.microsoft.com/library/xwb8f617)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Programming Concepts<ept id="p1">](../../../../visual-basic/programming-guide/concepts/index.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>프로그래밍 개념<ept id="p1">](../../../../visual-basic/programming-guide/concepts/index.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>