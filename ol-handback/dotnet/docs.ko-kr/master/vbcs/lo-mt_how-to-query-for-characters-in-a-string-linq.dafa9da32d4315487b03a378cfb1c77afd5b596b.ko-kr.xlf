<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dabd63e52707f3078c6cdc41db8c4f0e7dfbf70e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\how-to-query-for-characters-in-a-string-linq.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8b6190b364b96cd2900f03d9a69c787cfe655b6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b2373bcad605a5efb8d10e520837f7dd0b3dae1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Query for Characters in a String (LINQ) (Visual Basic) | Microsoft Docs</source>
          <target state="translated">방법: 쿼리 (LINQ) (Visual Basic)는 문자열의 문자에 대 한 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Query for Characters in a String (LINQ) (Visual Basic)</source>
          <target state="translated">방법: 문자열 (Visual Basic) (LINQ)의 문자에 대 한 쿼리</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Because the &lt;xref:System.String&gt; class implements the generic &lt;xref:System.Collections.Generic.IEnumerable%601&gt; interface, any string can be queried as a sequence of characters.</source>
          <target state="translated">때문에 &lt;xref:System.String&gt;클래스는 제네릭 구현 &lt;xref:System.Collections.Generic.IEnumerable%601&gt;인터페이스를 문자 시퀀스로 모든 문자열을 쿼리할 수 있습니다.&lt;/xref:System.Collections.Generic.IEnumerable%601&gt; &lt;/xref:System.String&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>However, this is not a common use of LINQ.</source>
          <target state="translated">그러나 LINQ의 일반적인 용도 아닙니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For complex pattern matching operations, use the &lt;xref:System.Text.RegularExpressions.Regex&gt; class.</source>
          <target state="translated">복잡 한 패턴 일치 작업에 대 한 &lt;xref:System.Text.RegularExpressions.Regex&gt;클래스&lt;/xref:System.Text.RegularExpressions.Regex&gt; 를 사용 하 여</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following example queries a string to determine the number of numeric digits it contains.</source>
          <target state="translated">다음 예제에서는 포함 된 숫자의 수를 결정 하는 문자열을 쿼리 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Note that the query is "reused" after it is executed the first time.</source>
          <target state="translated">Note는 쿼리는 "" 다음 다시 처음으로 실행 됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This is possible because the query itself does not store any actual results.</source>
          <target state="translated">쿼리 자체 실제 결과 저장 하지 않기 때문에 이것이 가능 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;CodeContentPlaceHolder&gt;</bpt>0<ept id="p1">&lt;/CodeContentPlaceHolder&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;CodeContentPlaceHolder&gt;</bpt>0<ept id="p1">&lt;/CodeContentPlaceHolder&gt;</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
          <target state="translated">코드 컴파일</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Create a project that targets the .NET Framework version 3.5 or higher with a reference to System.Core.dll and a <ph id="ph1">`Imports`</ph> statement for the System.Linq namespace.</source>
          <target state="translated">.NET Framework 버전 3.5 이상 System.Core.dll에 대 한 참조를 대상으로 하는 프로젝트 만들기 및 <ph id="ph1">`Imports`</ph> System.Linq 네임 스페이스에 대 한 정보입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ and Strings (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-and-strings.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>LINQ 및 문자열 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-and-strings.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Combine LINQ Queries with Regular Expressions (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-combine-linq-queries-with-regular-expressions.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>방법: LINQ 쿼리와 정규식 (Visual Basic)를 결합 합니다.<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-combine-linq-queries-with-regular-expressions.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>