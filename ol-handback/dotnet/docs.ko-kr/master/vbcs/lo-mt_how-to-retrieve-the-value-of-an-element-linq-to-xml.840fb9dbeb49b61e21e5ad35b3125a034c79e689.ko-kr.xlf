<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d38928df51006a8db9417d34ccbe6cd03091db66</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\how-to-retrieve-the-value-of-an-element-linq-to-xml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9cc9d546856ce7a6a7734a984ee7b8c33330672f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a7403f48c91557abea4d1e6d7173ce4c42ef410f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Retrieve the Value of an Element (LINQ to XML) (Visual Basic) | Microsoft Docs</source>
          <target state="translated">방법: 요소 (LINQ to XML)의 값을 검색 (Visual Basic) | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Retrieve the Value of an Element (LINQ to XML) (Visual Basic)</source>
          <target state="translated">방법: 요소 (LINQ to XML)의 값을 검색 (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic shows how to get the value of elements.</source>
          <target state="translated">이 항목에서는 요소의 값을 가져오는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>There are two main ways to do this.</source>
          <target state="translated">두 가지 주요 방법으로 요소의 값을 가져올 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>One way is to cast an &lt;xref:System.Xml.Linq.XElement&gt; or an &lt;xref:System.Xml.Linq.XAttribute&gt; to the desired type.</source>
          <target state="translated">캐스팅 하는 한 가지 방법은 &lt;xref:System.Xml.Linq.XElement&gt;또는 &lt;xref:System.Xml.Linq.XAttribute&gt;를 원하는 형식.&lt;/xref:System.Xml.Linq.XAttribute&gt; &lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The explicit conversion operator then converts the contents of the element or attribute to the specified type and assigns it to your variable.</source>
          <target state="translated">명시적 변환 연산자는 요소나 특성의 내용을 지정된 형식으로 변환하고 변수에 할당합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use the &lt;xref:System.Xml.Linq.XElement.Value%2A?displayProperty=fullName&gt; property or the &lt;xref:System.Xml.Linq.XAttribute.Value%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">또는 사용할 수는 &lt;xref:System.Xml.Linq.XElement.Value%2A?displayProperty=fullName&gt;속성 또는 &lt;xref:System.Xml.Linq.XAttribute.Value%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Xml.Linq.XAttribute.Value%2A?displayProperty=fullName&gt; &lt;/xref:System.Xml.Linq.XElement.Value%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>With Visual Basic, the best approach is to use the &lt;xref:System.Xml.Linq.XElement.Value%2A?displayProperty=fullName&gt; property.</source>
          <target state="translated">Visual basic에서 가장 좋은 방법은 사용 하 여 &lt;xref:System.Xml.Linq.XElement.Value%2A?displayProperty=fullName&gt;속성.&lt;/xref:System.Xml.Linq.XElement.Value%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To retrieve the value of an element, you just cast the &lt;xref:System.Xml.Linq.XElement&gt; object to your desired type.</source>
          <target state="translated">요소의 값을 검색 하려면 캐스팅 하기만 하면는 &lt;xref:System.Xml.Linq.XElement&gt;개체를 원하는 형식.&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can always cast an element to a string, as follows:</source>
          <target state="translated">다음과 같이 요소를 문자열로 항상 캐스팅할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">이 예제는 다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also cast elements to types other than string.</source>
          <target state="translated">또한 요소를 문자열 이외의 형식으로 캐스팅할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, if you have an element that contains an integer, you can cast it to <ph id="ph1">`int`</ph>, as shown in the following code:</source>
          <target state="translated">예를 들어, 정수가 포함된 요소가 있는 경우 다음 코드에서와 같이 요소를 <ph id="ph1">`int`</ph>로 캐스팅할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">이 예제는 다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> provides explicit cast operators for the following data types: <ph id="ph2">`string`</ph>, <ph id="ph3">`bool`</ph>, <ph id="ph4">`bool?`</ph>, <ph id="ph5">`int`</ph>, <ph id="ph6">`int?`</ph>, <ph id="ph7">`uint`</ph>, <ph id="ph8">`uint?`</ph>, <ph id="ph9">`long`</ph>, <ph id="ph10">`long?`</ph>, <ph id="ph11">`ulong`</ph>, <ph id="ph12">`ulong?`</ph>, <ph id="ph13">`float`</ph>, <ph id="ph14">`float?`</ph>, <ph id="ph15">`double`</ph>, <ph id="ph16">`double?`</ph>, <ph id="ph17">`decimal`</ph>, <ph id="ph18">`decimal?`</ph>, <ph id="ph19">`DateTime`</ph>, <ph id="ph20">`DateTime?`</ph>, <ph id="ph21">`TimeSpan`</ph>, <ph id="ph22">`TimeSpan?`</ph>, <ph id="ph23">`GUID`</ph>, and <ph id="ph24">`GUID?`</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>provides explicit cast operators for the following data types: <ph id="ph2">`string`</ph>, <ph id="ph3">`bool`</ph>, <ph id="ph4">`bool?`</ph>, <ph id="ph5">`int`</ph>, <ph id="ph6">`int?`</ph>, <ph id="ph7">`uint`</ph>, <ph id="ph8">`uint?`</ph>, <ph id="ph9">`long`</ph>, <ph id="ph10">`long?`</ph>, <ph id="ph11">`ulong`</ph>, <ph id="ph12">`ulong?`</ph>, <ph id="ph13">`float`</ph>, <ph id="ph14">`float?`</ph>, <ph id="ph15">`double`</ph>, <ph id="ph16">`double?`</ph>, <ph id="ph17">`decimal`</ph>, <ph id="ph18">`decimal?`</ph>, <ph id="ph19">`DateTime`</ph>, <ph id="ph20">`DateTime?`</ph>, <ph id="ph21">`TimeSpan`</ph>, <ph id="ph22">`TimeSpan?`</ph>, <ph id="ph23">`GUID`</ph>, and <ph id="ph24">`GUID?`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> provides the same cast operators for &lt;xref:System.Xml.Linq.XAttribute&gt; objects.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>에 대 한 동일한 캐스트 연산자를 제공 &lt;xref:System.Xml.Linq.XAttribute&gt;개체.&lt;/xref:System.Xml.Linq.XAttribute&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can use the &lt;xref:System.Xml.Linq.XElement.Value%2A&gt; property to retrieve the contents of an element:</source>
          <target state="translated">사용할 수는 &lt;xref:System.Xml.Linq.XElement.Value%2A&gt;요소의 콘텐츠를 검색 하는 속성:&lt;/xref:System.Xml.Linq.XElement.Value%2A&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">이 예제는 다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Sometimes you try to retrieve the value of an element even though you are not sure it exists.</source>
          <target state="translated">요소가 있는지 확실하지 않은 경우에도 요소의 값을 검색하려는 경우가 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In this case, when you assign the casted element to a nullable type (either <ph id="ph1">`string`</ph> or one of the nullable types in the <ph id="ph2">[!INCLUDE[dnprdnshort](../../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph>), if the element does not exist the assigned variable is just set to <ph id="ph3">`Nothing`</ph>.</source>
          <target state="translated">이 경우에 할당 하면 캐스팅 된 요소를 nullable 형식 (중 <ph id="ph1">`string`</ph> 또는 nullable 형식 중 하나는 <ph id="ph2">[!INCLUDE[dnprdnshort](../../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph>) 요소는 할당 된 존재 하지 않는 경우, 변수로 설정 됩니다 <ph id="ph3">`Nothing`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following code shows that when the element might or might not exist, it is easier to use casting than to use the &lt;xref:System.Xml.Linq.XElement.Value%2A&gt; property.</source>
          <target state="translated">다음 코드에서는 요소 수 또는 존재 하지 않을 때 쉽습니다 사용 하는 것 보다 캐스팅을 사용 하 여 &lt;xref:System.Xml.Linq.XElement.Value%2A&gt;속성.&lt;/xref:System.Xml.Linq.XElement.Value%2A&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This code produces the following output:</source>
          <target state="translated">이 코드의 결과는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In general, you can write simpler code when using casting to retrieve the contents of elements and attributes.</source>
          <target state="translated">일반적으로 요소 및 특성 내용을 검색하는 데 캐스팅을 사용하면 보다 간단한 코드를 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ to XML Axes (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-axes.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>LINQ to XML 축 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-axes.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>