<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ab2041826f74fdc5aceab7b1ceb26563d9b3f0a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\error-messages\interfacename-membername-is-already-implemented-by-the-base-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c881f00bdd8f0b5a1b3745d9168b1882654510a1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e95d470d40564722b529f3d9ecf170702e0a16c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>&amp;#39;<ph id="ph1">&amp;lt;</ph>interfacename<ph id="ph2">&amp;gt;</ph>.<ph id="ph3">&amp;lt;</ph>membername<ph id="ph4">&amp;gt;</ph>&amp;#39; is already implemented by the base class &amp;#39;<ph id="ph5">&amp;lt;</ph>baseclassname<ph id="ph6">&amp;gt;</ph>&amp;#39;.</source>
          <target state="translated">'<ph id="ph1">&amp;lt;</ph>interfacename<ph id="ph2">&amp;gt;</ph>.<ph id="ph3">&amp;lt;</ph> membername<ph id="ph4">&amp;gt;</ph>'가 이미 구현 된 기본 클래스에서 '<ph id="ph5">&amp;lt;</ph>baseclassname<ph id="ph6">&amp;gt;</ph>'.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Re-implementation of <ph id="ph1">&amp;lt;</ph>type<ph id="ph2">&amp;gt;</ph> assumed | Microsoft Docs</source>
          <target state="translated">재구현 <ph id="ph1">&amp;lt;</ph>형식<ph id="ph2">&amp;gt;</ph> 가정 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>&amp;#39;<ph id="ph1">&amp;lt;</ph>interfacename<ph id="ph2">&amp;gt;</ph>.<ph id="ph3">&amp;lt;</ph>membername<ph id="ph4">&amp;gt;</ph>&amp;#39; is already implemented by the base class &amp;#39;<ph id="ph5">&amp;lt;</ph>baseclassname<ph id="ph6">&amp;gt;</ph>&amp;#39;.</source>
          <target state="translated">'<ph id="ph1">&amp;lt;</ph>interfacename<ph id="ph2">&amp;gt;</ph>.<ph id="ph3">&amp;lt;</ph> membername<ph id="ph4">&amp;gt;</ph>'가 이미 구현 된 기본 클래스에서 '<ph id="ph5">&amp;lt;</ph>baseclassname<ph id="ph6">&amp;gt;</ph>'.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Re-implementation of <ph id="ph1">&amp;lt;</ph>type<ph id="ph2">&amp;gt;</ph> assumed</source>
          <target state="translated">재구현 <ph id="ph1">&amp;lt;</ph>형식<ph id="ph2">&amp;gt;</ph> 가정</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A property, procedure, or event in a derived class uses an <ph id="ph1">`Implements`</ph> clause specifying an interface member that is already implemented in the base class.</source>
          <target state="translated">속성, 프로시저 또는 파생된 클래스에서 이벤트를 사용 하는 <ph id="ph1">`Implements`</ph> 절을 기본 클래스에서 이미 구현 된 인터페이스 멤버를 지정 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A derived class can reimplement an interface member that is implemented by its base class.</source>
          <target state="translated">파생 클래스는 기본 클래스에 의해 구현된 인터페이스 멤버를 다시 구현할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This is not the same as overriding the base class implementation.</source>
          <target state="translated">이는 기본 클래스 구현 재정의와 다릅니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Implements<ept id="p1">](../../../visual-basic/language-reference/statements/implements-clause.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>구현<ept id="p1">](../../../visual-basic/language-reference/statements/implements-clause.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>By default, this message is a warning.</source>
          <target state="translated">이 메시지는 기본적으로 경고입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For information on hiding warnings or treating warnings as errors, see <bpt id="p1">[</bpt>Configuring Warnings in Visual Basic<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/configuring-warnings-in-visual-basic)</ept>.</source>
          <target state="translated">경고를 숨기거나 오류로 처리하는 방법에 대한 자세한 내용은 <bpt id="p1">[</bpt>Configuring Warnings in Visual Basic<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/configuring-warnings-in-visual-basic)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Error ID:<ept id="p1">**</ept> BC42015</source>
          <target state="translated"><bpt id="p1">**</bpt>오류 ID:<ept id="p1">**</ept> BC42015</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To correct this error</source>
          <target state="translated">이 오류를 해결하려면</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you intend to reimplement the interface member, you do not need to take any action.</source>
          <target state="translated">인터페이스 멤버를 다시 구현하려는 경우 어떤 조치도 취할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Code in your derived class accesses the reimplemented member unless you use the <ph id="ph1">`MyBase`</ph> keyword to access the base class implementation.</source>
          <target state="translated">파생된 클래스에서 코드를 사용 하지 않으면 재구현된 멤버에 액세스는 <ph id="ph1">`MyBase`</ph> 키워드를 기본 클래스 구현에 액세스 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you do not intend to reimplement the interface member, remove the <ph id="ph1">`Implements`</ph> clause from the property, procedure, or event declaration.</source>
          <target state="translated">인터페이스 멤버를 다시 구현하지 않으려는 경우 속성, 프로시저 또는 이벤트 선언에서 <ph id="ph1">`Implements`</ph> 절을 제거합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Interfaces<ept id="p1">](../../../visual-basic/programming-guide/language-features/interfaces/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>인터페이스<ept id="p1">](../../../visual-basic/programming-guide/language-features/interfaces/index.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>