<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a60f55513aa30e4f221c45f4be506d6f0507406</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\refactoring-using-a-pure-function.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">62f09bd7315433a666335a9fa919e736cdd0f369</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">538b20f28c936092f8c09c42defc3079d4265155</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Refactoring Using a Pure Function (Visual Basic) | Microsoft Docs</source>
          <target state="translated">순수 함수 (Visual Basic)를 사용 하 여 리팩터링 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Refactoring Using a Pure Function (Visual Basic)</source>
          <target state="translated">순수 함수 (Visual Basic)를 사용 하 여 리팩터링</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following example refactors the previous example, <bpt id="p1">[</bpt>Refactoring Using an Extension Method (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/refactoring-using-an-extension-method.md)</ept>, to use a pure function In this example, the code to find the text of a paragraph is moved to the pure static method <ph id="ph1">`ParagraphText`</ph>.</source>
          <target state="translated">다음 예제에서는 앞의 예제를 리팩터링하여 <bpt id="p1">[</bpt>확장 메서드 (Visual Basic)를 사용 하 여 리팩터링<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/refactoring-using-an-extension-method.md)</ept>,이 예제에서는 순수 정적 메서드를 이동 단락의 텍스트를 찾기 위해 코드를 순수 함수를 사용 하 여 <ph id="ph1">`ParagraphText`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This example processes a WordprocessingML document, retrieving the paragraph nodes from a WordprocessingML document.</source>
          <target state="translated">이 예제에서는 WordprocessingML 문서를 처리하여 WordprocessingML 문서에서 단락 노드를 검색합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It also identifies the style of each paragraph.</source>
          <target state="translated">또한 각 단락의 스타일도 식별합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This example builds on the previous examples in this tutorial.</source>
          <target state="translated">이 예제는 이 자습서의 이전 예제를 기반으로 합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The refactored code is called out in comments in the code below.</source>
          <target state="translated">리팩터링된 코드는 아래에 있는 코드의 주석에서 호출됩니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For instructions for creating the source document for this example, see <bpt id="p1">[</bpt>Creating the Source Office Open XML Document (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/creating-the-source-office-open-xml-document.md)</ept>.</source>
          <target state="translated">이 예제에 대 한 소스 문서를 만들기 위한 지침을 참조 하십시오. <bpt id="p1">[</bpt>원본 Office Open XML 문서 (Visual Basic)를 만드는<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/creating-the-source-office-open-xml-document.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This example uses classes from the WindowsBase assembly.</source>
          <target state="translated">이 예제에서는 WindowsBase 어셈블리의 클래스를 사용하고</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It uses types in the &lt;xref:System.IO.Packaging?displayProperty=fullName&gt; namespace.</source>
          <target state="translated">형식을 사용는 &lt;xref:System.IO.Packaging?displayProperty=fullName&gt;네임 스페이스.&lt;/xref:System.IO.Packaging?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This example produces the same output as before the refactoring:</source>
          <target state="translated">이 예제의 결과는 리팩터링하기 전의 결과와 동일합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="translated">다음 단계</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The next example shows how to project XML into a different shape:</source>
          <target state="translated">다음 예제에서는 XML을 다른 모양으로 프로젝션하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Projecting XML in a Different Shape (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/projecting-xml-in-a-different-shape.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>(Visual Basic)을 다른 모양으로 XML 프로젝션<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/projecting-xml-in-a-different-shape.md)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Tutorial: Manipulating Content in a WordprocessingML Document (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/tutorial-manipulating-content-in-a-wordprocessingml-document.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>자습서: WordprocessingML 문서 (Visual Basic)에서 내용 조작<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/tutorial-manipulating-content-in-a-wordprocessingml-document.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Refactoring Using an Extension Method (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/refactoring-using-an-extension-method.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>확장 메서드 (Visual Basic)를 사용 하 여 리팩터링<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/refactoring-using-an-extension-method.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Refactoring Into Pure Functions (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/refactoring-into-pure-functions.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>(Visual Basic) 순수 함수로 리팩터링<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/refactoring-into-pure-functions.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>