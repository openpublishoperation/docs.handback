<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31111b23adb019aad3ad55787c073dc02446291d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\xdocument-class-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d6f5b75b5c96f78d5c0aa2be3fe368385f26440f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e8b9370b09566fd5ab6ec9dd58271e0162efebe</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>XDocument Class Overview (Visual Basic) | Microsoft Docs</source>
          <target state="translated">XDocument 클래스 개요 (Visual Basic) | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>XDocument Class Overview (Visual Basic)</source>
          <target state="translated">XDocument 클래스 개요 (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic introduces the &lt;xref:System.Xml.Linq.XDocument&gt; class.</source>
          <target state="translated">이 항목에서는 &lt;xref:System.Xml.Linq.XDocument&gt;클래스&lt;/xref:System.Xml.Linq.XDocument&gt; 소개</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview of the XDocument class</source>
          <target state="translated">XDocument 클래스 개요</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Linq.XDocument&gt; class contains the information necessary for a valid XML document.</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XDocument&gt;클래스는 유효한 XML 문서에 필요한 정보를 포함 합니다.&lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This includes an XML declaration, processing instructions, and comments.</source>
          <target state="translated">여기에는 XML 선언, 처리 명령 및 주석이 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Note that you only have to create &lt;xref:System.Xml.Linq.XDocument&gt; objects if you require the specific functionality provided by the &lt;xref:System.Xml.Linq.XDocument&gt; class.</source>
          <target state="translated">Note 있다고 &lt;xref:System.Xml.Linq.XDocument&gt; &lt;xref:System.Xml.Linq.XDocument&gt;클래스&lt;/xref:System.Xml.Linq.XDocument&gt; 에서 제공 하는 특정 기능이 필요한 경우 개체를&lt;/xref:System.Xml.Linq.XDocument&gt; 만들려면</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In many circumstances, you can work directly with &lt;xref:System.Xml.Linq.XElement&gt;.</source>
          <target state="translated">대부분의 경우 &lt;xref:System.Xml.Linq.XElement&gt;.&lt;/xref:System.Xml.Linq.XElement&gt; 로 직접 작업할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Working directly with &lt;xref:System.Xml.Linq.XElement&gt; is a simpler programming model.</source>
          <target state="translated">직접 작업할 &lt;xref:System.Xml.Linq.XElement&gt;더 간단한 프로그래밍 모델.&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Linq.XDocument&gt; derives from &lt;xref:System.Xml.Linq.XContainer&gt;.</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XDocument&gt;&lt;xref:System.Xml.Linq.XContainer&gt;.&lt;/xref:System.Xml.Linq.XContainer&gt; 에서 파생&lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Therefore, it can contain child nodes.</source>
          <target state="translated">자식 노드를 포함할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, &lt;xref:System.Xml.Linq.XDocument&gt; objects can have only one child &lt;xref:System.Xml.Linq.XElement&gt; node.</source>
          <target state="translated">그러나 &lt;xref:System.Xml.Linq.XDocument&gt;개체에 자식 노드가 한 개만 가질 수 있습니다 &lt;xref:System.Xml.Linq.XElement&gt;노드.&lt;/xref:System.Xml.Linq.XElement&gt; &lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This reflects the XML standard that there can be only one root element in an XML document.</source>
          <target state="translated">이는 XML 문서에 루트 요소가 하나만 있어야 하는 XML 표준을 반영하는 것입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Components of XDocument</source>
          <target state="translated">XDocument의 구성 요소</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.Linq.XDocument&gt; can contain the following elements:</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XDocument&gt;는 다음과 같은 요소가 포함 될 수 있습니다:&lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>One &lt;xref:System.Xml.Linq.XDeclaration&gt; object.</source>
          <target state="translated">하나의 &lt;xref:System.Xml.Linq.XDeclaration&gt;개체.&lt;/xref:System.Xml.Linq.XDeclaration&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Linq.XDeclaration&gt; enables you to specify the pertinent parts of an XML declaration: the XML version, the encoding of the document, and whether the XML document is stand-alone.</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XDeclaration&gt;XML 선언의 관련 부분인 지정할 수 있습니다: XML 버전, 문서의 인코딩 및 XML 문서가 독립 실행형인지 여부.&lt;/xref:System.Xml.Linq.XDeclaration&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>One &lt;xref:System.Xml.Linq.XElement&gt; object.</source>
          <target state="translated">하나의 &lt;xref:System.Xml.Linq.XElement&gt;개체.&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This is the root node of the XML document.</source>
          <target state="translated">이 개체는 XML 문서의 루트 노드입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Any number of &lt;xref:System.Xml.Linq.XProcessingInstruction&gt; objects.</source>
          <target state="translated">개수에 관계 없이 &lt;xref:System.Xml.Linq.XProcessingInstruction&gt;개체.&lt;/xref:System.Xml.Linq.XProcessingInstruction&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A processing instruction communicates information to an application that processes the XML.</source>
          <target state="translated">처리 명령은 XML을 처리하는 정보를 응용 프로그램에 전달합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Any number of &lt;xref:System.Xml.Linq.XComment&gt; objects.</source>
          <target state="translated">개수에 관계 없이 &lt;xref:System.Xml.Linq.XComment&gt;개체.&lt;/xref:System.Xml.Linq.XComment&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The comments will be siblings to the root element.</source>
          <target state="translated">주석은 루트 요소의 형제입니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Linq.XComment&gt; object cannot be the first argument in the list, because it is not valid for an XML document to start with a comment.</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XComment&gt;유효 하지 않은 주석으로 시작 하는 XML 문서에 대 한 개체 목록에서 첫 번째 인수 일 수 없습니다.&lt;/xref:System.Xml.Linq.XComment&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>One &lt;xref:System.Xml.Linq.XDocumentType&gt; for the DTD.</source>
          <target state="translated">하나의 &lt;xref:System.Xml.Linq.XDocumentType&gt;DTD에 대 한.&lt;/xref:System.Xml.Linq.XDocumentType&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When you serialize an &lt;xref:System.Xml.Linq.XDocument&gt;, even if <ph id="ph1">`XDocument.Declaration`</ph> is <ph id="ph2">`null`</ph>, the output will have an XML declaration if the writer has <ph id="ph3">`Writer.Settings.OmitXmlDeclaration`</ph> set to <ph id="ph4">`false`</ph> (the default).</source>
          <target state="translated">Serialize 할 때는 &lt;xref:System.Xml.Linq.XDocument&gt;, 경우에 <ph id="ph1">`XDocument.Declaration`</ph> 는 <ph id="ph2">`null`</ph>, 작성기 있으면 출력에 XML 선언이 포함 됩니다 <ph id="ph3">`Writer.Settings.OmitXmlDeclaration`</ph> 로 설정 <ph id="ph4">`false`</ph> (기본값).&lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> sets the version to "1.0", and sets the encoding to "utf-8".</source>
          <target state="translated">기본적으로 <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>에서는 버전을 "1.0"으로 설정하고 인코딩을 "utf-8"로 설정합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Using XElement without XDocument</source>
          <target state="translated">XDocument 없이 XElement 사용</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>As previously mentioned, the &lt;xref:System.Xml.Linq.XElement&gt; class is the main class in the <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> programming interface.</source>
          <target state="translated">에서 설명한 대로 &lt;xref:System.Xml.Linq.XElement&gt;클래스의 기본 클래스는는 <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> 프로그래밍 인터페이스입니다.&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In many cases, your application will not require that you create a document.</source>
          <target state="translated">응용 프로그램에서는 대부분의 경우 문서를 만들도록 요구하지 않습니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>By using the &lt;xref:System.Xml.Linq.XElement&gt; class, you can create an XML tree, add other XML trees to it, modify the XML tree, and save it.</source>
          <target state="translated">사용 하 여는 &lt;xref:System.Xml.Linq.XElement&gt;클래스를 XML 트리를 만들고, 다른 XML 트리를 추가, XML 트리를 수정 및 저장 합니다. 수 있습니다&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Using XDocument</source>
          <target state="translated">XDocument 사용</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To construct an &lt;xref:System.Xml.Linq.XDocument&gt;, use functional construction, just like you do to construct &lt;xref:System.Xml.Linq.XElement&gt; objects.</source>
          <target state="translated">생성 하는 &lt;xref:System.Xml.Linq.XDocument&gt;를 생성 하려면와 마찬가지로 함수 생성을 사용 하 여 &lt;xref:System.Xml.Linq.XElement&gt;개체.&lt;/xref:System.Xml.Linq.XElement&gt; &lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following code creates an &lt;xref:System.Xml.Linq.XDocument&gt; object and its associated contained objects.</source>
          <target state="translated">다음 코드는 &lt;xref:System.Xml.Linq.XDocument&gt;개체와 연결 된 포함.&lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When you examine the file test.xml, you get the following output:</source>
          <target state="translated">test.xml 파일을 검사할 때 다음과 같은 출력이 표시됩니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ to XML Programming Overview (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-programming-overview.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>LINQ to XML 프로그래밍 개요 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-programming-overview.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>