<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94211f7c951976426ba17e73df214444a6c227b4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\xml-axis\xml-attribute-axis-property.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ef36245dbbd4e673a0236838fc48aeb2c5456f9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">346522d7cf2b4520e95e68cdb03b1e2cc5adde68</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>XML Attribute Axis Property (Visual Basic) | Microsoft Docs</source>
          <target state="translated">XML 특성 축 속성 (Visual Basic) | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>XML Attribute Axis Property (Visual Basic)</source>
          <target state="translated">XML 특성 축 속성(Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Provides access to the value of an attribute for an &lt;xref:System.Xml.Linq.XElement&gt; object or to the first element in a collection of &lt;xref:System.Xml.Linq.XElement&gt; objects.</source>
          <target state="translated">에 대 한 특성의 값에 액세스할 수는 &lt;xref:System.Xml.Linq.XElement&gt;개체 또는 컬렉션의 첫 번째 요소를 &lt;xref:System.Xml.Linq.XElement&gt;개체.&lt;/xref:System.Xml.Linq.XElement&gt; &lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 요소.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.Linq.XElement&gt; object or a collection of &lt;xref:System.Xml.Linq.XElement&gt; objects.</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XElement&gt;개체 또는 컬렉션을 &lt;xref:System.Xml.Linq.XElement&gt;개체.&lt;/xref:System.Xml.Linq.XElement&gt; &lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>.@</source>
          <target state="translated">.@</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 요소.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Denotes the start of an attribute axis property.</source>
          <target state="translated">특성 축 속성의 시작을 나타냅니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택적 요소.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Denotes the beginning of the name of the attribute when <ph id="ph1">`attribute`</ph> is not a valid identifier in <ph id="ph2">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</source>
          <target state="translated">시작 특성의 이름 부분을 나타냅니다 때 <ph id="ph1">`attribute`</ph> 에서 유효한 식별자가 아닌 <ph id="ph2">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 요소.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Name of the attribute to access, of the form [<ph id="ph1">`prefix`</ph>:]<ph id="ph2">`name`</ph>.</source>
          <target state="translated">폼의 액세스 하는 특성의 이름을 [<ph id="ph1">`prefix`</ph>:]<ph id="ph2">`name`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Part</source>
          <target state="translated">파트</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">설명</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택적 요소.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>XML namespace prefix for the attribute.</source>
          <target state="translated">특성에 대 한 XML 네임 스페이스 접두사입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Must be a global XML namespace defined with an <ph id="ph1">`Imports`</ph> statement.</source>
          <target state="translated"><ph id="ph1">`Imports`</ph> 문으로 정의되는 전역 XML 네임스페이스여야 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 요소.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Local attribute name.</source>
          <target state="translated">로컬 특성 이름입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Names of Declared XML Elements and Attributes<ept id="p1">](../../../visual-basic/programming-guide/language-features/xml/names-of-declared-xml-elements-and-attributes.md)</ept>.</source>
          <target state="translated">참조 <bpt id="p1">[</bpt>선언 된 XML 요소 및 특성의 이름을<ept id="p1">](../../../visual-basic/programming-guide/language-features/xml/names-of-declared-xml-elements-and-attributes.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택적 요소.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Denotes the end of the name of the attribute when <ph id="ph1">`attribute`</ph> is not a valid identifier in <ph id="ph2">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</source>
          <target state="translated">특성의 이름의 끝을 나타냅니다 때 <ph id="ph1">`attribute`</ph> 에서 유효한 식별자가 아닌 <ph id="ph2">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Return Value</source>
          <target state="translated">반환 값</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A string that contains the value of <ph id="ph1">`attribute`</ph>.</source>
          <target state="translated">값을 포함 하는 문자열 <ph id="ph1">`attribute`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If the attribute name does not exist, <ph id="ph1">`Nothing`</ph> is returned.</source>
          <target state="translated">특성 이름이 없으면 <ph id="ph1">`Nothing`</ph> 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">주의</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can use an XML attribute axis property to access the value of an attribute by name from an &lt;xref:System.Xml.Linq.XElement&gt; object or from the first element in a collection of &lt;xref:System.Xml.Linq.XElement&gt; objects.</source>
          <target state="translated">XML 특성 축 속성을 사용 하 여 이름을 사용 하 여 특성의 값에 액세스할 수는 &lt;xref:System.Xml.Linq.XElement&gt;개체 또는 컬렉션의 첫 번째 요소에서 &lt;xref:System.Xml.Linq.XElement&gt;개체.&lt;/xref:System.Xml.Linq.XElement&gt; &lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can retrieve an attribute value by name, or add a new attribute to an element by specifying a new name preceded by the @ identifier.</source>
          <target state="translated">이름으로 특성 값을 검색 하거나 앞에 새 이름을 지정 하 여 요소에 새 특성을 추가할 수는 @ 식별자입니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When you refer to an XML attribute using the @ identifier, the attribute value is returned as a string and you do not need to explicitly specify the &lt;xref:System.Xml.Linq.XAttribute.Value%2A&gt; property.</source>
          <target state="translated">사용 하 여 XML 특성을 참조 하는 경우는 @ 식별자, 특성 값을 문자열로 반환 되 고 명시적으로 지정할 필요가 없습니다는 &lt;xref:System.Xml.Linq.XAttribute.Value%2A&gt;속성.&lt;/xref:System.Xml.Linq.XAttribute.Value%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The naming rules for XML attributes differ from the naming rules for <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> identifiers.</source>
          <target state="translated">XML 특성에 대 한 명명 규칙에 대 한 명명 규칙에서 다른 <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> 식별자입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To access an XML attribute that has a name that is not a valid Visual Basic identifier, enclose the name in angle brackets (<ph id="ph1">\&lt;</ph> and &gt;).</source>
          <target state="translated">유효한 Visual Basic 식별자 되지 않는 이름을 가진 XML 특성에 액세스 하려면 이름을 꺾쇠 괄호로 묶습니다 (<ph id="ph1">\&lt;</ph> 및 &gt;).</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>XML Namespaces</source>
          <target state="translated">XML 네임스페이스</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The name in an attribute axis property can use only XML namespace prefixes declared globally by using the <ph id="ph1">`Imports`</ph> statement.</source>
          <target state="translated">특성 축 속성의 이름을 사용 하 여 전역적으로 선언 된 XML 네임 스페이스 접두사만 사용할 수는 <ph id="ph1">`Imports`</ph> 문입니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>It cannot use XML namespace prefixes declared locally within XML element literals.</source>
          <target state="translated">XML 요소 리터럴 내에서 로컬로 선언된 XML 네임스페이스 접두사를 사용할 수 없습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Imports Statement (XML Namespace)<ept id="p1">](../../../visual-basic/language-reference/statements/imports-statement-xml-namespace.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Imports 문 (XML Namespace)<ept id="p1">](../../../visual-basic/language-reference/statements/imports-statement-xml-namespace.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The following example shows how to get the values of the XML attributes named <ph id="ph1">`type`</ph> from a collection of XML elements that are named <ph id="ph2">`phone`</ph>.</source>
          <target state="translated">다음 예제에서는 라는 XML 특성의 값을 가져오는 <ph id="ph1">`type`</ph> 라고 하는 XML 요소의 컬렉션에서 <ph id="ph2">`phone`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXMLSamples#12<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/xml-attribute-axis-property_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXMLSamples #&amp;12;<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/xml-attribute-axis-property_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This code displays the following text:</source>
          <target state="translated">이 코드의 텍스트는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following example shows how to create attributes for an XML element both declaratively, as part of the XML, and dynamically by adding an attribute to an instance of an &lt;xref:System.Xml.Linq.XElement&gt; object.</source>
          <target state="translated">다음 예제에는 모두 XML 요소에 대 한 특성을 일부로 XML, 그리고 동적으로 특성의 인스턴스를 추가 하 여 선언적으로 만드는 방법을 보여 줍니다는 &lt;xref:System.Xml.Linq.XElement&gt;개체.&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`type`</ph> attribute is created declaratively and the <ph id="ph2">`owne`</ph>r attribute is created dynamically.</source>
          <target state="translated"><ph id="ph1">`type`</ph> 특성을 선언적으로 만든 및 <ph id="ph2">`owne`</ph>r 특성을 동적으로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXMLSamples#44<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/xml-attribute-axis-property_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXMLSamples #&amp;44;<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/xml-attribute-axis-property_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This code displays the following text:</source>
          <target state="translated">이 코드의 텍스트는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following example uses the angle bracket syntax to get the value of the XML attribute named <ph id="ph1">`number-type`</ph>, which is not a valid identifier in <ph id="ph2">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</source>
          <target state="translated">다음 예제는 꺾쇠 괄호를 찾아 구문을 사용 하 여 이라는 XML 특성의 값을 가져올 <ph id="ph1">`number-type`</ph>에 유효한 식별자가 없는 <ph id="ph2">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXMLSamples#13<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/xml-attribute-axis-property_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXMLSamples #&amp;13;<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/xml-attribute-axis-property_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This code displays the following text:</source>
          <target state="translated">이 코드의 텍스트는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The following example declares <ph id="ph1">`ns`</ph> as an XML namespace prefix.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`ns`</ph>를 XML 네임스페이스 접두사로 선언한 다음</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It then uses the prefix of the namespace to create an XML literal and access the first child node with the qualified name "<ph id="ph1">`ns:name`</ph>".</source>
          <target state="translated">다음 네임 스페이스의 접두사는 XML 리터럴을 만들고 노드의 정규화 된 이름 가진 첫 번째 자식 노드를 사용 하 여 "<ph id="ph1">`ns:name`</ph>"입니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXMLSamples#14<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/xml-attribute-axis-property_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXMLSamples #&amp;14;<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/xml-attribute-axis-property_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>This code displays the following text:</source>
          <target state="translated">이 코드의 텍스트는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Linq.XElement&gt;</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XML Axis Properties<ept id="p1">](../../../visual-basic/language-reference/xml-axis/xml-axis-properties.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>XML 축 속성<ept id="p1">](../../../visual-basic/language-reference/xml-axis/xml-axis-properties.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XML Literals<ept id="p1">](../../../visual-basic/language-reference/xml-literals/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>XML 리터럴<ept id="p1">](../../../visual-basic/language-reference/xml-literals/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Creating XML in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Visual Basic에서 XML 만들기<ept id="p1">](../../../visual-basic/programming-guide/language-features/xml/creating-xml.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Names of Declared XML Elements and Attributes<ept id="p1">](../../../visual-basic/programming-guide/language-features/xml/names-of-declared-xml-elements-and-attributes.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>선언된 XML 요소 및 특성의 이름<ept id="p1">](../../../visual-basic/programming-guide/language-features/xml/names-of-declared-xml-elements-and-attributes.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>