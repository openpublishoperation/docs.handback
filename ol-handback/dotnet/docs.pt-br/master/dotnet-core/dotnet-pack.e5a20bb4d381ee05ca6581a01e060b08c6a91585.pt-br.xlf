<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-b5c25fc" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88289a09a22bf20ec9089ec6a74269cd682a305b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\dotnet-pack.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cd2b40f2f747c9f637aa2e63d6d3d03d9ab9915d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a6d58fce7faed418529cbf1383ed9b2119936e0e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-pack command | Microsoft Docs</source>
          <target state="translated">Comando dotnet-pack | Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-pack command creates NuGet packages for your .NET Core project.</source>
          <target state="translated">O comando dotnet-pack cria pacotes NuGet para seu projeto .NET Core.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-pack, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-pack, CLI, comando da CLI, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-pack</source>
          <target state="translated">dotnet-pack</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Nome</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet-pack`</ph> - Packs the code into a NuGet package.</source>
          <target state="translated"><ph id="ph1">`dotnet-pack`</ph> – Empacota o código em um pacote NuGet.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Sinopse</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet pack`</ph> command builds the project and creates NuGet packages.</source>
          <target state="translated">O comando <ph id="ph1">`dotnet pack`</ph> compila o projeto e cria pacotes NuGet.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The result of this command is a NuGet package.</source>
          <target state="translated">O resultado desse comando é um pacote do NuGet.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`--include-symbols`</ph> option is present, another package containing the debug symbols will be created.</source>
          <target state="translated">Se a opção <ph id="ph1">`--include-symbols`</ph> estiver presente, outro pacote que contém os símbolos de depuração será criado.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>NuGet dependencies of the project being packed are added to the <ph id="ph1">`nuspec`</ph> file, so they are able to be resolved when the package is installed.</source>
          <target state="translated">As dependências do NuGet do projeto que está sendo empacotado são adicionadas ao arquivo <ph id="ph1">`nuspec`</ph> para que possam ser resolvidas quando o pacote for instalado.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Project-to-project references are not packaged inside the project.</source>
          <target state="translated">Referências de projeto a projeto não são empacotadas dentro do projeto.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Currently, you need to have a package per project if you have project-to-project dependencies.</source>
          <target state="translated">No momento, você precisa ter um pacote por projeto se tiver dependências de projeto a projeto.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet pack`</ph> by default first builds the project.</source>
          <target state="translated"><ph id="ph1">`dotnet pack`</ph> compila primeiro o projeto por padrão.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If you wish to avoid this, pass the <ph id="ph1">`--no-build`</ph> option.</source>
          <target state="translated">Se você quiser evitar isso, passe a opção <ph id="ph1">`--no-build`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This can be useful in Continuous Integration (CI) build scenarios in which you know the code was just previously built, for example.</source>
          <target state="translated">Isso pode ser útil em cenários de build de CI (Integração Contínua) em que você sabe que o código acabou de ser criado anteriormente, por exemplo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The project to pack.</source>
          <target state="translated">O projeto a ser empacotado.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It can be either a path to a <bpt id="p1">[</bpt>csproj file<ept id="p1">](csproj.md)</ept> or to a directory.</source>
          <target state="translated">Ele pode ser um caminho para um <bpt id="p1">[</bpt>arquivo csproj<ept id="p1">](csproj.md)</ept> ou para um diretório.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If omitted, it will default to the current directory.</source>
          <target state="translated">Se omitido, o padrão será o diretório atual.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Opções</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">Imprime uma ajuda breve para o comando.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Places the built packages in the directory specified.</source>
          <target state="translated">Coloca os pacotes compilados no diretório especificado.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Does not build the project before packing.</source>
          <target state="translated">Não compila o projeto antes do empacotamento.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Generates the symbols nupkg.</source>
          <target state="translated">Gera os símbolos nupkg.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Includes the source files in the NuGet package.</source>
          <target state="translated">Inclui os arquivos de origem no pacote do NuGet.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The sources files are included in the <ph id="ph1">`src`</ph> folder within the <ph id="ph2">`nupkg`</ph>.</source>
          <target state="translated">Os arquivos de origem são incluídos na pasta <ph id="ph1">`src`</ph> dentro de <ph id="ph2">`nupkg`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Configuration to use when building the project.</source>
          <target state="translated">Configuração a ser usada ao compilar o projeto.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If not specified, will default to <ph id="ph1">`Debug`</ph>.</source>
          <target state="translated">Se não for especificado, o padrão será <ph id="ph1">`Debug`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Defines the value for the $(VersionSuffix) MSBuild property in the project.</source>
          <target state="translated">Define o valor da propriedade $(VersionSuffix) do MSBuild no projeto.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Sets the serviceable flag in the package.</source>
          <target state="translated">Define o sinalizador operacional no pacote.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more information, see https://aka.ms/nupkgservicing.</source>
          <target state="translated">Para obter mais informações, consulte https://aka.ms/nupkgservicing.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Sets the verbosity level of the command.</source>
          <target state="translated">Define o nível de detalhes do comando.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Allowed values are <ph id="ph1">`q[uiet]`</ph>, <ph id="ph2">`m[inimal]`</ph>, <ph id="ph3">`n[ormal]`</ph>, <ph id="ph4">`d[etailed]`</ph>, and <ph id="ph5">`diag[nostic]`</ph>.</source>
          <target state="translated">Os valores permitidos são <ph id="ph1">`q[uiet]`</ph>, <ph id="ph2">`m[inimal]`</ph>, <ph id="ph3">`n[ormal]`</ph>, <ph id="ph4">`d[etailed]`</ph> e <ph id="ph5">`diag[nostic]`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Exemplos</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Pack the project in the current directory:</source>
          <target state="translated">Empacota o projeto no diretório atual:</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Pack the app1 project:</source>
          <target state="translated">Empacote o projeto app1:</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Pack the project in the current directory and place the resulting packages into the specified folder:</source>
          <target state="translated">Empacote o projeto no diretório atual e coloque os pacotes resultantes na pasta especificada:</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Pack the project in the current directory into the specified folder and skip the build step:</source>
          <target state="translated">Empacote o projeto no diretório atual para a pasta especificada e ignore a etapa de build:</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Pack the current project and updates the resulting package version with the given suffix.</source>
          <target state="translated">Empacote o projeto atual e atualize a versão do pacote resultante com o sufixo fornecido.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The project's version suffix is configured as <ph id="ph1">`&lt;VersionSuffix&gt;$(VersionSuffix)&lt;/VersionSuffix&gt;`</ph> in the <bpt id="p1">*</bpt>.csproj<ept id="p1">*</ept>  file.</source>
          <target state="translated">O sufixo de versão do projeto é configurado como <ph id="ph1">`&lt;VersionSuffix&gt;$(VersionSuffix)&lt;/VersionSuffix&gt;`</ph> no arquivo <bpt id="p1">*</bpt>.csproj<ept id="p1">*</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>