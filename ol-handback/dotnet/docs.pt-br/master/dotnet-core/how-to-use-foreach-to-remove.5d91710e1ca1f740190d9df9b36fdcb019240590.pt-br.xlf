<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ccee6060aa95b80f424a959e76ceabede473ed86</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\collections\threadsafe\how-to-use-foreach-to-remove.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82b5c87099b9996ac8559a70277c7f4e6b6966b6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b312cae5fc3ac876159eab30bf354ad3597d7b92</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Use ForEach to Remove Items in a BlockingCollection</source>
          <target state="translated">Como usar ForEach para remover itens de uma BlockingCollection</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Use ForEach to Remove Items in a BlockingCollection</source>
          <target state="translated">Como usar ForEach para remover itens de uma BlockingCollection</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>How to: Use ForEach to Remove Items in a BlockingCollection</source>
          <target state="translated">Como usar ForEach para remover itens de uma BlockingCollection</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In addition to taking items from a <bpt id="p1">[</bpt>BlockingCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.BlockingCollection-1)</ept> by using the <ph id="ph3">`Take`</ph> and <ph id="ph4">`TryTake`</ph> methods, you can also use a <ph id="ph5">`foreach`</ph> loop to remove items until adding is completed and the collection is empty.</source>
          <target state="translated">Além de remover itens de uma <bpt id="p1">[</bpt>BlockingCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.BlockingCollection-1)</ept> usando os métodos <ph id="ph3">`Take`</ph> e <ph id="ph4">`TryTake`</ph>, você também pode usar um loop <ph id="ph5">`foreach`</ph> para remover itens até que a adição seja concluída e a coleção esteja vazia.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This is called a mutating enumeration or consuming enumeration because, unlike a typical <ph id="ph1">`foreach`</ph> loop, this enumerator modifies the source collection by removing items.</source>
          <target state="translated">Isso é chamado uma mutação de enumeração ou enumeração consumo porque, ao contrário de um loop <ph id="ph1">`foreach`</ph> típico, este enumerador modifica a coleção de origem por meio da remoção dos itens.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Exemplo</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following example shows how to remove all the items in a <ph id="ph1">`BlockingCollection&lt;T&gt;`</ph> by using a <ph id="ph2">`foreach`</ph> loop.</source>
          <target state="translated">O exemplo a seguir mostra como remover todos os itens em um <ph id="ph1">`BlockingCollection&lt;T&gt;`</ph> usando um loop <ph id="ph2">`foreach`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This example uses a <ph id="ph1">`foreach`</ph> loop with the <ph id="ph2">`BlockingCollection&lt;T&gt;.GetConsumingEnumerable`</ph> method in the consuming thread, which causes each item to be removed from the collection as it is enumerated.</source>
          <target state="translated">Este exemplo usa um loop <ph id="ph1">`foreach`</ph> com o método <ph id="ph2">`BlockingCollection&lt;T&gt;.GetConsumingEnumerable`</ph> no thread consumidor, que faz com que cada item seja removido da coleção ao ser enumerado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`BlockingCollection&lt;T&gt;`</ph> limits the maximum number of items that are in the collection at any time.</source>
          <target state="translated"><ph id="ph1">`BlockingCollection&lt;T&gt;`</ph> limita o número máximo de itens que estão na coleção a qualquer momento.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Enumerating the collection in this way blocks the consumer thread if no items are available or if the collection is empty.</source>
          <target state="translated">Enumerar a coleção dessa maneira bloqueará o thread consumidor se nenhum item estiver disponível ou se a coleção estiver vazia.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In this example blocking is not a concern because the producer thread adds items faster than they can be consumed.</source>
          <target state="translated">Neste exemplo, o bloqueio não é um problema porque o thread produtor adiciona itens mais rápido do que eles podem ser consumidos.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>There is no guarantee that the items are enumerated in the same order in which they are added by the producer threads.</source>
          <target state="translated">Não há nenhuma garantia de que os itens sejam enumerados na mesma ordem em que são adicionados por threads de produtor.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To enumerate the collection without modifying it, just use <ph id="ph1">`foreach`</ph> without the <ph id="ph2">`GetConsumingEnumerable`</ph> method.</source>
          <target state="translated">Para enumerar a coleção sem modificá-la, basta usar <ph id="ph1">`foreach`</ph> sem o método <ph id="ph2">`GetConsumingEnumerable`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>However, it is important to understand that this kind of enumeration represents a snapshot of the collection at a precise point in time.</source>
          <target state="translated">No entanto, é importante compreender que esse tipo de enumeração representa um instantâneo da coleção em um ponto preciso no tempo.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If other threads are adding or removing items concurrently while you are executing the loop, then the loop might not represent the actual state of the collection.</source>
          <target state="translated">Se outros threads estiverem adicionando ou removendo itens simultaneamente enquanto você estiver executando o loop, o loop poderá não representar o estado real da coleção.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>BlockingCollection Overview<ept id="p1">](blockingcollection-overview.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Visão geral de BlockingCollection<ept id="p1">](blockingcollection-overview.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>