<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9d53f32347572614a67e1cc432089f8e18d7cdf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tutorials\using-on-macos.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54b17be3e66c9a0cef717b259886343f14b0d49b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">acd2f254bd1e1d70639dc18cf190134fb9b2c089</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Getting started with .NET Core on macOS</source>
          <target state="translated">Guia de Introdução ao .NET Core no macOS</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Getting started with .NET Core on macOS, using Visual Studio Code</source>
          <target state="translated">Introdução ao .NET Core em macOS usando o Visual Studio Code</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Getting started with .NET Core on macOS, using Visual Studio Code</source>
          <target state="translated">Introdução ao .NET Core em macOS usando o Visual Studio Code</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>by <bpt id="p1">[</bpt>Bertrand Le Roy<ept id="p1">](https://github.com/bleroy)</ept>,  <bpt id="p2">[</bpt>Phillip Carter<ept id="p2">](https://github.com/cartermp)</ept>, <bpt id="p3">[</bpt>Bill Wagner<ept id="p3">](https://github.com/billwagner)</ept></source>
          <target state="translated">por <bpt id="p1">[</bpt>Bertrand Le Roy<ept id="p1">](https://github.com/bleroy)</ept>, <bpt id="p2">[</bpt>Phillip Carter<ept id="p2">](https://github.com/cartermp)</ept> e <bpt id="p3">[</bpt>Bill Wagner<ept id="p3">](https://github.com/billwagner)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Contributions by <bpt id="p1">[</bpt>Toni Solarin-Sodara<ept id="p1">](https://github.com/tsolarin)</ept></source>
          <target state="translated">Contribuições de <bpt id="p1">[</bpt>Toni Solarin-Sodara<ept id="p1">](https://github.com/tsolarin)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This document provides a tour of the steps and workflow to create a .NET Core Solution using <bpt id="p1">[</bpt>Visual Studio Code<ept id="p1">](http://code.visualstudio.com)</ept>.</source>
          <target state="translated">Este documento fornece um tour das etapas e fluxo de trabalho para criar uma Solução do .NET Core usando o <bpt id="p1">[</bpt>Visual Studio Code<ept id="p1">](http://code.visualstudio.com)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You'll learn how to create projects, create unit tests, use the debugging tools, and incorporate third-party libraries via <bpt id="p1">[</bpt>NuGet<ept id="p1">](http://nuget.org)</ept>.</source>
          <target state="translated">Você aprenderá a criar projetos, criar testes de unidade, usar as ferramentas de depuração e incorporar bibliotecas de terceiros por meio do <bpt id="p1">[</bpt>NuGet<ept id="p1">](http://nuget.org)</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This article uses Visual Studio Code on Mac OS.</source>
          <target state="translated">Esse artigo usa o Visual Studio Code no Mac OS.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Where there are differences, it points out the differences for the Windows platform.</source>
          <target state="translated">Onde há diferenças, ele as destaca na plataforma Windows.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Pré-requisitos</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Before starting, you'll need to install the <bpt id="p1">[</bpt>.NET Core SDK<ept id="p1">](https://www.microsoft.com/net/core)</ept>, currently in a preview release.</source>
          <target state="translated">Antes de começar, você precisará instalar o <bpt id="p1">[</bpt>SDK do .NET Core<ept id="p1">](https://www.microsoft.com/net/core)</ept>, atualmente versão de visualização.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The .NET Core SDK includes the latest release of the .NET Core framework and runtime.</source>
          <target state="translated">O SDK do .NET Core inclui a versão mais recente da estrutura do .NET Core e do tempo de execução.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You'll also need to install <bpt id="p1">[</bpt>Visual Studio Code<ept id="p1">](http://code.visualstudio.com)</ept>.</source>
          <target state="translated">Você também precisará instalar o <bpt id="p1">[</bpt>Visual Studio Code<ept id="p1">](http://code.visualstudio.com)</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>During the course of this article, you'll also install extensions that will improve the .NET Core development experience.</source>
          <target state="translated">No decorrer deste artigo, você também instalará as extensões que melhoram a experiência de desenvolvimento do .NET Core.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can find the links to all of these at the <bpt id="p1">[</bpt>.NET home page<ept id="p1">](http://dot.net)</ept>.</source>
          <target state="translated">Você poderá encontrar links para todas elas na <bpt id="p1">[</bpt>home page do .NET<ept id="p1">](http://dot.net)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">Guia de Introdução</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The source for this tutorial is available on <bpt id="p1">[</bpt>GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/getting-started/golden)</ept>.</source>
          <target state="translated">A fonte deste tutorial está disponível no <bpt id="p1">[</bpt>GitHub<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/getting-started/golden)</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Start Visual Studio Code.</source>
          <target state="translated">Inicie o Visual Studio Code.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Press Ctrl + '<ph id="ph1">\`</ph>' (the back-quote character) to open an embedded terminal in VS Code.</source>
          <target state="translated">Pressione Ctrl + '<ph id="ph1">\`</ph>' (o caractere de acento grave) para abrir um terminal inserido no VS Code.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>(Alternatively, you can use a separate terminal window, if you prefer).</source>
          <target state="translated">(Como alternativa, você pode usar uma janela de terminal separada, se preferir).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>By the time we're done, you'll create three projects: a library project, tests for that library project, and a console application that makes use of the library.</source>
          <target state="translated">Quando estiver pronto, você criará três projetos: um projeto de biblioteca, testes para esse projeto de biblioteca e um aplicativo de console que usa a biblioteca.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You'll follow a standard folder structure for the three projects.</source>
          <target state="translated">Você seguirá uma estrutura de pasta padrão para os três projetos.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Following this standard folder structure means that the .NET Core SDK tools understand the relationship between your production code projects and your test code projects.</source>
          <target state="translated">Seguir essa estrutura de pasta padrão significa que as ferramentas do SDK do .NET Core entendem a relação entre seus projetos de código de produção e de teste.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>That makes your development experience more productive.</source>
          <target state="translated">Isso torna sua experiência de desenvolvimento mais produtiva.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Let's start by creating those folders.</source>
          <target state="translated">Vamos começar criando essas pastas.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In the terminal, create a 'golden' directory.</source>
          <target state="translated">No terminal, crie um diretório “golden”.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Under that directory create <ph id="ph1">`src`</ph> and <ph id="ph2">`test`</ph> directories.</source>
          <target state="translated">Nesse diretório, crie os diretórios <ph id="ph1">`src`</ph> e <ph id="ph2">`test`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Under <ph id="ph1">`src`</ph> create <ph id="ph2">`app`</ph> and <ph id="ph3">`library`</ph> directories.</source>
          <target state="translated">Em <ph id="ph1">`src`</ph>, criar os diretórios <ph id="ph2">`app`</ph> e <ph id="ph3">`library`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">`test`</ph> create a <ph id="ph2">`test-library`</ph> directory.</source>
          <target state="translated">Em <ph id="ph1">`test`</ph>, crie um diretório <ph id="ph2">`test-library`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You can do this either using the terminal in VS code, or by clicking on the parent folder in VS Code and selecting the "New Folder" icon.</source>
          <target state="translated">Você pode fazer isso usando o terminal no VS Code ou clicando na pasta pai do VS Code e selecionando o ícone “Nova pasta”.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In VS Code, open the 'golden' directory.</source>
          <target state="translated">No VS Code, abra o diretório “golden”.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This directory is the root of your solution.</source>
          <target state="translated">Esse diretório é a raiz da sua solução.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Next, create a <ph id="ph1">`global.json`</ph> file in the root directory for your solution.</source>
          <target state="translated">Em seguida, crie um arquivo <ph id="ph1">`global.json`</ph> no diretório raiz para a solução.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The contents of <ph id="ph1">`global.json`</ph> are:</source>
          <target state="translated">O conteúdo de <ph id="ph1">`global.json`</ph> é:</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>At this point, your directory tree should look like this:</source>
          <target state="translated">Neste ponto, sua árvore de diretório deve ser semelhante a:</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Writing the library</source>
          <target state="translated">Escrevendo a biblioteca</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Your next task is to create the library.</source>
          <target state="translated">Sua próxima tarefa é criar a biblioteca.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In the terminal window (either the embedded terminal in VS code, or another terminal), cd to <ph id="ph1">`golden/src/library`</ph> and type the command <ph id="ph2">`dotnet new -t lib`</ph>.</source>
          <target state="translated">Na janela do terminal (no terminal inserido no VS Code ou em outro terminal), use o cd para <ph id="ph1">`golden/src/library`</ph> e digite o comando <ph id="ph2">`dotnet new -t lib`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This creates a library project, with two files: <ph id="ph1">`project.json`</ph> and <ph id="ph2">`Library.cs`</ph>.</source>
          <target state="translated">Isso cria um projeto de biblioteca com dois arquivos: <ph id="ph1">`project.json`</ph> e <ph id="ph2">`Library.cs`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`project.json`</ph> contains the following information:</source>
          <target state="translated"><ph id="ph1">`project.json`</ph> contém as seguintes informações:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This library project will make use of JSON representation of objects, so you'll want to add a reference to the <ph id="ph1">`Newtonsoft.Json`</ph> NuGet package.</source>
          <target state="translated">Esse projeto de biblioteca usará a representação JSON de objetos, portanto, você deve adicionar uma referência ao pacote <ph id="ph1">`Newtonsoft.Json`</ph> do NuGet.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In<ph id="ph1">`project.json`</ph> add the latest pre-release version of the package as a dependency:</source>
          <target state="translated">No<ph id="ph1">`project.json`</ph>, adicione a versão pré-lançamento mais recente do pacote como uma dependência:</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>After you've finished adding those dependencies, you need to install those packages into workspace.</source>
          <target state="translated">Depois de terminar de adicionar essas dependências, você precisa instalar os pacotes no espaço de trabalho.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Run the <ph id="ph1">`dotnet restore`</ph> command to updates all dependencies, and write a <ph id="ph2">`project.lock.json`</ph> file in the project directory.</source>
          <target state="translated">Execute o comando <ph id="ph1">`dotnet restore`</ph> para atualizar todas as dependências e escrever um arquivo <ph id="ph2">`project.lock.json`</ph> no diretório do projeto.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This file contains the full dependency tree of all the dependencies in your project.</source>
          <target state="translated">Esse arquivo contém a árvore de dependência completa de todas as dependências em seu projeto.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You don't need to read this file, it's used by tools in the .NET Core SDK.</source>
          <target state="translated">Você não precisa ler este arquivo, ele é usado pelas ferramentas do SDK do .NET Core.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Now, let's update the C# code.</source>
          <target state="translated">Agora, vamos atualizar o código C#.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Let's create a <ph id="ph1">`Thing`</ph> class that contains one public method.</source>
          <target state="translated">Vamos criar uma classe <ph id="ph1">`Thing`</ph> que contém um método público.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This method will return the sum of two numbers, but will do so by converting that number to a JSON string, and then deserializing it.</source>
          <target state="translated">Este método retornará a soma de dois números, porém isso será feito ao converter esse número em uma cadeia de caracteres JSON e então desserializando-o.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Rename the file <ph id="ph1">`Library.cs`</ph> to <ph id="ph2">`Thing.cs`</ph>.</source>
          <target state="translated">Renomeie o arquivo <ph id="ph1">`Library.cs`</ph> para <ph id="ph2">`Thing.cs`</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Then, replace the existing code (for the template-generated Class1) with the following:</source>
          <target state="translated">Em seguida, substitua o código existente (para a Class1 gerada pelo modelo) pelo seguinte:</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This makes use of a number of modern C# features, such as static usings, expression bodied members, and interpolated strings, that you can learn about in the <bpt id="p1">[</bpt>Learn C#<ept id="p1">](../../csharp/index.md)</ept> section.</source>
          <target state="translated">Isso utiliza diversos recursos modernos de C#, tais como usings estáticos, membros com corpos de expressão e cadeias de caracteres interpoladas, sobre os quais você pode aprender na seção <bpt id="p1">[</bpt>Aprenda C#<ept id="p1">](../../csharp/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Now that you've updated the code, you can build the library using <ph id="ph1">`dotnet build`</ph>.</source>
          <target state="translated">Agora que você atualizou o código, poderá criar a biblioteca usando <ph id="ph1">`dotnet build`</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You now have a built <ph id="ph1">`library.dll`</ph> file under <ph id="ph2">`golden/src/library/bin/Debug/netstandard1.6`</ph>.</source>
          <target state="translated">Agora você tem um arquivo <ph id="ph1">`library.dll`</ph> de compilação em <ph id="ph2">`golden/src/library/bin/Debug/netstandard1.6`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Writing the test project</source>
          <target state="translated">Escrevendo o projeto de teste</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Let's build a test project for this library that you've build.</source>
          <target state="translated">Vamos criar um projeto de teste para esta biblioteca que você compilou.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Cd into the <ph id="ph1">`test/test-library`</ph> directory.</source>
          <target state="translated">Execute cd no diretório <ph id="ph1">`test/test-library`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Run <ph id="ph1">`dotnet new -t xunittest`</ph> to create a new test project.</source>
          <target state="translated">Execute <ph id="ph1">`dotnet new -t xunittest`</ph> para criar um projeto de teste.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You'll need to add a dependency node for the library you wrote in the steps above.</source>
          <target state="translated">Você precisará adicionar um nó de dependência para a biblioteca que você escreveu nas etapas acima.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Open <ph id="ph1">`project.json`</ph> and update the dependencies section to the following (including the <ph id="ph2">`library`</ph> node, which is the last node below):</source>
          <target state="translated">Abra <ph id="ph1">`project.json`</ph> e atualize a seção de dependências para o seguinte (incluindo o nó <ph id="ph2">`library`</ph>, que é o último nó abaixo):</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`library`</ph> node specifies that this dependency should resolve to a project in the current workspace.</source>
          <target state="translated">O nó <ph id="ph1">`library`</ph> especifica que essa dependência deve ser resolvida para um projeto no espaço de trabalho atual.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Without explicitly specifying this, it's possible that the test project would build against a NuGet package of the same name.</source>
          <target state="translated">Sem especificar isso explicitamente, é possível que o projeto de teste seria compilado em um pacote NuGet de mesmo nome.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Now that the dependencies have been properly configured, let's create the tests for your library.</source>
          <target state="translated">Agora que as dependências foram devidamente configuradas, vamos criar os testes para sua biblioteca.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Open <ph id="ph1">`Tests.cs`</ph> and replace its contents with the following code:</source>
          <target state="translated">Abra <ph id="ph1">`Tests.cs`</ph> e substitua seu conteúdo pelo seguinte código:</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Now, run <ph id="ph1">`dotnet restore`</ph>, <ph id="ph2">`dotnet build`</ph> and <ph id="ph3">`dotnet test`</ph>.</source>
          <target state="translated">Agora, execute <ph id="ph1">`dotnet restore`</ph>, <ph id="ph2">`dotnet build`</ph> e <ph id="ph3">`dotnet test`</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The xUnit console test runner will run the one test, and report that it is passing.</source>
          <target state="translated">O executor de teste de console xUnit executará um teste e relatará que ele foi aprovado.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Writing the console app</source>
          <target state="translated">Escrevendo o aplicativo de console</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>In your terminal, cd to the <ph id="ph1">`golden/src/app`</ph> directory.</source>
          <target state="translated">No seu terminal, execute cd para o diretório <ph id="ph1">`golden/src/app`</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Run <ph id="ph1">`dotnet new`</ph> to create a new console application.</source>
          <target state="translated">Execute <ph id="ph1">`dotnet new`</ph> para criar um novo aplicativo de console.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Your console application depends on the library you built and tested in the previous steps.</source>
          <target state="translated">Seu aplicativo de console depende da biblioteca criada e testada nas etapas anteriores.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You need to indicate that by editing <ph id="ph1">`project.json`</ph> to add this dependency.</source>
          <target state="translated">Você precisa indicar isso editando <ph id="ph1">`project.json`</ph> para adicionar essa dependência.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>In the <ph id="ph1">`dependencies`</ph> node, add the <ph id="ph2">`library`</ph> node as follows:</source>
          <target state="translated">No nó <ph id="ph1">`dependencies`</ph>, adicione o nó <ph id="ph2">`library`</ph> da seguinte maneira:</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`project`</ph> node is important here, as it was in the test library.</source>
          <target state="translated">O nó <ph id="ph1">`project`</ph> é importante aqui, assim como era na biblioteca de teste.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>It indicates that this is a project in the current solution, and not a NuGet package.</source>
          <target state="translated">Ele indica que se trata de um projeto na solução atual e não um pacote NuGet.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Run <ph id="ph1">`dotnet restore`</ph> to restore all dependencies.</source>
          <target state="translated">Execute <ph id="ph1">`dotnet restore`</ph> para restaurar todas as dependências.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Open <ph id="ph1">`program.cs`</ph> and replace the contents of the <ph id="ph2">`Main`</ph> method with this line:</source>
          <target state="translated">Abra <ph id="ph1">`program.cs`</ph> e substitua o conteúdo do método <ph id="ph2">`Main`</ph> por essa linha:</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You'll need to add a couple <ph id="ph1">`using`</ph> directives to the top of the file:</source>
          <target state="translated">Você precisará adicionar algumas diretivas <ph id="ph1">`using`</ph> ao topo do arquivo:</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Then, run <ph id="ph1">`dotnet build`</ph>.</source>
          <target state="translated">Em seguida, execute <ph id="ph1">`dotnet build`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>That creates the assemblies, and you can type <ph id="ph1">`dotnet run`</ph> to run the executable.</source>
          <target state="translated">Isso cria os assemblies e você pode digitar <ph id="ph1">`dotnet run`</ph> para ativar o executável.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Debugging your application</source>
          <target state="translated">Depurando seu aplicativo</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You can debug your code in VS Code using the C# extension.</source>
          <target state="translated">Você pode depurar seu código no VS Code usando a extensão do C#.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You install this extension by pressing <ph id="ph1">`F1`</ph> to open the VS Code palette.</source>
          <target state="translated">Instale essa extensão pressionando <ph id="ph1">`F1`</ph> para abrir a paleta do VS Code.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Type <ph id="ph1">`ext install`</ph> to see the list of extensions.</source>
          <target state="translated">Digite <ph id="ph1">`ext install`</ph> para ver a lista de extensões.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Select the C# extension.</source>
          <target state="translated">Selecione a extensão de C#.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>(More details are available on the <bpt id="p1">[</bpt>Visual Studio Code C# Extension documentation<ept id="p1">](https://github.com/OmniSharp/omnisharp-vscode/blob/master/debugger.md)</ept> page.)</source>
          <target state="translated">(Mais detalhes estão disponíveis na página <bpt id="p1">[</bpt>Documentação da extensão C# do Visual Studio Code<ept id="p1">](https://github.com/OmniSharp/omnisharp-vscode/blob/master/debugger.md)</ept>.)</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>After you install the extension, VS Code will ask that you restart the application to load the new extension.</source>
          <target state="translated">Depois de instalar a extensão, o VS Code solicitará que você reinicie o aplicativo para carregar a nova extensão.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Once the extension is installed, you can open the debugger tab (see figure).</source>
          <target state="translated">Depois de instalar a extensão, você pode abrir a guia do depurador (veja a figura).</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>VS Code Debugger</source>
          <target state="translated">Depurador do VS Code</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>When you start the debugger, VS Code will instruct you to configure the debugger.</source>
          <target state="translated">Quando iniciar o depurador, o VS Code instruirá você a configurar o depurador.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>When you do, it creates a <ph id="ph1">`.vscode`</ph> directory with two files: <ph id="ph2">`tasks.json`</ph> and <ph id="ph3">`launch.json`</ph>.</source>
          <target state="translated">Quando fizer isso, ele criará um diretório <ph id="ph1">`.vscode`</ph> com dois arquivos: <ph id="ph2">`tasks.json`</ph> e <ph id="ph3">`launch.json`</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>These two files control the debugger configuration.</source>
          <target state="translated">Esses dois arquivos controlam a configuração do depurador.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>In most projects, this directory is not included in source control.</source>
          <target state="translated">Na maioria dos projetos, esse diretório não está incluído no controle do código-fonte.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>It is included in the sample associated with this walk through so you can see the edits you need to make.</source>
          <target state="translated">Ele está incluído no exemplo associado a este passo a passo para ver as edições que você precisa fazer.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Your solution contains multiple projects, so you'll want to modify each of these files to perform the correct commands.</source>
          <target state="translated">Sua solução contém vários projetos, portanto, você deve modificar cada um desses arquivos para executar os comandos corretos.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>First, open <ph id="ph1">`tasks.json`</ph>.</source>
          <target state="translated">Primeiramente, abra <ph id="ph1">`tasks.json`</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The default build task runs <ph id="ph1">`dotnet build`</ph> in the workspace source directory.</source>
          <target state="translated">A tarefa é executada de build padrão executa <ph id="ph1">`dotnet build`</ph> no diretório de origem do espaço de trabalho.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Instead, you want to run it in the <ph id="ph1">`src/app`</ph> directory.</source>
          <target state="translated">Em vez disso, você deve executá-lo no diretório <ph id="ph1">`src/app`</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>You need to add a <ph id="ph1">`options`</ph> node to set the current working directory to that:</source>
          <target state="translated">Você precisa adicionar um nó <ph id="ph1">`options`</ph> para definir o diretório de trabalho atual para:</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Next, you'll need to open <ph id="ph1">`launch.json`</ph> and update the program path.</source>
          <target state="translated">Em seguida, você precisará abrir <ph id="ph1">`launch.json`</ph> e atualizar o caminho do programa.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>You'll see a node under "configurations" that describes the program.</source>
          <target state="translated">Você verá um nó em “configurações” que descreve o programa.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>You'll see:</source>
          <target state="translated">Você verá:</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>You'll change this to:</source>
          <target state="translated">Você alterará isso para:</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>If you are running on Windows, you'll need to update the Application's <ph id="ph1">`project.json`</ph> (in the <ph id="ph2">`src/app`</ph> directory) to generate portable PDB files (this happens by default on Mac OSX and Linux).</source>
          <target state="translated">Se estiver executando no Windows, será necessário atualizar o <ph id="ph1">`project.json`</ph> do Aplicativo (no diretório <ph id="ph2">`src/app`</ph>) para gerar arquivos PDB portáteis (isso acontece por padrão no Mac OSX e no Linux).</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Add the <ph id="ph1">`debugType`</ph> node inside <ph id="ph2">`buildOptions`</ph>.</source>
          <target state="translated">Adicione o nó <ph id="ph1">`debugType`</ph> dentro de <ph id="ph2">`buildOptions`</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>You'll need to add the <ph id="ph1">`debugType`</ph> node in <ph id="ph2">`project.json`</ph> for both the <ph id="ph3">`src/app`</ph> and <ph id="ph4">`src/library`</ph> folders.</source>
          <target state="translated">Você precisará adicionar o nó <ph id="ph1">`debugType`</ph> em <ph id="ph2">`project.json`</ph> para ambas as pastas <ph id="ph3">`src/app`</ph> e <ph id="ph4">`src/library`</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Set a breakpoint at the <ph id="ph1">`WriteLine`</ph> statement in <ph id="ph2">`Main`</ph>.</source>
          <target state="translated">Defina um ponto de interrupção na instrução <ph id="ph1">`WriteLine`</ph> em <ph id="ph2">`Main`</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>You do this by pressing the <ph id="ph1">`F9`</ph> key, or by clicking the mouse in the left margin on the line you want the breakpoint.</source>
          <target state="translated">Você pode fazer isso pressionando a tecla <ph id="ph1">`F9`</ph> ou clicando com o mouse na margem esquerda na linha escolhida para ser o ponto de interrupção.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Open the debugger by pressing the debug icon on the left of the VS Code screen (see figure).</source>
          <target state="translated">Abra o depurador pressionando o ícone de depuração à esquerda da tela do VS Code (veja a figura).</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Then, press the Play button to start the application under the debugger.</source>
          <target state="translated">Em seguida, pressione o botão Play para iniciar o aplicativo no depurador.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>You should hit the breakpoint.</source>
          <target state="translated">Você deverá atingir o ponto de interrupção.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Step into the <ph id="ph1">`Get`</ph> method and make sure that you have passed in the correct arguments.</source>
          <target state="translated">Inspecione o método <ph id="ph1">`Get`</ph> e verifique se você transmitiu os argumentos corretos.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Make sure that the answer is actually 42.</source>
          <target state="translated">Verifique se a resposta é, na verdade, 42.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>