<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4359ec4c55921497f32d5891ea337a30867e4fa5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\collections\sorted-collection-types.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a45a76f5536ede63aa7b0a651be95330f69f1cc2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3c1f078246e8fca1a2597120d0c88910135ccd8e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Sorted Collection Types</source>
          <target state="translated">Tipos de coleção Sorted</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Sorted Collection Types</source>
          <target state="translated">Tipos de coleção Sorted</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Sorted Collection Types</source>
          <target state="translated">Tipos de coleção Sorted</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Collections.SortedList<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.SortedList)</ept> class, the <bpt id="p2">[</bpt>System.Collections.Generic.SortedList<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept> generic class, and the <bpt id="p3">[</bpt>System.Collections.Generic.SortedDictionary<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2)</ept> generic class are similar to the <bpt id="p4">[</bpt>Hashtable<ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept> class and the <bpt id="p5">[</bpt>Dictionary<ph id="ph5">&amp;lt;</ph>TKey, TValue<ph id="ph6">&amp;gt;</ph><ept id="p5">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept> generic class in that they implement the <bpt id="p6">[</bpt>IDictionary<ept id="p6">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept> interface, but they maintain their elements in sort order by key, and they do not have the O(1) insertion and retrieval characteristic of hash tables.</source>
          <target state="translated">A classe <bpt id="p1">[</bpt>System.Collections.SortedList<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.SortedList)</ept>, a classe genérica <bpt id="p2">[</bpt>System.Collections.Generic.SortedList<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept> e a classe genérica <bpt id="p3">[</bpt>System.Collections.Generic.SortedDictionary<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2)</ept> são semelhantes à classe <bpt id="p4">[</bpt>Hashtable<ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept> e à classe genérica <bpt id="p5">[</bpt>Dictionary<ph id="ph5">&amp;lt;</ph>TKey, TValue<ph id="ph6">&amp;gt;</ph><ept id="p5">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept> nas quais elas implementam a interface <bpt id="p6">[</bpt>IDictionary<ept id="p6">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept>, mas elas mantêm seus elementos em ordem de classificação por chave e não têm as características de inserção e recuperação de O(1) das tabelas de hash.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The three classes have several features in common:</source>
          <target state="translated">As três classes têm várias funcionalidades em comum:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>All three classes implement the <bpt id="p1">[</bpt>System.Collections.IDictionary<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept> interface.</source>
          <target state="translated">As três classes implementam a interface <bpt id="p1">[</bpt>System.Collections.IDictionary<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The two generic classes also implement the <bpt id="p1">[</bpt>System.Collections.Generic.IDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IDictionary-2)</ept> generic interface.</source>
          <target state="translated">As duas classes genéricas também implementam a interface genérica <bpt id="p1">[</bpt>System.Collections.Generic.IDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IDictionary-2)</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Each element is a key/value pair for enumeration purposes.</source>
          <target state="translated">Cada elemento é um par chave/valor para fins de enumeração.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The nongeneric <bpt id="p1">[</bpt>SortedList<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.SortedList)</ept> class returns <bpt id="p2">[</bpt>DictionaryEntry<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.DictionaryEntry)</ept> objects when enumerated, although the two generic types return <bpt id="p3">[</bpt>KeyValuePair<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.KeyValuePair-2)</ept> objects.</source>
          <target state="translated">A classe não genérica <bpt id="p1">[</bpt>SortedList<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.SortedList)</ept> retorna objetos <bpt id="p2">[</bpt>DictionaryEntry<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.DictionaryEntry)</ept> quando é enumerada, embora os dois tipos genéricos retornem objetos <bpt id="p3">[</bpt>KeyValuePair<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.KeyValuePair-2)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Elements are sorted according to a <bpt id="p1">[</bpt>System.Collections.IComparer<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IComparer)</ept> implementation (for nongeneric <ph id="ph1">`SortedList`</ph>) or a <bpt id="p2">[</bpt>System.Collections.Generic.IComparer<ph id="ph2">&amp;lt;</ph>T<ph id="ph3">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IComparer-1)</ept> implementation (for the two generic classes).</source>
          <target state="translated">Os elementos são classificados de acordo com uma implementação de <bpt id="p1">[</bpt>System.Collections.IComparer<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IComparer)</ept> (para <ph id="ph1">`SortedList`</ph> não genérica) ou uma implementação de <bpt id="p2">[</bpt>System.Collections.Generic.IComparer<ph id="ph2">&amp;lt;</ph>T<ph id="ph3">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IComparer-1)</ept> (para as duas classes genéricas).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Each class provides properties that return collections containing only the keys or only the values.</source>
          <target state="translated">Cada classe fornece propriedades que retornam coleções contendo apenas as chaves ou apenas os valores.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following table lists some of the differences between the two sorted list classes and the <bpt id="p1">[</bpt>SortedDictionary&lt;TKey, TValue&gt;<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2)</ept> class.</source>
          <target state="translated">A tabela a seguir lista algumas das diferenças entre as duas classes de listas classificadas e a classe <bpt id="p1">[</bpt>SortedDictionary&lt;TKey, TValue&gt;<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SortedList`</ph> nongeneric class and <ph id="ph2">`SortedList&lt;TKey, TValue&gt;`</ph> generic class</source>
          <target state="translated"><ph id="ph1">`SortedList`</ph> classe não genérica e <ph id="ph2">`SortedList&lt;TKey, TValue&gt;`</ph> classe genérica</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`SortedDictionary&lt;TKey, TValue&gt;`</ph> generic class</source>
          <target state="translated"><ph id="ph1">`SortedDictionary&lt;TKey, TValue&gt;`</ph> classe genérica</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The properties that return keys and values are indexed, allowing efficient indexed retrieval.</source>
          <target state="translated">As propriedades que retornam chaves e valores são indexadas, permitindo uma recuperação indexada eficiente.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>No indexed retrieval.</source>
          <target state="translated">Recuperação não indexada.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Retrieval is O(log n).</source>
          <target state="translated">A recuperação é O(log n).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Retrieval is O(log n).</source>
          <target state="translated">A recuperação é O(log n).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Insertion and removal are generally O(n); however, insertion is O(1) for data that are already in sort order, so that each element is added to the end of the list.</source>
          <target state="translated">A inserção e a remoção geralmente são O(n). No entanto, a inserção é O(1) para dados que já estão na ordem de classificação, para que cada elemento seja adicionado ao final da lista.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>(This assumes that a resize is not required.)</source>
          <target state="translated">(Isso pressupõe que um redimensionamento não é necessário.)</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Insertion and removal are O(log n).</source>
          <target state="translated">A inserção e a remoção são O(log n).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Uses less memory than a <ph id="ph1">`SortedDictionary&lt;TKey, TValue&gt;`</ph>.</source>
          <target state="translated">Usa menos memória do que um <ph id="ph1">`SortedDictionary&lt;TKey, TValue&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Uses more memory than the <ph id="ph1">`SortedList`</ph> nongeneric class and the <ph id="ph2">`SortedList&lt;TKey, TValue&gt;`</ph> generic class.</source>
          <target state="translated">Usa mais memória do que a classe não genérica <ph id="ph1">`SortedList`</ph> e a classe genérica <ph id="ph2">`SortedList&lt;TKey, TValue&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For sorted lists or dictionaries that must be accessible concurrently from multiple threads, you can add sorting logic to a class that derives from <bpt id="p1">[</bpt>ConcurrentDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept>.</source>
          <target state="translated">Para listas ou dicionários classificados que precisam estar acessíveis simultaneamente de vários threads, você pode adicionar a lógica de classificação em uma classe derivada de <bpt id="p1">[</bpt>ConcurrentDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For values that contain their own keys (for example, employee records that contain an employee ID number), you can create a keyed collection that has some characteristics of a list and some characteristics of a dictionary by deriving from the <bpt id="p1">[</bpt>KeyedCollection<ph id="ph1">&amp;lt;</ph>TKey, TItem<ph id="ph2">&amp;gt;</ph><ept id="p1">]()</ept> generic class.</source>
          <target state="translated">Para valores que contêm suas próprias chaves (por exemplo, registros de funcionários que contêm um número de ID do funcionário), você pode criar uma coleção com chave que tenha algumas características de uma lista e algumas características de um dicionário, derivando de uma classe genérica <bpt id="p1">[</bpt>KeyedCollection<ph id="ph1">&amp;lt;</ph>TKey, TItem<ph id="ph2">&amp;gt;</ph><ept id="p1">]()</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>SortedSet<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedSet-1)</ept> class provides a self-balancing tree that maintains data in sorted order after insertions, deletions, and searches.</source>
          <target state="translated">A classe <bpt id="p1">[</bpt>SortedSet<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedSet-1)</ept> fornece uma árvore de balanceamento automático que mantém os dados em ordem classificada após inserções, exclusões e pesquisas.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This class and the <bpt id="p1">[</bpt>HashSet<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.HashSet-1)</ept> class implement the <bpt id="p2">[</bpt>ISet<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.ISet-1)</ept> interface.</source>
          <target state="translated">Essa classe e a classe <bpt id="p1">[</bpt>HashSet<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.HashSet-1)</ept> implementam a interface <bpt id="p2">[</bpt>ISet<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.ISet-1)</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.IDictionary<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.IDictionary<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IDictionary)</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Generic.IDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IDictionary-2)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Generic.IDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IDictionary-2)</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ConcurrentDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>ConcurrentDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Commonly Used Collection Types<ept id="p1">](commonly-used-collection-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Tipos de Coleção de Uso Comum<ept id="p1">](commonly-used-collection-types.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>