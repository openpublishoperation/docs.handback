<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fc119d730ccd2ed9b33183d281ceeebefb1e7569</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\functions\ctype-function.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0bae8679b5fc22e38439819a51901812e628c01a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb71de4656b3124f79ae4d2d72ffcb32eee54606</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>CType Function (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Função CType (Visual Basic) | Documentos do Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>CType Function (Visual Basic)</source>
          <target state="translated">Função CType (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Returns the result of explicitly converting an expression to a specified data type, object, structure, class, or interface.</source>
          <target state="translated">Retorna o resultado da conversão explícita de uma expressão para um tipo de dados especificado, objeto, estrutura, classe ou interface.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Sintaxe</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">Partes</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Any valid expression.</source>
          <target state="translated">Qualquer expressão válida.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If the value of <ph id="ph1">`expression`</ph> is outside the range allowed by <ph id="ph2">`typename`</ph>, Visual Basic throws an exception.</source>
          <target state="translated">Se o valor de <ph id="ph1">`expression`</ph> está fora do intervalo permitido por <ph id="ph2">`typename`</ph>, Visual Basic gera uma exceção.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Any expression that is legal within an <ph id="ph1">`As`</ph> clause in a <ph id="ph2">`Dim`</ph> statement, that is, the name of any data type, object, structure, class, or interface.</source>
          <target state="translated">Qualquer expressão que seja legal em um <ph id="ph1">`As`</ph> cláusula em uma <ph id="ph2">`Dim`</ph> instrução, ou seja, o nome de qualquer tipo de dados, objeto, estrutura, classe ou interface.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">Comentários</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can also use the following functions to perform a type conversion:</source>
          <target state="translated">Você também pode usar as funções a seguir para executar uma conversão de tipo:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Type conversion functions such as <ph id="ph1">`CByte`</ph>, <ph id="ph2">`CDbl`</ph>, and <ph id="ph3">`CInt`</ph> that perform a conversion to a specific data type.</source>
          <target state="translated">Funções de conversão de tipo como <ph id="ph1">`CByte`</ph>, <ph id="ph2">`CDbl`</ph>, e <ph id="ph3">`CInt`</ph> que executar uma conversão para um tipo de dados específico.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Type Conversion Functions<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>funções de conversão de tipo<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>DirectCast Operator<ept id="p1">](../../../visual-basic/language-reference/operators/directcast-operator.md)</ept> or <bpt id="p2">[</bpt>TryCast Operator<ept id="p2">](../../../visual-basic/language-reference/operators/trycast-operator.md)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>Operador DirectCast<ept id="p1">](../../../visual-basic/language-reference/operators/directcast-operator.md)</ept> ou <bpt id="p2">[</bpt>operador TryCast<ept id="p2">](../../../visual-basic/language-reference/operators/trycast-operator.md)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>These operators require that one type inherit from or implement the other type.</source>
          <target state="translated">Esses operadores exigem que um tipo de herdar de ou implementar o outro tipo.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>They can provide somewhat better performance than <ph id="ph1">`CType`</ph> when converting to and from the <ph id="ph2">`Object`</ph> data type.</source>
          <target state="translated">Podem fornecer desempenho um pouco melhor do que <ph id="ph1">`CType`</ph> durante a conversão de e para o <ph id="ph2">`Object`</ph> tipo de dados.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`CType`</ph> is compiled inline, which means that the conversion code is part of the code that evaluates the expression.</source>
          <target state="translated"><ph id="ph1">`CType`</ph>é embutido compilado, o que significa que o código de conversão faz parte do código que avalia a expressão.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>In some cases, the code runs faster because no procedures are called to perform the conversion.</source>
          <target state="translated">Em alguns casos, o código é executado mais rápido porque não há procedimentos são chamados para executar a conversão.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If no conversion is defined from <ph id="ph1">`expression`</ph> to <ph id="ph2">`typename`</ph> (for example, from <ph id="ph3">`Integer`</ph> to <ph id="ph4">`Date`</ph>), Visual Basic displays a compile-time error message.</source>
          <target state="translated">Se nenhuma conversão é definida de <ph id="ph1">`expression`</ph> para <ph id="ph2">`typename`</ph> (por exemplo, de <ph id="ph3">`Integer`</ph> para <ph id="ph4">`Date`</ph>), do Visual Basic exibe uma mensagem de erro de tempo de compilação.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If a conversion fails at run time, the appropriate exception is thrown.</source>
          <target state="translated">Se uma conversão falhar em tempo de execução, a exceção apropriada é gerada.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If a narrowing conversion fails, an &lt;xref:System.OverflowException&gt; is the most common result.</source>
          <target state="translated">Se uma conversão de redução falhar, um &lt;xref:System.OverflowException&gt;é o resultado mais comum.&lt;/xref:System.OverflowException&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If the conversion is undefined, an &lt;xref:System.InvalidCastException&gt; in thrown.</source>
          <target state="translated">Se a conversão for indefinida, uma &lt;xref:System.InvalidCastException&gt;em gerada.&lt;/xref:System.InvalidCastException&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, this can happen  if <ph id="ph1">`expression`</ph> is of type <ph id="ph2">`Object`</ph> and its run-time type has no conversion to <ph id="ph3">`typename`</ph>.</source>
          <target state="translated">Por exemplo, isso pode acontecer se <ph id="ph1">`expression`</ph> é do tipo <ph id="ph2">`Object`</ph> e seu tipo de tempo de execução não tem nenhuma conversão em <ph id="ph3">`typename`</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the data type of <ph id="ph1">`expression`</ph> or <ph id="ph2">`typename`</ph> is a class or structure you've defined, you can define <ph id="ph3">`CType`</ph> on that class or structure as a conversion operator.</source>
          <target state="translated">Se o tipo de dados <ph id="ph1">`expression`</ph> ou <ph id="ph2">`typename`</ph> é uma classe ou estrutura que você definiu, você pode definir <ph id="ph3">`CType`</ph> na classe ou estrutura como um operador de conversão.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This makes <ph id="ph1">`CType`</ph> act as an <bpt id="p1">*</bpt>overloaded operator<ept id="p1">*</ept>.</source>
          <target state="translated">Isso torna <ph id="ph1">`CType`</ph> atuar como um <bpt id="p1">*</bpt>sobrecarregado operador<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you do this, you can control the behavior of conversions to and from your class or structure, including the exceptions that can be thrown.</source>
          <target state="translated">Se você fizer isso, você pode controlar o comportamento de conversões para e de sua classe ou estrutura, incluindo as exceções que podem ser geradas.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Overloading</source>
          <target state="translated">Sobrecarga</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`CType`</ph> operator can also be overloaded on a class or structure defined outside your code.</source>
          <target state="translated">O <ph id="ph1">`CType`</ph> também pode ser sobrecarregado operador em uma classe ou estrutura definida fora de seu código.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If your code converts to or from such a class or structure, be sure you understand the behavior of its <ph id="ph1">`CType`</ph> operator.</source>
          <target state="translated">Se o código a seguir converte para ou de uma classe ou estrutura, certifique-se de entender o comportamento do seu <ph id="ph1">`CType`</ph> operador.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Operator Procedures<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>procedimentos de operador<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Converting Dynamic Objects</source>
          <target state="translated">Convertendo objetos dinâmicos</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Type conversions of dynamic objects are performed by user-defined dynamic conversions that use the &lt;xref:System.Dynamic.DynamicObject.TryConvert%2A&gt; or &lt;xref:System.Dynamic.DynamicMetaObject.BindConvert%2A&gt; methods.</source>
          <target state="translated">Conversões de tipo de objetos dinâmicos são executadas por conversões dinâmicas definido pelo usuário que usam o &lt;xref:System.Dynamic.DynamicObject.TryConvert%2A&gt;ou &lt;xref:System.Dynamic.DynamicMetaObject.BindConvert%2A&gt;métodos.&lt;/xref:System.Dynamic.DynamicMetaObject.BindConvert%2A&gt; &lt;/xref:System.Dynamic.DynamicObject.TryConvert%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you're working with dynamic objects, use the &lt;xref:Microsoft.VisualBasic.Conversion.CTypeDynamic%2A&gt; method to convert the dynamic object.</source>
          <target state="translated">Se você estiver trabalhando com objetos dinâmicos, use o &lt;xref:Microsoft.VisualBasic.Conversion.CTypeDynamic%2A&gt;método para converter o objeto dinâmico.&lt;/xref:Microsoft.VisualBasic.Conversion.CTypeDynamic%2A&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Exemplo</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`CType`</ph> function to convert an expression to the <ph id="ph2">`Single`</ph> data type.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">`CType`</ph> função para converter uma expressão para o <ph id="ph2">`Single`</ph> tipo de dados.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrFunctions#24<ept id="p2">](../../../visual-basic/language-reference/functions/codesnippet/VisualBasic/ctype-function_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrFunctions&amp;#24;<ept id="p2">](../../../visual-basic/language-reference/functions/codesnippet/VisualBasic/ctype-function_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For additional examples, see <bpt id="p1">[</bpt>Implicit and Explicit Conversions<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)</ept>.</source>
          <target state="translated">Para obter exemplos adicionais, consulte <bpt id="p1">[</bpt>conversões explícitas e implícitas<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.OverflowException&gt;</source>
          <target state="translated">&lt;xref:System.OverflowException&gt;&lt;/xref:System.OverflowException&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.InvalidCastException&gt;</source>
          <target state="translated">&lt;xref:System.InvalidCastException&gt;&lt;/xref:System.InvalidCastException&gt;</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Type Conversion Functions<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Funções de conversão de tipo<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Conversion Functions<ept id="p1">](../../../visual-basic/language-reference/functions/conversion-functions.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Funções de conversão<ept id="p1">](../../../visual-basic/language-reference/functions/conversion-functions.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operator Statement<ept id="p1">](../../../visual-basic/language-reference/statements/operator-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Instrução Operator<ept id="p1">](../../../visual-basic/language-reference/statements/operator-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Define a Conversion Operator<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/how-to-define-a-conversion-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Como: definir um operador de conversão<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/how-to-define-a-conversion-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Type Conversion in the .NET Framework<ept id="p1">](http://msdn.microsoft.com/library/ba36154f-064c-47d3-9f05-72f93a7ca96d)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Conversão de tipo no .NET Framework<ept id="p1">](http://msdn.microsoft.com/library/ba36154f-064c-47d3-9f05-72f93a7ca96d)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>