<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f76937ef15fa9c1bf2883a9a7c30645346c05caf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\data-types\decimal-data-type.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05b9af2703cc1bbf755d9a40b0851e1de75c3e39</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e0f0bc0c566ebc84d6409b226dd3a70c450fe2ee</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Decimal Data Type (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Tipo de dados decimal (Visual Basic) | Documentos do Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Decimal Data Type (Visual Basic)</source>
          <target state="translated">Tipo de dados decimal (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Holds signed 128-bit (16-byte) values representing 96-bit (12-byte) integer numbers scaled by a variable power of 10.</source>
          <target state="translated">Mantém assinados de 128 bits (16 bytes) valores que representam números de 96 bits (12 bytes) inteiro dimensionados por uma potência variável de 10.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The scaling factor specifies the number of digits to the right of the decimal point; it ranges from 0 through 28.</source>
          <target state="translated">O fator de escala especifica o número de dígitos à direita da vírgula decimal. ele varia de 0 a 28.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>With a scale of 0 (no decimal places), the largest possible value is +/-79,228,162,514,264,337,593,543,950,335 (+/-7.9228162514264337593543950335E+28).</source>
          <target state="translated">Com uma escala de 0 (sem casas decimais), o maior valor possível é + /-79.228.162.514.264.337.593.543.950.335 (+ /-7 .9228162514264337593543950335E + 28).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>With 28 decimal places, the largest value is +/-7.9228162514264337593543950335, and the smallest nonzero value is +/-0.0000000000000000000000000001 (+/-1E-28).</source>
          <target state="translated">Com 28 casas decimais, o maior valor é + /-7.9228162514264337593543950335, e o menor valor diferente de zero é + /-0,0000000000000000000000000001 (+ /-1E-28).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">Comentários</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Decimal`</ph> data type provides the greatest number of significant digits for a number.</source>
          <target state="translated">O <ph id="ph1">`Decimal`</ph> tipo de dados fornece o maior número de dígitos significativos para um número.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It supports up to 29 significant digits and can represent values in excess of 7.9228 x 10^28.</source>
          <target state="translated">Ele oferece suporte a até 29 dígitos significativos e pode representar valores além 7.9228 x 10 ^ 28.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It is particularly suitable for calculations, such as financial, that require a large number of digits but cannot tolerate rounding errors.</source>
          <target state="translated">Ele é particularmente adequado para cálculos, como financeiros, que exigem um grande número de dígitos mas não podem tolerar erros de arredondamento.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The default value of <ph id="ph1">`Decimal`</ph> is 0.</source>
          <target state="translated">O valor padrão de <ph id="ph1">`Decimal`</ph> é 0.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Programming Tips</source>
          <target state="translated">Dicas de programação</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Precision.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Precisão.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Decimal`</ph> is not a floating-point data type.</source>
          <target state="translated"><ph id="ph1">`Decimal`</ph>não é um tipo de dados de ponto flutuante.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Decimal`</ph> structure holds a binary integer value, together with a sign bit and an integer scaling factor that specifies what portion of the value is a decimal fraction.</source>
          <target state="translated">O <ph id="ph1">`Decimal`</ph> estrutura mantém um valor inteiro binário, junto com um bit de sinal e um inteiro de fator de escala que especifica qual parte do valor é uma fração decimal.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Because of this, <ph id="ph1">`Decimal`</ph> numbers have a more precise representation in memory than floating-point types (<ph id="ph2">`Single`</ph> and <ph id="ph3">`Double`</ph>).</source>
          <target state="translated">Por isso, <ph id="ph1">`Decimal`</ph> números têm uma representação mais precisa na memória que tipos de ponto flutuantes (<ph id="ph2">`Single`</ph> e <ph id="ph3">`Double`</ph>).</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Performance.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Desempenho.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Decimal`</ph> data type is the slowest of all the numeric types.</source>
          <target state="translated">O <ph id="ph1">`Decimal`</ph> tipo de dados é o mais lento de todos os tipos numéricos.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You should weigh the importance of precision against performance before choosing a data type.</source>
          <target state="translated">Você deve avaliar a importância da precisão contra o desempenho antes de escolher um tipo de dados.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Widening.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Ampliação.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Decimal`</ph> data type widens to <ph id="ph2">`Single`</ph> or <ph id="ph3">`Double`</ph>.</source>
          <target state="translated">O <ph id="ph1">`Decimal`</ph> tipo de dados amplia a <ph id="ph2">`Single`</ph> ou <ph id="ph3">`Double`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This means you can convert <ph id="ph1">`Decimal`</ph> to either of these types without encountering a &lt;xref:System.OverflowException?displayProperty=fullName&gt; error.</source>
          <target state="translated">Isso significa que você pode converter <ph id="ph1">`Decimal`</ph> para qualquer um desses tipos sem a ocorrência de um &lt;xref:System.OverflowException?displayProperty=fullName&gt;erro.&lt;/xref:System.OverflowException?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Trailing Zeros.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Os Zeros à direita.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Visual Basic does not store trailing zeros in a <ph id="ph1">`Decimal`</ph> literal.</source>
          <target state="translated">Visual Basic não armazena zeros à direita em um <ph id="ph1">`Decimal`</ph> literal.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>However, a <ph id="ph1">`Decimal`</ph> variable preserves any trailing zeros acquired computationally.</source>
          <target state="translated">No entanto, um <ph id="ph1">`Decimal`</ph> variável preserva os zeros à direita adquiridos computacionalmente.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following example illustrates this.</source>
          <target state="translated">O exemplo a seguir ilustra essa situação.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The output of <ph id="ph1">`MsgBox`</ph> in the preceding example is as follows:</source>
          <target state="translated">A saída de <ph id="ph1">`MsgBox`</ph> no exemplo anterior é da seguinte maneira:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>d1 = 2.375, d2 = 1.625, d3 = 4.000, d4 = 4</source>
          <target state="translated">D1 = 2.375, d2 = 1.625, d3 = 4.000, d4 = 4</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Type Characters.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Caracteres de tipo.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Appending the literal type character <ph id="ph1">`D`</ph> to a literal forces it to the <ph id="ph2">`Decimal`</ph> data type.</source>
          <target state="translated">Acrescentar o caractere de tipo literal <ph id="ph1">`D`</ph> a um literal o força ao tipo de dados <ph id="ph2">`Decimal`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Appending the identifier type character <ph id="ph1">`@`</ph> to any identifier forces it to <ph id="ph2">`Decimal`</ph>.</source>
          <target state="translated">Acrescentar o caractere de tipo identificador <ph id="ph1">`@`</ph> a qualquer identificador o força ao tipo <ph id="ph2">`Decimal`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Framework Type.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Tipo de estrutura.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The corresponding type in the .NET Framework is the &lt;xref:System.Decimal?displayProperty=fullName&gt; structure.</source>
          <target state="translated">O tipo correspondente no .NET Framework é o &lt;xref:System.Decimal?displayProperty=fullName&gt;estrutura.&lt;/xref:System.Decimal?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Range</source>
          <target state="translated">Intervalo</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You might need to use the <ph id="ph1">`D`</ph> type character to assign a large value to a <ph id="ph2">`Decimal`</ph> variable or constant.</source>
          <target state="translated">Talvez você precise usar o <ph id="ph1">`D`</ph> tipo de caractere para atribuir um valor grande para uma <ph id="ph2">`Decimal`</ph> variável ou constante.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This requirement is because the compiler interprets a literal as <ph id="ph1">`Long`</ph> unless a literal type character follows the literal, as the following example shows.</source>
          <target state="translated">Esse requisito é porque o compilador interpreta um literal como <ph id="ph1">`Long`</ph> , a menos que um caractere de tipo literal segue o literal, como mostra o exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The declaration for <ph id="ph1">`bigDec1`</ph> doesn't produce an overflow because the value that's assigned to it falls within the range for <ph id="ph2">`Long`</ph>.</source>
          <target state="translated">A declaração <ph id="ph1">`bigDec1`</ph> não produz um overflow porque o valor que é atribuído a ela fica dentro do intervalo de <ph id="ph2">`Long`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Long`</ph> value can be assigned to the <ph id="ph2">`Decimal`</ph> variable.</source>
          <target state="translated">O <ph id="ph1">`Long`</ph> valor pode ser atribuído para a <ph id="ph2">`Decimal`</ph> variável.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The declaration for <ph id="ph1">`bigDec2`</ph> generates an overflow error because the value that's assigned to it is too large for <ph id="ph2">`Long`</ph>.</source>
          <target state="translated">A declaração <ph id="ph1">`bigDec2`</ph> gera um erro de estouro, porque o valor que é atribuído a ele é muito grande para <ph id="ph2">`Long`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Because the numeric literal can't first be interpreted as a <ph id="ph1">`Long`</ph>, it can't be assigned to the <ph id="ph2">`Decimal`</ph> variable.</source>
          <target state="translated">Porque o literal numérico primeiro não pode ser interpretado como um <ph id="ph1">`Long`</ph>, ele não pode ser atribuído para a <ph id="ph2">`Decimal`</ph> variável.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`bigDec3`</ph>, the literal type character <ph id="ph2">`D`</ph> solves the problem by forcing the compiler to interpret the literal as a <ph id="ph3">`Decimal`</ph> instead of as a <ph id="ph4">`Long`</ph>.</source>
          <target state="translated">Para <ph id="ph1">`bigDec3`</ph>, o caractere de tipo literal <ph id="ph2">`D`</ph> resolve o problema, forçando o compilador a interpretar o literal como um <ph id="ph3">`Decimal`</ph> em vez de como um <ph id="ph4">`Long`</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Decimal?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Decimal?displayProperty=fullName&gt;&lt;/xref:System.Decimal?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Decimal.%23ctor%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Decimal.%23ctor%2A?displayProperty=fullName&gt;&lt;/xref:System.Decimal.%23ctor%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Math.Round%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Math.Round%2A?displayProperty=fullName&gt;&lt;/xref:System.Math.Round%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Data Types<ept id="p1">](../../../visual-basic/language-reference/data-types/data-type-summary.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Tipos de dados<ept id="p1">](../../../visual-basic/language-reference/data-types/data-type-summary.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Single Data Type<ept id="p1">](../../../visual-basic/language-reference/data-types/single-data-type.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Tipo de dados Single<ept id="p1">](../../../visual-basic/language-reference/data-types/single-data-type.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Double Data Type<ept id="p1">](../../../visual-basic/language-reference/data-types/double-data-type.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Tipo de dados Double<ept id="p1">](../../../visual-basic/language-reference/data-types/double-data-type.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Type Conversion Functions<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Funções de conversão de tipo<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Conversion Summary<ept id="p1">](../../../visual-basic/language-reference/keywords/conversion-summary.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Resumo da conversão<ept id="p1">](../../../visual-basic/language-reference/keywords/conversion-summary.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Efficient Use of Data Types<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Uso Eficiente de Tipos de Dados<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>