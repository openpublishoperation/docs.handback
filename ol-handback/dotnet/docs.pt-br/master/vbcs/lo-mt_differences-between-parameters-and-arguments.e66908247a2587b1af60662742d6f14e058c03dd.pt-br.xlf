<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">409fbfffb2fcd616da76544b6a66eda5838d8983</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\procedures\differences-between-parameters-and-arguments.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d9470a6545f0b196676b7d0aa805b2c04622ce9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c97ee792b6ff9c82e47cefa366b476542b0d531</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Differences Between Parameters and Arguments (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Diferenças entre parâmetros e argumentos (Visual Basic) | Documentos do Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Differences Between Parameters and Arguments (Visual Basic)</source>
          <target state="translated">Diferenças entre parâmetros e argumentos (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In most cases, a procedure must have some information about the circumstances in which it has been called.</source>
          <target state="translated">Na maioria dos casos, um procedimento deve ter algumas informações sobre as circunstâncias em que ele foi chamado.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A procedure that performs repeated or shared tasks uses different information for each call.</source>
          <target state="translated">Um procedimento que executa tarefas repetidas ou compartilhadas usa informações diferentes para cada chamada.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This information consists of variables, constants, and expressions that you pass to the procedure when you call it.</source>
          <target state="translated">Essas informações consistem em variáveis, constantes e expressões que você passa para o procedimento quando chamá-lo.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To communicate this information to the procedure, the procedure defines a <bpt id="p1">*</bpt>parameter<ept id="p1">*</ept>, and the calling code passes an <bpt id="p2">*</bpt>argument<ept id="p2">*</ept> to that parameter.</source>
          <target state="translated">Para se comunicar essas informações para o procedimento, o procedimento define uma <bpt id="p1">*</bpt>parâmetro<ept id="p1">*</ept>, e o código de chamada passa um <bpt id="p2">*</bpt>argumento<ept id="p2">*</ept> para esse parâmetro.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can think of the parameter as a parking space and the argument as an automobile.</source>
          <target state="translated">Você pode considerar o parâmetro como um espaço de estacionamento e o argumento de um automóvel.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Just as different automobiles can park in a parking space at different times, the calling code can pass a different argument to the same parameter every time that it calls the procedure.</source>
          <target state="translated">Assim como automóveis diferentes podem estaciono em um espaço de estacionamento em momentos diferentes, o código de chamada pode passar um argumento diferente para o mesmo parâmetro toda vez que ele chama o procedimento.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parâmetros</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>parameter<ept id="p1">*</ept> represents a value that the procedure expects you to pass when you call it.</source>
          <target state="translated">A <bpt id="p1">*</bpt>parâmetro<ept id="p1">*</ept> representa um valor que o procedimento espera que você passe quando você chamá-lo.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The procedure's declaration defines its parameters.</source>
          <target state="translated">Declaração do procedimento define seus parâmetros.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you define a <ph id="ph1">`Function`</ph> or <ph id="ph2">`Sub`</ph> procedure, you specify a <bpt id="p1">*</bpt>parameter list<ept id="p1">*</ept> in parentheses immediately following the procedure name.</source>
          <target state="translated">Quando você define uma <ph id="ph1">`Function`</ph> ou <ph id="ph2">`Sub`</ph> procedimento, você especificar um <bpt id="p1">*</bpt>lista de parâmetros<ept id="p1">*</ept> entre parênteses imediatamente após o nome do procedimento.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For each parameter, you specify a name, a data type, and a passing mechanism (<bpt id="p1">[</bpt>ByVal<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byval.md)</ept> or <bpt id="p2">[</bpt>ByRef<ept id="p2">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept>).</source>
          <target state="translated">Para cada parâmetro, você especificar um nome, um tipo de dados e um mecanismo de passagem (<bpt id="p1">[</bpt>ByVal<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byval.md)</ept> ou <bpt id="p2">[</bpt>ByRef<ept id="p2">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept>).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can also indicate that a parameter is optional.</source>
          <target state="translated">Você também pode indicar que um parâmetro é opcional.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This means that the calling code does not have to pass a value for it.</source>
          <target state="translated">Isso significa que o código de chamada não precisa passar um valor para ela.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The name of each parameter serves as a <bpt id="p1">*</bpt>local variable<ept id="p1">*</ept> in the procedure.</source>
          <target state="translated">O nome de cada parâmetro serve como um <bpt id="p1">*</bpt>variável local<ept id="p1">*</ept> no procedimento.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You use the parameter name the same way you use any other variable.</source>
          <target state="translated">Você usar o nome do parâmetro da mesma maneira que você usar qualquer outra variável.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">*</bpt>argument<ept id="p1">*</ept> represents the value that you pass to a procedure parameter when you call the procedure.</source>
          <target state="translated">Um <bpt id="p1">*</bpt>argumento<ept id="p1">*</ept> representa o valor que você passa para um parâmetro de procedimento quando você chamar o procedimento.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The calling code supplies the arguments when it calls the procedure.</source>
          <target state="translated">O código de chamada fornece os argumentos quando ele chama o procedimento.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When you call a <ph id="ph1">`Function`</ph> or <ph id="ph2">`Sub`</ph> procedure, you include an <bpt id="p1">*</bpt>argument list<ept id="p1">*</ept> in parentheses immediately following the procedure name.</source>
          <target state="translated">Quando você chama um <ph id="ph1">`Function`</ph> ou <ph id="ph2">`Sub`</ph> procedimento, você incluir um <bpt id="p1">*</bpt>lista de argumentos<ept id="p1">*</ept> entre parênteses imediatamente após o nome do procedimento.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Each argument corresponds to the parameter in the same position in the list.</source>
          <target state="translated">Cada argumento corresponde ao parâmetro na mesma posição na lista.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In contrast to parameter definition, arguments do not have names.</source>
          <target state="translated">Em contraste com a definição do parâmetro, argumentos não têm nomes.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Each argument is an expression, which can contain zero or more variables, constants, and literals.</source>
          <target state="translated">Cada argumento é uma expressão, que pode conter zero ou mais variáveis, constantes e literais.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The data type of the evaluated expression should typically match the data type defined for the corresponding parameter, and in any case it must be convertible to the parameter type.</source>
          <target state="translated">O tipo de dados da expressão avaliada normalmente deve corresponder ao tipo de dados definido para o parâmetro correspondente e, em qualquer caso deve ser conversível para o tipo de parâmetro.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Procedures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Procedimentos<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Sub Procedures<ept id="p1">](./sub-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procedimentos Sub<ept id="p1">](./sub-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Function Procedures<ept id="p1">](./function-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procedimentos de função<ept id="p1">](./function-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Property Procedures<ept id="p1">](./property-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procedimentos de propriedade<ept id="p1">](./property-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operator Procedures<ept id="p1">](./operator-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procedimentos de operador<ept id="p1">](./operator-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Define a Parameter for a Procedure<ept id="p1">](./how-to-define-a-parameter-for-a-procedure.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Como: definir um parâmetro para um procedimento<ept id="p1">](./how-to-define-a-parameter-for-a-procedure.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Pass Arguments to a Procedure<ept id="p1">](./how-to-pass-arguments-to-a-procedure.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Como: passar argumentos para um procedimento<ept id="p1">](./how-to-pass-arguments-to-a-procedure.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Passing Arguments by Value and by Reference<ept id="p1">](./passing-arguments-by-value-and-by-reference.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Passando argumentos por valor e por referência<ept id="p1">](./passing-arguments-by-value-and-by-reference.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Recursive Procedures<ept id="p1">](./recursive-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procedimentos recursivos<ept id="p1">](./recursive-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Overloading<ept id="p1">](./procedure-overloading.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Sobrecarga de Procedimento<ept id="p1">](./procedure-overloading.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>