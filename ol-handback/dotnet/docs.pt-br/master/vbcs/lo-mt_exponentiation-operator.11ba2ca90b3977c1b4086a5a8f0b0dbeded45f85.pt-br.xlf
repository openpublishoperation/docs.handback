<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">937d6e4391569f67ccf311c8045415054d6d4f77</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\operators\exponentiation-operator.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53a89d47107e60823701b8c411982205838311a6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e75e9a53e4f3e43031bf643ff74a76fed369f14a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>^ Operator (Visual Basic) | Microsoft Docs</source>
          <target state="translated">^ Operador (Visual Basic) | Documentos do Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>^ Operator (Visual Basic)</source>
          <target state="translated">Operador ^ (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Raises a number to the power of another number.</source>
          <target state="translated">Eleva um número à potência de outro número.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Sintaxe</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">Partes</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Any numeric expression.</source>
          <target state="translated">Qualquer expressão numérica.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Any numeric expression.</source>
          <target state="translated">Qualquer expressão numérica.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">Resultado</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The result is <ph id="ph1">`number`</ph> raised to the power of <ph id="ph2">`exponent`</ph>, always as a <ph id="ph3">`Double`</ph> value.</source>
          <target state="translated">O resultado é <ph id="ph1">`number`</ph> elevado à potência de <ph id="ph2">`exponent`</ph>, sempre que um <ph id="ph3">`Double`</ph> valor.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Supported Types</source>
          <target state="translated">Tipos com suporte</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Double`</ph>.</source>
          <target state="translated"><ph id="ph1">`Double`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Operands of any different type are converted to <ph id="ph1">`Double`</ph>.</source>
          <target state="translated">Os operandos de qualquer outro tipo são convertidos em <ph id="ph1">`Double`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">Comentários</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Visual Basic always performs exponentiation in the <bpt id="p1">[</bpt>Double Data Type<ept id="p1">](../../../visual-basic/language-reference/data-types/double-data-type.md)</ept>.</source>
          <target state="translated">Visual Basic sempre executa exponenciação no <bpt id="p1">[</bpt>tipo de dados Double<ept id="p1">](../../../visual-basic/language-reference/data-types/double-data-type.md)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The value of <ph id="ph1">`exponent`</ph> can be fractional, negative, or both.</source>
          <target state="translated">O valor de <ph id="ph1">`exponent`</ph> pode ser fracionário, negativo, ou ambos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When more than one exponentiation is performed in a single expression, the <ph id="ph1">`^`</ph> operator is evaluated as it is encountered from left to right.</source>
          <target state="translated">Quando mais de uma exponenciação for realizada em uma única expressão, o <ph id="ph1">`^`</ph> operador é avaliado como ele é encontrado da esquerda para a direita.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`^`</ph> operator can be <bpt id="p1">*</bpt>overloaded<ept id="p1">*</ept>, which means that a class or structure can redefine its behavior when an operand has the type of that class or structure.</source>
          <target state="translated">O <ph id="ph1">`^`</ph> operador pode ser <bpt id="p1">*</bpt>sobrecarregado<ept id="p1">*</ept>, que significa que uma classe ou estrutura pode redefinir seu comportamento quando um operando tem o tipo de classe ou estrutura.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If your code uses this operator on such a class or structure, be sure you understand its redefined behavior.</source>
          <target state="translated">Se seu código usa esse operador em uma classe ou estrutura, certifique-se de que você entende seu comportamento redefinido.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Operator Procedures<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>procedimentos de operador<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Exemplo</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`^`</ph> operator to raise a number to the power of an exponent.</source>
          <target state="translated">O exemplo a seguir usa o <ph id="ph1">`^`</ph> operador para elevar um número à potência de um expoente.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The result is the first operand raised to the power of the second.</source>
          <target state="translated">O resultado é o primeiro operando elevado à potência da segunda.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOperators#20<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/exponentiation-operator_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>20 VbVbalrOperators<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/exponentiation-operator_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The preceding example produces the following results:</source>
          <target state="translated">O exemplo anterior produz os seguintes resultados:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`exp1`</ph> is set to 4 (2 squared).</source>
          <target state="translated"><ph id="ph1">`exp1`</ph>é definido como 4 (2 ao quadrado).</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`exp2`</ph> is set to 19683 (3 cubed, then that value cubed).</source>
          <target state="translated"><ph id="ph1">`exp2`</ph>é definido como 19683 (3 ao cubo, em seguida, esse valor ao cubo).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`exp3`</ph> is set to -125 (-5 cubed).</source>
          <target state="translated"><ph id="ph1">`exp3`</ph>é definido como -125 (-5 cúbico).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`exp4`</ph> is set to 625 (-5 to the fourth power).</source>
          <target state="translated"><ph id="ph1">`exp4`</ph>é definido como 625 (-5 o quarto de energia).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`exp5`</ph> is set to 2 (cube root of 8).</source>
          <target state="translated"><ph id="ph1">`exp5`</ph>é definido como 2 (raiz cúbica de 8).</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`exp6`</ph> is set to 0.5 (1.0 divided by the cube root of 8).</source>
          <target state="translated"><ph id="ph1">`exp6`</ph>é definido como 0,5 (1.0 dividido pela raiz cúbica de 8).</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Note the importance of the parentheses in the expressions in the preceding example.</source>
          <target state="translated">Observe a importância dos parênteses em expressões no exemplo anterior.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Because of <bpt id="p1">*</bpt>operator precedence<ept id="p1">*</ept>, Visual Basic normally performs the <ph id="ph1">`^`</ph> operator before any others, even the unary <ph id="ph2">`–`</ph> operator.</source>
          <target state="translated">Por causa da <bpt id="p1">*</bpt>precedência do operador<ept id="p1">*</ept>, Visual Basic normalmente executa o <ph id="ph1">`^`</ph> operador antes de qualquer outro, mesmo que o operador unário <ph id="ph2">`–`</ph> operador.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`exp4`</ph> and <ph id="ph2">`exp6`</ph> had been calculated without parentheses, they would have produced the following results:</source>
          <target state="translated">Se <ph id="ph1">`exp4`</ph> e <ph id="ph2">`exp6`</ph> tinha sido calculados sem parênteses, deve ter produzido os seguintes resultados:</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`exp4 = -5 ^ 4`</ph> would be calculated as –(5 to the fourth power), which would result in -625.</source>
          <target state="translated"><ph id="ph1">`exp4 = -5 ^ 4`</ph>será calculado como – (5 o quarto de energia), que resultaria em-625.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`exp6 = 8 ^ -1.0 / 3.0`</ph> would be calculated as (8 to the –1 power, or 0.125) divided by 3.0, which would result in 0.041666666666666666666666666666667.</source>
          <target state="translated"><ph id="ph1">`exp6 = 8 ^ -1.0 / 3.0`</ph>será calculado como (8 a potência de-1 ou 0,125) dividido por 3.0, o que resultaria em 0.041666666666666666666666666666667.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>^= Operator<ept id="p1">](../../../visual-basic/language-reference/operators/exponentiation-assignment-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>^ = Operador<ept id="p1">](../../../visual-basic/language-reference/operators/exponentiation-assignment-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Arithmetic Operators<ept id="p1">](../../../visual-basic/language-reference/operators/arithmetic-operators.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Operadores aritméticos<ept id="p1">](../../../visual-basic/language-reference/operators/arithmetic-operators.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operator Precedence in Visual Basic<ept id="p1">](../../../visual-basic/language-reference/operators/operator-precedence.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Precedência do operador no Visual Basic<ept id="p1">](../../../visual-basic/language-reference/operators/operator-precedence.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operators Listed by Functionality<ept id="p1">](../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Operadores listados por funcionalidade<ept id="p1">](../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Arithmetic Operators in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/arithmetic-operators.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Operadores aritméticos em Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/arithmetic-operators.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>