<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8bb8c592e35e7cfb2965a51e035e39e59a4209d6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\operators\isfalse-operator.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f847a22cbdeadfbc607cf593b79cb20d6935f505</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">513b00af069c037881d58bc0d0568998baa2efb2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>IsFalse Operator (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Operador IsFalse (Visual Basic) | Documentos do Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>IsFalse Operator (Visual Basic)</source>
          <target state="translated">Operador IsFalse (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Determines whether an expression is <ph id="ph1">`False`</ph>.</source>
          <target state="translated">Determina se uma expressão é <ph id="ph1">`False`</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You cannot call <ph id="ph1">`IsFalse`</ph> explicitly in your code, but the Visual Basic compiler can use it to generate code from <ph id="ph2">`AndAlso`</ph> clauses.</source>
          <target state="translated">Não é possível chamar <ph id="ph1">`IsFalse`</ph> explicitamente no seu código, mas o Visual Basic compilador pode usá-lo para gerar código de <ph id="ph2">`AndAlso`</ph> cláusulas.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If you define a class or structure and then use a variable of that type in an <ph id="ph1">`AndAlso`</ph> clause, you must define <ph id="ph2">`IsFalse`</ph> on that class or structure.</source>
          <target state="translated">Se você definir uma classe ou estrutura e, em seguida, usar uma variável desse tipo em uma <ph id="ph1">`AndAlso`</ph> cláusula, você deve definir <ph id="ph2">`IsFalse`</ph> na classe ou estrutura.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The compiler considers the <ph id="ph1">`IsFalse`</ph> and <ph id="ph2">`IsTrue`</ph> operators as a <bpt id="p1">*</bpt>matched pair<ept id="p1">*</ept>.</source>
          <target state="translated">O compilador considera o <ph id="ph1">`IsFalse`</ph> e <ph id="ph2">`IsTrue`</ph> operadores como um <bpt id="p1">*</bpt>par correspondente<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This means that if you define one of them, you must also define the other one.</source>
          <target state="translated">Isso significa que se você definir um deles, você deve também definir o outro.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`IsFalse`</ph> operator can be <bpt id="p1">*</bpt>overloaded<ept id="p1">*</ept>, which means that a class or structure can redefine its behavior when its operand has the type of that class or structure.</source>
          <target state="translated">O <ph id="ph1">`IsFalse`</ph> operador pode ser <bpt id="p1">*</bpt>sobrecarregado<ept id="p1">*</ept>, que significa que uma classe ou estrutura pode redefinir seu comportamento quando seu operando tem o tipo da classe ou estrutura.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If your code uses this operator on such a class or structure, be sure you understand its redefined behavior.</source>
          <target state="translated">Se seu código usa esse operador em uma classe ou estrutura, certifique-se de que você entende seu comportamento redefinido.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Operator Procedures<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>procedimentos de operador<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Exemplo</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following code example defines the outline of a structure that includes definitions for the <ph id="ph1">`IsFalse`</ph> and <ph id="ph2">`IsTrue`</ph> operators.</source>
          <target state="translated">O exemplo de código a seguir define o contorno de uma estrutura que inclui as definições para o <ph id="ph1">`IsFalse`</ph> e <ph id="ph2">`IsTrue`</ph> operadores.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOperators#28<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/isfalse-operator_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOperators&amp;#28;<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/isfalse-operator_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IsTrue Operator<ept id="p1">](../../../visual-basic/language-reference/operators/istrue-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Operador IsTrue<ept id="p1">](../../../visual-basic/language-reference/operators/istrue-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Define an Operator<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Como: definir um operador<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>AndAlso Operator<ept id="p1">](../../../visual-basic/language-reference/operators/andalso-operator.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Operador AndAlso<ept id="p1">](../../../visual-basic/language-reference/operators/andalso-operator.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>