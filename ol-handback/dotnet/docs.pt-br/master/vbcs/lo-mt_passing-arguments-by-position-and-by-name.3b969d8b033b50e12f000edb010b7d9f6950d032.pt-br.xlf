<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f7e64fabca2214aeb0d55ae7cbddf9a6c25d9d8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\procedures\passing-arguments-by-position-and-by-name.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">66a8a7998bbc38f282fd98e90a03fd2d6317dc90</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ed44f5ae2080238ffa567d47fee88f9b679979b7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Passing Arguments by Position and by Name (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Passando argumentos por posição e nome (Visual Basic) | Documentos do Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Passing Arguments by Position and by Name (Visual Basic)</source>
          <target state="translated">Passando argumentos por posição e nome (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When you call a <ph id="ph1">`Sub`</ph> or <ph id="ph2">`Function`</ph> procedure, you can pass arguments <bpt id="p1">*</bpt>by position<ept id="p1">*</ept> — in the order in which they appear in the procedure's definition — or you can pass them <bpt id="p2">*</bpt>by name<ept id="p2">*</ept>, without regard to position.</source>
          <target state="translated">Quando você chama um <ph id="ph1">`Sub`</ph> ou <ph id="ph2">`Function`</ph> procedimento, você pode passar argumentos <bpt id="p1">*</bpt>por posição<ept id="p1">*</ept> — na ordem em que aparecem na definição do procedimento — ou você pode passá-los <bpt id="p2">*</bpt>por nome<ept id="p2">*</ept>, independentemente da posição.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When you pass an argument by name, you specify the argument's declared name followed by a colon and an equal sign (<ph id="ph1">`:=`</ph>), followed by the argument value.</source>
          <target state="translated">Quando você passa um argumento pelo nome, especifique o argumento declarado do nome seguido por dois-pontos e um sinal de igual (<ph id="ph1">`:=`</ph>), seguido pelo valor do argumento.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can supply named arguments in any order.</source>
          <target state="translated">Você pode fornecer argumentos nomeados em qualquer ordem.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, the following <ph id="ph1">`Sub`</ph> procedure takes three arguments:</source>
          <target state="translated">Por exemplo, a seguinte <ph id="ph1">`Sub`</ph> procedimento utiliza três argumentos:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#41<ept id="p2">](./codesnippet/VisualBasic/passing-arguments-by-position-and-by-name_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>41 VbVbcnProcedures<ept id="p2">](./codesnippet/VisualBasic/passing-arguments-by-position-and-by-name_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When you call this procedure, you can supply the arguments by position, by name, or by using a mixture of both.</source>
          <target state="translated">Quando você chamar esse procedimento, você pode fornecer os argumentos por posição, por nome ou usando uma mistura de ambos.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Passing Arguments by Position</source>
          <target state="translated">Passando argumentos por posição</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can call the procedure <ph id="ph1">`studentInfo`</ph> with its arguments passed by position and delimited by commas, as shown in the following example:</source>
          <target state="translated">Você pode chamar o procedimento <ph id="ph1">`studentInfo`</ph> com seus argumentos passados por posição e delimitados por vírgulas, como mostrado no exemplo a seguir:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#42<ept id="p2">](./codesnippet/VisualBasic/passing-arguments-by-position-and-by-name_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;42;<ept id="p2">](./codesnippet/VisualBasic/passing-arguments-by-position-and-by-name_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you omit an optional argument in a positional argument list, you must hold its place with a comma.</source>
          <target state="translated">Se você omitir um argumento opcional em uma lista de argumentos posicionais, você deve manter seu lugar com uma vírgula.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following example calls <ph id="ph1">`studentInfo`</ph> without the <ph id="ph2">`age`</ph> argument:</source>
          <target state="translated">A exemplo a seguir chama <ph id="ph1">`studentInfo`</ph> sem o <ph id="ph2">`age`</ph> argumento:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#43<ept id="p2">](./codesnippet/VisualBasic/passing-arguments-by-position-and-by-name_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#43;<ept id="p2">](./codesnippet/VisualBasic/passing-arguments-by-position-and-by-name_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Passing Arguments by Name</source>
          <target state="translated">Passando argumentos por nome</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Alternatively, you can call <ph id="ph1">`studentInfo`</ph> with the arguments passed by name, also delimited by commas, as shown in the following example:</source>
          <target state="translated">Como alternativa, você pode chamar <ph id="ph1">`studentInfo`</ph> com os argumentos passados pelo nome, também delimitado por vírgulas, como mostrado no exemplo a seguir:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#44<ept id="p2">](./codesnippet/VisualBasic/passing-arguments-by-position-and-by-name_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#44;<ept id="p2">](./codesnippet/VisualBasic/passing-arguments-by-position-and-by-name_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Mixing Arguments by Position and by Name</source>
          <target state="translated">Misturando argumentos por posição e nome</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can supply arguments both by position and by name in a single procedure call, as shown in the following example:</source>
          <target state="translated">Você pode fornecer argumentos por posição e por nome em uma única chamada de procedimento, conforme mostrado no exemplo a seguir:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#45<ept id="p2">](./codesnippet/VisualBasic/passing-arguments-by-position-and-by-name_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>45 VbVbcnProcedures<ept id="p2">](./codesnippet/VisualBasic/passing-arguments-by-position-and-by-name_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In the preceding example, no extra comma is necessary to hold the place of the omitted <ph id="ph1">`age`</ph> argument, since <ph id="ph2">`birth`</ph> is passed by name.</source>
          <target state="translated">No exemplo anterior, nenhuma vírgula extra é necessária para manter o lugar do omitido <ph id="ph1">`age`</ph> argumento, uma vez que <ph id="ph2">`birth`</ph> é passado por nome.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When you supply arguments by a mixture of position and name, the positional arguments must all come first.</source>
          <target state="translated">Quando você fornecer argumentos por uma mistura de posição e nome, os argumentos posicionais devem todos vir primeiro.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Once you supply an argument by name, the remaining arguments must all be by name.</source>
          <target state="translated">Depois que você fornecer um argumento pelo nome, os argumentos restantes devem ser todos por nome.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Supplying Optional Arguments by Name</source>
          <target state="translated">Fornecendo argumentos opcionais por nome</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Passing arguments by name is especially useful when you call a procedure that has more than one optional argument.</source>
          <target state="translated">Passando argumentos por nome é especialmente útil quando você chama um procedimento que tem mais de um argumento opcional.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If you supply arguments by name, you do not have to use consecutive commas to denote missing positional arguments.</source>
          <target state="translated">Se você fornecer argumentos pelo nome, você não precisa usar vírgulas consecutivas para indicar argumentos posicionais ausentes.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Passing arguments by name also makes it easier to keep track of which arguments you are passing and which ones you are omitting.</source>
          <target state="translated">Passando argumentos por nome também facilita manter controle de quais argumentos você está passando e quais você está omitindo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Restrictions on Supplying Arguments by Name</source>
          <target state="translated">Restrições no fornecimento de argumentos por nome</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You cannot pass arguments by name to avoid entering required arguments.</source>
          <target state="translated">Você não pode passar argumentos pelo nome para evitar digitar argumentos necessários.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can omit only the optional arguments.</source>
          <target state="translated">Você pode omitir somente os argumentos opcionais.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You cannot pass a parameter array by name.</source>
          <target state="translated">Você não pode passar uma matriz de parâmetros por nome.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This is because when you call the procedure, you supply an indefinite number of comma-separated arguments for the parameter array, and the compiler cannot associate more than one argument with a single name.</source>
          <target state="translated">Isso ocorre porque quando você chama o procedimento, você fornece um número indefinido de argumentos separados por vírgula para a matriz de parâmetros e o compilador não pode associar mais de um argumento com um único nome.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Procedures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Procedimentos<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Parameters and Arguments<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Argumentos e parâmetros de procedimento<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Pass Arguments to a Procedure<ept id="p1">](./how-to-pass-arguments-to-a-procedure.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Como: passar argumentos para um procedimento<ept id="p1">](./how-to-pass-arguments-to-a-procedure.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Passing Arguments by Value and by Reference<ept id="p1">](./passing-arguments-by-value-and-by-reference.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Passando argumentos por valor e por referência<ept id="p1">](./passing-arguments-by-value-and-by-reference.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Optional Parameters<ept id="p1">](./optional-parameters.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Parâmetros opcionais<ept id="p1">](./optional-parameters.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Parameter Arrays<ept id="p1">](./parameter-arrays.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Matrizes de parâmetros<ept id="p1">](./parameter-arrays.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Optional<ept id="p1">](../../../../visual-basic/language-reference/modifiers/optional.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Opcional<ept id="p1">](../../../../visual-basic/language-reference/modifiers/optional.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ParamArray<ept id="p1">](../../../../visual-basic/language-reference/modifiers/paramarray.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>ParamArray<ept id="p1">](../../../../visual-basic/language-reference/modifiers/paramarray.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>