<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48f1c5e15654580b6e4d060860a0d7001af5e2ef</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\writing-your-first-linq-query.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e792fa9816f1745f047873457d55c13f82ffcba</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53fca02591400fbdd4a61e27e67bbe5a11f35068</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Writing Your First LINQ Query (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Escrevendo a primeira consulta LINQ (Visual Basic) | Documentos do Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Writing Your First LINQ Query (Visual Basic)</source>
          <target state="translated">Escrevendo a primeira consulta LINQ (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>query<ept id="p1">*</ept> is an expression that retrieves data from a data source.</source>
          <target state="translated">A <bpt id="p1">*</bpt>consulta<ept id="p1">*</ept> é uma expressão que recupera dados de uma fonte de dados.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Queries are expressed in a dedicated query language.</source>
          <target state="translated">Consultas são expressas em uma linguagem de consulta dedicado.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Over time, different languages have been developed for different types of data sources, for example, SQL for relational databases and XQuery for XML.</source>
          <target state="translated">Ao longo do tempo, diferentes idiomas foram desenvolvidos para diferentes tipos de fontes de dados, por exemplo, SQL para bancos de dados relacionais e o XQuery para XML.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This makes it necessary for the application developer to learn a new query language for each type of data source or data format that is supported.</source>
          <target state="translated">Isso torna necessária para o desenvolvedor de aplicativos aprender uma nova linguagem de consulta para cada tipo de fonte de dados ou formato de dados que tem suporte.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbteclinqext](../../../../csharp/getting-started/includes/vbteclinqext_md.md)]</ph> simplifies the situation by offering a consistent model for working with data across various kinds of data sources and formats.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbteclinqext](../../../../csharp/getting-started/includes/vbteclinqext_md.md)]</ph>simplifica a situação, oferecendo um modelo consistente para trabalhar com dados em vários tipos de fontes de dados e formatos.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In a <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> query, you are always working with objects.</source>
          <target state="translated">Em um <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> consulta, está sempre trabalhando com objetos.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You use the same basic coding patterns to query and transform data in XML documents, SQL databases, ADO.NET datasets and entities, .NET Framework collections, and any other source or format for which a <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> provider is available.</source>
          <target state="translated">Use os mesmos padrões de codificação básicos para consultar e transformar dados em documentos XML, bancos de dados SQL, datasets ADO.NET e entidades, coleções do .NET Framework e outra fonte ou formato para o qual um <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> provedor está disponível.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This document describes the three phases of the creation and use of basic <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> queries.</source>
          <target state="translated">Este documento descreve as três fases da criação e uso do basic <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> consultas.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Three Stages of a Query Operation</source>
          <target state="translated">Três Estágios de uma Operação de Consulta</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> query operations consist of three actions:</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph>operações de consulta consiste em três ações:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Obtain the data source or sources.</source>
          <target state="translated">Obter a fonte de dados ou fontes.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Create the query.</source>
          <target state="translated">Crie a consulta.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Execute the query.</source>
          <target state="translated">Execute a consulta.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph>, the execution of a query is distinct from the creation of the query.</source>
          <target state="translated">Em <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph>, a execução de uma consulta é diferente da criação da consulta.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You do not retrieve any data just by creating a query.</source>
          <target state="translated">Você não recuperar os dados apenas criando uma consulta.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This point is discussed in more detail later in this topic.</source>
          <target state="translated">Esse ponto é abordado em mais detalhes posteriormente neste tópico.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following example illustrates the three parts of a query operation.</source>
          <target state="translated">O exemplo a seguir ilustra as três partes de uma operação de consulta.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The example uses an array of integers as a convenient data source for demonstration purposes.</source>
          <target state="translated">O exemplo usa uma matriz de inteiros como uma fonte de dados conveniente para fins de demonstração.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>However, the same concepts also apply to other data sources.</source>
          <target state="translated">No entanto, os mesmos conceitos também se aplicam a outras fontes de dados.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">[</bpt>Compile Page, Project Designer (Visual Basic)<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/compile-page-project-designer-visual-basic)</ept>, ensure that <bpt id="p2">**</bpt>Option infer<ept id="p2">**</ept> is set to <bpt id="p3">**</bpt>On<ept id="p3">**</ept>.</source>
          <target state="translated">Sobre o <bpt id="p1">[</bpt>página de compilação, Project Designer (Visual Basic)<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/compile-page-project-designer-visual-basic)</ept>, certifique-se de que <bpt id="p2">**</bpt>Option infer<ept id="p2">**</ept> é definido como <bpt id="p3">**</bpt>em<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbLINQFirstQuery#1<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/writing-your-first-linq-query_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbLINQFirstQuery n º&amp;1;<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/writing-your-first-linq-query_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Saída:</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The Data Source</source>
          <target state="translated">A Fonte de Dados</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Because the data source in the previous example is an array, it implicitly supports the generic &lt;xref:System.Collections.Generic.IEnumerable%601&gt; interface.</source>
          <target state="translated">Como a fonte de dados no exemplo anterior é uma matriz, implicitamente suporta genérica &lt;xref:System.Collections.Generic.IEnumerable%601&gt;interface.&lt;/xref:System.Collections.Generic.IEnumerable%601&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It is this fact that enables you to use an array as a data source for a <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> query.</source>
          <target state="translated">É esse fato que permite que você use uma matriz como uma fonte de dados para um <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> consulta.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Types that support &lt;xref:System.Collections.Generic.IEnumerable%601&gt; or a derived interface such as the generic &lt;xref:System.Linq.IQueryable%601&gt; are called <bpt id="p1">*</bpt>queryable types<ept id="p1">*</ept>.</source>
          <target state="translated">Tipos que oferecem suporte a &lt;xref:System.Collections.Generic.IEnumerable%601&gt;ou uma interface derivada como genérica &lt;xref:System.Linq.IQueryable%601&gt;são chamados <bpt id="p1">*</bpt>tipos consultáveis<ept id="p1">*</ept>.&lt;/xref:System.Linq.IQueryable%601&gt; &lt;/xref:System.Collections.Generic.IEnumerable%601&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>As an implicitly queryable type, the array requires no modification or special treatment to serve as a <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> data source.</source>
          <target state="translated">Como um tipo que podem ser consultado implicitamente, a matriz não requer modificação ou tratamento especial para servir como um <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> fonte de dados.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The same is true for any collection type that supports &lt;xref:System.Collections.Generic.IEnumerable%601&gt;, including the generic &lt;xref:System.Collections.Generic.List%601&gt;, &lt;xref:System.Collections.Generic.Dictionary%602&gt;, and other classes in the .NET Framework class library.</source>
          <target state="translated">O mesmo é verdadeiro para qualquer tipo de coleção que oferece suporte a &lt;xref:System.Collections.Generic.IEnumerable%601&gt;, incluindo genérica &lt;xref:System.Collections.Generic.List%601&gt;, &lt;xref:System.Collections.Generic.Dictionary%602&gt;e outras classes na biblioteca de classes do .NET Framework.&lt;/xref:System.Collections.Generic.Dictionary%602&gt; &lt;/xref:System.Collections.Generic.List%601&gt; &lt;/xref:System.Collections.Generic.IEnumerable%601&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If the source data does not already implement &lt;xref:System.Collections.Generic.IEnumerable%601&gt;, a <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> provider is needed to implement the functionality of the <bpt id="p1">*</bpt>standard query operators<ept id="p1">*</ept> for that data source.</source>
          <target state="translated">Se os dados de origem já não implementam &lt;xref:System.Collections.Generic.IEnumerable%601&gt;, um <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> provedor é necessário para implementar a funcionalidade do <bpt id="p1">*</bpt>operadores de consulta padrão<ept id="p1">*</ept> nessa fonte de dados.&lt;/xref:System.Collections.Generic.IEnumerable%601&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> handles the work of loading an XML document into a queryable &lt;xref:System.Xml.Linq.XElement&gt; type, as shown in the following example.</source>
          <target state="translated">Por exemplo, <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> manipula o trabalho de carregamento de um documento XML em um que podem ser consultados &lt;xref:System.Xml.Linq.XElement&gt;tipo, conforme mostrado no exemplo a seguir.&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more information about standard query operators, see <bpt id="p1">[</bpt>Standard Query Operators Overview (Visual Basic)<ept id="p1">](standard-query-operators-overview.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre operadores de consulta padrão, consulte <bpt id="p1">[</bpt>Standard Query Operators Overview (Visual Basic)<ept id="p1">](standard-query-operators-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbLINQFirstQuery#2<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/writing-your-first-linq-query_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbLINQFirstQuery n º&amp;2;<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/writing-your-first-linq-query_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>With <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../csharp/includes/vbtecdlinq_md.md)]</ph>, you first create an object-relational mapping at design time, either manually or by using the <bpt id="p1">[</bpt>LINQ to SQL Tools in Visual Studio<ept id="p1">](https://docs.microsoft.com/visualstudio/data-tools/linq-to-sql-tools-in-visual-studio2)</ept> in Visual Studio.</source>
          <target state="translated">Com <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../csharp/includes/vbtecdlinq_md.md)]</ph>, primeiro você deve criar um mapeamento relacional de objeto em tempo de design, manualmente ou usando o <bpt id="p1">[</bpt>LINQ to SQL Tools no Visual Studio<ept id="p1">](https://docs.microsoft.com/visualstudio/data-tools/linq-to-sql-tools-in-visual-studio2)</ept> no Visual Studio.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You write your queries against the objects, and at run-time <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../csharp/includes/vbtecdlinq_md.md)]</ph> handles the communication with the database.</source>
          <target state="translated">Você escrever suas consultas em relação os objetos e em tempo de execução <ph id="ph1">[!INCLUDE[vbtecdlinq](../../../../csharp/includes/vbtecdlinq_md.md)]</ph> gerencia a comunicação com o banco de dados.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>In the following example, <ph id="ph1">`customers`</ph> represents a specific table in the database, and &lt;xref:System.Data.Linq.Table%601&gt; supports generic &lt;xref:System.Linq.IQueryable%601&gt;.</source>
          <target state="translated">No exemplo a seguir, <ph id="ph1">`customers`</ph> representa uma tabela específica no banco de dados e &lt;xref:System.Data.Linq.Table%601&gt;oferece suporte a genéricos &lt;xref:System.Linq.IQueryable%601&gt;.&lt;/xref:System.Linq.IQueryable%601&gt; &lt;/xref:System.Data.Linq.Table%601&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;CodeContentPlaceHolder&gt;</bpt>0<ept id="p1">&lt;/CodeContentPlaceHolder&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;CodeContentPlaceHolder&gt;</bpt>0<ept id="p1">&lt;/CodeContentPlaceHolder&gt;</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For more information about how to create specific types of data sources, see the documentation for the various <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> providers.</source>
          <target state="translated">Para obter mais informações sobre como criar tipos específicos de fontes de dados, consulte a documentação para os diversos <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> provedores.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>(For a list of these providers, see <bpt id="p1">[</bpt>LINQ (Language-Integrated Query)<ept id="p1">](http://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d)</ept>.) The basic rule is simple: a <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> data source is any object that supports the generic &lt;xref:System.Collections.Generic.IEnumerable%601&gt; interface, or an interface that inherits from it.</source>
          <target state="translated">(Para obter uma lista desses provedores, consulte <bpt id="p1">[</bpt>LINQ (consulta integrada à linguagem)<ept id="p1">](http://msdn.microsoft.com/library/a73c4aec-5d15-4e98-b962-1274021ea93d)</ept>.) A regra básica é simple: um <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> fonte de dados é qualquer objeto que ofereça suporte a genéricos &lt;xref:System.Collections.Generic.IEnumerable%601&gt;interface, ou uma interface que herda do proprietário.&lt;/xref:System.Collections.Generic.IEnumerable%601&gt;</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Types such as &lt;xref:System.Collections.ArrayList&gt; that support the non-generic &lt;xref:System.Collections.IEnumerable&gt; interface can also be used as <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> data sources.</source>
          <target state="translated">Tipos, como &lt;xref:System.Collections.ArrayList&gt;que oferecem suporte a não genérica &lt;xref:System.Collections.IEnumerable&gt;interface também pode ser usada como <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> fontes de dados.&lt;/xref:System.Collections.IEnumerable&gt; &lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For an example that uses an &lt;xref:System.Collections.ArrayList&gt;, see <bpt id="p1">[</bpt>How to: Query an ArrayList with LINQ (Visual Basic)<ept id="p1">](how-to-query-an-arraylist-with-linq.md)</ept>.</source>
          <target state="translated">Para obter um exemplo que usa um &lt;xref:System.Collections.ArrayList&gt;, consulte <bpt id="p1">[</bpt>como: consultar um ArrayList com LINQ (Visual Basic)<ept id="p1">](how-to-query-an-arraylist-with-linq.md)</ept>.&lt;/xref:System.Collections.ArrayList&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The Query</source>
          <target state="translated">A Consulta</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In the query, you specify what information you want to retrieve from the data source or sources.</source>
          <target state="translated">Na consulta, você deve especificar quais informações você deseja recuperar da fonte de dados ou fontes.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>You also have the option of specifying how that information should be sorted, grouped, or structured before it is returned.</source>
          <target state="translated">Você também tem a opção de especificar como essas informações devem ser classificadas, agrupadas ou estruturadas antes de serem retornado.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>To enable query creation, Visual Basic has incorporated new query syntax into the language.</source>
          <target state="translated">Para habilitar a criação da consulta, Visual Basic incorporou a nova sintaxe de consulta de linguagem.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>When it is executed, the query in the following example returns all the even numbers from an integer array, <ph id="ph1">`numbers`</ph>.</source>
          <target state="translated">Quando ele é executado, a consulta no exemplo a seguir retorna todos os números pares de uma matriz de inteiros, <ph id="ph1">`numbers`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbLINQFirstQuery#1<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/writing-your-first-linq-query_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbLINQFirstQuery n º&amp;1;<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/writing-your-first-linq-query_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The query expression contains three clauses: <ph id="ph1">`From`</ph>, <ph id="ph2">`Where`</ph>, and <ph id="ph3">`Select`</ph>.</source>
          <target state="translated">A expressão de consulta contém três cláusulas: <ph id="ph1">`From`</ph>, <ph id="ph2">`Where`</ph>, e <ph id="ph3">`Select`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The specific function and purpose of each query expression clause is discussed in <bpt id="p1">[</bpt>Basic Query Operations (Visual Basic)<ept id="p1">](basic-query-operations.md)</ept>.</source>
          <target state="translated">A função específica e a finalidade de cada cláusula de expressão de consulta é discutida em <bpt id="p1">[</bpt>operações básicas de consulta (Visual Basic)<ept id="p1">](basic-query-operations.md)</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Queries<ept id="p1">](../../../../visual-basic/language-reference/queries/queries.md)</ept>.</source>
          <target state="translated">Para obter mais informações, consulte <bpt id="p1">[</bpt>consultas<ept id="p1">](../../../../visual-basic/language-reference/queries/queries.md)</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Note that in <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph>, a query definition often is stored in a variable and executed later.</source>
          <target state="translated">Observe que, em <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph>, uma definição de consulta geralmente é armazenada em uma variável e executada posteriormente.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The query variable, such as <ph id="ph1">`evensQuery`</ph> in the previous example, must be a queryable type.</source>
          <target state="translated">A consulta a variável, como <ph id="ph1">`evensQuery`</ph> no exemplo anterior, deve ser um tipo que pode ser consultado.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The type of <ph id="ph1">`evensQuery`</ph> is <ph id="ph2">`IEnumerable(Of Integer)`</ph>, assigned by the compiler using local type inference.</source>
          <target state="translated">O tipo de <ph id="ph1">`evensQuery`</ph> é <ph id="ph2">`IEnumerable(Of Integer)`</ph>, atribuído pelo compilador usando inferência de tipo local.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>It is important to remember that the query variable itself takes no action and returns no data.</source>
          <target state="translated">É importante lembrar que a variável de consulta não faz nada e não retorna nenhum dado.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>It only stores the query definition.</source>
          <target state="translated">Ela apenas armazena a definição de consulta.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>In the previous example, it is the <ph id="ph1">`For Each`</ph> loop that executes the query.</source>
          <target state="translated">No exemplo anterior, ele é o <ph id="ph1">`For Each`</ph> loop que executa a consulta.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Query Execution</source>
          <target state="translated">Execução da Consulta</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Query execution is separate from query creation.</source>
          <target state="translated">A execução da consulta é separada da criação da consulta.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Query creation defines the query, but execution is triggered by a different mechanism.</source>
          <target state="translated">Criação de consulta define a consulta, mas a execução é disparada por um mecanismo diferente.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A query can be executed as soon as it is defined (<bpt id="p1">*</bpt>immediate execution<ept id="p1">*</ept>), or the definition can be stored and the query can be executed later (<bpt id="p2">*</bpt>deferred execution<ept id="p2">*</ept>).</source>
          <target state="translated">Uma consulta pode ser executada assim que ela é definida (<bpt id="p1">*</bpt>execução imediata<ept id="p1">*</ept>), ou a definição pode ser armazenada e a consulta pode ser executada posteriormente (<bpt id="p2">*</bpt>execução diferida<ept id="p2">*</ept>).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Deferred Execution</source>
          <target state="translated">Execução Adiada</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A typical <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> query resembles the one in the previous example, in which <ph id="ph2">`evensQuery`</ph> is defined.</source>
          <target state="translated">Um típico <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> consulta semelhante no exemplo anterior, em que <ph id="ph2">`evensQuery`</ph> é definido.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>It creates the query but does not execute it immediately.</source>
          <target state="translated">Ele cria a consulta, mas não executá-lo imediatamente.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Instead, the query definition is stored in the query variable <ph id="ph1">`evensQuery`</ph>.</source>
          <target state="translated">Em vez disso, a definição de consulta é armazenada na variável de consulta <ph id="ph1">`evensQuery`</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You execute the query later, typically by using a <ph id="ph1">`For Each`</ph> loop, which returns a sequence of values, or by applying a standard query operator, such as <ph id="ph2">`Count`</ph> or <ph id="ph3">`Max`</ph>.</source>
          <target state="translated">Executar a consulta posteriormente, normalmente usando um <ph id="ph1">`For Each`</ph> loop, que retorna uma sequência de valores, ou aplicando um operador de consulta padrão, como <ph id="ph2">`Count`</ph> ou <ph id="ph3">`Max`</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This process is referred to as <bpt id="p1">*</bpt>deferred execution<ept id="p1">*</ept>.</source>
          <target state="translated">Esse processo é conhecido como <bpt id="p1">*</bpt>execução diferida<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbLINQFirstQuery#7<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/writing-your-first-linq-query_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbLINQFirstQuery&amp;#7;<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/writing-your-first-linq-query_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For a sequence of values, you access the retrieved data by using the iteration variable in the <ph id="ph1">`For Each`</ph> loop (<ph id="ph2">`number`</ph> in the previous example).</source>
          <target state="translated">Uma sequência de valores, você deve acessar os dados recuperados usando a variável de iteração no <ph id="ph1">`For Each`</ph> loop (<ph id="ph2">`number`</ph> no exemplo anterior).</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Because the query variable, <ph id="ph1">`evensQuery`</ph>, holds the query definition rather than the query results, you can execute a query as often as you want by using the query variable more than one time.</source>
          <target state="translated">Porque a variável de consulta, <ph id="ph1">`evensQuery`</ph>, contém a definição de consulta, em vez dos resultados da consulta, você pode executar uma consulta sempre que desejar usando a variável de consulta mais de uma vez.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, you might have a database in your application that is being updated continually by a separate application.</source>
          <target state="translated">Por exemplo, você pode ter um banco de dados em seu aplicativo que está sendo atualizado continuamente por um aplicativo separado.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>After you have created a query that retrieves data from that database, you can use a <ph id="ph1">`For Each`</ph> loop to execute the query repeatedly, retrieving the most recent data every time.</source>
          <target state="translated">Depois de criar uma consulta que recupera dados do banco de dados, você pode usar um <ph id="ph1">`For Each`</ph> loop para executar a consulta repetidamente, recuperar os dados mais recentes toda vez.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how deferred execution works.</source>
          <target state="translated">O exemplo a seguir demonstra como execução adiada funciona.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>After <ph id="ph1">`evensQuery2`</ph> is defined and executed with a <ph id="ph2">`For Each`</ph> loop, as in the previous examples, some elements in the data source <ph id="ph3">`numbers`</ph> are changed.</source>
          <target state="translated">Depois de <ph id="ph1">`evensQuery2`</ph> é definido e executado com uma <ph id="ph2">`For Each`</ph> loop, como nos exemplos anteriores, alguns elementos da fonte de dados <ph id="ph3">`numbers`</ph> são alteradas.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Then a second <ph id="ph1">`For Each`</ph> loop runs <ph id="ph2">`evensQuery2`</ph> again.</source>
          <target state="translated">Em seguida, um segundo <ph id="ph1">`For Each`</ph> executa um loop <ph id="ph2">`evensQuery2`</ph> novamente.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The results are different the second time, because the <ph id="ph1">`For Each`</ph> loop executes the query again, using the new values in <ph id="ph2">`numbers`</ph>.</source>
          <target state="translated">Os resultados são diferentes na segunda vez, porque o <ph id="ph1">`For Each`</ph> loop executa a consulta novamente, usando os novos valores no <ph id="ph2">`numbers`</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbLINQFirstQuery#3<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/writing-your-first-linq-query_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbLINQFirstQuery n º&amp;3;<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/writing-your-first-linq-query_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Output:</source>
          <target state="translated">Saída:</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Immediate Execution</source>
          <target state="translated">Execução Imediata</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>In deferred execution of queries, the query definition is stored in a query variable for later execution.</source>
          <target state="translated">Na execução adiada de consultas, a definição de consulta é armazenada em uma variável de consulta para execução posterior.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>In immediate execution, the query is executed at the time of its definition.</source>
          <target state="translated">Execução imediata, a consulta é executada no momento de sua definição.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Execution is triggered when you apply a method that requires access to individual elements of the query result.</source>
          <target state="translated">Execução é disparada quando você aplica um método que exige acesso aos elementos individuais do resultado da consulta.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Immediate execution often is forced by using one of the standard query operators that return single values.</source>
          <target state="translated">Execução imediata geralmente é forçada usando um dos operadores de consulta padrão que retornam valores únicos.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Examples are <ph id="ph1">`Count`</ph>, <ph id="ph2">`Max`</ph>, <ph id="ph3">`Average`</ph>, and <ph id="ph4">`First`</ph>.</source>
          <target state="translated">Examples are <ph id="ph1">`Count`</ph>, <ph id="ph2">`Max`</ph>, <ph id="ph3">`Average`</ph>, and <ph id="ph4">`First`</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>These standard query operators execute the query as soon as they are applied in order to calculate and return a singleton result.</source>
          <target state="translated">Esses operadores de consulta padrão execute a consulta assim que elas são aplicadas para calcular e retornar um resultado singleton.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>For more information about standard query operators that return single values, see <bpt id="p1">[</bpt>Aggregation Operations<ept id="p1">](aggregation-operations.md)</ept>, <bpt id="p2">[</bpt>Element Operations<ept id="p2">](element-operations.md)</ept>, and <bpt id="p3">[</bpt>Quantifier Operations<ept id="p3">](quantifier-operations.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre operadores de consulta padrão que retornam valores únicos, consulte <bpt id="p1">[</bpt>operações de agregação<ept id="p1">](aggregation-operations.md)</ept>, <bpt id="p2">[</bpt>operações de elemento<ept id="p2">](element-operations.md)</ept>, e <bpt id="p3">[</bpt>operações de quantificador<ept id="p3">](quantifier-operations.md)</ept>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The following query returns a count of the even numbers in an array of integers.</source>
          <target state="translated">A consulta a seguir retorna uma contagem de números pares em uma matriz de inteiros.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The query definition is not saved, and <ph id="ph1">`numEvens`</ph> is a simple <ph id="ph2">`Integer`</ph>.</source>
          <target state="translated">A definição de consulta não é salvo, e <ph id="ph1">`numEvens`</ph> é um simples <ph id="ph2">`Integer`</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbLINQFirstQuery#4<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/writing-your-first-linq-query_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbLINQFirstQuery n º&amp;4;<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/writing-your-first-linq-query_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You can achieve the same result by using the <ph id="ph1">`Aggregate`</ph> method.</source>
          <target state="translated">Você pode obter o mesmo resultado usando o <ph id="ph1">`Aggregate`</ph> método.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbLINQFirstQuery#5<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/writing-your-first-linq-query_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbLINQFirstQuery n º&amp;5;<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/writing-your-first-linq-query_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>You can also force execution of a query by calling the <ph id="ph1">`ToList`</ph> or <ph id="ph2">`ToArray`</ph> method on a query (immediate) or query variable (deferred), as shown in the following code.</source>
          <target state="translated">Você também pode forçar a execução de uma consulta chamando o <ph id="ph1">`ToList`</ph> ou <ph id="ph2">`ToArray`</ph> método em uma consulta (imediata) ou a variável de consulta (diferido), conforme mostrado no código a seguir.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbLINQFirstQuery#6<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/writing-your-first-linq-query_7.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbLINQFirstQuery n º&amp;6;<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/writing-your-first-linq-query_7.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In the previous examples, <ph id="ph1">`evensQuery3`</ph> is a query variable, but <ph id="ph2">`evensList`</ph> is a list and <ph id="ph3">`evensArray`</ph> is an array.</source>
          <target state="translated">Nos exemplos anteriores, <ph id="ph1">`evensQuery3`</ph> é uma consulta de variável, mas <ph id="ph2">`evensList`</ph> é uma lista e <ph id="ph3">`evensArray`</ph> é uma matriz.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph1">`ToList`</ph> or <ph id="ph2">`ToArray`</ph> to force immediate execution is especially useful in scenarios in which you want to execute the query immediately and cache the results in a single collection object.</source>
          <target state="translated">Usando <ph id="ph1">`ToList`</ph> ou <ph id="ph2">`ToArray`</ph> para forçar imediata execução é especialmente útil em cenários nos quais você deseja executar a consulta imediatamente e armazenar em cache os resultados em um único objeto de coleção.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For more information about these methods, see <bpt id="p1">[</bpt>Converting Data Types<ept id="p1">](converting-data-types.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre esses métodos, consulte <bpt id="p1">[</bpt>converter tipos de dados<ept id="p1">](converting-data-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>You can also cause a query to be executed by using an <ph id="ph1">`IEnumerable`</ph> method such as the &lt;xref:Microsoft.VisualBasic.Collection.System%23Collections%23IEnumerable%23GetEnumerator%2A&gt; method.</source>
          <target state="translated">Você também pode causar uma consulta a ser executada usando um <ph id="ph1">`IEnumerable`</ph> método como o &lt;xref:Microsoft.VisualBasic.Collection.System%23Collections%23IEnumerable%23GetEnumerator%2A&gt;método.&lt;/xref:Microsoft.VisualBasic.Collection.System%23Collections%23IEnumerable%23GetEnumerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Getting Started with LINQ in Visual Basic<ept id="p1">](getting-started-with-linq.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Introdução ao LINQ no Visual Basic<ept id="p1">](getting-started-with-linq.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Local Type Inference<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Inferência de tipo local<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Standard Query Operators Overview (Visual Basic)<ept id="p1">](standard-query-operators-overview.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Visão geral de operadores de consulta padrão (Visual Basic)<ept id="p1">](standard-query-operators-overview.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Introduction to LINQ in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Introdução ao LINQ no Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>LINQ<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>LINQ<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Queries<ept id="p1">](../../../../visual-basic/language-reference/queries/queries.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Consultas<ept id="p1">](../../../../visual-basic/language-reference/queries/queries.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>