<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f0362aa" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6534435823e32aa5c61802ccc587c2761a3fe893</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\framework\docker\aspnetmvc.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">653f4b38b717540dbdb2dedf91321d0e01babc4a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">071b0fc8344db6a8184d8f5ddae87618430a767f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Migrating ASP.NET MVC Applications to Windows Containers</source>
          <target state="translated">Перенос приложений ASP.NET MVC в контейнеры Windows</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn how to take an existing ASP.NET MVC application and run it in a Windows Docker Container</source>
          <target state="translated">Узнайте, как запустить существующее приложение ASP.NET MVC в контейнере Windows Docker</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Windows Containers, Docker, ASP.NET MVC</source>
          <target state="translated">Контейнеры Windows, Docker, ASP.NET MVC</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Migrating ASP.NET MVC Applications to Windows Containers</source>
          <target state="translated">Перенос приложений ASP.NET MVC в контейнеры Windows</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Running an existing .NET Framework-based application in a Windows container doesn't require any changes to your app.</source>
          <target state="translated">При запуске существующего приложения на основе .NET Framework в контейнере Windows не требуется вносить изменения в приложение.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To run your app in a Windows container you create a Docker image containing your app and start the container.</source>
          <target state="translated">Чтобы запустить приложение в контейнере Windows, создайте образ Docker с приложением и запустите контейнер.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This topic explains how to take an existing <bpt id="p1">[</bpt>ASP.NET MVC application<ept id="p1">](http://www.asp.net/mvc)</ept> and deploy it in a Windows container.</source>
          <target state="translated">В этом разделе показано, как получить существующее <bpt id="p1">[</bpt>приложение ASP.NET MVC<ept id="p1">](http://www.asp.net/mvc)</ept> и развернуть его в контейнере Windows.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You start with an existing ASP.NET MVC app, then build the published assets using Visual Studio.</source>
          <target state="translated">Начните с существующего приложения ASP.NET MVC и выполните сборку опубликованных ресурсов с помощью Visual Studio.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You use Docker to create the image that contains and runs your app.</source>
          <target state="translated">Docker используется для создания образа, который содержит и запускает ваше приложение.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You'll browse to the site running in a Windows container and verify the app is working.</source>
          <target state="translated">Вы перейдете на сайт, запущенный в контейнере Windows, и проверите, работает ли приложение.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This article assumes a basic understanding of Docker.</source>
          <target state="translated">Для понимания этой статьи требуется базовое знакомство с Docker.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can learn about Docker by reading the <bpt id="p1">[</bpt>Docker Overview<ept id="p1">](https://docs.docker.com/engine/understanding-docker/)</ept>.</source>
          <target state="translated">Сведения о Docker см. в разделе <bpt id="p1">[</bpt>Общие сведения о Docker<ept id="p1">](https://docs.docker.com/engine/understanding-docker/)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The app you'll run in a container is a simple website that answers questions randomly.</source>
          <target state="translated">Приложение, которое будет работать в контейнере — это простой веб-сайт, который случайным образом отвечает на вопросы.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This app is a basic MVC application with no authentication or database storage; it lets you focus on moving the web tier to a container.</source>
          <target state="translated">Это базовое приложение MVC без проверки подлинности и хранилища базы данных. Оно позволяет сосредоточиться на перемещении веб-уровня в контейнер.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Future topics will show how to move and manage persistent storage in containerized applications.</source>
          <target state="translated">В дальнейших темах показано, как перемещать постоянное хранилище и управлять им в контейнерных приложениях.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Moving your application involves these steps:</source>
          <target state="translated">Перемещение приложения состоит из следующих действий.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Creating a publish task to build the assets for an image.<ept id="p1">](#publish-script)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Создание задачи публикации для сборки ресурсов образа<ept id="p1">](#publish-script)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Building a Docker image that will run your application.<ept id="p1">](#build-the-image)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Создание образа Docker, в котором будет запускаться приложение<ept id="p1">](#build-the-image)</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Starting a Docker container that runs your image.<ept id="p1">](#start-a-container)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Запуск контейнера Docker, в котором будет запускаться образ<ept id="p1">](#start-a-container)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Verifying the application using your browser.<ept id="p1">](#verify-in-the-browser)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Проверка приложения с помощью браузера<ept id="p1">](#verify-in-the-browser)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>finished application<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/docker/MVCRandomAnswerGenerator)</ept> is on GitHub.</source>
          <target state="translated"><bpt id="p1">[</bpt>Готовое приложение<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/docker/MVCRandomAnswerGenerator)</ept> находится на GitHub.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Предварительные требования</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The development machine must be running</source>
          <target state="translated">Компьютер разработки должен быть запущен</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Windows 10 Anniversary Update<ept id="p1">](https://www.microsoft.com/en-us/software-download/windows10/)</ept> (or higher) or <bpt id="p2">[</bpt>Windows Server 2016<ept id="p2">](https://www.microsoft.com/en-us/cloud-platform/windows-server)</ept> (or higher).</source>
          <target state="translated"><bpt id="p1">[</bpt>Юбилейное обновление Windows 10<ept id="p1">](https://www.microsoft.com/en-us/software-download/windows10/)</ept> (или выше) либо <bpt id="p2">[</bpt>Windows Server 2016<ept id="p2">](https://www.microsoft.com/en-us/cloud-platform/windows-server)</ept> (или выше).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Docker for Windows<ept id="p1">](https://docs.docker.com/docker-for-windows/)</ept> - version Stable 1.13.0 or 1.12 Beta 26 (or newer versions)</source>
          <target state="translated"><bpt id="p1">[</bpt>Docker для Windows<ept id="p1">](https://docs.docker.com/docker-for-windows/)</ept> — версия Stable 1.13.0 или 1.12 Beta 26 (или более поздние)</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Visual Studio 2015<ept id="p1">](https://www.visualstudio.com/en-us/visual-studio-homepage-vs.aspx)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>Visual Studio 2015<ept id="p1">](https://www.visualstudio.com/en-us/visual-studio-homepage-vs.aspx)</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If you are using Windows Server 2016, follow the instructions for <bpt id="p1">[</bpt>Container Host Deployment - Windows Server<ept id="p1">](https://msdn.microsoft.com/virtualization/windowscontainers/deployment/deployment)</ept>.</source>
          <target state="translated">При использовании Windows Server 2016 выполните инструкции по <bpt id="p1">[</bpt>развертыванию узла контейнеров в Windows Server<ept id="p1">](https://msdn.microsoft.com/virtualization/windowscontainers/deployment/deployment)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>After installing and starting Docker,  right-click on the tray icon and select <bpt id="p1">**</bpt>Switch to Windows containers<ept id="p1">**</ept>.</source>
          <target state="translated">После установки и запуска Docker щелкните правой кнопкой мыши значок на панели задач и выберите <bpt id="p1">**</bpt>Переключиться на контейнеры Windows<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This is required to run Docker images based on Windows.</source>
          <target state="translated">Это нужно для запуска образов Docker на основе Windows.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This command takes a few seconds to execute:</source>
          <target state="translated">На выполнение этой команды требуется несколько секунд:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Windows Container<ept id="p1">][windows-container]</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Контейнер Windows<ept id="p1">][windows-container]</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Publish script</source>
          <target state="translated">Публикация скрипта</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Collect all the assets that you need to load into a Docker image in one place.</source>
          <target state="translated">Соберите вместе все ресурсы, которые нужно загрузить в образ Docker.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You can use the Visual Studio <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> command to create a publish profile for your app.</source>
          <target state="translated">Для создания профиля публикации приложения в Visual Studio есть команда <bpt id="p1">**</bpt>Опубликовать<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This profile will put all the assets in one directory tree that you copy to your target image later in this tutorial.</source>
          <target state="translated">В этом профиле все ресурсы будут собраны в одном дереве каталогов, которое далее в этом учебнике вам нужно будет скопировать в свой целевой образ.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Publish Steps<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Этапы публикации<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Right click on the web project in Visual Studio, and select <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept>.</source>
          <target state="translated">Щелкните правой кнопкой мыши веб-проект в Visual Studio и выберите <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> (Публикация).</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Custom profile button<ept id="p1">**</ept>, and then select <bpt id="p2">**</bpt>File System<ept id="p2">**</ept> as the method.</source>
          <target state="translated">Нажмите кнопку <bpt id="p1">**</bpt>Пользовательский профиль<ept id="p1">**</ept>, а затем выберите <bpt id="p2">**</bpt>Файловая система<ept id="p2">**</ept> в качестве метода.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Choose the directory.</source>
          <target state="translated">Выберите каталог.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>By convention, the downloaded sample uses <ph id="ph1">`bin/PublishOutput`</ph>.</source>
          <target state="translated">По правилам загруженный образец использует <ph id="ph1">`bin/PublishOutput`</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Publish Connection<ept id="p1">][publish-connection]</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Публикация: подключение<ept id="p1">][publish-connection]</ept></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Open the <bpt id="p1">**</bpt>File Publish Options<ept id="p1">**</ept> section of the <bpt id="p2">**</bpt>Settings<ept id="p2">**</ept> tab.</source>
          <target state="translated">Откройте раздел <bpt id="p1">**</bpt>Параметры публикации файла<ept id="p1">**</ept> на вкладке <bpt id="p2">**</bpt>Параметры<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Precompile during publishing<ept id="p1">**</ept>.</source>
          <target state="translated">Выберите <bpt id="p1">**</bpt>Precompile during publishing<ept id="p1">**</ept> (Предварительная компиляция во время публикации).</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This optimization means that you'll be compiling views in the Docker container, you are copying the precompiled views.</source>
          <target state="translated">Эта оптимизация означает, что представления не будут компилироваться в контейнере Docker, вместо этого будут копироваться предварительно скомпилированные представления.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Publish Settings<ept id="p1">][publish-settings]</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Публикация: параметры<ept id="p1">][publish-settings]</ept></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept>, and Visual Studio will copy all the needed assets to the destination folder.</source>
          <target state="translated">Нажмите кнопку <bpt id="p1">**</bpt>Publish<ept id="p1">**</ept> (Публикация), и Visual Studio скопирует все необходимые ресурсы в целевую папку.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Build the image</source>
          <target state="translated">Сборка образа</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Define your Docker image in a Dockerfile.</source>
          <target state="translated">Определение образа Docker в Dockerfile.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The Dockerfile contains instructions for the base image, additional components, the app you want to run, and other configuration images.</source>
          <target state="translated">Dockerfile содержит инструкции для базового образа, дополнительные компоненты, приложение, которое нужно запустить, и другие образы конфигурации.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The Dockerfile is the input to the <ph id="ph1">`docker build`</ph> command, which creates the image.</source>
          <target state="translated">Dockerfile содержит входные параметры для команды <ph id="ph1">`docker build`</ph>, которая создает образ.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>You will build an image based on the <ph id="ph1">`microsft/aspnet`</ph> image located on <bpt id="p1">[</bpt>Docker Hub<ept id="p1">](https://hub.docker.com/r/microsoft/aspnet/)</ept>.</source>
          <target state="translated">Вы создадите образ на основе образа <ph id="ph1">`microsft/aspnet`</ph>, расположенного на <bpt id="p1">[</bpt>Docker Hub<ept id="p1">](https://hub.docker.com/r/microsoft/aspnet/)</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The base image, <ph id="ph1">`microsoft/aspnet`</ph>, is a Windows Server image.</source>
          <target state="translated">Базовый образ <ph id="ph1">`microsoft/aspnet`</ph> — это образ Windows Server.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>In contains Windows Server Core, IIS and ASP.NET 4.6.2.</source>
          <target state="translated">Он содержит Windows Server Core, IIS и ASP.NET 4.6.2.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When you run this image in your container, it will automatically start IIS and installed websites.</source>
          <target state="translated">При запуске этого образа в контейнере он автоматически использует IIS и установленные веб-сайты.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The Dockerfile that creates your image looks like this:</source>
          <target state="translated">Dockerfile, который создает образ, выглядит следующим образом:</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>There is no <ph id="ph1">`ENTRYPOINT`</ph> command in this Dockerfile.</source>
          <target state="translated">В Dockerfile нет команды <ph id="ph1">`ENTRYPOINT`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You don't need one.</source>
          <target state="translated">Она не нужна.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The base image ensures that IIS starts when the container starts.</source>
          <target state="translated">Базовый образ гарантирует, что служба IIS запускается при запуске контейнера.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Run the Docker build command to create the image that runs your ASP.NET app.</source>
          <target state="translated">Выполните команду сборки Docker, чтобы создать образ, который запускает приложение ASP.NET.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>To do this, open a PowerShell window and type the following command in the solution directory:</source>
          <target state="translated">Для этого откройте окно PowerShell и введите следующую команду в каталоге решения:</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This command will build the new image using the instructions in your Dockerfile.</source>
          <target state="translated">Эта команда создаст новый образ в соответствии с инструкциями в Dockerfile.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This may include pulling the base image from <bpt id="p1">[</bpt>Docker Hub<ept id="p1">](http://hub.docker.com)</ept>, and then adding your app to that image.</source>
          <target state="translated">Это может включать получение базового образа из <bpt id="p1">[</bpt>Docker Hub<ept id="p1">](http://hub.docker.com)</ept>. После этого в образ будет добавлено приложение.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Once that command completes, you can run the <ph id="ph1">`docker images`</ph> command to see information on the new image:</source>
          <target state="translated">После выполнения этой команды можно выполнить команду <ph id="ph1">`docker images`</ph> для просмотра сведений о новом образе:</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The IMAGE ID will be different on your machine.</source>
          <target state="translated">Идентификатор IMAGE ID на вашем компьютере будет другим.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Now, let's run the app.</source>
          <target state="translated">Теперь запустим приложение.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Start a container</source>
          <target state="translated">Запуск контейнера</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Start a container by executing the following <ph id="ph1">`docker run`</ph> command:</source>
          <target state="translated">Чтобы запустить контейнер, нужно выполнить следующую команду <ph id="ph1">`docker run`</ph>:</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`-d`</ph> argument tells Docker to start the image in detached mode.</source>
          <target state="translated">Аргумент <ph id="ph1">`-d`</ph> предписывает Docker запустить образ в отсоединенном режиме.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>That means the Docker image runs disconnected from the current shell.</source>
          <target state="translated">Это значит, что образ Docker запускается в отрыве от текущей оболочки.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`-p 8000:8000`</ph> argument tells Docker how to map incoming ports.</source>
          <target state="translated">Аргумент <ph id="ph1">`-p 8000:8000`</ph> указывает Docker, как сопоставить порты входящего трафика.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>In this example, we're using port 8000 on both the host and the container.</source>
          <target state="translated">В этом примере мы используем порт 8000 на узле и в контейнере.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`--name randomanswers`</ph> gives a name to the running container.</source>
          <target state="translated">Аргумент <ph id="ph1">`--name randomanswers`</ph> содержит имя запущенного контейнера.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You can use this name instead of the container ID in most commands.</source>
          <target state="translated">Это имя можно использовать вместо идентификатора контейнера в большинстве команд.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`mvcrandomanswers`</ph> is the name of the image to start.</source>
          <target state="translated"><ph id="ph1">`mvcrandomanswers`</ph> — это имя запускаемого образа.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Verify in the browser</source>
          <target state="translated">Проверка в браузере</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>With the current release, you can't browse to <ph id="ph1">`http://localhost`</ph>.</source>
          <target state="translated">В текущем выпуске невозможно перейти на <ph id="ph1">`http://localhost`</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This is a known behavior in WinNAT, and it will be resolved in the future.</source>
          <target state="translated">Это связано с известным поведением в WinNAT. В будущем проблема будет устранена.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Until that is addressed, you need to use the IP address of the container.</source>
          <target state="translated">А пока этого не произошло, необходимо использовать IP-адрес контейнера.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Once the container starts, find its IP address so that you can connect to your running container from a browser:</source>
          <target state="translated">После запуска контейнера найдите его IP-адрес. В этом случае вы сможете подключиться к запущенному контейнеру из браузера:</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Connect to the running container using the IPv4 address and the configured port (8000), <ph id="ph1">`http://172.31.194.61:8000`</ph> in the example shown.</source>
          <target state="translated">Подключитесь к запущенному контейнеру, указав IPv4-адрес и настроенный порт (8000), <ph id="ph1">`http://172.31.194.61:8000`</ph> (см. пример).</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Type that URL into your browser, and you should see the running site.</source>
          <target state="translated">Введите этот URL-адрес в адресной строке браузера, и вы увидите работающий сайт.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Some VPN or proxy software may prevent you from navigating to your site.</source>
          <target state="translated">Некоторые программы VPN или прокси-серверы могут препятствовать переходу на ваш узел.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can temporarily disable it to make sure your container is working.</source>
          <target state="translated">Их можно временно отключить, чтобы убедиться, что контейнер работает.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The sample directory on GitHub contains a <bpt id="p1">[</bpt>PowerShell script<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/docker/MVCRandomAnswerGenerator/run.ps1)</ept> that executes these commands for you.</source>
          <target state="translated">Каталог образцов на GitHub содержит <bpt id="p1">[</bpt>Сценарий PowerShell<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/framework/docker/MVCRandomAnswerGenerator/run.ps1)</ept>, который выполняет эти команды за вас.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Open a PowerShell window, change directory to your solution directory, and type:</source>
          <target state="translated">Откройте окно PowerShell, перейдите в каталог решения и введите команду:</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The command above builds the image, displays the list of images on your machine, starts a container, and displays the IP address for that container.</source>
          <target state="translated">Она создает образ, отображает список образов на компьютере, запускает контейнер и отображает IP-адрес для этого контейнера.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>To stop your container, issue a <ph id="ph1">`docker
stop`</ph> command:</source>
          <target state="translated">Чтобы остановить контейнер, выполните команду <ph id="ph1">`docker
stop`</ph>:</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>To remove the container, issue a <ph id="ph1">`docker rm`</ph> command:</source>
          <target state="translated">Чтобы удалить контейнер, выполните команду <ph id="ph1">`docker rm`</ph>:</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">windows-container]: media/aspnetmvc/SwitchContainer.png</ept><bpt id="p2"> "</bpt>Switch to Windows Container<ept id="p2">"</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><ept id="p1">windows-container]: media/aspnetmvc/SwitchContainer.png</ept><bpt id="p2"> "</bpt>Переключение на контейнер Windows<ept id="p2">"</ept></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">publish-connection]: media/aspnetmvc/PublishConnection.png</ept><bpt id="p2"> "</bpt>Publish to File System<ept id="p2">"</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><ept id="p1">publish-connection]: media/aspnetmvc/PublishConnection.png</ept><bpt id="p2"> "</bpt>Публикация в файловой системе<ept id="p2">"</ept></target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ept id="p1">publish-settings]: media/aspnetmvc/PublishSettings.png</ept><bpt id="p2"> "</bpt>Publish Settings<ept id="p2">"</ept></source>
          <target state="translated"><bpt id="p1">[</bpt><ept id="p1">publish-settings]: media/aspnetmvc/PublishSettings.png</ept><bpt id="p2"> "</bpt>Публикация: параметры<ept id="p2">"</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>