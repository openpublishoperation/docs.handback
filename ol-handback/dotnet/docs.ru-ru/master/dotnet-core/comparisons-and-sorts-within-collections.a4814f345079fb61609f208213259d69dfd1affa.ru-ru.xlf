<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6826c0c2e86d0a1add1f88b001c13143ee098634</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\collections\comparisons-and-sorts-within-collections.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">26b5c585789b83430b3508b5c30518ba78f4d5f9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf94883bdee8b50e753a667b5052e25f3fb5b5e3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Comparisons and Sorts Within Collections</source>
          <target state="translated">Сравнение и сортировка в коллекциях</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Comparisons and Sorts Within Collections</source>
          <target state="translated">Сравнение и сортировка в коллекциях</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Comparisons and Sorts Within Collections</source>
          <target state="translated">Сравнение и сортировка в коллекциях</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept> classes perform comparisons in almost all the processes involved in managing collections, whether searching for the element to remove or returning the value of a key-and-value pair.</source>
          <target state="translated">Классы <bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections)</ept> выполняют сравнения почти во всех процессах управления коллекциями — будь то поиск элемента для удаления или возвращение значения пары "ключ-значение".</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Collections typically utilize an equality comparer and/or an ordering comparer.</source>
          <target state="translated">В коллекциях обычно используется компаратор проверки на равенство и (или) компаратор упорядочения.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Two constructs are used for comparisons.</source>
          <target state="translated">Для сравнения используются две конструкции.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Checking for equality</source>
          <target state="translated">Проверка на равенство</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Methods such as <ph id="ph1">`Contains`</ph>, <ph id="ph2">`IndexOf`</ph>, <ph id="ph3">`LastIndexOf`</ph>, and <ph id="ph4">`Remove`</ph> use an equality comparer for the collection elements.</source>
          <target state="translated">Такие методы, как <ph id="ph1">`Contains`</ph>, <ph id="ph2">`IndexOf`</ph>, <ph id="ph3">`LastIndexOf`</ph> и <ph id="ph4">`Remove`</ph>, используют компаратор проверки на равенство для элементов коллекции.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the collection is generic, items are compared for equality according to the following guidelines:</source>
          <target state="translated">Если коллекция является универсальной, то элементы проверяются на равенство согласно следующим правилам.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If type T implements the <bpt id="p1">[</bpt>IEquatable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.IEquatable-1)</ept> generic interface, then the equality comparer is the <ph id="ph3">`Equals`</ph> method of that interface.</source>
          <target state="translated">Если тип T реализует универсальный интерфейс <bpt id="p1">[</bpt>IEquatable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.IEquatable-1)</ept>, компаратором проверки на равенство является метод <ph id="ph3">`Equals`</ph> этого интерфейса.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If type T does not implement <ph id="ph1">`IEquatable&lt;T&gt;`</ph>, <ph id="ph2">`Object.Equals`</ph> is used.</source>
          <target state="translated">Если тип T не реализует <ph id="ph1">`IEquatable&lt;T&gt;`</ph>, используется <ph id="ph2">`Object.Equals`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In addition, some constructor overloads for dictionary collections accept an <bpt id="p1">[</bpt>IEqualityComparer<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IEqualityComparer-1)</ept> implementation, which is used to compare keys for equality.</source>
          <target state="translated">Кроме того, некоторые перегрузки конструктора для коллекций словаря принимают реализацию <bpt id="p1">[</bpt>IEqualityComparer<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IEqualityComparer-1)</ept>, которая используется для сравнения ключей на равенство.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Determining sort order</source>
          <target state="translated">Определение порядка сортировки</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Methods such as <ph id="ph1">`BinarySearch`</ph> and <ph id="ph2">`Sort`</ph> use an ordering comparer for the collection elements.</source>
          <target state="translated">Такие методы, как <ph id="ph1">`BinarySearch`</ph> и <ph id="ph2">`Sort`</ph>, используют компаратор упорядочения для элементов коллекции.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The comparisons can be between elements of the collection, or between an element and a specified value.</source>
          <target state="translated">Сравнение может проводиться между элементами коллекции или между элементом и заданным значением.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For comparing objects, there is the concept of a default comparer and an explicit comparer.</source>
          <target state="translated">Для сравнения объектов существуют понятия "компаратор по умолчанию" и "явный компаратор".</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The default comparer relies on at least one of the objects being compared to implement the <ph id="ph1">`IComparable`</ph> interface.</source>
          <target state="translated">Для реализации интерфейса <ph id="ph1">`IComparable`</ph> компаратор по умолчанию использует по крайней мере один из сравниваемых объектов.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It is a good practice to implement <ph id="ph1">`IComparable`</ph> on all classes are used as values in a list collection or as keys in a dictionary collection.</source>
          <target state="translated">Интерфейс <ph id="ph1">`IComparable`</ph> рекомендуется реализовать во всех классах, используемых в качестве значений в коллекциях списков или в качестве ключей в коллекциях словарей.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For a generic collection, equality comparison is determined according to the following:</source>
          <target state="translated">В универсальной коллекции сравнение на равенство определяется в соответствии со следующими правилами.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If type T implements the <bpt id="p1">[</bpt>System.IComparable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.IComparable-1)</ept> generic interface, then the default comparer is the <ph id="ph3">`CompareTo(T)`</ph> method of that interface.</source>
          <target state="translated">Если тип T реализует универсальный интерфейс <bpt id="p1">[</bpt>System.IComparable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.IComparable-1)</ept>, компаратором по умолчанию является метод <ph id="ph3">`CompareTo(T)`</ph> этого интерфейса.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If type T implements the non-generic <bpt id="p1">[</bpt>System.IComparable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.IComparable)</ept> interface, then the default comparer is the <ph id="ph1">`CompareTo`</ph>(Object) method of that interface.</source>
          <target state="translated">Если тип T реализует универсальный интерфейс <bpt id="p1">[</bpt>System.IComparable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.IComparable)</ept>, компаратором по умолчанию является метод <ph id="ph1">`CompareTo`</ph>(Object) этого интерфейса.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If type T doesn’t implement either interface, then there is no default comparer, and a comparer or comparison delegate must be provided explicitly.</source>
          <target state="translated">Если тип T не реализует никакого интерфейса, компаратор по умолчанию отсутствует, а компаратор или делегат сравнения должен быть предоставлен явно.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To provide explicit comparisons, some methods accept an <ph id="ph1">`IComparer`</ph> implementation as a parameter.</source>
          <target state="translated">Для осуществления явных сравнений некоторые методы принимают реализацию <ph id="ph1">`IComparer`</ph> в качестве параметра.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For example, the <ph id="ph1">`List&lt;T&gt;.Sort`</ph> method accepts an <bpt id="p1">[</bpt>System.Collections.Generic.IComparer<ph id="ph2">&amp;lt;</ph>T<ph id="ph3">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IComparer-1)</ept> implementation.</source>
          <target state="translated">Например, метод <ph id="ph1">`List&lt;T&gt;.Sort`</ph> принимает реализацию <bpt id="p1">[</bpt>System.Collections.Generic.IComparer<ph id="ph2">&amp;lt;</ph>T<ph id="ph3">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IComparer-1)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Equality and sort example</source>
          <target state="translated">Пример сортировки и проверки на равенство</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following code demonstrates an implementation of <bpt id="p1">[</bpt>IEquatable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.IEquatable-1)</ept> and <bpt id="p2">[</bpt>IComparable<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.IComparable-1)</ept> on a simple business object.</source>
          <target state="translated">В следующем примере демонстрируется реализация <bpt id="p1">[</bpt>IEquatable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.IEquatable-1)</ept> и <bpt id="p2">[</bpt>IComparable<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.IComparable-1)</ept> в простом бизнес-объекте.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In addition, when the object is stored in a list and sorted, you will see that calling the <ph id="ph1">`Sort()`</ph> method results in the use of the default comparer for the 'Part' type, and the <ph id="ph2">`Sort(Comparison&lt;T&gt;)`</ph> method implemented by using an anonymous method.</source>
          <target state="translated">Кроме того, когда объект сохраняется в списке и сортируется, вы увидите, что вызов метода <ph id="ph1">`Sort()`</ph> приведет к использованию компаратора по умолчанию для типа "Part", а метод <ph id="ph2">`Sort(Comparison&lt;T&gt;)`</ph> будет реализован с помощью анонимного метода.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">См. также</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IComparer<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IComparer)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>IComparer<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IComparer)</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IEquatable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.IEquatable-1)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>IEquatable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.IEquatable-1)</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IComparer<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IComparer-1)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>IComparer<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IComparer-1)</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IComparable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.IComparable)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>IComparable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.IComparable)</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>IComparable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.IComparable-1)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>IComparable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.IComparable-1)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>