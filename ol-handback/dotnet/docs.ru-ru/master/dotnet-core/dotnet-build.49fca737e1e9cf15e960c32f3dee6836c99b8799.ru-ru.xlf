<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-4a95368" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3cb552590bf45ec73d84cc902a505b3048301b9f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\dotnet-build.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">665953dbb10d047730d1ec215055faa418c59f29</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40eeb4cd3e079a3901c0f1aa04b47d50414a905f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-build command | Microsoft Docs</source>
          <target state="translated">Команда dotnet-build | Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-build command builds a project and all of its dependencies.</source>
          <target state="translated">Команда dotnet-build выполняет сборку проекта и всех его зависимостей.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-build, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-build, CLI, команда CLI, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-build</source>
          <target state="translated">dotnet-build</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic applies to .NET Core Tools Preview 2.</source>
          <target state="translated">Эта статья применима к инструментам .NET Core (предварительная версия 2).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For the  Visual Studio 2017 RC - .NET Core Tools Preview 4 version, see the <bpt id="p1">[</bpt>dotnet-build (Tooling Preview 4)<ept id="p1">](../preview3/tools/dotnet-build.md)</ept> topic.</source>
          <target state="translated">Информацию об инструментах .NET Core (предварительная версия 4) для версии-кандидата Visual Studio 2017 см. в статье <bpt id="p1">[</bpt>dotnet-build (предварительная версия 4 инструментов)<ept id="p1">](../preview3/tools/dotnet-build.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Имя</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet-build`</ph> - Builds a project and all of its dependencies.</source>
          <target state="translated"><ph id="ph1">`dotnet-build`</ph> — собирает проект и все его зависимости.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Краткий обзор</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Описание</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet build`</ph> command builds multiple source file from a source project and its dependencies into a binary.</source>
          <target state="translated">Команда <ph id="ph1">`dotnet build`</ph> выполняет сборку нескольких файлов исходного кода из исходного проекта и его зависимостей в двоичный файл.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>By default, the resulting binary is in Intermediate Language (IL) and has a DLL extension.</source>
          <target state="translated">По умолчанию итоговый файл создается на промежуточном языке (IL) и имеет расширение DLL.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet build`</ph> also drops a <ph id="ph2">`\*.deps`</ph> file which outlines what the host needs to run the application.</source>
          <target state="translated"><ph id="ph1">`dotnet build`</ph> также сбрасывает файл <ph id="ph2">`\*.deps`</ph>, в котором указывается, что необходимо узлу для запуска приложения.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Building requires the existence of a lock file, which means that you have to run <bpt id="p1">[</bpt><ph id="ph1">`dotnet restore`</ph><ept id="p1">](dotnet-restore.md)</ept> prior to building your code.</source>
          <target state="translated">Для сборки требуется наличие файла блокировки. Это означает, что перед сборкой кода необходимо выполнить <bpt id="p1">[</bpt><ph id="ph1">`dotnet restore`</ph><ept id="p1">](dotnet-restore.md)</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Before any compilation begins, the <ph id="ph1">`build`</ph> verb analyzes the project and its dependencies for incremental safety checks.</source>
          <target state="translated">Перед началом компиляции команда <ph id="ph1">`build`</ph> анализирует проект и его зависимости для добавочных проверок безопасности.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If all checks pass, then build proceeds with incremental compilation of the project and its dependencies; otherwise, it falls back to non-incremental compilation.</source>
          <target state="translated">Если все проверки пройдены успешно, сборка продолжается добавочной компиляцией проекта и его зависимостей. В противном случае производится компиляция без дополнения.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Via a profile flag, users can choose to receive additional information on how they can improve their build times.</source>
          <target state="translated">С помощью флага профилирования пользователи могут получить дополнительные сведения о том, как можно ускорить сборку.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>All projects in the dependency graph that need compilation must pass the following safety checks in order for the compilation process to be incremental:</source>
          <target state="translated">Все проекты в схеме зависимостей, требующие компиляции, должны пройти следующие проверки безопасности, чтобы процесс компиляции был добавочным:</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>not use pre/post compile scripts</source>
          <target state="translated">не используются скрипты для обработки до и после компиляции;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>not load compilation tools from PATH (for example, resgen, compilers)</source>
          <target state="translated">средства компиляции (например, resgen, компиляторы) не загружаются по пути;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>use only known compilers (csc, vbc, fsc)</source>
          <target state="translated">используются только известные компиляторы (csc, vbc, fsc).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In order to build an executable application instead of a library, you need a <bpt id="p1">[</bpt>special configuration<ept id="p1">](project-json.md#emitentrypoint)</ept> section in your project.json file:</source>
          <target state="translated">Для сборки исполняемого приложения, а не библиотеки, требуется <bpt id="p1">[</bpt>специальный раздел конфигурации<ept id="p1">](project-json.md#emitentrypoint)</ept> в файле project.json:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Параметры</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">Выводит краткую справку по команде.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Directory in which to place the built binaries.</source>
          <target state="translated">Каталог, в который будут помещаться собранные двоичные файлы.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You also need to define <ph id="ph1">`--framework`</ph> when you specify this option.</source>
          <target state="translated">При указании этого параметра также необходимо определить <ph id="ph1">`--framework`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Directory in which to place temporary outputs.</source>
          <target state="translated">Каталог, в который будут помещаться временные выходные данные.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Compiles for a specific framework.</source>
          <target state="translated">Выполняет компиляцию для конкретной платформы.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The framework needs to be defined in the <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md#frameworks)</ept> file.</source>
          <target state="translated">Платформа должна быть задана в файле <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md#frameworks)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Defines a configuration under which to build.</source>
          <target state="translated">Определяет конфигурацию для сборки.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If omitted, it defaults to <ph id="ph1">`Debug`</ph>.</source>
          <target state="translated">Если значение не указано, по умолчанию используется значение <ph id="ph1">`Debug`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Target runtime to build for.</source>
          <target state="translated">Целевая среда выполнения для сборки.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For a list of Runtime Identifiers (RIDs) you can use, see the <bpt id="p1">[</bpt>RID catalog<ept id="p1">](../rid-catalog.md)</ept>.</source>
          <target state="translated">Список идентификаторов сред выполнения (RID), которые можно использовать, см. в <bpt id="p1">[</bpt>каталоге RID<ept id="p1">](../rid-catalog.md)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Defines what <ph id="ph1">`*`</ph> should be replaced with in the version field in the <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md#version)</ept> file.</source>
          <target state="translated">Определяет, чем следует заменить звездочку (<ph id="ph1">`*`</ph>) в поле версии в файле <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md#version)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The format follows NuGet's version guidelines.</source>
          <target state="translated">Формат соответствует рекомендациям в отношении версий NuGet.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Prints out the incremental safety checks that users need to address in order for incremental compilation to be automatically turned on.</source>
          <target state="translated">Выводит список добавочных проверок безопасности, которые пользователь должен пройти, чтобы добавочная компиляция была включена автоматически.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Marks the build as unsafe for incremental build.</source>
          <target state="translated">Помечает сборку как небезопасную для добавочной сборки.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This turns off incremental compilation and forces a clean rebuild of the project dependency graph.</source>
          <target state="translated">Это приводит к отключению добавочной компиляции и принудительной полной повторной сборке схемы зависимостей проекта.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Ignores project-to-project references and only builds the root project specified to build.</source>
          <target state="translated">Межпроектные ссылки игнорируются, и выполняется сборка только указанного корневого проекта.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Примеры</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Build a project and its dependencies:</source>
          <target state="translated">Сборка проекта и его зависимостей:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Build a project and its dependencies using Release configuration:</source>
          <target state="translated">Сборка проекта и его зависимостей с помощью конфигурации Release:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Build a project and its dependencies for a specific runtime (in this example, Ubuntu 16.04):</source>
          <target state="translated">Сборка проекта и его зависимостей для определенной среды выполнения (в этом примере это Ubuntu 16.04):</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>