<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f0362aa" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">29019587d2d847c5184d07024fa763c8af805d50</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tutorials\using-on-windows.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d61bc55ed956e2743f167346b240c4f7eaec716</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa732939c3e3148c7b7fb4511742fd9177e486a2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Getting started with .NET Core on Windows</source>
          <target state="translated">Начало работы с .NET Core в Windows</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Getting started with .NET Core on Windows, using Visual Studio 2015</source>
          <target state="translated">Начало работы с .NET Core в Windows с помощью Visual Studio 2015</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Getting started with .NET Core on Windows, using Visual Studio 2015</source>
          <target state="translated">Начало работы с .NET Core в Windows с помощью Visual Studio 2015</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic applies to Visual Studio 2015 - .NET Core Tools Preview 2.</source>
          <target state="translated">Эта статья применима к инструментам .NET Core (предварительная версия 2) для Visual Studio 2015.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For the.NET Core Tools RC4 version, see the <bpt id="p1">[</bpt>Getting started with .NET Core on Windows, using Visual Studio 2017<ept id="p1">](../preview3/tutorials/using-on-windows-vs-2017.md)</ept> topic.</source>
          <target state="translated">Сведения для версии-кандидата 4 средств .NET Core см. в разделе <bpt id="p1">[</bpt>Начало работы с .NET Core в Windows с помощью Visual Studio 2017<ept id="p1">](../preview3/tutorials/using-on-windows-vs-2017.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Visual Studio 2015 provides a full-featured development environment for developing .NET Core applications.</source>
          <target state="translated">Visual Studio 2015 предоставляет полнофункциональную среду разработки приложений .NET Core.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The procedures in this document describe the steps necessary to build a number of typical .NET Core solutions, or solutions that include .NET Core components, using Visual Studio.</source>
          <target state="translated">В этом документе описываются действия, необходимые для создания ряда типичных решений .NET Core или решений, включающих компоненты .NET Core, с помощью Visual Studio.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The scenarios include testing and using third-party libraries that have not been explicitly built for the most recent version of .NET Core.</source>
          <target state="translated">Сценарии включают тестирование и использование библиотек сторонних разработчиков, которые не предназначены явно для последней версии .NET Core.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Предварительные требования</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Follow the instructions on <bpt id="p1">[</bpt>our prerequisites page<ept id="p1">](../windows-prerequisites.md)</ept> to update your environment.</source>
          <target state="translated">Чтобы обновить среду, выполните инструкции на <bpt id="p1">[</bpt>странице с описанием предварительных требований<ept id="p1">](../windows-prerequisites.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">Начало работы</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following steps will set up Visual Studio 2015 for .NET Core development:</source>
          <target state="translated">Чтобы настроить Visual Studio 2015 для разработки приложений .NET Core, выполните указанные ниже действия:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Open Visual Studio, and on the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, choose <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</source>
          <target state="translated">Откройте Visual Studio, а затем в меню <bpt id="p1">**</bpt>Файл<ept id="p1">**</ept> выберите пункты <bpt id="p2">**</bpt>Создать<ept id="p2">**</ept> и <bpt id="p3">**</bpt>Проект<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog, in the <bpt id="p2">**</bpt>Templates<ept id="p2">**</ept> list, expand the <bpt id="p3">**</bpt>Visual C#<ept id="p3">**</ept> node and choose <bpt id="p4">**</bpt>.NET Core<ept id="p4">**</ept>.</source>
          <target state="translated">В диалоговом окне <bpt id="p1">**</bpt>Новый проект<ept id="p1">**</ept> в списке <bpt id="p2">**</bpt>Шаблоны<ept id="p2">**</ept> разверните узел <bpt id="p3">**</bpt>Visual C#<ept id="p3">**</ept> и выберите элемент <bpt id="p4">**</bpt>.NET Core<ept id="p4">**</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You should see three new project templates for <bpt id="p1">**</bpt>Class Library (.NET Core)<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Console Application (.NET Core)<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>ASP.NET Core Web Application (.NET Core)<ept id="p3">**</ept>.</source>
          <target state="translated">Должны появиться три новых шаблона проекта: <bpt id="p1">**</bpt>Библиотека классов (.NET Core)<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Консольное приложение (.NET Core)<ept id="p2">**</ept> и <bpt id="p3">**</bpt>Веб-приложение ASP.NET Core (.NET Core)<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A solution using only .NET Core projects</source>
          <target state="translated">Решение на основе только проектов .NET Core</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Writing the library</source>
          <target state="translated">Написание библиотеки</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>In Visual Studio, choose <bpt id="p1">**</bpt>File<ept id="p1">**</ept>, <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</source>
          <target state="translated">В Visual Studio последовательно щелкните <bpt id="p1">**</bpt>Файл<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Создать<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Проект<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog, expand the <bpt id="p2">**</bpt>Visual C#<ept id="p2">**</ept> node and choose the <bpt id="p3">**</bpt>.NET Core<ept id="p3">**</ept> node, and then choose <bpt id="p4">**</bpt>Class Library (.NET Core)<ept id="p4">**</ept>.</source>
          <target state="translated">В диалоговом окне <bpt id="p1">**</bpt>Новый проект<ept id="p1">**</ept> разверните узел <bpt id="p2">**</bpt>Visual C#<ept id="p2">**</ept>, выберите узел <bpt id="p3">**</bpt>.NET Core<ept id="p3">**</ept>, а затем выберите шаблон <bpt id="p4">**</bpt>Библиотека классов (.NET Core)<ept id="p4">**</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Name the project "Library" and the solution "Golden".</source>
          <target state="translated">Присвойте проекту имя Library, а решению — имя Golden.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Leave <bpt id="p1">**</bpt>Create directory for solution<ept id="p1">**</ept> checked.</source>
          <target state="translated">Оставьте флажок <bpt id="p1">**</bpt>Создать каталог для решения<ept id="p1">**</ept> установленным.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
          <target state="translated">Нажмите кнопку <bpt id="p1">**</bpt>ОК<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, open the context menu for the <bpt id="p1">**</bpt>References<ept id="p1">**</ept> node and choose <bpt id="p2">**</bpt>Manage NuGet Packages<ept id="p2">**</ept>.</source>
          <target state="translated">В обозревателе решений откройте контекстное меню узла <bpt id="p1">**</bpt>Ссылки<ept id="p1">**</ept> и выберите пункт <bpt id="p2">**</bpt>Управление пакетами NuGet<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Choose "nuget.org" as the <bpt id="p1">**</bpt>Package source<ept id="p1">**</ept>, and choose the <bpt id="p2">**</bpt>Browse<ept id="p2">**</ept> tab.</source>
          <target state="translated">Выберите nuget.org в качестве <bpt id="p1">**</bpt>источника пакета<ept id="p1">**</ept> и перейдите на вкладку <bpt id="p2">**</bpt>Обзор<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Browse for <bpt id="p1">**</bpt>Newtonsoft.Json<ept id="p1">**</ept>.</source>
          <target state="translated">Найдите файл <bpt id="p1">**</bpt>Newtonsoft.Json<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Install<ept id="p1">**</ept>.</source>
          <target state="translated">Нажмите кнопку <bpt id="p1">**</bpt>Установить<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Open the context menu for the <bpt id="p1">**</bpt>References<ept id="p1">**</ept> node and choose  <bpt id="p2">**</bpt>Restore packages<ept id="p2">**</ept>.</source>
          <target state="translated">В контекстном меню узла <bpt id="p1">**</bpt>Ссылки<ept id="p1">**</ept> выберите пункт <bpt id="p2">**</bpt>Восстановить пакеты<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Rename the <ph id="ph1">`Class1.cs`</ph> file to <ph id="ph2">`Thing.cs`</ph>.</source>
          <target state="translated">Переименуйте файл <ph id="ph1">`Class1.cs`</ph> в <ph id="ph2">`Thing.cs`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Accept the rename of the class.</source>
          <target state="translated">Подтвердите переименование класса.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Remove the constructor and add a method: <ph id="ph1">`public int Get(int number) =&gt; Newtonsoft.Json.JsonConvert.DeserializeObject&lt;int&gt;($"{number}");`</ph></source>
          <target state="translated">Удалите конструктор и добавьте метод <ph id="ph1">`public int Get(int number) =&gt; Newtonsoft.Json.JsonConvert.DeserializeObject&lt;int&gt;($"{number}");`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Build<ept id="p1">**</ept> menu, choose <bpt id="p2">**</bpt>Build Solution<ept id="p2">**</ept>.</source>
          <target state="translated">В меню <bpt id="p1">**</bpt>Построение<ept id="p1">**</ept> выберите <bpt id="p2">**</bpt>Построить решение<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The solution should build without error.</source>
          <target state="translated">Решение должно быть собрано без ошибок.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Writing the test project</source>
          <target state="translated">Написание тестового проекта</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, open the context menu for the <bpt id="p1">**</bpt>Solution<ept id="p1">**</ept> node and choose <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>, <bpt id="p3">**</bpt>New Solution Folder<ept id="p3">**</ept>.</source>
          <target state="translated">В обозревателе решений в контекстном меню узла <bpt id="p1">**</bpt>Решение<ept id="p1">**</ept> выберите <bpt id="p2">**</bpt>Добавить<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Создать папку решения<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Name the folder "test".</source>
          <target state="translated">Присвойте папке имя test.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This is only a solution folder, not a physical folder.</source>
          <target state="translated">Это всего лишь папка решения, но не физическая папка.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Open the context menu for the <bpt id="p1">**</bpt>test<ept id="p1">**</ept> folder and choose <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>.</source>
          <target state="translated">Откройте контекстное меню папки <bpt id="p1">**</bpt>test<ept id="p1">**</ept> и выберите пункт <bpt id="p2">**</bpt>Добавить<ept id="p2">**</ept>,</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>New Project<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Новый проект<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog, choose <bpt id="p2">**</bpt>Console Application (.NET Core)<ept id="p2">**</ept>.</source>
          <target state="translated">В диалоговом окне <bpt id="p1">**</bpt>Новый проект<ept id="p1">**</ept> выберите <bpt id="p2">**</bpt>Консольное приложение (.NET Core)<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Name it "TestLibrary" and explicitly put it under the <ph id="ph1">`Golden\test`</ph> path.</source>
          <target state="translated">Присвойте приложению имя TestLibrary и явным образом поместите его по пути <ph id="ph1">`Golden\test`</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The project needs to be a console application, not a class library.</source>
          <target state="translated">Проект должен быть консольным приложением, а не библиотекой классов.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> project, open the context menu for the <bpt id="p2">**</bpt>References<ept id="p2">**</ept> node and choose <bpt id="p3">**</bpt>Add Reference<ept id="p3">**</ept>.</source>
          <target state="translated">В проекте <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> откройте контекстное меню узла <bpt id="p2">**</bpt>Ссылки<ept id="p2">**</ept> и выберите пункт <bpt id="p3">**</bpt>Добавить ссылку<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Reference Manager<ept id="p1">**</ept> dialog, check <bpt id="p2">**</bpt>Library<ept id="p2">**</ept> under the <bpt id="p3">**</bpt>Projects<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Solution<ept id="p4">**</ept> node, and then click <bpt id="p5">**</bpt>OK<ept id="p5">**</ept>.</source>
          <target state="translated">В диалоговом окне <bpt id="p1">**</bpt>Диспетчер ссылок<ept id="p1">**</ept> установите флажок <bpt id="p2">**</bpt>Библиотека<ept id="p2">**</ept> в узле <bpt id="p3">**</bpt>Проекты<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Решение<ept id="p4">**</ept>, а затем нажмите кнопку <bpt id="p5">**</bpt>ОК<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> project, open the <ph id="ph1">`project.json`</ph> file, and replace <ph id="ph2">`"Library": "1.0.0-*"`</ph> with <ph id="ph3">`"Library": {"target": "project", "version": "1.0.0-*"}`</ph>.</source>
          <target state="translated">В проекте <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> откройте файл <ph id="ph1">`project.json`</ph> и замените <ph id="ph2">`"Library": "1.0.0-*"`</ph> на <ph id="ph3">`"Library": {"target": "project", "version": "1.0.0-*"}`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This is to avoid the resolution of the <ph id="ph1">`Library`</ph> project to a NuGet package with the same name.</source>
          <target state="translated">Это позволит избежать разрешения проекта <ph id="ph1">`Library`</ph> в пакет NuGet с тем же именем.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Explicitly setting the target to "project" ensures that the tooling will first search for a project with that name, and not a package.</source>
          <target state="translated">Явное задание project в качестве целевого объекта позволяет гарантировать, что средства сначала будут искать проект с данным именем, а не пакет.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> project, open the context menu for the <bpt id="p2">**</bpt>References<ept id="p2">**</ept> node and choose <bpt id="p3">**</bpt>Restore Packages<ept id="p3">**</ept>.</source>
          <target state="translated">В проекте <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> откройте контекстное меню узла <bpt id="p2">**</bpt>Ссылки<ept id="p2">**</ept> и выберите пункт <bpt id="p3">**</bpt>Восстановить пакеты<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Open the context menu for the <bpt id="p1">**</bpt>References<ept id="p1">**</ept> node and choose <bpt id="p2">**</bpt>Manage NuGet Packages<ept id="p2">**</ept>.</source>
          <target state="translated">Откройте контекстное меню узла <bpt id="p1">**</bpt>Ссылки<ept id="p1">**</ept> и выберите пункт <bpt id="p2">**</bpt>Управление пакетами NuGet<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Choose "nuget.org" as the <bpt id="p1">**</bpt>Package source<ept id="p1">**</ept>, and choose the <bpt id="p2">**</bpt>Browse<ept id="p2">**</ept> tab.</source>
          <target state="translated">Выберите nuget.org в качестве <bpt id="p1">**</bpt>источника пакета<ept id="p1">**</ept> и перейдите на вкладку <bpt id="p2">**</bpt>Обзор<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Check the <bpt id="p1">**</bpt>Include prerelease<ept id="p1">**</ept> checkbox, and then browse for <bpt id="p2">**</bpt>xUnit<ept id="p2">**</ept> version 2.2.0 or newer, and then click <bpt id="p3">**</bpt>Install<ept id="p3">**</ept>.</source>
          <target state="translated">Установите флажок <bpt id="p1">**</bpt>Включить предварительные выпуски<ept id="p1">**</ept>, найдите <bpt id="p2">**</bpt>xUnit<ept id="p2">**</ept> версии 2.2.0 или более поздней, а затем нажмите кнопку <bpt id="p3">**</bpt>Установить<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Browse for <bpt id="p1">**</bpt>dotnet-test-xunit<ept id="p1">**</ept> version 2.2.0 or newer, and then click <bpt id="p2">**</bpt>Install<ept id="p2">**</ept>.</source>
          <target state="translated">Найдите <bpt id="p1">**</bpt>dotnet-test-xunit<ept id="p1">**</ept> версии 2.2.0 или более поздней, а затем нажмите кнопку <bpt id="p2">**</bpt>Установить<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Edit <ph id="ph1">`project.json`</ph> and replace <ph id="ph2">`"imports": "dnxcore50"`</ph> with <ph id="ph3">`"imports": [ "dnxcore50", "portable-net45+win8" ]`</ph>.</source>
          <target state="translated">Отредактируйте файл <ph id="ph1">`project.json`</ph> и замените <ph id="ph2">`"imports": "dnxcore50"`</ph> на <ph id="ph3">`"imports": [ "dnxcore50", "portable-net45+win8" ]`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This enables the xunit libraries to be correctly restored and used by the project: those libraries have been compiled to be used with portable profiles that include "portable-net45+win8", but not .NET Core, which didn't exist when they were built.</source>
          <target state="translated">Это обеспечивает правильное восстановление и использование библиотек XUnit проектом: эти библиотеки были скомпилированы для использования с переносимыми профилями, включающими portable-net45+win8, но не с платформой .NET Core, которой еще не существовало на момент их создания.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`import`</ph> relaxes the tooling version checks at build time.</source>
          <target state="translated"><ph id="ph1">`import`</ph> ослабляет требования при проверке версии средств во время сборки.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You may now restore packages without error.</source>
          <target state="translated">Теперь пакеты можно восстановить без ошибок.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Edit <ph id="ph1">`project.json`</ph> to add <ph id="ph2">`"testRunner": "xunit",`</ph> after the <ph id="ph3">`"frameworks"`</ph> section.</source>
          <target state="translated">Отредактируйте файл <ph id="ph1">`project.json`</ph>, добавив <ph id="ph2">`"testRunner": "xunit",`</ph> после раздела <ph id="ph3">`"frameworks"`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">`LibraryTests.cs`</ph> class file to the <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> project, add the <ph id="ph2">`using`</ph> directives <ph id="ph3">`using Xunit;`</ph> and <ph id="ph4">`using Library;`</ph> to the top of the file, and add the following code to the class:</source>
          <target state="translated">Добавьте файл класса <ph id="ph1">`LibraryTests.cs`</ph> в проект <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept>, добавьте директивы <ph id="ph2">`using`</ph> <ph id="ph3">`using Xunit;`</ph> и <ph id="ph4">`using Library;`</ph> в начало файла и добавьте в класс следующий код:</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Optionally, delete the <ph id="ph1">`Program.cs`</ph> file from the <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> project, and remove <ph id="ph2">`"buildOptions": {"emitEntryPoint": true},`</ph> from <ph id="ph3">`project.json`</ph>.</source>
          <target state="translated">При необходимости удалите файл <ph id="ph1">`Program.cs`</ph> из проекта <bpt id="p1">**</bpt>TestLibrary<ept id="p1">**</ept> и удалите <ph id="ph2">`"buildOptions": {"emitEntryPoint": true},`</ph> из файла <ph id="ph3">`project.json`</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You should now be able to build the solution.</source>
          <target state="translated">Теперь вы можете выполнить сборку решения.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Test<ept id="p1">**</ept> menu, choose <bpt id="p2">**</bpt>Windows<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Test Explorer<ept id="p3">**</ept>, and in Test Explorer choose <bpt id="p4">**</bpt>Run All<ept id="p4">**</ept>.</source>
          <target state="translated">В меню <bpt id="p1">**</bpt>Тест<ept id="p1">**</ept> выберите <bpt id="p2">**</bpt>Windows<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Обозреватель тестов<ept id="p3">**</ept>, а затем в обозревателе тестов выберите <bpt id="p4">**</bpt>Запустить все<ept id="p4">**</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The test should pass.</source>
          <target state="translated">Тест должен быть пройден успешно.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Writing the console app</source>
          <target state="translated">Написание консольного приложения</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, open the context menu for the <ph id="ph1">`src`</ph> folder, and add a new <bpt id="p1">**</bpt>Console Application (.NET Core)<ept id="p1">**</ept> project.</source>
          <target state="translated">В обозревателе решений откройте контекстное меню папки <ph id="ph1">`src`</ph> и добавьте новый проект <bpt id="p1">**</bpt>Консольное приложение (.NET Core)<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Name it "App", and set the location to <ph id="ph1">`Golden\src`</ph>.</source>
          <target state="translated">Присвойте ему имя App и задайте расположение <ph id="ph1">`Golden\src`</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>App<ept id="p1">**</ept> project, open the context menu for the <bpt id="p2">**</bpt>References<ept id="p2">**</ept> node and choose <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>,  <bpt id="p4">**</bpt>Reference<ept id="p4">**</ept>.</source>
          <target state="translated">В проекте <bpt id="p1">**</bpt>App<ept id="p1">**</ept> откройте контекстное меню узла <bpt id="p2">**</bpt>Ссылки<ept id="p2">**</ept> и выберите пункты <bpt id="p3">**</bpt>Добавить<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Ссылка<ept id="p4">**</ept>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Reference Manager<ept id="p1">**</ept> dialog, check <bpt id="p2">**</bpt>Library<ept id="p2">**</ept> under the <bpt id="p3">**</bpt>Projects<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Solution<ept id="p4">**</ept> node, and then click <bpt id="p5">**</bpt>OK<ept id="p5">**</ept></source>
          <target state="translated">В диалоговом окне <bpt id="p1">**</bpt>Диспетчер ссылок<ept id="p1">**</ept> установите флажок <bpt id="p2">**</bpt>Библиотека<ept id="p2">**</ept> в узле <bpt id="p3">**</bpt>Проекты<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Решение<ept id="p4">**</ept>, а затем нажмите кнопку <bpt id="p5">**</bpt>ОК<ept id="p5">**</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>App<ept id="p1">**</ept> project, open the <ph id="ph1">`project.json`</ph> file, and replace <ph id="ph2">`"Library": "1.0.0-*"`</ph> with <ph id="ph3">`"Library": {"target": "project"}`</ph>.</source>
          <target state="translated">В проекте <bpt id="p1">**</bpt>App<ept id="p1">**</ept> откройте файл <ph id="ph1">`project.json`</ph> и замените <ph id="ph2">`"Library": "1.0.0-*"`</ph> на <ph id="ph3">`"Library": {"target": "project"}`</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Open the context menu for the <bpt id="p1">**</bpt>References<ept id="p1">**</ept> node and choose <bpt id="p2">**</bpt>Restore Packages<ept id="p2">**</ept>.</source>
          <target state="translated">В контекстном меню узла <bpt id="p1">**</bpt>Ссылки<ept id="p1">**</ept> выберите пункт <bpt id="p2">**</bpt>Восстановить пакеты<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Open the context menu for the <bpt id="p1">**</bpt>App<ept id="p1">**</ept> node and choose <bpt id="p2">**</bpt>Set as StartUp Project<ept id="p2">**</ept>.</source>
          <target state="translated">Откройте контекстное меню узла <bpt id="p1">**</bpt>App<ept id="p1">**</ept> и выберите пункт <bpt id="p2">**</bpt>Назначить запускаемым проектом<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Open the <ph id="ph1">`Program.cs`</ph> file, add a <ph id="ph2">`using Library;`</ph> directive to the top of the file, and then add <ph id="ph3">`Console.WriteLine($"The answer is {new Thing().Get(42)}");`</ph> to the <ph id="ph4">`Main`</ph> method.</source>
          <target state="translated">Откройте файл <ph id="ph1">`Program.cs`</ph>, добавьте директиву <ph id="ph2">`using Library;`</ph> в начало файла, а затем добавьте строку <ph id="ph3">`Console.WriteLine($"The answer is {new Thing().Get(42)}");`</ph> в метод <ph id="ph4">`Main`</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Set a breakpoint after the line that you just added.</source>
          <target state="translated">Установите точку останова после только что добавленной строки.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Press F5 to run the application..</source>
          <target state="translated">Нажмите клавишу F5 для запуска приложения.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The application should build without error, and should hit the breakpoint.</source>
          <target state="translated">Сборка приложения должна быть выполнена без ошибок, и должна быть достигнута точка останова.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You should also be able to check that the application output "The answer is 42.".</source>
          <target state="translated">Вы также можете проверить, выдает ли приложение результат The answer is 42.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A mixed .NET Core library and .NET Framework application</source>
          <target state="translated">Смешанное приложение на основе библиотеки .NET Core и платформы .NET Framework</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Starting from the solution obtained with the previous script, execute the following steps:</source>
          <target state="translated">Используя в качестве основы решение, полученное в результаты выполнения предыдущего скрипта, выполните указанные ниже действия:</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, open the <ph id="ph1">`project.json`</ph> file for the <bpt id="p1">**</bpt>Library<ept id="p1">**</ept> project and replace <ph id="ph2">`"frameworks": {
 "netstandard1.6" }`</ph> with <ph id="ph3">`"frameworks": {
 "netstandard1.4" }`</ph>.</source>
          <target state="translated">В обозревателе решений откройте файл <ph id="ph1">`project.json`</ph> для проекта <bpt id="p1">**</bpt>Library<ept id="p1">**</ept> и замените <ph id="ph2">`"frameworks": {
 "netstandard1.6" }`</ph> на <ph id="ph3">`"frameworks": {
 "netstandard1.4" }`</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Library<ept id="p1">**</ept> project, open the context menu for the <bpt id="p2">**</bpt>References<ept id="p2">**</ept> node and choose <bpt id="p3">**</bpt>Restore Packages<ept id="p3">**</ept>.</source>
          <target state="translated">В проекте <bpt id="p1">**</bpt>Library<ept id="p1">**</ept> откройте контекстное меню узла <bpt id="p2">**</bpt>Ссылки<ept id="p2">**</ept> и выберите пункт <bpt id="p3">**</bpt>Восстановить пакеты<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The solution should still build and function exactly like it did before: the test should pass, and the console application should run and be debuggable.</source>
          <target state="translated">Сборка и выполнение решения должны осуществляться точно так же, как и раньше: тест должен быть пройден успешно и консольное приложение должно запуститься и быть доступным для отладки.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Library<ept id="p1">**</ept> project, open the context menu and choose <bpt id="p2">**</bpt>Build<ept id="p2">**</ept>.</source>
          <target state="translated">В проекте <bpt id="p1">**</bpt>Library<ept id="p1">**</ept> откройте контекстное меню и выберите пункт <bpt id="p2">**</bpt>Сборка<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, open the context menu for the <ph id="ph1">`src`</ph> folder, and choose <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>.</source>
          <target state="translated">В обозревателе решений откройте контекстное меню папки <ph id="ph1">`src`</ph> и выберите команду <bpt id="p1">**</bpt>Добавить<ept id="p1">**</ept>,</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>, <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Новый проект<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog, choose the <bpt id="p2">**</bpt>Visual C#<ept id="p2">**</ept> node, and then choose <bpt id="p3">**</bpt>Console Application<ept id="p3">**</ept>.</source>
          <target state="translated">В диалоговом окне <bpt id="p1">**</bpt>Новый проект<ept id="p1">**</ept> выберите узел <bpt id="p2">**</bpt>Visual C#<ept id="p2">**</ept>, а затем выберите <bpt id="p3">**</bpt>Консольное приложение<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Make sure you choose a standard console application, not the .NET Core version.</source>
          <target state="translated">Следует выбрать стандартное консольное приложение, а не версию .NET Core.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>In this section, you'll be consuming the library from a .NET Framework application.</source>
          <target state="translated">В этом разделе используется библиотека из приложения .NET Framework.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Name the project "FxApp", and set the location to <ph id="ph1">`Golden\src`</ph>.</source>
          <target state="translated">Присвойте проекту имя FxApp и задайте расположение <ph id="ph1">`Golden\src`</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>FxApp<ept id="p1">**</ept> project, open the context menu for the <bpt id="p2">**</bpt>References<ept id="p2">**</ept> node and choose <bpt id="p3">**</bpt>Add Reference<ept id="p3">**</ept>.</source>
          <target state="translated">В проекте <bpt id="p1">**</bpt>FxApp<ept id="p1">**</ept> откройте контекстное меню узла <bpt id="p2">**</bpt>Ссылки<ept id="p2">**</ept> и выберите пункт <bpt id="p3">**</bpt>Добавить ссылку<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Reference Manager<ept id="p1">**</ept> dialog, choose <bpt id="p2">**</bpt>Browse<ept id="p2">**</ept> and browse to the location of the built <ph id="ph1">`Library.dll`</ph> (under the ..Golden\src\Library\bin\Debug\netstandard1.4 path), and then click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</source>
          <target state="translated">В диалоговом окне <bpt id="p1">**</bpt>Диспетчер ссылок<ept id="p1">**</ept> выберите <bpt id="p2">**</bpt>Обзор<ept id="p2">**</ept>, перейдите к расположению собранной библиотеки <ph id="ph1">`Library.dll`</ph> (по пути ..Golden\src\Library\bin\Debug\netstandard1.4), а затем нажмите кнопку <bpt id="p3">**</bpt>Добавить<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You could also package the library and reference the package, as another way to reference .NET Core code from the .NET Framework.</source>
          <target state="translated">В качестве еще одного способа сослаться на код .NET Core из .NET Framework можно также упаковать библиотеку и сослаться на пакет.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Open the context menu for the <bpt id="p1">**</bpt>References<ept id="p1">**</ept> node and choose <bpt id="p2">**</bpt>Manage NuGet Packages<ept id="p2">**</ept>.</source>
          <target state="translated">Откройте контекстное меню узла <bpt id="p1">**</bpt>Ссылки<ept id="p1">**</ept> и выберите пункт <bpt id="p2">**</bpt>Управление пакетами NuGet<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Choose "nuget.org" as the <bpt id="p1">**</bpt>Package source<ept id="p1">**</ept>, and choose the <bpt id="p2">**</bpt>Browse<ept id="p2">**</ept> tab.</source>
          <target state="translated">Выберите nuget.org в качестве <bpt id="p1">**</bpt>источника пакета<ept id="p1">**</ept> и перейдите на вкладку <bpt id="p2">**</bpt>Обзор<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Check the <bpt id="p1">**</bpt>Include prerelease<ept id="p1">**</ept> checkbox, and then browse for <bpt id="p2">**</bpt>Newtonsoft.Json<ept id="p2">**</ept>.</source>
          <target state="translated">Установите флажок <bpt id="p1">**</bpt>Включить предварительные выпуски<ept id="p1">**</ept> и найдите файл <bpt id="p2">**</bpt>Newtonsoft.Json<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Install<ept id="p1">**</ept>.</source>
          <target state="translated">Нажмите кнопку <bpt id="p1">**</bpt>Установить<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>FxApp<ept id="p1">**</ept> project, open the <ph id="ph1">`Program.cs`</ph> file and add a <ph id="ph2">`using Library;`</ph> directive to the top of the file, and add <ph id="ph3">`Console.WriteLine($"The answer is {new Thing().Get(42)}.");`</ph> to the <ph id="ph4">`Main`</ph> method of the program.</source>
          <target state="translated">В проекте <bpt id="p1">**</bpt>FxApp<ept id="p1">**</ept> откройте файл <ph id="ph1">`Program.cs`</ph> и добавьте директиву <ph id="ph2">`using Library;`</ph> в начало файла, а затем добавьте строку <ph id="ph3">`Console.WriteLine($"The answer is {new Thing().Get(42)}.");`</ph> в метод <ph id="ph4">`Main`</ph> программы.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Set a breakpoint after the line that you just added.</source>
          <target state="translated">Установите точку останова после только что добавленной строки.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Make <bpt id="p1">**</bpt>FxApp<ept id="p1">**</ept> the startup application for the solution.</source>
          <target state="translated">Сделайте <bpt id="p1">**</bpt>FxApp<ept id="p1">**</ept> запускаемым приложением решения.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Press F5 to run the app.</source>
          <target state="translated">Нажмите клавишу F5 для запуска приложения.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The application should build and hit the breakpoint.</source>
          <target state="translated">Должна быть выполнена сборка приложения и достигнута точка останова.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The application output should be "The answer is 42.".</source>
          <target state="translated">Приложение должно выводить строку The answer is 42.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>On Windows platform you can use MSTest.</source>
          <target state="translated">На платформе Windows можно использовать средство MSTest.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Find out more in the <bpt id="p1">[</bpt>Using MSTest on Windows document<ept id="p1">](../testing/using-mstest-on-windows.md)</ept>.</source>
          <target state="translated">Узнайте больше об <bpt id="p1">[</bpt>использовании MSTest в документе Windows<ept id="p1">](../testing/using-mstest-on-windows.md)</ept>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Moving a library from netstandard 1.4 to 1.3</source>
          <target state="translated">Перенос библиотеки с версии netstandard 1.4 в версию 1.3</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, open the <ph id="ph1">`project.json`</ph> file in the <bpt id="p1">**</bpt>Library<ept id="p1">**</ept> project.</source>
          <target state="translated">В обозревателе решений откройте файл <ph id="ph1">`project.json`</ph> в проекте <bpt id="p1">**</bpt>Library<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Replace <ph id="ph1">`frameworks": { "netstandard1.4" }`</ph> with <ph id="ph2">`frameworks": { "netstandard1.3" }`</ph>.</source>
          <target state="translated">Замените <ph id="ph1">`frameworks": { "netstandard1.4" }`</ph> объектом <ph id="ph2">`frameworks": { "netstandard1.3" }`</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Library<ept id="p1">**</ept> project, open the context menu for the <bpt id="p2">**</bpt>References<ept id="p2">**</ept> node and choose <bpt id="p3">**</bpt>Restore Packages<ept id="p3">**</ept>.</source>
          <target state="translated">В проекте <bpt id="p1">**</bpt>Library<ept id="p1">**</ept> откройте контекстное меню узла <bpt id="p2">**</bpt>Ссылки<ept id="p2">**</ept> и выберите пункт <bpt id="p3">**</bpt>Восстановить пакеты<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Build<ept id="p1">**</ept> menu, choose <bpt id="p2">**</bpt>Build Library<ept id="p2">**</ept>.</source>
          <target state="translated">В меню <bpt id="p1">**</bpt>Сборка<ept id="p1">**</ept> выберите пункт <bpt id="p2">**</bpt>Собрать библиотеку<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Remove the <ph id="ph1">`Library`</ph> reference from the <bpt id="p1">**</bpt>FxApp<ept id="p1">**</ept> then add it back using the ..Golden\src\Library\bin\Debug\netstandard1.3 path.</source>
          <target state="translated">Удалите ссылку <ph id="ph1">`Library`</ph> из проекта <bpt id="p1">**</bpt>FxApp<ept id="p1">**</ept>, а затем добавьте ее снова, используя путь ..Golden\src\Library\bin\Debug\netstandard1.3.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>This will now reference the 1.3 version.</source>
          <target state="translated">Теперь ссылка будет указывать на версию 1.3.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Press F5 to run the application.</source>
          <target state="translated">Нажмите клавишу F5 для запуска приложения.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Everything should still work as it did before.</source>
          <target state="translated">Все должно работать так же, как и раньше.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Check that the application output is "The answer is 42.", that the breakpoint was hit, and that variables can be inspected.</source>
          <target state="translated">Проверьте, выводит ли приложение строку The answer is 42, достигается ли точка останова и проверяются ли переменные.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A mixed PCL library and .NET Framework application</source>
          <target state="translated">Смешанное приложение на основе библиотеки PCL и платформы .NET Framework</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Close the previous solution if it was open: you will be starting a new script from this section on.</source>
          <target state="translated">Закройте предыдущее решение, если оно открыто: с этого раздела вы начнете разрабатывать новый скрипт.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Writing the library</source>
          <target state="translated">Написание библиотеки</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>In Visual Studio, choose <bpt id="p1">**</bpt>File<ept id="p1">**</ept>, <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</source>
          <target state="translated">В Visual Studio последовательно щелкните <bpt id="p1">**</bpt>Файл<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Создать<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Проект<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog, expand the <bpt id="p2">**</bpt>Visual C#<ept id="p2">**</ept> node, and choose <bpt id="p3">**</bpt>Class Library (Portable for iOS, Android and Windows)<ept id="p3">**</ept>.</source>
          <target state="translated">В диалоговом окне <bpt id="p1">**</bpt>Новый проект<ept id="p1">**</ept> разверните узел <bpt id="p2">**</bpt>Visual C#<ept id="p2">**</ept>, а затем выберите шаблон <bpt id="p3">**</bpt>Библиотека классов (переносимая для iOS, Android и Windows)<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Name the project "PCLLibrary" and the solution "GoldenPCL".</source>
          <target state="translated">Присвойте проекту имя PCLLibrary, а решению — имя GoldenPCL.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Leave <bpt id="p1">**</bpt>Create directory for solution<ept id="p1">**</ept> checked.</source>
          <target state="translated">Оставьте флажок <bpt id="p1">**</bpt>Создать каталог для решения<ept id="p1">**</ept> установленным.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept>.</source>
          <target state="translated">Нажмите кнопку <bpt id="p1">**</bpt>ОК<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, open the context menu for the <bpt id="p1">**</bpt>References<ept id="p1">**</ept> node and choose <bpt id="p2">**</bpt>Manage NuGet Packages<ept id="p2">**</ept>.</source>
          <target state="translated">В обозревателе решений откройте контекстное меню узла <bpt id="p1">**</bpt>Ссылки<ept id="p1">**</ept> и выберите пункт <bpt id="p2">**</bpt>Управление пакетами NuGet<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Choose "nuget.org" as the <bpt id="p1">**</bpt>Package source<ept id="p1">**</ept>, and choose the <bpt id="p2">**</bpt>Browse<ept id="p2">**</ept> tab.</source>
          <target state="translated">Выберите nuget.org в качестве <bpt id="p1">**</bpt>источника пакета<ept id="p1">**</ept> и перейдите на вкладку <bpt id="p2">**</bpt>Обзор<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Check the <bpt id="p1">**</bpt>Include prerelease<ept id="p1">**</ept> checkbox, and then browse for <bpt id="p2">**</bpt>Newtonsoft.Json<ept id="p2">**</ept>.</source>
          <target state="translated">Установите флажок <bpt id="p1">**</bpt>Включить предварительные выпуски<ept id="p1">**</ept> и найдите файл <bpt id="p2">**</bpt>Newtonsoft.Json<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>Install<ept id="p1">**</ept>.</source>
          <target state="translated">Нажмите кнопку <bpt id="p1">**</bpt>Установить<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Rename the class "Thing" and add a method: <ph id="ph1">`public int Get(int number) =&gt; Newtonsoft.Json.JsonConvert.DeserializeObject&lt;int&gt;($"{number}");`</ph></source>
          <target state="translated">Переименуйте класс в Thing и добавьте метод: <ph id="ph1">`public int Get(int number) =&gt; Newtonsoft.Json.JsonConvert.DeserializeObject&lt;int&gt;($"{number}");`</ph></target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Build<ept id="p1">**</ept> menu, choose <bpt id="p2">**</bpt>Build Solution<ept id="p2">**</ept>, and verify that the solution builds.</source>
          <target state="translated">В меню <bpt id="p1">**</bpt>Сборка<ept id="p1">**</ept> выберите пункт <bpt id="p2">**</bpt>Собрать решение<ept id="p2">**</ept> и проверьте, выполняется ли сборка решения.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Writing the console app</source>
          <target state="translated">Написание консольного приложения</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, open the context menu for the <bpt id="p1">**</bpt>Solution 'GoldenPCL'<ept id="p1">**</ept> node and choose <bpt id="p2">**</bpt>Add<ept id="p2">**</ept>.</source>
          <target state="translated">В обозревателе решений в контекстном меню узла <bpt id="p1">**</bpt>Решение GoldenPCL<ept id="p1">**</ept> выберите пункт <bpt id="p2">**</bpt>Добавить<ept id="p2">**</ept>,</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>New Project<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Новый проект<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog, expand the <bpt id="p2">**</bpt>Visual C#<ept id="p2">**</ept> node, choose <bpt id="p3">**</bpt>Console Application<ept id="p3">**</ept>, and name the project "App".</source>
          <target state="translated">В диалоговом окне <bpt id="p1">**</bpt>Новый проект<ept id="p1">**</ept> разверните узел <bpt id="p2">**</bpt>Visual C#<ept id="p2">**</ept>, выберите <bpt id="p3">**</bpt>Консольное приложение<ept id="p3">**</ept> и присвойте проекту имя App.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>App<ept id="p1">**</ept> project, open the context menu for the <bpt id="p2">**</bpt>References<ept id="p2">**</ept> node and choose <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>,  <bpt id="p4">**</bpt>Reference<ept id="p4">**</ept>.</source>
          <target state="translated">В проекте <bpt id="p1">**</bpt>App<ept id="p1">**</ept> откройте контекстное меню узла <bpt id="p2">**</bpt>Ссылки<ept id="p2">**</ept> и выберите пункты <bpt id="p3">**</bpt>Добавить<ept id="p3">**</ept>, <bpt id="p4">**</bpt>Ссылка<ept id="p4">**</ept>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Reference Manager<ept id="p1">**</ept> dialog, choose <bpt id="p2">**</bpt>Browse<ept id="p2">**</ept> and browse to the location of the built <ph id="ph1">`PCLLibrary.dll`</ph> (under the ..\GoldenPCL\PCLLibrary\bin\Debug path), and then click <bpt id="p3">**</bpt>Add<ept id="p3">**</ept>.</source>
          <target state="translated">В диалоговом окне <bpt id="p1">**</bpt>Диспетчер ссылок<ept id="p1">**</ept> выберите <bpt id="p2">**</bpt>Обзор<ept id="p2">**</ept>, перейдите к расположению собранной библиотеки <ph id="ph1">`PCLLibrary.dll`</ph> (по пути ..\GoldenPCL\PCLLibrary\bin\Debug), а затем нажмите кнопку <bpt id="p3">**</bpt>Добавить<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>App<ept id="p1">**</ept> project, open the <ph id="ph1">`Program.cs`</ph> file and add a <ph id="ph2">`using PCLLibrary;`</ph> directive to the top of the file, and add <ph id="ph3">`Console.WriteLine($"The answer is {new Thing().Get(42)}.");`</ph> to the <ph id="ph4">`Main`</ph> method of the program.</source>
          <target state="translated">В проекте <bpt id="p1">**</bpt>App<ept id="p1">**</ept> откройте файл <ph id="ph1">`Program.cs`</ph> и добавьте директиву <ph id="ph2">`using PCLLibrary;`</ph> в начало файла, а затем добавьте строку <ph id="ph3">`Console.WriteLine($"The answer is {new Thing().Get(42)}.");`</ph> в метод <ph id="ph4">`Main`</ph> программы.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Set a breakpoint after the line that you just added..</source>
          <target state="translated">Установите точку останова после только что добавленной строки.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>In Solution Explorer, open the context menu for the <bpt id="p1">**</bpt>App<ept id="p1">**</ept> node and choose <bpt id="p2">**</bpt>Set as StartUp Project<ept id="p2">**</ept>.</source>
          <target state="translated">В обозревателе решений откройте контекстное меню узла <bpt id="p1">**</bpt>App<ept id="p1">**</ept> и выберите пункт <bpt id="p2">**</bpt>Назначить запускаемым проектом<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Press F5 to run the app.</source>
          <target state="translated">Нажмите клавишу F5 для запуска приложения.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The application should build, run, and hit the breakpoint after it outputs "The answer is 42.".</source>
          <target state="translated">Должна быть выполнена сборка и запуск приложения и достигнута точка останова после вывода строки The answer is 42.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Moving a PCL to a NetStandard library</source>
          <target state="translated">Перемещение переносимой библиотеки классов в библиотеку NetStandard</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The Portable Class Library tooling can automatically modify your PCL to target .NET Standard.</source>
          <target state="translated">Средства переносимой библиотеки классов (PCL) могут автоматически изменить библиотеку PCL так, чтобы она предназначалась для .NET Standard.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Double click on the “Properties” node to open the Project Property page</source>
          <target state="translated">Дважды щелкните узел "Свойства", чтобы открыть страницу свойств проекта.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Under the “Targeting header” click the hyperlink “Target .NET Platform Standard”</source>
          <target state="translated">Под заголовком "Нацеливание" щелкните гиперссылку "Нацелить на стандартную платформу .NET".</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Click “Yes” when asked for confirmation</source>
          <target state="translated">В ответ на запрос подтверждения щелкните "Да".</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The tooling will automatically select the version of .NET Standard that includes all of the targets originally targeted by your PCL.</source>
          <target state="translated">Средство автоматически выберет версию .NET Standard, которая включает все целевые платформы, для которых предназначалась библиотека PCL.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>You can target a different version of .NET Standard using the .NET Standard dropdown in the project property page.</source>
          <target state="translated">Вы можете нацелить библиотеку на другую версию .NET Standard с помощью раскрывающегося списка .NET Standard на странице свойств проекта.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>If you previously had a packages.config, you may be prompted to uninstall any installed packages before the conversion.</source>
          <target state="translated">Если ранее имелся файл packages.config, вам может быть предложено удалить все установленные пакеты перед преобразованием.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Manually edit project.json to target .NET Standard from an existing Portable Class Library</source>
          <target state="translated">Изменение файла project.json вручную для нацеливания существующей переносимой библиотеки классов на .NET Standard</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>If your project.json contains “dnxcore50” in the “supports” element, remove it.</source>
          <target state="translated">Если в файле project.json имеется запись dnxcore50 в элементе supports, удалите ее.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Remove the dependency on “Microsoft.NETCore”</source>
          <target state="translated">Удалите зависимость от Microsoft.NETCore.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Modify the dependency on “Microsoft.NETCore.Portable.Compatibility” version “1.0.0” to version “1.0.1”</source>
          <target state="translated">Измените зависимость от Microsoft.NETCore.Portable.Compatibility, поменяв версию 1.0.0 на 1.0.1.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Add a dependency on “NETStandard.Library” version “1.6.0”</source>
          <target state="translated">Добавьте зависимость от NETStandard.Library версии 1.6.0.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>From the “frameworks” element, remove the “dotnet” framework (and the “imports” element within it)</source>
          <target state="translated">Из элемента frameworks удалите платформу dotnet (и содержащийся в ней элемент imports).</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Add <ph id="ph1">` "netstandard1.x” : { } `</ph> to the frameworks element, where x is replaced with the version of .NET Standard you want to target</source>
          <target state="translated">Добавьте <ph id="ph1">` "netstandard1.x” : { } `</ph> в элемент frameworks, заменив x на целевую версию .NET Standard.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Example project.json</source>
          <target state="translated">Пример файла project.json</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>This project.json includes supports clauses for UWP and .NET 4.6 and targets netstandard1.3:</source>
          <target state="translated">Этот файл project.json содержит предложения supports для UWP и .NET 4.6 и осуществляет нацеливание на netstandard1.3:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>