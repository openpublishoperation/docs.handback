<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a941a7e1bcafa4f342907f3160dbbf8e6ff4bac9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\testing\unit-testing-with-dotnet-test.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b4524e861b4ecf8137e207d600c2404d0db001e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f069bf13a0c0508f4334776c12f670a09056f90b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Unit Testing in .NET Core using dotnet test</source>
          <target state="translated">Тестирование модулей в .NET Core с помощью команды dotnet-test</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Unit Testing in .NET Core using dotnet test</source>
          <target state="translated">Тестирование модулей в .NET Core с помощью команды dotnet-test</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Unit Testing in .NET Core using dotnet test</source>
          <target state="translated">Тестирование модулей в .NET Core с помощью команды dotnet-test</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>By <bpt id="p1">[</bpt>Steve Smith<ept id="p1">](http://ardalis.com)</ept> and <bpt id="p2">[</bpt>Bill Wagner<ept id="p2">](https://github.com/BillWagner)</ept></source>
          <target state="translated">Авторы: <bpt id="p1">[</bpt>Стив Смит<ept id="p1">](http://ardalis.com)</ept> (Steve Smith) и <bpt id="p2">[</bpt>Билл Вагнер<ept id="p2">](https://github.com/BillWagner)</ept> (Bill Wagner)</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>View or download sample code<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/getting-started/unit-testing-using-dotnet-test)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Просмотреть или скачать образец кода<ept id="p1">](https://github.com/dotnet/docs/tree/master/samples/core/getting-started/unit-testing-using-dotnet-test)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Creating the Projects</source>
          <target state="translated">Создание проектов</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Writing Libraries with Cross Platform Tools<ept id="p1">](../tutorials/libraries.md)</ept> has information on organizing multi-project solutions for both the source and the tests.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>Написание библиотек с помощью кроссплатформенных средств<ept id="p1">](../tutorials/libraries.md)</ept> приводятся сведения об организации исходного кода и тестов для решений, состоящих из нескольких проектов.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This article follows those conventions.</source>
          <target state="translated">В этой статье используются эти соглашения.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The final project structure will be something like this:</source>
          <target state="translated">Итоговая структура проекта будет похожа на следующую:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In the root directory, you'll need to create a <ph id="ph1">`global.json`</ph> that contains the names of your <ph id="ph2">`src`</ph> and <ph id="ph3">`test`</ph> directories:</source>
          <target state="translated">В корневом каталоге необходимо создать файл <ph id="ph1">`global.json`</ph>, содержащий имена каталогов <ph id="ph2">`src`</ph> и <ph id="ph3">`test`</ph>:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Creating the source project</source>
          <target state="translated">Создание исходного проекта</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Then, in the <ph id="ph1">`src`</ph> directory, create the <ph id="ph2">`PrimeService`</ph> directory.</source>
          <target state="translated">Затем в каталоге <ph id="ph1">`src`</ph> создайте каталог <ph id="ph2">`PrimeService`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>CD into that directory, and run <ph id="ph1">`dotnet new -t lib`</ph> to create the source project.</source>
          <target state="translated">Перейдите в этот каталог и выполните команду <ph id="ph1">`dotnet new -t lib`</ph>, чтобы создать исходный проект.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Rename <ph id="ph1">`Library.cs`</ph> as <ph id="ph2">`PrimeService.cs`</ph>.</source>
          <target state="translated">Переименуйте <ph id="ph1">`Library.cs`</ph> в <ph id="ph2">`PrimeService.cs`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To use test-driven development (TDD), you'll create a failing implementation of the <ph id="ph1">`PrimeService`</ph> class:</source>
          <target state="translated">Чтобы использовать разработку на основе тестирования (TDD), вы создадите сбойную реализацию класса <ph id="ph1">`PrimeService`</ph>:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creating the test project</source>
          <target state="translated">Создание тестового проекта</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Next, cd into the 'test' directory, and create the <ph id="ph1">`PrimeServices.Tests`</ph> directory.</source>
          <target state="translated">Далее перейдите в каталог test и создайте каталог <ph id="ph1">`PrimeServices.Tests`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>CD into the <ph id="ph1">`PrimeServices.Tests`</ph> directory and create a new project using <ph id="ph2">`dotnet new -t xunittest`</ph>.</source>
          <target state="translated">Перейдите в каталог <ph id="ph1">`PrimeServices.Tests`</ph> и создайте проект с помощью команды <ph id="ph2">`dotnet new -t xunittest`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet new -t xunittest`</ph> creates a test project that uses xunit as the test library.</source>
          <target state="translated"><ph id="ph1">`dotnet new -t xunittest`</ph> создает тестовый проект, который использует XUnit в качестве библиотеки тестов.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The generated template configured the test runner at the root of <ph id="ph1">`project.json`</ph>:</source>
          <target state="translated">Созданный шаблон настроил средство запуска тестов в корне <ph id="ph1">`project.json`</ph>:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The template also sets the framework node to use <ph id="ph1">`netcoreapp1.0`</ph>, and include the required imports to get xUnit.net to work with .NET Core RTM:</source>
          <target state="translated">Шаблон также задает использование <ph id="ph1">`netcoreapp1.0`</ph> в узле платформы и включает в него необходимые директивы import, обеспечивающие работу xUnit.net с .NET Core RTM:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The test project requires other packages to create and run unit tests.</source>
          <target state="translated">Тестовый проект требует других пакетов для создания и выполнения модульных тестов. Команда</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet new`</ph> added xunit, and the xunit runner.</source>
          <target state="translated"><ph id="ph1">`dotnet new`</ph> добавляет пакет xUnit и средство запуска xUnit.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You need to add the PrimeService package as another dependency to the project:</source>
          <target state="translated">Вам необходимо добавить пакет PrimeService в проект в качестве еще одной зависимости:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Notice that the <ph id="ph1">`PrimeService`</ph> project does not include any directory path information.</source>
          <target state="translated">Обратите внимание на то, что проект <ph id="ph1">`PrimeService`</ph> не содержит сведений о путях к каталогам.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Because you created the project structure to match the expected organization of <ph id="ph1">`src`</ph> and <ph id="ph2">`test`</ph>, and the <ph id="ph3">`global.json`</ph> file indicates that, the build system will find the correct location for the project.</source>
          <target state="translated">Так как структура проекта соответствует ожидаемой организации папок <ph id="ph1">`src`</ph> и <ph id="ph2">`test`</ph>, что указано в файле <ph id="ph3">`global.json`</ph>, система сборки правильно определит расположение проекта.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You add the <ph id="ph1">`"target": "project"`</ph> element to inform NuGet that it should look in project directories, not in the NuGet feed.</source>
          <target state="translated">Добавляя элемент <ph id="ph1">`"target": "project"`</ph>, вы сообщаете NuGet, что поиск необходимо осуществлять в каталогах проекта, а не в канале NuGet.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Without this key, you might download a package with the same name as your internal library.</source>
          <target state="translated">При отсутствии этого ключа вы можете скачать пакет с тем же именем, что и у внутренней библиотеки.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can see the entire file in the <bpt id="p1">[</bpt>samples repository<ept id="p1">](https://github.com/dotnet/docs/blob/master/samples/core/getting-started/unit-testing-using-dotnet-test/test/PrimeService.Tests/project.json)</ept> on GitHub.</source>
          <target state="translated">Все содержимое файла можно просмотреть в <bpt id="p1">[</bpt>репозитории образцов<ept id="p1">](https://github.com/dotnet/docs/blob/master/samples/core/getting-started/unit-testing-using-dotnet-test/test/PrimeService.Tests/project.json)</ept> на сайте GitHub.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>After this initial structure is in place, you can write your first test.</source>
          <target state="translated">Создав эту начальную структуру, вы можете написать первый тест.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Once you verify that first unit test, everything is configured and should run smoothly as you add features and tests.</source>
          <target state="translated">Успешная проверка этого первого модульного теста означает, что все настроено и дальнейшее добавление компонентов и тестов должно происходить без проблем.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Creating the first test</source>
          <target state="translated">Создание первого теста</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The TDD approach calls for writing one failing test, then making it pass, then repeating the process.</source>
          <target state="translated">Подход TDD предполагает создание теста, который завершается ошибкой, обеспечение его успешного выполнения и повтор этого процесса.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>So, let's write that one failing test.</source>
          <target state="translated">Итак, создадим этот тест, завершающийся ошибкой.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Remove <ph id="ph1">`program.cs`</ph> from the <ph id="ph2">`PrimeService.Tests`</ph> directory, and create a new C# file with the following content:</source>
          <target state="translated">Удалите файл <ph id="ph1">`program.cs`</ph> из каталога <ph id="ph2">`PrimeService.Tests`</ph> и создайте файл C# со следующим содержимым:</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`[Fact]`</ph> attribute denotes a method as a single test.</source>
          <target state="translated">Атрибут <ph id="ph1">`[Fact]`</ph> означает, что метод используется как отдельный тест.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Save this file, then run <ph id="ph1">`dotnet build`</ph> to build the test project.</source>
          <target state="translated">Сохраните этот файл, а затем выполните команду <ph id="ph1">`dotnet build`</ph> для сборки тестового проекта.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If you have not already built the <ph id="ph1">`PrimeService`</ph> project, the build system will detect that and build it because it is a dependency of the test project.</source>
          <target state="translated">Если вы еще не выполнили сборку проекта <ph id="ph1">`PrimeService`</ph>, система сборки обнаружит это и выполнит ее, так как это зависимость тестового проекта.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Now, execute <ph id="ph1">`dotnet test`</ph> to run the tests from the console.</source>
          <target state="translated">Теперь выполните команду <ph id="ph1">`dotnet test`</ph>, чтобы запустить тесты из консоли.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The xunit test runner has the program entry point to run your tests from the Console.</source>
          <target state="translated">Средство запуска тестов xUnit имеет точку входа в программу для выполнения тестов из консоли.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet test`</ph> starts the test runner, and provides a command line argument to the testrunner indicating the assembly that contains your tests.</source>
          <target state="translated"><ph id="ph1">`dotnet test`</ph> запускает средство запуска тестов и передает ему аргумент командной строки, который указывает на сборку, содержащую тесты.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Your test fails.</source>
          <target state="translated">Тест не будет пройден.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You haven't created the implementation yet.</source>
          <target state="translated">Вы еще не создали реализацию.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Write the simplest code to make this one test pass:</source>
          <target state="translated">Напишите простейший код, чтобы тест выполнялся успешно:</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Adding More Features</source>
          <target state="translated">Добавление дополнительных возможностей</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Now, that you've made one test pass, it's time to write more.</source>
          <target state="translated">Теперь, когда этот тест проходит успешно, пора создать дополнительные тесты.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>There are a few other simple cases for prime numbers: 0, -1.</source>
          <target state="translated">Есть еще ряд элементарных случаев с простыми числами: 0, -1.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You could add those as new tests, with the <ph id="ph1">`[Fact]`</ph> attribute, but that quickly becomes tedious.</source>
          <target state="translated">Можно добавить их в качестве тестов с помощью атрибутов <ph id="ph1">`[Fact]`</ph>, но это скоро станет утомительным.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>There are other xunit attributes that enable you to write a suite of similar tests.</source>
          <target state="translated">Есть другие атрибуты xUnit, которые позволяют создавать наборы похожих тестов.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Theory`</ph> represents a suite of tests that execute the same code, but have different input arguments.</source>
          <target state="translated"><ph id="ph1">`Theory`</ph> представляет набор тестов, которые выполняют один и тот же код, но имеют разные входные аргументы.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">`[InlineData]`</ph> attribute to specify values for those inputs.</source>
          <target state="translated">С помощью атрибута <ph id="ph1">`[InlineData]`</ph> можно указать значения для этих входных аргументов.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Instead of creating new tests, leverage these two attributes to create a single theory that tests some values less than 2, which is the lowest prime number:</source>
          <target state="translated">Вместо создания новых тестов используйте эти два атрибута, чтобы создать единый алгоритм, который проверяет некоторые значения менее 2, то есть наименьшего простого числа:</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Run <ph id="ph1">`dotnet test`</ph> and you'll see that two of these tests fail.</source>
          <target state="translated">Выполните команду <ph id="ph1">`dotnet test`</ph>, и вы увидите, что два из этих тестов завершились ошибкой.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>You can make them pass by changing the service.</source>
          <target state="translated">Чтобы они проходили успешно, измените код.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You need to change the <ph id="ph1">`if`</ph> clause at the beginning of the method:</source>
          <target state="translated">Вам необходимо изменить предложение <ph id="ph1">`if`</ph> в начале метода:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Now, these tests all pass.</source>
          <target state="translated">Теперь все эти тесты проходят успешно.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You continue to iterate by adding more tests, more theories, and more code in the main library.</source>
          <target state="translated">Вы можете продолжать итерации, добавляя тесты, алгоритмы и код в главной библиотеке.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>You'll quickly end up with the <bpt id="p1">[</bpt>finished version of the tests<ept id="p1">](https://github.com/dotnet/docs/blob/master/samples/core/getting-started/unit-testing-using-dotnet-test/test/PrimeService.Tests/PrimeServie_IsPrimeShould.cs)</ept> and the <bpt id="p2">[</bpt>complete implementation of the library<ept id="p2">](https://github.com/dotnet/docs/blob/master/samples/core/getting-started/unit-testing-using-dotnet-test/src/PrimeService/PrimeService.cs)</ept>.</source>
          <target state="translated">Вскоре вы получите <bpt id="p1">[</bpt>готовую версию тестов<ept id="p1">](https://github.com/dotnet/docs/blob/master/samples/core/getting-started/unit-testing-using-dotnet-test/test/PrimeService.Tests/PrimeServie_IsPrimeShould.cs)</ept> и <bpt id="p2">[</bpt>полную реализацию библиотеки<ept id="p2">](https://github.com/dotnet/docs/blob/master/samples/core/getting-started/unit-testing-using-dotnet-test/src/PrimeService/PrimeService.cs)</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You've built a small library and a set of unit tests for that library.</source>
          <target state="translated">Вы создали небольшую библиотеку и набор модульных тестов для нее.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>You've structured this solution so that adding new packages and tests will be seamless, and you can concentrate on the problem at hand.</source>
          <target state="translated">Вы структурировали решение, чтобы упростить добавление новых пакетов и тестов и получить возможность сосредоточиться на основной проблеме.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The tools will run automatically.</source>
          <target state="translated">Средства будут выполняться автоматически.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>On Windows platform you can use MSTest.</source>
          <target state="translated">На платформе Windows можно использовать средство MSTest.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Find out more in the <bpt id="p1">[</bpt>Using MSTest on Windows document<ept id="p1">](./using-mstest-on-windows.md)</ept>.</source>
          <target state="translated">Узнайте больше об <bpt id="p1">[</bpt>использовании MSTest в документе Windows<ept id="p1">](./using-mstest-on-windows.md)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>