<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9ae9cb47955fb926507be32afb875efd3260ce3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\regular-expressions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb8cd979c415dc48a6370770f1440df5f7f1a5bc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3634ea50ae229691be1927e65384f249f58a6e60</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Regular expressions in .NET</source>
          <target state="translated">Регулярные выражения в .NET</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Regular expressions in .NET</source>
          <target state="translated">Регулярные выражения в .NET</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Regular expressions in .NET</source>
          <target state="translated">Регулярные выражения в .NET</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Regular expressions provide a powerful, flexible, and efficient method for processing text.</source>
          <target state="translated">Регулярные выражения предоставляют мощный, гибкий и эффективный способ обработки текста.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The extensive pattern-matching notation of regular expressions enables you to quickly parse large amounts of text to find specific character patterns; to validate text to ensure that it matches a predefined pattern (such as an e-mail address); to extract, edit, replace, or delete text substrings; and to add the extracted strings to a collection in order to generate a report.</source>
          <target state="translated">Комплексная нотация сопоставления шаблонов регулярных выражений позволяет быстро анализировать большие объемы текста для поиска определенных шаблонов символов, проверять текст на соответствие предопределенному шаблону (например, адресу электронной почты, извлекать, изменять, заменять и удалять текстовые подстроки, а также добавлять извлеченные строки в коллекцию для создания отчета.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For many applications that deal with strings or that parse large blocks of text, regular expressions are an indispensable tool.</source>
          <target state="translated">Для многих приложений, которые работают со строками или анализируют большие блоки текста, регулярные выражения — незаменимый инструмент.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>How Regular Expressions Work</source>
          <target state="translated">Принцип работы регулярных выражений</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The centerpiece of text processing with regular expressions is the regular expression engine, which is represented by the <bpt id="p1">[</bpt>System.Text.RegularExpressions.Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept> object in .NET.</source>
          <target state="translated">Главный компонент обработки текста с помощью регулярных выражений — это механизм регулярных выражений, представленный в платформе .NET объектом <bpt id="p1">[</bpt>System.Text.RegularExpressions.Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>At a minimum, processing text using regular expressions requires that the regular expression engine be provided with the following two items of information:</source>
          <target state="translated">Как минимум, для обработки текста с использованием в регулярных выражений механизму регулярных выражений необходимо предоставить два следующих элемента:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The regular expression pattern to identify in the text.</source>
          <target state="translated">Шаблон регулярного выражения для определения текста.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In .NET, regular expression patterns are defined by a special syntax or language, which is compatible with Perl 5 regular expressions and adds some additional features such as right-to-left matching.</source>
          <target state="translated">В .NET шаблоны регулярных выражений определяются специальным синтаксисом или языком, который совместим с регулярными выражениями Perl 5 и добавляет дополнительные возможности, например сопоставление справа налево.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Regular Expression Language - Quick Reference<ept id="p1">](quick-ref.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Элементы языка регулярных выражений. Краткий справочник<ept id="p1">](quick-ref.md)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The text to parse for the regular expression pattern.</source>
          <target state="translated">Текст, который будет проанализирован на соответствие шаблону регулярного выражения.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The methods of the <bpt id="p1">[</bpt>Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept> class let you perform the following operations:</source>
          <target state="translated">Методы класса <bpt id="p1">[</bpt>Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept> позволяют выполнять перечисленные далее операции.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Determine whether the regular expression pattern occurs in the input text by calling the <bpt id="p1">[</bpt>Regex.IsMatch<ept id="p1">](xref:System.Text.RegularExpressions.Regex.IsMatch(System.String))</ept> method.</source>
          <target state="translated">Определить, входит ли шаблон регулярного выражения во входной текст, с помощью метода <bpt id="p1">[</bpt>Regex.IsMatch<ept id="p1">](xref:System.Text.RegularExpressions.Regex.IsMatch(System.String))</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For an example that uses the <bpt id="p1">[</bpt>IsMatch<ept id="p1">](xref:System.Text.RegularExpressions.Regex.IsMatch(System.String))</ept> method for validating text, see <bpt id="p2">[</bpt>How to: Verify that Strings Are in Valid Email Format<ept id="p2">](verify-format.md)</ept>.</source>
          <target state="translated">Пример, в котором для проверки текста используется метод <bpt id="p1">[</bpt>IsMatch<ept id="p1">](xref:System.Text.RegularExpressions.Regex.IsMatch(System.String))</ept>, см. в разделе <bpt id="p2">[</bpt>Практическое руководство. Проверка соответствия формата строк формату электронной почты<ept id="p2">](verify-format.md)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Retrieve one or all occurrences of text that matches the regular expression pattern by calling the <bpt id="p1">[</bpt>Regex.Match<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Match(System.String))</ept> or <bpt id="p2">[</bpt>Regex.Matches<ept id="p2">](xref:System.Text.RegularExpressions.Regex.Matches(System.String))</ept> method.</source>
          <target state="translated">Получить один или все экземпляры текста, соответствующего шаблону регулярного выражения, с помощью метода <bpt id="p1">[</bpt>Regex.Match<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Match(System.String))</ept> или <bpt id="p2">[</bpt>Regex.Matches<ept id="p2">](xref:System.Text.RegularExpressions.Regex.Matches(System.String))</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The former method returns a <bpt id="p1">[</bpt>System.Text.RegularExpressions.Match<ept id="p1">](xref:System.Text.RegularExpressions.Match)</ept> object that provides information about the matching text.</source>
          <target state="translated">Первый метод возвращает объект <bpt id="p1">[</bpt>System.Text.RegularExpressions.Match<ept id="p1">](xref:System.Text.RegularExpressions.Match)</ept>, который предоставляет сведения о соответствующем тексте.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The latter returns a <bpt id="p1">[</bpt>MatchCollection<ept id="p1">](xref:System.Text.RegularExpressions.MatchCollection)</ept> object that contains one <bpt id="p2">[</bpt>System.Text.RegularExpressions.Match<ept id="p2">](xref:System.Text.RegularExpressions.Match)</ept> object for each match found in the parsed text.</source>
          <target state="translated">Второй метод возвращает объект <bpt id="p1">[</bpt>MatchCollection<ept id="p1">](xref:System.Text.RegularExpressions.MatchCollection)</ept>, содержащий один объект <bpt id="p2">[</bpt>System.Text.RegularExpressions.Match<ept id="p2">](xref:System.Text.RegularExpressions.Match)</ept> для каждого соответствия, обнаруженного в обработанном тексте.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Replace text that matches the regular expression pattern by calling the <bpt id="p1">[</bpt>Regex.Replace<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String))</ept> method.</source>
          <target state="translated">Заменить текст, соответствующий шаблону регулярного выражения, с помощью метода <bpt id="p1">[</bpt>Regex.Replace<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String))</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For examples that use the <bpt id="p1">[</bpt>Replace<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String))</ept> method to change date formats and remove invalid characters from a string, see <bpt id="p2">[</bpt>How to: Strip Invalid Characters from a String<ept id="p2">](strip-characters.md)</ept> and <bpt id="p3">[</bpt>Regular Expression Example: Changing Date Formats<ept id="p3">](changing-formats.md)</ept>.</source>
          <target state="translated">Примеры использования метода <bpt id="p1">[</bpt>Replace<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String))</ept> для изменения форматов даты и удаления недопустимых символов из строки см. в разделах <bpt id="p2">[</bpt>Практическое руководство. Исключение недопустимых символов из строки<ept id="p2">](strip-characters.md)</ept> и <bpt id="p3">[</bpt>Пример регулярного выражения. Изменение форматов даты<ept id="p3">](changing-formats.md)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For an overview of the regular expression object model, see <bpt id="p1">[</bpt>The Regular Expression Object Model<ept id="p1">](object-model.md)</ept>.</source>
          <target state="translated">Обзор объектной модели регулярных выражений см. в разделе <bpt id="p1">[</bpt>Объектная модель регулярных выражений<ept id="p1">](object-model.md)</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information about the regular expression language, see <bpt id="p1">[</bpt>Regular Expression Language - Quick Reference<ept id="p1">](quick-ref.md)</ept>.</source>
          <target state="translated">Дополнительные сведения о языке регулярных выражений см. в разделе <bpt id="p1">[</bpt>Элементы языка регулярных выражений. Краткий справочник<ept id="p1">](quick-ref.md)</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Regular Expression Examples</source>
          <target state="translated">Примеры регулярных выражений</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> class includes a number of string search and replacement methods that you can use when you want to locate literal strings in a larger string.</source>
          <target state="translated">Класс <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> содержит ряд методов для поиска и замены строк, которые можно использовать для поиска строковых литералов в длинных строках.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Regular expressions are most useful either when you want to locate one of several substrings in a larger string, or when you want to identify patterns in a string, as the following examples illustrate.</source>
          <target state="translated">Регулярные выражения максимально полезны, если требуется найти одну из нескольких подстрок в длинной строке или определить шаблоны в строке, как показано в следующих примерах.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Example 1: Replacing Substrings</source>
          <target state="translated">Пример 1. Замена подстрок</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Assume that a mailing list contains names that sometimes include a title (Mr., Mrs., Miss, or Ms.) along with a first and last name.</source>
          <target state="translated">Предположим, что список рассылки содержит имена, в которые иногда входит обращение (Mr., Mrs., Miss или Ms.) в дополнение к имени и фамилии.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If you do not want to include the titles when you generate envelope labels from the list, you can use a regular expression to remove the titles, as the following example illustrates.</source>
          <target state="translated">Если вы не хотите включать обращения при создании этикеток для конвертов из списка, с помощью регулярного выражения их можно удалить, как показано в следующем примере.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The regular expression pattern <ph id="ph1">`(Mr\.? |Mrs\.? |Miss |Ms\.? )`</ph> matches any occurrence of "Mr ", "Mr. ", "Mrs ", "Mrs. ", "Miss ", "Ms or "Ms. ".</source>
          <target state="translated">Шаблон регулярного выражения <ph id="ph1">`(Mr\.? |Mrs\.? |Miss |Ms\.? )`</ph> сопоставляет все вхождения строк "Mr", "Mr.", "Mrs", "Mrs.", "Miss", "Ms" или "Ms.".</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The call to the <bpt id="p1">[</bpt>Regex.Replace<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String))</ept> method replaces the matched string with <bpt id="p2">[</bpt>String.Empty<ept id="p2">](xref:System.String.Empty)</ept>; in other words, it removes it from the original string.</source>
          <target state="translated">После вызова метода <bpt id="p1">[</bpt>Regex.Replace<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String))</ept> сопоставленная строка заменяется на <bpt id="p2">[</bpt>String.Empty<ept id="p2">](xref:System.String.Empty)</ept>. Другими словами, она удаляется из исходной строки.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Example 2: Identifying Duplicated Words</source>
          <target state="translated">Пример 2. Поиск повторяющихся слов</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Accidentally duplicating words is a common error that writers make.</source>
          <target state="translated">Случайный повтор слов — это распространенная ошибка при написании текстов.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A regular expression can be used to identify duplicated words, as the following example shows.</source>
          <target state="translated">Регулярное выражение можно использовать для определения повторяющихся слов, как показано в следующем примере.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The regular expression pattern <ph id="ph1">`\b(\w+?)\s\1\b`</ph> can be interpreted as follows:</source>
          <target state="translated">Шаблон регулярного выражения <ph id="ph1">`\b(\w+?)\s\1\b`</ph> интерпретируется следующим образом:</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Синтаксис</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Значение</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Start at a word boundary.</source>
          <target state="translated">Начало на границе слова.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Match one or more word characters, but as few characters as possible.</source>
          <target state="translated">Соответствует одному или нескольким символам слова (как можно меньшему количеству).</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Together, they form a group that can be referred to as <ph id="ph1">`\1`</ph>.</source>
          <target state="translated">Вместе они формируют группу, к которой можно обращаться как к <ph id="ph1">`\1`</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Match a white-space character.</source>
          <target state="translated">Соответствует пробелу.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Match the substring that is equal to the group named <ph id="ph1">`\1`</ph>.</source>
          <target state="translated">Сопоставление подстроки, равной группе с именем <ph id="ph1">`\1`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Match a word boundary.</source>
          <target state="translated">Соответствует границе слова.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Regex.Matches<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions))</ept> method is called with regular expression options set to <bpt id="p2">[</bpt>RegexOptions.IgnoreCase<ept id="p2">](xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase)</ept>.</source>
          <target state="translated">Метод <bpt id="p1">[</bpt>Regex.Matches<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions))</ept> вызывается с параметрами регулярного выражения <bpt id="p2">[</bpt>RegexOptions.IgnoreCase<ept id="p2">](xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase)</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Therefore, the match operation is case-insensitive, and the example identifies the substring "This this" as a duplication.</source>
          <target state="translated">Поэтому операция сопоставления учитывает регистр, а пример указывает, что подстрока "This this" является повтором.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Note that the input string includes the substring "this?</source>
          <target state="translated">Обратите внимание, что входная строка содержит подстроку "this?</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This".</source>
          <target state="translated">This".</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>However, because of the intervening punctuation mark, it is not identified as a duplication.</source>
          <target state="translated">Но из-за знака пунктуации она не считается повторением.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Example 3: Dynamically Building a Culture-Sensitive Regular Expression</source>
          <target state="translated">Пример 3. Динамическое создание регулярного выражения с учетом языка и региональных параметров</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following example illustrates the power of regular expressions combined with the flexibility offered by .NET's globalization features.</source>
          <target state="translated">Следующий пример демонстрирует преимущества использования регулярных выражений с гибкими возможностями глобализации .NET.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>It uses the <bpt id="p1">[</bpt>NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept> object to determine the format of currency values in the system's current culture.</source>
          <target state="translated">В примере объект <bpt id="p1">[</bpt>NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept> применяется для определения формата денежных значений в текущем языке и региональных параметрах системы.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>It then uses that information to dynamically construct a regular expression that extracts currency values from the text.</source>
          <target state="translated">Затем эти данные используются для динамического создания регулярного выражения, которое извлекает денежные значения из текста.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>For each match, it extracts the subgroup that contains the numeric string only, converts it to a <bpt id="p1">[</bpt>Decimal<ept id="p1">](xref:System.Decimal)</ept> value, and calculates a running total.</source>
          <target state="translated">Для каждого совпадения извлекается подгруппа, содержащая только числовые строки, которая преобразуется в значение <bpt id="p1">[</bpt>Decimal<ept id="p1">](xref:System.Decimal)</ept>, после чего рассчитывается промежуточный итог.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>On a computer whose current culture is English - United States (en-US), the example dynamically builds the regular expression <ph id="ph1">`\$\s*[-+]?([0-9]{0,3}(,[0-9]{3})*(\.[0-9]+)?)`</ph>.</source>
          <target state="translated">На компьютере с региональными параметрами "English - United States (en-US)" пример динамически создает регулярное выражение <ph id="ph1">`\$\s*[-+]?([0-9]{0,3}(,[0-9]{3})*(\.[0-9]+)?)`</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This regular expression pattern can be interpreted as follows:</source>
          <target state="translated">Шаблон регулярного выражения интерпретируется следующим образом:</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Синтаксис</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Значение</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Look for a single occurrence of the dollar symbol ($) in the input string.</source>
          <target state="translated">Выполняется поиск одного вхождения символа доллара ($) во входной строке.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The regular expression pattern string includes a backslash to indicate that the dollar symbol is to be interpreted literally rather than as a regular expression anchor.</source>
          <target state="translated">Строка шаблона регулярного выражения содержит обратную косую черту, что говорит о том, что символ доллара интерпретируется буквально, а не как привязка регулярного выражения.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>(The $ symbol alone would indicate that the regular expression engine should try to begin its match at the end of a string.) To ensure that the current culture's currency symbol is not misinterpreted as a regular expression symbol, the example calls the <bpt id="p1">[</bpt>Escape<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Escape(System.String))</ept> method to escape the character.</source>
          <target state="translated">(Отдельный символ $ указывает, что механизм регулярных выражений должен начинать сопоставление с конца строки.) Чтобы правильно обработать текущий символ валюты, в примере вызывается метод <bpt id="p1">[</bpt>Escape<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Escape(System.String))</ept>, который экранирует символ.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Look for zero or more occurrences of a white-space character.</source>
          <target state="translated">Поиск нуля или нескольких вхождений пробела.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Look for zero or one occurrence of either a positive sign or a negative sign.</source>
          <target state="translated">Поиск нуля или нескольких вхождений знака плюс или минус.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The outer parentheses around this expression define it as a capturing group or a subexpression.</source>
          <target state="translated">Внешние круглые скобки вокруг этого выражения делают его захватываемой группой или частью выражения.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If a match is found, information about this part of the matching string can be retrieved from the second <bpt id="p1">[</bpt>Group<ept id="p1">](xref:System.Text.RegularExpressions.Group)</ept> object in the <bpt id="p2">[</bpt>GroupCollection<ept id="p2">](xref:System.Text.RegularExpressions.GroupCollection)</ept> object returned by the <bpt id="p3">[</bpt>Match.Groups<ept id="p3">](xref:System.Text.RegularExpressions.Match.Groups)</ept> property.</source>
          <target state="translated">Если найдено соответствие, сведения об этой части строки можно получить из второго объекта <bpt id="p1">[</bpt>Group<ept id="p1">](xref:System.Text.RegularExpressions.Group)</ept> в объекте <bpt id="p2">[</bpt>GroupCollection<ept id="p2">](xref:System.Text.RegularExpressions.GroupCollection)</ept>, который возвращается свойством <bpt id="p3">[</bpt>Match.Groups<ept id="p3">](xref:System.Text.RegularExpressions.Match.Groups)</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>(The first element in the collection represents the entire match.)</source>
          <target state="translated">(Первый элемент в коллекции представляет все сопоставление.)</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Look for zero to three occurrences of the decimal digits 0 through 9.</source>
          <target state="translated">Поиск 0-3 вхождений десятичных цифр (0-9).</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Look for zero or more occurrences of a group separator followed by three decimal digits.</source>
          <target state="translated">Поиск нуля или нескольких вхождений разделителя группы, за которыми следуют три десятичные цифры.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Look for a single occurrence of the decimal separator.</source>
          <target state="translated">Поиск одного вхождения десятичного разделителя.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Look for one or more decimal digits.</source>
          <target state="translated">Поиск одной или нескольких десятичных цифр.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Look for zero or one occurrence of the decimal separator followed by at least one decimal digit.</source>
          <target state="translated">Поиск нуля или одного вхождения десятичного разделителя, за которым следует по крайней мере одна десятичная цифра.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Related Topics</source>
          <target state="translated">Связанные разделы</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">Заголовок</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Описание</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Regular expression language - quick reference<ept id="p1">](quick-ref.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Элементы языка регулярных выражений — краткий справочник<ept id="p1">](quick-ref.md)</ept></target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Provides information on the set of characters, operators, and constructs that you can use to define regular expressions.</source>
          <target state="translated">Сведения о наборе символов, операторов и конструкций, которые можно использовать для определения регулярных выражений.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>The regular expression object model<ept id="p1">](object-model.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Объектная модель регулярных выражений<ept id="p1">](object-model.md)</ept></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Provides information and code examples that illustrate how to use the regular expression classes.</source>
          <target state="translated">Сведения об использовании классов регулярных выражений и примеры кода.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Details of regular expression behavior<ept id="p1">](regex-behavior.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Подробные сведения о поведении регулярных выражений<ept id="p1">](regex-behavior.md)</ept></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Provides information about the capabilities and behavior of .NETregular expressions.</source>
          <target state="translated">Сведения о возможностях и поведении регулярных выражений платформы .NET.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Regular expression examples<ept id="p1">](regex-examples.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Примеры регулярных выражений<ept id="p1">](regex-examples.md)</ept></target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Provides code examples that illustrate typical uses of regular expressions.</source>
          <target state="translated">Примеры кода, демонстрирующие типичное применение регулярных выражений.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Ссылка</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Text.RegularExpressions<ept id="p1">](xref:System.Text.RegularExpressions)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Text.RegularExpressions<ept id="p1">](xref:System.Text.RegularExpressions)</ept></target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Text.RegularExpressions.Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Text.RegularExpressions.Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>