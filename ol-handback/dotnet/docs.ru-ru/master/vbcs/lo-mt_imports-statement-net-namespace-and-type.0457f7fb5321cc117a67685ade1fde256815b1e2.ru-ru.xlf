<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">393f3e9a264817d8658585267c954d973290530a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\statements\imports-statement-net-namespace-and-type.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b3551749296380ecf46d8c8f4dccbc38d40695df</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65a350bc220c96a474f4b24566c08b744ae47069</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Imports Statement (.NET Namespace and Type) | Microsoft Docs</source>
          <target state="translated">Оператор Imports (пространство имен .NET и тип) | Документы Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Imports Statement (.NET Namespace and Type)</source>
          <target state="translated">Оператор Imports (пространство имен .NET и тип)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Enables type names to be referenced without namespace qualification.</source>
          <target state="translated">Разрешает типа ссылаться на них без квалификации пространства имен.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Синтаксис</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">Части</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="translated">Термин</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">Определение</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">*</bpt>import alias<ept id="p1">*</ept> or name by which code can refer to <ph id="ph1">`namespace`</ph> instead of the full qualification string.</source>
          <target state="translated"><bpt id="p1">*</bpt>Псевдоним импорта<ept id="p1">*</ept> или имя, по которому код может обращаться к <ph id="ph1">`namespace`</ph> вместо полной строки.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Declared Element Names<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>имена объявленных элементов<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Обязательный.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The fully qualified name of the namespace being imported.</source>
          <target state="translated">Полное имя импортируемого пространства имен.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Can be a string of namespaces nested to any level.</source>
          <target state="translated">Можно строкой пространства имен располагаться на любом уровне.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Необязательный.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The name of a programming element declared in the namespace.</source>
          <target state="translated">Имя элемента программирования, объявленного в пространстве имен.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Can be any container element.</source>
          <target state="translated">Может быть любым элементом контейнера.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">Примечания</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Imports`</ph>  statement enables types that are contained in a given namespace to be referenced directly.</source>
          <target state="translated"><ph id="ph1">`Imports`</ph> Инструкция включает содержащиеся в заданном пространстве имен непосредственно ссылаться на типы.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can supply a single namespace name or a string of nested namespaces.</source>
          <target state="translated">Можно указать имя одного пространства имен или строку из вложенных пространств имен.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Each nested namespace is separated from the next higher level namespace by a period (<ph id="ph1">`.`</ph>), as the following example illustrates.</source>
          <target state="translated">Каждое вложенное пространство имен отделяется от следующего уровня выше пространство имен точкой (<ph id="ph1">`.`</ph>), как показано в следующем примере.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Each source file can contain any number of <ph id="ph1">`Imports`</ph> statements.</source>
          <target state="translated">Каждый исходный файл может содержать любое количество <ph id="ph1">`Imports`</ph> инструкции.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>These must follow any option declarations, such as the <ph id="ph1">`Option Strict`</ph> statement, and they must precede any programming element declarations, such as <ph id="ph2">`Module`</ph> or <ph id="ph3">`Class`</ph> statements.</source>
          <target state="translated">Они должны следовать за любым параметром объявления, такие как <ph id="ph1">`Option Strict`</ph> инструкции и они должны предшествовать любому объявлению элементов программированию, такие как <ph id="ph2">`Module`</ph> или <ph id="ph3">`Class`</ph> инструкции.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can use <ph id="ph1">`Imports`</ph> only at file level.</source>
          <target state="translated">Можно использовать <ph id="ph1">`Imports`</ph> только на уровне файла.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This means the declaration context for importation must be a source file, and cannot be a namespace, class, structure, module, interface, procedure, or block.</source>
          <target state="translated">Это означает, что контекст объявления для импорта должен быть исходным файлом и не может быть пространство имен, класс, структура, модуль, интерфейса, процедуры или блока.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Note that the <ph id="ph1">`Imports`</ph> statement does not make elements from other projects and assemblies available to your project.</source>
          <target state="translated">Обратите внимание, что <ph id="ph1">`Imports`</ph> инструкция не делает элементы из других проектов и сборок, доступны в проекте.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Importing does not take the place of setting a reference.</source>
          <target state="translated">Импорт не выполняться ссылку.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It only removes the need to qualify names that are already available to your project.</source>
          <target state="translated">Он только избавляет от необходимости уточнять имена, которые уже доступны в проект.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information, see "Importing Containing Elements" in <bpt id="p1">[</bpt>References to Declared Elements<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе «Импорт содержащих элементов» в <bpt id="p1">[</bpt>ссылки на объявленные элементы<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can define implicit <ph id="ph1">`Imports`</ph> statements by using the <bpt id="p1">[</bpt>References Page, Project Designer (Visual Basic)<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/references-page-project-designer-visual-basic)</ept>.</source>
          <target state="translated">Можно определить неявные <ph id="ph1">`Imports`</ph> инструкций с помощью <bpt id="p1">[</bpt>страница "ссылки" в конструкторе проектов (Visual Basic)<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/references-page-project-designer-visual-basic)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Imported Namespaces (Visual Basic)<ept id="p1">](http://msdn.microsoft.com/library/44cebec3-0ea0-47c2-8406-4edeab6a997e)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Практическое руководство: Добавление или удаление Импортируемые пространства имен (Visual Basic)<ept id="p1">](http://msdn.microsoft.com/library/44cebec3-0ea0-47c2-8406-4edeab6a997e)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Import Aliases</source>
          <target state="translated">Импорт псевдонимов</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">*</bpt>import alias<ept id="p1">*</ept> defines the alias for a namespace or type.</source>
          <target state="translated"><bpt id="p1">*</bpt>Псевдоним импорта<ept id="p1">*</ept> определяет псевдоним для пространства имен или типа.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Import aliases are useful when you need to use items with the same name that are declared in one or more namespaces.</source>
          <target state="translated">Псевдонимы применяются, когда необходимо использовать элементы с одинаковыми именами, объявленные в одну или несколько пространств имен.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information and an example, see "Qualifying an Element Name" in <bpt id="p1">[</bpt>References to Declared Elements<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>.</source>
          <target state="translated">Дополнительные сведения и пример см. в разделе «Определение элемента Name» в <bpt id="p1">[</bpt>ссылки на объявленные элементы<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You should not declare a member at module level with the same name as <ph id="ph1">`aliasname`</ph>.</source>
          <target state="translated">Не следует объявлять элемент на уровне модуля с тем же именем, как <ph id="ph1">`aliasname`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you do, the Visual Basic compiler uses <ph id="ph1">`aliasname`</ph> only for the declared member and no longer recognizes it as an import alias.</source>
          <target state="translated">В противном случае компилятор Visual Basic использует <ph id="ph1">`aliasname`</ph> только для объявленного элемента и больше не распознает его как псевдоним импорта.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Although the syntax used for declaring an import alias is like that used for importing an XML namespace prefix, the results are different.</source>
          <target state="translated">Хотя синтаксис, используемый для объявления псевдонима импорта подобного используется для импорта префикса пространства имен XML, результаты будут другими.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An import alias can be used as an expression in your code, whereas an XML namespace prefix can be used only in XML literals or XML axis properties as the prefix for a qualified element or attribute name.</source>
          <target state="translated">Псевдоним импорта может использоваться как выражение в коде, тогда как префикс пространства имен XML можно использовать только в XML-литералов или свойств оси XML как префикс для элемента или имени атрибута.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Element Names</source>
          <target state="translated">Имена элементов</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If you supply <ph id="ph1">`element`</ph>, it must represent a <bpt id="p1">*</bpt>container element<ept id="p1">*</ept>, that is, a programming element that can contain other elements.</source>
          <target state="translated">При указании <ph id="ph1">`element`</ph>, он должен представлять <bpt id="p1">*</bpt>элемент-контейнер<ept id="p1">*</ept>, то есть элемент программирования, может содержать другие элементы.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Container elements include classes, structures, modules, interfaces, and enumerations.</source>
          <target state="translated">Элементы контейнера включают классы, структуры, модули, интерфейсы и перечисления.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The scope of the elements made available by an <ph id="ph1">`Imports`</ph> statement depends on whether you specify <ph id="ph2">`element`</ph>.</source>
          <target state="translated">Область элементов, доступных по <ph id="ph1">`Imports`</ph> инструкция зависит от того, указаны ли <ph id="ph2">`element`</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you specify only <ph id="ph1">`namespace`</ph>, all uniquely named members of that namespace, and members of container elements within that namespace, are available without qualification.</source>
          <target state="translated">Если указать только <ph id="ph1">`namespace`</ph>, однозначно все члены этого пространства имен и члены элементов контейнера в этом пространстве имен, доступны без уточнения.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you specify both <ph id="ph1">`namespace`</ph> and <ph id="ph2">`element`</ph>, only the members of that element are available without qualification.</source>
          <target state="translated">Если указываются оба <ph id="ph1">`namespace`</ph> и <ph id="ph2">`element`</ph>только члены этого элемента будут доступны без уточнения.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Пример</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following example returns all the folders in the C:\ directory by using the &lt;xref:System.IO.DirectoryInfo&gt; class.</source>
          <target state="translated">Следующий пример возвращает все папки в каталоге C:\ с помощью &lt;xref:System.IO.DirectoryInfo&gt;класса.&lt;/xref:System.IO.DirectoryInfo&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The code has no <ph id="ph1">`Imports`</ph> statements at the top of the file.</source>
          <target state="translated">Код не имеет <ph id="ph1">`Imports`</ph> в начало файла.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Therefore, the <ph id="ph1">`DirectoryInfo`</ph>, &lt;xref:System.Text.StringBuilder&gt;, and &lt;xref:Microsoft.VisualBasic.ControlChars.CrLf&gt; references are all fully qualified with the namespaces.</source>
          <target state="translated">Таким образом <ph id="ph1">`DirectoryInfo`</ph>, &lt;xref:System.Text.StringBuilder&gt;, и &lt;xref:Microsoft.VisualBasic.ControlChars.CrLf&gt;ссылки являются полностью полного пространства имен.&lt;/xref:Microsoft.VisualBasic.ControlChars.CrLf&gt; &lt;/xref:System.Text.StringBuilder&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#152<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements&amp;#152;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Пример</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following example includes <ph id="ph1">`Imports`</ph> statements for the referenced namespaces.</source>
          <target state="translated">Следующий пример включает <ph id="ph1">`Imports`</ph> инструкции для пространств имен, на которые имеются ссылки.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Therefore, the types do not have to be fully qualified with the namespaces.</source>
          <target state="translated">Таким образом типы не должны полностью соответствовать пространства имен.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#153<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements&amp;#153;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#154<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements&amp;#154;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Пример</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following example includes <ph id="ph1">`Imports`</ph> statements that create aliases for the referenced namespaces.</source>
          <target state="translated">Следующий пример включает <ph id="ph1">`Imports`</ph> инструкции, создающие псевдонимы для пространств имен, на которые имеются ссылки.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The types are qualified with the aliases.</source>
          <target state="translated">Типы будут дополнены псевдонимы.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#155<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements&amp;#155;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#156<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements&amp;#156;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Пример</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The following example includes <ph id="ph1">`Imports`</ph> statements that create aliases for the referenced types.</source>
          <target state="translated">Следующий пример включает <ph id="ph1">`Imports`</ph> инструкции, создающие псевдонимы для ссылочных типов.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Aliases are used to specify the types.</source>
          <target state="translated">Псевдонимы используются для указания типов.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#157<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements&amp;#157;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#158<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_7.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements&amp;#158;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_7.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">См. также</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Namespace Statement<ept id="p1">](../../../visual-basic/language-reference/statements/namespace-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Оператор Namespace<ept id="p1">](../../../visual-basic/language-reference/statements/namespace-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Namespaces in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/program-structure/namespaces.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Пространства имен в Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/program-structure/namespaces.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>References and the Imports Statement<ept id="p1">](../../../visual-basic/programming-guide/program-structure/references-and-the-imports-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Ссылки и оператор Imports<ept id="p1">](../../../visual-basic/programming-guide/program-structure/references-and-the-imports-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Imports Statement (XML Namespace)<ept id="p1">](../../../visual-basic/language-reference/statements/imports-statement-xml-namespace.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Оператор Imports (пространство имен XML)<ept id="p1">](../../../visual-basic/language-reference/statements/imports-statement-xml-namespace.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>References to Declared Elements<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Ссылки на объявленные элементы<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>