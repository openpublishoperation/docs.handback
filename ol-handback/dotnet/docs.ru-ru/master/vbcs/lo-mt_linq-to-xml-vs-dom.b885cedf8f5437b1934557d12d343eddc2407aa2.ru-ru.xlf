<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88b6bddcdeec2859844f5d5f94777146d488b5fb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\linq-to-xml-vs-dom.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2c2cdc40489a532d8f326c6c5e4f0549bafc0a9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a240e3e78b46cbd0414aa63daed0a4271195b57c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>LINQ to XML vs. DOM (Visual Basic) | Microsoft Docs</source>
          <target state="translated">LINQ to XML или Модель DOM (Visual Basic) | Документы Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>LINQ to XML vs. DOM (Visual Basic)</source>
          <target state="translated">LINQ to XML или Модель DOM (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This section describes some key differences between <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> and the current predominant XML programming API, the W3C Document Object Model (DOM).</source>
          <target state="translated">В этом разделе описываются некоторые основные различия между <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> и текущий XML преобладающим программным интерфейсом API, модель объектов документов (DOM) W3C.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>New Ways to Construct XML Trees</source>
          <target state="translated">Новые способы построения XML-деревьев</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In the W3C DOM, you build an XML tree from the bottom up; that is, you create a document, you create elements, and then you add the elements to the document.</source>
          <target state="translated">В W3C DOM XML-дерево строится снизу вверх, т. е. создается документ, создаются элементы, а затем элементы добавляются в документ.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, the following would be a typical way to create an XML tree using the Microsoft implementation of DOM, &lt;xref:System.Xml.XmlDocument&gt;:</source>
          <target state="translated">Например следующий синтаксис будет типичный способ создания XML-дерева с помощью Microsoft реализации DOM, &lt;xref:System.Xml.XmlDocument&gt;:&lt;/xref:System.Xml.XmlDocument&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This style of coding does not visually provide much information about the structure of the XML tree.</source>
          <target state="translated">Такой стиль программирования не дает визуального представления о деталях структуры XML-дерева.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> supports this approach to constructing an XML tree, but also supports an alternative approach, <bpt id="p1">*</bpt>functional construction<ept id="p1">*</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>поддерживает такой подход к построению XML-дерева, но также предлагает и альтернативный способ, <bpt id="p1">*</bpt>функциональное построение<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In Visual Basic, functional construction uses XML literals to build an XML tree.</source>
          <target state="translated">В Visual Basic функциональное построение использует XML-литералы для построения XML-дерева.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Here is how you would construct the same XML tree by using <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> functional construction:</source>
          <target state="translated">Вот как можно построить же XML-дерево с помощью <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> функциональное построение:</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Notice that indenting the code to construct the XML tree shows the structure of the underlying XML.</source>
          <target state="translated">Обратите внимание, что отступы в коде, который строит XML-дерево, показывают структуру базового документа XML.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Creating XML Trees (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/creating-xml-trees.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Создание XML-деревьев (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/creating-xml-trees.md)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Working Directly with XML Elements</source>
          <target state="translated">Работа непосредственно с XML-элементами</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When you program with XML, your primary focus is usually on XML elements and perhaps on attributes.</source>
          <target state="translated">При программировании на XML основное внимание обычно уделяется XML-элементам и, возможно, атрибутам.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>, you can work directly with XML elements and attributes.</source>
          <target state="translated">В <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> можно работать с XML-элементами и атрибутами напрямую.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, you can do the following:</source>
          <target state="translated">Например, можно выполнять следующие действия.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Create XML elements without using a document object at all.</source>
          <target state="translated">Создавать XML-элементы, совсем не используя объект документа.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This simplifies programming when you have to work with fragments of XML trees.</source>
          <target state="translated">Это упрощает программирование, когда необходимо работать с фрагментами XML-деревьев.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Load <ph id="ph1">`T:System.Xml.Linq.XElement`</ph> objects directly from an XML file.</source>
          <target state="translated">Загружать объекты <ph id="ph1">`T:System.Xml.Linq.XElement`</ph> непосредственно из XML-файла.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Serialize <ph id="ph1">`T:System.Xml.Linq.XElement`</ph> objects to a file or a stream.</source>
          <target state="translated">Сериализовать объекты <ph id="ph1">`T:System.Xml.Linq.XElement`</ph> в файл или поток.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Compare this to the W3C DOM, in which the XML document is used as a logical container for the XML tree.</source>
          <target state="translated">Сравним это с W3C DOM, где XML-документ используется как логический контейнер для XML-дерева.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In DOM, XML nodes, including elements and attributes, must be created in the context of an XML document.</source>
          <target state="translated">В DOM XML-узлы, в том числе элементы и атрибуты, должны создаваться в контексте XML-документа.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Here is a fragment of the code to create a name element in DOM:</source>
          <target state="translated">Вот фрагмент кода, предназначенного для создания элемента имени в DOM:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If you want to use an element across multiple documents, you must import the nodes across documents.</source>
          <target state="translated">Если элемент требуется использовать в нескольких документах, нужно будет импортировать в эти документы узлы.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> avoids this layer of complexity.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>позволяет избежать этих сложностей.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When using LINQ to XML, you use the &lt;xref:System.Xml.Linq.XDocument&gt; class only if you want to add a comment or processing instruction at the root level of the document.</source>
          <target state="translated">При использовании LINQ to XML, &lt;xref:System.Xml.Linq.XDocument&gt;только в том случае, если требуется добавить комментарий или инструкцию по обработке на корневом уровне документа.&lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Simplified Handling of Names and Namespaces</source>
          <target state="translated">Упрощенная обработка имен и пространств имен</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Handling names, namespaces, and namespace prefixes is generally a complex part of XML programming.</source>
          <target state="translated">В общем случае обработка имен, пространств имен и префиксов пространств имен является сложной частью в программировании на XML.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> simplifies names and namespaces by eliminating the requirement to deal with namespace prefixes.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>упрощает имена и пространства имен путем устранения требования использовать полные префиксы пространств имен.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If you want to control namespace prefixes, you can.</source>
          <target state="translated">Их можно использовать, если требуется управлять префиксами пространств имен.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>But if you decide to not explicitly control namespace prefixes, <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> will assign namespace prefixes during serialization if they are required, or will serialize using default namespaces if they are not.</source>
          <target state="translated">Но если принято решение явно не управлять префиксами пространств имен, <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> назначит префиксы пространств имен при сериализации, если они необходимы, или произведет сериализацию при помощи пространств имен по умолчанию, если они не являются.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If default namespaces are used, there will be no namespace prefixes in the resulting document.</source>
          <target state="translated">Если используются пространства имен по умолчанию, то в итоговом документе префиксов пространств имен не будет.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>работа с пространствами имен XML (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Another problem with the DOM is that it does not let you change the name of a node.</source>
          <target state="translated">Еще одним недостатком DOM является то, что отсутствует возможность изменять имена узлов.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Instead, you have to create a new node and copy all the child nodes to it, losing the original node identity.</source>
          <target state="translated">Вместо этого необходимо создать новый узел и скопировать в него все дочерние узлы, но при этом идентификатор первоначального узла будет потерян.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> avoids this problem by enabling you to set the &lt;xref:System.Xml.Linq.XName&gt; property on a node.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>Эта проблема решена за счет возможности установки &lt;xref:System.Xml.Linq.XName&gt;свойство на узле.&lt;/xref:System.Xml.Linq.XName&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Static Method Support for Loading XML</source>
          <target state="translated">Поддержка статических методов для загрузки XML</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> lets you load XML by using static methods, instead of instance methods.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>позволяет загружать XML при помощи статических методов, а не методов экземпляра.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This simplifies loading and parsing.</source>
          <target state="translated">Это упрощает загрузку и синтаксический анализ.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Load XML from a File (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-load-xml-from-a-file.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Практическое руководство: загрузка XML из файла (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-load-xml-from-a-file.md)</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Removal of Support for DTD Constructs</source>
          <target state="translated">Удаление поддержки конструкций DTD</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> further simplifies XML programming by removing support for entities and entity references.</source>
          <target state="translated">За счет удаления поддержки сущностей и ссылок на сущности <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> еще более упрощает программирование на XML.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The management of entities is complex, and is rarely used.</source>
          <target state="translated">Управление сущностями является весьма сложным процессом и поэтому редко используется.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Removing their support increases performance and simplifies the programming interface.</source>
          <target state="translated">Удаление поддержки сущностей позволяет повысить производительность и упростить интерфейс программирования.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> tree is populated, all DTD entities are expanded.</source>
          <target state="translated">Когда <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> дерево заполняется, все сущности DTD раскрываются.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Support for Fragments</source>
          <target state="translated">Поддержка фрагментов</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> does not provide an equivalent for the <ph id="ph2">`XmlDocumentFragment`</ph> class.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>не предоставляет эквивалент <ph id="ph2">`XmlDocumentFragment`</ph> класса.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>In many cases, however, the <ph id="ph1">`XmlDocumentFragment`</ph> concept can be handled by the result of a query that is typed as &lt;xref:System.Collections.Generic.IEnumerable%601&gt; of &lt;xref:System.Xml.Linq.XNode&gt;, or &lt;xref:System.Collections.Generic.IEnumerable%601&gt; of &lt;xref:System.Xml.Linq.XElement&gt;.</source>
          <target state="translated">Во многих случаях, однако <ph id="ph1">`XmlDocumentFragment`</ph> концепции может обрабатываться с помощью результата запроса, который типизируется как &lt;xref:System.Collections.Generic.IEnumerable%601&gt;из &lt;xref:System.Xml.Linq.XNode&gt;, или &lt;xref:System.Collections.Generic.IEnumerable%601&gt; &lt;xref:System.Xml.Linq.XElement&gt;.&lt;/xref:System.Xml.Linq.XElement&gt; &lt;/xref:System.Collections.Generic.IEnumerable%601&gt; &lt;/xref:System.Xml.Linq.XNode&gt; &lt;/xref:System.Collections.Generic.IEnumerable%601&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Support for XPathNavigator</source>
          <target state="translated">Поддержка XPathNavigator</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> provides support for &lt;xref:System.Xml.XPath.XPathNavigator&gt; through extension methods in the &lt;xref:System.Xml.XPath?displayProperty=fullName&gt; namespace.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>обеспечивает поддержку для &lt;xref:System.Xml.XPath.XPathNavigator&gt;через методы расширения в &lt;xref:System.Xml.XPath?displayProperty=fullName&gt;имен.&lt;/xref:System.Xml.XPath?displayProperty=fullName&gt; &lt;/xref:System.Xml.XPath.XPathNavigator&gt;</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Xml.XPath.Extensions?displayProperty=fullName&gt;.</source>
          <target state="translated">Дополнительные сведения см. в разделе &lt;xref:System.Xml.XPath.Extensions?displayProperty=fullName&gt;.&lt;/xref:System.Xml.XPath.Extensions?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Support for White Space and Indentation</source>
          <target state="translated">Поддержка пробелов и отступов</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> handles white space more simply than the DOM.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>обрабатывает пробелы просто более чем в DOM.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A common scenario is to read indented XML, create an in-memory XML tree without any white space text nodes (that is, not preserving white space), perform some operations on the XML, and then save the XML with indentation.</source>
          <target state="translated">Типичный сценарий состоит в чтении XML с отступами, создании XML-дерева в памяти без текстовых узлов с пробелами (то есть без сохранения пробелов), выполнении определенных операций над XML и сохранении XML с отступами.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When you serialize the XML with formatting, only significant white space in the XML tree is preserved.</source>
          <target state="translated">При сериализации XML с форматированием сохраняются только значимые пробелы XML-дерева.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This is the default behavior for <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>.</source>
          <target state="translated">Это поведение <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> по умолчанию.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Another common scenario is to read and modify XML that has already been intentionally indented.</source>
          <target state="translated">Другой типичный сценарий заключается в чтении и изменении XML с уже существующими преднамеренными отступами.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You might not want to change this indentation in any way.</source>
          <target state="translated">Эти отступы ни в коем случае изменять нельзя.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>, you can do this by preserving white space when you load or parse the XML and disabling formatting when you serialize the XML.</source>
          <target state="translated">В <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> этого можно достигнуть, если сохранить пробелы при загрузке или синтаксическом анализе XML и отключить форматирование при сериализации XML.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> stores white space as an &lt;xref:System.Xml.Linq.XText&gt; node, instead of having a specialized &lt;xref:System.Xml.XmlNodeType&gt; node type, as the DOM does.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>хранит пробелы как &lt;xref:System.Xml.Linq.XText&gt;узел, а не имеет сериализованный &lt;xref:System.Xml.XmlNodeType&gt;Тип узла в модели DOM выполняет.&lt;/xref:System.Xml.XmlNodeType&gt; &lt;/xref:System.Xml.Linq.XText&gt;</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Support for Annotations</source>
          <target state="translated">Поддержка заметок</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> elements support an extensible set of annotations.</source>
          <target state="translated">Элементы <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> поддерживают расширяемый набор заметок.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>This is useful for tracking miscellaneous information about an element, such as schema information, information about whether the element is bound to a UI, or any other kind of application-specific information.</source>
          <target state="translated">Это полезно для отслеживания различной информации об элементе, например сведений о схеме, сведений о привязке элемента к пользовательскому интерфейсу, а также любых других сведений, относящихся к конкретному приложению.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>LINQ to XML Annotations<ept id="p1">](http://msdn.microsoft.com/library/e2f0052d-61e2-48d4-9ea4-356c9cab35d5)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>примечания LINQ to XML<ept id="p1">](http://msdn.microsoft.com/library/e2f0052d-61e2-48d4-9ea4-356c9cab35d5)</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Support for Schema Information</source>
          <target state="translated">Поддержка сведений схемы</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> provides support for XSD validation through extension methods in the &lt;xref:System.Xml.Schema?displayProperty=fullName&gt; namespace.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>обеспечивает поддержку проверки XSD через методы расширения в &lt;xref:System.Xml.Schema?displayProperty=fullName&gt;имен.&lt;/xref:System.Xml.Schema?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You can validate that an XML tree complies with an XSD.</source>
          <target state="translated">Можно проверить XML-дерево на соответствие схеме XSD.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>You can populate the XML tree with the post-schema-validation infoset (PSVI).</source>
          <target state="translated">XML-дерево можно заполнить при помощи модуля проверки после обработки схемы (PSVI).</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Validate Using XSD<ept id="p1">](http://msdn.microsoft.com/library/481a97fa-6e96-46f2-8c9a-415555fac33b)</ept> and &lt;xref:System.Xml.Schema.Extensions&gt;.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Практическое руководство: проверка XSD с помощью<ept id="p1">](http://msdn.microsoft.com/library/481a97fa-6e96-46f2-8c9a-415555fac33b)</ept> и &lt;xref:System.Xml.Schema.Extensions&gt;.&lt;/xref:System.Xml.Schema.Extensions&gt;</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">См. также</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Getting Started (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/getting-started-linq-to-xml.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Начало работы (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/getting-started-linq-to-xml.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>