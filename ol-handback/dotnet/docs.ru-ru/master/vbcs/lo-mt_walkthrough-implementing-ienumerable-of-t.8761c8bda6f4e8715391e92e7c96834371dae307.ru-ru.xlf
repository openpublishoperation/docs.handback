<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68c37c46cbceb1056d50972cdc58ddb7c7577447</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\control-flow\walkthrough-implementing-ienumerable-of-t.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44a1bb3bc348fb4c7f691143488a3615775db78f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d541a25277adf7c594042ec7536f910696bd927</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implementing IEnumerable in Visual Basic | Microsoft Docs</source>
          <target state="translated">Реализация IEnumerable в Visual Basic | Документы Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Implementing IEnumerable(Of T) in Visual Basic</source>
          <target state="translated">Пошаговое руководство. Реализация IEnumerable(Of T) в Visual Basic</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Collections.Generic.IEnumerable%601&gt; interface is implemented by classes that can return a sequence of values one item at a time.</source>
          <target state="translated">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;Интерфейс реализуется классами, которые могут возвращать последовательность значений по одному элементу за раз.&lt;/xref:System.Collections.Generic.IEnumerable%601&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The advantage of returning data one item at a time is that you do not have to load the complete set of data into memory to work with it.</source>
          <target state="translated">Преимущество возвращения данных одного элемента за раз является то, что вы не загрузить полный набор данных в памяти для работы с ним.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You only have to use sufficient memory to load a single item from the data.</source>
          <target state="translated">Необходимо использовать достаточно памяти для загрузки одного элемента данных.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Classes that implement the <ph id="ph1">`IEnumerable(T)`</ph> interface can be used with <ph id="ph2">`For Each`</ph> loops or LINQ queries.</source>
          <target state="translated">Классы, реализующие <ph id="ph1">`IEnumerable(T)`</ph> интерфейс может использоваться с <ph id="ph2">`For Each`</ph> циклов или запросов LINQ.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, consider an application that must read a large text file and return each line from the file that matches particular search criteria.</source>
          <target state="translated">Например рассмотрим приложение, которое должно читать большой текстовый файл и возвращать каждую строку из этого файла, отвечающую конкретным условиям поиска.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The application uses a LINQ query to return lines from the file that match the specified criteria.</source>
          <target state="translated">Приложение использует запрос LINQ для возврата строки в файле, соответствующие указанным критериям.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To query the contents of the file by using a LINQ query, the application could load the contents of the file into an array or a collection.</source>
          <target state="translated">Запрос содержимого файла с помощью запроса LINQ, приложение может загрузить содержимое файла в массив или коллекцию.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>However, loading the whole file into an array or collection would consume far more memory than is required.</source>
          <target state="translated">Однако загрузка целого файла в массив или коллекция потребует значительно большего объема памяти, чем требуется.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The LINQ query could instead query the file contents by using an enumerable class, returning only values that match the search criteria.</source>
          <target state="translated">Вместо запроса LINQ может опросить содержимое файла с помощью перечислимого класса, возвращая только значения, соответствующие критериям поиска.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Queries that return only a few matching values would consume far less memory.</source>
          <target state="translated">Запросы, возвращающие только несколько соответствующих значений, потребляют намного меньше памяти.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can create a class that implements the &lt;xref:System.Collections.Generic.IEnumerable%601&gt; interface to expose source data as enumerable data.</source>
          <target state="translated">Можно создать класс, реализующий &lt;xref:System.Collections.Generic.IEnumerable%601&gt;интерфейс, предоставляемый перечислимых данных источнику данных.&lt;/xref:System.Collections.Generic.IEnumerable%601&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Your class that implements the <ph id="ph1">`IEnumerable(T)`</ph> interface will require another class that implements the &lt;xref:System.Collections.Generic.IEnumerator%601&gt; interface to iterate through the source data.</source>
          <target state="translated">Класс, реализующий <ph id="ph1">`IEnumerable(T)`</ph> требуется еще один класс, реализующий интерфейс &lt;xref:System.Collections.Generic.IEnumerator%601&gt;интерфейс для итерации элементов в источнике данных.&lt;/xref:System.Collections.Generic.IEnumerator%601&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>These two classes enable you to return items of data sequentially as a specific type.</source>
          <target state="translated">Эти классы позволяют возвращать элементы данных последовательно, как конкретный тип.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In this walkthrough, you will create a class that implements the <ph id="ph1">`IEnumerable(Of String)`</ph> interface and a class that implements the <ph id="ph2">`IEnumerator(Of String)`</ph> interface to read a text file one line at a time.</source>
          <target state="translated">В этом пошаговом руководстве вы создадите класс, реализующий <ph id="ph1">`IEnumerable(Of String)`</ph> интерфейс и класс, реализующий <ph id="ph2">`IEnumerator(Of String)`</ph> интерфейс для считывания текстового файла по одной строке за раз.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Creating the Enumerable Class</source>
          <target state="translated">Создание перечислимого класса</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To create the enumerable class project</source>
          <target state="translated">Чтобы создать проект перечислимого класса</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>1.  In <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>, on the <bpt id="p1">**</bpt>File<ept id="p1">**</ept> menu, point to <bpt id="p2">**</bpt>New<ept id="p2">**</ept> and then click <bpt id="p3">**</bpt>Project<ept id="p3">**</ept>.</source>
          <target state="translated">1.  В <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>на <bpt id="p1">**</bpt>файл<ept id="p1">**</ept> наведите указатель мыши на <bpt id="p2">**</bpt>New<ept id="p2">**</ept> и нажмите кнопку <bpt id="p3">**</bpt>проекта<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>2.  In the <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box, in the <bpt id="p2">**</bpt>Project Types<ept id="p2">**</ept> pane, make sure that <bpt id="p3">**</bpt>Windows<ept id="p3">**</ept> is selected.</source>
          <target state="translated">2.  В <bpt id="p1">**</bpt>новый проект<ept id="p1">**</ept> в диалоговом <bpt id="p2">**</bpt>типы проектов<ept id="p2">**</ept> область, убедитесь, что <bpt id="p3">**</bpt>Windows<ept id="p3">**</ept> выбран.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Class Library<ept id="p1">**</ept> in the <bpt id="p2">**</bpt>Templates<ept id="p2">**</ept> pane.</source>
          <target state="translated">Выберите <bpt id="p1">**</bpt>библиотеки классов<ept id="p1">**</ept> в <bpt id="p2">**</bpt>шаблоны<ept id="p2">**</ept> области.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> box, type <ph id="ph1">`StreamReaderEnumerable`</ph>, and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
          <target state="translated">В <bpt id="p1">**</bpt>имя<ept id="p1">**</ept> введите <ph id="ph1">`StreamReaderEnumerable`</ph>, а затем нажмите кнопку <bpt id="p2">**</bpt>ОК<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The new project is displayed.</source>
          <target state="translated">Откроется новый проект.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>3.  In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, right-click the Class1.vb file and click <bpt id="p2">**</bpt>Rename<ept id="p2">**</ept>.</source>
          <target state="translated">3.  В <bpt id="p1">**</bpt>обозревателе решений<ept id="p1">**</ept>, щелкните правой кнопкой мыши файл Class1.vb и выберите <bpt id="p2">**</bpt>переименование<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Rename the file to <ph id="ph1">`StreamReaderEnumerable.vb`</ph> and press ENTER.</source>
          <target state="translated">Переименуйте файл <ph id="ph1">`StreamReaderEnumerable.vb`</ph> и нажмите клавишу ВВОД.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Renaming the file will also rename the class to <ph id="ph1">`StreamReaderEnumerable`</ph>.</source>
          <target state="translated">Переименование файла также Переименуйте класс в <ph id="ph1">`StreamReaderEnumerable`</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This class will implement the <ph id="ph1">`IEnumerable(Of String)`</ph> interface.</source>
          <target state="translated">Этот класс будет реализовывать <ph id="ph1">`IEnumerable(Of String)`</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>4.  Right-click the StreamReaderEnumerable project, point to <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>, and then click <bpt id="p2">**</bpt>New Item<ept id="p2">**</ept>.</source>
          <target state="translated">4.  Щелкните правой кнопкой мыши проект StreamReaderEnumerable и выберите последовательно пункты <bpt id="p1">**</bpt>добавить<ept id="p1">**</ept>и нажмите кнопку <bpt id="p2">**</bpt>новый элемент<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Class<ept id="p1">**</ept> template.</source>
          <target state="translated">Выберите <bpt id="p1">**</bpt>класса<ept id="p1">**</ept> шаблона.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Name<ept id="p1">**</ept> box, type <ph id="ph1">`StreamReaderEnumerator.vb`</ph> and click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
          <target state="translated">В <bpt id="p1">**</bpt>имя<ept id="p1">**</ept> введите <ph id="ph1">`StreamReaderEnumerator.vb`</ph> и нажмите кнопку <bpt id="p2">**</bpt>ОК<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The first class in this project is the enumerable class and will implement the <ph id="ph1">`IEnumerable(Of String)`</ph> interface.</source>
          <target state="translated">Первый класс в этом проекте — перечислимый класс и реализую <ph id="ph1">`IEnumerable(Of String)`</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This generic interface implements the &lt;xref:System.Collections.IEnumerable&gt; interface and guarantees that consumers of this class can access values typed as <ph id="ph1">`String`</ph>.</source>
          <target state="translated">Этот универсальный интерфейс реализует &lt;xref:System.Collections.IEnumerable&gt;интерфейс и гарантии, потребители этого класса можно обращаться к значениям, типизированного как <ph id="ph1">`String`</ph>.&lt;/xref:System.Collections.IEnumerable&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To add the code to implement IEnumerable</source>
          <target state="translated">Чтобы добавить код, реализующий интерфейс IEnumerable</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>1.  Open the StreamReaderEnumerable.vb file.</source>
          <target state="translated">1.  Откройте файл StreamReaderEnumerable.vb.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>2.  On the line after <ph id="ph1">`Public Class StreamReaderEnumerable`</ph>, type the following and press ENTER.</source>
          <target state="translated">2.  В строке после <ph id="ph1">`Public Class StreamReaderEnumerable`</ph>, введите следующую команду и нажмите клавишу ВВОД.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#1<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough&amp;#1;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> automatically populates the class with the members that are required by the <ph id="ph2">`IEnumerable(Of String)`</ph> interface.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>автоматически заполняет класс с членами, которые требуются <ph id="ph2">`IEnumerable(Of String)`</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>3.  This enumerable class will read lines from a text file one line at a time.</source>
          <target state="translated">3.  Этот перечислимый класс будет читать строки текстового файла по одной строке за раз.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Add the following code to the class to expose a public constructor that takes a file path as an input parameter.</source>
          <target state="translated">Добавьте следующий код в класс, чтобы предоставить открытый конструктор, который принимает путь к файлу в качестве входного параметра.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#2<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough&amp;#2;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>4.  Your implementation of the &lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt; method of the <ph id="ph1">`IEnumerable(Of String)`</ph> interface will return a new instance of the <ph id="ph2">`StreamReaderEnumerator`</ph> class.</source>
          <target state="translated">4.  Реализация &lt;xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;метода <ph id="ph1">`IEnumerable(Of String)`</ph> интерфейс будет возвращать новый экземпляр <ph id="ph2">`StreamReaderEnumerator`</ph> класса&lt;/xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The implementation of the <ph id="ph1">`GetEnumerator`</ph> method of the <ph id="ph2">`IEnumerable`</ph> interface can be made <ph id="ph3">`Private`</ph>, because you have to expose only members of the <ph id="ph4">`IEnumerable(Of String)`</ph> interface.</source>
          <target state="translated">Реализация <ph id="ph1">`GetEnumerator`</ph> метод <ph id="ph2">`IEnumerable`</ph> можно сделать интерфейс <ph id="ph3">`Private`</ph>, поскольку требуется предоставить доступ только члены <ph id="ph4">`IEnumerable(Of String)`</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Replace the code that <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> generated for the <ph id="ph2">`GetEnumerator`</ph> methods with the following code.</source>
          <target state="translated">Замените код, <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> для <ph id="ph2">`GetEnumerator`</ph> методов с помощью следующего кода.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#3<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough&amp;#3;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>To add the code to implement IEnumerator</source>
          <target state="translated">Чтобы добавить код для реализации IEnumerator</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>1.  Open the StreamReaderEnumerator.vb file.</source>
          <target state="translated">1.  Откройте файл StreamReaderEnumerator.vb.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>2.  On the line after <ph id="ph1">`Public Class StreamReaderEnumerator`</ph>, type the following and press ENTER.</source>
          <target state="translated">2.  В строке после <ph id="ph1">`Public Class StreamReaderEnumerator`</ph>, введите следующую команду и нажмите клавишу ВВОД.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#4<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough&amp;#4;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> automatically populates the class with the members that are required by the <ph id="ph2">`IEnumerator(Of String)`</ph> interface.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>автоматически заполняет класс с членами, которые требуются <ph id="ph2">`IEnumerator(Of String)`</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>3.  The enumerator class opens the text file and performs the file I/O to read the lines from the file.</source>
          <target state="translated">3.  Класс перечислителя открывает текстовый файл и выполняет файлового ввода-вывода для чтения строки из файла.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Add the following code to the class to expose a public constructor that takes a file path as an input parameter and open the text file for reading.</source>
          <target state="translated">Добавьте следующий код в класс, чтобы предоставить открытый конструктор, который принимает путь к файлу в качестве входного параметра и откройте текстовый файл для чтения.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#5<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough&amp;#5;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>4.  The <ph id="ph1">`Current`</ph> properties for both the <ph id="ph2">`IEnumerator(Of String)`</ph> and <ph id="ph3">`IEnumerator`</ph> interfaces return the current item from the text file as a <ph id="ph4">`String`</ph>.</source>
          <target state="translated">4.  <ph id="ph1">`Current`</ph> Свойств для обоих <ph id="ph2">`IEnumerator(Of String)`</ph> и <ph id="ph3">`IEnumerator`</ph> интерфейсы возвращают текущий элемент из текстового файла в качестве <ph id="ph4">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The implementation of the <ph id="ph1">`Current`</ph> property of the <ph id="ph2">`IEnumerator`</ph> interface can be made <ph id="ph3">`Private`</ph>, because you have to expose only members of the <ph id="ph4">`IEnumerator(Of String)`</ph> interface.</source>
          <target state="translated">Реализация <ph id="ph1">`Current`</ph> свойство <ph id="ph2">`IEnumerator`</ph> можно сделать интерфейс <ph id="ph3">`Private`</ph>, поскольку требуется предоставить доступ только члены <ph id="ph4">`IEnumerator(Of String)`</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Replace the code that <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> generated for the <ph id="ph2">`Current`</ph> properties with the following code.</source>
          <target state="translated">Замените код, <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> для <ph id="ph2">`Current`</ph> свойства с помощью следующего кода.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#6<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough №&amp;6;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>5.  The <ph id="ph1">`MoveNext`</ph> method of the <ph id="ph2">`IEnumerator`</ph> interface navigates to the next item in the text file and updates the value that is returned by the <ph id="ph3">`Current`</ph> property.</source>
          <target state="translated">5.  <ph id="ph1">`MoveNext`</ph> Метод <ph id="ph2">`IEnumerator`</ph> интерфейс переходит к следующему элементу в текстовом файле и обновляет значение, возвращается <ph id="ph3">`Current`</ph> свойство.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If there are no more items to read, the <ph id="ph1">`MoveNext`</ph> method returns <ph id="ph2">`False`</ph>; otherwise the <ph id="ph3">`MoveNext`</ph> method returns <ph id="ph4">`True`</ph>.</source>
          <target state="translated">Если больше нет элементов для чтения, <ph id="ph1">`MoveNext`</ph> возвращает метод <ph id="ph2">`False`</ph>; в противном случае <ph id="ph3">`MoveNext`</ph> возвращает метод <ph id="ph4">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Add the following code to the <ph id="ph1">`MoveNext`</ph> method.</source>
          <target state="translated">Добавьте следующий код в метод <ph id="ph1">`MoveNext`</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#7<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_7.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough&amp;#7;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_7.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>6.  The <ph id="ph1">`Reset`</ph> method of the <ph id="ph2">`IEnumerator`</ph> interface directs the iterator to point to the start of the text file and clears the current item value.</source>
          <target state="translated">6.  <ph id="ph1">`Reset`</ph> Метод <ph id="ph2">`IEnumerator`</ph> интерфейс дает итератору начало текстового файла и очищает значение текущего элемента.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Add the following code to the <ph id="ph1">`Reset`</ph> method.</source>
          <target state="translated">Добавьте следующий код в метод <ph id="ph1">`Reset`</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#8<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_8.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough №&amp;8;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_8.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>7.  The <ph id="ph1">`Dispose`</ph> method of the <ph id="ph2">`IEnumerator`</ph> interface guarantees that all unmanaged resources are released before the iterator is destroyed.</source>
          <target state="translated">7.  <ph id="ph1">`Dispose`</ph> Метод <ph id="ph2">`IEnumerator`</ph> интерфейс гарантирует, что все неуправляемые ресурсы будут освобождены до уничтожения итератора.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The file handle that is used by the <ph id="ph1">`StreamReader`</ph> object is an unmanaged resource and must be closed before the iterator instance is destroyed.</source>
          <target state="translated">Дескриптор файла, используемый <ph id="ph1">`StreamReader`</ph> объект является неуправляемым ресурсом и должен быть закрыт до уничтожения экземпляра итератора.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Replace the code that <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> generated for the <ph id="ph2">`Dispose`</ph> method with the following code.</source>
          <target state="translated">Замените код, <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> для <ph id="ph2">`Dispose`</ph> метод следующим кодом.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#9<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_9.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough №&amp;9;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_9.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Using the Sample Iterator</source>
          <target state="translated">Использование образца итератора</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can use an enumerable class in your code together with control structures that require an object that implements <ph id="ph1">`IEnumerable`</ph>, such as a <ph id="ph2">`For Next`</ph> loop or a LINQ query.</source>
          <target state="translated">Перечислимый класс может использоваться в коде совместно с управляющими структурами, для которых требуется объект, реализующий <ph id="ph1">`IEnumerable`</ph>, такие как <ph id="ph2">`For Next`</ph> цикла или запроса LINQ.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The following example shows the <ph id="ph1">`StreamReaderEnumerable`</ph> in a LINQ query.</source>
          <target state="translated">В следующем примере показан <ph id="ph1">`StreamReaderEnumerable`</ph> в запросе LINQ.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough#10<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_10.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrIteratorWalkthrough&amp;#10;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/control-flow/codesnippet/VisualBasic/walkthrough-implementing-ienumerable-of-t_10.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">См. также</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Introduction to LINQ in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Введение в LINQ в Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Control Flow<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Поток управления<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Loop Structures<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/loop-structures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Циклические структуры<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/loop-structures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>For Each...Next Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/for-each-next-statement.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Оператор For Each...Next<ept id="p1">](../../../../visual-basic/language-reference/statements/for-each-next-statement.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>