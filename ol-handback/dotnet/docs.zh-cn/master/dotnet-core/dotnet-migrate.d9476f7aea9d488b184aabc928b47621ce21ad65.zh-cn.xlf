<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f0362aa" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">57ae01419c6f7a75970816e1245094c38c5247fa</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\preview3\tools\dotnet-migrate.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53aa35d54b08ce1c3ed88508ce45fa970fef93a0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df41a6b7c8aac0b82b1ca0cf63287e9545a7281e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-migrate command | Microsoft Docs</source>
          <target state="translated">dotnet-migrate 命令 | Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-migrate command migrates a project and all of its dependencies.</source>
          <target state="translated">dotnet-migrate 命令可迁移项目及其所有依赖项。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-migrate, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-migrate, CLI, CLI 命令, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-migrate</source>
          <target state="translated">dotnet-migrate</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">名称</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>dotnet-migrate -- Migrates a Preview 2 .NET Core project to RC4 .NET Core project</source>
          <target state="translated">dotnet-migrate - 将预览版 2 .NET Core 项目迁移到 RC4 .NET Core 项目</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">摘要</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`dotnet migrate`</ph> command will migrate a valid Preview 2 <ph id="ph2">`project.json`</ph> based project to a valid RC4 <ph id="ph3">`csproj`</ph> project.</source>
          <target state="translated"><ph id="ph1">`dotnet migrate`</ph> 命令将有效的预览版 2 <ph id="ph2">`project.json`</ph> 项目迁移到有效的 RC4 <ph id="ph3">`csproj`</ph> 项目。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>By default, the command will migrate the root project and any project references that the root project contains.</source>
          <target state="translated">默认情况下，命令将迁移根项目和根项目包含的任何项目引用。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This behavior can be disabled using the <ph id="ph1">`--skip-project-references`</ph> option at runtime.</source>
          <target state="translated">可以在运行时使用 <ph id="ph1">`--skip-project-references`</ph> 选项禁用此行为。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Migration can be done on either:</source>
          <target state="translated">可以对以下对象进行迁移：</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A single project by specifying the <ph id="ph1">`project.json`</ph> file to migrate</source>
          <target state="translated">通过指定要迁移的 <ph id="ph1">`project.json`</ph> 文件来迁移单个项目</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>All of the directories specified in the <ph id="ph1">`global.json`</ph> file by passing in a path to the <ph id="ph2">`global.json`</ph> file</source>
          <target state="translated">通过将路径传递到 <ph id="ph2">`global.json`</ph> 文件来迁移 <ph id="ph1">`global.json`</ph> 文件中指定的所有目录</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>On all sub-directories of the given directory recursively</source>
          <target state="translated">以递归方式迁移给定目录的所有子目录</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The migrate command will keep the migrated <ph id="ph1">`project.json`</ph> file inside a <ph id="ph2">`backup`</ph> directory which it will create if it doesn't exist.</source>
          <target state="translated">migrate 命令将迁移的 <ph id="ph1">`project.json`</ph> 文件保存在 <ph id="ph2">`backup`</ph> 目录中，如果该目录不存在，将创建一个。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This can be overriden using the <ph id="ph1">`--skip-backup`</ph> option.</source>
          <target state="translated">可以使用 <ph id="ph1">`--skip-backup`</ph> 选项对其重写。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>By default, the migration operation will output the state of the migration process to standard output (STDOUT).</source>
          <target state="translated">默认情况下，迁移操作会将迁移过程的状态输出到标准输出 (STDOUT)。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you use the <ph id="ph1">`--report-file`</ph> option, that output will also be saved to a file that you specify.</source>
          <target state="translated">如果使用 <ph id="ph1">`--report-file`</ph> 选项，该输出也将保存到你所指定的文件。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>As of RC4, the <ph id="ph1">`dotnet migrate`</ph> command only supports valid Preview 2 <ph id="ph2">`project.json`</ph> files.</source>
          <target state="translated">从 RC4 开始，<ph id="ph1">`dotnet migrate`</ph> 命令仅支持有效的预览版 2 <ph id="ph2">`project.json`</ph> 文件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This means that you cannot use it to migrate old DNX or Preview 1 <ph id="ph1">`project.json`</ph> files directly to csproj; you first need to migrate them to Preview 2 project.json files and then to csproj files.</source>
          <target state="translated">这意味着无法用它将旧的 DNX 或预览版 1 <ph id="ph1">`project.json`</ph> 文件直接迁移到 csproj；你需要首先将它们迁移到预览版 2 project.json 文件，然后再迁移到 csproj 文件。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In the future, we will add support for Preview 1 projects.</source>
          <target state="translated">将来，我们将添加对预览版 1 项目的支持。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">选项</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">打印出有关命令的简短帮助。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Template csproj file to use for migration.</source>
          <target state="translated">用于迁移的模板 csproj 文件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>By default, the same template as the one dropped by <ph id="ph1">`dotnet new`</ph> will be used.</source>
          <target state="translated">默认情况下，将使用与被 <ph id="ph1">`dotnet new`</ph> 删除的模板相同的模板。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The version of the sdk package that will be referenced in the migrated app.</source>
          <target state="translated">在已迁移应用中将被引用的 sdk 包的版本。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The default is the version of the sdk in dotnet new.</source>
          <target state="translated">默认为 dotnet new 中 sdk 的版本。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The path to the xproj file to use.</source>
          <target state="translated">要使用的 xproj 文件的路径。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Required when there is more than one xproj in a project directory.</source>
          <target state="translated">当项目目录中有多个 xproj 时需要。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Skip migrating project references.</source>
          <target state="translated">跳过迁移项目引用。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>By default project references are migrated recursively.</source>
          <target state="translated">默认情况下，以递归方式迁移项目引用。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Output migration report to a file in addition to the console.</source>
          <target state="translated">除控制台外，还将迁移报告输出到文件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Output migration report file as json rather than user messages.</source>
          <target state="translated">将迁移报告文件（而非用户消息）作为 json 输出。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Skip moving project.json, global.json, and <ph id="ph1">\*</ph>.xproj to a <ph id="ph2">`backup`</ph> directory after successful migration.</source>
          <target state="translated">在成功迁移后，跳过将 project.json、global.json 和 <ph id="ph1">\*</ph>.xproj 移动到 <ph id="ph2">`backup`</ph> 目录的步骤。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Migrate a project in the current directory and all of its project to project dependencies:</source>
          <target state="translated">将当前目录中的项目及其所有项目迁移到项目依赖项：</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Migrate all projects that <ph id="ph1">`global.json`</ph> file points to:</source>
          <target state="translated">迁移 <ph id="ph1">`global.json`</ph> 文件所指向的所有项目：</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Migrate only the current project and no project to project dependencies and use a specific SDK version:</source>
          <target state="translated">仅迁移当前项目，不迁移项目到项目的依赖项，并使用特定的 SDK 版本：</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>