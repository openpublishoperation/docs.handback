<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-f0362aa" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1cf1611ab83874ad44855521d21040d102206338</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\tools\dotnet-publish.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d77d550e67c4802c079514a93f8d33751fdc1fba</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34608a71f61fbe816b1e71b4a54fd0276dfec779</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>dotnet-publish command | Microsoft Docs</source>
          <target state="translated">dotnet-publish 命令 | Microsoft Docs</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The dotnet-publish command publishes your .NET Core project into a directory.</source>
          <target state="translated">dotnet-publish 命令可将 .NET Core 项目发布到目录。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>dotnet-publish, CLI, CLI command, .NET Core</source>
          <target state="translated">dotnet-publish, CLI, CLI 命令, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>dotnet-publish</source>
          <target state="translated">dotnet-publish</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic applies to .NET Core Tools Preview 2.</source>
          <target state="translated">本主题适用于 .NET Core 工具预览版 2。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For the .NET Core Tools RC4 version, see the <bpt id="p1">[</bpt>dotnet-publish (.NET Core Tools RC4)<ept id="p1">](../preview3/tools/dotnet-publish.md)</ept> topic.</source>
          <target state="translated">对于 .NET Core 工具 RC4 版本，请参阅 <bpt id="p1">[</bpt>dotnet-publish（.NET Core 工具 RC4）<ept id="p1">](../preview3/tools/dotnet-publish.md)</ept>主题。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">名称</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet-publish`</ph> - Packs the application and all of its dependencies into a folder getting it ready for publishing.</source>
          <target state="translated"><ph id="ph1">`dotnet-publish`</ph> - 将应用程序及其所有依赖项打包到文件夹，准备进行发布。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">摘要</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`dotnet publish`</ph> compiles the application, reads through its dependencies specified in the <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> file and publishes the resulting set of files to a directory.</source>
          <target state="translated"><ph id="ph1">`dotnet publish`</ph> 编译应用程序、读取 <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> 文件中指定的所有依赖项并将生成的文件集发布到目录。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Depending on the type of portable app, the resulting directory will contain the following:</source>
          <target state="translated">根据可移植应用的类型，生成的目录包含以下内容：</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Portable application<ept id="p1">*</ept> - application's intermediate language (IL) code and all of application's managed dependencies.</source>
          <target state="translated">可移植应用程序 - 应用程序的中间语言 (IL) 代码和应用程序的所有托管依赖项。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Portable application with native dependencies<ept id="p1">*</ept> - same as above with a sub-directory for the supported platform of each native dependency.</source>
          <target state="translated">含本机依赖项的可移植应用程序 - 除上述内容外，还包括每个本机依赖项的受支持平台的子目录。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Self-contained application<ept id="p1">*</ept> - same as above plus the entire runtime for the targeted platform.</source>
          <target state="translated">独立应用程序 - 除上述内容外，还包括目标平台的完整运行时。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>.NET Core Application Deployment<ept id="p1">](../deploying/index.md)</ept> topic.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p1">[</bpt>.NET Core 应用程序部署<ept id="p1">](../deploying/index.md)</ept>主题。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">选项</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The project to publish, which defaults to the current directory if <ph id="ph1">`[project]`</ph> is not specified.</source>
          <target state="translated">要发布的项目，如果未指定 <ph id="ph1">`[project]`</ph>，默认为当前目录。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This value can be a path to the <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> file or to the project directory that contains the <bpt id="p2">[</bpt>project.json<ept id="p2">](project-json.md)</ept> file.</source>
          <target state="translated">此值可以是 <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> 文件或包含 <bpt id="p2">[</bpt>project.json<ept id="p2">](project-json.md)</ept> 文件的项目目录的路径。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If no <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> file can be found, <ph id="ph1">`dotnet publish`</ph> throws an error.</source>
          <target state="translated">如果找不到 <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> 文件，<ph id="ph1">`dotnet publish`</ph> 会引发错误。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Prints out a short help for the command.</source>
          <target state="translated">打印出有关命令的简短帮助。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Publishes the application for a given framework identifier (FID).</source>
          <target state="translated">发布针对给定框架标识符 (FID) 的应用程序。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If not specified, FID is read from <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md#frameworks)</ept>.</source>
          <target state="translated">如未指定，则从 <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md#frameworks)</ept> 读取 FID。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If no valid framework is found, the command throws an error.</source>
          <target state="translated">如果找不到有效框架，该命令会引发错误。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If multiple valid frameworks are found, the command publishes for all valid frameworks.</source>
          <target state="translated">如果找到多个有效框架，该命令会发布所有有效框架。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Publishes the application for a given runtime.</source>
          <target state="translated">发布针对给定运行时的应用程序。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For a list of Runtime Identifiers (RIDs) you can use, see the <bpt id="p1">[</bpt>RID catalog<ept id="p1">](../rid-catalog.md)</ept>.</source>
          <target state="translated">有关可以使用的运行时标识符 (RID) 列表，请参阅 <bpt id="p1">[</bpt>RID 目录<ept id="p1">](../rid-catalog.md)</ept>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Directory in which to place temporary outputs.</source>
          <target state="translated">放置临时输出的目录。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Specify the path where to place the directory.</source>
          <target state="translated">指定放置目录的路径。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If not specified, it will default to <bpt id="p1">*</bpt><bpt id="p2">_</bpt>./bin/[configuration]/[framework]/<ept id="p2">_</ept><ept id="p1">*</ept> for portable applications or <bpt id="p3">*</bpt><bpt id="p4">_</bpt>./bin/[configuration]/[framework]/[runtime]<ept id="p4">_</ept><ept id="p3">*</ept> for self-contained deployments.</source>
          <target state="translated">如未指定，对于可移植应用程序，将默认为 <bpt id="p1">*</bpt><bpt id="p2">_</bpt>./bin/[configuration]/[framework]/<ept id="p2">_</ept><ept id="p1">*</ept> 或对于独立部署，将默认为 <bpt id="p3">*</bpt><bpt id="p4">_</bpt>./bin/[configuration]/[framework]/[runtime]<ept id="p4">_</ept><ept id="p3">*</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Defines what <ph id="ph1">`*`</ph> should be replaced with in the version field in the project.json file.</source>
          <target state="translated">定义在 project.json 文件的版本字段中应替换 <ph id="ph1">`*`</ph> 的对象。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Configuration to use when publishing.</source>
          <target state="translated">发布时要使用的配置。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`Debug`</ph>.</source>
          <target state="translated">默认值为 <ph id="ph1">`Debug`</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`[--native-subdirectory]`</ph> Temporary mechanism to include subdirectories from native assets of dependency packages in output.</source>
          <target state="translated"><ph id="ph1">`[--native-subdirectory]`</ph> 依赖项包的本机资产中的子目录包括在输出中的临时机制。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`[--no-build]`</ph> Does not build projects before publishing.</source>
          <target state="translated"><ph id="ph1">`[--no-build]`</ph> 发布前不生成项目。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Publish an application using the framework found in <ph id="ph1">`project.json`</ph>.</source>
          <target state="translated">使用在 <ph id="ph1">`project.json`</ph> 中找到的框架发布应用程序。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`project.json`</ph> contains <bpt id="p1">[</bpt>runtimes<ept id="p1">](project-json.md#runtimes)</ept> node, publish for the RID of the current platform.</source>
          <target state="translated">如果 <ph id="ph1">`project.json`</ph> 包含<bpt id="p1">[</bpt>运行时<ept id="p1">](project-json.md#runtimes)</ept>节点，则发布当前平台的 RID。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Publish the application using the specified <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept>:</source>
          <target state="translated">使用指定的 <bpt id="p1">[</bpt>project.json<ept id="p1">](project-json.md)</ept> 发布应用程序：</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Publish the current application using the <ph id="ph1">`netcoreapp1.0`</ph> framework:</source>
          <target state="translated">使用 <ph id="ph1">`netcoreapp1.0`</ph> 框架发布当前应用程序：</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Publish the current application using the <ph id="ph1">`netcoreapp1.0`</ph> framework and runtime for <ph id="ph2">`OS X 10.10`</ph> (this RID has to exist in the <ph id="ph3">`project.json`</ph> <bpt id="p1">[</bpt>runtimes<ept id="p1">](project-json.md#runtimes)</ept> node):</source>
          <target state="translated">使用 <ph id="ph1">`netcoreapp1.0`</ph> 框架和 <ph id="ph2">`OS X 10.10`</ph> 的运行时发布当前应用程序（此 RID 必须存在于 <ph id="ph3">`project.json`</ph> <bpt id="p1">[</bpt>运行时<ept id="p1">](project-json.md#runtimes)</ept>节点中）：</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Frameworks<ept id="p1">](../../standard/frameworks.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>框架<ept id="p1">](../../standard/frameworks.md)</ept></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Runtime IDentifier (RID) catalog<ept id="p1">](../rid-catalog.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>运行时标识符 (RID) 目录<ept id="p1">](../rid-catalog.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>
