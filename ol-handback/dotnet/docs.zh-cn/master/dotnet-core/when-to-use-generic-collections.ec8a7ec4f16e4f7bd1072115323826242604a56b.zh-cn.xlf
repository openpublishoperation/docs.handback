<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-0ca64c3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bde317c165981775330e1d0d8261d355e2401bc9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\collections\when-to-use-generic-collections.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59a2b13900acdc156dbd3aeff665491d60f837f2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12eac45fb50deb97e9d36cef478bce7098efa0c9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>When to Use Generic Collections</source>
          <target state="translated">何时使用泛型集合</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>When to Use Generic Collections</source>
          <target state="translated">何时使用泛型集合</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET、.NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When to Use Generic Collections</source>
          <target state="translated">何时使用泛型集合</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Using generic collections is generally recommended, because you gain the immediate benefit of type safety without having to derive from a base collection type and implement type-specific members.</source>
          <target state="translated">通常建议使用泛型集合，因为这样你可以获得类型安全的直接优点而无需从基集合类型派生和实现特定类型的成员。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Generic collection types also generally perform better than the corresponding nongeneric collection types (and better than types that are derived from nongeneric base collection types) when the collection elements are value types, because with generics there is no need to box the elements.</source>
          <target state="translated">当集合元素为值类型时，泛型集合类型也通常优于对应的非泛型集合类型（比从非泛型基集合类型派生的类型好），因为使用泛型时不必对元素进行装箱。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You should use the generic collection classes in the <bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept> namespace when multiple threads might be adding or removing items from the collection concurrently.</source>
          <target state="translated">应在多个线程可能会同时向集合添加项或从集合中删除项时使用 <bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept> 命名空间中的泛型集合。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following generic types correspond to existing collection types:</source>
          <target state="translated">以下泛型类型对应于现有集合类型：</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> is the generic class that corresponds to <bpt id="p2">[</bpt>ArrayList<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ArrayList)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> 泛型类对应 <bpt id="p2">[</bpt>ArrayList<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ArrayList)</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Dictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept> and <bpt id="p2">[</bpt>ConcurrentDictionary<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept> are the generic classes that correspond to <bpt id="p3">[</bpt>Hashtable<ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>Dictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept> 和 <bpt id="p2">[</bpt>ConcurrentDictionary<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentDictionary-2)</ept> 泛型类对应 <bpt id="p3">[</bpt>Hashtable<ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Hashtable)</ept>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Collection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.Collection-1)</ept> is the generic class that corresponds to <bpt id="p2">[</bpt>CollectionBase<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.CollectionBase)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>Collection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.Collection-1)</ept> 泛型类对应 <bpt id="p2">[</bpt>CollectionBase<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.CollectionBase)</ept>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Collection&lt;T&gt;`</ph> can be used as a base class, but unlike <ph id="ph2">`CollectionBase`</ph>, it is not abstract.</source>
          <target state="translated"><ph id="ph1">`Collection&lt;T&gt;`</ph> 可以用作基类，但是与 <ph id="ph2">`CollectionBase`</ph> 不同，它不抽象。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This makes it much easier to use.</source>
          <target state="translated">这使得它更易于使用。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ReadOnlyCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.ReadOnlyCollection-1)</ept> is the generic class that corresponds to <bpt id="p2">[</bpt>ReadOnlyCollectionBase<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ReadOnlyCollectionBase)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>ReadOnlyCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.ReadOnlyCollection-1)</ept> 泛型类对应 <bpt id="p2">[</bpt>ReadOnlyCollectionBase<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ReadOnlyCollectionBase)</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`ReadOnlyCollection&lt;T&gt;`</ph> is not abstract, and has a constructor that makes it easy to expose an existing <bpt id="p1">[</bpt>List<ph id="ph2">&amp;lt;</ph>T<ph id="ph3">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> as a read-only collection.</source>
          <target state="translated"><ph id="ph1">`ReadOnlyCollection&lt;T&gt;`</ph> 不是抽象类并且拥有可以轻松地将现有 <bpt id="p1">[</bpt>List<ph id="ph2">&amp;lt;</ph>T<ph id="ph3">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> 公开为只读集合的构造函数。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Queue<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Queue-1)</ept>, <bpt id="p2">[</bpt>ConcurrentQueue<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentQueue-1)</ept>, <bpt id="p3">[</bpt>Stack<ph id="ph5">&amp;lt;</ph>T<ph id="ph6">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Stack-1)</ept>, <bpt id="p4">[</bpt>ConcurrentStack<ph id="ph7">&amp;lt;</ph>T<ph id="ph8">&amp;gt;</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentStack-1)</ept>, and <bpt id="p5">[</bpt>SortedList<ph id="ph9">&amp;lt;</ph>TKey, TValue<ph id="ph10">&amp;gt;</ph><ept id="p5">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept> generic classes correspond to the respective nongeneric classes with the same names.</source>
          <target state="translated"><bpt id="p1">[</bpt>Queue<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Queue-1)</ept>、<bpt id="p2">[</bpt>ConcurrentQueue<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentQueue-1)</ept>、<bpt id="p3">[</bpt>Stack<ph id="ph5">&amp;lt;</ph>T<ph id="ph6">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Stack-1)</ept>、<bpt id="p4">[</bpt>ConcurrentStack<ph id="ph7">&amp;lt;</ph>T<ph id="ph8">&amp;gt;</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentStack-1)</ept> 和 <bpt id="p5">[</bpt>SortedList<ph id="ph9">&amp;lt;</ph>TKey, TValue<ph id="ph10">&amp;gt;</ph><ept id="p5">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept> 泛型类分别对应相同名称的非泛型类。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Additional Types</source>
          <target state="translated">其他类型</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Several generic collection types do not have nongeneric counterparts.</source>
          <target state="translated">几种泛型集合类型没有对应的非泛型集合类型。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>They include the following:</source>
          <target state="translated">它们包括以下类型：</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LinkedList<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.LinkedList-1)</ept> is a general-purpose linked list that provides O(1) insertion and removal operations.</source>
          <target state="translated"><bpt id="p1">[</bpt>LinkedList<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.LinkedList-1)</ept> 是一个通用的链接列表，该列表提供 O(1) 插入和删除操作。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SortedDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2)</ept> is a sorted dictionary with O(log n) insertion and retrieval operations, which makes it a useful alternative to <bpt id="p2">[</bpt>SortedList<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>SortedDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2)</ept> 是一个有 O(log n) 插入和检索操作的已排序字典，这使它有效代替了 <bpt id="p2">[</bpt>SortedList<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>KeyedCollection<ph id="ph1">&amp;lt;</ph>TKey, TItem<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.KeyedCollection-2)</ept> is a hybrid between a list and a dictionary, which provides a way to store objects that contain their own keys.</source>
          <target state="translated"><bpt id="p1">[</bpt>KeyedCollection<ph id="ph1">&amp;lt;</ph>TKey, TItem<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.KeyedCollection-2)</ept> 是列表和字典的结合，它提供一种方法来存储包含自己的键的对象。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>BlockingCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.BlockingCollection-1)</ept> implements a collection class with bounding and blocking functionality.</source>
          <target state="translated"><bpt id="p1">[</bpt>BlockingCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.BlockingCollection-1)</ept> 通过限制和阻塞功能实现集合类。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>ConcurrentBag<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentBag-1)</ept> provides fast insertion and removal of unordered elements.</source>
          <target state="translated"><bpt id="p1">[</bpt>ConcurrentBag<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.ConcurrentBag-1)</ept> 能快速插入和移除未排序元素。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>LINQ to Objects</source>
          <target state="translated">LINQ to Objects</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The LINQ to Objects feature enables you to use LINQ queries to access in-memory objects as long as the object type implements the <bpt id="p1">[</bpt>System.Collections.IEnumerable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IEnumerable)</ept> or <bpt id="p2">[</bpt>System.Collections.Generic.IEnumerable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IEnumerable-1)</ept> interface.</source>
          <target state="translated">LINQ to Objects 功能允许使用 LINQ 查询来访问内存中的对象，但条件是该对象类型要实现 <bpt id="p1">[</bpt>System.Collections.IEnumerable<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.IEnumerable)</ept> 或 <bpt id="p2">[</bpt>System.Collections.Generic.IEnumerable<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IEnumerable-1)</ept> 接口。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>LINQ queries provide a common pattern for accessing data; are typically more concise and readable than standard <ph id="ph1">`foreach`</ph> loops; and provide filtering, ordering and grouping capabilities.</source>
          <target state="translated">LINQ 查询提供了一种通用的数据访问模式；与标准 <ph id="ph1">`foreach`</ph> 循环相比，它通常更加简洁，可读性更高；这种查询可提供筛选、排序和分组功能。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>LINQ queries can also improve performance.</source>
          <target state="translated">LINQ 查询还可提高性能。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Additional Functionality</source>
          <target state="translated">其他功能</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Some of the generic types have functionality that is not found in the nongeneric collection types.</source>
          <target state="translated">一些泛型类型具有非泛型集合类型中找不到的功能。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For example, the <bpt id="p1">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> class, which corresponds to the nongeneric <bpt id="p2">[</bpt>ArrayList<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ArrayList)</ept> class, has a number of methods that accept generic delegates, such as the <bpt id="p3">[</bpt>Predicate<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Predicate-1)</ept> delegate that allows you to specify methods for searching the list, and the <bpt id="p4">[</bpt>Action<ph id="ph5">&amp;lt;</ph>T<ph id="ph6">&amp;gt;</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Action-1)</ept> delegate that represents methods that act on each element of the list.</source>
          <target state="translated">比如与非泛型 <bpt id="p2">[</bpt>ArrayList<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ArrayList)</ept> 类相对的 <bpt id="p1">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> 类有大量接受泛型委托的方法，例如允许指定搜索列表的方法的 <bpt id="p3">[</bpt>Predicate<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Predicate-1)</ept> 委托和表示对列表中每个元素发挥作用的 <bpt id="p4">[</bpt>Action<ph id="ph5">&amp;lt;</ph>T<ph id="ph6">&amp;gt;</ph><ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Action-1)</ept> 委托。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> class allows you to specify your own <bpt id="p2">[</bpt>IComparer<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IComparer-1)</ept> generic interface implementations for sorting and searching the list.</source>
          <target state="translated"><bpt id="p1">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> 类使你可以指定自己的 <bpt id="p2">[</bpt>IComparer<ph id="ph3">&amp;lt;</ph>T<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IComparer-1)</ept> 泛型接口实现，用于排序和搜索列表。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>SortedDictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2)</ept> and <bpt id="p2">[</bpt>SortedList<ph id="ph3">&amp;lt;</ph>TKey, TValue<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept> classes also have this capability.</source>
          <target state="translated"><bpt id="p1">[</bpt>SortedDictionary<ph id="ph1">&amp;lt;</ph>TKey，TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedDictionary-2)</ept> 和 <bpt id="p2">[</bpt>SortedList<ph id="ph3">&amp;lt;</ph>TKey，TValue<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.SortedList-2)</ept> 类也有这个功能。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In addition, these classes let you specify comparers when the collection is created.</source>
          <target state="translated">另外，这些类使你可以在创建集合时指定比较器。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In similar fashion, the <bpt id="p1">[</bpt>Dictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept> and <bpt id="p2">[</bpt>KeyedCollection<ph id="ph3">&amp;lt;</ph>TKey, TItem<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.KeyedCollection-2)</ept> classes let you specify your own equality comparers.</source>
          <target state="translated">同样，<bpt id="p1">[</bpt>Dictionary<ph id="ph1">&amp;lt;</ph>TKey, TValue<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept> 和 <bpt id="p2">[</bpt>KeyedCollection<ph id="ph3">&amp;lt;</ph>TKey, TItem<ph id="ph4">&amp;gt;</ph><ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Collections.ObjectModel.KeyedCollection-2)</ept> 类使你可指定自己的相等比较器。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Collections and Data Structures<ept id="p1">](index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>集合和数据结构<ept id="p1">](index.md)</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Commonly Used Collection Types<ept id="p1">](commonly-used-collection-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>常用的集合类型<ept id="p1">](commonly-used-collection-types.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>