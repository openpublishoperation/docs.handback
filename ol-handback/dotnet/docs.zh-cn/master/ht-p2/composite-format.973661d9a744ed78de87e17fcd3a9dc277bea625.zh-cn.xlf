<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9bcf2ff74237f7e7faf2890849c2d68a0a602353</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\composite-format.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e2c3cf56c8e87f15edb57516f6f991c6525e1d1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2bddf201ca88da85855fcb77d0e0bdade21a8ac5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Composite formatting</source>
          <target state="translated">复合格式设置</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Composite formatting</source>
          <target state="translated">复合格式设置</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Composite formatting</source>
          <target state="translated">复合格式设置</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The .NET composite formatting feature takes a list of objects and a composite format string as input.</source>
          <target state="translated">.NET 复合格式设置功能使用对象列表和复合格式字符串作为输入。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A composite format string consists of fixed text intermixed with indexed placeholders, called format items, that correspond to the objects in the list.</source>
          <target state="translated">复合格式字符串由固定文本和索引占位符混和组成，其中索引占位符称为格式项，对应于列表中的对象。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The formatting operation yields a result string that consists of the original fixed text intermixed with the string representation of the objects in the list.</source>
          <target state="translated">格式设置操作产生的结果字符串由原始固定文本和列表中对象的字符串表示形式混和组成。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The composite formatting feature is supported by methods such as the following:</source>
          <target state="translated">复合格式设置功能受诸如以下方法的支持：</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept>, which returns a formatted result string.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept>，它返回格式化的结果字符串。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>[StringBuilder.AppendFormat](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider, System.String, System.Object), which appends a formatted result string to a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated">[StringBuilder.AppendFormat](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider, System.String, System.Object)，它将格式化的结果字符串追加到 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 对象。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Some overloads of the <bpt id="p1">[</bpt>Console<ept id="p1">](xref:System.Console)</ept> <ph id="ph1">`WriteLine`</ph> method, which display a formatted result string to the console.</source>
          <target state="translated"><bpt id="p1">[</bpt>Console<ept id="p1">](xref:System.Console)</ept> <ph id="ph1">`WriteLine`</ph> 方法的某些重载，它将格式化的结果字符串显示到控制台上。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Some overloads of the <bpt id="p1">[</bpt>TextWriter<ept id="p1">](xref:System.IO.TextWriter)</ept> <ph id="ph1">`WriteLine`</ph> method, which write the formatted result string to a stream or file.</source>
          <target state="translated"><bpt id="p1">[</bpt>TextWriter<ept id="p1">](xref:System.IO.TextWriter)</ept> <ph id="ph1">`WriteLine`</ph> 方法的某些重载，它将格式化的结果字符串写入流或文件中。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Classes derived from <bpt id="p1">[</bpt>TextWriter<ept id="p1">](xref:System.IO.TextWriter)</ept>, such as <bpt id="p2">[</bpt>StreamWriter<ept id="p2">](xref:System.IO.StreamWriter)</ept>, also share this functionality.</source>
          <target state="translated">派生自 <bpt id="p1">[</bpt>TextWriter<ept id="p1">](xref:System.IO.TextWriter)</ept> 的类（如 <bpt id="p2">[</bpt>StreamWriter<ept id="p2">](xref:System.IO.StreamWriter)</ept>）也具有此功能。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debug.WriteLine(String, Object[])<ept id="p1">](xref:System.Diagnostics.Debug.WriteLine(System.String,System.Object[]))</ept>, which outputs a formatted message to trace listeners.</source>
          <target state="translated"><bpt id="p1">[</bpt>Debug.WriteLine(String, Object[])<ept id="p1">](xref:System.Diagnostics.Debug.WriteLine(System.String,System.Object[]))</ept>，它将格式化消息输出到跟踪侦听器。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Trace.TraceError(String, Object[])<ept id="p1">](xref:System.Diagnostics.Trace.TraceError(System.String,System.Object[]))</ept>, <bpt id="p2">[</bpt>Trace.TraceInformation(String, Object[])<ept id="p2">](xref:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[]))</ept>, and <bpt id="p3">[</bpt>Trace.TraceWarning(String, Object[])<ept id="p3">](xref:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[]))</ept> methods, which output formatted messages to trace listeners.</source>
          <target state="translated">The <bpt id="p1">[</bpt>Trace.TraceError(String, Object[])<ept id="p1">](xref:System.Diagnostics.Trace.TraceError(System.String,System.Object[]))</ept>、<bpt id="p2">[</bpt>Trace.TraceInformation(String, Object[])<ept id="p2">](xref:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[]))</ept> 和 <bpt id="p3">[</bpt>Trace.TraceWarning(String, Object[])<ept id="p3">](xref:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[]))</ept> 方法，它们将格式化消息输出到跟踪侦听器。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>TraceSource.TraceInformation(String, Object[])<ept id="p1">](xref:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[]))</ept> method, which writes an informational method to trace listeners.</source>
          <target state="translated"><bpt id="p1">[</bpt>TraceSource.TraceInformation(String, Object[])<ept id="p1">](xref:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[]))</ept> 方法，它将信息性方法写入跟踪侦听器。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Composite Format String</source>
          <target state="translated">复合格式字符串</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A composite format string and object list are used as arguments of methods that support the composite formatting feature.</source>
          <target state="translated">复合格式字符串和对象列表将用作支持复合格式设置功能的方法的参数。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A composite format string consists of zero or more runs of fixed text intermixed with one or more format items.</source>
          <target state="translated">复合格式字符串由零个或多个固定文本段与一个或多个格式项混和组成。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The fixed text is any string that you choose, and each format item corresponds to an object or boxed structure in the list.</source>
          <target state="translated">固定文本是所选择的任何字符串，并且每个格式项对应于列表中的一个对象或装箱的结构。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The composite formatting feature returns a new result string where each format item is replaced by the string representation of the corresponding object in the list.</source>
          <target state="translated">复合格式设置功能返回新的结果字符串，其中每个格式项都被列表中相应对象的字符串表示形式取代。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Consider the following [Format](xref:System.String.Format(System.String.Format(System.IFormatProvider,System.String,System.Object)) code fragment.</source>
          <target state="translated">请考虑以下 [Format](xref:System.String.Format(System.String.Format(System.IFormatProvider,System.String,System.Object)) 代码段。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The fixed text is <ph id="ph1">`"Name = "`</ph> and <ph id="ph2">`", hours = "`</ph>.</source>
          <target state="translated">固定文本为 <ph id="ph1">`"Name = "`</ph> 和 <ph id="ph2">`", hours = "`</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The format items are <ph id="ph1">`"{0}"`</ph>, whose index is 0, which corresponds to the object <ph id="ph2">`name`</ph> and <ph id="ph3">`"{1:hh}"`</ph>, whose index is 1, which corresponds to the object <ph id="ph4">`DateTime.Now`</ph>.</source>
          <target state="translated">格式项为 <ph id="ph1">`"{0}"`</ph> 和 <ph id="ph3">`"{1:hh}"`</ph>，前者的索引为 0，对应于对象 <ph id="ph2">`name`</ph>，后者的索引为 1，对应于对象 <ph id="ph4">`DateTime.Now`</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Format Item Syntax</source>
          <target state="translated">格式项语法</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Each format item takes the following form and consists of the following components:</source>
          <target state="translated">每个格式项都采用下面的形式并包含以下组件：</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">__</bpt>{<ept id="p1">__</ept><bpt id="p2">*</bpt>index<ept id="p2">*</ept>[,<bpt id="p3">*</bpt>alignment<ept id="p3">*</ept>][:<bpt id="p4">*</bpt>formatString<ept id="p4">*</ept>]<bpt id="p5">__</bpt>}<ept id="p5">__</ept></source>
          <target state="translated"><bpt id="p1">__</bpt>{<ept id="p1">__</ept><bpt id="p2">*</bpt>index<ept id="p2">*</ept>[,<bpt id="p3">*</bpt>alignment<ept id="p3">*</ept>][:<bpt id="p4">*</bpt>formatString<ept id="p4">*</ept>]<bpt id="p5">__</bpt>}<ept id="p5">__</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The matching braces ("{" and "}") are required.</source>
          <target state="translated">必须使用成对的大括号（“{”和“}”）。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Index Component</source>
          <target state="translated">索引组件</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The mandatory <bpt id="p1">*</bpt>index<ept id="p1">*</ept> component, also called a parameter specifier, is a number starting from 0 that identifies a corresponding item in the list of objects.</source>
          <target state="translated">必需的<bpt id="p1">*</bpt>索引<ept id="p1">*</ept>组件（也叫参数说明符）是一个从 0 开始的数字，可标识对象列表中对应的项。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>That is, the format item whose parameter specifier is 0 formats the first object in the list, the format item whose parameter specifier is 1 formats the second object in the list, and so on.</source>
          <target state="translated">也就是说，参数说明符为 0 的格式项列表中的第一个对象，参数说明符为 1 的格式项列表中的第二个对象，依次类推。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example includes four parameter specifiers, numbered zero through three, to represent prime numbers less than ten:</source>
          <target state="translated">下面的示例包括四个参数说明符，编号为 0 到 3，用于表示小于 10 的质数：</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Multiple format items can refer to the same element in the list of objects by specifying the same parameter specifier.</source>
          <target state="translated">通过指定相同的参数说明符，多个格式项可以引用对象列表中的同一个元素。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For example, you can format the same numeric value in hexadecimal, scientific, and number format by specifying a composite format string such as : "0x{0:X} {0:E} {0:N}", as the following example shows.</source>
          <target state="translated">例如，通过指定诸如“0x{0:X} {0:E} {0:N}”的复合格式字符串，可以将同一个数值设置为十六进制、科学记数法和数字格式，如下面的示例所示。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Each format item can refer to any object in the list.</source>
          <target state="translated">每个格式项都可以引用列表中的任一对象。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, if there are three objects, you can format the second, first, and third object by specifying a composite format string like this: "{1} {0} {2}".</source>
          <target state="translated">例如，如果有三个对象，则可以通过指定类似于“{1} {0} {2}”的复合格式字符串来设置第二、第一和第三个对象的格式。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An object that is not referenced by a format item is ignored.</source>
          <target state="translated">格式项未引用的对象会被忽略。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>FormatException<ept id="p1">](xref:System.FormatException)</ept> is thrown at runtime if a parameter specifier designates an item outside the bounds of the list of objects.</source>
          <target state="translated">如果参数说明符指定了超出对象列表范围的项，在运行时将引发 <bpt id="p1">[</bpt>FormatException<ept id="p1">](xref:System.FormatException)</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Alignment Component</source>
          <target state="translated">对齐组件</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The optional <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> component is a signed integer indicating the preferred formatted field width.</source>
          <target state="translated">可选的<bpt id="p1">*</bpt>对齐<ept id="p1">*</ept>组件是一个带符号的整数，指示首选的设置了格式的字段宽度。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the value of <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> is less than the length of the formatted string, <bpt id="p2">*</bpt>alignment<ept id="p2">*</ept> is ignored and the length of the formatted string is used as the field width.</source>
          <target state="translated">如果 <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> 值小于设置了格式的字符串的长度，<bpt id="p2">*</bpt>alignment<ept id="p2">*</ept> 将被忽略，并使用设置了格式的字符串的长度作为字段宽度。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The formatted data in the field is right-aligned if <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> is positive and left-aligned if <bpt id="p2">*</bpt>alignment<ept id="p2">*</ept> is negative.</source>
          <target state="translated">如果 <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> 为正数，字段中设置了格式的数据为右对齐；如果 <bpt id="p2">*</bpt>alignment<ept id="p2">*</ept> 为负数，字段中的设置了格式的数据为左对齐。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If padding is necessary, white space is used.</source>
          <target state="translated">如果需要填充，则使用空白。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The comma is required if <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept>  is specified.</source>
          <target state="translated">如果指定 <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept>，则需要使用逗号。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following example defines two arrays, one containing the names of employees and the other containing the hours they worked over a two-week period.</source>
          <target state="translated">下面的示例定义两个数组，一个包含雇员的姓名，另一个则包含雇员在两周内的工作小时数。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The composite format string left-aligns the names in a 20-character field, and right-aligns their hours in a 5-character field.</source>
          <target state="translated">复合格式字符串使 20 字符字段中的姓名左对齐，使 5 字符字段中的工作小时数右对齐。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Note that the "N1" standard format string is also used to format the hours with one fractional digit.</source>
          <target state="translated">请注意“N1”标准格式字符串还用于设置带有小数位的小时数格式。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Format String Component</source>
          <target state="translated">格式字符串组件</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The optional <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> component is a format string that is appropriate for the type of object being formatted.</source>
          <target state="translated">可选的<bpt id="p1">*</bpt>格式字符串<ept id="p1">*</ept>组件是适合正在设置格式的对象类型的格式字符串。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Specify a standard or custom numeric format string if the corresponding object is a numeric value, a standard or custom date and time format string if the corresponding object is a <bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept> object, or an <bpt id="p2">[</bpt>enumeration format string<ept id="p2">](enumeration-format.md)</ept> if the corresponding object is an enumeration value.</source>
          <target state="translated">如果相应的对象是数值，则指定标准或自定义的数字格式字符串；如果相应的对象是 <bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept> 对象，则指定标准或自定义的日期和时间格式字符串；或者，如果相应的对象是枚举值，则指定<bpt id="p2">[</bpt>举格式字符串<ept id="p2">](enumeration-format.md)</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified, the general ("G") format specifier for a numeric, date and time, or enumeration type is used.</source>
          <target state="translated">如果不指定 <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>，则对数字、日期和时间或者枚举类型使用常规（“G”）格式说明符。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The colon is required if <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is specified.</source>
          <target state="translated">如果指定 <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>，则需要使用冒号。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following table lists types or categories of types in the .NET Framework class library that support a predefined set of format strings, and provides links to the topics that list the supported format strings.</source>
          <target state="translated">下表列出了 .NET Framework 类库中支持预定义的格式字符串集的类型或类型的类别，并提供指向列出了支持的格式字符串的主题的链接。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Note that string formatting is an extensible mechanism that makes it possible to define new format strings for all existing types as well as to define a set of format strings supported by an application-defined type.</source>
          <target state="translated">请注意，字符串格式化是一个可扩展的机制，可使用该机制定义所有现有类型的新的格式字符串，并定义受应用程序定义的类型支持的格式字符串集。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> and <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> interface topics.</source>
          <target state="translated">有关详细信息，请参阅 <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> 和 <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> 接口主题。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Type or type category</source>
          <target state="translated">类型或类型类别</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>See</source>
          <target state="translated">请参阅</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Date and time types (<bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept>, <bpt id="p2">[</bpt>DateTimeOffset<ept id="p2">](xref:System.DateTimeOffset)</ept>)</source>
          <target state="translated">日期和时间类型（<bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept>、<bpt id="p2">[</bpt>DateTimeOffset<ept id="p2">](xref:System.DateTimeOffset)</ept>）</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](standard-datetime.md)</ept>, <bpt id="p2">[</bpt>Custom date and time format strings<ept id="p2">](custom-datetime.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>标准日期和时间格式字符串<ept id="p1">](standard-datetime.md)</ept>、<bpt id="p2">[</bpt>自定义日期和时间格式字符串<ept id="p2">](custom-datetime.md)</ept></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Enumeration types (all types derived from <bpt id="p1">[</bpt>System.Enum<ept id="p1">](xref:System.Enum)</ept>)</source>
          <target state="translated">枚举类型（所有派生自 <bpt id="p1">[</bpt>System.Enum<ept id="p1">](xref:System.Enum)</ept> 的类型）</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](enumeration-format.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>枚举格式字符串<ept id="p1">](enumeration-format.md)</ept></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Numeric types (<bpt id="p1">[</bpt>BigInteger<ept id="p1">](xref:System.Numerics.BigInteger)</ept>, <bpt id="p2">[</bpt>Byte<ept id="p2">](xref:System.Byte)</ept>, <bpt id="p3">[</bpt>Decimal<ept id="p3">](xref:System.Decimal)</ept>, <bpt id="p4">[</bpt>Double<ept id="p4">](xref:System.Double)</ept>, <bpt id="p5">[</bpt>Int16<ept id="p5">](xref:System.Int16)</ept>, <bpt id="p6">[</bpt>Int32<ept id="p6">](xref:System.Int32)</ept>, <bpt id="p7">[</bpt>Int64<ept id="p7">](xref:System.Int64)</ept>, <bpt id="p8">[</bpt>SByte<ept id="p8">](xref:System.SByte)</ept>, <bpt id="p9">[</bpt>Single<ept id="p9">](xref:System.Single)</ept>, <bpt id="p10">[</bpt>UInt16<ept id="p10">](xref:System.UInt16)</ept>, <bpt id="p11">[</bpt>UInt32<ept id="p11">](xref:System.UInt32)</ept>, <bpt id="p12">[</bpt>UInt64<ept id="p12">](xref:System.UInt64)</ept>)</source>
          <target state="translated">数字类型（<bpt id="p1">[</bpt>BigInteger<ept id="p1">](xref:System.Numerics.BigInteger)</ept>、<bpt id="p2">[</bpt>Byte<ept id="p2">](xref:System.Byte)</ept>、<bpt id="p3">[</bpt>Decimal<ept id="p3">](xref:System.Decimal)</ept>、<bpt id="p4">[</bpt>Double<ept id="p4">](xref:System.Double)</ept>、<bpt id="p5">[</bpt>Int16<ept id="p5">](xref:System.Int16)</ept>、<bpt id="p6">[</bpt>Int32<ept id="p6">](xref:System.Int32)</ept>、<bpt id="p7">[</bpt>Int64<ept id="p7">](xref:System.Int64)</ept>、<bpt id="p8">[</bpt>SByte<ept id="p8">](xref:System.SByte)</ept>、<bpt id="p9">[</bpt>Single<ept id="p9">](xref:System.Single)</ept>、<bpt id="p10">[</bpt>UInt16<ept id="p10">](xref:System.UInt16)</ept>、<bpt id="p11">[</bpt>UInt32<ept id="p11">](xref:System.UInt32)</ept>、<bpt id="p12">[</bpt>UInt64<ept id="p12">](xref:System.UInt64)</ept>）</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](standard-numeric.md)</ept>, <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](custom-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>标准数字格式字符串<ept id="p1">](standard-numeric.md)</ept>、<bpt id="p2">[</bpt>自定义数字格式字符串<ept id="p2">](custom-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Guid<ept id="p1">](xref:System.Guid)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guid<ept id="p1">](xref:System.Guid)</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Guid.ToString(String)<ept id="p1">](xref:System.Guid.ToString(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guid.ToString(String)<ept id="p1">](xref:System.Guid.ToString(System.String))</ept></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>TimeSpan<ept id="p1">](xref:System.TimeSpan)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>TimeSpan<ept id="p1">](xref:System.TimeSpan)</ept></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard TimeSpan Format Strings<ept id="p1">](standard-timespan.md)</ept>, <bpt id="p2">[</bpt>Custom TimeSpan Format Strings<ept id="p2">](custom-timespan.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>标准 TimeSpan 格式字符串<ept id="p1">](standard-timespan.md)</ept>、<bpt id="p2">[</bpt>自定义 TimeSpan 格式字符串<ept id="p2">](custom-timespan.md)</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Escaping Braces</source>
          <target state="translated">转义大括号</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Opening and closing braces are interpreted as starting and ending a format item.</source>
          <target state="translated">左大括号和右大括号被解释为格式项的开始和结束。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Consequently, you must use an escape sequence to display a literal opening brace or closing brace.</source>
          <target state="translated">因此，必须使用转义序列显示文本左大括号或右大括号。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Specify two opening braces ("{{") in the fixed text to display one opening brace ("{"), or two closing braces ("}}") to display one closing brace ("}").</source>
          <target state="translated">在固定文本中指定两个左大括号 ("{{") 以显示一个左大括号 ("{")，或指定两个右大括号 ("}}") 以显示一个右大括号 ("}")。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Braces in a format item are interpreted sequentially in the order they are encountered.</source>
          <target state="translated">按照在格式项中遇到大括号的顺序依次解释它们。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Interpreting nested braces is not supported.</source>
          <target state="translated">不支持解释嵌套的大括号。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The way escaped braces are interpreted can lead to unexpected results.</source>
          <target state="translated">解释转义大括号的方式会导致意外的结果。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For example, consider the format item "{{{0:D}}}", which is intended to display an opening brace, a numeric value formatted as a decimal number, and a closing brace.</source>
          <target state="translated">例如，考虑要显示一个左大括号、一个设置为十进制数格式的数值和一个右大括号的格式项“{{{0:D}}}”。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>However, the format item is actually interpreted in the following manner:</source>
          <target state="translated">但是，实际是按照以下方式解释该格式项：</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The first two opening braces ("{{") are escaped and yield one opening brace.</source>
          <target state="translated">前两个左大括号 ("{{") 被转义，生成一个左大括号。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The next three characters ("{0:") are interpreted as the start of a format item.</source>
          <target state="translated">之后的三个字符 ("{0:") 被解释为格式项的开始。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The next character ("D") would be interpreted as the Decimal standard numeric format specifier, but the next two escaped braces ("}}") yield a single brace.</source>
          <target state="translated">下一个字符 ("D") 将被解释为 Decimal 标准数值格式说明符，但后面的两个转义大括号 ("}}") 生成单个大括号。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Because the resulting string ("D}") is not a standard numeric format specifier, the resulting string is interpreted as a custom format string that means display the literal string "D}".</source>
          <target state="translated">由于得到的字符串 ("D}") 不是标准数值格式说明符号，所以得到的字符串会被解释为用于显示字符串“D}”的自定义格式字符串。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The last brace ("}") is interpreted as the end of the format item.</source>
          <target state="translated">最后一个大括号 ("}") 被解释为格式项的结束。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The final result that is displayed is the literal string, "{D}".</source>
          <target state="translated">显示的最终结果是字符串“{D}”。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The numeric value that was to be formatted is not displayed.</source>
          <target state="translated">不会显示本来要设置格式的数值。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>One way to write your code to avoid misinterpreting escaped braces and format items is to format the braces and format item separately.</source>
          <target state="translated">在编写代码时，避免错误解释转义大括号和格式项的一种方法是单独设置大括号和格式项的格式。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>That is, in the first format operation display a literal opening brace, in the next operation display the result of the format item, then in the final operation display a literal closing brace.</source>
          <target state="translated">也就是说，在第一个格式设置操作中显示文本左大括号，在下一操作中显示格式项的结果，然后在最后一个操作中显示文本右大括号。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The following example illustrates this approach.</source>
          <target state="translated">下面的示例阐释了这种方法。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Processing Order</source>
          <target state="translated">处理顺序</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If the call to the composite formatting method includes an <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument whose value is not null, the runtime calls its <bpt id="p2">[</bpt>IFormatProvider.GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> method to request an <bpt id="p3">[</bpt>ICustomFormatter<ept id="p3">](xref:System.ICustomFormatter)</ept> implementation.</source>
          <target state="translated">如果对复合格式设置方法的调用包括其值不为 null 的 <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 自变量，则运行时会调用其 <bpt id="p2">[</bpt>IFormatProvider.GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 方法来请求 <bpt id="p3">[</bpt>ICustomFormatter<ept id="p3">](xref:System.ICustomFormatter)</ept> 实现。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If the method is able to return an <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> implementation, it is cached for later use.</source>
          <target state="translated">如果此方法能够返回 <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> 实现，则将对其进行缓存以供稍后使用。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Each value in the parameter list that corresponds to a format item is converted to a string by performing the following steps.</source>
          <target state="translated">通过执行以下步骤，将参数列表中与格式项对应的每个值转换为字符串。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If any condition in the first three steps is true, the string representation of the value is returned in that step, and subsequent steps are not executed.</source>
          <target state="translated">如果符合前三个步骤中的任一条件，则在此步骤中返回值的字符串表示形式，并且不执行后续步骤。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If the value to be formatted is <ph id="ph1">`null`</ph>, an empty string ("") is returned.</source>
          <target state="translated">如果要设置格式的值为 <ph id="ph1">`null`</ph>，则将返回空字符串 ("")。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If an <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> implementation is available, the runtime calls its <bpt id="p2">[</bpt>Format<ept id="p2">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> method.</source>
          <target state="translated">如果 <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> 实现可用，则运行时将调用其 <bpt id="p2">[</bpt>Format<ept id="p2">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> 方法。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>It passes the method the format item's <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> value, if one is present, or <ph id="ph1">`null`</ph> if it is not, along with the <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> implementation.</source>
          <target state="translated">如果格式项中存在 <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> 值，则将向方法传递该值，或如果不存在，则将 <ph id="ph1">`null`</ph> 和 <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> 实现一起传递。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If the value implements the <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> interface, the interface's <bpt id="p2">[</bpt>ToString(String,IFormatProvider)<ept id="p2">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> method is called.</source>
          <target state="translated">如果该值实现 <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> 接口，则调用该接口的 <bpt id="p2">[</bpt>ToString(String, IFormatProvider)<ept id="p2">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> 方法。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The method is passed the <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> value, if one is present in the format item, or <ph id="ph1">`null`</ph> if it is not.</source>
          <target state="translated">如果格式项中存在 <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> 值，则向方法传递该值；如果不存在该值，则传递 <ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument is determined as follows:</source>
          <target state="translated">按如下方式确定 <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 自变量：</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For a numeric value, if a composite formatting method with a non-null <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument is called, the runtime requests a <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> object from its <bpt id="p3">[</bpt>IFormatProvider.GetFormat<ept id="p3">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> method.</source>
          <target state="translated">对于数值，如果调用带非 null <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 自变量的复合格式设置方法，则运行时从其 <bpt id="p3">[</bpt>IFormatProvider.GetFormat<ept id="p3">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 方法请求 <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> 对象。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If it is unable to supply one, if the value of the argument is <ph id="ph1">`null`</ph>, or if the composite formatting method does not have an <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> parameter, the [NumberFormatInfo](xref:System.Globalization.NumberFormatInfo object for the current thread culture is used.</source>
          <target state="translated">在以下情况下，使用当前线程区域性的 [NumberFormatInfo](xref:System.Globalization.NumberFormatInfo 对象：无法提供该值、自变量值为 <ph id="ph1">`null`</ph> 或复合格式设置方法没有 <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 参数。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>For a date and time value, if a composite formatting method with a non-null <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument is called, the runtime requests a <bpt id="p2">[</bpt>DateTimeFormatInfo<ept id="p2">](xref:System.Globalization.DateTimeFormatInfo)</ept> object from its [IFormatProvider.GetFormat](xref:System.IFormatProvider._GetFormat(System.Type) method.</source>
          <target state="translated">对于日期和时间值，如果调用带非 null <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 自变量的复合格式设置方法，则运行时从其 [IFormatProvider.GetFormat](xref:System.IFormatProvider._GetFormat(System.Type) 方法请求 <bpt id="p2">[</bpt>DateTimeFormatInfo<ept id="p2">](xref:System.Globalization.DateTimeFormatInfo)</ept> 对象。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If it is unable to supply one, if the value of the argument is <ph id="ph1">`null`</ph>, or if the composite formatting method does not have an <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> parameter, the <bpt id="p2">[</bpt>DateTimeFormatInfo<ept id="p2">](xref:System.Globalization.DateTimeFormatInfo)</ept> object for the current thread culture is used.</source>
          <target state="translated">在以下情况下，使用当前线程区域性的 <bpt id="p2">[</bpt>DateTimeFormatInfo<ept id="p2">](xref:System.Globalization.DateTimeFormatInfo)</ept> 对象：无法提供该值、自变量值为 <ph id="ph1">`null`</ph> 或复合格式设置方法没有 <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 参数。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For objects of other types, if a composite formatting is called with an <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument, its value (including a <ph id="ph1">`null`</ph>, if no <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> object is supplied) is passed directly to the <bpt id="p3">[</bpt>IFormattable.ToString<ept id="p3">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> implementation.</source>
          <target state="translated">对于其他类型的对象，如果调用带 <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 自变量的复合格式设置，则将其值（如果没有提供 <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> 对象，则包括 <ph id="ph1">`null`</ph>）直接传递到 <bpt id="p3">[</bpt>IFormattable.ToString<ept id="p3">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> 实现。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Otherwise, a <bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> object that represents the current thread culture is passed to the <bpt id="p2">[</bpt>IFormattable.ToString<ept id="p2">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> implementation.</source>
          <target state="translated">否则，将表示当前线程区域性的 <bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> 对象传递到 <bpt id="p2">[</bpt>IFormattable.ToString<ept id="p2">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> 实现。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The type's parameterless <ph id="ph1">`ToString`</ph> method, which either overrides <bpt id="p1">[</bpt>Object.ToString()<ept id="p1">](xref:System.Object.ToString)</ept> or inherits the behavior of its base class, is called.</source>
          <target state="translated">调用类型的无参数的 <ph id="ph1">`ToString`</ph> 方法（该方法将重写 <bpt id="p1">[</bpt>Object.ToString()<ept id="p1">](xref:System.Object.ToString)</ept> 或继承其基类的行为）。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>In this case, the format string specified by the <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> component in the format item, if it is present, is ignored.</source>
          <target state="translated">在这种情况下，如果格式项中存在 <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> 组件指定的格式字符串，则将忽略该字符串。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Alignment is applied after the preceding steps have been performed.</source>
          <target state="translated">前面的步骤执行完毕之后应用对齐。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Code Examples</source>
          <target state="translated">代码示例</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The following example shows one string created using composite formatting and another created using an object's <ph id="ph1">`ToString`</ph> method.</source>
          <target state="translated">下面的示例显示使用复合格式设置创建的一个字符串和使用对象的 <ph id="ph1">`ToString`</ph> 方法创建的另一个字符串。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Both types of formatting produce equivalent results.</source>
          <target state="translated">两种格式设置类型产生相同的结果。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Assuming that the current day is a Thursday in May, the value of both strings in the preceding example is <ph id="ph1">`Thursday May`</ph> in the U.S. English culture.</source>
          <target state="translated">假定当前日期是五月的星期四，那么在美国英语区域性中上述示例中的两个字符串的值都是 <ph id="ph1">`Thursday May`</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept> exposes the same functionality as <bpt id="p2">[</bpt>String.Format<ept id="p2">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept> 公开与 <bpt id="p2">[</bpt>String.Format<ept id="p2">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> 相同的功能。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The only difference between the two methods is that <bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> returns its result as a string, while <bpt id="p2">[</bpt>Console.WriteLine<ept id="p2">](xref:System.Console.WriteLine)</ept> writes the result to the output stream associated with the <bpt id="p3">[</bpt>Console<ept id="p3">](xref:System.Console)</ept> object.</source>
          <target state="translated">这两个方法的唯一差异是 <bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> 将其结果作为字符串返回，而 <bpt id="p2">[</bpt>Console.WriteLine<ept id="p2">](xref:System.Console.WriteLine)</ept> 将结果写入与 <bpt id="p3">[</bpt>Console<ept id="p3">](xref:System.Console)</ept> 对象关联的输出流中。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept> method to format the value of <ph id="ph1">`MyInt`</ph> to a currency value.</source>
          <target state="translated">下面的示例使用 <bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept> 方法将 <ph id="ph1">`MyInt`</ph> 的值的格式设置为货币值。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The following example demonstrates formatting multiple objects, including formatting one object two different ways.</source>
          <target state="translated">下面的示例说明为多个对象设置格式，包括用两种不同的方式为一个对象设置格式。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the use of alignment in formatting.</source>
          <target state="translated">下面的示例演示了对齐在格式设置中的使用方式。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The arguments that are formatted are placed between vertical bar characters (|) to highlight the resulting alignment.</source>
          <target state="translated">设置了格式的自变量放置在竖线字符 (|) 之间以突出显示得到的对齐。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept></target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting types<ept id="p1">](formatting-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>格式设置类型<ept id="p1">](formatting-types.md)</ept></target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard date and time format strings<ept id="p1">](standard-datetime.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>标准日期和时间格式字符串<ept id="p1">](standard-datetime.md)</ept></target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom date and time format strings<ept id="p1">](custom-datetime.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>自定义日期和时间格式字符串<ept id="p1">](custom-datetime.md)</ept></target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Enumeration format strings<ept id="p1">](enumeration-format.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>枚举格式字符串<ept id="p1">](enumeration-format.md)</ept></target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard numeric format strings<ept id="p1">](standard-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>标准数字格式字符串<ept id="p1">](standard-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom numeric format strings<ept id="p1">](custom-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>自定义数字格式字符串<ept id="p1">](custom-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard TimeSpan format strings<ept id="p1">](standard-timespan.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>标准 TimeSpan 格式字符串<ept id="p1">](standard-timespan.md)</ept></target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom TimeSpan format strings<ept id="p1">](custom-timespan.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>自定义的 TimeSpan 格式字符串<ept id="p1">](custom-timespan.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>