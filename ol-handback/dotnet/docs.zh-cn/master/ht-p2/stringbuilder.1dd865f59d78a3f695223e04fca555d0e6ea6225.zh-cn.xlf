<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e8453b78827d8c02f29135ddfb832956ab40f3c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\stringbuilder.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f6877522a7496b27ba84fba00bbe002ae5273ea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d25c5c3056bd02863ba86bfb42f9daf68cac4c08</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using the StringBuilder class</source>
          <target state="translated">使用 StringBuilder 类</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Using the StringBuilder class</source>
          <target state="translated">使用 StringBuilder 类</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET、.NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Using the StringBuilder class</source>
          <target state="translated">使用 StringBuilder 类</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> object is immutable.</source>
          <target state="translated"><bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> 对象是不可变的。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Every time you use one of the methods in the <bpt id="p1">[</bpt>System.String<ept id="p1">](xref:System.String)</ept> class, you create a new string object in memory, which requires a new allocation of space for that new object.</source>
          <target state="translated">每次使用 <bpt id="p1">[</bpt>System.String<ept id="p1">](xref:System.String)</ept> 类中的一个方法时，都要在内存中创建一个新的字符串对象，这就需要为该新对象分配新的空间。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In situations where you need to perform repeated modifications to a string, the overhead associated with creating a new <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> object can be costly.</source>
          <target state="translated">在需要对字符串执行重复修改的情况下，与创建新 <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> 对象关联的开销可能非常大。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Text.StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class can be used when you want to modify a string without creating a new object.</source>
          <target state="translated">如果要修改字符串而不创建新的对象，则可以使用 <bpt id="p1">[</bpt>System.Text.StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 类。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, using the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class can boost performance when concatenating many strings together in a loop.</source>
          <target state="translated">例如，在一次循环中将许多字符串连接在一起时，使用 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 类可以提升性能。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Importing the System.Text Namespace</source>
          <target state="translated">导入 System.Text 命名空间</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class is found in the <bpt id="p2">[</bpt>System.Text<ept id="p2">](xref:System.Text)</ept> namespace.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 类位于 <bpt id="p2">[</bpt>System.Text<ept id="p2">](xref:System.Text)</ept> 命名空间。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To avoid having to provide a fully qualified type name in your code, you can import the <bpt id="p1">[</bpt>System.Text<ept id="p1">](xref:System.Text)</ept> namespace:</source>
          <target state="translated">为了避免必须在代码中提供完全限定的类型名称，可以导入 <bpt id="p1">[</bpt>System.Text<ept id="p1">](xref:System.Text)</ept> 命名空间：</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Instantiating a StringBuilder Object</source>
          <target state="translated">实例化 StringBuilder 对象</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can create a new instance of the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class by initializing your variable with one of the overloaded constructor methods, as illustrated in the following example.</source>
          <target state="translated">通过利用其中一个重载的构造函数方法初始化变量，可以创建 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 类的新实例，如以下示例所示。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Setting the Capacity and Length</source>
          <target state="translated">设置容量和长度</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Although the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> is a dynamic object that allows you to expand the number of characters in the string that it encapsulates, you can specify a value for the maximum number of characters that it can hold.</source>
          <target state="translated">虽然 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 是动态对象，允许增加其所封装字符串中的字符数，但也可以指定该对象可保留的最大字符数的值。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This value is called the capacity of the object and should not be confused with the length of the string that the current <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> holds.</source>
          <target state="translated">此值称为该对象的容量，切勿将它与当前 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 所保留的字符串长度相混淆。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, you might create a new instance of the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class with the string "Hello", which has a length of 5, and you might specify that the object has a maximum capacity of 25.</source>
          <target state="translated">例如，可以使用长度为 5 的字符串“Hello”创建 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 类的新实例，同时可以指定该对象的最大容量为 25。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When you modify the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>, it does not reallocate size for itself until the capacity is reached.</source>
          <target state="translated">修改 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 时，在达到容量之前，该对象不会为自己重新分配空间。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When this occurs, the new space is allocated automatically and the capacity is doubled.</source>
          <target state="translated">当达到容量时，将自动分配新的空间且容量翻倍。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can specify the capacity of the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class using one of the overloaded constructors.</source>
          <target state="translated">可以使用重载的构造函数之一来指定 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 类的容量。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following example specifies that the <ph id="ph1">`MyStringBuilder`</ph> object can be expanded to a maximum of 25 spaces.</source>
          <target state="translated">下面的示例指定可以将 <ph id="ph1">`MyStringBuilder`</ph> 对象增加到最多 25 个空间。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Additionally, you can use the read/write <bpt id="p1">[</bpt>Capacity<ept id="p1">](xref:System.Text.StringBuilder.Capacity)</ept> property to set the maximum length of your object.</source>
          <target state="translated">另外，可以使用读/写 <bpt id="p1">[</bpt>Capacity<ept id="p1">](xref:System.Text.StringBuilder.Capacity)</ept> 属性来设置对象的最大长度。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>Capacity<ept id="p1">](xref:System.Text.StringBuilder.Capacity)</ept> property to define the maximum object length.</source>
          <target state="translated">下面的示例使用 <bpt id="p1">[</bpt>Capacity<ept id="p1">](xref:System.Text.StringBuilder.Capacity)</ept> 属性来定义对象的最大长度。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>EnsureCapacity<ept id="p1">](xref:System.Text.StringBuilder.EnsureCapacity(System.Int32))</ept> method can be used to check the capacity of the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>EnsureCapacity<ept id="p1">](xref:System.Text.StringBuilder.EnsureCapacity(System.Int32))</ept> 方法可用来检查当前 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 的容量。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If the capacity is greater than the passed value, no change is made; however, if the capacity is smaller than the passed value, the current capacity is changed to match the passed value.</source>
          <target state="translated">如果容量大于传递的值，则不进行任何更改；但是，如果容量小于传递的值，则会更改当前的容量以使其与传递的值匹配。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> property can also be viewed or set.</source>
          <target state="translated">也可以查看或设置 <bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> 属性。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you set the <bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> property to a value that is greater than the <bpt id="p2">[</bpt>Capacity<ept id="p2">](xref:System.Text.StringBuilder.Capacity)</ept> property, the <bpt id="p3">[</bpt>Capacity<ept id="p3">](xref:System.Text.StringBuilder.Capacity)</ept> property is automatically changed to the same value as the <bpt id="p4">[</bpt>Length<ept id="p4">](xref:System.Text.StringBuilder.Length)</ept> property.</source>
          <target state="translated">如果将 <bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> 属性设置为大于 <bpt id="p2">[</bpt>Capacity<ept id="p2">](xref:System.Text.StringBuilder.Capacity)</ept> 属性的值，则自动将 <bpt id="p3">[</bpt>Capacity<ept id="p3">](xref:System.Text.StringBuilder.Capacity)</ept> 属性更改为与 <bpt id="p4">[</bpt>Length<ept id="p4">](xref:System.Text.StringBuilder.Length)</ept> 属性相同的值。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Setting the <bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> property to a value that is less than the length of the string within the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> shortens the string.</source>
          <target state="translated">如果将 <bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> 属性设置为小于当前 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 对象内的字符串长度的值，则会缩短该字符串。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Modifying the StringBuilder String</source>
          <target state="translated">修改 StringBuilder 字符串</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following table lists the methods you can use to modify the contents of a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">下表列出了可用于修改 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 内容的方法。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Method name</source>
          <target state="translated">方法名称</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">使用</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.Append<ept id="p1">](xref:System.Text.StringBuilder.Append(System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Append<ept id="p1">](xref:System.Text.StringBuilder.Append(System.Char))</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Appends information to the end of the current <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">将信息追加到当前 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 的末尾。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Replaces a format specifier passed in a string with formatted text.</source>
          <target state="translated">用带格式文本替换字符串中传递的格式说明符。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.Insert<ept id="p1">](xref:System.Text.StringBuilder.Insert(System.Int32,System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Insert<ept id="p1">](xref:System.Text.StringBuilder.Insert(System.Int32,System.Char))</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Inserts a string or object into the specified index of the current <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">将字符串或对象插入到当前 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 的指定索引中。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Removes a specified number of characters from the current <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">从当前 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 中删除指定数量的字符。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Replaces a specified character at a specified index.</source>
          <target state="translated">替换指定索引处的指定字符。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Append</source>
          <target state="translated">追加</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder.Append<ept id="p1">](xref:System.Text.StringBuilder.Append(System.Char))</ept> method can be used to add text or a string representation of an object to the end of a string represented by the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Append<ept id="p1">](xref:System.Text.StringBuilder.Append(System.Char))</ept> 方法可用来将文本或对象的字符串表示形式添加到由当前 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 表示的字符串的末尾。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following example initializes a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> to "Hello World" and then appends some text to the end of the object.</source>
          <target state="translated">下面的示例将 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 对象初始化为“Hello World”，然后将一些文本追加到该对象的末尾。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Space is allocated automatically as needed.</source>
          <target state="translated">将根据需要自动分配空间。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>AppendFormat</source>
          <target state="translated">AppendFormat</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept> method adds text to the end of the <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept> 方法将文本添加到 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 对象的末尾。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It supports the composite formatting feature (for more information, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](composite-format.md)</ept>) by calling the <bpt id="p2">[</bpt>IFormattable<ept id="p2">](xref:System.IFormattable)</ept> implementation of the object or objects to be formatted.</source>
          <target state="translated">该方法通过调用要设置格式的对象的 <bpt id="p2">[</bpt>IFormattable<ept id="p2">](xref:System.IFormattable)</ept> 实现来支持复合格式设置功能（有关详细信息，请参阅<bpt id="p1">[</bpt>复合格式设置<ept id="p1">](composite-format.md)</ept>）。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Therefore, it accepts the standard format strings for numeric, date and time, and enumeration values, the custom format strings for numeric and date and time values, and the format strings defined for custom types.</source>
          <target state="translated">因此，它接受数字、日期和时间以及枚举值的标准格式字符串、数字以及日期和时间值的自定义格式字符串，以及为自定义类型定义的格式字符串。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>(For information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](formatting-types.md)</ept>.) You can use this method to customize the format of variables and append those values to a <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">（有关格式化的信息，请参阅<bpt id="p1">[</bpt>格式设置类型<ept id="p1">](formatting-types.md)</ept>。）可以使用此方法来自定义变量的格式并将这些值追加到 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following example uses the AppendFormat method to place an integer value formatted as a currency value at the end of a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated">下面的示例使用 AppendFormat 方法将设置为货币值格式的整数值放到 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 对象的末尾。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Insert</source>
          <target state="translated">Insert</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder.Insert<ept id="p1">](xref:System.Text.StringBuilder.Insert(System.Int32,System.Char))</ept> method adds a string or object to a specified position in the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Insert<ept id="p1">](xref:System.Text.StringBuilder.Insert(System.Int32,System.Char))</ept> 方法将字符串或对象添加到当前 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 对象中的指定位置。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following example uses this method to insert a word into the sixth position of a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated">下面的示例使用此方法将单词插入到 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 对象的第六个位置。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Remove</source>
          <target state="translated">删除</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>StringBuilder.Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept> method to remove a specified number of characters from the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> object, beginning at a specified zero-based index.</source>
          <target state="translated">可以使用 <bpt id="p1">[</bpt>StringBuilder.Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept> 方法从当前 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 对象中删除指定数量的字符，删除过程从指定的从零开始的索引处开始。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept> method to shorten a <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated">下面的示例使用 <bpt id="p1">[</bpt>Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept> 方法缩短 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 对象。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Replace</source>
          <target state="translated">替换</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder.Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept> | Replaces a specified character at a specified index.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept> | 替换指定索引处的指定字符。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>method can be used to replace characters within the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object with another specified character.</source>
          <target state="translated">方法可用于将 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 对象内的字符替换为其他指定字符。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept> | Replaces a specified character at a specified index.</source>
          <target state="translated">以下示例使用 <bpt id="p1">[</bpt>Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept> | 替换指定索引处的指定字符。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>method to search a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object for all instances of the exclamation point character (!) and replace them with the question mark character (?).</source>
          <target state="translated">方法在 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 对象中搜索感叹号字符 (!) 的所有实例，并将其替换为问号字符 (?)。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Converting a StringBuilder Object to a String</source>
          <target state="translated">将 StringBuilder 对象转换为字符串</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You must convert the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object to a <bpt id="p2">[</bpt>String<ept id="p2">](xref:System.String)</ept> object before you can pass the string represented by the <bpt id="p3">[</bpt>StringBuilder<ept id="p3">](xref:System.Text.StringBuilder)</ept> object to a method that has a <bpt id="p4">[</bpt>String<ept id="p4">](xref:System.String)</ept> parameter or display it in the user interface.</source>
          <target state="translated">必须先将 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 对象转换为 <bpt id="p2">[</bpt>String<ept id="p2">](xref:System.String)</ept> 对象，然后才能将 <bpt id="p3">[</bpt>StringBuilder<ept id="p3">](xref:System.Text.StringBuilder)</ept> 对象表示的字符串传递给具有 <bpt id="p4">[</bpt>String<ept id="p4">](xref:System.String)</ept> 参数的方法，或在用户界面中显示它。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You do this conversion by calling the <bpt id="p1">[</bpt>StringBuilder.ToString<ept id="p1">](xref:System.Text.StringBuilder.ToString)</ept> method.</source>
          <target state="translated">通过调用 <bpt id="p1">[</bpt>StringBuilder.ToString<ept id="p1">](xref:System.Text.StringBuilder.ToString)</ept> 方法来执行此转换。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The following example calls a number of <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> methods and then calls the <bpt id="p2">[</bpt>StringBuilder.ToString<ept id="p2">](xref:System.Text.StringBuilder.ToString)</ept> method to display the string.</source>
          <target state="translated">下面的示例调用多种 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 方法，然后调用 <bpt id="p2">[</bpt>StringBuilder.ToString<ept id="p2">](xref:System.Text.StringBuilder.ToString)</ept> 方法来显示字符串。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Text.StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Text.StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic string operations<ept id="p1">](basic-string-operations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>基本字符串操作<ept id="p1">](basic-string-operations.md)</ept></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting types<ept id="p1">](formatting-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>格式设置类型<ept id="p1">](formatting-types.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>