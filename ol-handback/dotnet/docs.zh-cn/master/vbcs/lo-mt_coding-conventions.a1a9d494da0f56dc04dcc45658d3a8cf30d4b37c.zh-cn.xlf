<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5712f14d53b86552a0b82af38ecf579577ef3fa1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\program-structure\coding-conventions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be79e139dde0c8f78fddab32bfd5865e2810f39f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1fbb454b2fd9324655076dceac28fb8b2452449</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Visual Basic Coding Conventions | Microsoft Docs</source>
          <target state="translated">Visual Basic 编码约定 |Microsoft 文档</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Visual Basic Coding Conventions</source>
          <target state="translated">Visual Basic 编码约定</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Microsoft develops samples and documentation that follow the guidelines in this topic.</source>
          <target state="translated">Microsoft 开发示例和文档，请遵循本主题中的准则。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you follow the same coding conventions, you may gain the following benefits:</source>
          <target state="translated">如果您遵循相同的编码约定，您可能会获得以下好处︰</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Your code will have a consistent look, so that readers can better focus on content, not layout.</source>
          <target state="translated">您的代码将具有一致的外观，以确保读取器可以更好地专注于内容而非布局。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Readers understand your code more quickly because they can make assumptions based on previous experience.</source>
          <target state="translated">读者理解您的代码更加快速因为它们可能会使基于以前的经验的假设。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can copy, change, and maintain the code more easily.</source>
          <target state="translated">您可以复制、 更改，并更轻松地维护代码。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You help ensure that your code demonstrates "best practices" for Visual Basic.</source>
          <target state="translated">可帮助确保您的代码演示 Visual basic"的最佳做法"。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Naming Conventions</source>
          <target state="translated">命名约定</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For information about naming guidelines, see <bpt id="p1">[</bpt>Naming Guidelines<ept id="p1">](http://msdn.microsoft.com/library/fc076d66-9b5f-42d3-aa65-61d970c794a3)</ept> topic.</source>
          <target state="translated">有关命名准则的信息，请参阅<bpt id="p1">[</bpt>命名准则<ept id="p1">](http://msdn.microsoft.com/library/fc076d66-9b5f-42d3-aa65-61d970c794a3)</ept>主题。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Do not use "My" or "my" as part of a variable name.</source>
          <target state="translated">不使用"我的"我的"作为变量名称的一部分。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This practice creates confusion with the <ph id="ph1">`My`</ph> objects.</source>
          <target state="translated">这种做法会导致与混淆<ph id="ph1">`My`</ph>对象。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You do not have to change the names of objects in auto-generated code to make them fit the guidelines.</source>
          <target state="translated">无需更改的自动生成的代码以使它们适合这些准则中的对象的名称。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Layout Conventions</source>
          <target state="translated">布局约定</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Insert tabs as spaces, and use smart indenting with four-space indents.</source>
          <target state="translated">插入选项卡中的根据空格，并使用具有四个空间缩进量智能缩进。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">**</bpt>Pretty listing (reformatting) of code<ept id="p1">**</ept> to reformat your code in the code editor.</source>
          <target state="translated">使用<bpt id="p1">**</bpt>整齐排列 （重新格式化） 的代码<ept id="p1">**</ept>重新格式化您的代码在代码编辑器中。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Options, Text Editor, Basic (Visual Basic)<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/options-text-editor-basic-visual-basic)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>选项，文本编辑器中，基本 (Visual Basic 中)<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/options-text-editor-basic-visual-basic)</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Use only one statement per line.</source>
          <target state="translated">使用每行只有一条语句。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Don't use the Visual Basic line separator character (:).</source>
          <target state="translated">不要使用 Visual Basic 行分隔符 （:）。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Avoid using the explicit line continuation character "_" in favor of implicit line continuation wherever the language allows it.</source>
          <target state="translated">避免使用该语言允许它支持隐式行继续符显式行延续字符"_"。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Use only one declaration per line.</source>
          <target state="translated">使用每行只有一个声明。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">**</bpt>Pretty listing (reformatting) of code<ept id="p1">**</ept> doesn't format continuation lines automatically, manually indent continuation lines one tab stop.</source>
          <target state="translated">如果<bpt id="p1">**</bpt>整齐排列 （重新格式化） 的代码<ept id="p1">**</ept>不格式连续行自动、 手动缩进一个制表位的延续任务行。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>However, always left-align items in a list.</source>
          <target state="translated">但是，始终向左对齐列表中的项。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Add at least one blank line between method and property definitions.</source>
          <target state="translated">添加方法和属性定义之间的至少一个空白行。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Commenting Conventions</source>
          <target state="translated">注释约定</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Put comments on a separate line instead of at the end of a line of code.</source>
          <target state="translated">将注释放在单独的行而不是在代码行的末尾。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Start comment text with an uppercase letter, and end comment text with a period.</source>
          <target state="translated">开始注释文本以大写字母，并以句点结束注释文本。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Insert one space between the comment delimiter (') and the comment text.</source>
          <target state="translated">插入注释分隔符 （'） 与注释文本之间的一个空格。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#2<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;2;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Do not surround comments with formatted blocks of asterisks.</source>
          <target state="translated">请不要括起来格式化的星号块注释。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Program Structure</source>
          <target state="translated">程序结构</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When you use the <ph id="ph1">`Main`</ph> method, use the default construct for new console applications, and use <ph id="ph2">`My`</ph> for command-line arguments.</source>
          <target state="translated">当您使用<ph id="ph1">`Main`</ph>方法中，默认结构用于新的控制台应用程序，并使用<ph id="ph2">`My`</ph>对命令行参数。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#3<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;3;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Language Guidelines</source>
          <target state="translated">语言准则</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>String Data Type</source>
          <target state="translated">String 数据类型</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To concatenate strings, use an ampersand (&amp;).</source>
          <target state="translated">若要连接字符串，使用 and 符 （&amp;）。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#4<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;4;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To append strings in loops, use the &lt;xref:System.Text.StringBuilder&gt; object.</source>
          <target state="translated">若要追加在循环中的字符串，请使用&lt;xref:System.Text.StringBuilder&gt;对象。&lt;/xref:System.Text.StringBuilder&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#5<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;5;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Relaxed Delegates in Event Handlers</source>
          <target state="translated">宽松的委托事件处理程序中</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Do not explicitly qualify the arguments (Object and EventArgs) to event handlers.</source>
          <target state="translated">请勿显式限定 （对象和 EventArgs） 的参数与事件处理程序。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you are not using the event arguments that are passed to an event (for example, sender as Object, e as EventArgs), use relaxed delegates, and leave out the event arguments in your code:</source>
          <target state="translated">如果您未使用的事件参数传递给事件 （例如，发件人为对象，作为 EventArgs e），使用宽松的委托，并使出在代码中的事件参数︰</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#7<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;7;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Unsigned Data Type</source>
          <target state="translated">无符号数据类型</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`Integer`</ph> rather than unsigned types, except where they are necessary.</source>
          <target state="translated">使用<ph id="ph1">`Integer`</ph>而不是无符号类型，除非它们是所必需。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">数组</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Use the short syntax when you initialize arrays on the declaration line.</source>
          <target state="translated">在声明行上初始化数组时，请使用短语法。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>For example, use the following syntax.</source>
          <target state="translated">例如，使用以下语法。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#8<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;8;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Do not use the following syntax.</source>
          <target state="translated">不要使用下面的语法。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#9<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_7.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;9;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_7.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Put the array designator on the type, not on the variable.</source>
          <target state="translated">将数组指示符放在类型上，而不在该变量上。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For example, use the following syntax:</source>
          <target state="translated">例如，使用以下语法︰</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#11<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_8.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;11;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_8.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Do not use the following syntax:</source>
          <target state="translated">不要使用以下语法︰</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#10<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_9.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;10;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_9.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Use the { } syntax when you declare and initialize arrays of basic data types.</source>
          <target state="translated">在声明并初始化的基本数据类型的数组时，请使用 {} 语法。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For example, use the following syntax:</source>
          <target state="translated">例如，使用以下语法︰</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#12<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_10.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;12;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_10.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Do not use the following syntax:</source>
          <target state="translated">不要使用以下语法︰</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#13<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_11.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;13;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_11.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Use the With Keyword</source>
          <target state="translated">使用 With 关键字</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>When you make a series of calls to one object, consider using the <ph id="ph1">`With`</ph> keyword:</source>
          <target state="translated">当你进行一系列调用到一个对象时，请考虑使用<ph id="ph1">`With`</ph>关键字︰</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#15<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_12.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;15;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_12.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Use the Try...Catch and Using Statements when you use Exception Handling</source>
          <target state="translated">可以使用 Try...Catch 和 Using 语句时使用异常处理</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Do not use <ph id="ph1">`On Error Goto`</ph>.</source>
          <target state="translated">请不要使用<ph id="ph1">`On Error Goto`</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Use the IsNot Keyword</source>
          <target state="translated">使用 IsNot 关键字</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`IsNot`</ph> keyword instead of <ph id="ph2">`Not...Is Nothing`</ph>.</source>
          <target state="translated">使用<ph id="ph1">`IsNot`</ph>关键字而不是<ph id="ph2">`Not...Is Nothing`</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>New Keyword</source>
          <target state="translated">New 关键字</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Use short instantiation.</source>
          <target state="translated">使用短实例化。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, use the following syntax:</source>
          <target state="translated">例如，使用以下语法︰</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#21<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_13.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;21;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_13.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The preceding line is equivalent to this:</source>
          <target state="translated">前面的行是等效于此︰</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#22<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_14.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;22;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_14.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Use object initializers for new objects instead of the parameterless constructor:</source>
          <target state="translated">为新对象，而无参数构造函数不使用对象初始值设定项︰</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#23<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_15.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines 第&amp;23;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_15.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Event Handling</source>
          <target state="translated">事件处理</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`Handles`</ph> rather than <ph id="ph2">`AddHandler`</ph>:</source>
          <target state="translated">使用<ph id="ph1">`Handles`</ph>而不是<ph id="ph2">`AddHandler`</ph>:</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#24<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_16.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;24;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_16.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`AddressOf`</ph>, and do not instantiate the delegate explicitly:</source>
          <target state="translated">使用<ph id="ph1">`AddressOf`</ph>，并不显式实例委托︰</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#25<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_17.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;25;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_17.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>When you define an event, use the short syntax, and let the compiler define the delegate:</source>
          <target state="translated">在定义事件时，使用短语法，并让编译器定义委托︰</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#26<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_18.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;26;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_18.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Do not verify whether an event is <ph id="ph1">`Nothing`</ph> (null) before you call the <ph id="ph2">`RaiseEvent`</ph> method.</source>
          <target state="translated">不验证事件是否是<ph id="ph1">`Nothing`</ph>(null)，然后才能调用<ph id="ph2">`RaiseEvent`</ph>方法。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`RaiseEvent`</ph> checks for <ph id="ph2">`Nothing`</ph> before it raises the event.</source>
          <target state="translated"><ph id="ph1">`RaiseEvent`</ph>检查<ph id="ph2">`Nothing`</ph>引发事件之前。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Using Shared Members</source>
          <target state="translated">使用共享的成员</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`Shared`</ph> members by using the class name, not from an instance variable.</source>
          <target state="translated">调用<ph id="ph1">`Shared`</ph>通过类的名称，不能从实例变量的成员。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Use XML Literals</source>
          <target state="translated">使用 XML 文本</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>XML literals simplify the most common tasks that you encounter when you work with XML (for example, load, query, and transform).</source>
          <target state="translated">XML 文本简化您使用 XML （例如，加载、 查询和转换） 时遇到的最常见任务。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>When you develop with XML, follow these guidelines:</source>
          <target state="translated">当使用 XML 进行开发时，请遵循以下准则︰</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Use XML literals to create XML documents and fragments instead of calling XML APIs directly.</source>
          <target state="translated">使用 XML 文本来创建 XML 文档和片段而不是直接调用 XML Api。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Import XML namespaces at the file or project level to take advantage of the performance optimizations for XML literals.</source>
          <target state="translated">导入 XML 命名空间在文件或项目级别，以利用 XML 文本的性能优化。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Use the XML axis properties to access elements and attributes in an XML document.</source>
          <target state="translated">XML 轴属性用于访问 XML 文档中元素和属性。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Use embedded expressions to include values and to create XML from existing values instead of using API calls such as the <ph id="ph1">`Add`</ph> method:</source>
          <target state="translated">使用嵌入式的表达式包括值并根据现有值而不是使用 API 调用，如创建 XML<ph id="ph1">`Add`</ph>方法︰</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#27<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_19.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;27;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_19.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>LINQ Queries</source>
          <target state="translated">LINQ 查询</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Use meaningful names for query variables:</source>
          <target state="translated">对查询变量使用有意义的名称︰</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#28<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_20.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;28;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_20.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Provide names for elements in a query to make sure that property names of anonymous types are correctly capitalized using Pascal casing:</source>
          <target state="translated">若要确保匿名类型的属性名称正确大写使用 Pascal 查询中的元素为提供的名称的大小写︰</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#29<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_21.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;29;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_21.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Rename properties when the property names in the result would be ambiguous.</source>
          <target state="translated">如果结果中的属性名称模棱两可，请对属性重命名。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For example, if your query returns a customer name and an order ID, rename them instead of leaving them as <ph id="ph1">`Name`</ph> and <ph id="ph2">`ID`</ph> in the result:</source>
          <target state="translated">例如，如果您的查询返回客户名称和一个订单 ID，将其重命名而不是将它们保留为<ph id="ph1">`Name`</ph>和<ph id="ph2">`ID`</ph>结果中︰</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#30<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_22.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;30;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_22.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Use type inference in the declaration of query variables and range variables:</source>
          <target state="translated">在查询变量和范围变量的声明中使用类型推断︰</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#31<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_23.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;31;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_23.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Align query clauses under the <ph id="ph1">`From`</ph> statement:</source>
          <target state="translated">对齐下的查询子句<ph id="ph1">`From`</ph>语句︰</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#32<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_24.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;32;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_24.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`Where`</ph> clauses before other query clauses so that later query clauses operate on the filtered set of data:</source>
          <target state="translated">使用<ph id="ph1">`Where`</ph>子句之前其他查询子句，以便更高版本的查询子句作用于筛选的数据集︰</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#33<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_25.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines 第&amp;33;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_25.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`Join`</ph> clause to explicitly define a join operation instead of using the <ph id="ph2">`Where`</ph> clause to implicitly define a join operation:</source>
          <target state="translated">使用<ph id="ph1">`Join`</ph>子句显式定义联接操作，而不是使用<ph id="ph2">`Where`</ph>子句隐式定义联接操作︰</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines#34<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_26.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrGuidelines #&amp;34;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/coding-conventions_26.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Secure Coding Guidelines<ept id="p1">](http://msdn.microsoft.com/library/4f882d94-262b-4494-b0a6-ba9ba1f5f177)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>安全编码准则<ept id="p1">](http://msdn.microsoft.com/library/4f882d94-262b-4494-b0a6-ba9ba1f5f177)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>