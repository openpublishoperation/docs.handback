<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">00d5d0e83a88a0c7ac3ade92d09c584fce64fcd8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\statements\dim-statement.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a22ed6218a9fbae9b8b39d1afb10c4157d21b103</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf658227bdd83bd7c60daf6f59a08a864146c03b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Dim Statement (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Dim 语句 (Visual Basic 中) |Microsoft 文档</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Dim Statement (Visual Basic)</source>
          <target state="translated">Dim 语句 (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Declares and allocates storage space for one or more variables.</source>
          <target state="translated">声明，并为一个或多个变量分配存储空间。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">部件</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Attribute List<ept id="p1">](../../../visual-basic/language-reference/statements/attribute-list.md)</ept>.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>属性列表<ept id="p1">](../../../visual-basic/language-reference/statements/attribute-list.md)</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Can be one of the following:</source>
          <target state="translated">可以是以下各项之一：</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Public<ept id="p1">](../../../visual-basic/language-reference/modifiers/public.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Public<ept id="p1">](../../../visual-basic/language-reference/modifiers/public.md)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Protected<ept id="p1">](../../../visual-basic/language-reference/modifiers/protected.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Protected<ept id="p1">](../../../visual-basic/language-reference/modifiers/protected.md)</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Friend<ept id="p1">](../../../visual-basic/language-reference/modifiers/friend.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Friend<ept id="p1">](../../../visual-basic/language-reference/modifiers/friend.md)</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Private<ept id="p1">](../../../visual-basic/language-reference/modifiers/private.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Private<ept id="p1">](../../../visual-basic/language-reference/modifiers/private.md)</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Access Levels in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>访问 Visual Basic 中的级别<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Shared<ept id="p1">](../../../visual-basic/language-reference/modifiers/shared.md)</ept>.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>共享<ept id="p1">](../../../visual-basic/language-reference/modifiers/shared.md)</ept>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Shadows<ept id="p1">](../../../visual-basic/language-reference/modifiers/shadows.md)</ept>.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>阴影<ept id="p1">](../../../visual-basic/language-reference/modifiers/shadows.md)</ept>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Static<ept id="p1">](../../../visual-basic/language-reference/modifiers/static.md)</ept>.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>静态<ept id="p1">](../../../visual-basic/language-reference/modifiers/static.md)</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>ReadOnly<ept id="p1">](../../../visual-basic/language-reference/modifiers/readonly.md)</ept>.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>ReadOnly<ept id="p1">](../../../visual-basic/language-reference/modifiers/readonly.md)</ept>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Specifies that these are object variables that refer to instances of a class that can raise events.</source>
          <target state="translated">指定它们的对象变量的引用可以引发事件的类的实例。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>WithEvents<ept id="p1">](../../../visual-basic/language-reference/modifiers/withevents.md)</ept>.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>WithEvents<ept id="p1">](../../../visual-basic/language-reference/modifiers/withevents.md)</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>List of variables being declared in this statement.</source>
          <target state="translated">此语句中声明的变量的列表。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`variable`</ph> has the following syntax and parts:</source>
          <target state="translated">每个 <ph id="ph1">`variable`</ph> 都具有以下语法和部件：</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`variablename [ ( [ boundslist ] ) ] [ As [ New ] datatype [ With`</ph>{<ph id="ph2">`[ .propertyname = propinitializer [ , ... ] ] } ] ] [ = initializer ]`</ph></source>
          <target state="translated"><ph id="ph1">`variablename [ ( [ boundslist ] ) ] [ As [ New ] datatype [ With`</ph>{<ph id="ph2">`[ .propertyname = propinitializer [ , ... ] ] } ] ] [ = initializer ]`</ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Part</source>
          <target state="translated">部件</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Name of the variable.</source>
          <target state="translated">变量的名称。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Declared Element Names<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>声明的元素名称<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>List of bounds of each dimension of an array variable.</source>
          <target state="translated">列出每个维度的一个数组变量的界限。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the class when the <ph id="ph1">`Dim`</ph> statement runs.</source>
          <target state="translated">创建类的新实例时<ph id="ph1">`Dim`</ph>语句在运行时。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Data type of the variable.</source>
          <target state="translated">变量的数据类型。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Introduces the object initializer list.</source>
          <target state="translated">引入了对象初始值设定项列表。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The name of a property in the class you are making an instance of.</source>
          <target state="translated">在类中属性的名称将会创建的实例。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Required after <ph id="ph1">`propertyname`</ph> =.</source>
          <target state="translated">需要在之后<ph id="ph1">`propertyname`</ph>=。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The expression that is evaluated and assigned to the property name.</source>
          <target state="translated">表达式，计算并将其分配给属性名称。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Optional if <ph id="ph1">`New`</ph> is not specified.</source>
          <target state="translated">可选如果<ph id="ph1">`New`</ph>未指定。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Expression that is evaluated and assigned to the variable when it is created.</source>
          <target state="translated">计算并将其创建时分配给变量的表达式。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">备注</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The Visual Basic compiler uses the <ph id="ph1">`Dim`</ph> statement to determine the variable's data type and other information, such as what code can access the variable.</source>
          <target state="translated">Visual Basic 编译器使用<ph id="ph1">`Dim`</ph>语句来确定变量的数据类型和其他信息，例如哪些代码可以访问变量。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following example declares a variable to hold an <ph id="ph1">`Integer`</ph> value.</source>
          <target state="translated">下面的示例声明一个变量以保存<ph id="ph1">`Integer`</ph>值。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can specify any data type or the name of an enumeration, structure, class, or interface.</source>
          <target state="translated">您可以指定任何数据类型或枚举、 结构、 类或接口的名称。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For a reference type, you use the <ph id="ph1">`New`</ph> keyword to create a new instance of the class or structure that is specified by the data type.</source>
          <target state="translated">对于引用类型，您使用<ph id="ph1">`New`</ph>关键字来创建类的新实例或结构的指定数据类型。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`New`</ph>, you do not use an initializer expression.</source>
          <target state="translated">如果您使用<ph id="ph1">`New`</ph>，不使用初始值设定项表达式。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Instead, you supply arguments, if they are required, to the constructor of the class from which you are creating the variable.</source>
          <target state="translated">相反，如果它们是必需的要从其创建该变量的类的构造函数提供参数。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You can declare a variable in a procedure, block, class, structure, or module.</source>
          <target state="translated">您可以声明过程、 块、 类、 结构或模块中的变量。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You cannot declare a variable in a source file, namespace, or interface.</source>
          <target state="translated">不能声明源文件、 命名空间或接口中的变量。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Declaration Contexts and Default Access Levels<ept id="p1">](../../../visual-basic/language-reference/statements/declaration-contexts-and-default-access-levels.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>声明上下文和默认访问级别<ept id="p1">](../../../visual-basic/language-reference/statements/declaration-contexts-and-default-access-levels.md)</ept>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A variable that is declared at module level, outside any procedure, is a <bpt id="p1">*</bpt>member variable<ept id="p1">*</ept> or <bpt id="p2">*</bpt>field<ept id="p2">*</ept>.</source>
          <target state="translated">在模块级别，在任何过程外部声明的变量是<bpt id="p1">*</bpt>成员变量<ept id="p1">*</ept>或<bpt id="p2">*</bpt>字段<ept id="p2">*</ept>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Member variables are in scope throughout their class, structure, or module.</source>
          <target state="translated">成员变量是在其类、 结构或模块整个范围内。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A variable that is declared at procedure level is a <bpt id="p1">*</bpt>local variable<ept id="p1">*</ept>.</source>
          <target state="translated">在过程级别声明的变量是<bpt id="p1">*</bpt>局部变量<ept id="p1">*</ept>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Local variables are in scope only within their procedure or block.</source>
          <target state="translated">本地变量是仅在它们的过程或块的作用域中。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following access modifiers are used to declare variables outside a procedure: <ph id="ph1">`Public`</ph>, <ph id="ph2">`Protected`</ph>, <ph id="ph3">`Friend`</ph>, <ph id="ph4">`Protected Friend`</ph>, and <ph id="ph5">`Private`</ph>.</source>
          <target state="translated">下面的访问修饰符用于声明变量的过程之外︰ <ph id="ph1">`Public`</ph>， <ph id="ph2">`Protected`</ph>， <ph id="ph3">`Friend`</ph>， <ph id="ph4">`Protected Friend`</ph>，和<ph id="ph5">`Private`</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Access Levels in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Visual Basic 中的访问级别<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Dim`</ph> keyword is optional and usually omitted if you specify any of the following modifiers: <ph id="ph2">`Public`</ph>, <ph id="ph3">`Protected`</ph>, <ph id="ph4">`Friend`</ph>, <ph id="ph5">`Protected Friend`</ph>, <ph id="ph6">`Private`</ph>, <ph id="ph7">`Shared`</ph>, <ph id="ph8">`Shadows`</ph>, <ph id="ph9">`Static`</ph>, <ph id="ph10">`ReadOnly`</ph>, or <ph id="ph11">`WithEvents`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dim`</ph>关键字是可选的通常省略如果指定任何以下修饰符︰ <ph id="ph2">`Public`</ph>， <ph id="ph3">`Protected`</ph>， <ph id="ph4">`Friend`</ph>， <ph id="ph5">`Protected Friend`</ph>， <ph id="ph6">`Private`</ph>， <ph id="ph7">`Shared`</ph>， <ph id="ph8">`Shadows`</ph>， <ph id="ph9">`Static`</ph>， <ph id="ph10">`ReadOnly`</ph>，或<ph id="ph11">`WithEvents`</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Option Explicit`</ph> is on (the default), the compiler requires a declaration for every variable you use.</source>
          <target state="translated">如果<ph id="ph1">`Option Explicit`</ph>是 （默认设置），则编译器会为您使用每个变量要求声明。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Option Explicit Statement<ept id="p1">](../../../visual-basic/language-reference/statements/option-explicit-statement.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Option Explicit 语句<ept id="p1">](../../../visual-basic/language-reference/statements/option-explicit-statement.md)</ept>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Specifying an Initial Value</source>
          <target state="translated">指定一个初始值</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can assign a value to a variable when it is created.</source>
          <target state="translated">创建时，可以将一个值分配给一个变量。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For a value type, you use an <bpt id="p1">*</bpt>initializer<ept id="p1">*</ept> to supply an expression to be assigned to the variable.</source>
          <target state="translated">对于值类型，您使用<bpt id="p1">*</bpt>初始值设定项<ept id="p1">*</ept>来提供要分配给该变量的表达式。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The expression must evaluate to a constant that can be calculated at compile time.</source>
          <target state="translated">该表达式的计算结果必须为一个常量，它可以在编译时计算。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If an initializer is specified and a data type is not specified in an <ph id="ph1">`As`</ph> clause, <bpt id="p1">*</bpt>type inference<ept id="p1">*</ept> is used to infer the data type from the initializer.</source>
          <target state="translated">如果指定一个初始值设定项和数据类型中未指定<ph id="ph1">`As`</ph>子句，<bpt id="p1">*</bpt>类型推理<ept id="p1">*</ept>用于推断通过初始值设定项的数据类型。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>In the following example, both <ph id="ph1">`num1`</ph> and <ph id="ph2">`num2`</ph> are strongly typed as integers.</source>
          <target state="translated">在下面的示例中，同时<ph id="ph1">`num1`</ph>和<ph id="ph2">`num2`</ph>强类型化为整数。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>In the second declaration, type inference infers the type from the value 3.</source>
          <target state="translated">在第二个声明中，类型推断推断出类型 3 的值。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Type inference applies at the procedure level.</source>
          <target state="translated">类型推理适用于过程级。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>It does not apply outside a procedure in a class, structure, module, or interface.</source>
          <target state="translated">它不适用于在类、 结构、 模块或接口中的过程之外。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For more information about type inference, see <bpt id="p1">[</bpt>Option Infer Statement<ept id="p1">](../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept> and <bpt id="p2">[</bpt>Local Type Inference<ept id="p2">](../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept>.</source>
          <target state="translated">类型推理的详细信息，请参阅<bpt id="p1">[</bpt>Option Infer 语句<ept id="p1">](../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept>和<bpt id="p2">[</bpt>本地类型推理<ept id="p2">](../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For information about what happens when a data type or initializer is not specified, see <bpt id="p1">[</bpt>Default Data Types and Values<ept id="p1">](../../../visual-basic/language-reference/statements/dim-statement.md#default)</ept> later in this topic.</source>
          <target state="translated">如果未指定数据类型或初始值设定项，则会发生什么情况的信息，请参阅<bpt id="p1">[</bpt>默认数据类型和值<ept id="p1">](../../../visual-basic/language-reference/statements/dim-statement.md#default)</ept>本主题中更高版本。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You can use an <bpt id="p1">*</bpt>object initializer<ept id="p1">*</ept> to declare instances of named and anonymous types.</source>
          <target state="translated">您可以使用<bpt id="p1">*</bpt>对象初始值设定项<ept id="p1">*</ept>声明命名和匿名类型的实例。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The following code creates an instance of a <ph id="ph1">`Student`</ph> class and uses an object initializer to initialize properties.</source>
          <target state="translated">下面的代码创建的实例<ph id="ph1">`Student`</ph>类，并使用对象初始值设定项来初始化属性。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For more information about object initializers, see <bpt id="p1">[</bpt>How to: Declare an Object by Using an Object Initializer<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/how-to-declare-an-object-by-using-an-object-initializer.md)</ept>, <bpt id="p2">[</bpt>Object Initializers: Named and Anonymous Types<ept id="p2">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-initializers-named-and-anonymous-types.md)</ept>, and <bpt id="p3">[</bpt>Anonymous Types<ept id="p3">](../../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)</ept>.</source>
          <target state="translated">有关对象初始值设定项的详细信息，请参阅<bpt id="p1">[</bpt>如何︰ 使用对象初始值设定项声明对象<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/how-to-declare-an-object-by-using-an-object-initializer.md)</ept>，<bpt id="p2">[</bpt>对象初始值设定项︰ 命名类型和匿名类型<ept id="p2">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-initializers-named-and-anonymous-types.md)</ept>，和<bpt id="p3">[</bpt>匿名类型<ept id="p3">](../../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Declaring Multiple Variables</source>
          <target state="translated">声明多个变量</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can declare several variables in one declaration statement, specifying the variable name for each one, and following each array name with parentheses.</source>
          <target state="translated">您可以声明多个变量在一个声明语句中，使用括号指定变量的名称为每个，并在每个数组名。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Multiple variables are separated by commas.</source>
          <target state="translated">以逗号分隔多个变量。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If you declare more than one variable with one <ph id="ph1">`As`</ph> clause, you cannot supply an initializer for that group of variables.</source>
          <target state="translated">如果要声明多个变量与一个<ph id="ph1">`As`</ph>子句中，不能提供该组的变量的初始值设定项。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You can specify different data types for different variables by using a separate <ph id="ph1">`As`</ph> clause for each variable you declare.</source>
          <target state="translated">您可以指定不同的数据类型为不同的变量使用单独的<ph id="ph1">`As`</ph>子句为每个声明的变量。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Each variable takes the data type specified in the first <ph id="ph1">`As`</ph> clause encountered after its <ph id="ph2">`variablename`</ph> part.</source>
          <target state="translated">每个变量将在第一个指定的数据类型<ph id="ph1">`As`</ph>子句后遇到其<ph id="ph2">`variablename`</ph>部件。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">数组</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>You can declare a variable to hold an <bpt id="p1">*</bpt>array<ept id="p1">*</ept>, which can hold multiple values.</source>
          <target state="translated">您可以声明一个变量以保存<bpt id="p1">*</bpt>数组<ept id="p1">*</ept>，后者可以容纳多个值。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>To specify that a variable holds an array, follow its <ph id="ph1">`variablename`</ph> immediately with parentheses.</source>
          <target state="translated">若要指定的变量保留了一个数组，请按照其<ph id="ph1">`variablename`</ph>后面紧跟一对括号。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For more information about arrays, see <bpt id="p1">[</bpt>Arrays<ept id="p1">](../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept>.</source>
          <target state="translated">有关数组的详细信息，请参阅<bpt id="p1">[</bpt>数组<ept id="p1">](../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>You can specify the lower and upper bound of each dimension of an array.</source>
          <target state="translated">您可以指定的下限和上限，每个维度的数组。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To do this, include a <ph id="ph1">`boundslist`</ph> inside the parentheses.</source>
          <target state="translated">若要执行此操作，包括<ph id="ph1">`boundslist`</ph>在括号内。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For each dimension, the <ph id="ph1">`boundslist`</ph> specifies the upper bound and optionally the lower bound.</source>
          <target state="translated">为每个维度<ph id="ph1">`boundslist`</ph>指定上限和下限 （可选）。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The lower bound is always zero, whether you specify it or not.</source>
          <target state="translated">无论您指定下限值始终为零。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Each index can vary from zero through its upper bound value.</source>
          <target state="translated">每个索引可能会不同于通过其上界值为零。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The following two statements are equivalent.</source>
          <target state="translated">下面的两个语句是等效的。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Each statement declares an array of 21 <ph id="ph1">`Integer`</ph> elements.</source>
          <target state="translated">每个语句声明数组 21<ph id="ph1">`Integer`</ph>元素。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When you access the array, the index can vary from 0 through 20.</source>
          <target state="translated">当您访问该数组时，该索引可能会不同于 0 到 20。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The following statement declares a two-dimensional array of type <ph id="ph1">`Double`</ph>.</source>
          <target state="translated">下面的语句声明类型的二维数组<ph id="ph1">`Double`</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The array has 4 rows (3 + 1) of 6 columns (5 + 1) each.</source>
          <target state="translated">数组所具有 6 列 (5 + 1) 每个 4 的行 (3 + 1)。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Note that an upper bound represents the highest possible value for the index, not the length of the dimension.</source>
          <target state="translated">请注意，上限表示索引中，不维的长度的最大可能值。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The length of the dimension is the upper bound plus one.</source>
          <target state="translated">维度的长度为上界加一。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An array can have from 1 to 32 dimensions.</source>
          <target state="translated">数组可以包含 1 到 32 个维。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can leave all the bounds blank in an array declaration.</source>
          <target state="translated">您可以将所有的边界中的数组声明留空。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If you do this, the array has the number of dimensions you specify, but it is uninitialized.</source>
          <target state="translated">如果这样做，则数组包含您指定的维度数，但不会被初始化。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>It has a value of <ph id="ph1">`Nothing`</ph> until you initialize at least some of its elements.</source>
          <target state="translated">它具有值<ph id="ph1">`Nothing`</ph>至少初始化之前的某些元素。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Dim`</ph> statement must specify bounds either for all dimensions or for no dimensions.</source>
          <target state="translated"><ph id="ph1">`Dim`</ph>语句都必须指定边界的所有维度或任何维度。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>If the array has more than one dimension, you must include commas between the parentheses to indicate the number of dimensions.</source>
          <target state="translated">如果数组具有多个维度，必须包含以逗号分隔括号来表示的维度数。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>You can declare a <bpt id="p1">*</bpt>zero-length array<ept id="p1">*</ept> by declaring one of the array's dimensions to be -1.</source>
          <target state="translated">您可以声明<bpt id="p1">*</bpt>长度为零的数组<ept id="p1">*</ept>通过声明一个数组的维数为-1。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A variable that holds a zero-length array does not have the value <ph id="ph1">`Nothing`</ph>.</source>
          <target state="translated">保存一个零长度的数组的变量不具有值<ph id="ph1">`Nothing`</ph>。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Zero-length arrays are required by certain common language runtime functions.</source>
          <target state="translated">长度为零的数组所需的某些公共语言运行时函数。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If you try to access such an array, a runtime exception occurs.</source>
          <target state="translated">如果您尝试访问此类数组时，会发生运行时异常。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Arrays<ept id="p1">](../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>数组<ept id="p1">](../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>You can initialize the values of an array by using an array literal.</source>
          <target state="translated">可以通过使用数组文本初始化数组的值。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>To do this, surround the initialization values with braces (<ph id="ph1">`{}`</ph>).</source>
          <target state="translated">若要执行此操作，环绕具有大括号初始化值 (<ph id="ph1">`{}`</ph>)。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>For multidimensional arrays, the initialization for each separate dimension is enclosed in braces in the outer dimension.</source>
          <target state="translated">对于多维数组，初始化的每个单独的维度包含在外部维度中的括号中。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The elements are specified in row-major order.</source>
          <target state="translated">其元素被指定按行优先的顺序。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For more information about array literals, see <bpt id="p1">[</bpt>Arrays<ept id="p1">](../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept>.</source>
          <target state="translated">数组文本的详细信息，请参阅<bpt id="p1">[</bpt>数组<ept id="p1">](../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="default"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Default Data Types and Values</source>
          <target state="translated"><bpt id="p1">&lt;a name="default"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>默认数据类型和值</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The following table describes the results of various combinations of specifying the data type and initializer in a <ph id="ph1">`Dim`</ph> statement.</source>
          <target state="translated">下表描述了指定 <ph id="ph1">`Dim`</ph> 语句中数据类型和初始值设定项的各种组合的结果。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Data type specified?</source>
          <target state="translated">是否指定数据类型？</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Initializer specified?</source>
          <target state="translated">是否指定初始值设定项？</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">结果</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">否</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">[</bpt>Option Strict<ept id="p1">](../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept> is off (the default), the variable is set to <ph id="ph1">`Nothing`</ph>.</source>
          <target state="translated">如果<bpt id="p1">[</bpt>Option Strict<ept id="p1">](../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept>为 off （默认），则变量设置为<ph id="ph1">`Nothing`</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Option Strict`</ph> is on, a compile-time error occurs.</source>
          <target state="translated">如果 <ph id="ph1">`Option Strict`</ph> 处于打开状态，则发生编译时错误。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">否</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">是</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">[</bpt>Option Infer<ept id="p1">](../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept> is on (the default), the variable takes the data type of the initializer.</source>
          <target state="translated">如果<bpt id="p1">[</bpt>Option Infer<ept id="p1">](../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept>处于打开状态 （默认值），则变量采用数据类型的初始值设定项。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Local Type Inference<ept id="p1">](../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept>.</source>
          <target state="translated">请参阅<bpt id="p1">[</bpt>局部类型推理<ept id="p1">](../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Option Infer`</ph> is off and <ph id="ph2">`Option Strict`</ph> is off, the variable takes the data type of <ph id="ph3">`Object`</ph>.</source>
          <target state="translated">如果 <ph id="ph1">`Option Infer`</ph> 和 <ph id="ph2">`Option Strict`</ph> 均处于关闭状态，则变量采用 <ph id="ph3">`Object`</ph> 的数据类型。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Option Infer`</ph> is off and <ph id="ph2">`Option Strict`</ph> is on, a compile-time error occurs.</source>
          <target state="translated">如果 <ph id="ph1">`Option Infer`</ph> 处于关闭状态但 <ph id="ph2">`Option Strict`</ph> 处于打开状态，则发生编译时错误。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">是</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">否</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The variable is initialized to the default value for the data type.</source>
          <target state="translated">将变量初始化为数据类型的默认值。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>See the table later in this section.</source>
          <target state="translated">请参阅本节后面的表。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">是</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">是</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>If the data type of the initializer is not convertible to the specified data type, a compile-time error occurs.</source>
          <target state="translated">如果初始值设定项的数据类型不可转换为指定数据类型，则会发生编译时错误。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>If you specify a data type but do not specify an initializer, <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> initializes the variable to the default value for its data type.</source>
          <target state="translated">如果你指定的数据类型，但不是指定初始值设定项，<ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>将变量初始化为其数据类型的默认值。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The following table shows the default initialization values.</source>
          <target state="translated">下表显示的默认初始化值。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Data type</source>
          <target state="translated">数据类型</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Default value</source>
          <target state="translated">默认值</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>All numeric types (including <ph id="ph1">`Byte`</ph> and <ph id="ph2">`SByte`</ph>)</source>
          <target state="translated">所有数值类型 (包括<ph id="ph1">`Byte`</ph>和<ph id="ph2">`SByte`</ph>)</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Binary 0</source>
          <target state="translated">二进制 0</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>All reference types (including <ph id="ph1">`Object`</ph>, <ph id="ph2">`String`</ph>, and all arrays)</source>
          <target state="translated">所有引用类型 (包括<ph id="ph1">`Object`</ph>， <ph id="ph2">`String`</ph>，和所有数组)</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>12:00 AM of January 1 of the year 1 (01/01/0001 12:00:00 AM)</source>
          <target state="translated">1 年 1 月 1 日的上午 12:00 (01/01/0001 12:00:00 AM)</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Each element of a structure is initialized as if it were a separate variable.</source>
          <target state="translated">像它是一个单独的变量初始化结构的每个元素。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>If you declare the length of an array but do not initialize its elements, each element is initialized as if it were a separate variable.</source>
          <target state="translated">如果您声明数组的长度，但不是初始化它的元素，每个元素将初始化像它是一个单独的变量。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Static Local Variable Lifetime</source>
          <target state="translated">静态局部变量生存期</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Static`</ph> local variable has a longer lifetime than that of the procedure in which it is declared.</source>
          <target state="translated">一个<ph id="ph1">`Static`</ph>局部变量具有较长的生存期比在其中声明该过程。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The boundaries of the variable's lifetime depend on where the procedure is declared and whether it is <ph id="ph1">`Shared`</ph>.</source>
          <target state="translated">变量的生存期边界取决于声明该过程，以及是否有<ph id="ph1">`Shared`</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Procedure declaration</source>
          <target state="translated">过程声明</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Variable initialized</source>
          <target state="translated">初始化变量</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Variable stops existing</source>
          <target state="translated">变量停止存在</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>In a module</source>
          <target state="translated">在模块中</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The first time the procedure is called</source>
          <target state="translated">第一次调用该过程</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>When your program stops execution</source>
          <target state="translated">当您的程序停止执行</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>In a class or structure, procedure is <ph id="ph1">`Shared`</ph></source>
          <target state="translated">在类或结构中，过程都是<ph id="ph1">`Shared`</ph></target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The first time the procedure is called either on a specific instance or on the class or structure itself</source>
          <target state="translated">第一次调用该过程的特定实例或对类或结构本身</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>When your program stops execution</source>
          <target state="translated">当您的程序停止执行</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>In a class or structure, procedure isn't <ph id="ph1">`Shared`</ph></source>
          <target state="translated">在类或结构中，过程不是<ph id="ph1">`Shared`</ph></target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The first time the procedure is called on a specific instance</source>
          <target state="translated">第一次特定实例调用该过程</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>When the instance is released for garbage collection (GC)</source>
          <target state="translated">当垃圾回收 (GC) 释放该实例</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Attributes and Modifiers</source>
          <target state="translated">特性和修饰符</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>You can apply attributes only to member variables, not to local variables.</source>
          <target state="translated">可以将特性应用于成员变量，不适用于本地变量。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>An attribute contributes information to the assembly's metadata, which is not meaningful for temporary storage such as local variables.</source>
          <target state="translated">特性提供信息对程序集的元数据，这并没有意义的临时存储 （如本地变量）。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>At module level, you cannot use the <ph id="ph1">`Static`</ph> modifier to declare member variables.</source>
          <target state="translated">在模块级别，不能使用<ph id="ph1">`Static`</ph>修饰符可以声明成员变量。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>At procedure level, you cannot use <ph id="ph1">`Shared`</ph>, <ph id="ph2">`Shadows`</ph>, <ph id="ph3">`ReadOnly`</ph>, <ph id="ph4">`WithEvents`</ph>, or any access modifiers to declare local variables.</source>
          <target state="translated">在过程级别，不能使用<ph id="ph1">`Shared`</ph>， <ph id="ph2">`Shadows`</ph>， <ph id="ph3">`ReadOnly`</ph>， <ph id="ph4">`WithEvents`</ph>，或任何访问修饰符来声明本地变量。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>You can specify what code can access a variable by supplying an <ph id="ph1">`accessmodifier`</ph>.</source>
          <target state="translated">您可以指定哪些代码可以访问的变量通过提供<ph id="ph1">`accessmodifier`</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Class and module member variables (outside any procedure) default to private access, and structure member variables default to public access.</source>
          <target state="translated">类和模块成员变量 （任何过程之外） 默认为私有访问，而结构成员变量默认为公共访问权限。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>You can adjust their access levels with the access modifiers.</source>
          <target state="translated">您可以调整它们的访问级别使用的访问修饰符。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>You cannot use access modifiers on local variables (inside a procedure).</source>
          <target state="translated">不能使用访问修饰符 （过程） 中的本地变量上。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>You can specify <ph id="ph1">`WithEvents`</ph> only on member variables, not on local variables inside a procedure.</source>
          <target state="translated">您可以指定<ph id="ph1">`WithEvents`</ph>仅对成员变量上，而不在过程内的局部变量。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>If you specify <ph id="ph1">`WithEvents`</ph>, the data type of the variable must be a specific class type, not <ph id="ph2">`Object`</ph>.</source>
          <target state="translated">如果指定<ph id="ph1">`WithEvents`</ph>，该变量的数据类型必须是特定的类类型，不<ph id="ph2">`Object`</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>You cannot declare an array with <ph id="ph1">`WithEvents`</ph>.</source>
          <target state="translated">不能声明与数组<ph id="ph1">`WithEvents`</ph>。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>For more information about events, see <bpt id="p1">[</bpt>Events<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/index.md)</ept>.</source>
          <target state="translated">有关事件的详细信息，请参阅<bpt id="p1">[</bpt>事件<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/index.md)</ept>。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Code outside a class, structure, or module must qualify a member variable's name with the name of that class, structure, or module.</source>
          <target state="translated">代码类之外，结构或模块必须限定成员变量的名称替换该类、 结构或模块的名称。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Code outside a procedure or block cannot refer to any local variables within that procedure or block.</source>
          <target state="translated">过程或块不能引用该过程或块内的任何局部变量之外的代码。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Releasing Managed Resources</source>
          <target state="translated">释放托管的资源</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The .NET Framework garbage collector disposes of managed resources without any extra coding on your part.</source>
          <target state="translated">.NET Framework 垃圾回收器释放托管资源而无需您采取任何额外的编码。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>However, you can force the disposal of a managed resource instead of waiting for the garbage collector.</source>
          <target state="translated">但是，您可以强制将托管资源而不是等待垃圾回收器处置。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>If a class holds onto a particularly valuable and scarce resource (such as a database connection or file handle), you might not want to wait until the next garbage collection to clean up a class instance that's no longer in use.</source>
          <target state="translated">如果一个类占用特别是有价值和稀缺资源 （例如数据库连接或文件句柄），可能不希望等到下一步的垃圾回收，来清理不再使用的类实例。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>A class may implement the &lt;xref:System.IDisposable&gt; interface to provide a way to release resources before a garbage collection.</source>
          <target state="translated">类可以实现&lt;xref:System.IDisposable&gt;接口，以提供一种方法来释放垃圾回收之前的资源。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>A class that implements that interface exposes a <ph id="ph1">`Dispose`</ph> method that can be called to force valuable resources to be released immediately.</source>
          <target state="translated">实现该接口的类公开<ph id="ph1">`Dispose`</ph>可以调用来强制立即释放重要资源的方法。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Using`</ph> statement automates the process of acquiring a resource, executing a set of statements, and then disposing of the resource.</source>
          <target state="translated"><ph id="ph1">`Using`</ph>语句可自动执行获取资源，执行一组语句，然后释放的资源的过程。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>However, the resource must implement the &lt;xref:System.IDisposable&gt; interface.</source>
          <target state="translated">但是，该资源必须实现&lt;xref:System.IDisposable&gt;接口。&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using Statement<ept id="p1">](../../../visual-basic/language-reference/statements/using-statement.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Using 语句<ept id="p1">](../../../visual-basic/language-reference/statements/using-statement.md)</ept>。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The following example declares variables by using the <ph id="ph1">`Dim`</ph> statement with various options.</source>
          <target state="translated">下面的示例通过声明变量<ph id="ph1">`Dim`</ph>带有不同选项的语句。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#141<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/dim-statement_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;141;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/dim-statement_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The following example lists the prime numbers between 1 and 30.</source>
          <target state="translated">以下示例列出 1 到 30 之间的素数。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The scope of local variables is described in code comments.</source>
          <target state="translated">本地变量的作用域是在代码注释中所述。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#142<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/dim-statement_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;142;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/dim-statement_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>In the following example, the <ph id="ph1">`speedValue`</ph> variable is declared at the class level.</source>
          <target state="translated">在下面的示例中，<ph id="ph1">`speedValue`</ph>在类级别声明变量。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Private`</ph> keyword is used to declare the variable.</source>
          <target state="translated"><ph id="ph1">`Private`</ph>关键字用于声明变量。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The variable can be accessed by any procedure in the <ph id="ph1">`Car`</ph> class.</source>
          <target state="translated">中的任何过程可以访问此变量<ph id="ph1">`Car`</ph>类。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#144<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/dim-statement_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;144;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/dim-statement_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#145<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/dim-statement_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;145;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/dim-statement_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Const Statement<ept id="p1">](../../../visual-basic/language-reference/statements/const-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Const 语句<ept id="p1">](../../../visual-basic/language-reference/statements/const-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ReDim Statement<ept id="p1">](../../../visual-basic/language-reference/statements/redim-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>ReDim 语句<ept id="p1">](../../../visual-basic/language-reference/statements/redim-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Option Explicit Statement<ept id="p1">](../../../visual-basic/language-reference/statements/option-explicit-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Option Explicit 语句<ept id="p1">](../../../visual-basic/language-reference/statements/option-explicit-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Option Infer Statement<ept id="p1">](../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Option Infer 语句<ept id="p1">](../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Option Strict Statement<ept id="p1">](../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Option Strict 语句<ept id="p1">](../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Compile Page, Project Designer (Visual Basic)<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/compile-page-project-designer-visual-basic)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>“项目设计器”-&gt;“编译”页 (Visual Basic)<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/compile-page-project-designer-visual-basic)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Variable Declaration<ept id="p1">](../../../visual-basic/programming-guide/language-features/variables/variable-declaration.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>变量声明<ept id="p1">](../../../visual-basic/programming-guide/language-features/variables/variable-declaration.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Arrays<ept id="p1">](../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>数组<ept id="p1">](../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Object Initializers: Named and Anonymous Types<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-initializers-named-and-anonymous-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>对象初始值设定项︰ 命名类型和匿名类型<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-initializers-named-and-anonymous-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Anonymous Types<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>匿名类型<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Object Initializers: Named and Anonymous Types<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-initializers-named-and-anonymous-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>对象初始值设定项︰ 命名类型和匿名类型<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-initializers-named-and-anonymous-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Declare an Object by Using an Object Initializer<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/how-to-declare-an-object-by-using-an-object-initializer.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>如何︰ 使用对象初始值设定项声明对象<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/how-to-declare-an-object-by-using-an-object-initializer.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Local Type Inference<ept id="p1">](../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>局部类型推理<ept id="p1">](../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>