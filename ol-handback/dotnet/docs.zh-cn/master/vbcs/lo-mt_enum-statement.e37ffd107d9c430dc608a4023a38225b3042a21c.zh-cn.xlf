<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9d3377300d30fd045c041367a528766fa9a8ed9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\statements\enum-statement.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b09c73c74bc0db1ba8bbd1042818a1466dc971f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d78a4ee823d61f61738552b0928e99d74c4d9afd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enum Statement (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Enum 语句 (Visual Basic 中) |Microsoft 文档</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Enum Statement (Visual Basic)</source>
          <target state="translated">Enum 语句 (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Declares an enumeration and defines the values of its members.</source>
          <target state="translated">声明枚举并定义其成员的值。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">部件</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>List of attributes that apply to this enumeration.</source>
          <target state="translated">应用于此枚举的属性列表。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You must enclose the <bpt id="p1">[</bpt>attribute list<ept id="p1">](../../../visual-basic/language-reference/statements/attribute-list.md)</ept> in angle brackets ("<ph id="ph1">`&lt;`</ph>" and "<ph id="ph2">`&gt;`</ph>").</source>
          <target state="translated">必须将括<bpt id="p1">[</bpt>属性列表<ept id="p1">](../../../visual-basic/language-reference/statements/attribute-list.md)</ept>在尖括号 ("<ph id="ph1">`&lt;`</ph>"和"<ph id="ph2">`&gt;`</ph>")。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.FlagsAttribute&gt; attribute indicates that the value of an instance of the enumeration can include multiple enumeration members, and that each member represents a bit field in the enumeration value.</source>
          <target state="translated">&lt;xref:System.FlagsAttribute&gt;属性指示的值的枚举的实例可以包含多个枚举成员，并且每个成员表示中的枚举值的位域。&lt;/xref:System.FlagsAttribute&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Specifies what code can access this enumeration.</source>
          <target state="translated">指定哪些代码可以访问此枚举。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Can be one of the following:</source>
          <target state="translated">可以是以下各项之一：</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Public<ept id="p1">](../../../visual-basic/language-reference/modifiers/public.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Public<ept id="p1">](../../../visual-basic/language-reference/modifiers/public.md)</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Protected<ept id="p1">](../../../visual-basic/language-reference/modifiers/protected.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Protected<ept id="p1">](../../../visual-basic/language-reference/modifiers/protected.md)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Friend<ept id="p1">](../../../visual-basic/language-reference/modifiers/friend.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Friend<ept id="p1">](../../../visual-basic/language-reference/modifiers/friend.md)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Private<ept id="p1">](../../../visual-basic/language-reference/modifiers/private.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Private<ept id="p1">](../../../visual-basic/language-reference/modifiers/private.md)</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can specify <ph id="ph1">`Protected``Friend`</ph> to allow access from code within the enumeration's class, a derived class, or the same assembly.</source>
          <target state="translated">您可以指定<ph id="ph1">`Protected``Friend`</ph>以允许从枚举的类，派生的类中或同一程序集中的代码中进行访问。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Specifies that this enumeration redeclares and hides an identically named programming element, or set of overloaded elements, in a base class.</source>
          <target state="translated">指定此枚举重新声明，并隐藏一个同名的编程元素或一组重载元素，在基类中。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can specify <bpt id="p1">[</bpt>Shadows<ept id="p1">](../../../visual-basic/language-reference/modifiers/shadows.md)</ept> only on the enumeration itself, not on any of its members.</source>
          <target state="translated">您可以指定<bpt id="p1">[</bpt>阴影<ept id="p1">](../../../visual-basic/language-reference/modifiers/shadows.md)</ept>仅限于在枚举本身，不在它的任何成员。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Name of the enumeration.</source>
          <target state="translated">枚举的名称。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For information on valid names, see <bpt id="p1">[</bpt>Declared Element Names<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.</source>
          <target state="translated">有关有效的名称的信息，请参阅<bpt id="p1">[</bpt>声明元素名称<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Data type of the enumeration and all its members.</source>
          <target state="translated">枚举及其所有成员的数据类型。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>List of member constants being declared in this statement.</source>
          <target state="translated">此语句中声明的成员常量的列表。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Multiple members appear on individual source code lines.</source>
          <target state="translated">在单个源代码行上显示多个成员。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`member`</ph> has the following syntax and parts: <ph id="ph2">`[&lt;attribute list&gt;] member name [ = initializer ]`</ph></source>
          <target state="translated">每个<ph id="ph1">`member`</ph>具有以下语法和部分︰<ph id="ph2">`[&lt;attribute list&gt;] member name [ = initializer ]`</ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Part</source>
          <target state="translated">部件</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Name of this member.</source>
          <target state="translated">此成员的名称。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Expression that is evaluated at compile time and assigned to this member.</source>
          <target state="translated">在编译时计算并将其分配给此成员的表达式。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`End`</ph> <ph id="ph2">`Enum`</ph></source>
          <target state="translated"><ph id="ph1">`End`</ph> <ph id="ph2">`Enum`</ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Terminates the <ph id="ph1">`Enum`</ph> block.</source>
          <target state="translated">终止 <ph id="ph1">`Enum`</ph> 块。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">备注</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If you have a set of unchanging values that are logically related to each other, you can define them together in an enumeration.</source>
          <target state="translated">如果您有一组在逻辑上彼此相关的不变值，您可以在枚举中一起定义它们。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This provides meaningful names for the enumeration and its members, which are easier to remember than their values.</source>
          <target state="translated">这提供了为枚举和它们的值比更容易记住其成员有意义的名称。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can then use the enumeration members in many places in your code.</source>
          <target state="translated">然后可以在代码中，在多个位置中使用的枚举成员。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The benefits of using enumerations include the following:</source>
          <target state="translated">使用枚举的好处包括︰</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Reduces errors caused by transposing or mistyping numbers.</source>
          <target state="translated">这样可以减少错误引起的转置或键入数字。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Makes it easy to change values in the future.</source>
          <target state="translated">便于在以后更改值。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Makes code easier to read, which means it is less likely that errors will be introduced.</source>
          <target state="translated">使代码易于阅读，这意味着它不太可能会引入错误。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Ensures forward compatibility.</source>
          <target state="translated">确保向前兼容性。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If you use enumerations, your code is less likely to fail if in the future someone changes the values corresponding to the member names.</source>
          <target state="translated">如果您使用枚举，您的代码就很难，如果有人在将来更改的成员名称所对应的值失败。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An enumeration has a name, an underlying data type, and a set of members.</source>
          <target state="translated">枚举具有名称、 基础的数据类型和一组的成员。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Each member represents a constant.</source>
          <target state="translated">每个成员表示一个常量。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An enumeration declared at class, structure, module, or interface level, outside any procedure, is a <bpt id="p1">*</bpt>member enumeration<ept id="p1">*</ept>.</source>
          <target state="translated">枚举在类、 结构、 模块或接口级别，任何过程之外，声明是<bpt id="p1">*</bpt>成员枚举<ept id="p1">*</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>It is a member of the class, structure, module, or interface that declares it.</source>
          <target state="translated">它是类、 结构、 模块或接口声明它的成员。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Member enumerations can be accessed from anywhere within their class, structure, module, or interface.</source>
          <target state="translated">成员枚举可以是从任何位置访问其类、 结构、 模块或接口。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Code outside a class, structure, or module must qualify a member enumeration's name with the name of that class, structure, or module.</source>
          <target state="translated">代码类之外，结构或模块必须限定成员枚举的名称替换该类、 结构或模块的名称。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You can avoid the need to use fully qualified names by adding an <bpt id="p1">[</bpt>Imports<ept id="p1">](../../../visual-basic/language-reference/statements/imports-statement-net-namespace-and-type.md)</ept> statement to the source file.</source>
          <target state="translated">您可以避免需要通过添加使用完全限定的名<bpt id="p1">[</bpt>导入<ept id="p1">](../../../visual-basic/language-reference/statements/imports-statement-net-namespace-and-type.md)</ept>到源代码文件的语句。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An enumeration declared at namespace level, outside any class, structure, module, or interface, is a member of the namespace in which it appears.</source>
          <target state="translated">枚举声明的命名空间级别之外任何类、 结构、 模块或接口，是它在其中出现的命名空间的成员。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>declaration context<ept id="p1">*</ept> for an enumeration must be a source file, namespace, class, structure, module, or interface, and cannot be a procedure.</source>
          <target state="translated"><bpt id="p1">*</bpt>声明上下文<ept id="p1">*</ept>供枚举必须源文件、 命名空间、 类、 结构、 模块或接口，并且不能为一个过程。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Declaration Contexts and Default Access Levels<ept id="p1">](../../../visual-basic/language-reference/statements/declaration-contexts-and-default-access-levels.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>声明上下文和默认访问级别<ept id="p1">](../../../visual-basic/language-reference/statements/declaration-contexts-and-default-access-levels.md)</ept>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can apply attributes to an enumeration as a whole, but not to its members individually.</source>
          <target state="translated">您可以将特性应用到枚举作为一个整体，但不是属于其成员分别。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An attribute contributes information to the assembly's metadata.</source>
          <target state="translated">属性提供对该程序集的元数据的信息。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Data Type</source>
          <target state="translated">数据类型</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Enum`</ph> statement can declare the data type of an enumeration.</source>
          <target state="translated"><ph id="ph1">`Enum`</ph>语句可以声明一个枚举的数据类型。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Each member takes the enumeration's data type.</source>
          <target state="translated">每个成员采用枚举的数据类型。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You can specify <ph id="ph1">`Byte`</ph>, <ph id="ph2">`Integer`</ph>, <ph id="ph3">`Long`</ph>, <ph id="ph4">`SByte`</ph>, <ph id="ph5">`Short`</ph>, <ph id="ph6">`UInteger`</ph>, <ph id="ph7">`ULong`</ph>, or <ph id="ph8">`UShort`</ph>.</source>
          <target state="translated">You can specify <ph id="ph1">`Byte`</ph>, <ph id="ph2">`Integer`</ph>, <ph id="ph3">`Long`</ph>, <ph id="ph4">`SByte`</ph>, <ph id="ph5">`Short`</ph>, <ph id="ph6">`UInteger`</ph>, <ph id="ph7">`ULong`</ph>, or <ph id="ph8">`UShort`</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If you do not specify <ph id="ph1">`datatype`</ph> for the enumeration, each member takes the data type of its <ph id="ph2">`initializer`</ph>.</source>
          <target state="translated">如果未指定<ph id="ph1">`datatype`</ph>枚举时，对于每个成员进行的数据类型及其<ph id="ph2">`initializer`</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If you specify both <ph id="ph1">`datatype`</ph> and <ph id="ph2">`initializer`</ph>, the data type of <ph id="ph3">`initializer`</ph> must be convertible to <ph id="ph4">`datatype`</ph>.</source>
          <target state="translated">如果同时指定了<ph id="ph1">`datatype`</ph>和<ph id="ph2">`initializer`</ph>的数据类型<ph id="ph3">`initializer`</ph>必须可转换为<ph id="ph4">`datatype`</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If neither <ph id="ph1">`datatype`</ph> nor <ph id="ph2">`initializer`</ph> is present, the data type defaults to <ph id="ph3">`Integer`</ph>.</source>
          <target state="translated">如果既没有<ph id="ph1">`datatype`</ph>，也不<ph id="ph2">`initializer`</ph>不存在，则数据类型为默认<ph id="ph3">`Integer`</ph>。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Initializing Members</source>
          <target state="translated">初始化成员</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Enum`</ph> statement can initialize the contents of selected members in <ph id="ph2">`memberlist`</ph>.</source>
          <target state="translated"><ph id="ph1">`Enum`</ph>语句可以初始化中的选定成员的内容<ph id="ph2">`memberlist`</ph>。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You use <ph id="ph1">`initializer`</ph> to supply an expression to be assigned to the member.</source>
          <target state="translated">您使用<ph id="ph1">`initializer`</ph>来提供要分配给该成员的表达式。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If you do not specify <ph id="ph1">`initializer`</ph> for a member, Visual Basic initializes it either to zero (if it is the first <ph id="ph2">`member`</ph> in <ph id="ph3">`memberlist`</ph>), or to a value greater by one than that of the immediately preceding <ph id="ph4">`member`</ph>.</source>
          <target state="translated">如果未指定<ph id="ph1">`initializer`</ph>对于成员，Visual Basic 对其进行初始化为零 (如果它是第一个<ph id="ph2">`member`</ph>中<ph id="ph3">`memberlist`</ph>)，或为大&amp;1; 相比，紧靠前的值<ph id="ph4">`member`</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The expression supplied in each <ph id="ph1">`initializer`</ph> can be any combination of literals, other constants that are already defined, and enumeration members that are already defined, including a previous member of this enumeration.</source>
          <target state="translated">在每个提供的表达式<ph id="ph1">`initializer`</ph>可以是文本、 已定义，其他常量和已定义，包括以前此枚举的成员的枚举成员的任意组合。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>You can use arithmetic and logical operators to combine such elements.</source>
          <target state="translated">您可以使用算术和逻辑运算符来组合这些元素。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>You cannot use variables or functions in <ph id="ph1">`initializer`</ph>.</source>
          <target state="translated">不能使用变量或函数中的<ph id="ph1">`initializer`</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>However, you can use conversion keywords such as <ph id="ph1">`CByte`</ph> and <ph id="ph2">`CShort`</ph>.</source>
          <target state="translated">但是，可以使用转换关键字如<ph id="ph1">`CByte`</ph>和<ph id="ph2">`CShort`</ph>。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You can also use <ph id="ph1">`AscW`</ph> if you call it with a constant <ph id="ph2">`String`</ph> or <ph id="ph3">`Char`</ph> argument, since that can be evaluated at compile time.</source>
          <target state="translated">您还可以使用<ph id="ph1">`AscW`</ph>如果用一个常量调用<ph id="ph2">`String`</ph>或<ph id="ph3">`Char`</ph>参数，因为在编译时可计算。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Enumerations cannot have floating-point values.</source>
          <target state="translated">枚举不能具有浮点值。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If a member is assigned a floating-point value and <ph id="ph1">`Option Strict`</ph> is set to on, a compiler error occurs.</source>
          <target state="translated">如果一名成员分配一个浮点值和<ph id="ph1">`Option Strict`</ph>被设置为 on，会发生编译错误。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Option Strict`</ph> is off, the value is automatically converted to the <ph id="ph2">`Enum`</ph> type.</source>
          <target state="translated">如果<ph id="ph1">`Option Strict`</ph>处于关闭状态，则这会自动转换为<ph id="ph2">`Enum`</ph>类型。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If the value of a member exceeds the allowable range for the underlying data type, or if you initialize any member to the maximum value allowed by the underlying data type, the compiler reports an error.</source>
          <target state="translated">如果某个成员的值超出了允许的范围为基础的数据类型，或如果初始化到基础数据类型允许的最大值的任何成员，则编译器会报告错误。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">修饰符</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Class, structure, module, and interface member enumerations default to public access.</source>
          <target state="translated">类、 结构、 模块和接口成员的枚举默认值为公共访问。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You can adjust their access levels with the access modifiers.</source>
          <target state="translated">您可以调整它们的访问级别使用的访问修饰符。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Namespace member enumerations default to friend access.</source>
          <target state="translated">Namespace 成员枚举默认为友元访问权限。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>You can adjust their access levels to public, but not to private or protected.</source>
          <target state="translated">您可以调整它们公共的但无法访问私有或受保护的访问级别。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Access Levels in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>Visual Basic 中的访问级别<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>All enumeration members have public access, and you cannot use any access modifiers on them.</source>
          <target state="translated">所有枚举成员都具有公共访问权限，并且不能对其使用任何访问修饰符。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>However, if the enumeration itself has a more restricted access level, the specified enumeration access level takes precedence.</source>
          <target state="translated">但是，如果枚举本身具有更受限制的访问级别，指定的枚举访问级别优先。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>By default, all enumerations are types and their fields are constants.</source>
          <target state="translated">默认情况下，所有枚举都是类型，其字段都是常量。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Therefore the <ph id="ph1">`Shared`</ph>, <ph id="ph2">`Static`</ph>, and <ph id="ph3">`ReadOnly`</ph> keywords cannot be used when declaring an enumeration or its members.</source>
          <target state="translated">因此<ph id="ph1">`Shared`</ph>， <ph id="ph2">`Static`</ph>，和<ph id="ph3">`ReadOnly`</ph>声明枚举或它的成员时，不能使用关键字。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Assigning Multiple Values</source>
          <target state="translated">分配多个值</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Enumerations typically represent mutually exclusive values.</source>
          <target state="translated">枚举通常表示互斥的值。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>By including the &lt;xref:System.FlagsAttribute&gt; attribute in the <ph id="ph1">`Enum`</ph> declaration, you can instead assign multiple values to an instance of the enumeration.</source>
          <target state="translated">通过包括&lt;xref:System.FlagsAttribute&gt;属性中<ph id="ph1">`Enum`</ph>声明中，您可以改为分配多个值的枚举的实例。&lt;/xref:System.FlagsAttribute&gt;</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.FlagsAttribute&gt; attribute specifies that the enumeration be treated as a bit field, that is, a set of flags.</source>
          <target state="translated">&lt;xref:System.FlagsAttribute&gt;属性指定枚举视为位字段，即一组标志。&lt;/xref:System.FlagsAttribute&gt;</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>These are called <bpt id="p1">*</bpt>bitwise<ept id="p1">*</ept> enumerations.</source>
          <target state="translated">这些应用程序称为<bpt id="p1">*</bpt>位<ept id="p1">*</ept>枚举。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>When you declare an enumeration by using the &lt;xref:System.FlagsAttribute&gt; attribute, we recommend that you use powers of 2, that is, 1, 2, 4, 8, 16, and so on, for the values.</source>
          <target state="translated">当使用声明枚举&lt;xref:System.FlagsAttribute&gt;属性中，我们建议您使用的 2，这是、 1、 2、 4、 8、 16 和等等，幂的值。&lt;/xref:System.FlagsAttribute&gt;</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>We also recommend that "None" be the name of a member whose value is 0.</source>
          <target state="translated">我们还建议"None"是其值为 0 的成员的名称。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For additional guidelines, see &lt;xref:System.FlagsAttribute&gt; and &lt;xref:System.Enum&gt;.</source>
          <target state="translated">有关其他指南，请参阅&lt;xref:System.FlagsAttribute&gt;和&lt;xref:System.Enum&gt;。&lt;/xref:System.Enum&gt; &lt;/xref:System.FlagsAttribute&gt;</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the <ph id="ph1">`Enum`</ph> statement.</source>
          <target state="translated">下面的示例演示如何使用<ph id="ph1">`Enum`</ph>语句。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Note that the member is referred to as <ph id="ph1">`EggSizeEnum.Medium`</ph>, and not as <ph id="ph2">`Medium`</ph>.</source>
          <target state="translated">请注意，该成员被称为<ph id="ph1">`EggSizeEnum.Medium`</ph>，而不是作为<ph id="ph2">`Medium`</ph>。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#41<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask #&amp;41;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The method in the following example is outside the <ph id="ph1">`Egg`</ph> class.</source>
          <target state="translated">下面的示例中的方法之外，则<ph id="ph1">`Egg`</ph>类。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Therefore, <ph id="ph1">`EggSizeEnum`</ph> is fully qualified as <ph id="ph2">`Egg.EggSizeEnum`</ph>.</source>
          <target state="translated">因此，<ph id="ph1">`EggSizeEnum`</ph>是作为完全限定的<ph id="ph2">`Egg.EggSizeEnum`</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#42<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask #&amp;42;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`Enum`</ph> statement to define a related set of named constant values.</source>
          <target state="translated">下面的示例使用<ph id="ph1">`Enum`</ph>语句来定义一组相关的命名的常量值。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>In this case, the values are colors you might choose to design data entry forms for a database.</source>
          <target state="translated">在这种情况下，值是您可能选择用来设计数据库的数据输入窗体颜色。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#30<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask #&amp;30;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The following example shows values that include both positive and negative numbers.</source>
          <target state="translated">下面的示例演示包括正和负号的值。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#31<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask #&amp;31;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>In the following example, an <ph id="ph1">`As`</ph> clause is used to specify the <ph id="ph2">`datatype`</ph> of an enumeration.</source>
          <target state="translated">在下面的示例中，<ph id="ph1">`As`</ph>子句用于指定<ph id="ph2">`datatype`</ph>的枚举。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#6<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask #&amp;6;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The following example shows how to use a bitwise enumeration.</source>
          <target state="translated">下面的示例演示如何使用按位枚举。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Multiple values can be assigned to an instance of a bitwise enumeration.</source>
          <target state="translated">多个值可以分配给一个按位枚举的一个实例。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Enum`</ph> declaration includes the &lt;xref:System.FlagsAttribute&gt; attribute, which indicates that the enumeration can be treated as a set of flags.</source>
          <target state="translated"><ph id="ph1">`Enum`</ph>声明包含&lt;xref:System.FlagsAttribute&gt;属性，指示可以将枚举视为一组标志。&lt;/xref:System.FlagsAttribute&gt;</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#61<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask #&amp;61;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The following example iterates through an enumeration.</source>
          <target state="translated">下面的示例循环访问枚举。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>It uses the &lt;xref:System.Enum.GetNames%2A&gt; method to retrieve an array of member names from the enumeration, and &lt;xref:System.Enum.GetValues%2A&gt; to retrieve an array of member values.</source>
          <target state="translated">它使用&lt;xref:System.Enum.GetNames%2A&gt;方法来检索的枚举成员名称的数组和&lt;xref:System.Enum.GetValues%2A&gt;检索成员值的数组。&lt;/xref:System.Enum.GetValues%2A&gt; &lt;/xref:System.Enum.GetNames%2A&gt;</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#51<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_7.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask #&amp;51;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/enum-statement_7.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Enum&gt;</source>
          <target state="translated">&lt;xref:System.Enum&gt;&lt;/xref:System.Enum&gt;</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>&lt;xref:Microsoft.VisualBasic.Strings.AscW%2A&gt;</source>
          <target state="translated">&lt;xref:Microsoft.VisualBasic.Strings.AscW%2A&gt;&lt;/xref:Microsoft.VisualBasic.Strings.AscW%2A&gt;</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Const Statement<ept id="p1">](../../../visual-basic/language-reference/statements/const-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Const 语句<ept id="p1">](../../../visual-basic/language-reference/statements/const-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Dim Statement<ept id="p1">](../../../visual-basic/language-reference/statements/dim-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Dim 语句<ept id="p1">](../../../visual-basic/language-reference/statements/dim-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Implicit and Explicit Conversions<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>隐式和显式转换<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Type Conversion Functions<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>类型转换函数<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Constants and Enumerations<ept id="p1">](../../../visual-basic/language-reference/constants-and-enumerations.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>常量和枚举<ept id="p1">](../../../visual-basic/language-reference/constants-and-enumerations.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>