<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0ea8074f996622df3cd88a7e87fc1156b63dcaf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\statements\event-statement.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">890c4a11d0d5c7ce7c59ed1f614e33af033ca9b1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8a932bcddff6cbae050f9a00a55beec2c748871</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Event Statement | Microsoft Docs</source>
          <target state="translated">Event 语句 |Microsoft 文档</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Event Statement</source>
          <target state="translated">Event 语句</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Declares a user-defined event.</source>
          <target state="translated">声明用户定义的事件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">部件</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Part</source>
          <target state="translated">部件</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">说明</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>List of attributes that apply to this event.</source>
          <target state="translated">应用于此事件的特性列表。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Multiple attributes are separated by commas.</source>
          <target state="translated">用逗号分隔多个属性。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You must enclose the <bpt id="p1">[</bpt>Attribute List<ept id="p1">](../../../visual-basic/language-reference/statements/attribute-list.md)</ept> in angle brackets ("<ph id="ph1">`&lt;`</ph>" and "<ph id="ph2">`&gt;`</ph>").</source>
          <target state="translated">必须将括<bpt id="p1">[</bpt>属性列表<ept id="p1">](../../../visual-basic/language-reference/statements/attribute-list.md)</ept>在尖括号 ("<ph id="ph1">`&lt;`</ph>"和"<ph id="ph2">`&gt;`</ph>")。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Specifies what code can access the event.</source>
          <target state="translated">指定哪些代码可以访问事件。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Can be one of the following:</source>
          <target state="translated">可以是以下各项之一：</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> -   </ph><bpt id="p1">[</bpt>Public<ept id="p1">](../../../visual-basic/language-reference/modifiers/public.md)</ept>—any code that can access the element that declares it can access it.</source>
          <target state="translated"><ph id="ph1"> -   </ph><bpt id="p1">[</bpt>公共<ept id="p1">](../../../visual-basic/language-reference/modifiers/public.md)</ept>— 任何代码都可以访问声明它的元素可以访问它。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><bpt id="p1">[</bpt>Protected<ept id="p1">](../../../visual-basic/language-reference/modifiers/protected.md)</ept>—only code within its class or a derived class can access it.</source>
          <target state="translated"><ph id="ph1">-   </ph><bpt id="p1">[</bpt>受保护的<ept id="p1">](../../../visual-basic/language-reference/modifiers/protected.md)</ept>— 只有它的类或派生的类中的代码可以访问它。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><bpt id="p1">[</bpt>Friend<ept id="p1">](../../../visual-basic/language-reference/modifiers/friend.md)</ept>—only code in the same assembly can access it.</source>
          <target state="translated"><ph id="ph1">-   </ph><bpt id="p1">[</bpt>友元<ept id="p1">](../../../visual-basic/language-reference/modifiers/friend.md)</ept>— 只有同一个程序集中的代码可以访问它。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><bpt id="p1">[</bpt>Private<ept id="p1">](../../../visual-basic/language-reference/modifiers/private.md)</ept>—only code in the element that declares it can access it.</source>
          <target state="translated"><ph id="ph1">-   </ph><bpt id="p1">[</bpt>专用<ept id="p1">](../../../visual-basic/language-reference/modifiers/private.md)</ept>— 仅在声明它的元素中的代码可以访问它。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can specify <ph id="ph1">`Protected Friend`</ph> to enable access from code in the event's class, a derived class, or the same assembly.</source>
          <target state="translated">可以指定 <ph id="ph1">`Protected Friend`</ph> 以便可以从事件的类、派生类或相同程序集中的代码进行访问。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Specifies that this event is not associated with a specific instance of a class or structure.</source>
          <target state="translated">指定此事件不与类或结构的特定实例关联。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Indicates that this event redeclares and hides an identically named programming element, or set of overloaded elements, in a base class.</source>
          <target state="translated">指示此事件重新声明并隐藏基类中具有相同名称的编程元素（或重载元素集）。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can shadow any kind of declared element with any other kind.</source>
          <target state="translated">可以与任何其他类型一起隐藏任何类型的已声明元素。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A shadowed element is unavailable from within the derived class that shadows it, except from where the shadowing element is inaccessible.</source>
          <target state="translated">隐藏的元素不可在隐藏它的派生类中使用（除了从隐藏元素不可访问的位置）。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, if a <ph id="ph1">`Private`</ph> element shadows a base-class element, code that does not have permission to access the <ph id="ph2">`Private`</ph> element accesses the base-class element instead.</source>
          <target state="translated">例如，如果 <ph id="ph1">`Private`</ph> 元素隐藏一个基类元素，则无权访问 <ph id="ph2">`Private`</ph> 元素的代码会改为访问该基类元素。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Name of the event; follows standard variable naming conventions.</source>
          <target state="translated">事件的名称；遵循标准变量命名约定。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>List of local variables that represent the parameters of this event.</source>
          <target state="translated">表示此事件的参数的本地变量列表。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You must enclose the <bpt id="p1">[</bpt>Parameter List<ept id="p1">](../../../visual-basic/language-reference/statements/parameter-list.md)</ept> in parentheses.</source>
          <target state="translated">必须将括<bpt id="p1">[</bpt>参数列表<ept id="p1">](../../../visual-basic/language-reference/statements/parameter-list.md)</ept>在括号中。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Indicates that this event implements an event of an interface.</source>
          <target state="translated">指示此事件实现接口的事件。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Required if <ph id="ph1">`Implements`</ph> is supplied.</source>
          <target state="translated">如果提供 <ph id="ph1">`Implements`</ph>，则是必需的。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>List of <ph id="ph1">`Sub`</ph> procedures being implemented.</source>
          <target state="translated">所实现的 <ph id="ph1">`Sub`</ph> 过程的列表。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Multiple procedures are separated by commas:</source>
          <target state="translated">用逗号分隔多个过程：</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>implementedprocedure<ept id="p1">*</ept> [ , <bpt id="p2">*</bpt>implementedprocedure<ept id="p2">*</ept> ... ]</source>
          <target state="translated"><bpt id="p1">*</bpt>implementedprocedure<ept id="p1">*</ept> [， <bpt id="p2">*</bpt>implementedprocedure<ept id="p2">*</ept> ...]</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`implementedprocedure`</ph> has the following syntax and parts:</source>
          <target state="translated">每个 <ph id="ph1">`implementedprocedure`</ph> 都具有以下语法和部件：</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`interface`</ph>.<ph id="ph2">`definedname`</ph></source>
          <target state="translated"><ph id="ph1">`interface`</ph>.<ph id="ph2">`definedname`</ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> -   </ph><ph id="ph2">`interface`</ph> - Required.</source>
          <target state="translated"><ph id="ph1"> -   </ph><ph id="ph2">`interface`</ph>-必需。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Name of an interface that this procedure's containing class or structure is implementing.</source>
          <target state="translated">此过程的包含类或结构所实现的接口的名称。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">-   </ph><ph id="ph2">`Definedname`</ph> - Required.</source>
          <target state="translated"><ph id="ph1">-   </ph><ph id="ph2">`Definedname`</ph>-必需。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Name by which the procedure is defined in <ph id="ph1">`interface`</ph>.</source>
          <target state="translated">在 <ph id="ph1">`interface`</ph> 中用于定义过程的名称。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>This does not have to be the same as <ph id="ph1">`name`</ph>, the name that this procedure is using to implement the defined procedure.</source>
          <target state="translated">这不必与 <ph id="ph1">`name`</ph>（此过程用于实现定义的过程的名称）相同。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Events declared as <ph id="ph1">`Custom`</ph> must define custom <ph id="ph2">`AddHandler`</ph>, <ph id="ph3">`RemoveHandler`</ph>, and <ph id="ph4">`RaiseEvent`</ph> accessors.</source>
          <target state="translated">声明为 <ph id="ph1">`Custom`</ph> 的事件必须定义自定义 <ph id="ph2">`AddHandler`</ph>、<ph id="ph3">`RemoveHandler`</ph> 和 <ph id="ph4">`RaiseEvent`</ph> 访问器。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The name of a delegate that specifies the event-handler signature.</source>
          <target state="translated">指定事件处理程序签名的委托的名称。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Declares an <ph id="ph1">`AddHandler`</ph> accessor, which specifies the statements to execute when an event handler is added, either explicitly by using the <ph id="ph2">`AddHandler`</ph> statement or implicitly by using the <ph id="ph3">`Handles`</ph> clause.</source>
          <target state="translated">声明 <ph id="ph1">`AddHandler`</ph> 访问器，它指定要在添加事件处理程序（显式使用 <ph id="ph2">`AddHandler`</ph> 语句或隐式使用 <ph id="ph3">`Handles`</ph> 子句）时执行的语句。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Terminates the <ph id="ph1">`AddHandler`</ph> block.</source>
          <target state="translated">终止 <ph id="ph1">`AddHandler`</ph> 块。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Parameter name.</source>
          <target state="translated">参数名。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Declares a <ph id="ph1">`RemoveHandler`</ph> accessor, which specifies the statements to execute when an event handler is removed using the <ph id="ph2">`RemoveHandler`</ph> statement.</source>
          <target state="translated">声明 <ph id="ph1">`RemoveHandler`</ph> 访问器，它指定要在使用 <ph id="ph2">`RemoveHandler`</ph> 语句移除事件处理程序时执行的语句。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Terminates the <ph id="ph1">`RemoveHandler`</ph> block.</source>
          <target state="translated">终止 <ph id="ph1">`RemoveHandler`</ph> 块。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Declares a <ph id="ph1">`RaiseEvent`</ph> accessor, which specifies the statements to execute when the event is raised using the <ph id="ph2">`RaiseEvent`</ph> statement.</source>
          <target state="translated">声明 <ph id="ph1">`RaiseEvent`</ph> 访问器，它指定要在使用 <ph id="ph2">`RaiseEvent`</ph> 语句引发事件时执行的语句。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Typically, this invokes a list of delegates maintained by the <ph id="ph1">`AddHandler`</ph> and <ph id="ph2">`RemoveHandler`</ph> accessors.</source>
          <target state="translated">通常这会调用由 <ph id="ph1">`AddHandler`</ph> 和 <ph id="ph2">`RemoveHandler`</ph> 访问器维护的委托的列表。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Terminates the <ph id="ph1">`RaiseEvent`</ph> block.</source>
          <target state="translated">终止 <ph id="ph1">`RaiseEvent`</ph> 块。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>List of parameters that matches the parameters required by the <ph id="ph1">`delegatename`</ph> delegate.</source>
          <target state="translated">与 <ph id="ph1">`delegatename`</ph> 委托需要的参数匹配的参数列表。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You must enclose the <bpt id="p1">[</bpt>Parameter List<ept id="p1">](../../../visual-basic/language-reference/statements/parameter-list.md)</ept> in parentheses.</source>
          <target state="translated">必须将括<bpt id="p1">[</bpt>参数列表<ept id="p1">](../../../visual-basic/language-reference/statements/parameter-list.md)</ept>在括号中。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Statements that contain the bodies of the <ph id="ph1">`AddHandler`</ph>, <ph id="ph2">`RemoveHandler`</ph>, and <ph id="ph3">`RaiseEvent`</ph> methods.</source>
          <target state="translated">包含 <ph id="ph1">`AddHandler`</ph>、<ph id="ph2">`RemoveHandler`</ph> 和 <ph id="ph3">`RaiseEvent`</ph> 方法体的语句。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Terminates the <ph id="ph1">`Event`</ph> block.</source>
          <target state="translated">终止 <ph id="ph1">`Event`</ph> 块。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">备注</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Once the event has been declared, use the <ph id="ph1">`RaiseEvent`</ph> statement to raise the event.</source>
          <target state="translated">一旦声明了事件，便可使用 <ph id="ph1">`RaiseEvent`</ph> 语句引发事件。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A typical event might be declared and raised as shown in the following fragments:</source>
          <target state="translated">可以按以下片段所示声明和引发典型事件：</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents#13<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/event-statement_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents #&amp;13;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/event-statement_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>You can declare event arguments just as you do arguments of procedures, with the following exceptions: events cannot have named arguments, <ph id="ph1">`ParamArray`</ph> arguments, or <ph id="ph2">`Optional`</ph> arguments.</source>
          <target state="translated">可以正如处理过程的参数一样来声明事件参数，不过有以下例外：事件不能具有命名参数、<ph id="ph1">`ParamArray`</ph> 参数或 <ph id="ph2">`Optional`</ph> 参数。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Events do not have return values.</source>
          <target state="translated">事件没有返回值。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>To handle an event, you must associate it with an event handler subroutine using either the <ph id="ph1">`Handles`</ph> or <ph id="ph2">`AddHandler`</ph> statement.</source>
          <target state="translated">若要处理事件，必须使用 <ph id="ph1">`Handles`</ph> 或 <ph id="ph2">`AddHandler`</ph> 语句将它与事件处理程序子例程关联。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The signatures of the subroutine and the event must match.</source>
          <target state="translated">子例程和事件的签名必须匹配。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>To handle a shared event, you must use the <ph id="ph1">`AddHandler`</ph> statement.</source>
          <target state="translated">若要处理共享事件，必须使用 <ph id="ph1">`AddHandler`</ph> 语句。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>You can use <ph id="ph1">`Event`</ph> only at module level.</source>
          <target state="translated">只能在模块级别使用 <ph id="ph1">`Event`</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This means the <bpt id="p1">*</bpt>declaration context<ept id="p1">*</ept> for an event must be a class, structure, module, or interface, and cannot be a source file, namespace, procedure, or block.</source>
          <target state="translated">这意味着<bpt id="p1">*</bpt>声明上下文<ept id="p1">*</ept>事件必须是类、 结构、 模块或接口，并且不能为源文件、 命名空间、 过程或块。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Declaration Contexts and Default Access Levels<ept id="p1">](../../../visual-basic/language-reference/statements/declaration-contexts-and-default-access-levels.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>声明上下文和默认访问级别<ept id="p1">](../../../visual-basic/language-reference/statements/declaration-contexts-and-default-access-levels.md)</ept>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>In most circumstances, you can use the first syntax in the Syntax section of this topic for declaring events.</source>
          <target state="translated">在大多数情况下，可以使用本主题的“语法”部分中的第一个语法来声明事件。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>However, some scenarios require that you have more control over the detailed behavior of the event.</source>
          <target state="translated">但是，某些情况要求更好地控制事件的详细行为。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The last syntax in the Syntax section of this topic, which uses the <ph id="ph1">`Custom`</ph> keyword, provides that control by enabling you to define custom events.</source>
          <target state="translated">使用本主题“语法”部分中的最后一个语法（该语法使用 <ph id="ph1">`Custom`</ph> 关键字）可通过使你可以定义自定义事件来提供这种控制。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>In a custom event, you specify exactly what occurs when code adds or removes an event handler to or from the event, or when code raises the event.</source>
          <target state="translated">在自定义事件中，可精确地指定在代码对事件添加或移除事件处理程序时，或是代码引发事件时发生的情况。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For examples, see <bpt id="p1">[</bpt>How to: Declare Custom Events To Conserve Memory<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-conserve-memory.md)</ept> and <bpt id="p2">[</bpt>How to: Declare Custom Events To Avoid Blocking<ept id="p2">](../../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md)</ept>.</source>
          <target state="translated">有关示例，请参阅<bpt id="p1">[</bpt>如何︰ 声明节省内存到自定义事件<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-conserve-memory.md)</ept>和<bpt id="p2">[</bpt>如何︰ 声明自定义事件为避免阻塞<ept id="p2">](../../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md)</ept>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The following example uses events to count down seconds from 10 to 0.</source>
          <target state="translated">下面的示例使用事件从 10 秒到 0 秒进行倒计时。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The code illustrates several of the event-related methods, properties, and statements.</source>
          <target state="translated">代码演示了几个与事件相关的方法、属性和语句。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This includes the <ph id="ph1">`RaiseEvent`</ph> statement.</source>
          <target state="translated">这包括 <ph id="ph1">`RaiseEvent`</ph> 语句。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The class that raises an event is the event source, and the methods that process the event are the event handlers.</source>
          <target state="translated">引发事件的类是事件源，处理事件的方法是事件处理程序。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>An event source can have multiple handlers for the events it generates.</source>
          <target state="translated">事件源对于它生成的事件可以具有多个处理程序。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When the class raises the event, that event is raised on every class that has elected to handle events for that instance of the object.</source>
          <target state="translated">类引发事件时，会在选择用于为对象的该实例处理事件的每个类上引发该事件。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The example also uses a form (<ph id="ph1">`Form1`</ph>) with a button (<ph id="ph2">`Button1`</ph>) and a text box (<ph id="ph3">`TextBox1`</ph>).</source>
          <target state="translated">该示例还使用一个窗体 (<ph id="ph1">`Form1`</ph>)，其中包含一个按钮 (<ph id="ph2">`Button1`</ph>) 和一个文本框 (<ph id="ph3">`TextBox1`</ph>)。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>When you click the button, the first text box displays a countdown from 10 to 0 seconds.</source>
          <target state="translated">单击该按钮时，第一个文本框显示从 10 秒到 0 秒的倒计时。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>When the full time (10 seconds) has elapsed, the first text box displays "Done".</source>
          <target state="translated">经过了全部时间（10 秒）之后，第一个文本框会显示“Done”。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The code for <ph id="ph1">`Form1`</ph> specifies the initial and terminal states of the form.</source>
          <target state="translated"><ph id="ph1">`Form1`</ph> 的代码指定窗体的初始和最终状态。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>It also contains the code executed when events are raised.</source>
          <target state="translated">它还包含引发事件时执行的代码。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>To use this example, open a new Windows Forms project.</source>
          <target state="translated">若要使用此示例，请打开新的 Windows 窗体项目。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Then add a button named <ph id="ph1">`Button1`</ph> and a text box named <ph id="ph2">`TextBox1`</ph> to the main form, named <ph id="ph3">`Form1`</ph>.</source>
          <target state="translated">然后向名为 <ph id="ph3">`Form1`</ph> 的主窗体添加一个名为 <ph id="ph1">`Button1`</ph> 的按钮和一个名为 <ph id="ph2">`TextBox1`</ph> 的文本框。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Then right-click the form and click <bpt id="p1">**</bpt>View Code<ept id="p1">**</ept> to open the code editor.</source>
          <target state="translated">右键单击该表单，然后单击<bpt id="p1">**</bpt>查看代码<ept id="p1">**</ept>以打开代码编辑器。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">`WithEvents`</ph> variable to the declarations section of the <ph id="ph2">`Form1`</ph> class:</source>
          <target state="translated">向 <ph id="ph2">`Form1`</ph> 类的声明部分添加一个 <ph id="ph1">`WithEvents`</ph> 变量：</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents#14<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/event-statement_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents #&amp;14;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/event-statement_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Add the following code to the code for <ph id="ph1">`Form1`</ph>.</source>
          <target state="translated">将下面的代码添加到 <ph id="ph1">`Form1`</ph> 的代码：</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Replace any duplicate procedures that may exist, such as <ph id="ph1">`Form_Load`</ph> or <ph id="ph2">`Button_Click`</ph>.</source>
          <target state="translated">替换可能存在的任何重复过程，如 <ph id="ph1">`Form_Load`</ph> 或 <ph id="ph2">`Button_Click`</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents#15<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/event-statement_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents #&amp;15;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/event-statement_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Press F5 to run the previous example, and click the button labeled <bpt id="p1">**</bpt>Start<ept id="p1">**</ept>.</source>
          <target state="translated">按 F5 以运行前面的示例中，并单击标记为按钮<bpt id="p1">**</bpt>启动<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The first text box starts to count down the seconds.</source>
          <target state="translated">第一个文本框中开始倒计时秒数。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>When the full time (10 seconds) has elapsed, the first text box displays "Done".</source>
          <target state="translated">经过了全部时间（10 秒）之后，第一个文本框会显示“Done”。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Application.DoEvents`</ph> method does not process events in the same way the form does.</source>
          <target state="translated"><ph id="ph1">`My.Application.DoEvents`</ph> 方法不会按照与窗体相同的方式来处理事件。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>To enable the form to handle the events directly, you can use multithreading.</source>
          <target state="translated">若要使窗体可以直接处理事件，可以使用多线程处理。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Threading<ept id="p1">](http://msdn.microsoft.com/library/552f6c68-dbdb-4327-ae36-32cf9063d88c)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>线程处理<ept id="p1">](http://msdn.microsoft.com/library/552f6c68-dbdb-4327-ae36-32cf9063d88c)</ept>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>RaiseEvent Statement<ept id="p1">](../../../visual-basic/language-reference/statements/raiseevent-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>RaiseEvent 语句<ept id="p1">](../../../visual-basic/language-reference/statements/raiseevent-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Implements Statement<ept id="p1">](../../../visual-basic/language-reference/statements/implements-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Implements 语句<ept id="p1">](../../../visual-basic/language-reference/statements/implements-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Events<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>事件<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>AddHandler Statement<ept id="p1">](../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>AddHandler 语句<ept id="p1">](../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>RemoveHandler Statement<ept id="p1">](../../../visual-basic/language-reference/statements/removehandler-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>RemoveHandler 语句<ept id="p1">](../../../visual-basic/language-reference/statements/removehandler-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Handles<ept id="p1">](../../../visual-basic/language-reference/statements/handles-clause.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>句柄<ept id="p1">](../../../visual-basic/language-reference/statements/handles-clause.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Delegate Statement<ept id="p1">](../../../visual-basic/language-reference/statements/delegate-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Delegate 语句<ept id="p1">](../../../visual-basic/language-reference/statements/delegate-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Declare Custom Events To Conserve Memory<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-conserve-memory.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>如何︰ 声明自定义事件以节省内存<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-conserve-memory.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Declare Custom Events To Avoid Blocking<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>如何︰ 声明自定义事件以避免阻止<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/how-to-declare-custom-events-to-avoid-blocking.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Shared<ept id="p1">](../../../visual-basic/language-reference/modifiers/shared.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>共享<ept id="p1">](../../../visual-basic/language-reference/modifiers/shared.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Shadows<ept id="p1">](../../../visual-basic/language-reference/modifiers/shadows.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Shadows<ept id="p1">](../../../visual-basic/language-reference/modifiers/shadows.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>