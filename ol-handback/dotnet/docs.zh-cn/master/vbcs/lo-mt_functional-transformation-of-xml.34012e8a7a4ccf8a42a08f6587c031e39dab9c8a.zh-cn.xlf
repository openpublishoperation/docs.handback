<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a188ad5182b757a798f7f29414536ba2d1a88c2b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\functional-transformation-of-xml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9bb9060c4a30e3e37d6dc18ac7613a8d2e1cc29d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc2780bdf427353b7a2ddab095a0a270fad35015</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Functional Transformation of XML (Visual Basic) | Microsoft Docs</source>
          <target state="translated">XML (Visual Basic 中) 的功能转换 |Microsoft 文档</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Functional Transformation of XML (Visual Basic)</source>
          <target state="translated">XML (Visual Basic 中) 的功能转换</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic discusses the pure functional transformation approach to modifying XML documents, and contrasts it with a procedural approach.</source>
          <target state="translated">本主题讨论用于修改 XML 文档的纯函数转换方法，并将该方法与过程方法进行比较。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Modifying an XML Document</source>
          <target state="translated">修改 XML 文档</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>One of the most common tasks for an XML programmer is transforming XML from one shape to another.</source>
          <target state="translated">对 XML 程序员来说，最常见的任务之一就是将 XML 从一种形状转换为另一种形状。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The shape of an XML document is the structure of the document, which includes the following:</source>
          <target state="translated">XML 文档的形状就是文档的结构，包括下列内容：</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The hierarchy expressed by the document.</source>
          <target state="translated">文档所表达的层次结构。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The element and attribute names.</source>
          <target state="translated">元素和属性的名称。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The data types of the elements and attributes.</source>
          <target state="translated">元素和属性的数据类型。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In general, the most effective approach to transforming XML from one shape to another is that of pure functional transformation.</source>
          <target state="translated">通常，将 XML 从一种形状转换为另一种形状的最有效方法是纯函数转换方法。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In this approach, the primary programmer task is to create a transformation which is applied to the entire XML document (or to one or more strictly defined nodes).</source>
          <target state="translated">在这种方法中，程序员的主要任务是创建一个转换，该转换将应用到整个 XML 文档（或应用到一个或多个严格定义的节点）。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Functional transformation is arguably the easiest to code (after a programmer is familiar with the approach), yields the most maintainable code, and is often more compact than alternative approaches.</source>
          <target state="translated">可以说，函数转换最容易进行编码（如果程序员熟悉这种方法），生成的代码最容易维护，并且相比其他方法通常更加简洁。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>XML Functional Transformational Technologies</source>
          <target state="translated">XML 函数转换技术</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Microsoft offers two functional transformation technologies for use on XML documents: XSLT and LINQ to XML.</source>
          <target state="translated">Microsoft 提供了两种函数转换技术用于 XML 文档：XSLT 和 LINQ to XML。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>XSLT is supported in the &lt;xref:System.Xml.Xsl&gt; managed namespace and in the native COM implementation of MSXML.</source>
          <target state="translated">中支持 XSLT&lt;xref:System.Xml.Xsl&gt;托管命名空间和 MSXML 的本机 COM 实现中。&lt;/xref:System.Xml.Xsl&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Although XSLT is a robust technology for manipulating XML documents, it requires expertise in a specialized domain, namely the XSLT language and its supporting APIs.</source>
          <target state="translated">尽管 XSLT 是操作 XML 文档的可靠技术，但它要求专门领域的专业知识，即 XSLT 语言和支持它的 API。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>LINQ to XML provides the tools necessary to code pure functional transformations in an expressive and powerful way, within C# or Visual Basic code.</source>
          <target state="translated">LINQ to XML 提供了必要的工具，使用这些工具可以在 C# 或 Visual Basic 代码中以富于表现力而又强有力的方式编写纯函数转换。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, many of the examples in the LINQ to XML documentation use a pure functional approach.</source>
          <target state="translated">例如，LINQ to XML 文档中的很多示例都使用纯函数方法。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Also, in the <bpt id="p1">[</bpt>Tutorial: Manipulating Content in a WordprocessingML Document (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/tutorial-manipulating-content-in-a-wordprocessingml-document.md)</ept> tutorial, we use LINQ to XML in a functional approach to manipulate information in a Microsoft Word document.</source>
          <target state="translated">此外，在<bpt id="p1">[</bpt>教程︰ 在 WordprocessingML 文档 (Visual Basic 中) 中使用内容<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/tutorial-manipulating-content-in-a-wordprocessingml-document.md)</ept>教程中，我们使用 LINQ to XML 中使用函数方法处理 Microsoft Word 文档中的信息。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For a more complete comparison of LINQ to XML with other Microsoft XML technologies, see <bpt id="p1">[</bpt>LINQ to XML vs. Other XML Technologies<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-vs-other-xml-technologies.md)</ept>.</source>
          <target state="translated">Linq to XML 与其他 Microsoft XML 技术的更全面比较，请参阅<bpt id="p1">[</bpt>LINQ to XML 与。其他 XML 技术<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-vs-other-xml-technologies.md)</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>XSLT is the recommended tool for  document-centric transformations when the source document has an irregular structure.</source>
          <target state="translated">如果源文档具有不规则的结构，则推荐使用 XSLT 工具进行以文档为中心的转换。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>However, LINQ to XML can also perform document-centric transforms.</source>
          <target state="translated">但是 LINQ to XML 也可以执行以文档为中心的转换。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Use Annotations to Transform LINQ to XML Trees in an XSLT Style (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-use-annotation-trees-to-transform-linq-to-xml-trees-in-an-xslt-style.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何︰ 使用批注转换 linq to XML 树的 XSLT 样式 (Visual Basic 中)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-use-annotation-trees-to-transform-linq-to-xml-trees-in-an-xslt-style.md)</ept>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Introduction to Pure Functional Transformations (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/introduction-to-pure-functional-transformations.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>介绍纯函数转换 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/introduction-to-pure-functional-transformations.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>LINQ to XML vs. Other XML Technologies<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-vs-other-xml-technologies.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>LINQ to XML 与其他 XML 技术<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-vs-other-xml-technologies.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>LINQ to XML vs. Other XML Technologies<ept id="p1">](http://msdn.microsoft.com/library/7ba1eecf-f09a-42de-bc80-22ca5b2e42d3)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>LINQ to XML 与其他 XML 技术<ept id="p1">](http://msdn.microsoft.com/library/7ba1eecf-f09a-42de-bc80-22ca5b2e42d3)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>