<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c1ef9db560de02efa20dbe88ff0e73ffd9e7fff</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\how-to-find-child-elements-based-on-position.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8cf1cf34f992911c5c590d4d6d47ba0b64ae601</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08b185f11e01ee97c04f0119e95ad0b88708af63</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Find Child Elements Based on Position (XPath-LINQ to XML) (Visual Basic) | Microsoft Docs</source>
          <target state="translated">如何︰ 查找子元素 (XPATH-LINQ to XML) 的位置对基于 (Visual Basic 中) |Microsoft 文档</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Find Child Elements Based on Position (XPath-LINQ to XML) (Visual Basic)</source>
          <target state="translated">如何︰ 查找子元素 (XPATH-LINQ to XML) 的位置对基于 (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Sometimes you want to find elements based on their position.</source>
          <target state="translated">有时需要根据元素的位置查找元素。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You might want to find the second element, or you might want to find the third through the fifth element.</source>
          <target state="translated">您可能想查找第二个元素，或者查找第三到第五个元素。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The XPath expression is:</source>
          <target state="translated">XPath 表达式为：</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>There are two approaches to writing this <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> query in a lazy way.</source>
          <target state="translated">有两种方法以迟缓方式编写此 <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> 查询。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can use the &lt;xref:System.Linq.Enumerable.Skip%2A&gt; and &lt;xref:System.Linq.Enumerable.Take%2A&gt; operators, or you can use the &lt;xref:System.Linq.Enumerable.Where%2A&gt; overload that takes an index.</source>
          <target state="translated">您可以使用&lt;xref:System.Linq.Enumerable.Skip%2A&gt;和&lt;xref:System.Linq.Enumerable.Take%2A&gt;运算符，也可以使用&lt;xref:System.Linq.Enumerable.Where%2A&gt;接受索引的重载。&lt;/xref:System.Linq.Enumerable.Where%2A&gt; &lt;/xref:System.Linq.Enumerable.Take%2A&gt; &lt;/xref:System.Linq.Enumerable.Skip%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When you use the &lt;xref:System.Linq.Enumerable.Where%2A&gt; overload, you use a lambda expression that takes two arguments.</source>
          <target state="translated">当您使用&lt;xref:System.Linq.Enumerable.Where%2A&gt;重载中，您可以使用采用两个参数的 lambda 表达式。&lt;/xref:System.Linq.Enumerable.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following example shows both methods of selecting based on position.</source>
          <target state="translated">下面的示例演示了根据位置选择的这两种方法。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This example finds the second through the fourth <ph id="ph1">`Test`</ph> element.</source>
          <target state="translated">本示例查找第二到第四个 <ph id="ph1">`Test`</ph> 元素。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The result is a collection of elements.</source>
          <target state="translated">结果是一个元素集合。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This example uses the following XML document: <bpt id="p1">[</bpt>Sample XML File: Test Configuration (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-test-configuration-linq-to-xml.md)</ept>.</source>
          <target state="translated">此示例使用下面的 XML 文档︰<bpt id="p1">[</bpt>示例 XML 文件︰ 测试配置 (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-test-configuration-linq-to-xml.md)</ept>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">该示例产生下面的输出：</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ to XML for XPath Users (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>LINQ to XML 针对 XPath 用户 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>