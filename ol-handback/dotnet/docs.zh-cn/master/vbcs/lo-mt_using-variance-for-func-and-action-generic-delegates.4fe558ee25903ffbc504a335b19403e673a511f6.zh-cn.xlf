<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">28c3f84d21f9fbc7e57ba079461194acf7612add</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\covariance-contravariance\using-variance-for-func-and-action-generic-delegates.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d0252f25fd231bef4784dc5c3b335785b4be538</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34baac18c8d154d58792114ac4d6c9b457786833</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using Variance for Func and Action Generic Delegates (Visual Basic) | Microsoft Docs</source>
          <target state="translated">对 Func 和 Action 泛型委托 (Visual Basic 中) 中使用变体 |Microsoft 文档</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Using Variance for Func and Action Generic Delegates (Visual Basic)</source>
          <target state="translated">对 Func 和 Action 泛型委托 (Visual Basic 中) 中使用变体</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>These examples demonstrate how to use covariance and contravariance in the <ph id="ph1">`Func`</ph> and <ph id="ph2">`Action`</ph> generic delegates to enable reuse of methods and provide more flexibility in your code.</source>
          <target state="translated">这些示例演示如何使用协变和逆变在<ph id="ph1">`Func`</ph>和<ph id="ph2">`Action`</ph>要启用重用方法，并提供更多的灵活性，在代码中的泛型委托。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information about covariance and contravariance, see <bpt id="p1">[</bpt>Variance in Delegates (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/covariance-contravariance/variance-in-delegates.md)</ept>.</source>
          <target state="translated">有关协变和逆变的详细信息，请参阅<bpt id="p1">[</bpt>委托 (Visual Basic 中) 中的变体<ept id="p1">](../../../../visual-basic/programming-guide/concepts/covariance-contravariance/variance-in-delegates.md)</ept>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Using Delegates with Covariant Type Parameters</source>
          <target state="translated">使用具有协变类型参数的委托</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The following example illustrates the benefits of covariance support in the generic <ph id="ph1">`Func`</ph> delegates.</source>
          <target state="translated">下面的示例阐释了协变支持在泛型的优点<ph id="ph1">`Func`</ph>委托。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`FindByTitle`</ph> method takes a parameter of the <ph id="ph2">`String`</ph> type and returns an object of the <ph id="ph3">`Employee`</ph> type.</source>
          <target state="translated"><ph id="ph1">`FindByTitle`</ph>方法采用一个参数的<ph id="ph2">`String`</ph>类型，并返回的对象<ph id="ph3">`Employee`</ph>类型。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, you can assign this method to the <ph id="ph1">`Func(Of String, Person)`</ph> delegate because <ph id="ph2">`Employee`</ph> inherits <ph id="ph3">`Person`</ph>.</source>
          <target state="translated">但是，将分配给此方法<ph id="ph1">`Func(Of String, Person)`</ph>委托原因<ph id="ph2">`Employee`</ph>继承<ph id="ph3">`Person`</ph>。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Using Delegates with Contravariant Type Parameters</source>
          <target state="translated">使用具有逆变类型参数的委托</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following example illustrates the benefits of contravariance support in the generic <ph id="ph1">`Action`</ph> delegates.</source>
          <target state="translated">下面的示例阐释了逆变支持泛型中的好处<ph id="ph1">`Action`</ph>委托。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`AddToContacts`</ph> method takes a parameter of the <ph id="ph2">`Person`</ph> type.</source>
          <target state="translated"><ph id="ph1">`AddToContacts`</ph>方法采用一个参数的<ph id="ph2">`Person`</ph>类型。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, you can assign this method to the <ph id="ph1">`Action(Of Employee)`</ph> delegate because <ph id="ph2">`Employee`</ph> inherits <ph id="ph3">`Person`</ph>.</source>
          <target state="translated">但是，将分配给此方法<ph id="ph1">`Action(Of Employee)`</ph>委托原因<ph id="ph2">`Employee`</ph>继承<ph id="ph3">`Person`</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Covariance and Contravariance (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/covariance-contravariance/covariance-and-contravariance.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>协变和逆变 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/covariance-contravariance/covariance-and-contravariance.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Generics<ept id="p1">](https://msdn.microsoft.com/library/ms172192)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>泛型<ept id="p1">](https://msdn.microsoft.com/library/ms172192)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>