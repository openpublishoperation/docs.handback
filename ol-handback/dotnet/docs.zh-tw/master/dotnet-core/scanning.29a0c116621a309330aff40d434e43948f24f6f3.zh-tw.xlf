<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-47f9650" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7dfc48e03a275522a48a49dbb44ce1d0f8b05e75</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\scanning.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dotnet-core</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5970adf79d537935a9feb6aaa95f72fd15e76bc2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65c229439165b077a49243c6c9ae5ffe3ca6481d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Regular expression example: scanning for HREFs</source>
          <target state="translated">規則運算式範例：掃描 HREF</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Regular expression example scanning for HREFs</source>
          <target state="translated">規則運算式範例：掃描 HREF</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Regular expression example: scanning for HREFs</source>
          <target state="translated">規則運算式範例：掃描 HREF</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following example searches an input string and displays all the href="…" values and their locations in the string.</source>
          <target state="translated">下列範例將搜尋輸入字串，並顯示所有 href="..." 值和它們在字串中的位置。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The Regex Object</source>
          <target state="translated">Regex 物件</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Because the <ph id="ph1">`DumpHRefs`</ph> method can be called multiple times from user code, it uses the <ph id="ph2">`static`</ph> <bpt id="p1">[</bpt>Regex.Match(String, String, RegexOptions)<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions))</ept> method.</source>
          <target state="translated">由於您可以從使用者程式碼多次呼叫 <ph id="ph1">`DumpHRefs`</ph> 方法，因此它會使用 <ph id="ph2">`static`</ph> <bpt id="p1">[</bpt>Regex.Match(String, String, RegexOptions)<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Match(System.String,System.String,System.Text.RegularExpressions.RegexOptions))</ept> 方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This enables the regular expression engine to cache the regular expression and avoids the overhead of instantiating a new <bpt id="p1">[</bpt>Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept> object each time the method is called.</source>
          <target state="translated">這可讓規則運算式引擎快取規則運算式，並避免在每次呼叫方法時，因具現化新 <bpt id="p1">[</bpt>Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept> 物件導致的額外負荷。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>Match<ept id="p1">](xref:System.Text.RegularExpressions.Match)</ept> object is then used to iterate through all matches in the string.</source>
          <target state="translated">接著，系統會使用 <bpt id="p1">[</bpt>Match<ept id="p1">](xref:System.Text.RegularExpressions.Match)</ept> 物件逐一查看字串中的所有相符項目。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following example then illustrates a call to the <ph id="ph1">`DumpHRefs`</ph> method.</source>
          <target state="translated">下列範例說明如何呼叫 <ph id="ph1">`DumpHRefs`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The regular expression pattern <ph id="ph1">`href\s*=\s*(?:["']&amp;#40;?&lt;1&gt;[^"']*)["']|(?&lt;1&gt;\S+))`</ph> is interpreted as shown in the following table.</source>
          <target state="translated">規則運算式模式 <ph id="ph1">`href\s*=\s*(?:["']&amp;#40;?&lt;1&gt;[^"']*)["']|(?&lt;1&gt;\S+))`</ph> 的解譯方式如下表所示。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">模式</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Match the literal string "href".</source>
          <target state="translated">比對常值字串 "href"。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The match is case-insensitive.</source>
          <target state="translated">該比對不區分大小寫。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Match zero or more white-space characters.</source>
          <target state="translated">比對零個以上的空白字元。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>`Match the equals sign.</source>
          <target state="translated">比對等號。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Match zero or more white-space characters.</source>
          <target state="translated">比對零個以上的空白字元。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Match one of the following without assigning the result to a captured group: A quotation mark or apostrophe, followed by zero or more occurrences of any character other than a quotation mark or apostrophe, followed by a quotation mark or apostrophe.</source>
          <target state="translated">比對下列項目之一，而不將結果指派給擷取的群組：引號 (或單引號)，後面加上零個或多個引號 (或單引號) 以外的任何字元，再加上引號 (或單引號)。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The group named <ph id="ph1">`1`</ph> is included in this pattern.</source>
          <target state="translated">此模式中包含名為 <ph id="ph1">`1`</ph> 的群組。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>-or- One or more non-white-space characters.</source>
          <target state="translated">-或者- 一個或多個非空白字元。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The group named <ph id="ph1">`1`</ph> is included in this pattern.</source>
          <target state="translated">此模式中包含名為 <ph id="ph1">`1`</ph> 的群組。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Assign zero or more occurrences of any character other than a quotation mark or apostrophe to the capturing group named <ph id="ph1">`1`</ph>.</source>
          <target state="translated">將零個或多個引號 (或單引號) 以外的任何字元指派給名為 <ph id="ph1">`1`</ph> 的擷取端群組。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Assign one or more non-white-space characters to the capturing group named <ph id="ph1">`1`</ph>.</source>
          <target state="translated">將一或多個非空白字元指派給名為 <ph id="ph1">`1`</ph> 的擷取群組。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Match Result Class</source>
          <target state="translated">比對結果類別</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The results of a search are stored in the <bpt id="p1">[</bpt>Match<ept id="p1">](xref:System.Text.RegularExpressions.Match)</ept> class, which provides access to all the substrings extracted by the search.</source>
          <target state="translated">搜尋的結果會儲存在 <bpt id="p1">[</bpt>Match<ept id="p1">](xref:System.Text.RegularExpressions.Match)</ept> 類別中，其可讓您存取搜尋所擷取的所有子字串。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It also remembers the string being searched and the regular expression being used, so it can call the <bpt id="p1">[</bpt>Match.NextMatch<ept id="p1">](xref:System.Text.RegularExpressions.Match.NextMatch)</ept> method to perform another search starting where the last one ended.</source>
          <target state="translated">它也會記住要搜尋的字串與所用的規則運算式，使其能呼叫 <bpt id="p1">[</bpt>Match.NextMatch<ept id="p1">](xref:System.Text.RegularExpressions.Match.NextMatch)</ept> 方法，以從最後一個搜尋結束的位置開始執行其他搜尋。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Explicitly Named Captures</source>
          <target state="translated">明確命名的擷取</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In traditional regular expressions, capturing parentheses are automatically numbered sequentially.</source>
          <target state="translated">在傳統的規則運算式中，會自動將擷取括號依序編號。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This leads to two problems.</source>
          <target state="translated">這會導致兩個問題。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>First, if a regular expression is modified by inserting or removing a set of parentheses, all code that refers to the numbered captures must be rewritten to reflect the new numbering.</source>
          <target state="translated">第一，如果修改規則運算式時，是以插入或移除一組括號來進行，就必須重新撰寫所有參考已編號擷取的程式碼，以反映新的編號。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Second, because different sets of parentheses often are used to provide two alternative expressions for an acceptable match, it might be difficult to determine which of the two expressions actually returned a result.</source>
          <target state="translated">第二，不同的括號通常用來提供兩個替代運算式以進行可接受的比對，因此可能難以判斷這兩個運算式是哪一個實際傳回結果。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To address these problems, the <bpt id="p1">[</bpt>Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept> class supports the syntax <ph id="ph1">`(?&lt;name&gt;…)`</ph> for capturing a match into a specified slot (the slot can be named using a string or an integer; integers can be recalled more quickly).</source>
          <target state="translated">為了解決這些問題，<bpt id="p1">[</bpt>Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept> 類別支援 <ph id="ph1">`(?&lt;name&gt;…)`</ph> 的語法，可將比對擷取至指定位置 (該位置可以使用字串或整數命名；使用整數則可以更快速地重新叫用)。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Thus, alternative matches for the same string all can be directed to the same place.</source>
          <target state="translated">因此，相同字串的所有替代比對皆可導向相同的位置。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>In case of a conflict, the last match dropped into a slot is the successful match.</source>
          <target state="translated">萬一發生衝突時，最後一個進入位置的比對就是成功的比對</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>(However, a complete list of multiple matches for a single slot is available.</source>
          <target state="translated">(不過，您可以使用單一位置之多個比對的完整清單。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Group.Captures<ept id="p1">](xref:System.Text.RegularExpressions.Group.Captures)</ept> collection for details.)</source>
          <target state="translated">請參閱 <bpt id="p1">[</bpt>Group.Captures<ept id="p1">](xref:System.Text.RegularExpressions.Group.Captures)</ept> 集合，以取得詳細資訊)。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET regular expressions<ept id="p1">](regular-expressions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>.NET 規則運算式<ept id="p1">](regular-expressions.md)</ept></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Regular expression examples<ept id="p1">](regex-examples.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>規則運算式範例<ept id="p1">](regex-examples.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>