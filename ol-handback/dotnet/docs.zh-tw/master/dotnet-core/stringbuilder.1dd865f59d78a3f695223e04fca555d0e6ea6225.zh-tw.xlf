<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c42a4ac5fcd889eedea27b54b249f48c4848c88</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\stringbuilder.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8f6877522a7496b27ba84fba00bbe002ae5273ea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aab02137b0f4e0f0f04e185726ddceb0050b1f52</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Using the StringBuilder class</source>
          <target state="translated">使用 StringBuilder 類別</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Using the StringBuilder class</source>
          <target state="translated">使用 StringBuilder 類別</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Using the StringBuilder class</source>
          <target state="translated">使用 StringBuilder 類別</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> object is immutable.</source>
          <target state="translated"><bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> 物件為不可變。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Every time you use one of the methods in the <bpt id="p1">[</bpt>System.String<ept id="p1">](xref:System.String)</ept> class, you create a new string object in memory, which requires a new allocation of space for that new object.</source>
          <target state="translated">每當您使用 <bpt id="p1">[</bpt>System.String<ept id="p1">](xref:System.String)</ept> 類別的其中一個方法時，您會在記憶體中建立新的字串物件，而系統即需為這個新物件配置新的空間。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In situations where you need to perform repeated modifications to a string, the overhead associated with creating a new <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> object can be costly.</source>
          <target state="translated">在您需要重複修改字串的情況下，建立新 <bpt id="p1">[</bpt>String<ept id="p1">](xref:System.String)</ept> 物件時產生的額外負荷可能成本高昂。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Text.StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class can be used when you want to modify a string without creating a new object.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Text.StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 類別可用於您想要修改字串，而不建立新的物件時。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For example, using the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class can boost performance when concatenating many strings together in a loop.</source>
          <target state="translated">例如，使用 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 類別可以在將許多字串一起串連在迴圈中時，提升效能。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Importing the System.Text Namespace</source>
          <target state="translated">匯入 System.Text 命名空間</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class is found in the <bpt id="p2">[</bpt>System.Text<ept id="p2">](xref:System.Text)</ept> namespace.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 類別位於 <bpt id="p2">[</bpt>System.Text<ept id="p2">](xref:System.Text)</ept> 命名空間。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>To avoid having to provide a fully qualified type name in your code, you can import the <bpt id="p1">[</bpt>System.Text<ept id="p1">](xref:System.Text)</ept> namespace:</source>
          <target state="translated">若要避免在程式碼中提供完整的類型名稱，您可以匯入 <bpt id="p1">[</bpt>System.Text<ept id="p1">](xref:System.Text)</ept> 命名空間：</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Instantiating a StringBuilder Object</source>
          <target state="translated">具現化 StringBuilder 物件</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can create a new instance of the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class by initializing your variable with one of the overloaded constructor methods, as illustrated in the following example.</source>
          <target state="translated">您可以使用其中一個多載建構函式方法，初始化變數來建立 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 類別的新執行個體，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Setting the Capacity and Length</source>
          <target state="translated">設定容量和長度</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Although the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> is a dynamic object that allows you to expand the number of characters in the string that it encapsulates, you can specify a value for the maximum number of characters that it can hold.</source>
          <target state="translated">雖然 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 是動態的物件 (可讓您擴展它所封裝之字串中的字元數)，但您仍可以指定它能容納的字元數上限值。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This value is called the capacity of the object and should not be confused with the length of the string that the current <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> holds.</source>
          <target state="translated">這個值稱為物件的容量，不應該與目前 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 保存的字串長度混淆。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, you might create a new instance of the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class with the string "Hello", which has a length of 5, and you might specify that the object has a maximum capacity of 25.</source>
          <target state="translated">例如，您可以用字串 "Hello" 建立 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 類別的新執行個體，其長度為 5，而且您可能會指定物件的最大容量為 25。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When you modify the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>, it does not reallocate size for itself until the capacity is reached.</source>
          <target state="translated">當您修改 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 時，除非達到容量上限，否則它不會重新配置自己的大小。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When this occurs, the new space is allocated automatically and the capacity is doubled.</source>
          <target state="translated">發生這種情況時，會自動配置新的空間，而且容量加倍。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can specify the capacity of the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> class using one of the overloaded constructors.</source>
          <target state="translated">您可以使用其中一個多載建構函式，指定 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 類別的容量。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following example specifies that the <ph id="ph1">`MyStringBuilder`</ph> object can be expanded to a maximum of 25 spaces.</source>
          <target state="translated">下列範例會指定 <ph id="ph1">`MyStringBuilder`</ph> 物件可以擴展到最多 25 個空格。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Additionally, you can use the read/write <bpt id="p1">[</bpt>Capacity<ept id="p1">](xref:System.Text.StringBuilder.Capacity)</ept> property to set the maximum length of your object.</source>
          <target state="translated">此外，您可以使用讀/寫 <bpt id="p1">[</bpt>Capacity<ept id="p1">](xref:System.Text.StringBuilder.Capacity)</ept> 屬性來設定物件的長度上限。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>Capacity<ept id="p1">](xref:System.Text.StringBuilder.Capacity)</ept> property to define the maximum object length.</source>
          <target state="translated">下列範例會使用 <bpt id="p1">[</bpt>Capacity<ept id="p1">](xref:System.Text.StringBuilder.Capacity)</ept> 屬性來定義物件長度上限。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>EnsureCapacity<ept id="p1">](xref:System.Text.StringBuilder.EnsureCapacity(System.Int32))</ept> method can be used to check the capacity of the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>EnsureCapacity<ept id="p1">](xref:System.Text.StringBuilder.EnsureCapacity(System.Int32))</ept> 方法可用來檢查目前 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 的容量。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If the capacity is greater than the passed value, no change is made; however, if the capacity is smaller than the passed value, the current capacity is changed to match the passed value.</source>
          <target state="translated">如果容量大於傳遞的值，不會進行任何變更。不過，如果容量小於傳遞的值，會變更目前的容量以符合傳遞的值。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> property can also be viewed or set.</source>
          <target state="translated">您也可以檢視或設定 <bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> 屬性。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If you set the <bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> property to a value that is greater than the <bpt id="p2">[</bpt>Capacity<ept id="p2">](xref:System.Text.StringBuilder.Capacity)</ept> property, the <bpt id="p3">[</bpt>Capacity<ept id="p3">](xref:System.Text.StringBuilder.Capacity)</ept> property is automatically changed to the same value as the <bpt id="p4">[</bpt>Length<ept id="p4">](xref:System.Text.StringBuilder.Length)</ept> property.</source>
          <target state="translated">如果您將 <bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> 屬性的值設成大於 <bpt id="p2">[</bpt>Capacity<ept id="p2">](xref:System.Text.StringBuilder.Capacity)</ept> 屬性的值，則 <bpt id="p3">[</bpt>Capacity<ept id="p3">](xref:System.Text.StringBuilder.Capacity)</ept> 屬性會自動變更為與 <bpt id="p4">[</bpt>Length<ept id="p4">](xref:System.Text.StringBuilder.Length)</ept> 屬性相同的值。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Setting the <bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> property to a value that is less than the length of the string within the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> shortens the string.</source>
          <target state="translated">若將 <bpt id="p1">[</bpt>Length<ept id="p1">](xref:System.Text.StringBuilder.Length)</ept> 屬性的值設成小於目前 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 內字串長度的值，則會縮短該字串。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Modifying the StringBuilder String</source>
          <target state="translated">修改 StringBuilder 字串</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following table lists the methods you can use to modify the contents of a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">下表列出您可用來修改 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 內容的方法。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Method name</source>
          <target state="translated">方法名稱</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">用法</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.Append<ept id="p1">](xref:System.Text.StringBuilder.Append(System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Append<ept id="p1">](xref:System.Text.StringBuilder.Append(System.Char))</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Appends information to the end of the current <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">將資訊附加至目前 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 的結尾。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Replaces a format specifier passed in a string with formatted text.</source>
          <target state="translated">將字串中傳遞的格式規範取代為格式化的文字。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.Insert<ept id="p1">](xref:System.Text.StringBuilder.Insert(System.Int32,System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Insert<ept id="p1">](xref:System.Text.StringBuilder.Insert(System.Int32,System.Char))</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Inserts a string or object into the specified index of the current <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">將字串或物件插入目前 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 的指定索引。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Removes a specified number of characters from the current <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">從目前 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 移除指定的字元數。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>StringBuilder.Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Replaces a specified character at a specified index.</source>
          <target state="translated">取代指定索引處的指定字元。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Append</source>
          <target state="translated">附加</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder.Append<ept id="p1">](xref:System.Text.StringBuilder.Append(System.Char))</ept> method can be used to add text or a string representation of an object to the end of a string represented by the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Append<ept id="p1">](xref:System.Text.StringBuilder.Append(System.Char))</ept> 方法可以用來將物件的文字或字串表示新增至目前 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 所代表的字串結尾。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following example initializes a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> to "Hello World" and then appends some text to the end of the object.</source>
          <target state="translated">下列範例會將 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 初始化為 "Hello World"，然後附加一些文字到物件的結尾。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Space is allocated automatically as needed.</source>
          <target state="translated">會視需要自動配置空格。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>AppendFormat</source>
          <target state="translated">AppendFormat</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept> method adds text to the end of the <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.AppendFormat<ept id="p1">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept> 方法會將文字新增至 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 物件的結尾。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It supports the composite formatting feature (for more information, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](composite-format.md)</ept>) by calling the <bpt id="p2">[</bpt>IFormattable<ept id="p2">](xref:System.IFormattable)</ept> implementation of the object or objects to be formatted.</source>
          <target state="translated">它支援複合格式設定功能 (如需詳細資訊，請參閱<bpt id="p1">[</bpt>複合格式設定<ept id="p1">](composite-format.md)</ept>)，方法是呼叫要格式化之物件的 <bpt id="p2">[</bpt>IFormattable<ept id="p2">](xref:System.IFormattable)</ept> 實作。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Therefore, it accepts the standard format strings for numeric, date and time, and enumeration values, the custom format strings for numeric and date and time values, and the format strings defined for custom types.</source>
          <target state="translated">因此，它接受數值、日期和時間，以及列舉值的標準格式字串，數值及日期和時間的自訂格式字串，以及為自訂類型定義的格式字串。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>(For information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](formatting-types.md)</ept>.) You can use this method to customize the format of variables and append those values to a <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept>.</source>
          <target state="translated">(如需格式設定的資訊，請參閱<bpt id="p1">[</bpt>格式化類型<ept id="p1">](formatting-types.md)</ept>。)您可以使用這個方法，自訂變數的格式，並將那些值附加到 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following example uses the AppendFormat method to place an integer value formatted as a currency value at the end of a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated">下列範例會使用 AppendFormat 方法，將格式化為貨幣值的整數值，放到 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 物件的結尾。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Insert</source>
          <target state="translated">Insert</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder.Insert<ept id="p1">](xref:System.Text.StringBuilder.Insert(System.Int32,System.Char))</ept> method adds a string or object to a specified position in the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Insert<ept id="p1">](xref:System.Text.StringBuilder.Insert(System.Int32,System.Char))</ept> 方法會將字串或物件新增至目前 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 物件中的指定位置。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following example uses this method to insert a word into the sixth position of a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated">下列範例會使用這個方法，在 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 物件的第六個位置插入一個字。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Remove</source>
          <target state="translated">移除</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>StringBuilder.Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept> method to remove a specified number of characters from the current <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> object, beginning at a specified zero-based index.</source>
          <target state="translated">您可以使用 <bpt id="p1">[</bpt>StringBuilder.Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept> 方法，從目前 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 物件移除指定的字元數 (從指定的以零為起始的索引處開始移除)。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept> method to shorten a <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated">下列範例會使用 <bpt id="p1">[</bpt>Remove<ept id="p1">](xref:System.Text.StringBuilder.Remove(System.Int32,System.Int32))</ept> 方法來縮短 <bpt id="p2">[</bpt>StringBuilder<ept id="p2">](xref:System.Text.StringBuilder)</ept> 物件。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Replace</source>
          <target state="translated">取代</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>StringBuilder.Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept> | Replaces a specified character at a specified index.</source>
          <target state="translated"><bpt id="p1">[</bpt>StringBuilder.Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept> | 取代指定索引處的指定字元。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>method can be used to replace characters within the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object with another specified character.</source>
          <target state="translated">方法可以用來將 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 物件內的字元取代為另一個指定的字元。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept> | Replaces a specified character at a specified index.</source>
          <target state="translated">下列範例使用 <bpt id="p1">[</bpt>StringBuilder.Replace<ept id="p1">](xref:System.Text.StringBuilder.Replace(System.Char,System.Char))</ept> | 取代指定索引處的指定字元。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>method to search a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object for all instances of the exclamation point character (!) and replace them with the question mark character (?).</source>
          <target state="translated">方法來搜尋 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 物件中所有的驚嘆號字元 (!) 執行個體，並取代為問號字元 (?)。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Converting a StringBuilder Object to a String</source>
          <target state="translated">將 StringBuilder 物件轉換為字串</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>You must convert the <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object to a <bpt id="p2">[</bpt>String<ept id="p2">](xref:System.String)</ept> object before you can pass the string represented by the <bpt id="p3">[</bpt>StringBuilder<ept id="p3">](xref:System.Text.StringBuilder)</ept> object to a method that has a <bpt id="p4">[</bpt>String<ept id="p4">](xref:System.String)</ept> parameter or display it in the user interface.</source>
          <target state="translated">您必須先將 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 物件轉換成 <bpt id="p2">[</bpt>String<ept id="p2">](xref:System.String)</ept> 物件，才能將 <bpt id="p3">[</bpt>StringBuilder<ept id="p3">](xref:System.Text.StringBuilder)</ept> 物件所代表的字串傳遞給具有 <bpt id="p4">[</bpt>String<ept id="p4">](xref:System.String)</ept> 參數的方法，或將它顯示在使用者介面。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>You do this conversion by calling the <bpt id="p1">[</bpt>StringBuilder.ToString<ept id="p1">](xref:System.Text.StringBuilder.ToString)</ept> method.</source>
          <target state="translated">您可以藉由呼叫 <bpt id="p1">[</bpt>StringBuilder.ToString<ept id="p1">](xref:System.Text.StringBuilder.ToString)</ept> 方法執行這項轉換。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The following example calls a number of <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> methods and then calls the <bpt id="p2">[</bpt>StringBuilder.ToString<ept id="p2">](xref:System.Text.StringBuilder.ToString)</ept> method to display the string.</source>
          <target state="translated">下列範例會呼叫許多 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 方法，然後呼叫 <bpt id="p2">[</bpt>StringBuilder.ToString<ept id="p2">](xref:System.Text.StringBuilder.ToString)</ept> 方法來顯示字串。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Text.StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Text.StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic string operations<ept id="p1">](basic-string-operations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>基本字串作業<ept id="p1">](basic-string-operations.md)</ept></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting types<ept id="p1">](formatting-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>格式化類型<ept id="p1">](formatting-types.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>