<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">274402bbd254e97d88771675daf07995983914aa</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\docker\visual-studio-tools-for-docker.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08a250983ad0941bcb350d807a68c4def0ffc1aa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b515b1f8079f4667ed317ca6b7a7ee6778a43bfa</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Visual Studio Tools for Docker</source>
          <target state="translated">Visual Studio Tools for Docker</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Using Visual Studio Tools for Docker</source>
          <target state="translated">使用 Visual Studio Tools for Docker</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core, Docker, ASP.NET Core, Visual Studio 2015</source>
          <target state="translated">.NET、.NET Core、Docker、ASP.NET Core、Visual Studio 2015</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Visual Studio Tools for Docker</source>
          <target state="translated">Visual Studio Tools for Docker</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Developing and debugging your application in a Docker container can be a ceremony of tasks to get setup with various tools.</source>
          <target state="translated">在 Docker 容器中開發及偵錯應用程式，要使用各種工具中完成許多繁瑣的工作。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Visual Studio Tools for Docker<ept id="p1">](https://visualstudiogallery.msdn.microsoft.com/0f5b2caa-ea00-41c8-b8a2-058c7da0b3e4)</ept> helps you get past the hurdles and find the bugs using F5 to debug your application directly in a locally hosted Docker Container.</source>
          <target state="translated"><bpt id="p1">[</bpt>Visual Studio Tools for Docker<ept id="p1">](https://visualstudiogallery.msdn.microsoft.com/0f5b2caa-ea00-41c8-b8a2-058c7da0b3e4)</ept> 可協助您排除障礙，使用 F5 找出 bug，直接在本機代管的 Docker 容器中偵錯應用程式。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The current version targets Linux Docker containers, with Windows Containers coming soon.</source>
          <target state="translated">目前的版本以 Linux Docker 容器為目標，Windows 容器的版本即將上市。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">必要條件</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft Visual Studio 2015 Update 3<ept id="p1">](https://www.visualstudio.com/downloads/download-visual-studio-vs)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Microsoft Visual Studio 2015 Update 3<ept id="p1">](https://www.visualstudio.com/downloads/download-visual-studio-vs)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET Core 1.0.1 - VS 2015 Tooling Preview 2<ept id="p1">](https://go.microsoft.com/fwlink/?LinkID=827546)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>.NET Core 1.0.1 - VS 2015 工具預覽 2<ept id="p1">](https://go.microsoft.com/fwlink/?LinkID=827546)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Docker For Windows<ept id="p1">](https://www.docker.com/products/docker#/windows)</ept> to run your Docker containers locally</source>
          <target state="translated"><bpt id="p1">[</bpt>Docker For Windows<ept id="p1">](https://www.docker.com/products/docker#/windows)</ept>：在本機執行 Docker 容器</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Installation and setup</source>
          <target state="translated">安裝和設定</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Download and install the <bpt id="p1">[</bpt>Visual Studio Tools for Docker<ept id="p1">](https://aka.ms/DockerToolsForVS)</ept> from the <bpt id="p2">[</bpt>Visual Studio Gallery<ept id="p2">](http://visualstudiogallery.msdn.microsoft.com/)</ept> or you can search for it in <bpt id="p3">**</bpt>Extensions and Updates<ept id="p3">**</ept> within Visual Studio.</source>
          <target state="translated">從 <bpt id="p2">[</bpt>Visual Studio 組件庫<ept id="p2">](http://visualstudiogallery.msdn.microsoft.com/)</ept>下載並安裝 <bpt id="p1">[</bpt>Visual Studio Tools for Docker<ept id="p1">](https://aka.ms/DockerToolsForVS)</ept>，或者您可以在 Visual Studio 的 [擴充功能和更新] 內搜尋。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A required configuration is to setup <bpt id="p1">**</bpt><bpt id="p2">[</bpt>Shared Drives<ept id="p2">](https://docs.docker.com/docker-for-windows/#/shared-drives)</ept><ept id="p1">**</ept> in Docker for Windows.</source>
          <target state="translated">必要的設定是在 Docker for Windows 中安裝<bpt id="p1">**</bpt><bpt id="p2">[</bpt>共用磁碟機<ept id="p2">](https://docs.docker.com/docker-for-windows/#/shared-drives)</ept><ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The setting is required for the volume mapping and debugging support.</source>
          <target state="translated">這對磁碟區對應及偵錯支援是必要的設定。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Right click the Docker icon in the System Tray, click Settings and select Shared Drives.</source>
          <target state="translated">以滑鼠右鍵按一下系統匣中的 Docker 圖示，按一下 [設定] 並選取 [共用磁碟機]。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Shared Drives</source>
          <target state="translated">共用磁碟機</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Create an ASP.NET Web Application and add Docker Support</source>
          <target state="translated">建立 ASP.NET Web 應用程式並新增 Docker 支援</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Using Visual Studio, create a new ASP.NET Core Web Application.</source>
          <target state="translated">使用 Visual Studio 建立新的 ASP.NET Core Web 應用程式。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When the application is loaded, either select <bpt id="p1">**</bpt>Add Docker Support<ept id="p1">**</ept> from the <bpt id="p2">**</bpt>Project Menu<ept id="p2">**</ept> or right click the project from the Solution Explorer and select <bpt id="p3">**</bpt>Add<ept id="p3">**</ept><ph id="ph1"> &gt; </ph><bpt id="p4">**</bpt>Docker Support<ept id="p4">**</ept>.</source>
          <target state="translated">載入應用程式時，從 [專案] 功能表選取 [Add Docker Support] (新增 Docker 支援)，或在方案總管中的專案上按一下滑鼠右鍵，選取 [新增]<ph id="ph1"> &gt; </ph>[Docker Support] (Docker 支援)。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Project Menu</source>
          <target state="translated">[專案] 功能表</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Project Add Docker Support</source>
          <target state="translated">[專案] [Add Docker Support] (新增 Docker 支援)</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Project Context Menu</source>
          <target state="translated">[專案] 內容功能表</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Right Click Add Docker Support</source>
          <target state="translated">以滑鼠右鍵按一下 [Add Docker Support] (新增 Docker 支援)</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following files are added to the project.</source>
          <target state="translated">下列檔案即會加入專案中。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Dockerfile<ept id="p1">**</ept>: the Docker file for ASP.NET Core applications is based on the <bpt id="p2">[</bpt>microsoft/aspnetcore<ept id="p2">](https://hub.docker.com/r/microsoft/aspnetcore)</ept> image.</source>
          <target state="translated"><bpt id="p1">**</bpt>Dockerfile<ept id="p1">**</ept>：ASP.NET Core 應用程式的 Docker 檔案是以 <bpt id="p2">[</bpt>microsoft/aspnetcore<ept id="p2">](https://hub.docker.com/r/microsoft/aspnetcore)</ept> 映像為基礎。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This image includes the ASP.NET Core NuGet packages, which have been pre-jitted improving startup performance.</source>
          <target state="translated">此映像包含 ASP.NET Core NuGet 封裝，已經過預先 JIT 編譯改善啟動效能。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When building .NET Core Console Applications, the Dockerfile FROM will reference the most recent <bpt id="p1">[</bpt>microsoft/dotnet<ept id="p1">](https://hub.docker.com/r/microsoft/dotnet)</ept> image.</source>
          <target state="translated">建置 .NET Core 主控台應用程式時，Dockerfile FROM 會參考最新的 <bpt id="p1">[</bpt>microsoft/dotnet<ept id="p1">](https://hub.docker.com/r/microsoft/dotnet)</ept> 映像。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>docker-compose.yml<ept id="p1">**</ept>: base Docker Compose file used to define the collection of images to be built and run with docker-compose build/run.</source>
          <target state="translated"><bpt id="p1">**</bpt>docker-compose.yml<ept id="p1">**</ept>︰基礎 Docker Compose 檔案，用於定義要使用 docker-compose build/run 建置及執行的映像集合。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>docker-compose.dev.debug.yml<ept id="p1">**</ept>: additional docker-compose file with for iterative changes when your configuration is set to debug.</source>
          <target state="translated"><bpt id="p1">**</bpt>docker-compose.dev.debug.yml<ept id="p1">**</ept>︰當組態設定為偵錯時，其他具有反覆變更的 docker-compose 檔案。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Visual Studio will call -f docker-compose.yml -f docker-compose.dev.debug.yml to merge these together.</source>
          <target state="translated">Visual Studio 會呼叫 -f docker-compose.yml -f docker-compose.dev.debug.yml 將這些合併到一起。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This compose file is used by Visual Studio development tools.</source>
          <target state="translated">這是 Visual Studio 開發工具使用的 compose 檔案。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>docker-compose.dev.release.yml<ept id="p1">**</ept>: additional Docker Compose file to debug your release definition.</source>
          <target state="translated"><bpt id="p1">**</bpt>docker-compose.dev.release.yml<ept id="p1">**</ept>：偵錯版本定義的其他 Docker Compose 檔案。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>It will volume mount the debugger so it doesn't change the contents of the production image.</source>
          <target state="translated">它會以磁碟區掛接方式掛接偵錯工具，這樣就不會變更生產環境映像的內容。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The docker-compose.yml file contains the name of the image that is created when project is run.</source>
          <target state="translated">docker-compose.yml 檔案包含執行專案時所建立的映像名稱。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In this example, <ph id="ph1">`image: user/hellodockertools${TAG}`</ph> generates the image <ph id="ph2">`user/hellodockertools:dev`</ph> when the application is run in <bpt id="p1">**</bpt>Debug<ept id="p1">**</ept> mode and <ph id="ph3">`user/hellodockertools:latest`</ph> in <bpt id="p2">**</bpt>Release<ept id="p2">**</ept> mode respectively.</source>
          <target state="translated">在本例中，當應用程式在 <bpt id="p1">**</bpt>偵錯<ept id="p1">**</ept>模式中執行，而 <ph id="ph3">`user/hellodockertools:latest`</ph> 在<bpt id="p2">**</bpt>發行<ept id="p2">**</ept>模式中執行時，<ph id="ph1">`image: user/hellodockertools${TAG}`</ph> 會產生映像 <ph id="ph2">`user/hellodockertools:dev`</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You will want to change the <ph id="ph1">`user`</ph> to your Docker Hub username if you plan to push the image to the registry.</source>
          <target state="translated">如果您打算將映像推送至登錄，您會想要將 <ph id="ph1">`user`</ph> 變更為您的 Docker Hub 使用者名稱。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`spboyer/hellodockertools`</ph>, or change to your private registry url <ph id="ph2">`privateregistry.domain.com/`</ph> depending on your configuration.</source>
          <target state="translated">例如，<ph id="ph1">`spboyer/hellodockertools`</ph>，或變更為私用登錄 URL <ph id="ph2">`privateregistry.domain.com/`</ph>，視您的設定而定。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">偵錯</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Select <bpt id="p1">**</bpt>Docker<ept id="p1">**</ept> from the debug dropdown in the toolbar and use F5 to start debugging the application.</source>
          <target state="translated">從工具列的 [偵錯] 下拉式清單中選取 [Docker]，再使用 F5 開始偵錯應用程式。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The microsoft/aspnetcore image is acquired (if not already in your cache)</source>
          <target state="translated">即取得 microsoft/aspnetcore 映像 (快取中若無)</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>ASPNETCORE_ENVIRONMENT is set to Development within the container</source>
          <target state="translated">ASPNETCORE_ENVIRONMENT 在容器內設為 [開發]</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>PORT 80 is EXPOSED and mapped to a dynamically assigned port for localhost.</source>
          <target state="translated">PORT 80 為 EXPOSED，且對應至本機主機的動態指派連接埠。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The port is determined by the docker host and can be queried with docker ps.</source>
          <target state="translated">連接埠是由銜接站主機決定，可以使用 docker ps 進行查詢。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Your application is copied to the container</source>
          <target state="translated">您的應用程式會複製到容器</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Default browser is launched with the debugger attached to the container, using the dynamically assigned port.</source>
          <target state="translated">預設瀏覽器會和附加至容器的偵錯工具一起啟動，使用動態指派的連接埠。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The resulting Docker image built is the <ph id="ph1">`dev`</ph> image of your application with the <ph id="ph2">`microsoft/aspnetcore`</ph> images as the base image.</source>
          <target state="translated">產生的 Docker 映像組建是應用程式的 <ph id="ph1">`dev`</ph> 映像，以 <ph id="ph2">`microsoft/aspnetcore`</ph> 映像為基礎映像。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Note: the dev image is empty of your app contents as Debug confgurations use volume mounting to provide the iterative experience.</source>
          <target state="translated">注意︰應用程式內容的 dev 映像是空的，因為 [偵錯] 設定使用磁碟區掛接提供反覆的體驗。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>To push an image, use the Release configuration.</source>
          <target state="translated">若要推送映像，請使用 [發行] 設定。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The application is running using the container which you can see by running the <ph id="ph1">`docker ps`</ph> command.</source>
          <target state="translated">應用程式正在執行，執行 <ph id="ph1">`docker ps`</ph> 命令可以查看使用的容器。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Edit and Continue</source>
          <target state="translated">編輯後繼續</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Changes to static files and/or razor template files (.cshtml) are automatically updated without the need of a compilation step.</source>
          <target state="translated">靜態檔案和/或 Razor 範本檔案 (.cshtml) 的變更會自動更新，不需要編譯步驟。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Make the change, save and tap refresh in the browser to view the update.</source>
          <target state="translated">進行變更，儲存並點選瀏覽器的 [重新整理] 檢視更新。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Modifications to code files require compiling and a restart of Kestrel within the container.</source>
          <target state="translated">程式碼檔案的修改需要編譯以及重新啟動容器內的 Kestrel。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>After making the change, use CTRL + F5 to perform the process and start the application within the container.</source>
          <target state="translated">完成變更之後，使用 CTRL + F5 執行程序，並啟動容器內的應用程式。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The Docker container is not rebuilt or stopped; using <ph id="ph1">`docker ps`</ph> in the command line you can see that the original container is still running as of 10 minutes ago.</source>
          <target state="translated">Docker 容器不會重建或停止，使用命令列的 <ph id="ph1">`docker ps`</ph> 就會看見原始容器仍在執行，和 10 分鐘前一樣。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Publishing Docker images</source>
          <target state="translated">發佈 Docker 映像</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Once you have completed the develop and debug cycle of your application, the Visual Studio Tools for Docker will help you create the production image of your application.</source>
          <target state="translated">只要完成應用程式的開發和偵錯循環，Visual Studio Tools for Docker 就會協助您建立應用程式的生產環境映像。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Change the debug dropdown to <bpt id="p1">**</bpt>Release<ept id="p1">**</ept> and build the application.</source>
          <target state="translated">將 [偵錯] 下拉式清單變更為 [發行] 並建置應用程式。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The tooling will produce the image with the <ph id="ph1">`:latest`</ph> tag which you can push to your private registry or Docker Hub.</source>
          <target state="translated">這項工具會產生附有 <ph id="ph1">`:latest`</ph> 標記的映像，這個標記可以推送至您的私用登錄或 Docker Hub。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Using the <ph id="ph1">`docker images`</ph> you can see the list of images.</source>
          <target state="translated">使用 <ph id="ph1">`docker images`</ph> 可以查看映像清單。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>There may be an expectation for the production or release image to be smaller in size by comparison to the <bpt id="p1">**</bpt>dev<ept id="p1">**</ept> image, however through the use of the volume mapping; the debugger and application were actually being run from your local machine and not within the container.</source>
          <target state="translated">不過，使用磁碟區對應，生產環境或發行映像的大小預期會比 <bpt id="p1">**</bpt>dev<ept id="p1">**</ept> 映像更小；偵錯工具和應用程式過去確實是從本機電腦執行，不是在容器內執行。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>latest<ept id="p1">**</ept> image has packaged the entire application code needed to run the application on a host machine, therefore the delta is the size of your application code.</source>
          <target state="translated"><bpt id="p1">**</bpt>最新的<ept id="p1">**</ept>映像已封裝在執行主機電腦應用程式所需的整個應用程式程式碼中，所以此差異是應用程式程式碼的大小。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>