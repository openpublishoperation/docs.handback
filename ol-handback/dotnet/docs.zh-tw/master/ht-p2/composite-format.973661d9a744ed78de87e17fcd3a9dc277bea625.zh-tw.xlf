<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9bcf2ff74237f7e7faf2890849c2d68a0a602353</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\composite-format.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e2c3cf56c8e87f15edb57516f6f991c6525e1d1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2bddf201ca88da85855fcb77d0e0bdade21a8ac5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Composite formatting</source>
          <target state="translated">複合格式化</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Composite formatting</source>
          <target state="translated">複合格式化</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Composite formatting</source>
          <target state="translated">複合格式化</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The .NET composite formatting feature takes a list of objects and a composite format string as input.</source>
          <target state="translated">.NET 複合格式功能會採用物件清單和複合格式字串作為輸入。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A composite format string consists of fixed text intermixed with indexed placeholders, called format items, that correspond to the objects in the list.</source>
          <target state="translated">複合格式字串是由混合索引替代符號 (Placeholder) 的固定文字所組成 (這些符號稱為對應至清單內物件的格式項目)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The formatting operation yields a result string that consists of the original fixed text intermixed with the string representation of the objects in the list.</source>
          <target state="translated">格式作業產生的結果字串是由原始固定文字所組成，這些固定文字混合了清單中代表物件的字串。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The composite formatting feature is supported by methods such as the following:</source>
          <target state="translated">下列方法支援複合格式功能：</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept>, which returns a formatted result string.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept>，傳回格式化的結果字串。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>[StringBuilder.AppendFormat](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider, System.String, System.Object), which appends a formatted result string to a <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> object.</source>
          <target state="translated">[StringBuilder.AppendFormat](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider, System.String, System.Object)，將格式化的結果字串附加至 <bpt id="p1">[</bpt>StringBuilder<ept id="p1">](xref:System.Text.StringBuilder)</ept> 物件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Some overloads of the <bpt id="p1">[</bpt>Console<ept id="p1">](xref:System.Console)</ept> <ph id="ph1">`WriteLine`</ph> method, which display a formatted result string to the console.</source>
          <target state="translated"><bpt id="p1">[</bpt>Console<ept id="p1">](xref:System.Console)</ept> <ph id="ph1">`WriteLine`</ph> 方法的部分多載，對主控台顯示格式化的結果字串。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Some overloads of the <bpt id="p1">[</bpt>TextWriter<ept id="p1">](xref:System.IO.TextWriter)</ept> <ph id="ph1">`WriteLine`</ph> method, which write the formatted result string to a stream or file.</source>
          <target state="translated"><bpt id="p1">[</bpt>TextWriter<ept id="p1">](xref:System.IO.TextWriter)</ept> <ph id="ph1">`WriteLine`</ph> 方法的部分多載，將格式化的結果字串寫入至資料流或檔案。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Classes derived from <bpt id="p1">[</bpt>TextWriter<ept id="p1">](xref:System.IO.TextWriter)</ept>, such as <bpt id="p2">[</bpt>StreamWriter<ept id="p2">](xref:System.IO.StreamWriter)</ept>, also share this functionality.</source>
          <target state="translated">衍生自 <bpt id="p1">[</bpt>TextWriter<ept id="p1">](xref:System.IO.TextWriter)</ept> 的類別 (例如 <bpt id="p2">[</bpt>StreamWriter<ept id="p2">](xref:System.IO.StreamWriter)</ept>) 也會共用這項功能。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Debug.WriteLine(String, Object[])<ept id="p1">](xref:System.Diagnostics.Debug.WriteLine(System.String,System.Object[]))</ept>, which outputs a formatted message to trace listeners.</source>
          <target state="translated"><bpt id="p1">[</bpt>Debug.WriteLine(String, Object[])<ept id="p1">](xref:System.Diagnostics.Debug.WriteLine(System.String,System.Object[]))</ept>，將格式化的訊息輸出至追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Trace.TraceError(String, Object[])<ept id="p1">](xref:System.Diagnostics.Trace.TraceError(System.String,System.Object[]))</ept>, <bpt id="p2">[</bpt>Trace.TraceInformation(String, Object[])<ept id="p2">](xref:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[]))</ept>, and <bpt id="p3">[</bpt>Trace.TraceWarning(String, Object[])<ept id="p3">](xref:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[]))</ept> methods, which output formatted messages to trace listeners.</source>
          <target state="translated"><bpt id="p1">[</bpt>Trace.TraceError(String, Object[])<ept id="p1">](xref:System.Diagnostics.Trace.TraceError(System.String,System.Object[]))</ept>、<bpt id="p2">[</bpt>Trace.TraceInformation(String, Object[])<ept id="p2">](xref:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[]))</ept> 和 <bpt id="p3">[</bpt>Trace.TraceWarning(String, Object[])<ept id="p3">](xref:System.Diagnostics.Trace.TraceWarning(System.String,System.Object[]))</ept> 方法，將格式化的訊息輸出至追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>TraceSource.TraceInformation(String, Object[])<ept id="p1">](xref:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[]))</ept> method, which writes an informational method to trace listeners.</source>
          <target state="translated"><bpt id="p1">[</bpt>TraceSource.TraceInformation(String, Object[])<ept id="p1">](xref:System.Diagnostics.TraceSource.TraceInformation(System.String,System.Object[]))</ept> 方法，將告知性方法寫入至追蹤接聽項。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Composite Format String</source>
          <target state="translated">複合格式字串</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A composite format string and object list are used as arguments of methods that support the composite formatting feature.</source>
          <target state="translated">複合格式字串和物件清單會當做支援複合格式功能之方法的引數來使用。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A composite format string consists of zero or more runs of fixed text intermixed with one or more format items.</source>
          <target state="translated">複合格式字串是由零個或更多段與一個或多個格式項目混合的固定文字所組成，</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The fixed text is any string that you choose, and each format item corresponds to an object or boxed structure in the list.</source>
          <target state="translated">固定文字是您選擇的任何文字，而每個格式項目都會對應到清單內的一個物件或 boxed 結構。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The composite formatting feature returns a new result string where each format item is replaced by the string representation of the corresponding object in the list.</source>
          <target state="translated">複合格式功能將會傳回新的結果字串，其中每一個格式項目都會由清單內對應物件的字串表示來取代。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Consider the following [Format](xref:System.String.Format(System.String.Format(System.IFormatProvider,System.String,System.Object)) code fragment.</source>
          <target state="translated">請考慮下列 [Format](xref:System.String.Format(System.String.Format(System.IFormatProvider,System.String,System.Object)) 程式碼片段。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The fixed text is <ph id="ph1">`"Name = "`</ph> and <ph id="ph2">`", hours = "`</ph>.</source>
          <target state="translated">固定的文字為 <ph id="ph1">`"Name = "`</ph> 和 <ph id="ph2">`", hours = "`</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The format items are <ph id="ph1">`"{0}"`</ph>, whose index is 0, which corresponds to the object <ph id="ph2">`name`</ph> and <ph id="ph3">`"{1:hh}"`</ph>, whose index is 1, which corresponds to the object <ph id="ph4">`DateTime.Now`</ph>.</source>
          <target state="translated">格式項目為 <ph id="ph1">`"{0}"`</ph> (其索引為 0，且對應至物件 <ph id="ph2">`name`</ph>) 及 <ph id="ph3">`"{1:hh}"`</ph> (其索引為 1，且對應至物件 <ph id="ph4">`DateTime.Now`</ph>)。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Format Item Syntax</source>
          <target state="translated">格式項目語法</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Each format item takes the following form and consists of the following components:</source>
          <target state="translated">每個格式項目都會使用下列格式，並由下列元件所組成：</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">__</bpt>{<ept id="p1">__</ept><bpt id="p2">*</bpt>index<ept id="p2">*</ept>[,<bpt id="p3">*</bpt>alignment<ept id="p3">*</ept>][:<bpt id="p4">*</bpt>formatString<ept id="p4">*</ept>]<bpt id="p5">__</bpt>}<ept id="p5">__</ept></source>
          <target state="translated"><bpt id="p1">__</bpt>{<ept id="p1">__</ept><bpt id="p2">*</bpt>index<ept id="p2">*</ept>[,<bpt id="p3">*</bpt>alignment<ept id="p3">*</ept>][:<bpt id="p4">*</bpt>formatString<ept id="p4">*</ept>]<bpt id="p5">__</bpt>}<ept id="p5">__</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The matching braces ("{" and "}") are required.</source>
          <target state="translated">成對的大括號 ("{" 和 "}") 是必要的。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Index Component</source>
          <target state="translated">索引元件</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The mandatory <bpt id="p1">*</bpt>index<ept id="p1">*</ept> component, also called a parameter specifier, is a number starting from 0 that identifies a corresponding item in the list of objects.</source>
          <target state="translated">強制的 <bpt id="p1">*</bpt>index<ept id="p1">*</ept> 元件 (也稱為參數規範) 是用以識別物件清單中對應項目的數字 (從 0 開始)。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>That is, the format item whose parameter specifier is 0 formats the first object in the list, the format item whose parameter specifier is 1 formats the second object in the list, and so on.</source>
          <target state="translated">也就是說，參數規範為 0 的格式項目會格式化清單中的第一個物件，而參數規範為 1 的格式項目會格式化清單中的第二個物件，依此類推。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example includes four parameter specifiers, numbered zero through three, to represent prime numbers less than ten:</source>
          <target state="translated">下列範例包含四個參數規範 (編號為 0 到 3)，以表示小於 10 的質數：</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Multiple format items can refer to the same element in the list of objects by specifying the same parameter specifier.</source>
          <target state="translated">多個格式項目可以藉由指定相同參數規範來參考物件清單中的相同項目。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For example, you can format the same numeric value in hexadecimal, scientific, and number format by specifying a composite format string such as : "0x{0:X} {0:E} {0:N}", as the following example shows.</source>
          <target state="translated">例如，您可以指定複合格式字串 (例如："0x{0:X} {0:E} {0:N}") 來格式化十六進位、科學格式和數字格式的相同數值，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Each format item can refer to any object in the list.</source>
          <target state="translated">每個格式項目皆可參考清單內的任何物件。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, if there are three objects, you can format the second, first, and third object by specifying a composite format string like this: "{1} {0} {2}".</source>
          <target state="translated">例如，如果有三個物件，您可以指定複合格式字串 (如："{1} {0} {2}") 來格式化第二個、第一個和第三個物件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An object that is not referenced by a format item is ignored.</source>
          <target state="translated">不是格式項目所參考的物件會被忽略。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">[</bpt>FormatException<ept id="p1">](xref:System.FormatException)</ept> is thrown at runtime if a parameter specifier designates an item outside the bounds of the list of objects.</source>
          <target state="translated">如果參數規範指定超出物件清單範圍的項目，則會在執行階段擲回 <bpt id="p1">[</bpt>FormatException<ept id="p1">](xref:System.FormatException)</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Alignment Component</source>
          <target state="translated">對齊元件</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The optional <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> component is a signed integer indicating the preferred formatted field width.</source>
          <target state="translated">選擇性 <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> 元件為帶正負號的整數，表示慣用的格式化欄位寬度。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the value of <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> is less than the length of the formatted string, <bpt id="p2">*</bpt>alignment<ept id="p2">*</ept> is ignored and the length of the formatted string is used as the field width.</source>
          <target state="translated">如果 <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> 的值小於格式化字串的長度，則會忽略 <bpt id="p2">*</bpt>alignment<ept id="p2">*</ept> 並使用格式化字串的長度當做欄位寬度。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The formatted data in the field is right-aligned if <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> is positive and left-aligned if <bpt id="p2">*</bpt>alignment<ept id="p2">*</ept> is negative.</source>
          <target state="translated">如果 <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept> 為正數，欄位中的格式化資料會靠右對齊；如果 <bpt id="p2">*</bpt>alignment<ept id="p2">*</ept> 為負數，則會靠左對齊。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If padding is necessary, white space is used.</source>
          <target state="translated">如果填補有必要，則會使用泛空白字元 (White Space)。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The comma is required if <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept>  is specified.</source>
          <target state="translated">如果指定了 <bpt id="p1">*</bpt>alignment<ept id="p1">*</ept>，則需要逗號。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following example defines two arrays, one containing the names of employees and the other containing the hours they worked over a two-week period.</source>
          <target state="translated">下列範例會定義兩個陣列，一個包含員工的名稱，另一個包含他們在兩週內的工作時數。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The composite format string left-aligns the names in a 20-character field, and right-aligns their hours in a 5-character field.</source>
          <target state="translated">複合格式字串會在 20 個字元的欄位中，將名稱靠左對齊，並且在 5 個字元的欄位中，將其工作時數靠右對齊。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Note that the "N1" standard format string is also used to format the hours with one fractional digit.</source>
          <target state="translated">請注意，"N1" 標準格式字串也會用來格式化具有一個小數位數的時數。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Format String Component</source>
          <target state="translated">格式字串元件</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The optional <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> component is a format string that is appropriate for the type of object being formatted.</source>
          <target state="translated">選擇性 <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> 元件是一個格式字串，適用於將格式化的物件類型。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Specify a standard or custom numeric format string if the corresponding object is a numeric value, a standard or custom date and time format string if the corresponding object is a <bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept> object, or an <bpt id="p2">[</bpt>enumeration format string<ept id="p2">](enumeration-format.md)</ept> if the corresponding object is an enumeration value.</source>
          <target state="translated">如果對應的物件為數值，請指定標準或自訂數值格式字串；如果對應的物件為 <bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept> 物件，請指定標準或自訂日期和時間格式字串；或者，如果對應的物件為列舉值，請指定<bpt id="p2">[</bpt>列舉格式字串<ept id="p2">](enumeration-format.md)</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is not specified, the general ("G") format specifier for a numeric, date and time, or enumeration type is used.</source>
          <target state="translated">如果未指定 <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>，則會使用數值、日期和時間或列舉類型的一般 ("G") 格式規範。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The colon is required if <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> is specified.</source>
          <target state="translated">如果指定 <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept>，則需要冒號。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The following table lists types or categories of types in the .NET Framework class library that support a predefined set of format strings, and provides links to the topics that list the supported format strings.</source>
          <target state="translated">下表列出 .NET Framework 類別庫中支援預先定義之格式字串的類型或類型分類，並提供列出支援之格式字串的主題連結。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Note that string formatting is an extensible mechanism that makes it possible to define new format strings for all existing types as well as to define a set of format strings supported by an application-defined type.</source>
          <target state="translated">請注意，字串格式是一種可延伸機制，可讓為所有現有類型定義新的格式字串，以及定義一組應用程式定義類型所支援的格式字串。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information, see the <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> and <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> interface topics.</source>
          <target state="translated">如需詳細資訊，請參閱 <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> 和 <bpt id="p2">[</bpt>ICustomFormatter<ept id="p2">](xref:System.ICustomFormatter)</ept> 介面主題。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Type or type category</source>
          <target state="translated">類型或類型分類</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>See</source>
          <target state="translated">請參閱</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Date and time types (<bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept>, <bpt id="p2">[</bpt>DateTimeOffset<ept id="p2">](xref:System.DateTimeOffset)</ept>)</source>
          <target state="translated">日期和時間類型 (<bpt id="p1">[</bpt>DateTime<ept id="p1">](xref:System.DateTime)</ept>、<bpt id="p2">[</bpt>DateTimeOffset<ept id="p2">](xref:System.DateTimeOffset)</ept>)</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](standard-datetime.md)</ept>, <bpt id="p2">[</bpt>Custom date and time format strings<ept id="p2">](custom-datetime.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準日期與時間格式字串<ept id="p1">](standard-datetime.md)</ept>、<bpt id="p2">[</bpt>自訂日期與時間格式字串<ept id="p2">](custom-datetime.md)</ept></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Enumeration types (all types derived from <bpt id="p1">[</bpt>System.Enum<ept id="p1">](xref:System.Enum)</ept>)</source>
          <target state="translated">列舉類型 (衍生自 <bpt id="p1">[</bpt>System.Enum<ept id="p1">](xref:System.Enum)</ept> 的所有類型)</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](enumeration-format.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](enumeration-format.md)</ept></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Numeric types (<bpt id="p1">[</bpt>BigInteger<ept id="p1">](xref:System.Numerics.BigInteger)</ept>, <bpt id="p2">[</bpt>Byte<ept id="p2">](xref:System.Byte)</ept>, <bpt id="p3">[</bpt>Decimal<ept id="p3">](xref:System.Decimal)</ept>, <bpt id="p4">[</bpt>Double<ept id="p4">](xref:System.Double)</ept>, <bpt id="p5">[</bpt>Int16<ept id="p5">](xref:System.Int16)</ept>, <bpt id="p6">[</bpt>Int32<ept id="p6">](xref:System.Int32)</ept>, <bpt id="p7">[</bpt>Int64<ept id="p7">](xref:System.Int64)</ept>, <bpt id="p8">[</bpt>SByte<ept id="p8">](xref:System.SByte)</ept>, <bpt id="p9">[</bpt>Single<ept id="p9">](xref:System.Single)</ept>, <bpt id="p10">[</bpt>UInt16<ept id="p10">](xref:System.UInt16)</ept>, <bpt id="p11">[</bpt>UInt32<ept id="p11">](xref:System.UInt32)</ept>, <bpt id="p12">[</bpt>UInt64<ept id="p12">](xref:System.UInt64)</ept>)</source>
          <target state="translated">數值類型 (<bpt id="p1">[</bpt>BigInteger<ept id="p1">](xref:System.Numerics.BigInteger)</ept>、<bpt id="p2">[</bpt>Byte<ept id="p2">](xref:System.Byte)</ept>、<bpt id="p3">[</bpt>Decimal<ept id="p3">](xref:System.Decimal)</ept>、<bpt id="p4">[</bpt>Double<ept id="p4">](xref:System.Double)</ept>、<bpt id="p5">[</bpt>Int16<ept id="p5">](xref:System.Int16)</ept>、<bpt id="p6">[</bpt>Int32<ept id="p6">](xref:System.Int32)</ept>、<bpt id="p7">[</bpt>Int64<ept id="p7">](xref:System.Int64)</ept>、<bpt id="p8">[</bpt>SByte<ept id="p8">](xref:System.SByte)</ept>、<bpt id="p9">[</bpt>Single<ept id="p9">](xref:System.Single)</ept>、<bpt id="p10">[</bpt>UInt16<ept id="p10">](xref:System.UInt16)</ept>、<bpt id="p11">[</bpt>UInt32<ept id="p11">](xref:System.UInt32)</ept>、<bpt id="p12">[</bpt>UInt64<ept id="p12">](xref:System.UInt64)</ept>)</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](standard-numeric.md)</ept>, <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](custom-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](standard-numeric.md)</ept>、<bpt id="p2">[</bpt>自訂數值格式字串<ept id="p2">](custom-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Guid<ept id="p1">](xref:System.Guid)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guid<ept id="p1">](xref:System.Guid)</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Guid.ToString(String)<ept id="p1">](xref:System.Guid.ToString(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Guid.ToString(String)<ept id="p1">](xref:System.Guid.ToString(System.String))</ept></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>TimeSpan<ept id="p1">](xref:System.TimeSpan)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>TimeSpan<ept id="p1">](xref:System.TimeSpan)</ept></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard TimeSpan Format Strings<ept id="p1">](standard-timespan.md)</ept>, <bpt id="p2">[</bpt>Custom TimeSpan Format Strings<ept id="p2">](custom-timespan.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準 TimeSpan 格式字串<ept id="p1">](standard-timespan.md)</ept>、<bpt id="p2">[</bpt>自訂 TimeSpan 格式字串<ept id="p2">](custom-timespan.md)</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Escaping Braces</source>
          <target state="translated">逸出大括號</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Opening and closing braces are interpreted as starting and ending a format item.</source>
          <target state="translated">左右大括號會被解譯成格式項目的開頭與結尾。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Consequently, you must use an escape sequence to display a literal opening brace or closing brace.</source>
          <target state="translated">因此，您必須使用逸出序列 (Escape Sequence)，才能顯示字面上的左右大括號。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Specify two opening braces ("{{") in the fixed text to display one opening brace ("{"), or two closing braces ("}}") to display one closing brace ("}").</source>
          <target state="translated">請在固定文字中指定兩個左邊的大括號 ("{{")，以顯示一個左邊的大括號 ("{")，或者指定兩個右邊的大括號 ("}}") 來顯示一個右邊的大括號 ("}")。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Braces in a format item are interpreted sequentially in the order they are encountered.</source>
          <target state="translated">格式項目中的括號會以它們出現的順序依序解譯，</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Interpreting nested braces is not supported.</source>
          <target state="translated">但是不支援解譯巢狀大括號。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The way escaped braces are interpreted can lead to unexpected results.</source>
          <target state="translated">解譯逸出括號的方式，可能會造成無法預期的結果。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For example, consider the format item "{{{0:D}}}", which is intended to display an opening brace, a numeric value formatted as a decimal number, and a closing brace.</source>
          <target state="translated">例如，格式項目 "{{{0:D}}}" 原本是要顯示一個左邊大括號、一個格式化為十進位的數值和一個右邊大括號。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>However, the format item is actually interpreted in the following manner:</source>
          <target state="translated">然而，格式項目實際會以下列方式來解譯：</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The first two opening braces ("{{") are escaped and yield one opening brace.</source>
          <target state="translated">前面兩個左邊大括號 ("{{") 逸出，產生一個左邊大括號。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The next three characters ("{0:") are interpreted as the start of a format item.</source>
          <target state="translated">接下來的三個字元 ("{0:") 會解譯成格式項目的開頭。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The next character ("D") would be interpreted as the Decimal standard numeric format specifier, but the next two escaped braces ("}}") yield a single brace.</source>
          <target state="translated">再下一個字元 ("D") 可能解譯成十進位 (Decimal) 標準數值格式規範，但後面兩個逸出的右邊大括號 ("}}") 會產生一個大括號。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Because the resulting string ("D}") is not a standard numeric format specifier, the resulting string is interpreted as a custom format string that means display the literal string "D}".</source>
          <target state="translated">由於結果字串 ("D}") 並非標準的數值格式規範，因此，結果字串會被解譯成自訂格式字串，表示會顯示成常值字串 "D}"。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The last brace ("}") is interpreted as the end of the format item.</source>
          <target state="translated">最後的大括號 ("}") 會被解譯成格式項目的結尾。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The final result that is displayed is the literal string, "{D}".</source>
          <target state="translated">最後顯示的結果會是常值字串 "{D}"，</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The numeric value that was to be formatted is not displayed.</source>
          <target state="translated">而要進行格式化的數值則不會顯示出來。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>One way to write your code to avoid misinterpreting escaped braces and format items is to format the braces and format item separately.</source>
          <target state="translated">撰寫程式碼時，能夠避免錯誤解譯逸出大括號和格式項目的方法，就是個別地格式化大括號和格式項目。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>That is, in the first format operation display a literal opening brace, in the next operation display the result of the format item, then in the final operation display a literal closing brace.</source>
          <target state="translated">也就是說，在第一個格式化作業中顯示常值的左邊大括號，在下一個作業中顯示格式項目的結果，接著在最終作業中顯示常值的右邊大括號。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The following example illustrates this approach.</source>
          <target state="translated">下列範例將示範這個方法。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Processing Order</source>
          <target state="translated">處理順序</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If the call to the composite formatting method includes an <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument whose value is not null, the runtime calls its <bpt id="p2">[</bpt>IFormatProvider.GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> method to request an <bpt id="p3">[</bpt>ICustomFormatter<ept id="p3">](xref:System.ICustomFormatter)</ept> implementation.</source>
          <target state="translated">如果對複合格式化方法的呼叫包含的 <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 引數其值不是 null，則執行階段會呼叫其 <bpt id="p2">[</bpt>IFormatProvider.GetFormat<ept id="p2">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 方法要求 <bpt id="p3">[</bpt>ICustomFormatter<ept id="p3">](xref:System.ICustomFormatter)</ept> 實作。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If the method is able to return an <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> implementation, it is cached for later use.</source>
          <target state="translated">如果方法能夠傳回 <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> 實作，則會將它快取以供日後使用。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Each value in the parameter list that corresponds to a format item is converted to a string by performing the following steps.</source>
          <target state="translated">參數清單中每個對應至格式項目的值都會藉由執行下列步驟轉換為字串。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>If any condition in the first three steps is true, the string representation of the value is returned in that step, and subsequent steps are not executed.</source>
          <target state="translated">如果在前三個步驟中有任何條件成立，則會在該步驟傳回值的字串表示，而不會再執行後續步驟。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>If the value to be formatted is <ph id="ph1">`null`</ph>, an empty string ("") is returned.</source>
          <target state="translated">如果要格式化的值是 <ph id="ph1">`null`</ph>，則會傳回空字串 ("")。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>If an <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> implementation is available, the runtime calls its <bpt id="p2">[</bpt>Format<ept id="p2">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> method.</source>
          <target state="translated">如果可以使用 <bpt id="p1">[</bpt>ICustomFormatter<ept id="p1">](xref:System.ICustomFormatter)</ept> 實作，則執行階段會呼叫其 <bpt id="p2">[</bpt>Format<ept id="p2">](xref:System.ICustomFormatter.Format(System.String,System.Object,System.IFormatProvider))</ept> 方法。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>It passes the method the format item's <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> value, if one is present, or <ph id="ph1">`null`</ph> if it is not, along with the <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> implementation.</source>
          <target state="translated">它會將格式項目的 <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> 值 (如果有的話) 傳遞給方法；如果沒有的話，則將 <ph id="ph1">`null`</ph> 連同 <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> 實作一起傳遞。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If the value implements the <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> interface, the interface's <bpt id="p2">[</bpt>ToString(String,IFormatProvider)<ept id="p2">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> method is called.</source>
          <target state="translated">如果值實作 <bpt id="p1">[</bpt>IFormattable<ept id="p1">](xref:System.IFormattable)</ept> 介面，則會呼叫介面的 <bpt id="p2">[</bpt>ToString(String,IFormatProvider)<ept id="p2">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> 方法。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The method is passed the <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> value, if one is present in the format item, or <ph id="ph1">`null`</ph> if it is not.</source>
          <target state="translated">如果格式項目中有 <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> 值的話，就會將該值傳遞給方法；如果沒有的話，則會傳遞 <ph id="ph1">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument is determined as follows:</source>
          <target state="translated"><bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 引數的判斷如下：</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For a numeric value, if a composite formatting method with a non-null <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument is called, the runtime requests a <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> object from its <bpt id="p3">[</bpt>IFormatProvider.GetFormat<ept id="p3">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> method.</source>
          <target state="translated">對於數值，如果呼叫具有非 null <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 引數的複合格式化方法，則執行階段會從其 <bpt id="p3">[</bpt>IFormatProvider.GetFormat<ept id="p3">](xref:System.IFormatProvider.GetFormat(System.Type))</ept> 方法要求 <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> 物件。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If it is unable to supply one, if the value of the argument is <ph id="ph1">`null`</ph>, or if the composite formatting method does not have an <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> parameter, the [NumberFormatInfo](xref:System.Globalization.NumberFormatInfo object for the current thread culture is used.</source>
          <target state="translated">如果無法提供、如果引數的值為 <ph id="ph1">`null`</ph>，或者如果複合格式化方法沒有 <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 參數，則會使用目前執行緒文化特性的 [NumberFormatInfo](xref:System.Globalization.NumberFormatInfo 物件。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>For a date and time value, if a composite formatting method with a non-null <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument is called, the runtime requests a <bpt id="p2">[</bpt>DateTimeFormatInfo<ept id="p2">](xref:System.Globalization.DateTimeFormatInfo)</ept> object from its [IFormatProvider.GetFormat](xref:System.IFormatProvider._GetFormat(System.Type) method.</source>
          <target state="translated">對於日期和時間值，如果呼叫具有非 null <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 引數的複合格式化方法，則執行階段會從其 [IFormatProvider.GetFormat](xref:System.IFormatProvider._GetFormat(System.Type) 方法要求 <bpt id="p2">[</bpt>DateTimeFormatInfo<ept id="p2">](xref:System.Globalization.DateTimeFormatInfo)</ept> 物件。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If it is unable to supply one, if the value of the argument is <ph id="ph1">`null`</ph>, or if the composite formatting method does not have an <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> parameter, the <bpt id="p2">[</bpt>DateTimeFormatInfo<ept id="p2">](xref:System.Globalization.DateTimeFormatInfo)</ept> object for the current thread culture is used.</source>
          <target state="translated">如果無法提供、如果引數的值為 <ph id="ph1">`null`</ph>，或者如果複合格式化方法沒有 <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 參數，則會使用目前執行緒文化特性的 <bpt id="p2">[</bpt>DateTimeFormatInfo<ept id="p2">](xref:System.Globalization.DateTimeFormatInfo)</ept> 物件。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For objects of other types, if a composite formatting is called with an <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> argument, its value (including a <ph id="ph1">`null`</ph>, if no <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> object is supplied) is passed directly to the <bpt id="p3">[</bpt>IFormattable.ToString<ept id="p3">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> implementation.</source>
          <target state="translated">對於其他類型的物件，如果使用 <bpt id="p1">[</bpt>IFormatProvider<ept id="p1">](xref:System.IFormatProvider)</ept> 引數呼叫複合格式，其值 (包括未提供 <bpt id="p2">[</bpt>IFormatProvider<ept id="p2">](xref:System.IFormatProvider)</ept> 物件時的 <ph id="ph1">`null`</ph>) 會直接傳遞至 <bpt id="p3">[</bpt>IFormattable.ToString<ept id="p3">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> 實作。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Otherwise, a <bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> object that represents the current thread culture is passed to the <bpt id="p2">[</bpt>IFormattable.ToString<ept id="p2">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> implementation.</source>
          <target state="translated">否則，表示目前執行緒文化特性的 <bpt id="p1">[</bpt>CultureInfo<ept id="p1">](xref:System.Globalization.CultureInfo)</ept> 物件會傳遞至 <bpt id="p2">[</bpt>IFormattable.ToString<ept id="p2">](xref:System.IFormattable.ToString(System.String,System.IFormatProvider))</ept> 實作。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The type's parameterless <ph id="ph1">`ToString`</ph> method, which either overrides <bpt id="p1">[</bpt>Object.ToString()<ept id="p1">](xref:System.Object.ToString)</ept> or inherits the behavior of its base class, is called.</source>
          <target state="translated">呼叫類型的無參數 <ph id="ph1">`ToString`</ph> 方法，該方法會覆寫 <bpt id="p1">[</bpt>Object.ToString()<ept id="p1">](xref:System.Object.ToString)</ept> 或繼承其基底類別的行為。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>In this case, the format string specified by the <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> component in the format item, if it is present, is ignored.</source>
          <target state="translated">在這種情況下，會忽略 <bpt id="p1">*</bpt>formatString<ept id="p1">*</ept> 元件在格式項目中指定的格式字串 (如果有的話)。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Alignment is applied after the preceding steps have been performed.</source>
          <target state="translated">對齊會在已經執行前面的步驟之後套用。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Code Examples</source>
          <target state="translated">程式碼範例</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The following example shows one string created using composite formatting and another created using an object's <ph id="ph1">`ToString`</ph> method.</source>
          <target state="translated">下列範例顯示一個使用複合格式建立的字串，以及另一個使用物件的 <ph id="ph1">`ToString`</ph> 方法建立的字串。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Both types of formatting produce equivalent results.</source>
          <target state="translated">這兩個類型的格式化產生相等結果。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Assuming that the current day is a Thursday in May, the value of both strings in the preceding example is <ph id="ph1">`Thursday May`</ph> in the U.S. English culture.</source>
          <target state="translated">假設目前日期是五月的星期四，前面範例中兩個字串的值在美國英文文化特性中都是 <ph id="ph1">`Thursday May`</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept> exposes the same functionality as <bpt id="p2">[</bpt>String.Format<ept id="p2">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept> 會公開與 <bpt id="p2">[</bpt>String.Format<ept id="p2">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> 相同的功能。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The only difference between the two methods is that <bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> returns its result as a string, while <bpt id="p2">[</bpt>Console.WriteLine<ept id="p2">](xref:System.Console.WriteLine)</ept> writes the result to the output stream associated with the <bpt id="p3">[</bpt>Console<ept id="p3">](xref:System.Console)</ept> object.</source>
          <target state="translated">這兩種方法唯一的差別在於，<bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> 會以字串形式傳回結果，而 <bpt id="p2">[</bpt>Console.WriteLine<ept id="p2">](xref:System.Console.WriteLine)</ept> 則會將結果寫入至與 <bpt id="p3">[</bpt>Console<ept id="p3">](xref:System.Console)</ept> 物件關聯的輸出資料流。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept> method to format the value of <ph id="ph1">`MyInt`</ph> to a currency value.</source>
          <target state="translated">下列範例使用 <bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept> 方法，將 <ph id="ph1">`MyInt`</ph> 的值格式化為貨幣值。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The following example demonstrates formatting multiple objects, including formatting one object two different ways.</source>
          <target state="translated">下列範例示範多個物件的格式化，其中包括使用兩種不同方式來格式化一個物件。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the use of alignment in formatting.</source>
          <target state="translated">下列範例示範格式設定中的對齊用法。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The arguments that are formatted are placed between vertical bar characters (|) to highlight the resulting alignment.</source>
          <target state="translated">格式化的引數會放在兩個垂直線 (|) 字元之間以強調所產生的對齊。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Console.WriteLine<ept id="p1">](xref:System.Console.WriteLine)</ept></target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Format<ept id="p1">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting types<ept id="p1">](formatting-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>格式化類型<ept id="p1">](formatting-types.md)</ept></target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard date and time format strings<ept id="p1">](standard-datetime.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準日期與時間格式字串<ept id="p1">](standard-datetime.md)</ept></target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom date and time format strings<ept id="p1">](custom-datetime.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>自訂日期與時間格式字串<ept id="p1">](custom-datetime.md)</ept></target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Enumeration format strings<ept id="p1">](enumeration-format.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>列舉格式字串<ept id="p1">](enumeration-format.md)</ept></target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard numeric format strings<ept id="p1">](standard-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準數值格式字串<ept id="p1">](standard-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom numeric format strings<ept id="p1">](custom-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>自訂數值格式字串<ept id="p1">](custom-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard TimeSpan format strings<ept id="p1">](standard-timespan.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>標準 TimeSpan 格式字串<ept id="p1">](standard-timespan.md)</ept></target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Custom TimeSpan format strings<ept id="p1">](custom-timespan.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>自訂 TimeSpan 格式字串<ept id="p1">](custom-timespan.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>