<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6976bb49e9124a787abb1c0a2791cda86dac1007</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\garbagecollection\latency.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8dfaa3b99738dc0b9d32615df71fcb0f0cbb405c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">abe51ed190f00e8f43c499ae28f33835139bfd41</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Latency modes</source>
          <target state="translated">延遲模式</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Latency modes</source>
          <target state="translated">延遲模式</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Latency modes</source>
          <target state="translated">延遲模式</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To reclaim objects, the garbage collector must stop all the executing threads in an application.</source>
          <target state="translated">為了回收物件，記憶體回收行程必須停止應用程式中所有正在執行的執行緒。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In some situations, such as when an application retrieves data or displays content, a full garbage collection can occur at a critical time and impede performance.</source>
          <target state="translated">在某些情況下，例如當應用程式擷取資料或顯示內容時，完整記憶體回收會在關鍵時刻進行，而妨礙效能。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can adjust the intrusiveness of the garbage collector by setting the <bpt id="p1">[</bpt>GCSettings.LatencyMode<ept id="p1">](xref:System.Runtime.GCSettings.LatencyMode)</ept> property to one of the <bpt id="p2">[</bpt>System.Runtime.GCLatencyMode<ept id="p2">](xref:System.Runtime.GCLatencyMode)</ept> values.</source>
          <target state="translated">您可以將 <bpt id="p1">[</bpt>GCSettings.LatencyMode<ept id="p1">](xref:System.Runtime.GCSettings.LatencyMode)</ept> 屬性設定為其中一個 <bpt id="p2">[</bpt>System.Runtime.GCLatencyMode<ept id="p2">](xref:System.Runtime.GCLatencyMode)</ept> 值，來調整記憶體回收行程的干擾程度。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Latency refers to the time that the garbage collector intrudes in your application.</source>
          <target state="translated">延遲指的是記憶體回收行程干擾應用程式的時間。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>During low latency periods, the garbage collector is more conservative and less intrusive in reclaiming objects.</source>
          <target state="translated">在低延遲期間，記憶體回收行程會更加保守，也較不干擾啟用物件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Runtime.GCLatencyMode<ept id="p1">](xref:System.Runtime.GCLatencyMode)</ept> enumeration provides two low latency settings:</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Runtime.GCLatencyMode<ept id="p1">](xref:System.Runtime.GCLatencyMode)</ept> 列舉提供兩個低延遲設定：</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LowLatency<ept id="p1">](xref:System.Runtime.GCLatencyMode.LowLatency)</ept> suppresses generation 2 collections and performs only generation 0 and 1 collections.</source>
          <target state="translated"><bpt id="p1">[</bpt>LowLatency<ept id="p1">](xref:System.Runtime.GCLatencyMode.LowLatency)</ept> 會隱藏層代 2 回收，並且只執行層代 0 和 1 回收。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>It can be used only for short periods of time.</source>
          <target state="translated">它只適合短時間使用。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Over longer periods, if the system is under memory pressure, the garbage collector will trigger a collection, which can briefly pause the application and disrupt a time-critical operation.</source>
          <target state="translated">經過一段較長的時間後，如果系統記憶體吃緊，則記憶體回收行程將會觸發回收，該回收可能會短暫暫停應用程式，並且中斷時間關鍵的作業。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This setting is available only for workstation garbage collection.</source>
          <target state="translated">這項設定僅適用於工作站記憶體回收。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SustainedLowLatency<ept id="p1">](xref:System.Runtime.GCLatencyMode.SustainedLowLatency)</ept> suppresses foreground generation 2 collections and performs only generation 0, 1, and background generation 2 collections.</source>
          <target state="translated"><bpt id="p1">[</bpt>SustainedLowLatency<ept id="p1">](xref:System.Runtime.GCLatencyMode.SustainedLowLatency)</ept> 會隱藏前景層代 2 回收，並且只執行層代 0、1 和背景層代 2 回收。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It can be used for longer periods of time, and is available for both workstation and server garbage collection.</source>
          <target state="translated">它可以長時間使用，並且可用於工作站和伺服器記憶體回收。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This setting cannot be used if <bpt id="p1">[</bpt>concurrent garbage collection<ept id="p1">](https://msdn.microsoft.com/library/yhwwzef8.aspx)</ept> is disabled.</source>
          <target state="translated">如果已停用<bpt id="p1">[</bpt>並行記憶體回收<ept id="p1">](https://msdn.microsoft.com/library/yhwwzef8.aspx)</ept>，則無法使用這個設定。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>During low latency periods, generation 2 collections are suppressed unless the following occurs:</source>
          <target state="translated">在低延遲期間，會隱藏層代 2 回收，除非發生下列情況：</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The system receives a low memory notification from the operating system.</source>
          <target state="translated">系統從作業系統接收到記憶體不足的通知。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Your application code induces a collection by calling the <bpt id="p1">[</bpt>GC.Collect<ept id="p1">](xref:System.GC.Collect(System.Int32))</ept> method and specifying 2 for the generation parameter.</source>
          <target state="translated">應用程式碼會呼叫 <bpt id="p1">[</bpt>GC.Collect<ept id="p1">](xref:System.GC.Collect(System.Int32))</ept> 方法並將 generation 參數指定為 2 來進行回收。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following table lists the application scenarios for using the <bpt id="p1">[</bpt>GCLatencyMode<ept id="p1">](xref:System.Runtime.GCLatencyMode)</ept> values.</source>
          <target state="translated">下表列出使用 <bpt id="p1">[</bpt>GCLatencyMode<ept id="p1">](xref:System.Runtime.GCLatencyMode)</ept> 值的應用程式案例。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Latency mode</source>
          <target state="translated">延遲模式</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Application scenarios</source>
          <target state="translated">應用程式案例</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Batch<ept id="p1">](xref:System.Runtime.GCLatencyMode.Batch)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Batch<ept id="p1">](xref:System.Runtime.GCLatencyMode.Batch)</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For applications that have no UI or server-side operations.</source>
          <target state="translated">對於沒有 UI 或伺服器端作業的應用程式。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This is the default mode when <bpt id="p1">[</bpt>concurrent garbage collection<ept id="p1">](https://msdn.microsoft.com/library/yhwwzef8.aspx)</ept> is disabled.</source>
          <target state="translated">這是<bpt id="p1">[</bpt>並行記憶體回收<ept id="p1">](https://msdn.microsoft.com/library/yhwwzef8.aspx)</ept>停用時的預設模式。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Interactive<ept id="p1">](xref:System.Runtime.GCLatencyMode.Interactive)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Interactive<ept id="p1">](xref:System.Runtime.GCLatencyMode.Interactive)</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For most applications that have a UI.</source>
          <target state="translated">對於大部分有使用者介面的應用程式，</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For applications that have no UI or server-side operations.</source>
          <target state="translated">對於沒有 UI 或伺服器端作業的應用程式。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This is the default mode when <bpt id="p1">[</bpt>concurrent garbage collection<ept id="p1">](https://msdn.microsoft.com/library/yhwwzef8.aspx)</ept> is enabled.</source>
          <target state="translated">這是<bpt id="p1">[</bpt>並行記憶體回收<ept id="p1">](https://msdn.microsoft.com/library/yhwwzef8.aspx)</ept>啟用時的預設模式。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LowLatency<ept id="p1">](xref:System.Runtime.GCLatencyMode.LowLatency)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>LowLatency<ept id="p1">](xref:System.Runtime.GCLatencyMode.LowLatency)</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For applications that have short-term, time-sensitive operations during which interruptions from the garbage collector could be disruptive.</source>
          <target state="translated">對於具有短期、對時間敏感作業的應用程式，其執行期間可能受到記憶體回收行程中斷的干擾。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For example, applications that do animation rendering or data acquisition functions.</source>
          <target state="translated">例如，應用程式使用動畫呈現或資料擷取的函式。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>SustainedLowLatency<ept id="p1">](xref:System.Runtime.GCLatencyMode.SustainedLowLatency)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>SustainedLowLatency<ept id="p1">](xref:System.Runtime.GCLatencyMode.SustainedLowLatency)</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For applications that have time-sensitive operations for a contained but potentially longer duration of time during which interruptions from the garbage collector could be disruptive.</source>
          <target state="translated">適合的應用程式具有對時間敏感的作業，這些作業可能長時間持續執行，且這段執行時間內可能經常受到記憶體回收行程中斷的干擾。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For example, applications that need quick response times as market data changes during trading hours.</source>
          <target state="translated">例如，因為交易時間內市場資料不斷變化，而需要迅速回應的應用程式。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This mode results in a larger managed heap size than other modes.</source>
          <target state="translated">這個模式會所產生的 Managed 堆積大小會比其他模式更大。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Because it does not compact the managed heap, higher fragmentation is possible.</source>
          <target state="translated">由於它不會壓縮 Managed 堆積，因此磁碟可能會高度分割。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Ensure that sufficient memory is available.</source>
          <target state="translated">確定有足夠的記憶體可供使用。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Guidelines for Using Low Latency</source>
          <target state="translated">使用低延遲的指導方針</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When you use <bpt id="p1">[</bpt>LowLatency<ept id="p1">](xref:System.Runtime.GCLatencyMode.LowLatency)</ept> mode, consider the following guidelines:</source>
          <target state="translated">當您使用 <bpt id="p1">[</bpt>LowLatency<ept id="p1">](xref:System.Runtime.GCLatencyMode.LowLatency)</ept> 模式時，請考慮下列指導方針：</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Keep the period of time in low latency as short as possible.</source>
          <target state="translated">盡可能縮短這段低延遲的時間。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Avoid allocating high amounts of memory during low latency periods.</source>
          <target state="translated">請避免在低延遲期間配置大量記憶體。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Low memory notifications can occur because garbage collection reclaims fewer objects.</source>
          <target state="translated">因為記憶體回收較少物件時，會造成記憶體不足的通知。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>While in the low latency mode, minimize the number of allocations you make, in particular allocations onto the Large Object Heap and pinned objects.</source>
          <target state="translated">在低延遲模式時，盡量減少配置數目，特別是配置到大型物件堆積和 Pin 物件的數目。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Be aware of threads that could be allocating.</source>
          <target state="translated">請注意無法配置的執行緒。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Because the <bpt id="p1">[</bpt>LatencyMode<ept id="p1">](xref:System.Runtime.GCSettings.LatencyMode)</ept> property setting is process-wide, you could generate an <bpt id="p2">[</bpt>OutOfMemoryException<ept id="p2">](xref:System.OutOfMemoryException)</ept> on any thread that may be allocating.</source>
          <target state="translated">因為 <bpt id="p1">[</bpt>LatencyMode<ept id="p1">](xref:System.Runtime.GCSettings.LatencyMode)</ept> 屬性設定為整個處理序，或許會在可能配置的任何執行緒中產生 <bpt id="p2">[</bpt>OutOfMemoryException<ept id="p2">](xref:System.OutOfMemoryException)</ept>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You can force generation 2 collections during a low latency period by calling the <bpt id="p1">[</bpt>GC.Collect(Int32, GCCollectionMode)<ept id="p1">](xref:System.GC.Collect(System.Int32,System.GCCollectionMode))</ept> method.</source>
          <target state="translated">您也可以呼叫 <bpt id="p1">[</bpt>GC.Collect(Int32, GCCollectionMode)<ept id="p1">](xref:System.GC.Collect(System.Int32,System.GCCollectionMode))</ept> 方法，在低延遲期間強制層代 2 回收。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.GC<ept id="p1">](xref:System.GC)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.GC<ept id="p1">](xref:System.GC)</ept></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Induced Collections<ept id="p1">](induced.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>引發的收集<ept id="p1">](induced.md)</ept></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Garbage collection in .NET<ept id="p1">](index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>.NET 中的記憶體回收<ept id="p1">](index.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>