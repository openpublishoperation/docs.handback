<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">062bb3ec3c5a3baac05af76b9d2d7bcc74fa2573</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\strip-characters.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42f24917c29da7da8d677f0366d89cd81072bed9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81f494694fc06dc879d03d4ff49c4d7ae007c88c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: strip invalid characters from a string</source>
          <target state="translated">如何：從字串中刪除無效的字元</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to strip invalid characters from a string</source>
          <target state="translated">如何：從字串中刪除無效的字元</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>How to: strip invalid characters from a string</source>
          <target state="translated">如何：從字串中刪除無效的字元</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following example uses the static <bpt id="p1">[</bpt>Regex.Replace<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan))</ept> method to strip invalid characters from a string.</source>
          <target state="translated">下列範例會使用靜態 <bpt id="p1">[</bpt>Regex.Replace<ept id="p1">](xref:System.Text.RegularExpressions.Regex.Replace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.TimeSpan))</ept> 方法，從字串中去除無效的字元。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">`CleanInput`</ph> method defined in this example to strip potentially harmful characters that have been entered into a text field that accepts user input.</source>
          <target state="translated">您可以使用此範例中定義的 <ph id="ph1">`CleanInput`</ph> 方法，去除使用者在文字欄位中可能已輸入的有害字元。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In this case, <ph id="ph1">`CleanInput`</ph> strips out all nonalphanumeric characters except periods (.), at symbols <ph id="ph2">(@),</ph> and hyphens (-), and returns the remaining string.</source>
          <target state="translated">在此情況下，<ph id="ph1">`CleanInput`</ph> 會去除句點 (.)、符號 (<ph id="ph2">(@),</ph>) 及連字號 (-) 以外的所有非英數字元，並傳回剩餘的字串。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>However, you can modify the regular expression pattern so that it strips out any characters that should not be included in an input string.</source>
          <target state="translated">不過，您可以修改規則運算式模式，讓它去除輸入字串中不應包含的任何字元。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The regular expression pattern <ph id="ph1">`[^\w\.@-]`</ph> matches any character that is not a word character, a period, an <ph id="ph2">@</ph> symbol, or a hyphen.</source>
          <target state="translated">規則運算式模式 <ph id="ph1">`[^\w\.@-]`</ph> 會比對任何非文字字元的字元、句號、<ph id="ph2">@</ph> 符號或連字號。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A word character is any letter, decimal digit, or punctuation connector such as an underscore.</source>
          <target state="translated">文字字元是指任何字母、十進位數字或底線這類標點符號連接子。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Any character that matches this pattern is replaced by <bpt id="p1">[</bpt>String.Empty<ept id="p1">](xref:System.String.Empty)</ept>, which is the string defined by the replacement pattern.</source>
          <target state="translated">如果任何字元符合這個模式，就會將其取代為 <bpt id="p1">[</bpt>String.Empty<ept id="p1">](xref:System.String.Empty)</ept> (這是由取代模式所定義的字串)。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To allow additional characters in user input, add those characters to the character class in the regular expression pattern.</source>
          <target state="translated">若要允許使用者輸入其他字元，可將這些字元新增至規則運算式模式中的字元類別。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For example, the regular expression pattern <ph id="ph1">`[^\w\.@-\\%]`</ph>also allows a percentage symbol and a backslash in an input string.</source>
          <target state="translated">例如，規則運算式模式 <ph id="ph1">`[^\w\.@-\\%]`</ph> 也允許在輸入字串中使用百分比符號與反斜線。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET regular expressions<ept id="p1">](regular-expressions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>.NET 規則運算式<ept id="p1">](regular-expressions.md)</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Regular expression examples<ept id="p1">](regex-examples.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>規則運算式範例<ept id="p1">](regex-examples.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>