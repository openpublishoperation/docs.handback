<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9fa8cb3c97a1e23a863296c828c82b240e9ab5db</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\functional-construction-linq-to-xml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ed607e06ca3cb5077953381eba2871bfb39aa4b2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">80886e65c4dac7444c1853bbc5fe4b7d0a099c50</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Functional Construction (LINQ to XML) (Visual Basic) | Microsoft Docs</source>
          <target state="translated">功能建構 (LINQ to XML) (Visual Basic) |Microsoft 文件</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Functional Construction (LINQ to XML) (Visual Basic)</source>
          <target state="translated">功能建構 (LINQ to XML) (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> provides a powerful way to create XML elements called <bpt id="p1">*</bpt>functional construction<ept id="p1">*</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>提供強大的方式，來建立 XML 項目稱為<bpt id="p1">*</bpt>功能結構<ept id="p1">*</ept>。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Functional construction is the ability to create an XML tree in a single statement.</source>
          <target state="translated">功能結構是在單一陳述式中建立 XML 樹狀結構的能力。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>There are several key features of the <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> programming interface that enable functional construction:</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> 程式介面有數種主要功能可以使用功能結構：</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Linq.XElement&gt; constructor takes various types of arguments for content.</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XElement&gt;建構函式會採用各種引數的內容類型。&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, you can pass another &lt;xref:System.Xml.Linq.XElement&gt; object, which becomes a child element.</source>
          <target state="translated">例如，您可以將另一個&lt;xref:System.Xml.Linq.XElement&gt;物件，其成為子項目。&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can pass an &lt;xref:System.Xml.Linq.XAttribute&gt; object, which becomes an attribute of the element.</source>
          <target state="translated">您可以傳遞&lt;xref:System.Xml.Linq.XAttribute&gt;物件，就會變成項目的屬性。&lt;/xref:System.Xml.Linq.XAttribute&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Or you can pass any other type of object, which is converted to a string and becomes the text content of the element.</source>
          <target state="translated">或者，您可以傳遞轉換成字串的其他類物件型，然後變成項目的文字內容。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Linq.XElement&gt; constructor takes a <ph id="ph1">`params`</ph> array of type &lt;xref:System.Object&gt;, so that you can pass any number of objects to the constructor.</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XElement&gt;建構函式接受<ph id="ph1">`params`</ph>型別的陣列&lt;xref:System.Object&gt;，因此您可以將任何數目的物件傳遞給建構函式。&lt;/xref:System.Object&gt; &lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This enables you to create an element that has complex content.</source>
          <target state="translated">這可讓您建立包含複雜內容的項目。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If an object implements &lt;xref:System.Collections.Generic.IEnumerable%601&gt;, the collection in the object is enumerated, and all items in the collection are added.</source>
          <target state="translated">如果物件實作&lt;xref:System.Collections.Generic.IEnumerable%601&gt;會列舉中物件的集合，集合中的所有項目加入。&lt;/xref:System.Collections.Generic.IEnumerable%601&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the collection contains &lt;xref:System.Xml.Linq.XElement&gt; or &lt;xref:System.Xml.Linq.XAttribute&gt; objects, each item in the collection is added separately.</source>
          <target state="translated">如果集合包含&lt;xref:System.Xml.Linq.XElement&gt;或&lt;xref:System.Xml.Linq.XAttribute&gt;物件，會個別加入集合中的每個項目。&lt;/xref:System.Xml.Linq.XAttribute&gt; &lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This is important because it lets you pass the results of a <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> query to the constructor.</source>
          <target state="translated">這很重要，因為它可讓您的結果傳遞<ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph>建構函式的查詢。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following is an example:</source>
          <target state="translated">以下是一個範例：</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>These features enable you to write code using XML literals to create an XML tree, and also to write code that uses the results of <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph> queries when you create an XML tree:</source>
          <target state="translated">這些功能可讓您撰寫程式碼使用 XML 常值，建立 XML 樹狀結構，也可以撰寫程式碼會使用結果<ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph>查詢當您建立 XML 樹狀結構︰</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">這個範例會產生下列輸出：</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Creating XML Trees (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/creating-xml-trees.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>建立 XML 樹狀結構 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/creating-xml-trees.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>