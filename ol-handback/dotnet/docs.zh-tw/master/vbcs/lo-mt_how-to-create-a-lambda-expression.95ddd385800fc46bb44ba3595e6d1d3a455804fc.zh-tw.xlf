<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e105e87b1e63218f2c3c2204350257c139b5837</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\procedures\how-to-create-a-lambda-expression.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79669c8bb6d7e055f2bddc760e6193919d0a991e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02b4afde952358538ec72373e8df207587b4810c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Create a Lambda Expression (Visual Basic) | Microsoft Docs</source>
          <target state="translated">如何︰ 建立 Lambda 運算式 (Visual Basic) |Microsoft 文件</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Create a Lambda Expression (Visual Basic)</source>
          <target state="translated">如何：建立 Lambda 運算式 (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>lambda expression<ept id="p1">*</ept> is a function or subroutine that does not have a name.</source>
          <target state="translated">A <bpt id="p1">*</bpt>lambda 運算式<ept id="p1">*</ept>函式或不含名稱的副程式。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A lambda expression can be used wherever a delegate type is valid.</source>
          <target state="translated">只要委派型別有效，可以使用 lambda 運算式。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To create a single-line lambda expression function</source>
          <target state="translated">若要建立的單行 lambda 運算式函式</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In any situation where a delegate type could be used, type the keyword <ph id="ph1">`Function`</ph>, as in the following example:</source>
          <target state="translated">在委派型別可以用在任何情況下，輸入關鍵字<ph id="ph1">`Function`</ph>，如下列範例所示︰</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dim add1 =`</ph>   <ph id="ph2">`Function`</ph></source>
          <target state="translated"><ph id="ph1">`Dim add1 =`</ph>   <ph id="ph2">`Function`</ph></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In parentheses, directly after <ph id="ph1">`Function`</ph>, type the parameters of the function.</source>
          <target state="translated">在括號內，緊接<ph id="ph1">`Function`</ph>，類型函式的參數。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Notice that you do not specify a name after <ph id="ph1">`Function`</ph>.</source>
          <target state="translated">請注意，您不指定的名稱之後<ph id="ph1">`Function`</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dim add1 = Function`</ph>   <ph id="ph2">`(num As Integer)`</ph></source>
          <target state="translated"><ph id="ph1">`Dim add1 = Function`</ph>   <ph id="ph2">`(num As Integer)`</ph></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Following the parameter list, type a single expression as the body of the function.</source>
          <target state="translated">下列參數清單中，輸入單一運算式做為函式的主體。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The value that the expression evaluates to is the value returned by the function.</source>
          <target state="translated">運算式評估為值是函式所傳回的值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You do not use an <ph id="ph1">`As`</ph> clause to specify the return type.</source>
          <target state="translated">您不使用<ph id="ph1">`As`</ph>子句來指定傳回型別。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas#1<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas #&amp;1;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You call the lambda expression by passing in an integer argument.</source>
          <target state="translated">Lambda 運算式可以呼叫傳入整數引數。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas#2<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas #&amp;2;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Alternatively, the same result is accomplished by the following example:</source>
          <target state="translated">此外，相同的結果被透過下列的範例︰</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas#3<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas #&amp;3;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To create a single-line lambda expression subroutine</source>
          <target state="translated">若要建立單行 lambda 運算式副程式</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In any situation where a delegate type could be used, type the keyword <ph id="ph1">`Sub`</ph>, as shown in the following example.</source>
          <target state="translated">在委派型別可以用在任何情況下，輸入關鍵字<ph id="ph1">`Sub`</ph>，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dim add1 =`</ph>   <ph id="ph2">`Sub`</ph></source>
          <target state="translated"><ph id="ph1">`Dim add1 =`</ph>   <ph id="ph2">`Sub`</ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In parentheses, directly after <ph id="ph1">`Sub`</ph>, type the parameters of the subroutine.</source>
          <target state="translated">在括號內，緊接<ph id="ph1">`Sub`</ph>，型別副程式的參數。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Notice that you do not specify a name after <ph id="ph1">`Sub`</ph>.</source>
          <target state="translated">請注意，您不指定的名稱之後<ph id="ph1">`Sub`</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dim add1 = Sub`</ph>   <ph id="ph2">`(msg As String)`</ph></source>
          <target state="translated"><ph id="ph1">`Dim add1 = Sub`</ph>   <ph id="ph2">`(msg As String)`</ph></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Following the parameter list, type a single statement as the body of the subroutine.</source>
          <target state="translated">下列參數清單中，輸入單一陳述式做為副程式的主體。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas#17<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas #&amp;17;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You call the lambda expression by passing in a string argument.</source>
          <target state="translated">Lambda 運算式可以呼叫傳入的字串引數。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas#18<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas #&amp;18;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To create a multiline lambda expression function</source>
          <target state="translated">若要建立多行 lambda 運算式函式</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In any situation where a delegate type could be used, type the keyword <ph id="ph1">`Function`</ph>, as shown in the following example.</source>
          <target state="translated">在委派型別可以用在任何情況下，輸入關鍵字<ph id="ph1">`Function`</ph>，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dim add1 =`</ph>   <ph id="ph2">`Function`</ph></source>
          <target state="translated"><ph id="ph1">`Dim add1 =`</ph>   <ph id="ph2">`Function`</ph></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>In parentheses, directly after <ph id="ph1">`Function`</ph>, type the parameters of the function.</source>
          <target state="translated">在括號內，緊接<ph id="ph1">`Function`</ph>，類型函式的參數。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Notice that you do not specify a name after <ph id="ph1">`Function`</ph>.</source>
          <target state="translated">請注意，您不指定的名稱之後<ph id="ph1">`Function`</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dim add1 = Function`</ph>   <ph id="ph2">`(index As Integer)`</ph></source>
          <target state="translated"><ph id="ph1">`Dim add1 = Function`</ph>   <ph id="ph2">`(index As Integer)`</ph></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Press ENTER.</source>
          <target state="translated">請按 ENTER 鍵。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`End Function`</ph> statement is automatically added.</source>
          <target state="translated"><ph id="ph1">`End Function`</ph>陳述式會自動加入。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Within the body of the function, add the following code to create an expression and return the value.</source>
          <target state="translated">在函式的主體內，新增下列程式碼來建立運算式，並傳回值。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You do not use an <ph id="ph1">`As`</ph> clause to specify the return type.</source>
          <target state="translated">您不使用<ph id="ph1">`As`</ph>子句來指定傳回型別。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas#19<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas #&amp;19;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You call the lambda expression by passing in an integer argument.</source>
          <target state="translated">Lambda 運算式可以呼叫傳入整數引數。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas#20<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_7.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas #&amp;20;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_7.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To create a multiline lambda expression subroutine</source>
          <target state="translated">若要建立多行 lambda 運算式副程式</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>In any situation where a delegate type could be used, type the keyword <ph id="ph1">`Sub`</ph>, as shown in the following example:</source>
          <target state="translated">在委派型別可以用在任何情況下，輸入關鍵字<ph id="ph1">`Sub`</ph>，如下列範例所示︰</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dim add1 =`</ph>   <ph id="ph2">`Sub`</ph></source>
          <target state="translated"><ph id="ph1">`Dim add1 =`</ph>   <ph id="ph2">`Sub`</ph></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In parentheses, directly after <ph id="ph1">`Sub`</ph>, type the parameters of the subroutine.</source>
          <target state="translated">在括號內，緊接<ph id="ph1">`Sub`</ph>，型別副程式的參數。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Notice that you do not specify a name after <ph id="ph1">`Sub`</ph>.</source>
          <target state="translated">請注意，您不指定的名稱之後<ph id="ph1">`Sub`</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Dim add1 = Sub`</ph>  <ph id="ph2">`(msg As String)`</ph></source>
          <target state="translated"><ph id="ph1">`Dim add1 = Sub`</ph>  <ph id="ph2">`(msg As String)`</ph></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Press ENTER.</source>
          <target state="translated">請按 ENTER 鍵。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`End Sub`</ph> statement is automatically added.</source>
          <target state="translated"><ph id="ph1">`End Sub`</ph>陳述式會自動加入。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Within the body of the function, add the following code to execute when the subroutine is invoked.</source>
          <target state="translated">在函式主體，加入下列程式碼來叫用副程式時執行。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas#21<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_8.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas #&amp;21;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_8.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You call the lambda expression by passing in a string argument.</source>
          <target state="translated">Lambda 運算式可以呼叫傳入的字串引數。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas#22<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_9.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas #&amp;22;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_9.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A common use of lambda expressions is to define a function that can be passed in as the argument for a parameter whose type is <ph id="ph1">`Delegate`</ph>.</source>
          <target state="translated">定義可以做為參數的型別引數傳入的函式的 lambda 運算式的常見用法是<ph id="ph1">`Delegate`</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>In the following example, the &lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt; method returns an array of the processes running on the local computer.</source>
          <target state="translated">在下列範例中，&lt;xref:System.Diagnostics.Process.GetProcesses%2A&gt;方法會傳回本機電腦上執行的處理程序的陣列。&lt;/xref:System.Diagnostics.Process.GetProcesses%2A&gt;</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Linq.Enumerable.Where%2A&gt; method from the &lt;xref:System.Linq.Enumerable&gt; class requires a <ph id="ph1">`Boolean`</ph> delegate as its argument.</source>
          <target state="translated">&lt;xref:System.Linq.Enumerable.Where%2A&gt;方法從&lt;xref:System.Linq.Enumerable&gt;類別需要<ph id="ph1">`Boolean`</ph>委派做為引數。&lt;/xref:System.Linq.Enumerable&gt; &lt;/xref:System.Linq.Enumerable.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The lambda expression in the example is used for that purpose.</source>
          <target state="translated">在範例中的 lambda 運算式用來達成目的。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>It returns <ph id="ph1">`True`</ph> for each process that has only one thread, and those are selected in <ph id="ph2">`filteredList`</ph>.</source>
          <target state="translated">它會傳回<ph id="ph1">`True`</ph>每個處理序只有一個執行緒，且那些中所選<ph id="ph2">`filteredList`</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas#10<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_10.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas #&amp;10;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_10.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The previous example is equivalent to the following code, which is written in <ph id="ph1">[!INCLUDE[vbteclinqext](../../../../csharp/getting-started/includes/vbteclinqext_md.md)]</ph> syntax:</source>
          <target state="translated">上述範例相當於下列程式碼，以撰寫<ph id="ph1">[!INCLUDE[vbteclinqext](../../../../csharp/getting-started/includes/vbteclinqext_md.md)]</ph>語法︰</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas#11<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_11.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas #&amp;11;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-create-a-lambda-expression_11.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Enumerable&gt;</source>
          <target state="translated">&lt;xref:System.Linq.Enumerable&gt;&lt;/xref:System.Linq.Enumerable&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Lambda Expressions<ept id="p1">](./lambda-expressions.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Lambda 運算式<ept id="p1">](./lambda-expressions.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Function Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/function-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Function 陳述式<ept id="p1">](../../../../visual-basic/language-reference/statements/function-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Sub Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/sub-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Sub 陳述式<ept id="p1">](../../../../visual-basic/language-reference/statements/sub-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Delegates<ept id="p1">](../../../../visual-basic/programming-guide/language-features/delegates/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>委派<ept id="p1">](../../../../visual-basic/programming-guide/language-features/delegates/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Pass Procedures to Another Procedure in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/delegates/how-to-pass-procedures-to-another-procedure.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>如何︰ 將傳遞至另一個程序，在 Visual Basic 中的程序<ept id="p1">](../../../../visual-basic/programming-guide/language-features/delegates/how-to-pass-procedures-to-another-procedure.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Delegate Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/delegate-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Delegate 陳述式<ept id="p1">](../../../../visual-basic/language-reference/statements/delegate-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Introduction to LINQ in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>在 Visual Basic 中的 LINQ 簡介<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>