<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1832403174276e48dc1857be8ff11fba2b9a250c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\compilation.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56932ed1fd4d5840cde1afcc475dac369f319d67</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dcac2b7a40bcacd311e6e36d49322ee92b4f7d6b</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">file compilation.27191f9d6a714f50f84f3820d25cee49d425768b.de-de.xlf is out of handoff scope</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Compilation and reuse in regular expressions</source>
          <target state="translated">Kompilierung und Wiederverwendung in regulären Ausdrücken</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Compilation and reuse in regular expressions</source>
          <target state="translated">Kompilierung und Wiederverwendung in regulären Ausdrücken</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Compilation and reuse in regular expressions</source>
          <target state="translated">Kompilierung und Wiederverwendung in regulären Ausdrücken</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can optimize the performance of applications that make extensive use of regular expressions by understanding how the regular expression engine compiles expressions and by understanding how regular expressions are cached.</source>
          <target state="translated">Sie können die Leistung von Anwendungen optimieren, die umfangreichen Gebrauch von regulären Ausdrücken machen, wenn Sie verstehen, wie das Modul für reguläre Ausdrücke Ausdrücke kompiliert, und wie reguläre Ausdrücke zwischengespeichert werden.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This topic discusses both compilation and caching.</source>
          <target state="translated">Dieses Thema behandelt das Kompilieren und das Zwischenspeichern.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Compiled Regular Expressions</source>
          <target state="translated">Kompilierte reguläre Ausdrücke</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>By default, the regular expression engine compiles a regular expression to a sequence of internal instructions (these are high-level codes that are different from Microsoft intermediate language, or MSIL).</source>
          <target state="translated">Standardmäßig kompiliert das Modul für reguläre Ausdrücke einen regulären Ausdruck in eine Sequenz von internen Anweisungen (hierbei handelt es sich um Codes auf höherer Ebene, die sich von Microsoft Intermediate Language – MSIL – unterscheiden).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When the engine executes a regular expression, it interprets the internal codes.</source>
          <target state="translated">Wenn das Modul einen regulären Ausdruck ausführt, interpretiert es die internen Codes.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If a <bpt id="p1">[</bpt>Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept> object is constructed with the <bpt id="p2">[</bpt>RegexOptions.Compiled<ept id="p2">](xref:System.Text.RegularExpressions.RegexOptions.Compiled)</ept> option, it compiles the regular expression to explicit MSIL code instead of high-level regular expression internal instructions.</source>
          <target state="translated">Wenn ein <bpt id="p1">[</bpt>Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept>-Objekt mit der <bpt id="p2">[</bpt>RegexOptions.Compiled<ept id="p2">](xref:System.Text.RegularExpressions.RegexOptions.Compiled)</ept>-Option erstellt wird, kompiliert es den regulären Ausdruck in expliziten MSIL-Code und nicht in interne Anweisungen in regulären Ausdrücken auf oberster Ebene.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This allows .NET's just-in-time (JIT) compiler to convert the expression to native machine code for higher performance.</source>
          <target state="translated">So kann der Just-in-Time-Compiler (JIT) von .NET den Ausdruck zur Leistungssteigerung in nativen Maschinencode konvertieren.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, generated MSIL cannot be unloaded.</source>
          <target state="translated">Allerdings kann generierte MSIL nicht entladen werden.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The only way to unload code is to unload an entire application domain (that is, to unload all of your application's code.).</source>
          <target state="translated">Die einzige Möglichkeit zum Entladen von Code ist das Entladen einer gesamten Anwendungsdomäne (d.h., dass Sie Ihren gesamten Anwendungscode entladen).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Effectively, once a regular expression is compiled with the <bpt id="p1">[</bpt>RegexOptions.Compiled<ept id="p1">](xref:System.Text.RegularExpressions.RegexOptions.Compiled)</ept> option, .NET never releases the resources used by the compiled expression, even if the regular expression was created by a <bpt id="p2">[</bpt>Regex<ept id="p2">](xref:System.Text.RegularExpressions.Regex)</ept> object that is itself released to garbage collection.</source>
          <target state="translated">Wenn ein regulärer Ausdruck mit der <bpt id="p1">[</bpt>RegexOptions.Compiled<ept id="p1">](xref:System.Text.RegularExpressions.RegexOptions.Compiled)</ept>-Option kompiliert wurde, gibt .NET nie die von dem kompilierten Ausdruck verwendeten Ressourcen frei, auch wenn der reguläre Ausdruck von einem <bpt id="p2">[</bpt>Regex<ept id="p2">](xref:System.Text.RegularExpressions.Regex)</ept>-Objekt erstellt wurde, das selbst für die Garbage Collection freigegeben wird.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You must be careful to limit the number of different regular expressions you compile with the <bpt id="p1">[</bpt>RegexOptions.Compiled<ept id="p1">](xref:System.Text.RegularExpressions.RegexOptions.Compiled)</ept> option to avoid consuming too many resources.</source>
          <target state="translated">Begrenzen Sie die Anzahl der verschiedenen regulären Ausdrücke, die Sie mit der <bpt id="p1">[</bpt>RegexOptions.Compiled<ept id="p1">](xref:System.Text.RegularExpressions.RegexOptions.Compiled)</ept>-Option kompilieren, um zu vermeiden, zu viele Ressourcen zu beanspruchen.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If an application must use a large or unbounded number of regular expressions, each expression should be interpreted, not compiled.</source>
          <target state="translated">Wenn eine Anwendung eine große bzw. unbegrenzte Zahl von regulären Ausdrücken verwenden muss, sollte jeder Ausdruck interpretiert, nicht kompiliert werden.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>However, if a small number of regular expressions are used repeatedly, they should be compiled with <bpt id="p1">[</bpt>RegexOptions.Compiled<ept id="p1">](xref:System.Text.RegularExpressions.RegexOptions.Compiled)</ept> for better performance.</source>
          <target state="translated">Wenn jedoch eine kleine Anzahl von regulären Ausdrücken wiederholt verwendet wird, sollten sie zur Leistungsverbesserung mit <bpt id="p1">[</bpt>RegexOptions.Compiled<ept id="p1">](xref:System.Text.RegularExpressions.RegexOptions.Compiled)</ept> kompiliert werden.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The Regular Expressions Cache</source>
          <target state="translated">Der Cache für reguläre Ausdrücke</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>To improve performance, the regular expression engine maintains an application-wide cache of compiled regular expressions.</source>
          <target state="translated">Zur Verbesserung der Leistung verwaltet das Modul für reguläre Ausdrücke einen anwendungsweiten Cache kompilierter regulärer Ausdrücke.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The cache stores regular expression patterns that are used only in static method calls.</source>
          <target state="translated">Der Cache speichert Muster für reguläre Ausdrücke, die nur in statischen Methodenaufrufen verwendet werden.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>(Regular expression patterns supplied to instance methods are not cached.) This avoids the need to reparse an expression into high-level byte code each time it is used.</source>
          <target state="translated">(An Instanzmethoden übergebene Muster für reguläre Ausdrücke werden nicht zwischengespeichert.) Dadurch wird vermieden, dass Ausdrücke bei jeder Verwendung erneut analysiert und in Bytecode höherer Ebene kompiliert werden müssen.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The maximum number of cached regular expressions is determined by the value of the <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) <bpt id="p1">[</bpt>Regex.CacheSize<ept id="p1">](xref:System.Text.RegularExpressions.Regex.CacheSize)</ept> property.</source>
          <target state="translated">Die maximale Anzahl der zwischengespeicherten regulären Ausdrücke wird durch den Wert der <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) <bpt id="p1">[</bpt>Regex.CacheSize-Eigenschaft<ept id="p1">](xref:System.Text.RegularExpressions.Regex.CacheSize)</ept> festgelegt.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>By default, the regular expression engine caches up to 15 compiled regular expressions.</source>
          <target state="translated">Standardmäßig speichert das Modul für reguläre Ausdrücke bis zu 15 kompilierte reguläre Ausdrücke zwischen.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If the number of compiled regular expressions exceeds the cache size, the least recently used regular expression is discarded and the new regular expression is cached.</source>
          <target state="translated">Wenn die Anzahl der kompilierten regulären Ausdrücke die Cachegröße überschreitet, wird der am längsten nicht verwendete reguläre Ausdruck verworfen und der neue reguläre Ausdruck zwischengespeichert.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Your application can take advantage of precompiled regular expressions in one of the following two ways:</source>
          <target state="translated">Es gibt zwei Möglichkeiten, wie die Anwendung vorkompilierte reguläre Ausdrücke nutzen kann:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>By using a static method of the <bpt id="p1">[</bpt>Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept> object to define the regular expression.</source>
          <target state="translated">Durch die Verwendung einer statischen Methode des <bpt id="p1">[</bpt>Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept>-Objekts zum Definieren des regulären Ausdrucks.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If you are using a regular expression pattern that has already been defined in another static method call, the regular expression engine will retrieve it from the cache.</source>
          <target state="translated">Wenn Sie ein Muster für reguläre Ausdrücke verwenden, das bereits in einem anderen statischen Methodenaufruf definiert wurde, ruft das Modul für reguläre Ausdrücke dieses aus dem Cache ab.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If not, the engine will compile the regular expression and add it to the cache.</source>
          <target state="translated">Ist dies nicht der Fall, kompiliert das Modul den regulären Ausdruck und fügt ihn dem Cache hinzu.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>By reusing an existing <bpt id="p1">[</bpt>Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept> object as long as its regular expression pattern is needed.</source>
          <target state="translated">Durch die Wiederverwendung eines vorhandenen <bpt id="p1">[</bpt>Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept>-Objekts, solange sein Muster des regulären Ausdrucks benötigt wird.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Because of the overhead of object instantiation and regular expression compilation, creating and rapidly destroying numerous <bpt id="p1">[</bpt>Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept> objects is a very expensive process.</source>
          <target state="translated">Aufgrund des Mehraufwands, der durch die Objektinstanziierung und Kompilierung von regulären Ausdrücken anfällt, stellt das Erstellen und schnelle Löschen zahlreicher <bpt id="p1">[</bpt>Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept>-Objekte einen sehr kostspieligen Prozess dar.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>For applications that use a large number of different regular expressions, you can optimize performance by using calls to static <bpt id="p1">[</bpt>Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept> methods and possibly by increasing the size of the regular expression cache.</source>
          <target state="translated">Sie können die Leistung von Anwendungen, die zahlreiche verschiedene reguläre Ausdrücke verwenden, optimieren, indem Sie Aufrufe statischer <bpt id="p1">[</bpt>Regex<ept id="p1">](xref:System.Text.RegularExpressions.Regex)</ept>-Methoden verwenden und gegebenenfalls den Cache für reguläre Ausdrücke vergrößern.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Siehe auch</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>.NET regular expressions<ept id="p1">](regular-expressions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Reguläre Ausdrücke in .NET<ept id="p1">](regular-expressions.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>