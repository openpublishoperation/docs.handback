<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">618b5c7c1b8219f4e9225277064ff3c498ff3382</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\collections\threadsafe\how-to-use-foreach-to-remove.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3755e57a8a6dcf2dae1b9ea0dff6404ea6d6466</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">51ea7de7f7b1da9deeb42d64769c73ce9340ea7e</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">file how-to-use-foreach-to-remove.5d91710e1ca1f740190d9df9b36fdcb019240590.de-de.xlf is out of handoff scope</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Use ForEach to Remove Items in a BlockingCollection</source>
          <target state="translated">Gewusst wie: Entfernen von Elementen in einer BlockingCollection mit ForEach</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Use ForEach to Remove Items in a BlockingCollection</source>
          <target state="translated">Gewusst wie: Entfernen von Elementen in einer BlockingCollection mit ForEach</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>How to: Use ForEach to Remove Items in a BlockingCollection</source>
          <target state="translated">Gewusst wie: Entfernen von Elementen in einer BlockingCollection mit ForEach</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In addition to taking items from a <bpt id="p1">[</bpt>BlockingCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.BlockingCollection-1)</ept> by using the <ph id="ph3">`Take`</ph> and <ph id="ph4">`TryTake`</ph> methods, you can also use a <ph id="ph5">`foreach`</ph> loop to remove items until adding is completed and the collection is empty.</source>
          <target state="translated">Zusätzlich zum Entnehmen von Elementen aus einer <bpt id="p1">[</bpt>BlockingCollection<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent.BlockingCollection-1)</ept> mithilfe der Methoden <ph id="ph3">`Take`</ph> und <ph id="ph4">`TryTake`</ph> können Sie auch eine <ph id="ph5">`foreach`</ph>-Schleife verwenden, um Elemente zu entfernen, bis der Hinzufügevorgang abgeschlossen und die Auflistung leer ist.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This is called a mutating enumeration or consuming enumeration because, unlike a typical <ph id="ph1">`foreach`</ph> loop, this enumerator modifies the source collection by removing items.</source>
          <target state="translated">Dies wird als mutierende oder verbrauchende Enumeration bezeichnet, da dieser Enumerator, im Gegensatz zu einer typischen <ph id="ph1">`foreach`</ph>-Schleife, die Quellauflistung durch Entfernen von Elementen verändert.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Beispiel</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following example shows how to remove all the items in a <ph id="ph1">`BlockingCollection&lt;T&gt;`</ph> by using a <ph id="ph2">`foreach`</ph> loop.</source>
          <target state="translated">Das folgende Beispiel zeigt das Entfernen aller Elemente in einer <ph id="ph1">`BlockingCollection&lt;T&gt;`</ph> mithilfe einer <ph id="ph2">`foreach`</ph>-Schleife.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This example uses a <ph id="ph1">`foreach`</ph> loop with the <ph id="ph2">`BlockingCollection&lt;T&gt;.GetConsumingEnumerable`</ph> method in the consuming thread, which causes each item to be removed from the collection as it is enumerated.</source>
          <target state="translated">Dieses Beispiel verwendet eine <ph id="ph1">`foreach`</ph>-Schleife mit der <ph id="ph2">`BlockingCollection&lt;T&gt;.GetConsumingEnumerable`</ph>-Methode im verbrauchenden Thread, wodurch jedes Element beim Aufzählen aus der Auflistung entfernt wird.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`BlockingCollection&lt;T&gt;`</ph> limits the maximum number of items that are in the collection at any time.</source>
          <target state="translated"><ph id="ph1">`BlockingCollection&lt;T&gt;`</ph> begrenzt die maximale Anzahl von Elementen, die sich zu einem bestimmten Zeitpunkt in der Sammlung befinden können.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Enumerating the collection in this way blocks the consumer thread if no items are available or if the collection is empty.</source>
          <target state="translated">Durch Aufzählen der Auflistung auf diese Weise wird der Consumerthread blockiert, wenn keine Elemente verfügbar sind oder die Auflistung leer ist.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In this example blocking is not a concern because the producer thread adds items faster than they can be consumed.</source>
          <target state="translated">In diesem Beispiel ist eine Blockierung kein Problem, da der Producerthread Elemente schneller hinzufügt als sie verbraucht werden können.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>There is no guarantee that the items are enumerated in the same order in which they are added by the producer threads.</source>
          <target state="translated">Es gibt keine Garantie dafür, dass die Elemente in der gleichen Reihenfolge aufgezählt werden, in der sie von den Producerthreads hinzugefügt werden.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To enumerate the collection without modifying it, just use <ph id="ph1">`foreach`</ph> without the <ph id="ph2">`GetConsumingEnumerable`</ph> method.</source>
          <target state="translated">Um die Auflistung aufzuzählen, ohne sie zu verändern, verwenden Sie einfach <ph id="ph1">`foreach`</ph> ohne die <ph id="ph2">`GetConsumingEnumerable`</ph>-Methode.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>However, it is important to understand that this kind of enumeration represents a snapshot of the collection at a precise point in time.</source>
          <target state="translated">Es ist jedoch wichtig zu wissen, dass diese Art der Enumeration eine Momentaufnahme der Auflistung zu einem genauen Zeitpunkt darstellt.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If other threads are adding or removing items concurrently while you are executing the loop, then the loop might not represent the actual state of the collection.</source>
          <target state="translated">Wenn weitere Threads gleichzeitig Elemente hinzufügen oder entfernen, während die Schleife ausgeführt wird, stellt die Schleife möglicherweise nicht den tatsächlichen Zustand der Auflistung dar.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Siehe auch</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections.Concurrent<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Collections.Concurrent)</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>BlockingCollection Overview<ept id="p1">](blockingcollection-overview.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Übersicht über BlockingCollection<ept id="p1">](blockingcollection-overview.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>