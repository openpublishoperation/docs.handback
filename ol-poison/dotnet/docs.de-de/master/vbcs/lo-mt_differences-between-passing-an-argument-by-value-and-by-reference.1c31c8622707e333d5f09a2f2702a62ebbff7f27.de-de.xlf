<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93c515dd8524cde85555a27879baee00185f78e3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\procedures\differences-between-passing-an-argument-by-value-and-by-reference.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b333f6ad899ab066c4ea07557db699709b0bdf4b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04040edd816e9089ecb79a6987806b20f302ac7d</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_differences-between-passing-an-argument-by-value-and-by-reference.1c31c8622707e333d5f09a2f2702a62ebbff7f27.de-de is different with handoff file name: differences-between-passing-an-argument-by-value-and-by-reference.1c31c8622707e333d5f09a2f2702a62ebbff7f27.de-de.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Differences Between Passing an Argument By Value and By Reference (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Unterschiede zwischen dem Übergeben eines Arguments als Wert und als Verweis (Visual Basic) | Microsoft-Dokumentation</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Differences Between Passing an Argument By Value and By Reference (Visual Basic)</source>
          <target state="translated">Unterschiede zwischen dem Übergeben von Argumenten als Wert und als Verweis (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When you pass one or more arguments to a procedure, each argument corresponds to an underlying programming element in the calling code.</source>
          <target state="translated">Wenn Sie ein oder mehrere Argumente an eine Prozedur übergeben, entspricht jedes Argument einem zugrunde liegenden Programmierelement im Aufrufcode.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can pass either the value of this underlying element, or a reference to it.</source>
          <target state="translated">Sie können entweder den Wert dieses zugrunde liegenden Elements oder einen Verweis darauf übergeben.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This is known as the <bpt id="p1">*</bpt>passing mechanism<ept id="p1">*</ept>.</source>
          <target state="translated">Dies wird als bezeichnet die <bpt id="p1">*</bpt>Mechanismus übergeben<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Passing by Value</source>
          <target state="translated">Übergeben als Wert</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You pass an argument <bpt id="p1">*</bpt>by value<ept id="p1">*</ept> by specifying the <bpt id="p2">[</bpt>ByVal<ept id="p2">](../../../../visual-basic/language-reference/modifiers/byval.md)</ept> keyword for the corresponding parameter in the procedure definition.</source>
          <target state="translated">Übergeben Sie ein Argument <bpt id="p1">*</bpt>Wert<ept id="p1">*</ept> durch Angabe der <bpt id="p2">[</bpt>ByVal<ept id="p2">](../../../../visual-basic/language-reference/modifiers/byval.md)</ept> Schlüsselwort für den entsprechenden Parameter in der Prozedurdefinition.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When you use this passing mechanism, <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> copies the value of the underlying programming element into a local variable in the procedure.</source>
          <target state="translated">Bei Verwendung dieses Mechanismus übergeben <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> kopiert den Wert des zugrunde liegenden Programmierelements in eine lokale Variable in der Prozedur.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The procedure code does not have any access to the underlying element in the calling code.</source>
          <target state="translated">Der Code der Prozedur keinen Zugriff auf das zugrunde liegende Element in der aufrufende Code keinen.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Passing by Reference</source>
          <target state="translated">Übergeben als Verweis</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You pass an argument <bpt id="p1">*</bpt>by reference<ept id="p1">*</ept> by specifying the <bpt id="p2">[</bpt>ByRef<ept id="p2">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept> keyword for the corresponding parameter in the procedure definition.</source>
          <target state="translated">Übergeben Sie ein Argument <bpt id="p1">*</bpt>als Verweis<ept id="p1">*</ept> durch Angabe der <bpt id="p2">[</bpt>ByRef<ept id="p2">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept> Schlüsselwort für den entsprechenden Parameter in der Prozedurdefinition.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you use this passing mechanism, <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> gives the procedure a direct reference to the underlying programming element in the calling code.</source>
          <target state="translated">Bei Verwendung dieses Mechanismus übergeben <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> übergibt an die Prozedur einen direkten Verweis auf das zugrunde liegende Programmierelement im aufrufenden Code.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Passing Mechanism and Element Type</source>
          <target state="translated">Übergabemechanismus und Elementtyp</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The choice of passing mechanism is not the same as the classification of the underlying element type.</source>
          <target state="translated">Die Auswahl der Standardmechanismus zum übergeben entspricht nicht der Klassifizierung des zugrunde liegenden Elementtyps.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Passing by value or by reference refers to what <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> supplies to the procedure code.</source>
          <target state="translated">Übergeben als Wert oder als Verweis bezieht sich auf was <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> für den Prozedurcode bereitstellt.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A value type or reference type refers to how a programming element is stored in memory.</source>
          <target state="translated">Ein Werttyp oder Verweistyp bezieht sich auf wie ein Programmierelement im Arbeitsspeicher gespeichert werden.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>However, the passing mechanism and element type are interrelated.</source>
          <target state="translated">Allerdings sind die Übergabemechanismus und Elementtyp verknüpft.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The value of a reference type is a pointer to the data elsewhere in memory.</source>
          <target state="translated">Der Wert eines Verweistyps ist ein Zeiger auf die Daten an anderer Stelle im Arbeitsspeicher.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This means that when you pass a reference type by value, the procedure code has a pointer to the underlying element's data, even though it cannot access the underlying element itself.</source>
          <target state="translated">Dies bedeutet, dass wenn Sie einen Verweistyp nach Wert übergeben, der Code einen Zeiger auf die zugrunde liegenden Daten des Elements, obwohl das zugrunde liegende Element selbst nicht darauf zugreifen können.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, if the element is an array variable, the procedure code does not have access to the variable itself, but it can access the array members.</source>
          <target state="translated">Wenn das Element eine Arrayvariable, z. B. Code der Prozedur keinen Zugriff auf die Variable selbst, aber Zugriff auf die Array-Elemente.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Ability to Modify</source>
          <target state="translated">Fähigkeit zum Ändern</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When you pass a nonmodifiable element as an argument, the procedure can never modify it in the calling code, whether it is passed <ph id="ph1">`ByVal`</ph> or <ph id="ph2">`ByRef`</ph>.</source>
          <target state="translated">Wenn Sie ein nicht änderbares Element als Argument übergeben, die Prozedur kann nie ändern sie in den aufrufenden Code, übergebenes <ph id="ph1">`ByVal`</ph> oder <ph id="ph2">`ByRef`</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For a modifiable element, the following table summarizes the interaction between the element type and the passing mechanism.</source>
          <target state="translated">Änderbaren Elementen wird in der folgenden Tabelle die Interaktion zwischen dem Elementtyp und der Mechanismus übergeben.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Element type</source>
          <target state="translated">Elementtyp</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Passed <ph id="ph1">`ByVal`</ph></source>
          <target state="translated">Übergeben<ph id="ph1">`ByVal`</ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Passed <ph id="ph1">`ByRef`</ph></source>
          <target state="translated">Übergeben<ph id="ph1">`ByRef`</ph></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Value type (contains only a value)</source>
          <target state="translated">Werttyp (enthält nur einen Wert)</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The procedure cannot change the variable or any of its members.</source>
          <target state="translated">Die Variable oder eines seiner Member kann nicht von der Prozedur geändert werden.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The procedure can change the variable and its members.</source>
          <target state="translated">Die Prozedur kann die Variable und ihre Member ändern.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Reference type (contains a pointer to a class or structure instance)</source>
          <target state="translated">Verweistyp (enthält einen Zeiger auf eine Klasse oder Struktur Instanz)</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The procedure cannot change the variable but can change members of the instance to which it points.</source>
          <target state="translated">Die Prozedur die Variable nicht ändern, aber Member der Instanz, auf die sie zeigt.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The procedure can change the variable and members of the instance to which it points.</source>
          <target state="translated">Die Variable und die Member der Instanz, auf der er zeigt, kann die Prozedur ändern.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Siehe auch</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Procedures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Verfahren<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Parameters and Arguments<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Prozedurparameter und Argumente<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Pass Arguments to a Procedure<ept id="p1">](./how-to-pass-arguments-to-a-procedure.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Gewusst wie: Übergeben von Argumenten an eine Prozedur<ept id="p1">](./how-to-pass-arguments-to-a-procedure.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Passing Arguments by Value and by Reference<ept id="p1">](./passing-arguments-by-value-and-by-reference.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Übergeben von Argumenten als Wert und als Verweis<ept id="p1">](./passing-arguments-by-value-and-by-reference.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Differences Between Modifiable and Nonmodifiable Arguments<ept id="p1">](./differences-between-modifiable-and-nonmodifiable-arguments.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Unterschiede zwischen veränderbaren und nicht veränderbaren Argumenten<ept id="p1">](./differences-between-modifiable-and-nonmodifiable-arguments.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Change the Value of a Procedure Argument<ept id="p1">](./how-to-change-the-value-of-a-procedure-argument.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Gewusst wie: Ändern des Werts eines Prozedurarguments<ept id="p1">](./how-to-change-the-value-of-a-procedure-argument.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Protect a Procedure Argument Against Value Changes<ept id="p1">](./how-to-protect-a-procedure-argument-against-value-changes.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Gewusst wie: Schützen eines Prozedurarguments gegen Wertänderungen<ept id="p1">](./how-to-protect-a-procedure-argument-against-value-changes.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Force an Argument to Be Passed by Value<ept id="p1">](./how-to-force-an-argument-to-be-passed-by-value.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Gewusst wie: erzwingen, dass ein Argument als Wert übergeben werden<ept id="p1">](./how-to-force-an-argument-to-be-passed-by-value.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Passing Arguments by Position and by Name<ept id="p1">](./passing-arguments-by-position-and-by-name.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Übergeben von Argumenten nach Position und Name<ept id="p1">](./passing-arguments-by-position-and-by-name.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Value Types and Reference Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Werttypen und Verweistypen<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>