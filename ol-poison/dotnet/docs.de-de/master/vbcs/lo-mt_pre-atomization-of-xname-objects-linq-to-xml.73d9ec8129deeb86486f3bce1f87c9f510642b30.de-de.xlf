<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">519b64a96e03e098d7325cfb779bcd5d53db3741</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\pre-atomization-of-xname-objects-linq-to-xml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">251fec12dfa074d6c821e7e76c696ece6246966c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d9769cfb3d1aba6186c1c397381fae27bffc1648</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_pre-atomization-of-xname-objects-linq-to-xml.73d9ec8129deeb86486f3bce1f87c9f510642b30.de-de is different with handoff file name: pre-atomization-of-xname-objects-linq-to-xml.73d9ec8129deeb86486f3bce1f87c9f510642b30.de-de.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Pre-Atomization of XName Objects (LINQ to XML) (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Voratomisierung von XName-Objekten (LINQ to XML) (Visual Basic) | Microsoft-Dokumentation</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Pre-Atomization of XName Objects (LINQ to XML) (Visual Basic)</source>
          <target state="translated">Voratomisierung von XName-Objekten (LINQ to XML) (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>One way to improve performance in LINQ to XML is to pre-atomize &lt;xref:System.Xml.Linq.XName&gt; objects.</source>
          <target state="translated">Eine Möglichkeit zur Verbesserung der Leistung in LINQ to XML ist, um das voratomisieren &lt;xref:System.Xml.Linq.XName&gt;Objekte.&lt;/xref:System.Xml.Linq.XName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Pre-atomization means that you assign a string to an &lt;xref:System.Xml.Linq.XName&gt; object before you create the XML tree by using the constructors of the &lt;xref:System.Xml.Linq.XElement&gt; and  &lt;xref:System.Xml.Linq.XAttribute&gt; classes.</source>
          <target state="translated">Voratomisierung bedeutet, dass Sie eine Zeichenfolge zuweisen einer &lt;xref:System.Xml.Linq.XName&gt;Objekt vor dem Erstellen der XML-Struktur mit den Konstruktoren von der &lt;xref:System.Xml.Linq.XElement&gt;und &lt;xref:System.Xml.Linq.XAttribute&gt;Klassen.&lt;/xref:System.Xml.Linq.XAttribute&gt; &lt;/xref:System.Xml.Linq.XElement&gt; &lt;/xref:System.Xml.Linq.XName&gt;</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Then, instead of passing a string to the constructor, which would use the implicit conversion from string to &lt;xref:System.Xml.Linq.XName&gt;, you pass the initialized &lt;xref:System.Xml.Linq.XName&gt; object.</source>
          <target state="translated">Verwenden Sie dann anstelle eine Zeichenfolge an den Konstruktor übergeben, das würde die implizite Konvertierung von String in &lt;xref:System.Xml.Linq.XName&gt;, übergeben Sie das initialisierte &lt;xref:System.Xml.Linq.XName&gt;Objekt.&lt;/xref:System.Xml.Linq.XName&gt; &lt;/xref:System.Xml.Linq.XName&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This improves performance when you create a large XML tree in which specific names are repeated.</source>
          <target state="translated">Dies verbessert die Leistung beim Erstellen von großen XML-Strukturen, in denen bestimmte Namen wiederholt werden.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To do this, you declare and initialize &lt;xref:System.Xml.Linq.XName&gt; objects before you construct the XML tree, and then use the &lt;xref:System.Xml.Linq.XName&gt; objects instead of specifying strings for the element and attribute names.</source>
          <target state="translated">Dazu deklarieren und initialisieren &lt;xref:System.Xml.Linq.XName&gt;Objekte, bevor Sie die XML-Struktur erstellen, und Sie dann verwenden die &lt;xref:System.Xml.Linq.XName&gt;Objekte, anstatt für die Element- und Attributnamen Zeichenfolgen anzugeben.&lt;/xref:System.Xml.Linq.XName&gt; &lt;/xref:System.Xml.Linq.XName&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This technique can yield significant performance gains if you are creating a large number of elements (or attributes) with the same name.</source>
          <target state="translated">Mit dieser Vorgehensweise können beim Erstellen einer großen Anzahl von Elementen (oder Attributen) wesentliche Leistungsverbesserungen erzielt werden.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You should test pre-atomization with your scenario to decide if you should use it.</source>
          <target state="translated">Sie sollten Voratomisierung innerhalb Ihres Szenarios testen, um eine Entscheidung über die Anwendbarkeit dieses Verfahrens zu treffen.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Beispiel</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following example demonstrates this.</source>
          <target state="translated">Dies wird im folgenden Beispiel veranschaulicht:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following example shows the same technique where the XML document is in a namespace:</source>
          <target state="translated">Im folgenden Beispiel wird dieselbe Vorgehensweise für ein XML-Dokument in einem Namespace erläutert.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">Dieses Beispiel erzeugt die folgende Ausgabe:</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The following example is more similar to what you will likely encounter in the real world.</source>
          <target state="translated">Das folgende Beispiel entspricht eher realen Bedingungen.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In this example, the content of the element is supplied by a query:</source>
          <target state="translated">In diesem Beispiel wird der Inhalt des Elements durch eine Abfrage bereitgestellt:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The previous example performs better than the following example, in which names are not pre-atomized:</source>
          <target state="translated">Im vorherigen Beispiel wird eine bessere Leistung als im folgenden Beispiel erzielt, in dem Namen nicht voratomisiert werden:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Siehe auch</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Performance (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/performance-linq-to-xml.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Leistung (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/performance-linq-to-xml.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Atomized XName and XNamespace Objects (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/atomized-xname-and-xnamespace-objects-linq-to-xml.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Atomisierte XName- und XNamespace-Objekte (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/atomized-xname-and-xnamespace-objects-linq-to-xml.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>