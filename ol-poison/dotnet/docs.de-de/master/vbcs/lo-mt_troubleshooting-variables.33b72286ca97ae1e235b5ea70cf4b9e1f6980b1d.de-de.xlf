<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9cddf7ced50c42514ebc9a613f49adee31edde0b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\variables\troubleshooting-variables.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6ad529e5075ee288f86dfb792e83611ad33881d7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a3e1a62506a20032d556ddcbd86753b068f09a2</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_troubleshooting-variables.33b72286ca97ae1e235b5ea70cf4b9e1f6980b1d.de-de is different with handoff file name: troubleshooting-variables.33b72286ca97ae1e235b5ea70cf4b9e1f6980b1d.de-de.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Troubleshooting Variables in Visual Basic | Microsoft Docs</source>
          <target state="translated">Problembehandlung bei Variablen in Visual Basic | Microsoft-Dokumentation</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Troubleshooting Variables in Visual Basic</source>
          <target state="translated">Problembehandlung bei Variablen in Visual Basic</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This page lists some common problems that can occur when working with variables in <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</source>
          <target state="translated">Auf dieser Seite sind einige allgemeine Probleme, die auftreten können, beim Arbeiten mit Variablen in <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Unable to Access Members of an Object</source>
          <target state="translated">Zugriff auf Member eines Objekts ist nicht möglich</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If your code attempts to access a property or method on an object, there are two possible error outcomes:</source>
          <target state="translated">Wenn Ihr Code versucht, auf eine Eigenschaft oder Methode eines Objekts zuzugreifen, können zwei Arten von Fehlern auftreten:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The compiler can generate an error message if you declare the object variable to be of a specific type and then refer to a member not defined by that type.</source>
          <target state="translated">Der Compiler kann eine Fehlermeldung generieren, wenn Sie die Objektvariable als bestimmten Typ deklarieren und dann auf einen Member verweisen, der nicht durch diesen Typ definiert ist.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A run-time &lt;xref:System.MemberAccessException&gt; occurs when the object assigned to an object variable does not expose the member your code is trying to access.</source>
          <target state="translated">Ein Laufzeit- &lt;xref:System.MemberAccessException&gt;tritt auf, wenn das einer Objektvariablen zugewiesene Objekt nicht den Member verfügbar macht, Code zugreifen möchten.&lt;/xref:System.MemberAccessException&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the case of a variable of <bpt id="p1">[</bpt>Object Data Type<ept id="p1">](../../../../visual-basic/language-reference/data-types/object-data-type.md)</ept>, you can also get this exception if the member is not <ph id="ph1">`Public`</ph>.</source>
          <target state="translated">Bei einer Variablen vom <bpt id="p1">[</bpt>Object-Datentyp<ept id="p1">](../../../../visual-basic/language-reference/data-types/object-data-type.md)</ept>, Sie können diese Ausnahme auch abrufen, wenn das Element nicht ist <ph id="ph1">`Public`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This is because late binding allows access only to <ph id="ph1">`Public`</ph> members.</source>
          <target state="translated">Der Grund ist, dass die späte Bindung nur den Zugriff auf <ph id="ph1">`Public`</ph> -Member erlaubt.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When the <bpt id="p1">[</bpt>Option Strict Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept> sets type checking <ph id="ph1">`On`</ph>, an object variable can access only the methods and properties of the class with which you declare it.</source>
          <target state="translated">Wenn die <bpt id="p1">[</bpt>Option Strict-Anweisung<ept id="p1">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept> typüberprüfung legt <ph id="ph1">`On`</ph>, nur die Methoden und Eigenschaften der Klasse, mit der Sie wurde deklariert, kann eine Objektvariable zugreifen.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The following example illustrates this.</source>
          <target state="translated">Dies wird anhand des folgenden Beispiels veranschaulicht.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrVariables#2<ept id="p2">](../../../../visual-basic/programming-guide/language-features/variables/codesnippet/VisualBasic/troubleshooting-variables_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrVariables&amp;#2;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/variables/codesnippet/VisualBasic/troubleshooting-variables_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>In this example, <ph id="ph1">`p`</ph> can use only the members of the &lt;xref:System.Object&gt; class itself, which do not include the <ph id="ph2">`Left`</ph> property.</source>
          <target state="translated">In diesem Beispiel <ph id="ph1">`p`</ph> können nur die Mitglieder der &lt;xref:System.Object&gt;-Klasse selbst, die enthalten nicht die <ph id="ph2">`Left`</ph> Eigenschaft.&lt;/xref:System.Object&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>On the other hand, <ph id="ph1">`q`</ph> was declared to be of type &lt;xref:System.Windows.Forms.Label&gt;, so it can use all the methods and properties of the &lt;xref:System.Windows.Forms.Label&gt; class in the &lt;xref:System.Windows.Forms&gt; namespace.</source>
          <target state="translated">Auf der anderen Seite <ph id="ph1">`q`</ph> Typ deklariert wurde &lt;xref:System.Windows.Forms.Label&gt;, sodass es alle Methoden und Eigenschaften verwenden kann die &lt;xref:System.Windows.Forms.Label&gt;-Klasse in die &lt;xref:System.Windows.Forms&gt;Namespace.&lt;/xref:System.Windows.Forms&gt; &lt;/xref:System.Windows.Forms.Label&gt; &lt;/xref:System.Windows.Forms.Label&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Correct Approach</source>
          <target state="translated">Richtige Vorgehensweise</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To be able to access all the members of an object of a particular class, declare the object variable to be of the type of that class when possible.</source>
          <target state="translated">Um auf alle Member eines Objekts einer bestimmten Klasse zugreifen zu können, deklarieren Sie die Objektvariable nach Möglichkeit als Typ der Klasse.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you cannot do this, for example if you do not know the object type at compile time, you must set <ph id="ph1">`Option Strict`</ph> to <ph id="ph2">`Off`</ph> and declare the variable to be of the <bpt id="p1">[</bpt>Object Data Type<ept id="p1">](../../../../visual-basic/language-reference/data-types/object-data-type.md)</ept>.</source>
          <target state="translated">Wenn nicht möglich ist, z. B. Wenn Sie den Objekttyp zur Kompilierzeit nicht bekannt ist, müssen Sie festlegen <ph id="ph1">`Option Strict`</ph> zu <ph id="ph2">`Off`</ph> und deklarieren Sie die Variable in einer der <bpt id="p1">[</bpt>Object-Datentyp<ept id="p1">](../../../../visual-basic/language-reference/data-types/object-data-type.md)</ept>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This allows objects of any type to be assigned to the variable, and you should take steps to ensure that the currently assigned object is of an acceptable type.</source>
          <target state="translated">So können der Variablen Objekte beliebigen Typs zugewiesen werden, und Sie sollten Maßnahmen ergreifen, um sicherzustellen, dass das aktuell zugewiesene Objekt einen zulässigen Typ hat.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>TypeOf Operator<ept id="p1">](../../../../visual-basic/language-reference/operators/typeof-operator.md)</ept> to make this determination.</source>
          <target state="translated">Sie können die <bpt id="p1">[</bpt>TypeOf-Operator<ept id="p1">](../../../../visual-basic/language-reference/operators/typeof-operator.md)</ept> um diese Entscheidung zu treffen.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Other Components Cannot Access Your Variable</source>
          <target state="translated">Andere Komponenten können nicht auf die Variable zugreifen</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> names are <bpt id="p1">*</bpt>case-insensitive<ept id="p1">*</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>Namen sind <bpt id="p1">*</bpt>Groß-und Kleinschreibung<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If two names differ in alphabetic case only, the compiler interprets them as the same name.</source>
          <target state="translated">Wenn zwei Namen sich nur in der Groß- und Kleinschreibung unterscheiden, interpretiert der Compiler sie als identisch.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example, it considers <ph id="ph1">`ABC`</ph> and <ph id="ph2">`abc`</ph> to refer to the same declared element.</source>
          <target state="translated">Er geht z. B. davon aus, dass <ph id="ph1">`ABC`</ph> und <ph id="ph2">`abc`</ph> auf das gleiche deklarierte Element verweisen.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>However, the common language runtime (CLR) uses <bpt id="p1">*</bpt>case-sensitive<ept id="p1">*</ept> binding.</source>
          <target state="translated">Allerdings verwendet die Common Language Runtime (CLR) die <bpt id="p1">*</bpt>Groß-/Kleinschreibung unterscheidende<ept id="p1">*</ept> Bindung.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Therefore, when you produce an assembly or a DLL and make it available to other assemblies, your names are no longer case-insensitive.</source>
          <target state="translated">Wenn Sie also eine Assembly oder DLL erstellen und für andere Assemblys verfügbar machen, wird bei Ihren Namen Groß-und Kleinschreibung unterschieden.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For example, if you define a class with an element called <ph id="ph1">`ABC`</ph>, and other assemblies make use of your class through the common language runtime, they must refer to the element as <ph id="ph2">`ABC`</ph>.</source>
          <target state="translated">Wenn Sie z. B. eine Klasse mit einem Element namens <ph id="ph1">`ABC`</ph>definieren, müssen andere Assemblys, die die Klasse über die Common Language Runtime verwenden, auf das Element als <ph id="ph2">`ABC`</ph>verweisen.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If you subsequently recompile your class and change the element's name to <ph id="ph1">`abc`</ph>, the other assemblies using your class can no longer access that element.</source>
          <target state="translated">Wenn Sie danach die Klasse erneut kompilieren und den Namen des Elements in <ph id="ph1">`abc`</ph>ändern, können andere Assemblys, die Ihre Klasse verwenden, nicht mehr auf dieses Element zugreifen.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Therefore, when you release an updated version of an assembly, you should not change the alphabetic case of any public elements.</source>
          <target state="translated">Wenn Sie also eine aktualisierte Version einer Assembly herausgeben, sollten Sie die Groß-/Kleinschreibung öffentlicher Elemente nicht ändern.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Common Language Runtime<ept id="p1">](http://msdn.microsoft.com/library/059a624e-f7db-4134-ba9f-08b676050482)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Common Language Runtime<ept id="p1">](http://msdn.microsoft.com/library/059a624e-f7db-4134-ba9f-08b676050482)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Correct Approach</source>
          <target state="translated">Richtige Vorgehensweise</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To allow other components to access your variables, treat their names as if they were case-sensitive.</source>
          <target state="translated">Um anderen Komponenten den Zugriff auf Ihre Variablen zu ermöglichen, behandeln Sie deren Namen so, als würde die Groß-/Kleinschreibung unterschieden.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When you are testing your class or module, make sure other assemblies are binding to the variables you expect them to.</source>
          <target state="translated">Stellen Sie beim Testen der Klasse oder des Moduls sicher, dass andere Assemblys sich gemäß Ihrer Erwartung an die Variablen binden.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Once you have published a component, do not make any modifications to existing variable names, including changing their cases.</source>
          <target state="translated">Nachdem Sie eine Komponente veröffentlicht haben, nehmen Sie keine Änderungen an vorhandenen Namen von Variablen vor, Ändern von Groß-/Kleinschreibung inbegriffen.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Wrong Variable Being Used</source>
          <target state="translated">Falsche Variable wird verwendet</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When you have more than one variable with the same name, the <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> compiler attempts to resolve each reference to that name.</source>
          <target state="translated">Wenn Sie mehr als eine Variable mit dem gleichen Namen, haben die <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> versucht der Compiler, jeden Verweis auf diesen Namen aufzulösen.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If the variables have different scope, the compiler resolves a reference to the declaration with the narrowest scope.</source>
          <target state="translated">Wenn die Variablen über unterschiedliche Gültigkeitsbereiche verfügen, löst der Compiler einen Verweis auf die Deklaration mit dem engsten Gültigkeitsbereich auf.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If they have the same scope, the resolution fails and the compiler signals an error.</source>
          <target state="translated">Wenn sie den gleichen Gültigkeitsbereich aufweisen, gelingt die Auflösung nicht, und der Compiler signalisiert einen Fehler.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>References to Declared Elements<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Verweise auf deklarierte Elemente<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Correct Approach</source>
          <target state="translated">Richtige Vorgehensweise</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Avoid using variables with the same name but different scope.</source>
          <target state="translated">Vermeiden Sie, Variablen mit gleichem Namen, aber unterschiedlichen Gültigkeitsbereichen zu verwenden.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If you are using other assemblies or projects, avoid using any names defined in those external components as much as possible.</source>
          <target state="translated">Wenn Sie andere Assemblys oder Projekte verwenden, vermeiden Sie so weit wie möglich die Verwendung von Namen, die in diesen externen Komponenten definiert werden.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If you have more than one variable with the same name, be sure you qualify every reference to it.</source>
          <target state="translated">Wenn Sie über mehrere Variablen gleichen Namens verfügen, achten Sie darauf, jeden Verweis auf sie zu qualifizieren.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>References to Declared Elements<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Verweise auf deklarierte Elemente<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Siehe auch</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Variables<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Variablen<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Variable Declaration<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/variable-declaration.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Deklaration von Objektvariablen<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/variable-declaration.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Object Variables<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/object-variables.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Objektvariablen<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/object-variables.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Object Variable Declaration<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/object-variable-declaration.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Deklaration von Objektvariablen<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/object-variable-declaration.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Access Members of an Object<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/how-to-access-members-of-an-object.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Gewusst wie: Zugreifen auf Member eines Objekts<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/how-to-access-members-of-an-object.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Object Variable Values<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/object-variable-values.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Werte von Objektvariablen<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/object-variable-values.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Determine What Type an Object Variable Refers To<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/how-to-determine-what-type-an-object-variable-refers-to.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Gewusst wie: Bestimmen des Typs, auf den eine Objektvariable verweist<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/how-to-determine-what-type-an-object-variable-refers-to.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>References to Declared Elements<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Verweise auf deklarierte Elemente<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Declared Element Names<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Namen deklarierter Elemente<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>