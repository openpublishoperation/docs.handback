<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e112e7d221ef8e7a660094306bbb242c988e843</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\data-types\type-characters.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">694c08f7a4a184a2ee1a75612e047963513d01c9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">29fad93a9ca6f6f9fe35d50f35556acd0a9767ae</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_type-characters.d7830e179ea76f24c39fb7abcf9f8064afbe75d0.de-de is different with handoff file name: type-characters.d7830e179ea76f24c39fb7abcf9f8064afbe75d0.de-de.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Type Characters (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Geben Sie die Zeichen (Visual Basic) | Microsoft-Dokumentation</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Type Characters (Visual Basic)</source>
          <target state="translated">Typzeichen (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In addition to specifying a data type in a declaration statement, you can force the data type of some programming elements with a <bpt id="p1">*</bpt>type character<ept id="p1">*</ept>.</source>
          <target state="translated">Zusätzlich zum Angeben eines Datentyps in einer deklarationsanweisung, können Sie den Datentyp des einige Programmierelemente mit Erzwingen einer <bpt id="p1">*</bpt>Typzeichen<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The type character must immediately follow the element, with no intervening characters of any kind.</source>
          <target state="translated">Das Typzeichen muss unmittelbar auf das Element, ohne dazwischenliegende Zeichen jeglicher Art folgen.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The type character is not part of the name of the element.</source>
          <target state="translated">Das Typzeichen ist nicht Teil des Namens des Elements.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>An element defined with a type character can be referenced without the type character.</source>
          <target state="translated">Ein mit einem Typzeichen definiertes Element kann ohne das Typzeichen verwiesen werden.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Identifier Type Characters</source>
          <target state="translated">Typkennzeichen</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> supplies a set of <bpt id="p1">*</bpt>identifier type characters<ept id="p1">*</ept>, which you can use in a declaration to specify the data type of a variable or constant.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>Stellt eine Reihe von <bpt id="p1">*</bpt>Typkennzeichen<ept id="p1">*</ept>, die Sie in einer Deklaration verwenden können, um den Datentyp einer Variablen oder Konstanten angeben.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following table shows the available identifier type characters with examples of usage.</source>
          <target state="translated">Die folgende Tabelle zeigt die verfügbaren Typkennzeichen mit Beispielen für die Verwendung.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Identifier type character</source>
          <target state="translated">Typkennzeichen</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Data type</source>
          <target state="translated">Datentyp</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Beispiel</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>No identifier type characters exist for the <ph id="ph1">`Boolean`</ph>, <ph id="ph2">`Byte`</ph>, <ph id="ph3">`Char`</ph>, <ph id="ph4">`Date`</ph>, <ph id="ph5">`Object`</ph>, <ph id="ph6">`SByte`</ph>, <ph id="ph7">`Short`</ph>, <ph id="ph8">`UInteger`</ph>, <ph id="ph9">`ULong`</ph>, or <ph id="ph10">`UShort`</ph> data types, or for any composite data types such as arrays or structures.</source>
          <target state="translated">Keine Typkennzeichen für die <ph id="ph1">`Boolean`</ph>, <ph id="ph2">`Byte`</ph>, <ph id="ph3">`Char`</ph>, <ph id="ph4">`Date`</ph>, <ph id="ph5">`Object`</ph>, <ph id="ph6">`SByte`</ph>, <ph id="ph7">`Short`</ph>, <ph id="ph8">`UInteger`</ph>, <ph id="ph9">`ULong`</ph>, oder <ph id="ph10">`UShort`</ph> Datentypen oder zusammengesetzte Datentypen wie z. B. Arrays oder Strukturen.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In some cases, you can append the <ph id="ph1">`$`</ph> character to a <ph id="ph2">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> function, for example <ph id="ph3">`Left$`</ph> instead of <ph id="ph4">`Left`</ph>, to obtain a returned value of type <ph id="ph5">`String`</ph>.</source>
          <target state="translated">In einigen Fällen können Sie Anfügen der <ph id="ph1">`$`</ph> das Zeichen eine <ph id="ph2">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> Funktion, z. B. <ph id="ph3">`Left$`</ph> anstelle von <ph id="ph4">`Left`</ph>, um einen Rückgabewert vom Typ erhalten <ph id="ph5">`String`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In all cases, the identifier type character must immediately follow the identifier name.</source>
          <target state="translated">In allen Fällen muss die Typkennzeichen unmittelbar auf den Namen des Bezeichners folgen.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Literal Type Characters</source>
          <target state="translated">Literaltypzeichen</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>literal<ept id="p1">*</ept> is a textual representation of a particular value of a data type.</source>
          <target state="translated">Ein <bpt id="p1">*</bpt>Zeichenfolgenliteral<ept id="p1">*</ept> ist eine Textdarstellung eines bestimmten Werts eines Datentyps.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Default Literal Types</source>
          <target state="translated">Standardliteraltypen</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The form of a literal as it appears in your code ordinarily determines its data type.</source>
          <target state="translated">Die Form eines Literals richtet in Ihrem Code in der Regel sich Datentyp.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The following table shows these default types.</source>
          <target state="translated">Die folgende Tabelle zeigt diese Standardtypen.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Textual form of literal</source>
          <target state="translated">Textform literalen</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Default data type</source>
          <target state="translated">Standard-Datentyp</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Beispiel</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Numeric, no fractional part</source>
          <target state="translated">Numerisch, kein Bruchteil</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Numeric, no fractional part, too large for <ph id="ph1">`Integer`</ph></source>
          <target state="translated">Numerisch, kein Bruchteil Teil, zu groß für<ph id="ph1">`Integer`</ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Numeric, fractional part</source>
          <target state="translated">Numerisch, Bruchteil</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Enclosed in double quotation marks</source>
          <target state="translated">Eingeschlossen in doppelte Anführungszeichen</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Enclosed within number signs</source>
          <target state="translated">Eingeschlossen in Nummernzeichen</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Forced Literal Types</source>
          <target state="translated">Erzwungene Literale</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> supplies a set of <bpt id="p1">*</bpt>literal type characters<ept id="p1">*</ept>, which you can use to force a literal to assume a data type other than the one its form indicates.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>Stellt eine Reihe von <bpt id="p1">*</bpt>Literaltypzeichen<ept id="p1">*</ept>, womit Sie verwenden können, erzwingen Sie ein Literal einen Datentyp als seine Form annimmt.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You do this by appending the character to the end of the literal.</source>
          <target state="translated">Dazu fügen Sie das Zeichen am Ende des Literals.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following table shows the available literal type characters with examples of usage.</source>
          <target state="translated">Die folgende Tabelle zeigt die verfügbaren Literalzeichen und Beispiele für deren Verwendung.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Literal type character</source>
          <target state="translated">Literaltypzeichen</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Data type</source>
          <target state="translated">Datentyp</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Beispiel</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>No literal type characters exist for the <ph id="ph1">`Boolean`</ph>, <ph id="ph2">`Byte`</ph>, <ph id="ph3">`Date`</ph>, <ph id="ph4">`Object`</ph>, <ph id="ph5">`SByte`</ph>, or <ph id="ph6">`String`</ph> data types, or for any composite data types such as arrays or structures.</source>
          <target state="translated">Keine Literalzeichen für die <ph id="ph1">`Boolean`</ph>, <ph id="ph2">`Byte`</ph>, <ph id="ph3">`Date`</ph>, <ph id="ph4">`Object`</ph>, <ph id="ph5">`SByte`</ph>, oder <ph id="ph6">`String`</ph> Datentypen oder zusammengesetzte Datentypen wie z. B. Arrays oder Strukturen.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Literals can also use the identifier type characters (<ph id="ph1">`%`</ph>, <ph id="ph2">`&amp;`</ph>, <ph id="ph3">`@`</ph>, <ph id="ph4">`!`</ph>, <ph id="ph5">`#`</ph>, <ph id="ph6">`$`</ph>), as can variables, constants, and expressions.</source>
          <target state="translated">Literale können auch die Typkennzeichen (<ph id="ph1">`%`</ph>, <ph id="ph2">`&amp;`</ph>, <ph id="ph3">`@`</ph>, <ph id="ph4">`!`</ph>, <ph id="ph5">`#`</ph>, <ph id="ph6">`$`</ph>), wie Variablen, Konstanten und Ausdrücken können.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>However, the literal type characters (<ph id="ph1">`S`</ph>, <ph id="ph2">`I`</ph>, <ph id="ph3">`L`</ph>, <ph id="ph4">`D`</ph>, <ph id="ph5">`F`</ph>, <ph id="ph6">`R`</ph>, <ph id="ph7">`C`</ph>) can be used only with literals.</source>
          <target state="translated">Allerdings die Literalzeichen (<ph id="ph1">`S`</ph>, <ph id="ph2">`I`</ph>, <ph id="ph3">`L`</ph>, <ph id="ph4">`D`</ph>, <ph id="ph5">`F`</ph>, <ph id="ph6">`R`</ph>, <ph id="ph7">`C`</ph>) kann nur mit Literalen verwendet werden.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In all cases, the literal type character must immediately follow the literal value.</source>
          <target state="translated">In allen Fällen muss das Literalzeichen unmittelbar auf den Literalwert folgen.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Hexadecimal and Octal Literals</source>
          <target state="translated">Hexadezimale und oktale Literale</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The compiler normally construes an integer literal to be in the decimal (base 10) number system.</source>
          <target state="translated">Der Compiler construes normalerweise ein Ganzzahlliteral im Dezimalformat (Basis 10) Zahlensystem.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can force an integer literal to be hexadecimal (base 16) with the <ph id="ph1">`&amp;H`</ph> prefix, and you can force it to be octal (base 8) with the <ph id="ph2">`&amp;O`</ph> prefix.</source>
          <target state="translated">Sie können erzwingen, dass eine ganze Zahl literal werden Hexadezimalformat (Basis 16) mit der <ph id="ph1">`&amp;H`</ph> Präfix, und Sie können erzwingen, dass oktale (Basis 8) werden die <ph id="ph2">`&amp;O`</ph> Präfix.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The digits that follow the prefix must be appropriate for the number system.</source>
          <target state="translated">Die Ziffern, die dem Präfix folgen müssen Zahlensystem geeignet sein.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following table illustrates this.</source>
          <target state="translated">Dies wird in die folgende Tabelle veranschaulicht.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Number base</source>
          <target state="translated">Zahlenbasis</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Prefix</source>
          <target state="translated">Präfix</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Valid digit values</source>
          <target state="translated">Gültige Werte</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Beispiel</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Hexadecimal (base 16)</source>
          <target state="translated">Hexadezimalformat (Basis 16)</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>0-9 and A-F</source>
          <target state="translated">0-9 und A-F</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Octal (base 8)</source>
          <target state="translated">Oktalformat (Basis 8)</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>0-7</source>
          <target state="translated">0-7</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You can follow a prefixed literal with a literal type character.</source>
          <target state="translated">Sie können ein vorangestellter Literal mit einem Literalzeichen folgen.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The following example shows this.</source>
          <target state="translated">Das folgende Beispiel zeigt dies.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In the previous example, <ph id="ph1">`counter`</ph> has the decimal value of -32768, and <ph id="ph2">`flags`</ph> has the decimal value of +32768.</source>
          <target state="translated">Im vorherigen Beispiel <ph id="ph1">`counter`</ph> hat den Dezimalwert-32768, und <ph id="ph2">`flags`</ph> hat den Dezimalwert +&amp;32768;.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Siehe auch</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Datentypen<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Elementary Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/elementary-data-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Elementare Datentypen<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/elementary-data-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Value Types and Reference Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Werttypen und Verweistypen<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Type Conversions in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/type-conversions.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Typumwandlungen in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/type-conversions.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Troubleshooting Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Problembehandlung bei Datentypen<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Variable Declaration<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/variable-declaration.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Deklaration von Objektvariablen<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/variable-declaration.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Data Types<ept id="p1">](../../../../visual-basic/language-reference/data-types/data-type-summary.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Datentypen<ept id="p1">](../../../../visual-basic/language-reference/data-types/data-type-summary.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>