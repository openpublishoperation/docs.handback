<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8cabb2d319288653c80099c816e46e822429d6ec</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\variables\variable-declaration.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4851e4155555bc60b2377de2fc95a776e8efc24a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b95e9a521e51a58aa3913a7843afc173cf3310e</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_variable-declaration.b8962fd082025e5061e975e2749360cb562a83c3.de-de is different with handoff file name: variable-declaration.b8962fd082025e5061e975e2749360cb562a83c3.de-de.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Variable Declaration in Visual Basic | Microsoft Docs</source>
          <target state="translated">Variablendeklaration in Visual Basic | Microsoft-Dokumentation</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Variable Declaration in Visual Basic</source>
          <target state="translated">Variablendeklaration in Visual Basic</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You declare a variable to specify its name and characteristics.</source>
          <target state="translated">Sie deklarieren eine Variable, die den Namen und die Eigenschaften angeben.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The declaration statement for variables is the <bpt id="p1">[</bpt>Dim Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/dim-statement.md)</ept>.</source>
          <target state="translated">Die deklarationsanweisung für Variablen ist der <bpt id="p1">[</bpt>Dim-Anweisung<ept id="p1">](../../../../visual-basic/language-reference/statements/dim-statement.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Its location and contents determine the variable's characteristics.</source>
          <target state="translated">Bestimmen den Speicherort und den Inhalt Merkmale der Variablen.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For variable naming rules and considerations, see <bpt id="p1">[</bpt>Declared Element Names<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.</source>
          <target state="translated">Regeln für Variablennamen und Überlegungen finden Sie unter <bpt id="p1">[</bpt>Elementnamen deklariert<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Declaration Levels</source>
          <target state="translated">Deklaration von Ebenen</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Local and Member Variables</source>
          <target state="translated">Lokale und Membervariablen</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>local variable<ept id="p1">*</ept> is one that is declared within a procedure.</source>
          <target state="translated">Ein <bpt id="p1">*</bpt>lokale Variable<ept id="p1">*</ept> wird innerhalb einer Prozedur deklariert wird.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>member variable<ept id="p1">*</ept> is a member of a <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> type; it is declared at module level, inside a class, structure, or module, but not within any procedure internal to that class, structure, or module.</source>
          <target state="translated">Ein <bpt id="p1">*</bpt>Membervariable<ept id="p1">*</ept> ist ein Mitglied einer <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> eingeben; er wird auf Modulebene in einer Klasse, Struktur oder Modul, aber nicht innerhalb einer Prozedur, die für diese Klasse, Struktur oder Modul intern deklariert.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Shared and Instance Variables</source>
          <target state="translated">Freigegebene und Instanzvariablen</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In a class or structure, the category of a member variable depends on whether or not it is shared.</source>
          <target state="translated">Die Kategorie einer Membervariable hängt in einer Klasse oder Struktur davon, ob sie freigegeben werden.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If it is declared with the <bpt id="p1">[</bpt>Shared<ept id="p1">](../../../../visual-basic/language-reference/modifiers/shared.md)</ept> keyword, it is a <bpt id="p2">*</bpt>shared variable<ept id="p2">*</ept>, and it exists in a single copy shared among all instances of the class or structure.</source>
          <target state="translated">Deklarierte mit der <bpt id="p1">[</bpt>Shared<ept id="p1">](../../../../visual-basic/language-reference/modifiers/shared.md)</ept> -Schlüsselwort, es ist ein <bpt id="p2">*</bpt>freigegebene Variable<ept id="p2">*</ept>, und eine Kopie von allen Instanzen der Klasse oder Struktur gemeinsam genutztes.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Otherwise it is an <bpt id="p1">*</bpt>instance variable<ept id="p1">*</ept>, and a separate copy of it is created for each instance of the class or structure.</source>
          <target state="translated">Andernfalls ist es eine <bpt id="p1">*</bpt>Instanzvariable<ept id="p1">*</ept>, und eine separate Kopie für jede Instanz der Klasse oder Struktur erstellt wird.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A given copy of an instance variable is available only to the instance of the class or structure in which it was created.</source>
          <target state="translated">Eine solche Kopie einer Instanzvariablen steht nur für die Instanz der Klasse oder Struktur, in der sie erstellt wurde.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It is independent of a copy of the instance variable in any other instance of the class or structure.</source>
          <target state="translated">Sie ist unabhängig von der eine Kopie der Instanzvariablen in einer anderen Instanz der Klasse oder Struktur.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Declaring Data Type</source>
          <target state="translated">Deklarieren von-Datentyp</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>As<ept id="p1">](../../../../visual-basic/language-reference/statements/as-clause.md)</ept> clause in the declaration statement allows you to define the data type or object type of the variable you are declaring.</source>
          <target state="translated">Die <bpt id="p1">[</bpt>als<ept id="p1">](../../../../visual-basic/language-reference/statements/as-clause.md)</ept> -Klausel in der deklarationsanweisung können Sie den Datentyp oder Objekttyp der deklarieren Sie Variablen definieren.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can specify any of the following types for a variable:</source>
          <target state="translated">Sie können einen der folgenden Typen für eine Variable angeben:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An elementary data type, such as <ph id="ph1">`Boolean`</ph>, <ph id="ph2">`Long`</ph>, or <ph id="ph3">`Decimal`</ph></source>
          <target state="translated">Ein elementarer Datentyp, z. B. <ph id="ph1">`Boolean`</ph>, <ph id="ph2">`Long`</ph>, oder<ph id="ph3">`Decimal`</ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A composite data type, such as an array or structure</source>
          <target state="translated">Ein zusammengesetzter Datentyp, z. B. ein Array oder eine Struktur</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An object type, or class, defined either in your application or in another application</source>
          <target state="translated">Ein Objekttyp oder eine Klasse, die in der Anwendung oder in einer anderen Anwendung definiert</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph> class, such as &lt;xref:System.Windows.Forms.Label&gt; or &lt;xref:System.Windows.Forms.TextBox&gt;</source>
          <target state="translated">Ein <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph> Klasse, z. B. &lt;xref:System.Windows.Forms.Label&gt;oder &lt;xref:System.Windows.Forms.TextBox&gt;&lt;/xref:System.Windows.Forms.TextBox&gt; &lt;/xref:System.Windows.Forms.Label&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An interface type, such as &lt;xref:System.IComparable&gt; or &lt;xref:System.IDisposable&gt;</source>
          <target state="translated">Geben Sie eine Schnittstelle, wie z. B. &lt;xref:System.IComparable&gt;oder &lt;xref:System.IDisposable&gt;&lt;/xref:System.IDisposable&gt; &lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can declare several variables in one statement without having to repeat the data type.</source>
          <target state="translated">Sie können mehrere Variablen in einer Anweisung deklarieren, ohne den Datentyp wiederholen zu müssen.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the following statements, the variables <ph id="ph1">`i`</ph>, <ph id="ph2">`j`</ph>, and <ph id="ph3">`k`</ph> are declared as type <ph id="ph4">`Integer`</ph>, <ph id="ph5">`l`</ph> and <ph id="ph6">`m`</ph> as <ph id="ph7">`Long`</ph>, and <ph id="ph8">`x`</ph> and <ph id="ph9">`y`</ph> as <ph id="ph10">`Single`</ph>:</source>
          <target state="translated">In den folgenden Anweisungen, die Variablen <ph id="ph1">`i`</ph>, <ph id="ph2">`j`</ph>, und <ph id="ph3">`k`</ph> werden als Typ deklariert <ph id="ph4">`Integer`</ph>, <ph id="ph5">`l`</ph> und <ph id="ph6">`m`</ph> als <ph id="ph7">`Long`</ph>, und <ph id="ph8">`x`</ph> und <ph id="ph9">`y`</ph> als <ph id="ph10">`Single`</ph>:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information on data types, see <bpt id="p1">[</bpt>Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Datentypen finden Sie unter <bpt id="p1">[</bpt>Datentypen<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information on objects, see <bpt id="p1">[</bpt>Objects and Classes<ept id="p1">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)</ept> and <bpt id="p2">[</bpt>Programming with Components<ept id="p2">](http://msdn.microsoft.com/library/d4d4fcb4-e0b8-46b3-b679-7ee0026eb9e3)</ept>.</source>
          <target state="translated">Weitere Informationen zu Objekten finden Sie unter <bpt id="p1">[</bpt>Objekte und Klassen<ept id="p1">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)</ept> und <bpt id="p2">[</bpt>Programmieren mit Komponenten<ept id="p2">](http://msdn.microsoft.com/library/d4d4fcb4-e0b8-46b3-b679-7ee0026eb9e3)</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Local Type Inference</source>
          <target state="translated">Lokaler Typrückschluss</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Type inference<ept id="p1">*</ept> is used to determine the data types of local variables declared without an <ph id="ph1">`As`</ph> clause.</source>
          <target state="translated"><bpt id="p1">*</bpt>Typrückschluss<ept id="p1">*</ept> ermittelt, die die Datentypen für lokale Variablen, die ohne eine <ph id="ph1">`As`</ph> Klausel.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The compiler infers the type of the variable from the type of the initialization expression.</source>
          <target state="translated">Der Compiler leitet den Typ der Variablen vom Typ des Initialisierungsausdrucks ab.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This enables you to declare variables without explicitly stating a type.</source>
          <target state="translated">Dadurch können Sie Variablen deklarieren, ohne explizit einen Typ anzugeben.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In the following example, both <ph id="ph1">`num1`</ph> and <ph id="ph2">`num2`</ph> are strongly typed as integers.</source>
          <target state="translated">Im folgenden Beispiel beide <ph id="ph1">`num1`</ph> und <ph id="ph2">`num2`</ph> sind stark typisiert als ganze Zahlen.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrTypeInference#1<ept id="p2">](../../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/variable-declaration_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrTypeInference&amp;#1;<ept id="p2">](../../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/variable-declaration_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If you want to use local type inference, <ph id="ph1">`Option Infer`</ph> must be set to <ph id="ph2">`On`</ph>.</source>
          <target state="translated">Wenn Sie lokalen Typrückschluss verwenden möchten <ph id="ph1">`Option Infer`</ph> muss festgelegt werden, um <ph id="ph2">`On`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Local Type Inference<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept> and <bpt id="p2">[</bpt>Option Infer Statement<ept id="p2">](../../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>lokalen Typrückschluss<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept> und <bpt id="p2">[</bpt>Option Infer-Anweisung<ept id="p2">](../../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Characteristics of Declared Variables</source>
          <target state="translated">Merkmale der deklarierten Variablen</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>lifetime<ept id="p1">*</ept> of a variable is the period of time during which it is available for use.</source>
          <target state="translated">Die <bpt id="p1">*</bpt>Lebensdauer<ept id="p1">*</ept> einer Variablen ist der Zeitraum der sie verwendet werden kann.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In general, a variable exists as long as the element that declares it (such as a procedure or class) continues to exist.</source>
          <target state="translated">Im Allgemeinen existiert eine Variable, solange das Element, das es (z. B. eine Prozedur oder Klasse) deklariert weiterhin vorhanden ist.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If the variable does not need to continue existing beyond the lifetime of its containing element, you do not need to do anything special in the declaration.</source>
          <target state="translated">Wenn die Variable nicht bestehen bleiben nach Ablauf der Lebensdauer des enthaltenden Elements muss, müssen Sie nicht lediglich in der Deklaration.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the variable needs to continue to exist longer than its containing element, you can include the <ph id="ph1">`Static`</ph> or <ph id="ph2">`Shared`</ph> keyword in its <ph id="ph3">`Dim`</ph> statement.</source>
          <target state="translated">Wenn die Variable länger als ihr enthaltendes Element bestehen bleiben muss, können Sie enthalten die <ph id="ph1">`Static`</ph> oder <ph id="ph2">`Shared`</ph> -Schlüsselwort in der <ph id="ph3">`Dim`</ph> Anweisung.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Lifetime in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/lifetime.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Lebensdauer in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/lifetime.md)</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>scope<ept id="p1">*</ept> of a variable is the set of all code that can refer to it without qualifying its name.</source>
          <target state="translated">Die <bpt id="p1">*</bpt>Bereich<ept id="p1">*</ept> einer Variablen ist ein Satz von Code, die darauf verweisen kann, ohne dessen Namen zu qualifizieren.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A variable's scope is determined by where it is declared.</source>
          <target state="translated">Der Gültigkeitsbereich einer Variablen wird bestimmt, wo sie deklariert ist.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Code located in a given region can use the variables defined in that region without having to qualify their names.</source>
          <target state="translated">Code befindet sich in einer bestimmten Region können die Variablen, die in diesem Bereich definiert werden, ohne ihren Namen zu qualifizieren.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Scope in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/scope.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Gültigkeitsbereich in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/scope.md)</ept>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A variable's <bpt id="p1">*</bpt>access level<ept id="p1">*</ept> is the extent of code that has permission to access it.</source>
          <target state="translated">Einer Variablentyps <bpt id="p1">*</bpt>Zugriffsebene<ept id="p1">*</ept> wird das Ausmaß der Code die Berechtigung zum Zugriff darauf hat.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This is determined by the access modifier (such as <bpt id="p1">[</bpt>Public<ept id="p1">](../../../../visual-basic/language-reference/modifiers/public.md)</ept> or <bpt id="p2">[</bpt>Private<ept id="p2">](../../../../visual-basic/language-reference/modifiers/private.md)</ept>) that you use in the <ph id="ph1">`Dim`</ph> statement.</source>
          <target state="translated">Dies richtet sich nach den Zugriffsmodifizierer (wie z. B. <bpt id="p1">[</bpt>öffentlichen<ept id="p1">](../../../../visual-basic/language-reference/modifiers/public.md)</ept> oder <bpt id="p2">[</bpt>Private<ept id="p2">](../../../../visual-basic/language-reference/modifiers/private.md)</ept>), mit denen Sie der <ph id="ph1">`Dim`</ph> Anweisung.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Access Levels in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Zugriffsebenen in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Siehe auch</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a New Variable<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/how-to-create-a-new-variable.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Gewusst wie: Erstellen einer neuen Variablen<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/how-to-create-a-new-variable.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Move Data Into and Out of a Variable<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/how-to-move-data-into-and-out-of-a-variable.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Gewusst wie: Verschieben von Daten in und aus einer Variablen<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/how-to-move-data-into-and-out-of-a-variable.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Data Types<ept id="p1">](../../../../visual-basic/language-reference/data-types/data-type-summary.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Datentypen<ept id="p1">](../../../../visual-basic/language-reference/data-types/data-type-summary.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Protected<ept id="p1">](../../../../visual-basic/language-reference/modifiers/protected.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Geschützte<ept id="p1">](../../../../visual-basic/language-reference/modifiers/protected.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Friend<ept id="p1">](../../../../visual-basic/language-reference/modifiers/friend.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Friend<ept id="p1">](../../../../visual-basic/language-reference/modifiers/friend.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Static<ept id="p1">](../../../../visual-basic/language-reference/modifiers/static.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Statische<ept id="p1">](../../../../visual-basic/language-reference/modifiers/static.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Declared Element Characteristics<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-characteristics.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Merkmale deklarierter Elemente<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-characteristics.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Local Type Inference<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Lokaler Typrückschluss<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Option Infer Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Option Infer-Anweisung<ept id="p1">](../../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>