<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a9165414bc08b62aab20410e7af187fa4b45c162</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\error-messages\because-this-call-is-not-awaited-the-current-method-continues-to-run.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3d2c179be1f05ec425afe14108896563992e2754</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">361ef3039fedf44b7ecc2c9f446bc97f59b06e87</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_because-this-call-is-not-awaited-the-current-method-continues-to-run.d3b768fb90591212f47a96d7c79693b8cfcdb2d8.es-es is different with handoff file name: because-this-call-is-not-awaited-the-current-method-continues-to-run.d3b768fb90591212f47a96d7c79693b8cfcdb2d8.es-es.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Because this call is not awaited, the current method continues to run before the call is completed | Microsoft Docs</source>
          <target state="translated">Dado que esta llamada no se espera, el método actual continúa ejecutándose antes de que se complete la llamada | Documentos de Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Because this call is not awaited, the current method continues to run before the call is completed</source>
          <target state="translated">Como esta llamada no es "awaited", la ejecución del método actual continuará antes de que se complete la llamada.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Because this call is not awaited, execution of the current method continues before the call is completed.</source>
          <target state="translated">Dado que no se esperaba esta llamada, la ejecución del método actual continuará antes de que se complete la llamada.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Consider applying the 'Await' operator to the result of the call.</source>
          <target state="translated">Considere la posibilidad de aplicar el operador "Await" al resultado de la llamada.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The current method calls an async method that returns a &lt;xref:System.Threading.Tasks.Task&gt; or a &lt;xref:System.Threading.Tasks.Task%601&gt; and doesn’t apply the <bpt id="p1">[</bpt>Await<ept id="p1">](../../../visual-basic/language-reference/operators/await-operator.md)</ept> operator to the result.</source>
          <target state="translated">El método actual llama a un método asincrónico que devuelve un &lt;xref:System.Threading.Tasks.Task&gt;o &lt;xref:System.Threading.Tasks.Task%601&gt;y no se aplica el <bpt id="p1">[</bpt>Await<ept id="p1">](../../../visual-basic/language-reference/operators/await-operator.md)</ept> al resultado.&lt;/xref:System.Threading.Tasks.Task%601&gt; &lt;/xref:System.Threading.Tasks.Task&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The call to the async method starts an asynchronous task.</source>
          <target state="translated">La llamada al método asincrónico inicia una tarea asincrónica.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>However, because no <ph id="ph1">`Await`</ph> operator is applied, the program continues without waiting for the task to complete.</source>
          <target state="translated">Pero, dado que no se aplica un operador <ph id="ph1">`Await`</ph> , el programa continúa sin esperar a que se complete la tarea.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In most cases, that behavior isn't expected.</source>
          <target state="translated">En la mayoría de los casos, no se espera ese comportamiento.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Usually other aspects of the calling method depend on the results of the call or, minimally, the called method is expected to complete before you return from the method that contains the call.</source>
          <target state="translated">Normalmente otros aspectos del método de llamada dependen de los resultados de la llamada o, como mínimo, se espera que el método llamado se complete antes de volver del método que contiene la llamada.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>An equally important issue is what happens with exceptions that are raised in the called async method.</source>
          <target state="translated">Otro problema igual de importante es lo que sucede con las excepciones que se producen en el método asincrónico llamado.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An exception that’s raised in a method that returns a &lt;xref:System.Threading.Tasks.Task&gt; or  &lt;xref:System.Threading.Tasks.Task%601&gt; is stored in the returned task.</source>
          <target state="translated">Una excepción que se produce en un método que devuelve un &lt;xref:System.Threading.Tasks.Task&gt;o &lt;xref:System.Threading.Tasks.Task%601&gt;se almacena en la tarea devuelta.&lt;/xref:System.Threading.Tasks.Task%601&gt; &lt;/xref:System.Threading.Tasks.Task&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If you don't await the task or explicitly check for exceptions, the exception is lost.</source>
          <target state="translated">Si no espera la tarea o comprueba explícitamente las excepciones, se perderá la excepción.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you await the task, its exception is rethrown.</source>
          <target state="translated">Si espera la tarea, su excepción se volverá a producir.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>As a best practice, you should always await the call.</source>
          <target state="translated">El procedimiento recomendado es esperar siempre la llamada.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>By default, this message is a warning.</source>
          <target state="translated">De forma predeterminada, este mensaje es una advertencia.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For more information about hiding warnings or treating warnings as errors, see <bpt id="p1">[</bpt>Configuring Warnings in Visual Basic<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/configuring-warnings-in-visual-basic)</ept>.</source>
          <target state="translated">Para obtener más información acerca de cómo ocultar las advertencias o tratar las advertencias como errores, vea <bpt id="p1">[</bpt>configurar advertencias en Visual Basic<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/configuring-warnings-in-visual-basic)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Error ID:<ept id="p1">**</ept> BC42358</source>
          <target state="translated"><bpt id="p1">**</bpt>Identificador de error:<ept id="p1">**</ept> BC42358</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To address this warning</source>
          <target state="translated">Para resolver esta advertencia</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You should consider suppressing the warning only if you're sure that you don't want to wait for the asynchronous call to complete and that the called method won't raise any exceptions.</source>
          <target state="translated">Considere la posibilidad de suprimir la advertencia solamente si está seguro de que no quiere esperar a que se complete la llamada asincrónica y que el método llamado no producirá excepciones.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In that case, you can suppress the warning by assigning the task result of the call to a variable.</source>
          <target state="translated">En ese caso, puede suprimir la advertencia asignando el resultado de la tarea de la llamada a una variable.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following example shows how to cause the warning, how to suppress it, and how to await the call.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo provocar la advertencia, cómo suprimirla y cómo esperar la llamada.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In the example, if you choose Call #1 or Call #2, the unawaited async method (<ph id="ph1">`CalledMethodAsync`</ph>) finishes after both its caller (<ph id="ph2">`CallingMethodAsync`</ph>) and the caller's caller (<ph id="ph3">`StartButton_Click`</ph>) are complete.</source>
          <target state="translated">En el ejemplo, si elige Call #1 o Call #2, el método asincrónico no esperado (<ph id="ph1">`CalledMethodAsync`</ph>) termina después de que se completen su llamador (<ph id="ph2">`CallingMethodAsync`</ph>) y el llamador del llamador (<ph id="ph3">`StartButton_Click`</ph>).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The last line in the following output shows you when the called method finishes.</source>
          <target state="translated">La última línea de la salida siguiente muestra cuándo finaliza el método llamado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Entry to and exit from the event handler that calls <ph id="ph1">`CallingMethodAsync`</ph> in the full example are marked in the output.</source>
          <target state="translated">La entrada y la salida del controlador de eventos que llama a <ph id="ph1">`CallingMethodAsync`</ph> en el ejemplo completo se marcan en la salida.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following Windows Presentation Foundation (WPF) application contains the methods from the previous example.</source>
          <target state="translated">La siguiente aplicación de Windows Presentation Foundation (WPF) contiene los métodos del ejemplo anterior.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following steps set up the application.</source>
          <target state="translated">Los siguientes pasos sirven para configurar la aplicación.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Create a WPF application, and name it <ph id="ph1">`AsyncWarning`</ph>.</source>
          <target state="translated">Cree una aplicación WPF y asígnele el nombre <ph id="ph1">`AsyncWarning`</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In the Visual Studio Code Editor, choose the <bpt id="p1">**</bpt>MainWindow.xaml<ept id="p1">**</ept> tab.</source>
          <target state="translated">En el Editor de código de Visual Studio, elija la pestaña <bpt id="p1">**</bpt>MainWindow.xaml<ept id="p1">**</ept> .</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the tab isn't visible, open the shortcut menu for MainWindow.xaml in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, and then choose <bpt id="p2">**</bpt>View Code<ept id="p2">**</ept>.</source>
          <target state="translated">Si la pestaña no está visible, abra el menú contextual de MainWindow.xaml en el <bpt id="p1">**</bpt>Explorador de soluciones<ept id="p1">**</ept>y elija <bpt id="p2">**</bpt>Ver código<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Replace the code in the <bpt id="p1">**</bpt>XAML<ept id="p1">**</ept> view of MainWindow.xaml with the following code.</source>
          <target state="translated">Reemplace el código de la vista <bpt id="p1">**</bpt>XAML<ept id="p1">**</ept> de MainWindow.xaml por el código siguiente.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A simple window that contains a button and a text box appears in the <bpt id="p1">**</bpt>Design<ept id="p1">**</ept> view of MainWindow.xaml.</source>
          <target state="translated">En la vista <bpt id="p1">**</bpt>Diseño<ept id="p1">**</ept> de MainWindow.xaml aparece una ventana simple que contiene un botón y un cuadro de texto.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more information about the XAML Designer, see <bpt id="p1">[</bpt>Creating a UI by using XAML Designer<ept id="p1">](https://docs.microsoft.com/visualstudio/designers/creating-a-ui-by-using-xaml-designer-in-visual-studio)</ept>.</source>
          <target state="translated">Para obtener más información acerca del Diseñador de XAML, vea <bpt id="p1">[</bpt>crear una interfaz de usuario mediante el Diseñador XAML<ept id="p1">](https://docs.microsoft.com/visualstudio/designers/creating-a-ui-by-using-xaml-designer-in-visual-studio)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For information about how to build your own simple UI, see the "To create a WPF application" and "To design a simple WPF MainWindow" sections of <bpt id="p1">[</bpt>Walkthrough: Accessing the Web by Using Async and Await<ept id="p1">](http://msdn.microsoft.com/library/25879a6d-fdee-4a38-bc98-bb8c24d16042)</ept>.</source>
          <target state="translated">Para obtener información sobre cómo crear su propia interfaz de usuario simple, consulte la "para crear una aplicación de WPF" y "para diseñar un MainWindow simple de WPF" secciones de <bpt id="p1">[</bpt>Tutorial: obtener acceso a la Web mediante el uso de Async y Await<ept id="p1">](http://msdn.microsoft.com/library/25879a6d-fdee-4a38-bc98-bb8c24d16042)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Replace the code in MainWindow.xaml.vb with the following code.</source>
          <target state="translated">Reemplace el código en el archivo MainWindow.xaml.vb por el código siguiente.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Choose the F5 key to run the program, and then choose the <bpt id="p1">**</bpt>Start<ept id="p1">**</ept> button.</source>
          <target state="translated">Presione la tecla F5 para ejecutar el programa y elija el botón <bpt id="p1">**</bpt>Inicio<ept id="p1">**</ept> .</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The expected output appears at the end of the code.</source>
          <target state="translated">La salida esperada aparece al final del código.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vea también</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Await Operator<ept id="p1">](../../../visual-basic/language-reference/operators/await-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Await (operador)<ept id="p1">](../../../visual-basic/language-reference/operators/await-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Asynchronous Programming with Async and Await<ept id="p1">](../../../visual-basic/programming-guide/concepts/async/index.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Programación asincrónica con Async y Await<ept id="p1">](../../../visual-basic/programming-guide/concepts/async/index.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>