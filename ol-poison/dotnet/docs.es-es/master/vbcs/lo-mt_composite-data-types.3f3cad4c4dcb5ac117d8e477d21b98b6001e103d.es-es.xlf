<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d81b2c08155cb16754e780fdfb341b596322302d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\data-types\composite-data-types.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e1696397b71c1c4e4bf98ea354b987a995419cd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c37a6f338843042c21a64f78047d052bbac64867</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_composite-data-types.3f3cad4c4dcb5ac117d8e477d21b98b6001e103d.es-es is different with handoff file name: composite-data-types.3f3cad4c4dcb5ac117d8e477d21b98b6001e103d.es-es.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Composite Data Types (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Tipos de datos compuestos (Visual Basic) | Documentos de Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Composite Data Types (Visual Basic)</source>
          <target state="translated">Tipos de datos compuestos (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In addition to the elementary data types <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> supplies, you can also assemble items of different types to create <bpt id="p1">*</bpt>composite data types<ept id="p1">*</ept> such as structures, arrays, and classes.</source>
          <target state="translated">Además de los tipos de datos elementales <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> suministros, también es posible juntar elementos de distintos tipos para crear <bpt id="p1">*</bpt>tipos de datos compuestos<ept id="p1">*</ept> como estructuras, matrices y clases.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can build composite data types from elementary types and from other composite types.</source>
          <target state="translated">Puede crear tipos de datos compuestos de tipos elementales y de otros tipos compuestos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For example, you can define an array of structure elements, or a structure with array members.</source>
          <target state="translated">Por ejemplo, puede definir una matriz de elementos de estructura o una estructura con miembros de la matriz.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Data Types</source>
          <target state="translated">Tipos de datos</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A composite type is different from the data type of any of its components.</source>
          <target state="translated">Un tipo compuesto es diferente del tipo de datos de cualquiera de sus componentes.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, an array of <ph id="ph1">`Integer`</ph> elements is not of the <ph id="ph2">`Integer`</ph> data type.</source>
          <target state="translated">Por ejemplo, una matriz de <ph id="ph1">`Integer`</ph> elementos no es de la <ph id="ph2">`Integer`</ph> tipo de datos.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An array data type is normally represented using the element type, parentheses, and commas as necessary.</source>
          <target state="translated">Un tipo de datos de matriz se representa normalmente mediante el tipo de elemento, paréntesis y comas según sea necesario.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, a one-dimensional array of <ph id="ph1">`String`</ph> elements is represented as <ph id="ph2">`String()`</ph>, and a two-dimensional array of <ph id="ph3">`Boolean`</ph> elements is represented as <ph id="ph4">`Boolean(,)`</ph>.</source>
          <target state="translated">Por ejemplo, una matriz unidimensional de <ph id="ph1">`String`</ph> elementos se representa como <ph id="ph2">`String()`</ph>y una matriz bidimensional de <ph id="ph3">`Boolean`</ph> elementos se representa como <ph id="ph4">`Boolean(,)`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Structure Types</source>
          <target state="translated">Tipos de estructura</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>There is no single data type comprising all structures.</source>
          <target state="translated">No hay ningún tipo de datos que incluya todas las estructuras.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Instead, each definition of a structure represents a unique data type, even if two structures define identical elements in the same order.</source>
          <target state="translated">En su lugar, cada definición de una estructura representa un tipo de datos único, aunque dos estructuras definan elementos idénticos en el mismo orden.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>However, if you create two or more instances of the same structure, <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> considers them to be of the same data type.</source>
          <target state="translated">Sin embargo, si crea dos o más instancias de la misma estructura, <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> considera que son del mismo tipo de datos.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Array Types</source>
          <target state="translated">Tipos de matriz</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>There is no single data type comprising all arrays.</source>
          <target state="translated">No hay ningún tipo de datos que incluya todas las matrices.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The data type of a particular instance of an array is determined by the following:</source>
          <target state="translated">El tipo de datos de una instancia determinada de una matriz se determina por el texto siguiente:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The fact of being an array</source>
          <target state="translated">El hecho de ser una matriz</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The rank (number of dimensions) of the array</source>
          <target state="translated">El rango (número de dimensiones) de la matriz</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The element type of the array</source>
          <target state="translated">El tipo de elemento de la matriz</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>In particular, the length of a given dimension is not part of the instance's data type.</source>
          <target state="translated">En concreto, la longitud de una dimensión determinada no forma parte de la instancia tipo de datos.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The following example illustrates this.</source>
          <target state="translated">Esto se ilustra en el siguiente ejemplo:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the preceding example, array variables <ph id="ph1">`arrayA`</ph> and <ph id="ph2">`arrayB`</ph> are considered to be of the same data type — <ph id="ph3">`Byte()`</ph> — even though they are initialized to different lengths.</source>
          <target state="translated">En el ejemplo anterior, las variables de matriz <ph id="ph1">`arrayA`</ph> y <ph id="ph2">`arrayB`</ph> se consideran del mismo tipo de datos: <ph id="ph3">`Byte()`</ph> , aunque se hayan inicializado con distintas longitudes.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Variables <ph id="ph1">`arrayB`</ph> and <ph id="ph2">`arrayC`</ph> are not of the same type because their element types are different.</source>
          <target state="translated">Variables <ph id="ph1">`arrayB`</ph> y <ph id="ph2">`arrayC`</ph> no son del mismo tipo porque sus tipos de elemento son diferentes.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Variables <ph id="ph1">`arrayC`</ph> and <ph id="ph2">`arrayD`</ph> are not of the same type because their ranks are different.</source>
          <target state="translated">Variables <ph id="ph1">`arrayC`</ph> y <ph id="ph2">`arrayD`</ph> no son del mismo tipo porque sus rangos son diferentes.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Variables <ph id="ph1">`arrayD`</ph> and <ph id="ph2">`arrayE`</ph> have the same type — <ph id="ph3">`Short(,)`</ph> — because their ranks and element types are the same, even though <ph id="ph4">`arrayD`</ph> is not yet initialized.</source>
          <target state="translated">Variables <ph id="ph1">`arrayD`</ph> y <ph id="ph2">`arrayE`</ph> tienen el mismo tipo, <ph id="ph3">`Short(,)`</ph> , porque sus rangos y tipos de elemento son los mismos, aunque <ph id="ph4">`arrayD`</ph> no se ha inicializado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information on arrays, see <bpt id="p1">[</bpt>Arrays<ept id="p1">](../../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre matrices, consulte <bpt id="p1">[</bpt>matrices<ept id="p1">](../../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Class Types</source>
          <target state="translated">Tipos de clase</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>There is no single data type comprising all classes.</source>
          <target state="translated">No hay ningún tipo de datos que incluya todas las clases.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Although one class can inherit from another class, each is a separate data type.</source>
          <target state="translated">Aunque una clase puede heredar de otra clase, cada uno de ellos es un tipo de datos independiente.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Multiple instances of the same class are of the same data type.</source>
          <target state="translated">Varias instancias de la misma clase son del mismo tipo de datos.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If you assign one class instance variable to another, not only do they have the same data type, they point to the same class instance in memory.</source>
          <target state="translated">Si asigna una variable de instancia de clase a otro, no sólo tienen los mismos datos escriba, señalan a la misma instancia de clase en la memoria.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>For more information on classes, see <bpt id="p1">[</bpt>Objects and Classes<ept id="p1">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre clases, consulte <bpt id="p1">[</bpt>objetos y clases<ept id="p1">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vea también</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Tipos de datos<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Elementary Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/elementary-data-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Tipos de datos elementales<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/elementary-data-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Generic Types in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Tipos genéricos en Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Value Types and Reference Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Tipos de valor y tipos de referencia<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Type Conversions in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/type-conversions.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Conversiones de tipos en Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/type-conversions.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Structures<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/structures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Estructuras<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/structures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Troubleshooting Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Solucionar problemas de tipos de datos<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Hold More Than One Value in a Variable<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/how-to-hold-more-than-one-value-in-a-variable.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Contener más de un valor en una variable<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/how-to-hold-more-than-one-value-in-a-variable.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>