<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">00d5d0e83a88a0c7ac3ade92d09c584fce64fcd8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\statements\dim-statement.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a22ed6218a9fbae9b8b39d1afb10c4157d21b103</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf658227bdd83bd7c60daf6f59a08a864146c03b</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_dim-statement.392cfefd19b3ed95783a163992eae1593bd4020b.es-es is different with handoff file name: dim-statement.392cfefd19b3ed95783a163992eae1593bd4020b.es-es.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Dim Statement (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Instrucción Dim (Visual Basic) | Documentos de Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Dim Statement (Visual Basic)</source>
          <target state="translated">Instrucción Dim (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Declares and allocates storage space for one or more variables.</source>
          <target state="translated">Declara y asigna espacio de almacenamiento para una o más variables.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Sintaxis</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">Elementos</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Attribute List<ept id="p1">](../../../visual-basic/language-reference/statements/attribute-list.md)</ept>.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>lista de los atributos<ept id="p1">](../../../visual-basic/language-reference/statements/attribute-list.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Can be one of the following:</source>
          <target state="translated">Puede ser uno de los siguientes:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Public<ept id="p1">](../../../visual-basic/language-reference/modifiers/public.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Public<ept id="p1">](../../../visual-basic/language-reference/modifiers/public.md)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Protected<ept id="p1">](../../../visual-basic/language-reference/modifiers/protected.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Protected<ept id="p1">](../../../visual-basic/language-reference/modifiers/protected.md)</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Friend<ept id="p1">](../../../visual-basic/language-reference/modifiers/friend.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Friend<ept id="p1">](../../../visual-basic/language-reference/modifiers/friend.md)</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Private<ept id="p1">](../../../visual-basic/language-reference/modifiers/private.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Private<ept id="p1">](../../../visual-basic/language-reference/modifiers/private.md)</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Access Levels in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>Access Levels in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Shared<ept id="p1">](../../../visual-basic/language-reference/modifiers/shared.md)</ept>.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>compartido<ept id="p1">](../../../visual-basic/language-reference/modifiers/shared.md)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Shadows<ept id="p1">](../../../visual-basic/language-reference/modifiers/shadows.md)</ept>.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>sombras<ept id="p1">](../../../visual-basic/language-reference/modifiers/shadows.md)</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Static<ept id="p1">](../../../visual-basic/language-reference/modifiers/static.md)</ept>.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>estático<ept id="p1">](../../../visual-basic/language-reference/modifiers/static.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>ReadOnly<ept id="p1">](../../../visual-basic/language-reference/modifiers/readonly.md)</ept>.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>ReadOnly<ept id="p1">](../../../visual-basic/language-reference/modifiers/readonly.md)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Specifies that these are object variables that refer to instances of a class that can raise events.</source>
          <target state="translated">Especifica que se trata de las variables de objeto que hacen referencia a instancias de una clase que puede provocar eventos.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>WithEvents<ept id="p1">](../../../visual-basic/language-reference/modifiers/withevents.md)</ept>.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>WithEvents<ept id="p1">](../../../visual-basic/language-reference/modifiers/withevents.md)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>List of variables being declared in this statement.</source>
          <target state="translated">Lista de variables que se declaran en esta instrucción.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`variable`</ph> has the following syntax and parts:</source>
          <target state="translated">Cada <ph id="ph1">`variable`</ph> tiene la sintaxis y las partes siguientes:</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`variablename [ ( [ boundslist ] ) ] [ As [ New ] datatype [ With`</ph>{<ph id="ph2">`[ .propertyname = propinitializer [ , ... ] ] } ] ] [ = initializer ]`</ph></source>
          <target state="translated"><ph id="ph1">`variablename [ ( [ boundslist ] ) ] [ As [ New ] datatype [ With`</ph>{<ph id="ph2">`[ .propertyname = propinitializer [ , ... ] ] } ] ] [ = initializer ]`</ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Part</source>
          <target state="translated">Parte</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Obligatorio.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Name of the variable.</source>
          <target state="translated">Nombre de la variable.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Declared Element Names<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>nombres de elementos declarados<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>List of bounds of each dimension of an array variable.</source>
          <target state="translated">Lista de límites de cada dimensión de una variable de matriz.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the class when the <ph id="ph1">`Dim`</ph> statement runs.</source>
          <target state="translated">Crea una nueva instancia de la clase cuando el <ph id="ph1">`Dim`</ph> se ejecuta la instrucción.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Data type of the variable.</source>
          <target state="translated">Tipo de datos de la variable.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Introduces the object initializer list.</source>
          <target state="translated">Presenta la lista de inicializadores de objeto.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Opcional.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The name of a property in the class you are making an instance of.</source>
          <target state="translated">El nombre de una propiedad en la clase está creando una instancia de.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Required after <ph id="ph1">`propertyname`</ph> =.</source>
          <target state="translated">Necesario después <ph id="ph1">`propertyname`</ph> =.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The expression that is evaluated and assigned to the property name.</source>
          <target state="translated">La expresión que se evalúa y se asigna al nombre de propiedad.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Optional if <ph id="ph1">`New`</ph> is not specified.</source>
          <target state="translated">Opcional si <ph id="ph1">`New`</ph> no se ha especificado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Expression that is evaluated and assigned to the variable when it is created.</source>
          <target state="translated">Expresión que se evalúa y se asigna a la variable cuando se crea.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">Comentarios</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The Visual Basic compiler uses the <ph id="ph1">`Dim`</ph> statement to determine the variable's data type and other information, such as what code can access the variable.</source>
          <target state="translated">El compilador de Visual Basic utiliza la <ph id="ph1">`Dim`</ph> instrucción para determinar el tipo de datos de la variable y otra información, como qué código puede tener acceso a la variable.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following example declares a variable to hold an <ph id="ph1">`Integer`</ph> value.</source>
          <target state="translated">En el ejemplo siguiente se declara una variable que contenga una <ph id="ph1">`Integer`</ph> valor.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>You can specify any data type or the name of an enumeration, structure, class, or interface.</source>
          <target state="translated">Puede especificar cualquier tipo de datos o el nombre de una estructura, clase, interfaz o enumeración.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For a reference type, you use the <ph id="ph1">`New`</ph> keyword to create a new instance of the class or structure that is specified by the data type.</source>
          <target state="translated">Para un tipo de referencia, utiliza la <ph id="ph1">`New`</ph> (palabra clave) para crear una nueva instancia de la clase o estructura que se especifica el tipo de datos.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If you use <ph id="ph1">`New`</ph>, you do not use an initializer expression.</source>
          <target state="translated">Si utiliza <ph id="ph1">`New`</ph>, no utiliza una expresión de inicializador.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Instead, you supply arguments, if they are required, to the constructor of the class from which you are creating the variable.</source>
          <target state="translated">En su lugar, proporcione argumentos, si es necesarios, al constructor de la clase desde el que está creando la variable.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You can declare a variable in a procedure, block, class, structure, or module.</source>
          <target state="translated">Puede declarar una variable en una clase, estructura, procedimiento, bloque o módulo.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>You cannot declare a variable in a source file, namespace, or interface.</source>
          <target state="translated">No se puede declarar una variable en un archivo de código fuente, el espacio de nombres o la interfaz.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Declaration Contexts and Default Access Levels<ept id="p1">](../../../visual-basic/language-reference/statements/declaration-contexts-and-default-access-levels.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>contextos de declaración y niveles de acceso predeterminados<ept id="p1">](../../../visual-basic/language-reference/statements/declaration-contexts-and-default-access-levels.md)</ept>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A variable that is declared at module level, outside any procedure, is a <bpt id="p1">*</bpt>member variable<ept id="p1">*</ept> or <bpt id="p2">*</bpt>field<ept id="p2">*</ept>.</source>
          <target state="translated">Una variable que se declara en el nivel de módulo, fuera de cualquier procedimiento, es un <bpt id="p1">*</bpt>variable miembro<ept id="p1">*</ept> o <bpt id="p2">*</bpt>campo<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Member variables are in scope throughout their class, structure, or module.</source>
          <target state="translated">Las variables miembro están en el ámbito de su clase, estructura o módulo.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A variable that is declared at procedure level is a <bpt id="p1">*</bpt>local variable<ept id="p1">*</ept>.</source>
          <target state="translated">Una variable que se declara en el nivel de procedimiento es una <bpt id="p1">*</bpt>variable local<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Local variables are in scope only within their procedure or block.</source>
          <target state="translated">Las variables locales están en ámbito dentro de su procedimiento o bloque.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The following access modifiers are used to declare variables outside a procedure: <ph id="ph1">`Public`</ph>, <ph id="ph2">`Protected`</ph>, <ph id="ph3">`Friend`</ph>, <ph id="ph4">`Protected Friend`</ph>, and <ph id="ph5">`Private`</ph>.</source>
          <target state="translated">Los modificadores de acceso siguientes se utilizan para declarar variables fuera de un procedimiento: <ph id="ph1">`Public`</ph>, <ph id="ph2">`Protected`</ph>, <ph id="ph3">`Friend`</ph>, <ph id="ph4">`Protected Friend`</ph>, y <ph id="ph5">`Private`</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Access Levels in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>niveles de acceso en Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Dim`</ph> keyword is optional and usually omitted if you specify any of the following modifiers: <ph id="ph2">`Public`</ph>, <ph id="ph3">`Protected`</ph>, <ph id="ph4">`Friend`</ph>, <ph id="ph5">`Protected Friend`</ph>, <ph id="ph6">`Private`</ph>, <ph id="ph7">`Shared`</ph>, <ph id="ph8">`Shadows`</ph>, <ph id="ph9">`Static`</ph>, <ph id="ph10">`ReadOnly`</ph>, or <ph id="ph11">`WithEvents`</ph>.</source>
          <target state="translated">El <ph id="ph1">`Dim`</ph> palabra clave es opcional y generalmente se omite si se especifica cualquiera de los siguientes modificadores: <ph id="ph2">`Public`</ph>, <ph id="ph3">`Protected`</ph>, <ph id="ph4">`Friend`</ph>, <ph id="ph5">`Protected Friend`</ph>, <ph id="ph6">`Private`</ph>, <ph id="ph7">`Shared`</ph>, <ph id="ph8">`Shadows`</ph>, <ph id="ph9">`Static`</ph>, <ph id="ph10">`ReadOnly`</ph>, o <ph id="ph11">`WithEvents`</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Option Explicit`</ph> is on (the default), the compiler requires a declaration for every variable you use.</source>
          <target state="translated">Si <ph id="ph1">`Option Explicit`</ph> es on (valor predeterminado), el compilador requiere una declaración para cada variable que se utiliza.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Option Explicit Statement<ept id="p1">](../../../visual-basic/language-reference/statements/option-explicit-statement.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>instrucción Option Explicit<ept id="p1">](../../../visual-basic/language-reference/statements/option-explicit-statement.md)</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Specifying an Initial Value</source>
          <target state="translated">Especificar un valor inicial</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You can assign a value to a variable when it is created.</source>
          <target state="translated">Puede asignar un valor a una variable cuando se crea.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>For a value type, you use an <bpt id="p1">*</bpt>initializer<ept id="p1">*</ept> to supply an expression to be assigned to the variable.</source>
          <target state="translated">Para un tipo de valor, utiliza un <bpt id="p1">*</bpt>inicializador<ept id="p1">*</ept> para proporcionar una expresión que se asignará a la variable.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The expression must evaluate to a constant that can be calculated at compile time.</source>
          <target state="translated">La expresión debe evaluarse como una constante que se puede calcular en tiempo de compilación.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If an initializer is specified and a data type is not specified in an <ph id="ph1">`As`</ph> clause, <bpt id="p1">*</bpt>type inference<ept id="p1">*</ept> is used to infer the data type from the initializer.</source>
          <target state="translated">Si se especifica un inicializador y no se especifica un tipo de datos en un <ph id="ph1">`As`</ph> cláusula, <bpt id="p1">*</bpt>inferencia de tipo<ept id="p1">*</ept> se utilizan para inferir el tipo de datos del inicializador.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>In the following example, both <ph id="ph1">`num1`</ph> and <ph id="ph2">`num2`</ph> are strongly typed as integers.</source>
          <target state="translated">En el siguiente ejemplo, ambos <ph id="ph1">`num1`</ph> y <ph id="ph2">`num2`</ph> están fuertemente tipados como enteros.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>In the second declaration, type inference infers the type from the value 3.</source>
          <target state="translated">En la segunda declaración, la inferencia de tipo deduce el tipo desde el valor 3.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Type inference applies at the procedure level.</source>
          <target state="translated">Inferencia de tipo se aplica en el nivel de procedimiento.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>It does not apply outside a procedure in a class, structure, module, or interface.</source>
          <target state="translated">No se aplica fuera de un procedimiento en una clase, estructura, módulo o interfaz.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For more information about type inference, see <bpt id="p1">[</bpt>Option Infer Statement<ept id="p1">](../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept> and <bpt id="p2">[</bpt>Local Type Inference<ept id="p2">](../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de la inferencia de tipo, consulte <bpt id="p1">[</bpt>Option Infer instrucción<ept id="p1">](../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept> y <bpt id="p2">[</bpt>inferencia de tipo Local<ept id="p2">](../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>For information about what happens when a data type or initializer is not specified, see <bpt id="p1">[</bpt>Default Data Types and Values<ept id="p1">](../../../visual-basic/language-reference/statements/dim-statement.md#default)</ept> later in this topic.</source>
          <target state="translated">Para obtener información sobre lo que ocurre cuando no se especifica un tipo de datos o un inicializador, consulte <bpt id="p1">[</bpt>valores y tipos de datos predeterminadas<ept id="p1">](../../../visual-basic/language-reference/statements/dim-statement.md#default)</ept> más adelante en este tema.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>You can use an <bpt id="p1">*</bpt>object initializer<ept id="p1">*</ept> to declare instances of named and anonymous types.</source>
          <target state="translated">Puede usar un <bpt id="p1">*</bpt>inicializador de objeto<ept id="p1">*</ept> para declarar instancias de tipos con nombre y anónimos.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The following code creates an instance of a <ph id="ph1">`Student`</ph> class and uses an object initializer to initialize properties.</source>
          <target state="translated">El código siguiente crea una instancia de un <ph id="ph1">`Student`</ph> de clase y usa un inicializador de objeto para inicializar las propiedades.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>For more information about object initializers, see <bpt id="p1">[</bpt>How to: Declare an Object by Using an Object Initializer<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/how-to-declare-an-object-by-using-an-object-initializer.md)</ept>, <bpt id="p2">[</bpt>Object Initializers: Named and Anonymous Types<ept id="p2">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-initializers-named-and-anonymous-types.md)</ept>, and <bpt id="p3">[</bpt>Anonymous Types<ept id="p3">](../../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre los inicializadores de objeto, consulte <bpt id="p1">[</bpt>Cómo: declarar un objeto usando un inicializador de objeto<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/how-to-declare-an-object-by-using-an-object-initializer.md)</ept>, <bpt id="p2">[</bpt>inicializadores de objeto: tipos con nombre y anónimos<ept id="p2">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-initializers-named-and-anonymous-types.md)</ept>, y <bpt id="p3">[</bpt>tipos anónimos<ept id="p3">](../../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Declaring Multiple Variables</source>
          <target state="translated">Declarar varias Variables</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>You can declare several variables in one declaration statement, specifying the variable name for each one, and following each array name with parentheses.</source>
          <target state="translated">Puede declarar varias variables en una instrucción de declaración, especificando el nombre de variable para cada uno y después de cada nombre de matriz con paréntesis.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Multiple variables are separated by commas.</source>
          <target state="translated">Las variables se separan con comas.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>If you declare more than one variable with one <ph id="ph1">`As`</ph> clause, you cannot supply an initializer for that group of variables.</source>
          <target state="translated">Si se declara más de una variable con una <ph id="ph1">`As`</ph> cláusula, no puede proporcionar un inicializador para el grupo de variables.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>You can specify different data types for different variables by using a separate <ph id="ph1">`As`</ph> clause for each variable you declare.</source>
          <target state="translated">Puede especificar los tipos de datos diferentes para variables diferentes mediante otro <ph id="ph1">`As`</ph> cláusula para cada variable que se declara.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Each variable takes the data type specified in the first <ph id="ph1">`As`</ph> clause encountered after its <ph id="ph2">`variablename`</ph> part.</source>
          <target state="translated">Cada variable toma el tipo de datos especificado en la primera <ph id="ph1">`As`</ph> cláusula encontró después de su <ph id="ph2">`variablename`</ph> parte.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Matrices</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>You can declare a variable to hold an <bpt id="p1">*</bpt>array<ept id="p1">*</ept>, which can hold multiple values.</source>
          <target state="translated">Puede declarar una variable para contener una <bpt id="p1">*</bpt>matriz<ept id="p1">*</ept>, que puede contener varios valores.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>To specify that a variable holds an array, follow its <ph id="ph1">`variablename`</ph> immediately with parentheses.</source>
          <target state="translated">Para especificar que una variable contiene una matriz, siga su <ph id="ph1">`variablename`</ph> inmediatamente con paréntesis.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>For more information about arrays, see <bpt id="p1">[</bpt>Arrays<ept id="p1">](../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de las matrices, vea <bpt id="p1">[</bpt>matrices<ept id="p1">](../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>You can specify the lower and upper bound of each dimension of an array.</source>
          <target state="translated">Puede especificar el límite inferior y superior de cada dimensión de una matriz.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To do this, include a <ph id="ph1">`boundslist`</ph> inside the parentheses.</source>
          <target state="translated">Para ello, incluya un <ph id="ph1">`boundslist`</ph> dentro de los paréntesis.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For each dimension, the <ph id="ph1">`boundslist`</ph> specifies the upper bound and optionally the lower bound.</source>
          <target state="translated">Para cada dimensión, el <ph id="ph1">`boundslist`</ph> especifica el límite superior y, opcionalmente, el límite inferior.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The lower bound is always zero, whether you specify it or not.</source>
          <target state="translated">El límite inferior siempre es cero, si se especifica o no.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Each index can vary from zero through its upper bound value.</source>
          <target state="translated">Cada índice puede variar de cero a su valor de límite superior.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The following two statements are equivalent.</source>
          <target state="translated">Las dos instrucciones siguientes son equivalentes.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Each statement declares an array of 21 <ph id="ph1">`Integer`</ph> elements.</source>
          <target state="translated">Cada instrucción declara una matriz de 21 <ph id="ph1">`Integer`</ph> elementos.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>When you access the array, the index can vary from 0 through 20.</source>
          <target state="translated">Para obtener acceso a la matriz, el índice puede variar de 0 a 20.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The following statement declares a two-dimensional array of type <ph id="ph1">`Double`</ph>.</source>
          <target state="translated">La instrucción siguiente declara una matriz bidimensional de tipo <ph id="ph1">`Double`</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The array has 4 rows (3 + 1) of 6 columns (5 + 1) each.</source>
          <target state="translated">La matriz tiene 4 filas (3 + 1) de 6 columnas (5 + 1) cada una.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Note that an upper bound represents the highest possible value for the index, not the length of the dimension.</source>
          <target state="translated">Tenga en cuenta que el límite superior representa el mayor valor posible para el índice, no la longitud de la dimensión.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The length of the dimension is the upper bound plus one.</source>
          <target state="translated">La longitud de la dimensión es el límite superior más uno.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An array can have from 1 to 32 dimensions.</source>
          <target state="translated">Una matriz puede tener de 1 a 32 dimensiones.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can leave all the bounds blank in an array declaration.</source>
          <target state="translated">Puede dejar en blanco en una declaración de matriz todos los límites.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If you do this, the array has the number of dimensions you specify, but it is uninitialized.</source>
          <target state="translated">Si lo hace, la matriz tiene el número de dimensiones especificado, pero no está inicializado.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>It has a value of <ph id="ph1">`Nothing`</ph> until you initialize at least some of its elements.</source>
          <target state="translated">Tiene un valor de <ph id="ph1">`Nothing`</ph> hasta que se inicialicen al menos algunos de sus elementos.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Dim`</ph> statement must specify bounds either for all dimensions or for no dimensions.</source>
          <target state="translated">El <ph id="ph1">`Dim`</ph> instrucción debe especificar los límites para todas las dimensiones o para ninguna dimensión.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>If the array has more than one dimension, you must include commas between the parentheses to indicate the number of dimensions.</source>
          <target state="translated">Si la matriz tiene más de una dimensión, debe incluir comas entre paréntesis para indicar el número de dimensiones.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>You can declare a <bpt id="p1">*</bpt>zero-length array<ept id="p1">*</ept> by declaring one of the array's dimensions to be -1.</source>
          <target state="translated">Puede declarar un <bpt id="p1">*</bpt>matriz de longitud cero<ept id="p1">*</ept> declarando una de las dimensiones de la matriz sea -1.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A variable that holds a zero-length array does not have the value <ph id="ph1">`Nothing`</ph>.</source>
          <target state="translated">Una variable que contiene una matriz de longitud cero no tiene el valor <ph id="ph1">`Nothing`</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Zero-length arrays are required by certain common language runtime functions.</source>
          <target state="translated">Algunas funciones de common language runtime requieren matrices de longitud cero.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>If you try to access such an array, a runtime exception occurs.</source>
          <target state="translated">Si intenta tener acceso a este tipo de matriz, se produce una excepción en tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Arrays<ept id="p1">](../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>matrices<ept id="p1">](../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>You can initialize the values of an array by using an array literal.</source>
          <target state="translated">Puede inicializar los valores de una matriz mediante un literal de matriz.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>To do this, surround the initialization values with braces (<ph id="ph1">`{}`</ph>).</source>
          <target state="translated">Para ello, incluya los valores de inicialización con llaves (<ph id="ph1">`{}`</ph>).</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>For multidimensional arrays, the initialization for each separate dimension is enclosed in braces in the outer dimension.</source>
          <target state="translated">Las matrices multidimensionales, la inicialización de cada dimensión está entre llaves en la dimensión exterior.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The elements are specified in row-major order.</source>
          <target state="translated">Los elementos se especifican en orden de importancia de filas.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>For more information about array literals, see <bpt id="p1">[</bpt>Arrays<ept id="p1">](../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de los literales de matriz, consulte <bpt id="p1">[</bpt>matrices<ept id="p1">](../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;a name="default"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept> Default Data Types and Values</source>
          <target state="translated"><bpt id="p1">&lt;a name="default"&gt;</bpt><ept id="p1">&lt;/a&gt;</ept>Tipos de datos predeterminados y valores</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The following table describes the results of various combinations of specifying the data type and initializer in a <ph id="ph1">`Dim`</ph> statement.</source>
          <target state="translated">En la tabla siguiente se describen los resultados de diversas combinaciones resultantes de especificar el tipo de datos y el inicializador en una instrucción <ph id="ph1">`Dim`</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Data type specified?</source>
          <target state="translated">¿Tipo de datos especificado?</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Initializer specified?</source>
          <target state="translated">¿Inicializador especificado?</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">Resultado</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">[</bpt>Option Strict<ept id="p1">](../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept> is off (the default), the variable is set to <ph id="ph1">`Nothing`</ph>.</source>
          <target state="translated">Si <bpt id="p1">[</bpt>Option Strict<ept id="p1">](../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept> está desactivado (valor predeterminado), la variable se establece en <ph id="ph1">`Nothing`</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Option Strict`</ph> is on, a compile-time error occurs.</source>
          <target state="translated">Si <ph id="ph1">`Option Strict`</ph> está activado, se produce un error en tiempo de compilación.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Sí</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">[</bpt>Option Infer<ept id="p1">](../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept> is on (the default), the variable takes the data type of the initializer.</source>
          <target state="translated">Si <bpt id="p1">[</bpt>Option Infer<ept id="p1">](../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept> es on (valor predeterminado), la variable toma el tipo de datos del inicializador de.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Local Type Inference<ept id="p1">](../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept>.</source>
          <target state="translated">Consulte <bpt id="p1">[</bpt>inferencia del tipo Local<ept id="p1">](../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Option Infer`</ph> is off and <ph id="ph2">`Option Strict`</ph> is off, the variable takes the data type of <ph id="ph3">`Object`</ph>.</source>
          <target state="translated">Si <ph id="ph1">`Option Infer`</ph> está desactivado y <ph id="ph2">`Option Strict`</ph> está desactivado, la variable toma el tipo de datos de <ph id="ph3">`Object`</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Option Infer`</ph> is off and <ph id="ph2">`Option Strict`</ph> is on, a compile-time error occurs.</source>
          <target state="translated">Si <ph id="ph1">`Option Infer`</ph> está desactivado y <ph id="ph2">`Option Strict`</ph> está activado, se produce un error en tiempo de compilación.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Sí</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The variable is initialized to the default value for the data type.</source>
          <target state="translated">La variable se inicializa con el valor predeterminado del tipo de datos.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>See the table later in this section.</source>
          <target state="translated">Consulte la tabla más adelante en esta sección.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Sí</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Sí</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>If the data type of the initializer is not convertible to the specified data type, a compile-time error occurs.</source>
          <target state="translated">Si el tipo de datos del inicializador no es convertible al tipo de datos especificado, se produce un error en tiempo de compilación.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>If you specify a data type but do not specify an initializer, <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> initializes the variable to the default value for its data type.</source>
          <target state="translated">Si especifica un tipo de datos, pero no se especifica un inicializador <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> inicializa la variable en el valor predeterminado de su tipo de datos.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The following table shows the default initialization values.</source>
          <target state="translated">En la tabla siguiente muestra el valor predeterminado de los valores de inicialización.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Data type</source>
          <target state="translated">Tipo de datos</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Default value</source>
          <target state="translated">Valor predeterminado</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>All numeric types (including <ph id="ph1">`Byte`</ph> and <ph id="ph2">`SByte`</ph>)</source>
          <target state="translated">Todos los tipos numéricos (incluidos <ph id="ph1">`Byte`</ph> y <ph id="ph2">`SByte`</ph>)</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Binary 0</source>
          <target state="translated">0 binario</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>All reference types (including <ph id="ph1">`Object`</ph>, <ph id="ph2">`String`</ph>, and all arrays)</source>
          <target state="translated">Todos los tipos de referencia (incluyendo <ph id="ph1">`Object`</ph>, <ph id="ph2">`String`</ph>y todas las matrices)</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>12:00 AM of January 1 of the year 1 (01/01/0001 12:00:00 AM)</source>
          <target state="translated">12:00 A.M. del 1 de enero del año 1 (01/01/0001 12:00:00 A.M.)</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Each element of a structure is initialized as if it were a separate variable.</source>
          <target state="translated">Cada elemento de una estructura se inicializa como si fuera una variable independiente.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>If you declare the length of an array but do not initialize its elements, each element is initialized as if it were a separate variable.</source>
          <target state="translated">Si se declara la longitud de una matriz pero no se inicializan sus elementos, cada elemento se inicializa como si fuera una variable independiente.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Static Local Variable Lifetime</source>
          <target state="translated">Duración de la Variable Local estática</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Static`</ph> local variable has a longer lifetime than that of the procedure in which it is declared.</source>
          <target state="translated">Un <ph id="ph1">`Static`</ph> variable local tiene una duración más larga que el procedimiento en el que se declara.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The boundaries of the variable's lifetime depend on where the procedure is declared and whether it is <ph id="ph1">`Shared`</ph>.</source>
          <target state="translated">Los límites de duración de la variable dependen de dónde se declare el procedimiento y si es <ph id="ph1">`Shared`</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Procedure declaration</source>
          <target state="translated">Declaración de procedimiento</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Variable initialized</source>
          <target state="translated">Variable inicializada</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Variable stops existing</source>
          <target state="translated">Detiene la variable existente</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>In a module</source>
          <target state="translated">En un módulo</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The first time the procedure is called</source>
          <target state="translated">La primera vez que se llama al procedimiento</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>When your program stops execution</source>
          <target state="translated">Cuando detiene la ejecución del programa</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>In a class or structure, procedure is <ph id="ph1">`Shared`</ph></source>
          <target state="translated">En una clase o estructura, el procedimiento es<ph id="ph1">`Shared`</ph></target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The first time the procedure is called either on a specific instance or on the class or structure itself</source>
          <target state="translated">La primera vez que se llama al procedimiento en una instancia específica o en la propia clase o estructura</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>When your program stops execution</source>
          <target state="translated">Cuando detiene la ejecución del programa</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>In a class or structure, procedure isn't <ph id="ph1">`Shared`</ph></source>
          <target state="translated">En una clase o estructura, no es el procedimiento<ph id="ph1">`Shared`</ph></target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The first time the procedure is called on a specific instance</source>
          <target state="translated">La primera vez que se llama al procedimiento en una instancia específica</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>When the instance is released for garbage collection (GC)</source>
          <target state="translated">Cuando la instancia se libera para la recopilación de elementos no utilizados (GC)</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Attributes and Modifiers</source>
          <target state="translated">Los atributos y modificadores</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>You can apply attributes only to member variables, not to local variables.</source>
          <target state="translated">Puede aplicar atributos sólo a las variables miembro, no a las variables locales.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>An attribute contributes information to the assembly's metadata, which is not meaningful for temporary storage such as local variables.</source>
          <target state="translated">Un atributo proporciona información a los metadatos del ensamblado, que no son significativos para el almacenamiento temporal como las variables locales.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>At module level, you cannot use the <ph id="ph1">`Static`</ph> modifier to declare member variables.</source>
          <target state="translated">En el nivel de módulo, no puede utilizar el <ph id="ph1">`Static`</ph> modificador para declarar variables miembro.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>At procedure level, you cannot use <ph id="ph1">`Shared`</ph>, <ph id="ph2">`Shadows`</ph>, <ph id="ph3">`ReadOnly`</ph>, <ph id="ph4">`WithEvents`</ph>, or any access modifiers to declare local variables.</source>
          <target state="translated">En el nivel de procedimiento, no puede usar <ph id="ph1">`Shared`</ph>, <ph id="ph2">`Shadows`</ph>, <ph id="ph3">`ReadOnly`</ph>, <ph id="ph4">`WithEvents`</ph>, o cualquier acceso modificadores para declarar variables locales.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>You can specify what code can access a variable by supplying an <ph id="ph1">`accessmodifier`</ph>.</source>
          <target state="translated">Puede especificar qué código puede tener acceso a una variable proporcionando un <ph id="ph1">`accessmodifier`</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Class and module member variables (outside any procedure) default to private access, and structure member variables default to public access.</source>
          <target state="translated">Clase y módulo predeterminado de variables (fuera de cualquier procedimiento) miembro a acceso privado y predeterminada de variables de miembro de estructura acceso público.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>You can adjust their access levels with the access modifiers.</source>
          <target state="translated">Los niveles de acceso se pueden ajustar con los modificadores de acceso.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>You cannot use access modifiers on local variables (inside a procedure).</source>
          <target state="translated">No puede usar los modificadores de acceso en variables locales (dentro de un procedimiento).</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>You can specify <ph id="ph1">`WithEvents`</ph> only on member variables, not on local variables inside a procedure.</source>
          <target state="translated">Puede especificar <ph id="ph1">`WithEvents`</ph> en variables miembro, no en variables locales dentro de un procedimiento.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>If you specify <ph id="ph1">`WithEvents`</ph>, the data type of the variable must be a specific class type, not <ph id="ph2">`Object`</ph>.</source>
          <target state="translated">Si especifica <ph id="ph1">`WithEvents`</ph>, el tipo de datos de la variable debe ser un tipo de clase concreto, no <ph id="ph2">`Object`</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>You cannot declare an array with <ph id="ph1">`WithEvents`</ph>.</source>
          <target state="translated">No se puede declarar una matriz con <ph id="ph1">`WithEvents`</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>For more information about events, see <bpt id="p1">[</bpt>Events<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/index.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de los eventos, vea <bpt id="p1">[</bpt>eventos<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Code outside a class, structure, or module must qualify a member variable's name with the name of that class, structure, or module.</source>
          <target state="translated">Código fuera de una clase, estructura o módulo debe calificar el nombre de una variable de miembro con el nombre de esa clase, estructura o módulo.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Code outside a procedure or block cannot refer to any local variables within that procedure or block.</source>
          <target state="translated">Fuera de que un procedimiento o bloque no puede hacer referencia a cualquier variable local dentro de ese procedimiento o bloque de código.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Releasing Managed Resources</source>
          <target state="translated">Liberación de recursos administrados</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The .NET Framework garbage collector disposes of managed resources without any extra coding on your part.</source>
          <target state="translated">El recolector de elementos no utilizados de .NET Framework se deshace de los recursos administrados sin necesidad de código adicional por su parte.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>However, you can force the disposal of a managed resource instead of waiting for the garbage collector.</source>
          <target state="translated">Sin embargo, puede forzar la eliminación de un recurso administrado en lugar de esperar a que el recolector de elementos no utilizados.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>If a class holds onto a particularly valuable and scarce resource (such as a database connection or file handle), you might not want to wait until the next garbage collection to clean up a class instance that's no longer in use.</source>
          <target state="translated">Si una clase contiene en un recurso especialmente valioso y escaso (como un identificador de conexión o el archivo de base de datos), no puede esperar hasta la siguiente recolección para limpiar una instancia de clase que ya no está en uso.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>A class may implement the &lt;xref:System.IDisposable&gt; interface to provide a way to release resources before a garbage collection.</source>
          <target state="translated">Una clase puede implementar la &lt;xref:System.IDisposable&gt;interfaz para proporcionar una manera de liberar recursos antes de una colección de elementos no utilizados.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>A class that implements that interface exposes a <ph id="ph1">`Dispose`</ph> method that can be called to force valuable resources to be released immediately.</source>
          <target state="translated">Una clase que implementa esa interfaz expone un <ph id="ph1">`Dispose`</ph> método que se puede llamar para forzar recursos valiosos para liberarse inmediatamente.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Using`</ph> statement automates the process of acquiring a resource, executing a set of statements, and then disposing of the resource.</source>
          <target state="translated">El <ph id="ph1">`Using`</ph> instrucción automatiza el proceso de adquisición de un recurso, ejecutar un conjunto de instrucciones y, a continuación, elimine el recurso.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>However, the resource must implement the &lt;xref:System.IDisposable&gt; interface.</source>
          <target state="translated">Sin embargo, debe implementar el recurso de la &lt;xref:System.IDisposable&gt;interfaz.&lt;/xref:System.IDisposable&gt;</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Using Statement<ept id="p1">](../../../visual-basic/language-reference/statements/using-statement.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>instrucción Using<ept id="p1">](../../../visual-basic/language-reference/statements/using-statement.md)</ept>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The following example declares variables by using the <ph id="ph1">`Dim`</ph> statement with various options.</source>
          <target state="translated">En el ejemplo siguiente se declara variables mediante la <ph id="ph1">`Dim`</ph> instrucción con varias opciones.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#141<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/dim-statement_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements&amp;#141;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/dim-statement_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The following example lists the prime numbers between 1 and 30.</source>
          <target state="translated">En el ejemplo siguiente se enumeran los números primos entre 1 y 30.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The scope of local variables is described in code comments.</source>
          <target state="translated">El ámbito de las variables locales se describe en los comentarios del código.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#142<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/dim-statement_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements&amp;#142;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/dim-statement_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Ejemplo</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>In the following example, the <ph id="ph1">`speedValue`</ph> variable is declared at the class level.</source>
          <target state="translated">En el ejemplo siguiente, la <ph id="ph1">`speedValue`</ph> variable se declara en el nivel de clase.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Private`</ph> keyword is used to declare the variable.</source>
          <target state="translated">El <ph id="ph1">`Private`</ph> palabra clave se utiliza para declarar la variable.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The variable can be accessed by any procedure in the <ph id="ph1">`Car`</ph> class.</source>
          <target state="translated">La variable puede tener acceso a cualquier procedimiento de la <ph id="ph1">`Car`</ph> clase.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#144<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/dim-statement_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements&amp;#144;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/dim-statement_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#145<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/dim-statement_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements&amp;#145;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/dim-statement_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vea también</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Const Statement<ept id="p1">](../../../visual-basic/language-reference/statements/const-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Const (instrucción)<ept id="p1">](../../../visual-basic/language-reference/statements/const-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ReDim Statement<ept id="p1">](../../../visual-basic/language-reference/statements/redim-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>ReDim (instrucción)<ept id="p1">](../../../visual-basic/language-reference/statements/redim-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Option Explicit Statement<ept id="p1">](../../../visual-basic/language-reference/statements/option-explicit-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Option Explicit (instrucción)<ept id="p1">](../../../visual-basic/language-reference/statements/option-explicit-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Option Infer Statement<ept id="p1">](../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Opción Infer (instrucción)<ept id="p1">](../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Option Strict Statement<ept id="p1">](../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Option Strict (instrucción)<ept id="p1">](../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Compile Page, Project Designer (Visual Basic)<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/compile-page-project-designer-visual-basic)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Página Compilación, Diseñador de proyectos (Visual Basic)<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/compile-page-project-designer-visual-basic)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Variable Declaration<ept id="p1">](../../../visual-basic/programming-guide/language-features/variables/variable-declaration.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Declaración de variable<ept id="p1">](../../../visual-basic/programming-guide/language-features/variables/variable-declaration.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Arrays<ept id="p1">](../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Matrices<ept id="p1">](../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Object Initializers: Named and Anonymous Types<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-initializers-named-and-anonymous-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Inicializadores de objeto: Tipos con nombre y anónimos<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-initializers-named-and-anonymous-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Anonymous Types<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Tipos anónimos<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/anonymous-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Object Initializers: Named and Anonymous Types<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-initializers-named-and-anonymous-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Inicializadores de objeto: Tipos con nombre y anónimos<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-initializers-named-and-anonymous-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Declare an Object by Using an Object Initializer<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/how-to-declare-an-object-by-using-an-object-initializer.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Cómo: declarar un objeto usando un inicializador de objeto<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/how-to-declare-an-object-by-using-an-object-initializer.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Local Type Inference<ept id="p1">](../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Inferencia de tipo de variable local<ept id="p1">](../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>