<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e397241aab78e17ea4efde0ea682d0e237fb8f8a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\error-messages\implicit-conversion-from-typename1-to-typename2-in-copying.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82fb294033414af01fe3a884ada13132d699a411</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c84ddbf918256bc3d2a8ad6f2b11de3107277be7</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_implicit-conversion-from-typename1-to-typename2-in-copying.e56037f4e78a0c93a7160d81d166c6fd696fdd9a.es-es is different with handoff file name: implicit-conversion-from-typename1-to-typename2-in-copying.e56037f4e78a0c93a7160d81d166c6fd696fdd9a.es-es.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implicit conversion from &amp;#39;<ph id="ph1">&amp;lt;</ph>typename1<ph id="ph2">&amp;gt;</ph>&amp;#39; to &amp;#39;<ph id="ph3">&amp;lt;</ph>typename2<ph id="ph4">&amp;gt;</ph>&amp;#39; in copying the value of &amp;#39;ByRef&amp;#39; parameter &amp;#39;<ph id="ph5">&amp;lt;</ph>parametername<ph id="ph6">&amp;gt;</ph>&amp;#39; back to the matching argument.</source>
          <target state="translated">Conversión implícita de '<ph id="ph1">&amp;lt;</ph>NombreTipo1<ph id="ph2">&amp;gt;</ph>'to'<ph id="ph3">&amp;lt;</ph>en NombreTipo2<ph id="ph4">&amp;gt;</ph>'en copiar el valor del parámetro 'ByRef' '<ph id="ph5">&amp;lt;</ph>parametername<ph id="ph6">&amp;gt;</ph>' en el argumento correspondiente.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>| Microsoft Docs</source>
          <target state="translated">| Microsoft Docs</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Implicit conversion from &amp;#39;<ph id="ph1">&amp;lt;</ph>typename1<ph id="ph2">&amp;gt;</ph>&amp;#39; to &amp;#39;<ph id="ph3">&amp;lt;</ph>typename2<ph id="ph4">&amp;gt;</ph>&amp;#39; in copying the value of &amp;#39;ByRef&amp;#39; parameter &amp;#39;<ph id="ph5">&amp;lt;</ph>parametername<ph id="ph6">&amp;gt;</ph>&amp;#39; back to the matching argument.</source>
          <target state="translated">Conversión implícita de '<ph id="ph1">&amp;lt;</ph>NombreTipo1<ph id="ph2">&amp;gt;</ph>'to'<ph id="ph3">&amp;lt;</ph>en NombreTipo2<ph id="ph4">&amp;gt;</ph>'en copiar el valor del parámetro 'ByRef' '<ph id="ph5">&amp;lt;</ph>parametername<ph id="ph6">&amp;gt;</ph>' en el argumento correspondiente.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A procedure is called with a <bpt id="p1">[</bpt>ByRef<ept id="p1">](../../../visual-basic/language-reference/modifiers/byref.md)</ept> argument of a different type than that of its corresponding parameter.</source>
          <target state="translated">Se llama a un procedimiento con un <bpt id="p1">[</bpt>ByRef<ept id="p1">](../../../visual-basic/language-reference/modifiers/byref.md)</ept> argumento de un tipo diferente de su parámetro correspondiente.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If you pass an argument <ph id="ph1">`ByRef`</ph>, <ph id="ph2">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> sometimes copies the argument value into a local variable in the procedure instead of passing a reference.</source>
          <target state="translated">Si se pasa un argumento <ph id="ph1">`ByRef`</ph>, <ph id="ph2">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> a veces copia el valor del argumento en una variable local en el procedimiento en lugar de pasar una referencia.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In such a case, when the procedure returns, <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> must then copy the local variable value back into the argument in the calling code.</source>
          <target state="translated">En tal caso, cuando el procedimiento vuelve, <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> , a continuación, debe copiar el valor de la variable local en el argumento en el código de llamada.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If a <ph id="ph1">`ByRef`</ph> argument value is copied into the procedure and the argument and parameter are of the same type, no conversion is necessary.</source>
          <target state="translated">Si un valor de argumento <ph id="ph1">`ByRef`</ph> se copia en el procedimiento y el argumento y el parámetro son del mismo tipo, no es necesario realizar ninguna conversión.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>But if the types are different, <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> must convert in both directions.</source>
          <target state="translated">Pero si los tipos son diferentes, <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> debe convertir en ambas direcciones.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Because you cannot use <ph id="ph1">`CType`</ph> or any of the other conversion keywords on a procedure argument or parameter, such a conversion is always implicit.</source>
          <target state="translated">Dado que no se puede utilizar <ph id="ph1">`CType`</ph> o cualquiera de las demás palabras clave de conversión en un argumento de procedimiento o parámetro, dicha conversión siempre es implícito.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>By default, this message is a warning.</source>
          <target state="translated">De forma predeterminada, este mensaje es una advertencia.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For information on hiding warnings or treating warnings as errors, see <bpt id="p1">[</bpt>Configuring Warnings in Visual Basic<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/configuring-warnings-in-visual-basic)</ept>.</source>
          <target state="translated">Para obtener información sobre cómo ocultar las advertencias o cómo tratarlas como errores, vea <bpt id="p1">[</bpt>Configuring Warnings in Visual Basic<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/configuring-warnings-in-visual-basic)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Error ID:<ept id="p1">**</ept> BC41999</source>
          <target state="translated"><bpt id="p1">**</bpt>Id. de error:<ept id="p1">**</ept> BC41999</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To correct this error</source>
          <target state="translated">Para corregir este error</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If possible, use a calling argument of the same type as the procedure parameter, so <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> does not need to do any conversion.</source>
          <target state="translated">Si es posible, utilice un argumento de llamada del mismo tipo como el parámetro de procedimiento, por lo que <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> no es necesario realizar ninguna conversión.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If you need to call the procedure with an argument type different from the parameter type but do not need to return a value into the calling argument, define the parameter to be <bpt id="p1">[</bpt>ByVal<ept id="p1">](../../../visual-basic/language-reference/modifiers/byval.md)</ept> instead of <ph id="ph1">`ByRef`</ph>.</source>
          <target state="translated">Si necesita llamar al procedimiento con un argumento de tipo diferente del tipo de parámetro pero no es necesario devolver un valor al argumento de llamada, defina el parámetro para que sea <bpt id="p1">[</bpt>ByVal<ept id="p1">](../../../visual-basic/language-reference/modifiers/byval.md)</ept> en lugar de <ph id="ph1">`ByRef`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vea también</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Procedures<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Procedimientos<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Parameters and Arguments<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Argumentos y parámetros de procedimiento<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Passing Arguments by Value and by Reference<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/passing-arguments-by-value-and-by-reference.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Pasar argumentos por valor y por referencia<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/passing-arguments-by-value-and-by-reference.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Implicit and Explicit Conversions<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Conversiones implícitas y explícitas<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/implicit-and-explicit-conversions.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>