<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6fbf4611ecd64abfd016963dff887d82aad333b7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\async\start-multiple-async-tasks-and-process-them-as-they-complete.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dd0170ae283ca0c8cb8551e1d4ba91059e67f3f9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">781fd99b94b88117e51f3fb19fc94e7ab2b2d29c</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_start-multiple-async-tasks-and-process-them-as-they-complete.cc0003577b12d36b779efa51688d9435e09069fc.es-es is different with handoff file name: start-multiple-async-tasks-and-process-them-as-they-complete.cc0003577b12d36b779efa51688d9435e09069fc.es-es.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Start Multiple Async Tasks and Process Them As They Complete (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Iniciar varias tareas asincrónicas y procesarlas a medida que se completan (Visual Basic) | Documentos de Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Start Multiple Async Tasks and Process Them As They Complete (Visual Basic)</source>
          <target state="translated">Iniciar varias tareas asincrónicas y procesarlas a medida que se completan (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>By using &lt;xref:System.Threading.Tasks.Task.WhenAny%2A?displayProperty=fullName&gt;, you can start multiple tasks at the same time and process them one by one as they’re completed rather than process them in the order in which they're started.</source>
          <target state="translated">Mediante el uso de &lt;xref:System.Threading.Tasks.Task.WhenAny%2A?displayProperty=fullName&gt;, puede iniciar varias tareas al mismo tiempo y procesar uno por uno que se completan en lugar de procesarlas en el orden en el que está iniciados.&lt;/xref:System.Threading.Tasks.Task.WhenAny%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The following example uses a query to create a collection of tasks.</source>
          <target state="translated">En el ejemplo siguiente se utiliza una consulta para crear una colección de tareas.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Each task downloads the contents of a specified website.</source>
          <target state="translated">Cada tarea descarga el contenido de un sitio Web especificado.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In each iteration of a while loop, an awaited call to <ph id="ph1">`WhenAny`</ph> returns the task in the collection of tasks that finishes its download first.</source>
          <target state="translated">En cada iteración de un tiempo de bucle, una llamada de espera al <ph id="ph1">`WhenAny`</ph> devuelve la tarea de la colección de tareas que finaliza su descarga primero.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>That task is removed from the collection and processed.</source>
          <target state="translated">Esa tarea se quita de la colección y se procesa.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The loop repeats until the collection contains no more tasks.</source>
          <target state="translated">Se repite el bucle hasta que la colección no contiene más tareas.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>To run the examples, you must have Visual Studio 2012 or newer and  the .NET Framework 4.5 or newer installed on your computer.</source>
          <target state="translated">Para ejecutar los ejemplos, debe tener Visual Studio 2012 o posterior y .NET Framework 4.5 o posterior, instalado en el equipo.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Downloading the Example</source>
          <target state="translated">Descargar el ejemplo</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can download the complete Windows Presentation Foundation (WPF) project from <bpt id="p1">[</bpt>Async Sample: Fine Tuning Your Application<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept> and then follow these steps.</source>
          <target state="translated">Puede descargar el proyecto de Windows Presentation Foundation (WPF) completo de <bpt id="p1">[</bpt>ejemplo Async: bien para la optimización de la aplicación<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept> y, a continuación, siga estos pasos.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Decompress the file that you downloaded, and then start Visual Studio.</source>
          <target state="translated">Descomprima el archivo descargado y, a continuación, inicie Visual Studio.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>On the menu bar, choose <bpt id="p1">**</bpt>File<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Open<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Project/Solution<ept id="p3">**</ept>.</source>
          <target state="translated">En la barra de menús, elija <bpt id="p1">**</bpt>Archivo<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Abrir<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Proyecto o solución<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Open Project<ept id="p1">**</ept> dialog box, open the folder that holds the sample code that you decompressed, and then open the solution (.sln) file for AsyncFineTuningVB.</source>
          <target state="translated">En el <bpt id="p1">**</bpt>Abrir proyecto<ept id="p1">**</ept> cuadro de diálogo, abra la carpeta que contiene el código de ejemplo descomprime y, a continuación, abra el archivo de solución (.sln) para AsyncFineTuningVB.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, open the shortcut menu for the <bpt id="p2">**</bpt>ProcessTasksAsTheyFinish<ept id="p2">**</ept> project, and then choose <bpt id="p3">**</bpt>Set as StartUp Project<ept id="p3">**</ept>.</source>
          <target state="translated">En <bpt id="p1">**</bpt>el Explorador de soluciones<ept id="p1">**</ept>, abra el menú contextual para el <bpt id="p2">**</bpt>ProcessTasksAsTheyFinish<ept id="p2">**</ept> del proyecto y, a continuación, elija <bpt id="p3">**</bpt>establecer como proyecto de inicio<ept id="p3">**</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Choose the F5 key to run the project.</source>
          <target state="translated">Elija la tecla F5 para ejecutar el proyecto.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Choose the Ctrl+F5 keys to run the project without debugging it.</source>
          <target state="translated">Presione las teclas Ctrl + F5 para ejecutar el proyecto sin depurarlo.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Run the project several times to verify that the downloaded lengths don't always appear in the same order.</source>
          <target state="translated">Ejecute el proyecto varias veces para comprobar que las longitudes descargadas no aparecen siempre en el mismo orden.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If you don't want to download the project, you can review the MainWindow.xaml.vb file at the end of this topic.</source>
          <target state="translated">Si no desea descargar el proyecto, puede revisar el archivo MainWindow.xaml.vb al final de este tema.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Building the Example</source>
          <target state="translated">Compilar el ejemplo</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This example adds to the code that’s developed in <bpt id="p1">[</bpt>Cancel Remaining Async Tasks after One Is Complete (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/cancel-remaining-async-tasks-after-one-is-complete.md)</ept> and uses the same UI.</source>
          <target state="translated">En este ejemplo se agrega al código que se desarrolla en <bpt id="p1">[</bpt>Cancelar restantes tareas asincrónicas, después de una completa (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/cancel-remaining-async-tasks-after-one-is-complete.md)</ept> y usa la interfaz de usuario.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To build the example yourself, step by step, follow the instructions in the "Downloading the Example" section, but choose <bpt id="p1">**</bpt>CancelAfterOneTask<ept id="p1">**</ept> as the <bpt id="p2">**</bpt>StartUp Project<ept id="p2">**</ept>.</source>
          <target state="translated">Para generar el ejemplo usted mismo, paso a paso, siga las instrucciones de la sección "Descargar el ejemplo", pero elija <bpt id="p1">**</bpt>CancelAfterOneTask<ept id="p1">**</ept> como el <bpt id="p2">**</bpt>proyecto de inicio<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Add the changes in this topic to the <ph id="ph1">`AccessTheWebAsync`</ph> method in that project.</source>
          <target state="translated">Agregue los cambios en este tema para el <ph id="ph1">`AccessTheWebAsync`</ph> método en el proyecto.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The changes are marked with asterisks.</source>
          <target state="translated">Los cambios se marcan con asteriscos.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>CancelAfterOneTask<ept id="p1">**</ept> project already includes a query that, when executed, creates a collection of tasks.</source>
          <target state="translated">El <bpt id="p1">**</bpt>CancelAfterOneTask<ept id="p1">**</ept> proyecto ya incluye una consulta que, cuando se ejecuta, crea una colección de tareas.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Each call to <ph id="ph1">`ProcessURLAsync`</ph> in the following code returns a &lt;xref:System.Threading.Tasks.Task%601&gt; where <ph id="ph2">`TResult`</ph> is an integer.</source>
          <target state="translated">Cada llamada a <ph id="ph1">`ProcessURLAsync`</ph> en el código siguiente devuelve una &lt;xref:System.Threading.Tasks.Task%601&gt;donde <ph id="ph2">`TResult`</ph> es un entero.&lt;/xref:System.Threading.Tasks.Task%601&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;CodeContentPlaceHolder&gt;</bpt>0<ept id="p1">&lt;/CodeContentPlaceHolder&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;CodeContentPlaceHolder&gt;</bpt>0<ept id="p1">&lt;/CodeContentPlaceHolder&gt;</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the MainWindow.xaml.vb file of the  project, make the following changes to the <ph id="ph1">`AccessTheWebAsync`</ph> method.</source>
          <target state="translated">En el archivo MainWindow.xaml.vb del proyecto, realice los cambios siguientes para el <ph id="ph1">`AccessTheWebAsync`</ph> (método).</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Execute the query by applying &lt;xref:System.Linq.Enumerable.ToList%2A?displayProperty=fullName&gt; instead of &lt;xref:System.Linq.Enumerable.ToArray%2A&gt;.</source>
          <target state="translated">Ejecutar la consulta mediante la aplicación &lt;xref:System.Linq.Enumerable.ToList%2A?displayProperty=fullName&gt;en lugar de &lt;xref:System.Linq.Enumerable.ToArray%2A&gt;.&lt;/xref:System.Linq.Enumerable.ToArray%2A&gt; &lt;/xref:System.Linq.Enumerable.ToList%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;CodeContentPlaceHolder&gt;</bpt>1<ept id="p1">&lt;/CodeContentPlaceHolder&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;CodeContentPlaceHolder&gt;</bpt>1<ept id="p1">&lt;/CodeContentPlaceHolder&gt;</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Add a while loop that performs the following steps for each task in the collection.</source>
          <target state="translated">Agregar un tiempo bucle que realiza los pasos siguientes para cada tarea de la colección.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Awaits a call to <ph id="ph1">`WhenAny`</ph> to identify the first task in the collection to finish its download.</source>
          <target state="translated">Espera de una llamada a <ph id="ph1">`WhenAny`</ph> para identificar la primera tarea en la colección para finalizar su descarga.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;CodeContentPlaceHolder&gt;</bpt>2<ept id="p1">&lt;/CodeContentPlaceHolder&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;CodeContentPlaceHolder&gt;</bpt>2<ept id="p1">&lt;/CodeContentPlaceHolder&gt;</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Removes that task from the collection.</source>
          <target state="translated">Esa tarea se quita de la colección.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;CodeContentPlaceHolder&gt;</bpt>3<ept id="p1">&lt;/CodeContentPlaceHolder&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;CodeContentPlaceHolder&gt;</bpt>3<ept id="p1">&lt;/CodeContentPlaceHolder&gt;</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Awaits <ph id="ph1">`firstFinishedTask`</ph>, which is returned by a call to <ph id="ph2">`ProcessURLAsync`</ph>.</source>
          <target state="translated">Espera <ph id="ph1">`firstFinishedTask`</ph>, que es devuelto por una llamada a <ph id="ph2">`ProcessURLAsync`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`firstFinishedTask`</ph> variable is a &lt;xref:System.Threading.Tasks.Task%601&gt; where <ph id="ph2">`TReturn`</ph> is an integer.</source>
          <target state="translated">El <ph id="ph1">`firstFinishedTask`</ph> variable es un &lt;xref:System.Threading.Tasks.Task%601&gt;donde <ph id="ph2">`TReturn`</ph> es un entero.&lt;/xref:System.Threading.Tasks.Task%601&gt;</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The task is already complete, but you await it to retrieve the length of the downloaded website, as the following example shows.</source>
          <target state="translated">La tarea ya está completa, pero await para recuperar la longitud del sitio Web descargado, como se muestra en el ejemplo siguiente.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You should run the project several times to verify that the downloaded lengths don't always appear in the same order.</source>
          <target state="translated">Debe ejecutar el proyecto varias veces para comprobar que las longitudes descargadas no aparecen siempre en el mismo orden.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You can use <ph id="ph1">`WhenAny`</ph> in a loop, as described in the example, to solve problems that involve a small number of tasks.</source>
          <target state="translated">Puede usar <ph id="ph1">`WhenAny`</ph> en un bucle, como se describe en el ejemplo, para resolver problemas que implican un número reducido de tareas.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>However, other approaches are more efficient if you have a large number of tasks to process.</source>
          <target state="translated">Sin embargo, otros enfoques son más eficaces si hay que procesar un gran número de tareas.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information and examples, see <bpt id="p1">[</bpt>Processing Tasks as they complete<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=260810)</ept>.</source>
          <target state="translated">Para obtener más información y ejemplos, vea <bpt id="p1">[</bpt>tareas de procesamiento en cuanto completa<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=260810)</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Complete Example</source>
          <target state="translated">Ejemplo completo</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The following code is the complete text of the MainWindow.xaml.vb file for the example.</source>
          <target state="translated">El código siguiente es el texto completo del archivo MainWindow.xaml.vb para el ejemplo.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Asterisks mark the elements that were added for this example.</source>
          <target state="translated">Asteriscos marcan los elementos que se agregaron para este ejemplo.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Notice that you must add a reference for &lt;xref:System.Net.Http&gt;.</source>
          <target state="translated">Tenga en cuenta que debe agregar una referencia para &lt;xref:System.Net.Http&gt;.&lt;/xref:System.Net.Http&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>You can download the project from <bpt id="p1">[</bpt>Async Sample: Fine Tuning Your Application<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept>.</source>
          <target state="translated">Puede descargar el proyecto de <bpt id="p1">[</bpt>ejemplo Async: bien para la optimización de la aplicación<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vea también</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Threading.Tasks.Task.WhenAny%2A&gt;</source>
          <target state="translated">&lt;xref:System.Threading.Tasks.Task.WhenAny%2A&gt;&lt;/xref:System.Threading.Tasks.Task.WhenAny%2A&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Fine-Tuning Your Async Application (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/fine-tuning-your-async-application.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Ajustar una aplicación asincrónica (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/fine-tuning-your-async-application.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Asynchronous Programming with Async and Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Programación asincrónica con Async y Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Async Sample: Fine Tuning Your Application<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Ejemplo ASYNC: Ajustar la aplicación<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>