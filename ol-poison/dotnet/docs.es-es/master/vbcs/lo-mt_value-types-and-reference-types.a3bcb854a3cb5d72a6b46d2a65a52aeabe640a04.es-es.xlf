<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="es-es">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de8016b4b2a5550b32373a41c89a484fa996c596</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\data-types\value-types-and-reference-types.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e722150cc712f99df2113eb3ec53438bfc5e81a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d6375fd2e2520091ec5cbe97786ca292c83819d5</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_value-types-and-reference-types.a3bcb854a3cb5d72a6b46d2a65a52aeabe640a04.es-es is different with handoff file name: value-types-and-reference-types.a3bcb854a3cb5d72a6b46d2a65a52aeabe640a04.es-es.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Value Types and Reference Types | Microsoft Docs</source>
          <target state="translated">Tipos de valor y tipos de referencia | Documentos de Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Value Types and Reference Types</source>
          <target state="translated">Value Types and Reference Types</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In Visual Basic, data types are implemented based on their classification.</source>
          <target state="translated">En Visual Basic, los tipos de datos se implementan según su clasificación.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> data types can be classified according to whether a variable of a particular type stores its own data or a pointer to the data.</source>
          <target state="translated">El <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> tipos de datos se pueden clasificar según si una variable de un tipo específico almacena sus propios datos o un puntero a los datos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If it stores its own data it is a <bpt id="p1">*</bpt>value type<ept id="p1">*</ept>; if it holds a pointer to data elsewhere in memory it is a <bpt id="p2">*</bpt>reference type<ept id="p2">*</ept>.</source>
          <target state="translated">Si almacena sus propios datos es un <bpt id="p1">*</bpt>tipo de valor<ept id="p1">*</ept>; si contiene un puntero a datos en otra parte de la memoria es un <bpt id="p2">*</bpt>tipo de referencia<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Value Types</source>
          <target state="translated">Tipos de valor</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A data type is a <bpt id="p1">*</bpt>value type<ept id="p1">*</ept> if it holds the data within its own memory allocation.</source>
          <target state="translated">Un tipo de datos es un <bpt id="p1">*</bpt>tipo de valor<ept id="p1">*</ept> si almacena los datos en su propia asignación de memoria.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Value types include the following:</source>
          <target state="translated">Tipos de valor incluyen lo siguiente:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>All numeric data types</source>
          <target state="translated">Todos los tipos de datos numéricos</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Boolean`</ph>, <ph id="ph2">`Char`</ph>, and <ph id="ph3">`Date`</ph></source>
          <target state="translated"><ph id="ph1">`Boolean`</ph>, <ph id="ph2">`Char`</ph> y <ph id="ph3">`Date`</ph></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>All structures, even if their members are reference types</source>
          <target state="translated">Todas las estructuras, incluso si sus miembros son tipos de referencia</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Enumerations, since their underlying type is always <ph id="ph1">`SByte`</ph>, <ph id="ph2">`Short`</ph>, <ph id="ph3">`Integer`</ph>, <ph id="ph4">`Long`</ph>, <ph id="ph5">`Byte`</ph>, <ph id="ph6">`UShort`</ph>, <ph id="ph7">`UInteger`</ph>, or <ph id="ph8">`ULong`</ph></source>
          <target state="translated">Las enumeraciones, ya que su tipo subyacente es siempre <ph id="ph1">`SByte`</ph>, <ph id="ph2">`Short`</ph>, <ph id="ph3">`Integer`</ph>, <ph id="ph4">`Long`</ph>, <ph id="ph5">`Byte`</ph>, <ph id="ph6">`UShort`</ph>, <ph id="ph7">`UInteger`</ph>, o<ph id="ph8">`ULong`</ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Every structure is a value type, even if it contains reference type members.</source>
          <target state="translated">Cada estructura es un tipo de valor, incluso si contiene a miembros de tipo de referencia.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For this reason, value types such as <ph id="ph1">`Char`</ph> and <ph id="ph2">`Integer`</ph> are implemented by .NET Framework structures.</source>
          <target state="translated">Por este motivo, tipos de valor como <ph id="ph1">`Char`</ph> y <ph id="ph2">`Integer`</ph> se implementan las estructuras de .NET Framework.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can declare a value type by using the reserved keyword, for example, <ph id="ph1">`Decimal`</ph>.</source>
          <target state="translated">Puede declarar un tipo de valor mediante la palabra clave reservada de, por ejemplo, <ph id="ph1">`Decimal`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can also use the <ph id="ph1">`New`</ph> keyword to initialize a value type.</source>
          <target state="translated">También puede utilizar el <ph id="ph1">`New`</ph> palabra clave para inicializar un tipo de valor.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This is especially useful if the type has a constructor that takes parameters.</source>
          <target state="translated">Esto es especialmente útil si el tipo tiene un constructor que toma parámetros.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An example of this is the &lt;xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29&gt; constructor, which builds a new <ph id="ph1">`Decimal`</ph> value from the supplied parts.</source>
          <target state="translated">Un ejemplo de esto es el &lt;xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29&gt;constructor, que compila un nuevo <ph id="ph1">`Decimal`</ph> el valor de las partes proporcionadas.&lt;/xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Reference Types</source>
          <target state="translated">Tipos de referencia</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>reference type<ept id="p1">*</ept> contains a pointer to another memory location that holds the data.</source>
          <target state="translated">Un <bpt id="p1">*</bpt>tipo de referencia<ept id="p1">*</ept> contiene un puntero a otra ubicación de memoria que contiene los datos.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Reference types include the following:</source>
          <target state="translated">Tipos de referencia incluyen lo siguiente:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>All arrays, even if their elements are value types</source>
          <target state="translated">Todas las matrices, incluso si sus elementos son tipos de valor</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Class types, such as &lt;xref:System.Windows.Forms.Form&gt;</source>
          <target state="translated">Tipos de clase, como&lt;xref:System.Windows.Forms.Form&gt;&lt;/xref:System.Windows.Forms.Form&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Delegates</source>
          <target state="translated">Delegados</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A class is a <bpt id="p1">*</bpt>reference type<ept id="p1">*</ept>.</source>
          <target state="translated">Una clase es un <bpt id="p1">*</bpt>tipo de referencia<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For this reason, reference types such as <ph id="ph1">`Object`</ph> and <ph id="ph2">`String`</ph> are supported by <ph id="ph3">[!INCLUDE[dnprdnshort](../../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph> classes.</source>
          <target state="translated">Por este motivo, tipos de referencia como <ph id="ph1">`Object`</ph> y <ph id="ph2">`String`</ph> admite <ph id="ph3">[!INCLUDE[dnprdnshort](../../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph> clases.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Note that every array is a reference type, even if its members are value types.</source>
          <target state="translated">Observe que cada matriz es un tipo de referencia, incluso si sus miembros son tipos de valor.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Since every reference type represents an underlying .NET Framework class, you must use the <bpt id="p1">[</bpt>New Operator<ept id="p1">](../../../../visual-basic/language-reference/operators/new-operator.md)</ept> keyword when you initialize it.</source>
          <target state="translated">Puesto que cada tipo de referencia representa una clase de .NET Framework subyacente, debe utilizar el <bpt id="p1">[</bpt>operador New<ept id="p1">](../../../../visual-basic/language-reference/operators/new-operator.md)</ept> palabra clave durante su inicialización.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following statement initializes an array.</source>
          <target state="translated">La instrucción siguiente inicializa una matriz.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Elements That Are Not Types</source>
          <target state="translated">Elementos que no son tipos</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following programming elements do not qualify as types, because you cannot specify any of them as a data type for a declared element:</source>
          <target state="translated">Los elementos de programación siguientes no se califican como tipos porque no se puede especificar cualquiera de ellos como un tipo de datos para un elemento declarado:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Namespaces</source>
          <target state="translated">Espacios de nombres</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Módulos</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Eventos</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Properties and procedures</source>
          <target state="translated">Propiedades y procedimientos</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Variables, constants, and fields</source>
          <target state="translated">Variables, constantes y campos</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Working with the Object Data Type</source>
          <target state="translated">Trabajar con el tipo de datos de objeto</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can assign either a reference type or a value type to a variable of the <ph id="ph1">`Object`</ph> data type.</source>
          <target state="translated">Puede asignar un tipo de referencia o un tipo de valor a una variable de la <ph id="ph1">`Object`</ph> tipo de datos.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`Object`</ph> variable always holds a pointer to the data, never the data itself.</source>
          <target state="translated">Un <ph id="ph1">`Object`</ph> variable siempre contiene un puntero a los datos, nunca los propios datos.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>However, if you assign a value type to an <ph id="ph1">`Object`</ph> variable, it behaves as if it holds its own data.</source>
          <target state="translated">Sin embargo, si asigna un tipo de valor a un <ph id="ph1">`Object`</ph> variable, se comporta como si contuviera sus propios datos.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Object Data Type<ept id="p1">](../../../../visual-basic/language-reference/data-types/object-data-type.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>tipo de datos de objeto<ept id="p1">](../../../../visual-basic/language-reference/data-types/object-data-type.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can find out whether an <ph id="ph1">`Object`</ph> variable is acting as a reference type or a value type by passing it to the &lt;xref:Microsoft.VisualBasic.Information.IsReference%2A&gt; method in the &lt;xref:Microsoft.VisualBasic.Information&gt; class of the &lt;xref:Microsoft.VisualBasic?displayProperty=fullName&gt; namespace.</source>
          <target state="translated">Puede averiguar si un <ph id="ph1">`Object`</ph> variable está actuando como un tipo de referencia o un tipo de valor pasándolo a la &lt;xref:Microsoft.VisualBasic.Information.IsReference%2A&gt;método en la &lt;xref:Microsoft.VisualBasic.Information&gt;clase de la &lt;xref:Microsoft.VisualBasic?displayProperty=fullName&gt;espacio de nombres.&lt;/xref:Microsoft.VisualBasic?displayProperty=fullName&gt; &lt;/xref:Microsoft.VisualBasic.Information&gt; &lt;/xref:Microsoft.VisualBasic.Information.IsReference%2A&gt;</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>&lt;xref:Microsoft.VisualBasic.Information.IsReference%2A?displayProperty=fullName&gt; returns <ph id="ph1">`True`</ph> if the content of the <ph id="ph2">`Object`</ph> variable represents a reference type.</source>
          <target state="translated">&lt;xref:Microsoft.VisualBasic.Information.IsReference%2A?displayProperty=fullName&gt;Devuelve <ph id="ph1">`True`</ph> si el contenido de la <ph id="ph2">`Object`</ph> variable representa un tipo de referencia.&lt;/xref:Microsoft.VisualBasic.Information.IsReference%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vea también</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nullable Value Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/nullable-value-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Tipos de valor que aceptan valores null<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/nullable-value-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Type Conversions in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/type-conversions.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Conversiones de tipos en Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/type-conversions.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Structure Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/structure-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Structure (instrucción)<ept id="p1">](../../../../visual-basic/language-reference/statements/structure-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Efficient Use of Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Uso eficiente de tipos de datos<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/efficient-use-of-data-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Object Data Type<ept id="p1">](../../../../visual-basic/language-reference/data-types/object-data-type.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Tipo de datos de objeto<ept id="p1">](../../../../visual-basic/language-reference/data-types/object-data-type.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Tipos de datos<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>