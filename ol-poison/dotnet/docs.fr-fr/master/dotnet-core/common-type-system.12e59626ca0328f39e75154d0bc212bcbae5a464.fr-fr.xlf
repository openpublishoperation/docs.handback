<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f655c141a0c86da7905091c138b7ec4324cad07a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\common-type-system.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b2e5a96afb0a57de62ebd87ca19da1aac890783</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e02ba4d2290ed20aea94755fafa0e5bfc5784343</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">file common-type-system.12e59626ca0328f39e75154d0bc212bcbae5a464.fr-fr.xlf is out of handoff scope</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Common Type System &amp; Common Language Specification</source>
          <target state="translated">Système de type commun (CTS, Common Type System) et spécification CLS (Common Language Specification)</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Common Type System &amp; Common Language Specification</source>
          <target state="translated">Système de type commun (CTS, Common Type System) et spécification CLS (Common Language Specification)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Common Type System &amp; Common Language Specification</source>
          <target state="translated">Système de type commun (CTS, Common Type System) et spécification CLS (Common Language Specification)</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Again, two terms that are freely used in the .NET world, they actually are crucial to understand how the .NET platform enables multi-language development and to understand how it works.</source>
          <target state="translated">Là encore, ce sont deux termes largement utilisés dans l’environnement .NET, ils sont véritablement essentiels pour comprendre comment la plateforme .NET permet le développement multilingue et comment elle fonctionne.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Common Type System</source>
          <target state="translated">Système de type commun</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To start from the beginning, remember that the .NET platform is <bpt id="p1">_</bpt>language agnostic<ept id="p1">_</ept>.</source>
          <target state="translated">Pour commencer, n’oubliez pas que la plateforme .NET est <bpt id="p1">_</bpt>indépendante du langage<ept id="p1">_</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This doesn’t just mean that a programmer can write her code in any language that can be compiled to IL.</source>
          <target state="translated">Cela ne signifie pas seulement qu’un programmeur peut écrire son code dans n’importe quel langage compilable en langage intermédiaire.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It also means that she needs to be able to interact with code written in other languages that are able to be used on the .NET platform.</source>
          <target state="translated">Cela signifie également qu’il doit être en mesure d’interagir avec le code écrit dans d’autres langages utilisables sur la plateforme .NET.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In order to do this transparently, there has to be a common way to describe all supported types.</source>
          <target state="translated">Pour que cela se fasse de manière transparente, il doit exister un moyen commun de décrire tous les types pris en charge.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This is what the Common Type System (CTS) is in charge of doing.</source>
          <target state="translated">C’est ce que fait le système de type commun (CTS).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>It was made to do several things:</source>
          <target state="translated">Il a été créé pour effectuer plusieurs opérations :</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Establish a framework for cross-language execution.</source>
          <target state="translated">Établir un framework pour l’exécution multilingue.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Provide an object-oriented model to support implementing various languages on .NET platform.</source>
          <target state="translated">Fournir un modèle orienté objet pour prendre en charge l’implémentation de différents langages sur la plateforme .NET.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Define a set of rules that all languages must follow when it comes to working with types.</source>
          <target state="translated">Définir un ensemble de règles que tous les langages doivent respecter pour utiliser les types.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Provide a library that contains the basic primitive types that are used in application development (i.e. <ph id="ph1">`Boolean`</ph>, <ph id="ph2">`Byte`</ph>, <ph id="ph3">`Char`</ph> etc.)</source>
          <target state="translated">Fournir une bibliothèque contenant les types primitifs de base utilisés dans le développement d’applications (par ex., <ph id="ph1">`Boolean`</ph>, <ph id="ph2">`Byte`</ph>, <ph id="ph3">`Char`</ph>, etc.).</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>CTS defines two main kinds of types that should be supported: reference and value types.</source>
          <target state="translated">CTS définit deux grandes sortes de types qui doivent être pris en charge : les types valeur et référence.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Their names point to their definitions.</source>
          <target state="translated">Leur nom pointe sur leur définition.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Reference types’ objects are represented by a reference to the object’s actual value; a reference here is similar to a pointer in C/C++.</source>
          <target state="translated">Les objets des types référence sont représentés par une référence à la valeur réelle de l’objet. Ici, une référence s’apparente à un pointeur en C/C++.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It simply refers to a memory location where the objects’ values are.</source>
          <target state="translated">Ils référencent simplement un emplacement de mémoire où se trouvent les valeurs des objets.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This has a profound impact on how these types are used.</source>
          <target state="translated">Cela a un profond impact sur l’utilisation de ces types.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you assign a reference type to a variable and then pass that variable into a method, for instance, any changes to the object will be reflected on the main object; there is no copying.</source>
          <target state="translated">Si vous attribuez un type référence à une variable et que vous passez ensuite cette variable dans une méthode, par exemple, les modifications de l’objet sont reflétées sur l’objet principal, il n’y a pas de copie.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Value types are the opposite, where the objects are represented by their values.</source>
          <target state="translated">Les types valeur sont l’opposé, c’est-à-dire que les objets sont représentés par leurs valeurs.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If you assign a value type to a variable, you are essentially copying a value of the object.</source>
          <target state="translated">Si vous attribuez un type valeur à une variable, vous copiez en fait une valeur de l’objet.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>CTS defines several categories of types, each with their specific semantics and usage:</source>
          <target state="translated">CTS définit plusieurs catégories de types, chacun avec une sémantique et une utilisation propres :</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Classes</source>
          <target state="translated">Classes</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Structures</source>
          <target state="translated">Structures</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Enums</source>
          <target state="translated">Énumérations</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Interfaces</source>
          <target state="translated">Interfaces</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Delegates</source>
          <target state="translated">Délégués</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>CTS also defines all other properties of the types, such as access modifiers, what are valid type members, how inheritance and overloading works and so on.</source>
          <target state="translated">CTS définit également toutes les autres propriétés des types, comme les modificateurs d’accès, les membres de type valides, le fonctionnement de l’héritage et de la surcharge, et ainsi de suite.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Unfortunately, going deep into any of those is beyond the scope of an introductory article such as this, but you can consult <bpt id="p1">[</bpt>More resources<ept id="p1">](#more-resources)</ept> section at the end for links to more in-depth content that covers these topics.</source>
          <target state="translated">Malheureusement, cet article de présentation n’a pas pour but d’approfondir davantage, mais vous pouvez consulter la section <bpt id="p1">[</bpt>Autres ressources<ept id="p1">](#more-resources)</ept> à la fin pour obtenir des liens vers un contenu plus détaillé qui couvre ces rubriques.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Common Language Specification</source>
          <target state="translated">CLS (Common Language Specification)</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To enable full interoperability scenarios, all objects that are created in code must rely on some commonality in the languages that are consuming them (are their <bpt id="p1">_</bpt>callers<ept id="p1">_</ept>).</source>
          <target state="translated">Pour permettre des scénarios d’interopérabilité complète, tous les objets qui sont créés dans le code doivent s’appuyer sur certains points communs entre les langages qui les consomment (leurs <bpt id="p1">_</bpt>appelants<ept id="p1">_</ept>).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Since there are numerous different languages, .NET platform has specified those commonalities in something called the <bpt id="p1">**</bpt>Common Language Specification<ept id="p1">**</ept> (CLS).</source>
          <target state="translated">Comme il existe de nombreux langages différents, la plateforme .NET a défini ces points communs dans ce que l’on appelle la <bpt id="p1">**</bpt>spécification CLS (Common Language Specification)<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>CLS defines a set of features that are needed by many common applications.</source>
          <target state="translated">CLS définit un ensemble de fonctionnalités nécessaires pour de nombreuses applications courantes.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>It also provides a sort of recipe for any language that is implemented on top of .NET platform on what it needs to support.</source>
          <target state="translated">Il fournit également une sorte de recette pour n’importe quel langage implémenté sur la plateforme .NET qui explique ce qu’il doit prendre en charge.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>CLS is a subset of the CTS.</source>
          <target state="translated">CLS est un sous-ensemble du système CTS.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This means that all of the rules in the CTS also apply to the CLS, unless the CLS rules are more strict.</source>
          <target state="translated">Cela signifie que toutes les règles du CTS s’appliquent également à la spécification CLS, sauf si les règles CLS sont plus strictes.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If a component is built using only the rules in the CLS, that is, it exposes only the CLS features in its API, it is said to be <bpt id="p1">**</bpt>CLS-compliant<ept id="p1">**</ept>.</source>
          <target state="translated">Si un composant est créé uniquement à l’aide des règles CLS, autrement dit, s’il expose uniquement les fonctionnalités CLS dans son API, il est considéré comme étant <bpt id="p1">**</bpt>conforme CLS<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For instance, the <ph id="ph1">`&lt;framework-librares&gt;`</ph> are CLS-compliant precisely because they need to work across all of the languages that are supported on the .NET platform.</source>
          <target state="translated">Par exemple, les <ph id="ph1">`&lt;framework-librares&gt;`</ph> sont conformes CLS justement parce qu’ils ont besoin d’utiliser tous les langages pris en charge sur la plateforme .NET.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>You can consult the documents in the <bpt id="p1">[</bpt>More Resources<ept id="p1">](#more-resources)</ept> section below to get an overview of all the features in the CLS.</source>
          <target state="translated">Vous pouvez consulter les documents de la section <bpt id="p1">[</bpt>Autres ressources<ept id="p1">](#more-resources)</ept> ci-dessous pour obtenir une vue d’ensemble de toutes les fonctionnalités de la spécification CLS.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>More resources</source>
          <target state="translated">Autres ressources</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Common Type System<ept id="p1">](https://msdn.microsoft.com/library/zcx1eb1e.aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Système de type commun<ept id="p1">](https://msdn.microsoft.com/library/zcx1eb1e.aspx)</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Common Language Specification<ept id="p1">](https://msdn.microsoft.com/library/12a7a7h3.aspx)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>CLS (Common Language Specification)<ept id="p1">](https://msdn.microsoft.com/library/12a7a7h3.aspx)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>