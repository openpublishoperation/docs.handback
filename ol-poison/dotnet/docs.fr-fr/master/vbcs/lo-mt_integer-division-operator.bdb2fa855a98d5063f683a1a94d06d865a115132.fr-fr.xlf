<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93d56bd2f5d1c426ff234cada232f5e8b02bed5d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\operators\integer-division-operator.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53f73056f01962aaf854a5ca4fc4326319dea36d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5cb55701522bbf5757a4631b61b07468e588b46</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_integer-division-operator.bdb2fa855a98d5063f683a1a94d06d865a115132.fr-fr is different with handoff file name: integer-division-operator.bdb2fa855a98d5063f683a1a94d06d865a115132.fr-fr.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>\ Operator (Visual Basic) | Microsoft Docs</source>
          <target state="translated">\, Opérateur (Visual Basic) | Documents Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>\ Operator (Visual Basic)</source>
          <target state="translated">\, opérateur (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Divides two numbers and returns an integer result.</source>
          <target state="translated">Effectue la division de deux nombres et retourne un résultat sous forme d'entier.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntaxe</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">Composants</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Obligatoire.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Any numeric expression.</source>
          <target state="translated">Toute expression numérique.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Obligatoire.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Any numeric expression.</source>
          <target state="translated">Toute expression numérique.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Supported Types</source>
          <target state="translated">Types pris en charge</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>All numeric types, including the unsigned and floating-point types and <ph id="ph1">`Decimal`</ph>.</source>
          <target state="translated">Tous les types numériques, y compris les types non signés et à virgule flottante et <ph id="ph1">`Decimal`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">Résultat</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The result is the integer quotient of <ph id="ph1">`expression1`</ph> divided by <ph id="ph2">`expression2`</ph>, which discards any remainder and retains only the integer portion.</source>
          <target state="translated">Le résultat est le quotient entier de <ph id="ph1">`expression1`</ph> divisé par <ph id="ph2">`expression2`</ph>, qui abandonne tout reste et conserve uniquement la partie entière.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This is known as <bpt id="p1">*</bpt>truncation<ept id="p1">*</ept>.</source>
          <target state="translated">Il s’agit en tant que <bpt id="p1">*</bpt>troncation<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The result data type is a numeric type appropriate for the data types of <ph id="ph1">`expression1`</ph> and <ph id="ph2">`expression2`</ph>.</source>
          <target state="translated">Le type de données de résultat est un type numérique approprié pour les types de données de <ph id="ph1">`expression1`</ph> et <ph id="ph2">`expression2`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See the "Integer Arithmetic" tables in <bpt id="p1">[</bpt>Data Types of Operator Results<ept id="p1">](../../../visual-basic/language-reference/operators/data-types-of-operator-results.md)</ept>.</source>
          <target state="translated">Consultez les tableaux « Arithmétique sur les entiers » dans <bpt id="p1">[</bpt>Data Types of Operator Results<ept id="p1">](../../../visual-basic/language-reference/operators/data-types-of-operator-results.md)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>/ Operator (Visual Basic)<ept id="p1">](../../../visual-basic/language-reference/operators/floating-point-division-operator.md)</ept> returns the full quotient, which retains the remainder in the fractional portion.</source>
          <target state="translated">Le <bpt id="p1">[</bpt>/, opérateur (Visual Basic)<ept id="p1">](../../../visual-basic/language-reference/operators/floating-point-division-operator.md)</ept> retourne le quotient complet qui conserve le reste dans la partie fractionnaire.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">Notes</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Before performing the division, Visual Basic attempts to convert any floating-point numeric expression to <ph id="ph1">`Long`</ph>.</source>
          <target state="translated">Avant d’effectuer la division, Visual Basic tente de convertir toute expression numérique à virgule flottante à <ph id="ph1">`Long`</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Option Strict`</ph> is <ph id="ph2">`On`</ph>, a compiler error occurs.</source>
          <target state="translated">Si <ph id="ph1">`Option Strict`</ph> est <ph id="ph2">`On`</ph>, une erreur de compilation se produit.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Option Strict`</ph> is <ph id="ph2">`Off`</ph>, an &lt;xref:System.OverflowException&gt; is possible if the value is outside the range of the <bpt id="p1">[</bpt>Long Data Type<ept id="p1">](../../../visual-basic/language-reference/data-types/long-data-type.md)</ept>.</source>
          <target state="translated">Si <ph id="ph1">`Option Strict`</ph> est <ph id="ph2">`Off`</ph>, un &lt;xref:System.OverflowException&gt;est possible si la valeur est en dehors de la plage de la <bpt id="p1">[</bpt>Type de données Long<ept id="p1">](../../../visual-basic/language-reference/data-types/long-data-type.md)</ept>.&lt;/xref:System.OverflowException&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The conversion to <ph id="ph1">`Long`</ph> is also subject to <bpt id="p1">*</bpt>banker's rounding<ept id="p1">*</ept>.</source>
          <target state="translated">La conversion <ph id="ph1">`Long`</ph> est également soumis aux <bpt id="p1">*</bpt>l’arrondi bancaire<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see "Fractional Parts" in <bpt id="p1">[</bpt>Type Conversion Functions<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez « Parties fractionnaires » dans <bpt id="p1">[</bpt>les fonctions de Conversion de Type<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`expression1`</ph> or <ph id="ph2">`expression2`</ph> evaluates to <bpt id="p1">[</bpt>Nothing<ept id="p1">](../../../visual-basic/language-reference/nothing.md)</ept>, it is treated as zero.</source>
          <target state="translated">Si <ph id="ph1">`expression1`</ph> ou <ph id="ph2">`expression2`</ph> a la valeur <bpt id="p1">[</bpt>rien<ept id="p1">](../../../visual-basic/language-reference/nothing.md)</ept>, elle est considérée comme nulle.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Attempted Division by Zero</source>
          <target state="translated">Tentative de Division par zéro</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`expression2`</ph> evaluates to zero, the <ph id="ph2">`\`</ph> operator throws a &lt;xref:System.DivideByZeroException&gt; exception.</source>
          <target state="translated">Si <ph id="ph1">`expression2`</ph> correspond à zéro, le <ph id="ph2">`\`</ph> opérateur lève une &lt;xref:System.DivideByZeroException&gt;exception.&lt;/xref:System.DivideByZeroException&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This is true for all numeric data types of the operands.</source>
          <target state="translated">Cela est vrai pour tous les types de données numériques des opérandes.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`\`</ph> operator can be <bpt id="p1">*</bpt>overloaded<ept id="p1">*</ept>, which means that a class or structure can redefine its behavior when an operand has the type of that class or structure.</source>
          <target state="translated">Le <ph id="ph1">`\`</ph> opérateur peut être <bpt id="p1">*</bpt>surchargé<ept id="p1">*</ept>, ce qui signifie qu’une classe ou structure peut redéfinir son comportement lorsqu’un opérande a le type de cette classe ou structure.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If your code uses this operator on such a class or structure, be sure you understand its redefined behavior.</source>
          <target state="translated">Si votre code utilise cet opérateur sur une telle classe ou structure, assurez-vous que vous comprenez son comportement redéfini.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Operator Procedures<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>procédures d’opérateur<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Exemple</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`\`</ph> operator to perform integer division.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">`\`</ph> opérateur pour effectuer une division d’entier.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The result is an integer that represents the integer quotient of the two operands, with the remainder discarded.</source>
          <target state="translated">Le résultat est un entier qui représente le quotient entier des deux opérandes avec le reste abandonné.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOperators#18<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/integer-division-operator_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOperators&amp;#18;<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/integer-division-operator_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The expressions in the preceding example return values of 2, 3, 33, and -22, respectively.</source>
          <target state="translated">Les expressions dans l’exemple précédent retournent les valeurs de 2, 3, 33 et -22, respectivement.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Voir aussi</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\\</ph>= Operator<ept id="p1">](../../../visual-basic/language-reference/operators/integer-division-assignment-operator.md)</ept><ph id="ph2"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt><ph id="ph1">\\</ph>=, Opérateur<ept id="p1">](../../../visual-basic/language-reference/operators/integer-division-assignment-operator.md)</ept><ph id="ph2"> </ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>/ Operator (Visual Basic)<ept id="p1">](../../../visual-basic/language-reference/operators/floating-point-division-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>/, Opérateur (Visual Basic)<ept id="p1">](../../../visual-basic/language-reference/operators/floating-point-division-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Option Strict Statement<ept id="p1">](../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Option Strict, instruction<ept id="p1">](../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Arithmetic Operators<ept id="p1">](../../../visual-basic/language-reference/operators/arithmetic-operators.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Opérateurs arithmétiques<ept id="p1">](../../../visual-basic/language-reference/operators/arithmetic-operators.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operator Precedence in Visual Basic<ept id="p1">](../../../visual-basic/language-reference/operators/operator-precedence.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Priorité des opérateurs dans Visual Basic<ept id="p1">](../../../visual-basic/language-reference/operators/operator-precedence.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operators Listed by Functionality<ept id="p1">](../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Opérateurs répertoriés par fonctionnalité<ept id="p1">](../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Arithmetic Operators in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/arithmetic-operators.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Opérateurs arithmétiques en Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/arithmetic-operators.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>