<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="fr-fr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f69aed2e0e6791ca7f17c3420ff75a1ba220187</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\quantifier-operations.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fadded6344b5db273d5932d8960f766116d5b0af</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8243777bacf4b29c70c29adbe6466b0eec7d00b</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_quantifier-operations.25f7dc4d6684e1b17b8a48b45875efd35b6a725e.fr-fr is different with handoff file name: quantifier-operations.25f7dc4d6684e1b17b8a48b45875efd35b6a725e.fr-fr.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Quantifier Operations (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Opérations de quantificateur (Visual Basic) | Documents Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Quantifier Operations (Visual Basic)</source>
          <target state="translated">Opérations de quantificateur (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Quantifier operations return a &lt;xref:System.Boolean&gt; value that indicates whether some or all of the elements in a sequence satisfy a condition.</source>
          <target state="translated">Opérations de quantificateur retournent un &lt;xref:System.Boolean&gt;valeur qui indique si certains ou tous les éléments d’une séquence remplissent une condition.&lt;/xref:System.Boolean&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The following illustration depicts two different quantifier operations on two different source sequences.</source>
          <target state="translated">L’illustration suivante représente deux opérations de quantificateur différentes sur deux séquences source différentes.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The first operation asks if one or more of the elements are the character 'A', and the result is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">La première opération demande si un ou plusieurs des éléments sont le caractère 'A' et le résultat est <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The second operation asks if all the elements are the character 'A', and the result is <ph id="ph1">`true`</ph>.</source>
          <target state="translated">La deuxième opération demande si tous les éléments sont le caractère 'A' et le résultat est <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>LINQ Quantifier Operations<ept id="p1">]</ept><bpt id="p2">(../../../../csharp/programming-guide/concepts/linq/media/linq_quantifier.png "</bpt>LINQ_Quantifier<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Opérations de quantificateur LINQ<ept id="p1">]</ept><bpt id="p2">(../../../../csharp/programming-guide/concepts/linq/media/linq_quantifier.png "</bpt>LINQ_Quantifier<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The standard query operator methods that perform quantifier operations are listed in the following section.</source>
          <target state="translated">Les méthodes d’opérateur de requête standard qui effectuent des opérations de quantificateur sont répertoriées dans la section suivante.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Méthodes</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Method Name</source>
          <target state="translated">Nom de la méthode</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Visual Basic Query Expression Syntax</source>
          <target state="translated">Syntaxe d’Expression de requête Visual Basic</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>More Information</source>
          <target state="translated">Informations complémentaires</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>All</source>
          <target state="translated">Tout</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Determines whether all the elements in a sequence satisfy a condition.</source>
          <target state="translated">Détermine si tous les éléments d’une séquence remplissent une condition.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Enumerable.All%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Linq.Enumerable.All%2A?displayProperty=fullName&gt;&lt;/xref:System.Linq.Enumerable.All%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Queryable.All%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Linq.Queryable.All%2A?displayProperty=fullName&gt;&lt;/xref:System.Linq.Queryable.All%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Any</source>
          <target state="translated">Any</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Determines whether any elements in a sequence satisfy a condition.</source>
          <target state="translated">Détermine si tous les éléments d’une séquence remplissent une condition.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Enumerable.Any%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Linq.Enumerable.Any%2A?displayProperty=fullName&gt;&lt;/xref:System.Linq.Enumerable.Any%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Queryable.Any%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Linq.Queryable.Any%2A?displayProperty=fullName&gt;&lt;/xref:System.Linq.Queryable.Any%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Contains</source>
          <target state="translated">Contient</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Determines whether a sequence contains a specified element.</source>
          <target state="translated">Détermine si une séquence contient un élément spécifié.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
          <target state="translated">Non applicable.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Enumerable.Contains%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Linq.Enumerable.Contains%2A?displayProperty=fullName&gt;&lt;/xref:System.Linq.Enumerable.Contains%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq.Queryable.Contains%2A?displayProperty=fullName&gt;</source>
          <target state="translated">&lt;xref:System.Linq.Queryable.Contains%2A?displayProperty=fullName&gt;&lt;/xref:System.Linq.Queryable.Contains%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Query Expression Syntax Examples</source>
          <target state="translated">Exemples de syntaxe d'expression de requête</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>These examples use the <ph id="ph1">`Aggregate`</ph> clause in Visual Basic as part of the filtering condition in a LINQ query.</source>
          <target state="translated">Ces exemples utilisent la <ph id="ph1">`Aggregate`</ph> clause dans Visual Basic en tant que partie de la condition de filtrage dans une requête LINQ.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`Aggregate`</ph> clause and the &lt;xref:System.Linq.Enumerable.All%2A&gt; extension method to return from a collection those people whose pets are all older than a specified age.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">`Aggregate`</ph> clause et la &lt;xref:System.Linq.Enumerable.All%2A&gt;méthode d’extension pour retourner à partir d’une collection de ces personnes dont les animaux domestiques ont tous dépassés un âge spécifié.&lt;/xref:System.Linq.Enumerable.All%2A&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>CsLINQAnyAll#1<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/quantifier-operations_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>CsLINQAnyAll n °&amp;1;<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/quantifier-operations_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The next example uses the <ph id="ph1">`Aggregate`</ph> clause and the &lt;xref:System.Linq.Enumerable.Any%2A&gt; extension method to return from a collection those people who have at least one pet that is older than a specified age.</source>
          <target state="translated">L’exemple suivant utilise le <ph id="ph1">`Aggregate`</ph> clause et la &lt;xref:System.Linq.Enumerable.Any%2A&gt;méthode d’extension à retourner à partir d’une collection les personnes qui ont au moins un animal domestique qui a dépassé un âge spécifié.&lt;/xref:System.Linq.Enumerable.Any%2A&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>CsLINQAnyAll#2<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/quantifier-operations_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>CsLINQAnyAll n °&amp;2;<ept id="p2">](../../../../visual-basic/programming-guide/concepts/linq/codesnippet/VisualBasic/quantifier-operations_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Voir aussi</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Linq&gt;</source>
          <target state="translated">&lt;xref:System.Linq&gt;&lt;/xref:System.Linq&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Standard Query Operators Overview (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/standard-query-operators-overview.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Vue d’ensemble des opérateurs de requête standard (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/standard-query-operators-overview.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Aggregate Clause<ept id="p1">](../../../../visual-basic/language-reference/queries/aggregate-clause.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Aggregate (Clause)<ept id="p1">](../../../../visual-basic/language-reference/queries/aggregate-clause.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Query for Sentences that Contain a Specified Set of Words (LINQ) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-query-for-sentences-that-contain-a-specified-set-of-words.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Comment : rechercher des phrases qui contiennent un jeu spécifié de mots (LINQ) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-query-for-sentences-that-contain-a-specified-set-of-words.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>