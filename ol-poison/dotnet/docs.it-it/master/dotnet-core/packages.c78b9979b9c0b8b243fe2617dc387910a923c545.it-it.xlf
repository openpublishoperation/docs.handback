<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6b5bb7042fdaa453966a4fc576291b3c90ee5410</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\packages.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dc12600ed25965a42bb459f1f4190c64dc6a50ca</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d459e680fbced2a06d06f949789721e5aa0c8c9</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">file packages.c78b9979b9c0b8b243fe2617dc387910a923c545.it-it.xlf is out of handoff scope</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Packages, Metapackages and Frameworks</source>
          <target state="translated">Pacchetti, metapacchetti e framework</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Packages, Metapackages and Frameworks</source>
          <target state="translated">Pacchetti, metapacchetti e framework</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Packages, Metapackages and Frameworks</source>
          <target state="translated">Pacchetti, metapacchetti e framework</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>.NET Core is a platform made of NuGet packages.</source>
          <target state="translated">.NET Core è una piattaforma costituita da pacchetti NuGet.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Some product experiences benefit from fine-grained definition of packages while others from coarse-grained.</source>
          <target state="translated">Alcuni prodotti traggono vantaggio da una definizione dei pacchetti con granularità fine, mentre altri da una definizione con granularità più grossolana.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To accommodate this duality, the product is distributed as a fine-grained set of packages and then described in coarser chunks with a package type informally called a "metapackage".</source>
          <target state="translated">Per tenere conto di questo dualismo, il prodotto viene distribuito come set di pacchetti con granularità fine e quindi viene descritto in blocchi più grossolani con un tipo di pacchetto denominato in modo informale "metapacchetto".</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Each of the .NET Core packages support being run on multiple .NET runtimes, represented as frameworks.</source>
          <target state="translated">Ciascuno dei pacchetti .NET Core supporta l'esecuzione su più runtime .NET, rappresentati come framework.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Some of those frameworks are traditional frameworks, like <ph id="ph1">`net46`</ph>, representing the .NET Framework.</source>
          <target state="translated">Alcuni di questi framework sono tradizionali, ad esempio <ph id="ph1">`net46`</ph>, e rappresentano l'istanza .NET Framework.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Another set is new frameworks that can be thought of as "package-based frameworks", which establish a new model for defining frameworks.</source>
          <target state="translated">Un altro insieme è costituito da nuovi framework che possono essere considerati come "framework basati su pacchetti", il che stabilisce un nuovo modello di definizione dei framework stessi.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>These package-based frameworks are entirely formed and defined as packages, forming a strong relationship between packages and frameworks.</source>
          <target state="translated">Questi framework basati su pacchetti sono interamente formati e definiti come pacchetti, creando una forte relazione tra pacchetti e framework.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Packages</source>
          <target state="translated">Pacchetti</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>.NET Core is split into a set of packages, which provide primitives, higher-level data types, app composition types and common utilities.</source>
          <target state="translated">.NET Core è suddiviso in un set di pacchetti che forniscono primitive, tipi di dati di livello superiore, tipi di composizione delle app e utilità di uso comune.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Each of these packages represent a single assembly of the same name.</source>
          <target state="translated">Ognuno di questi pacchetti rappresenta un singolo assembly con lo stesso nome.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">[</bpt>System.Runtime<ept id="p1">](https://www.nuget.org/packages/System.Runtime)</ept> contains System.Runtime.dll.</source>
          <target state="translated">Ad esempio, <bpt id="p1">[</bpt>System.Runtime<ept id="p1">](https://www.nuget.org/packages/System.Runtime)</ept> contiene System.Runtime.dll.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>There are advantages to defining packages in a fine-grained manner:</source>
          <target state="translated">La definizione dei pacchetti con granularità fine presenta alcuni vantaggi:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Fine-grained packages can ship on their own schedule with relatively limited testing of other packages.</source>
          <target state="translated">I pacchetti con granularità fine possono essere distribuiti in base a una specifica pianificazione, con operazioni di test di altri pacchetti relativamente limitate.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Fine-grained packages can provide differing OS and CPU support.</source>
          <target state="translated">I pacchetti con granularità fine possono fornire supporto per diversi sistemi operativi e CPU.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Fine-grained packages can have dependencies specific to only one library.</source>
          <target state="translated">I pacchetti con granularità fine possono avere dipendenze specifiche da una sola libreria.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Apps are smaller because unreferenced packages don't become part of the app distribution.</source>
          <target state="translated">Le app hanno dimensioni ridotte perché i pacchetti senza riferimenti non diventano parte della distribuzione delle app stesse.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Some of these benefits are only used in certain circumstances.</source>
          <target state="translated">Alcuni di questi vantaggi vengono sfruttati solo in particolari circostanze.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, NET Core packages will typically ship on the same schedule with the same platform support.</source>
          <target state="translated">I pacchetti .NET Core, ad esempio, possono essere distribuiti in base alla stessa pianificazione con lo stesso supporto di piattaforma.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>In the case of servicing, fixes can be distributed and installed as small single package updates.</source>
          <target state="translated">Nel caso di interventi di manutenzione, le correzioni possono essere distribuite e installate come piccoli aggiornamenti di singoli pacchetti.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Due to the narrow scope of change, the validation and time to make a fix available is limited to what is needed for a single library.</source>
          <target state="translated">A causa del ristretto ambito di modifica, le operazioni di convalida e il tempo necessario per rendere una correzione disponibile sono limitati a quanto necessario per una singola libreria.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following is a list of the key NuGet packages for .NET Core:</source>
          <target state="translated">Di seguito è riportato un elenco dei principali pacchetti NuGet per .NET Core:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Runtime<ept id="p1">](https://www.nuget.org/packages/System.Runtime)</ept> - The most fundamental .NET Core package, including <bpt id="p2">[</bpt>Object<ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Object)</ept>, <bpt id="p3">[</bpt>String<ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.String)</ept>, <bpt id="p4">[</bpt>Array<ept id="p4">](http://docs.microsoft.com/dotnet/core/api/System.Array)</ept>, <bpt id="p5">[</bpt>Action<ept id="p5">](http://docs.microsoft.com/dotnet/core/api/System.Action)</ept> and <bpt id="p6">[</bpt>IList<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p6">](http://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IList-1)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Runtime<ept id="p1">](https://www.nuget.org/packages/System.Runtime)</ept>: principale pacchetto .NET Core. Sono inclusi <bpt id="p2">[</bpt>Object<ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Object)</ept>, <bpt id="p3">[</bpt>String<ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.String)</ept>, <bpt id="p4">[</bpt>Array<ept id="p4">](http://docs.microsoft.com/dotnet/core/api/System.Array)</ept>, <bpt id="p5">[</bpt>Action<ept id="p5">](http://docs.microsoft.com/dotnet/core/api/System.Action)</ept> e <bpt id="p6">[</bpt>IList<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p6">](http://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.IList-1)</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://www.nuget.org/packages/System.Collections)</ept> - A set of (primarily) generic collections, including <bpt id="p2">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> and <bpt id="p3">[</bpt>Dictionary<ph id="ph3">&amp;lt;</ph>K,V<ph id="ph4">&amp;gt;</ph><ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Collections<ept id="p1">](https://www.nuget.org/packages/System.Collections)</ept>: set di raccolte (essenzialmente) generiche. Sono inclusi <bpt id="p2">[</bpt>List<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.List-1)</ept> e <bpt id="p3">[</bpt>Dictionary<ph id="ph3">&amp;lt;</ph>K,V<ph id="ph4">&amp;gt;</ph><ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.Collections.Generic.Dictionary-2)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Net.Http<ept id="p1">](https://www.nuget.org/packages/System.Net.Http)</ept> - A set of types for HTTP network communication, including <bpt id="p2">[</bpt>HttpClient<ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Net.Http.HttpClient)</ept> and <bpt id="p3">[</bpt>HttpResponseMessage<ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.Net.Http.HttpResponseMessage)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Net.Http<ept id="p1">](https://www.nuget.org/packages/System.Net.Http)</ept>: set di tipi per la comunicazione di rete HTTP. Sono inclusi <bpt id="p2">[</bpt>HttpClient<ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Net.Http.HttpClient)</ept> e <bpt id="p3">[</bpt>HttpResponseMessage<ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.Net.Http.HttpResponseMessage)</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.IO.FileSystem<ept id="p1">](https://www.nuget.org/packages/System.IO.FileSystem)</ept> - A set of types for reading and writing to local or networked disk-based storage, including <bpt id="p2">[</bpt>File<ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.IO.File)</ept> and <bpt id="p3">[</bpt>Directory<ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.IO.Directory)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.IO.FileSystem<ept id="p1">](https://www.nuget.org/packages/System.IO.FileSystem)</ept>: set di tipi per la lettura e la scrittura in sistemi di archiviazione basati su disco locali o di rete. Sono inclusi <bpt id="p2">[</bpt>File<ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.IO.File)</ept> e <bpt id="p3">[</bpt>Directory<ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.IO.Directory)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Linq<ept id="p1">](https://www.nuget.org/packages/System.Linq)</ept> - A set of types for querying objects, including Enumerable and <bpt id="p2">[</bpt>ILookup<ph id="ph1">&amp;lt;</ph>TKey, TElement<ph id="ph2">&amp;gt;</ph><ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Linq.ILookup-2)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Linq<ept id="p1">](https://www.nuget.org/packages/System.Linq)</ept>: set di tipi di oggetti di query. Sono inclusi Enumerable, <bpt id="p2">[</bpt>ILookup<ph id="ph1">&amp;lt;</ph>TKey e TElement<ph id="ph2">&amp;gt;</ph><ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Linq.ILookup-2)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Reflection<ept id="p1">](https://www.nuget.org/packages/System.Reflection)</ept> - A set of types for loading, inspecting and activating types, including <bpt id="p2">[</bpt>Assembly<ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Reflection.Assembly)</ept>, <bpt id="p3">[</bpt>TypeInfo<ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.Reflection.TypeInfo)</ept> and <bpt id="p4">[</bpt>MethodInfo<ept id="p4">](http://docs.microsoft.com/dotnet/core/api/System.Reflection.MethodInfo)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Reflection<ept id="p1">](https://www.nuget.org/packages/System.Reflection)</ept>: set di tipi per il caricamento, l'analisi e l'attivazione. Sono inclusi <bpt id="p2">[</bpt>Assembly<ept id="p2">](http://docs.microsoft.com/dotnet/core/api/System.Reflection.Assembly)</ept>, <bpt id="p3">[</bpt>TypeInfo<ept id="p3">](http://docs.microsoft.com/dotnet/core/api/System.Reflection.TypeInfo)</ept> e <bpt id="p4">[</bpt>MethodInfo<ept id="p4">](http://docs.microsoft.com/dotnet/core/api/System.Reflection.MethodInfo)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Packages are referenced in project.json.</source>
          <target state="translated">Nel file project.json viene fatto riferimento ai pacchetti.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In the example below, the <bpt id="p1">[</bpt>System.Runtime<ept id="p1">](https://www.nuget.org/packages/System.Runtime/)</ept> package is referenced.</source>
          <target state="translated">Nell'esempio seguente viene fatto riferimento al pacchetto <bpt id="p1">[</bpt>System.Runtime<ept id="p1">](https://www.nuget.org/packages/System.Runtime/)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>In most cases, you will not reference the lower-level .NET Core packages directly since you'll end up with too many packages to manage.</source>
          <target state="translated">Nella maggior parte dei casi non viene fatto riferimento direttamente ai pacchetti .NET Core di livello più basso, perché si finirebbe con l'avere troppi pacchetti da gestire.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Instead, you'll reference a metapackage.</source>
          <target state="translated">Viene invece fatto riferimento a un metapacchetto.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Metapackages</source>
          <target state="translated">Metapacchetti</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Metapackages are a NuGet package convention for describing a set of packages that are meaningful together.</source>
          <target state="translated">I metapacchetti sono una convenzione di NuGet per descrivere un set di pacchetti che sono significativi insieme.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>They represent this set of packages by making them dependencies.</source>
          <target state="translated">I metapacchetti rappresentano questo set di pacchetti trasformandoli in dipendenze.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>They can optionally establish a framework for this set of packages by specifying a framework.</source>
          <target state="translated">Facoltativamente, stabiliscono un framework per questo set di pacchetti specificando appunto un framework.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>By referencing a metapackage, you are, in effect, adding a reference to each of its dependent packages as a single gesture.</source>
          <target state="translated">Facendo riferimento a un metapacchetto, si aggiunge in effetti un riferimento a ciascuno dei suoi pacchetti dipendenti con una singola operazione.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>That means that all of the libraries in those packages (refs or libs) are available for IntelliSense (or similar experience) and for publishing (libs only) your app.</source>
          <target state="translated">Questo significa che tutte le librerie ('ref' o 'lib') di tali pacchetti sono disponibili per IntelliSense (o esperienza simile) e per la pubblicazione dell'app (solo 'lib').</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Note: The 'lib' and 'ref' terms refer to folders in NuGet packages.</source>
          <target state="translated">Nota: i termini 'lib' e 'ref' indicano cartelle dei pacchetti NuGet.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>'ref' folders describe the public API of a package via assembly metadata.</source>
          <target state="translated">Le cartelle 'ref' descrivono l'API pubblica di un pacchetto tramite metadati di assembly.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>'lib' folders contain the implementation of that public API for a given framework.</source>
          <target state="translated">Le cartelle 'lib' contengono l'implementazione di tale API pubblica per un determinato framework.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>There are advantages to using metapackages:</source>
          <target state="translated">L'uso dei metapacchetti presenta i vantaggi seguenti:</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Provides a convenient user experience to reference a large set of fine-grained packages.</source>
          <target state="translated">Fornisce un'esperienza utente che consente di fare facilmente riferimento a un elevato numero di pacchetti con granularità fine.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Defines a set of packages (including specific versions) that are tested and work well together.</source>
          <target state="translated">Definisce un set di pacchetti (incluse versioni specifiche) che vengono testati e funzionano bene insieme.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The .NET Standard Library metapackage:</source>
          <target state="translated">Metapacchetto della libreria .NET Standard:</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>NETStandard.Library<ept id="p1">](https://www.nuget.org/packages/NETStandard.Library)</ept> - Describes the libraries that are part of the ".NET Standard Library".</source>
          <target state="translated"><bpt id="p1">[</bpt>NETStandard.Library<ept id="p1">](https://www.nuget.org/packages/NETStandard.Library)</ept>: descrive le librerie che fanno parte della "libreria .NET Standard".</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Applies to all .NET implementations (for example, .NET Framework, .NET Core and Mono) that support the .NET Standard Library.</source>
          <target state="translated">Si applica a tutte le implementazioni .NET, ad esempio .NET Framework, .NET Core e Mono, che supportano la libreria .NET Standard.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Establishes the 'netstandard' framework.</source>
          <target state="translated">Stabilisce il framework 'netstandard'.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>These are the key .NET Core metapackages:</source>
          <target state="translated">I metapacchetti .NET Core chiave sono i seguenti:</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft.NETCore.App<ept id="p1">](https://www.nuget.org/packages/Microsoft.NETCore.App)</ept> - Describes the libraries that are part of the .NET Core distribution.</source>
          <target state="translated"><bpt id="p1">[</bpt>Microsoft.NETCore.App<ept id="p1">](https://www.nuget.org/packages/Microsoft.NETCore.App)</ept>: descrive le librerie che fanno parte della distribuzione .NET Core.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Establishes the <bpt id="p1">[</bpt><ph id="ph1">`.NETCoreApp`</ph> framework<ept id="p1">](https://github.com/dotnet/core-setup/blob/master/pkg/projects/Microsoft.NETCore.App/Microsoft.NETCore.App.pkgproj)</ept>.</source>
          <target state="translated">Stabilisce il framework <bpt id="p1">[</bpt><ph id="ph1">`.NETCoreApp`</ph> <ept id="p1">](https://github.com/dotnet/core-setup/blob/master/pkg/projects/Microsoft.NETCore.App/Microsoft.NETCore.App.pkgproj)</ept>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Depends on the smaller <ph id="ph1">`NETStandard.Library`</ph>.</source>
          <target state="translated">Dipende dalla <ph id="ph1">`NETStandard.Library`</ph> di minori dimensioni.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Microsoft.NETCore.Portable.Compatibility<ept id="p1">](https://www.nuget.org/packages/Microsoft.NETCore.Portable.Compatibility)</ept> - A set of compatibility facades that enable mscorlib-based Portable Class Libraries (PCLs) to run on .NET Core.</source>
          <target state="translated"><bpt id="p1">[</bpt>Microsoft.NETCore.Portable.Compatibility<ept id="p1">](https://www.nuget.org/packages/Microsoft.NETCore.Portable.Compatibility)</ept>: set di caratteristiche di compatibilità che abilitano l'esecuzione in .NET Core di librerie di classi portabili basate su mscorlib.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Metapackages are referenced just like any other NuGet package in project.json.</source>
          <target state="translated">Ai metapacchetti viene fatto riferimento nel file project.json come a qualsiasi altro pacchetto NuGet.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In the following example, the <ph id="ph1">`NETStandard.Library`</ph> meta package is referenced, which is used for creating libraries that are portable across .NET runtimes.</source>
          <target state="translated">Nell'esempio seguente viene fatto riferimento al metapacchetto <ph id="ph1">`NETStandard.Library`</ph>, usato per creare librerie che possono essere trasferite tra runtime .NET.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>In the following example, the <ph id="ph1">`Microsoft.NETCore.App`</ph> metapackage is referenced, which is used for creating apps and libraries that are intended to run on and take full advantage of .NET Core.</source>
          <target state="translated">Nell'esempio seguente viene fatto riferimento al pacchetto <ph id="ph1">`Microsoft.NETCore.App`</ph>, usato per creare app e librerie da eseguire in .NET Core sfruttandone appieno i vantaggi.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>It provides access to a larger set of libraries than are provided by <ph id="ph1">`NETStandard.Library`</ph>.</source>
          <target state="translated">Consente l'accesso a un set di librerie più grande rispetto a quello fornito dalla <ph id="ph1">`NETStandard.Library`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Frameworks</source>
          <target state="translated">Framework</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>.NET Core packages each support a set of frameworks, declared with framework folders (within the lib and ref folders mentioned earlier).</source>
          <target state="translated">I pacchetti .NET Core supportano ciascuno un set di framework, dichiarati con cartelle di framework all'interno delle cartelle 'lib' e 'ref' menzionate in precedenza.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Frameworks describe an available API set (and potentially other characteristics) that you can rely on when you target a given framework.</source>
          <target state="translated">I framework descrivono un set di API disponibili (e potenzialmente altre caratteristiche) che è possibile usare quando si definisce un determinato framework come destinazione.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>They are versioned as new APIs are added.</source>
          <target state="translated">Vengono sottoposti al controllo delle versioni quando si aggiungono nuove API.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>For example, <bpt id="p1">[</bpt>System.IO.FileSystem<ept id="p1">](https://www.nuget.org/packages/System.IO.FileSystem)</ept> supports the following frameworks:</source>
          <target state="translated">Ad esempio, <bpt id="p1">[</bpt>System.IO.FileSystem<ept id="p1">](https://www.nuget.org/packages/System.IO.FileSystem)</ept> supporta i framework seguenti:</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>.NETFramework,Version=4.6</source>
          <target state="translated">.NETFramework, versione 4.6</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>.NETStandard,Version=1.3</source>
          <target state="translated">.NETStandard,versione 1.3</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>6 Xamarin platforms (for example, xamarinios10)</source>
          <target state="translated">6 piattaforme Xamarin, ad esempio xamarinios10</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>It is useful to contrast the first two of these frameworks, since they are examples of the two different ways that frameworks are defined.</source>
          <target state="translated">È utile confrontare i primi due di questi framework, in quanto sono esempi dei due diversi modi di definire i framework.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`.NETFramework,Version=4.6`</ph> framework represents the available APIs in the .NET Framework 4.6.</source>
          <target state="translated">Il framework <ph id="ph1">`.NETFramework,Version=4.6`</ph> rappresenta le API disponibili in .NET Framework 4.6.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>You can produce libraries  compiled with the .NET Framework 4.6 reference assemblies and then distribute those libraries in NuGet packages in a net46 lib folder.</source>
          <target state="translated">È possibile creare librerie compilate con assembly di riferimento .NET Framework 4.6 e quindi distribuirle in pacchetti NuGet in una cartella 'lib' net46.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>It will be used for apps that target the .NET Framework 4.6 or that are compatible with it.</source>
          <target state="translated">Questo procedimento verrà usato per app che hanno come destinazione .NET Framework 4.6 o che sono compatibili con esso.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This is how all frameworks have traditionally worked.</source>
          <target state="translated">Quella sopra descritta è la tradizionale modalità di funzionamento dei framework.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`.NETStandard,Version=1.3`</ph> framework is a package-based framework.</source>
          <target state="translated"><ph id="ph1">`.NETStandard,Version=1.3`</ph> è un framework basato su pacchetti.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>It relies on packages that target the framework to define and expose APIs in terms of the framework.</source>
          <target state="translated">Si basa su pacchetti che hanno come destinazione il framework per definire ed esporre le API in termini di framework.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Package-based Frameworks</source>
          <target state="translated">Framework basati su pacchetti</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>There is a two-way relationship between frameworks and packages.</source>
          <target state="translated">Tra i framework e i pacchetti è presente una relazione bidirezionale.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The first part is defining the APIs available for a given framework, for example <ph id="ph1">`netstandard1.3`</ph>.</source>
          <target state="translated">La prima parte consiste nella definizione delle API disponibili per un determinato framework, ad esempio <ph id="ph1">`netstandard1.3`</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Packages that target <ph id="ph1">`netstandard1.3`</ph> (or compatible frameworks, like <ph id="ph2">`netstandard1.0`</ph>) define the APIs available for <ph id="ph3">`netstandard1.3`</ph>.</source>
          <target state="translated">I pacchetti che hanno come destinazione <ph id="ph1">`netstandard1.3`</ph> (o framework compatibili quali <ph id="ph2">`netstandard1.0`</ph>) definiscono le API disponibili per <ph id="ph3">`netstandard1.3`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>That may sound like a circular definition, but it isn't.</source>
          <target state="translated">Può sembrare una definizione circolare, ma non lo è.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>By virtue of being "package-based", the API definition for the framework comes from packages.</source>
          <target state="translated">Poiché è basato su pacchetti, la definizione delle API per il framework deriva dai pacchetti.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The framework itself doesn't define any APIs.</source>
          <target state="translated">Il framework stesso non definisce alcuna API.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The second part of the relationship is asset selection.</source>
          <target state="translated">La seconda parte della relazione è la selezione delle risorse.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Packages can contain assets for multiple frameworks.</source>
          <target state="translated">I pacchetti possono contenere risorse per più framework.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Given a reference to a set of packages and/or metapackages, the framework is needed to determine which asset should be selected, for example <ph id="ph1">`net46`</ph> or <ph id="ph2">`netstandard1.3`</ph>.</source>
          <target state="translated">Dato un riferimento a un set di pacchetti e/o metapacchetti, il framework è necessario per determinare quale risorsa deve essere selezionata, ad esempio <ph id="ph1">`net46`</ph> o <ph id="ph2">`netstandard1.3`</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>It is important to select the correct asset.</source>
          <target state="translated">È importante selezionare la risorsa corretta.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>For example, a <ph id="ph1">`net46`</ph> asset is not likely to be compatible with .NET Framework 4.0 or .NET Core 1.0.</source>
          <target state="translated">Ad esempio, è improbabile che una risorsa <ph id="ph1">`net46`</ph> sia compatibile con .NET Framework 4.0 o .NET Core 1.0.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Package-based Framework Composition</source>
          <target state="translated">Composizione dei framework basati su pacchetti</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>You can see this relationship in the image above.</source>
          <target state="translated">La relazione è illustrata nella figura precedente.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>API<ept id="p1">*</ept> targets and defines the <bpt id="p2">*</bpt>framework<ept id="p2">*</ept>.</source>
          <target state="translated">L'<bpt id="p1">*</bpt>API<ept id="p1">*</ept> identifica il <bpt id="p2">*</bpt>framework<ept id="p2">*</ept> come destinazione e lo definisce.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>framework<ept id="p1">*</ept> is used for <bpt id="p2">*</bpt>asset selection<ept id="p2">*</ept>.</source>
          <target state="translated">Il <bpt id="p1">*</bpt>framework<ept id="p1">*</ept> viene usato per la <bpt id="p2">*</bpt>selezione delle risorse<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>asset<ept id="p1">*</ept> gives you the API.</source>
          <target state="translated">La <bpt id="p1">*</bpt>risorsa<ept id="p1">*</ept> fornisce l'API.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>It is an interesting question of where a package-based framework's definition ends and where consumption of that definition starts.</source>
          <target state="translated">Dove termina la definizione di un framework basato su pacchetti e dove inizia l'utilizzo di tale definizione è una questione interessante.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>One can consider your view of the framework as a function of a given project.json file.</source>
          <target state="translated">È possibile considerare la propria visualizzazione del framework come una funzione di un file project.json dato.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Your dependencies create your view of the framework, independent of the publisher(s) of those dependencies.</source>
          <target state="translated">Le dipendenze creano la visualizzazione del framework, indipendentemente dall'autore di tali dipendenze.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The two primary package-based frameworks used with .NET Core are:</source>
          <target state="translated">I due principali framework basati su pacchetti usati con .NET Core sono i seguenti:</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>.NET Standard</source>
          <target state="translated">.NET Standard</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The .NET Standard (TFM: <ph id="ph1">`netstandard`</ph>) framework represents the APIs defined by and built on top of the <bpt id="p1">[</bpt>.NET Standard Library<ept id="p1">](../standard/library.md)</ept>.</source>
          <target state="translated">Il framework .NET Standard (<ph id="ph1">`netstandard`</ph>) rappresenta le API definite e compilate nella <bpt id="p1">[</bpt>libreria .NET Standard<ept id="p1">](../standard/library.md)</ept>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Libraries that are intended to run on multiple runtimes should target this framework.</source>
          <target state="translated">Le librerie da eseguire su più runtime devono avere come destinazione questo framework.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>They will be supported on any .NET Standard compliant runtime, such as .NET Core, .NET Framework and Mono/Xamarin.</source>
          <target state="translated">Tali librerie verranno supportate su qualsiasi runtime compatibile con .NET Standard, ad esempio .NET Core, .NET Framework e Mono/Xamarin.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Each of these runtimes supports a set of .NET Standard versions, depending on which APIs they implement.</source>
          <target state="translated">Ciascuno di questi runtime supporta un set di versioni di .NET Standard, a seconda delle API implementate.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`NETStandard.Library`</ph> metapackage targets the <ph id="ph2">`netstandard`</ph> framework.</source>
          <target state="translated">Il metapacchetto <ph id="ph1">`NETStandard.Library`</ph> ha come destinazione il framework <ph id="ph2">`netstandard`</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The most common way to target <ph id="ph1">`netstandard`</ph> is by referencing this metapackage.</source>
          <target state="translated">Il modo più comune per definire <ph id="ph1">`netstandard`</ph> come destinazione consiste nel fare riferimento a questo metapacchetto.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>It describes and provides access to the ~40 .NET  libraries and associated APIs that define the .NET Standard Library.</source>
          <target state="translated">Questo metapacchetto descrive e fornisce l'accesso alle circa 40 librerie .NET e alle API associate che definiscono la libreria .NET Standard.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can reference additional packages that target <ph id="ph1">`netstandard`</ph> to get access to additional APIs.</source>
          <target state="translated">È possibile fare riferimento a pacchetti aggiuntivi che hanno <ph id="ph1">`netstandard`</ph> come destinazione per ottenere accesso ad altre API.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A given <bpt id="p1">[</bpt>NETStandard.Library version<ept id="p1">](versions/index.md)</ept> matches the highest <ph id="ph1">`netstandard`</ph> version it exposed (via its closure).</source>
          <target state="translated">Una determinata versione della <bpt id="p1">[</bpt>NETStandard.Library<ept id="p1">](versions/index.md)</ept> corrisponde alla più recente versione di <ph id="ph1">`netstandard`</ph> esposta (tramite la relativa chiusura).</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The framework reference in project.json is used to select the correct assets from the underlying packages.</source>
          <target state="translated">Il riferimento al framework nel file project.json viene usato per selezionare le risorse corrette dai pacchetti sottostanti.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>In this case, <ph id="ph1">`netstandard1.6`</ph> assets are required, as opposed to <ph id="ph2">`netstandard1.4`</ph> or <ph id="ph3">`net46`</ph>, for example.</source>
          <target state="translated">In questo caso, sono necessarie le risorse <ph id="ph1">`netstandard1.6`</ph> e non, ad esempio, le risorse <ph id="ph2">`netstandard1.4`</ph> o <ph id="ph3">`net46`</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The framework and metapackage references in project.json do not need to match.</source>
          <target state="translated">I riferimenti al framework e al metapacchetto nel file project.json non devono necessariamente corrispondere.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For example, the following project.json is valid.</source>
          <target state="translated">Ad esempio, il file project.json seguente è valido.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>It may seem strange to target <ph id="ph1">`netstandard1.3`</ph> but use the 1.6.0 version of <ph id="ph2">`NETStandard.Library`</ph>.</source>
          <target state="translated">Può sembrare strano definire come destinazione <ph id="ph1">`netstandard1.3`</ph> ma usare la versione 1.6.0 della <ph id="ph2">`NETStandard.Library`</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>It is a valid use-case, since the metapackage maintains support for older <ph id="ph1">`netstandard`</ph> versions.</source>
          <target state="translated">Si tratta di un caso di uso valido, dal momento che il metapacchetto mantiene il supporto per le precedenti versioni di <ph id="ph1">`netstandard`</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>It could be the case you've standardized on the 1.6.0 version of the metapackage and use it for all your libraries, which target a variety of <ph id="ph1">`netstandard`</ph> versions.</source>
          <target state="translated">Può trattarsi di una situazione in cui è stata definita come standard la versione 1.6.0 del pacchetto e tale versione è stata usata per tutte le librerie, che hanno come destinazione un'ampia gamma di versioni di <ph id="ph1">`netstandard`</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>With this approach, you only need to restore <ph id="ph1">`NETStandard.Library`</ph> 1.6.0 and not earlier versions.</source>
          <target state="translated">Con questo approccio, è sufficiente ripristinare <ph id="ph1">`NETStandard.Library`</ph> 1.6.0 e non le versioni precedenti.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The reverse would not be valid: targeting <ph id="ph1">`netstandard1.6`</ph> with the 1.3.0 version of <ph id="ph2">`NETStandard.Library`</ph>.</source>
          <target state="translated">La situazione opposta, ovvero la definizione di <ph id="ph1">`netstandard1.6`</ph> come destinazione con la versione 1.3.0 della <ph id="ph2">`NETStandard.Library`</ph>, non è valida.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>You cannot target a higher framework with a lower metapackage, since the lower version metapackage will not expose any assets for that higher framework.</source>
          <target state="translated">Non è possibile definire come destinazione la versione più recente di un framework con una versione precedente di un metapacchetto. La versione precedente del metapacchetto, infatti, non espone alcuna risorsa per la versione più recente del framework.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The [versioning scheme] for metapackages asserts that metapackages match the highest version of the framework they describe.</source>
          <target state="translated">Lo [schema di versionamento] per i metapacchetti impone che questi ultimi corrispondano alla versione più recente del framework che descrivono.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>By virtue of the versioning scheme, the first version of <ph id="ph1">`NETStandard.Library`</ph> is v1.6.0 given that it contains <ph id="ph2">`netstandard1.6`</ph> assets.</source>
          <target state="translated">In base a questo schema di versionamento, la prima versione della <ph id="ph1">`NETStandard.Library`</ph> è la 1.6.0, dato che contiene le risorse <ph id="ph2">`netstandard1.6`</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>v1.3.0 is used in the example above, for symmetry with the example above, but does not actually exist.</source>
          <target state="translated">La versione 1.3.0 viene usata nell'esempio precedente per simmetria, ma di fatto non esiste.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>.NET Core Application</source>
          <target state="translated">Applicazione .NET Core</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The .NET Core Application (TFM: <ph id="ph1">`netcoreapp`</ph>) framework represents the packages and associated APIs that come with the .NET Core distribution and the console application model that it provides.</source>
          <target state="translated">Il framework .NET Core Application (<ph id="ph1">`netcoreapp`</ph>) rappresenta i pacchetti e le API associate forniti con la distribuzione .NET Core e con il relativo modello di applicazione console offerto.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>.NET Core apps must use this framework, due to targeting the console application model, as should libraries that intended to run only on .NET Core.</source>
          <target state="translated">Le app .NET Core devono usare questo framework poiché hanno come destinazione il modello dell'applicazione console. Devono usare questo framework anche le librerie da eseguire solo in .NET Core.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Using this framework restricts apps and libraries to running only on .NET Core.</source>
          <target state="translated">L'uso di questo framework impone che le app e le librerie vengano eseguite solo in .NET Core.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Microsoft.NETCore.App`</ph> metapackage targets the <ph id="ph2">`netcoreapp`</ph> framework.</source>
          <target state="translated">Il metapacchetto <ph id="ph1">`Microsoft.NETCore.App`</ph> ha come destinazione il framework <ph id="ph2">`netcoreapp`</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>It provides access to ~60 libraries, ~40 provided by the <ph id="ph1">`NETStandard.Library`</ph> package and ~20 more in addition.</source>
          <target state="translated">Consente l'accesso a circa 60 librerie, circa 40 fornite dal pacchetto <ph id="ph1">`NETStandard.Library`</ph> e le rimanenti 20 in aggiunta.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>You can reference additional libraries that target <ph id="ph1">`netcoreapp`</ph> or compatible frameworks, such as <ph id="ph2">`netstandard`</ph>, to get access to additional APIs.</source>
          <target state="translated">È possibile fare riferimento a librerie aggiuntive che hanno come destinazione <ph id="ph1">`netcoreapp`</ph> o framework compatibili, ad esempio <ph id="ph2">`netstandard`</ph>, per ottenere l'accesso ad altre API.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Most of the additional libraries provided by <ph id="ph1">`Microsoft.NETCore.App`</ph> also target <ph id="ph2">`netstandard`</ph> given that their dependencies are satisfied by other <ph id="ph3">`netstandard`</ph> libraries.</source>
          <target state="translated">Anche la maggior parte delle librerie fornite da <ph id="ph1">`Microsoft.NETCore.App`</ph> ha come destinazione <ph id="ph2">`netstandard`</ph>, dato che le relative dipendenze sono soddisfatte da altre librerie <ph id="ph3">`netstandard`</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>That means that <ph id="ph1">`netstandard`</ph> libraries can also reference those packages as dependencies.</source>
          <target state="translated">Questo significa che anche le librerie <ph id="ph1">`netstandard`</ph> possono fare riferimento a tali pacchetti come dipendenze.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>