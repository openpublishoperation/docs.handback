<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c7e09bd482e35c7ce7f28a6cc7de0379b7cc89f6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\procedures\how-to-overload-a-procedure-that-takes-an-indefinite-number-of-parameters.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bddd58beef3c5a073fa0def77d809126f3f1bfef</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b284dc3bff383e31fb589af8d822e14b583e49c8</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_how-to-overload-a-procedure-that-takes-an-indefinite-number-of-parameters.4529227cf3598df915638a21fc1337e2c279493e.it-it is different with handoff file name: how-to-overload-a-procedure-that-takes-an-indefinite-number-of-parameters.4529227cf3598df915638a21fc1337e2c279493e.it-it.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Overload a Procedure that Takes an Indefinite Number of Parameters (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Procedura: eseguire l'Overload di una routine che accetta un numero indefinito di parametri (Visual Basic) | Documenti di Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Overload a Procedure that Takes an Indefinite Number of Parameters (Visual Basic)</source>
          <target state="translated">Procedura: eseguire l'overload di una routine che accetta un numero indefinito di parametri (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>If a procedure has a <bpt id="p1">[</bpt>ParamArray<ept id="p1">](../../../../visual-basic/language-reference/modifiers/paramarray.md)</ept> parameter, you cannot define an overloaded version taking a one-dimensional array for the parameter array.</source>
          <target state="translated">Se una routine include un <bpt id="p1">[</bpt>ParamArray<ept id="p1">](../../../../visual-basic/language-reference/modifiers/paramarray.md)</ept> parametro, non è possibile definire una versione di overload che accetta una matrice unidimensionale per la matrice di parametri.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For more information, see "Implicit Overloads for a ParamArray Parameter" in <bpt id="p1">[</bpt>Considerations in Overloading Procedures<ept id="p1">](./considerations-in-overloading-procedures.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere "Overload impliciti per un parametro ParamArray" in <bpt id="p1">[</bpt>Considerations in Overloading Procedures<ept id="p1">](./considerations-in-overloading-procedures.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To overload a procedure that takes a variable number of parameters</source>
          <target state="translated">Eseguire l'overload che accetta un numero variabile di parametri</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Ascertain that the procedure and calling code logic benefits from overloaded versions more than from a <ph id="ph1">`ParamArray`</ph> parameter.</source>
          <target state="translated">Verificare che la stored procedure e la chiamata di codice logica beneficerà overload versioni con più di un <ph id="ph1">`ParamArray`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>See "Overloads and ParamArrays" in <bpt id="p1">[</bpt>Considerations in Overloading Procedures<ept id="p1">](./considerations-in-overloading-procedures.md)</ept>.</source>
          <target state="translated">Vedere "Overload e ParamArray" in <bpt id="p1">[</bpt>considerazioni sull'overload di routine<ept id="p1">](./considerations-in-overloading-procedures.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Determine which numbers of supplied values the procedure should accept in the variable part of the parameter list.</source>
          <target state="translated">Determinare il numero di valori forniti la routine deve accettare nella parte variabile all'elenco di parametri.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This might include the case of no value, and it might include the case of a single one-dimensional array.</source>
          <target state="translated">Potrebbero essere inclusi nel caso di alcun valore, e può includere il caso di una matrice unidimensionale.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For each acceptable number of supplied values, write a <ph id="ph1">`Sub`</ph> or <ph id="ph2">`Function`</ph> declaration statement that defines the corresponding parameter list.</source>
          <target state="translated">Per ogni numero accettabile di valori forniti, scrivere un <ph id="ph1">`Sub`</ph> o <ph id="ph2">`Function`</ph> istruzione di dichiarazione che definisce l'elenco di parametri corrispondenti.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Do not use either the <ph id="ph1">`Optional`</ph> or the <ph id="ph2">`ParamArray`</ph> keyword in this overloaded version.</source>
          <target state="translated">Non utilizzare il <ph id="ph1">`Optional`</ph> o <ph id="ph2">`ParamArray`</ph> (parola chiave) in questa versione di overload.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In each declaration, precede the <ph id="ph1">`Sub`</ph> or <ph id="ph2">`Function`</ph> keyword with the <bpt id="p1">[</bpt>Overloads<ept id="p1">](../../../../visual-basic/language-reference/modifiers/overloads.md)</ept> keyword.</source>
          <target state="translated">In ogni dichiarazione far precedere il <ph id="ph1">`Sub`</ph> o <ph id="ph2">`Function`</ph> (parola chiave) con il <bpt id="p1">[</bpt>overload<ept id="p1">](../../../../visual-basic/language-reference/modifiers/overloads.md)</ept> (parola chiave).</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Following each declaration, write the procedure code that should execute when the calling code supplies values corresponding to that declaration's parameter list.</source>
          <target state="translated">Dopo ogni dichiarazione, scrivere il codice della routine che deve essere eseguita quando il codice chiamante fornisce valori corrispondenti all'elenco di parametri della dichiarazione.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Terminate each procedure with the <ph id="ph1">`End Sub`</ph> or <ph id="ph2">`End Function`</ph> statement as appropriate.</source>
          <target state="translated">Terminare ciascuna routine con il <ph id="ph1">`End Sub`</ph> o <ph id="ph2">`End Function`</ph> istruzione nel modo appropriato.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Esempio</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following example shows a procedure defined with a <bpt id="p1">[</bpt>ParamArray<ept id="p1">](../../../../visual-basic/language-reference/modifiers/paramarray.md)</ept> parameter, and then an equivalent set of overloaded procedures.</source>
          <target state="translated">Nell'esempio seguente viene illustrata una routine definita con un <bpt id="p1">[</bpt>ParamArray<ept id="p1">](../../../../visual-basic/language-reference/modifiers/paramarray.md)</ept> parametro e un set equivalente di routine di overload.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#69<ept id="p2">](./codesnippet/VisualBasic/how-to-overload-a-procedure-that-takes-an-indefinite-number-of-parameters_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#69;<ept id="p2">](./codesnippet/VisualBasic/how-to-overload-a-procedure-that-takes-an-indefinite-number-of-parameters_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#70<ept id="p2">](./codesnippet/VisualBasic/how-to-overload-a-procedure-that-takes-an-indefinite-number-of-parameters_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#70;<ept id="p2">](./codesnippet/VisualBasic/how-to-overload-a-procedure-that-takes-an-indefinite-number-of-parameters_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You cannot overload such a procedure with a parameter list that takes a one-dimensional array for the parameter array.</source>
          <target state="translated">Impossibile eseguire l'overload di una routine con un elenco di parametri che accetta una matrice unidimensionale per la matrice di parametri.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>However, you can use the signatures of the other implicit overloads.</source>
          <target state="translated">Tuttavia, è possibile utilizzare le firme degli altri overload impliciti.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following declarations illustrate this.</source>
          <target state="translated">Le seguenti dichiarazioni illustrare questo concetto.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#71<ept id="p2">](./codesnippet/VisualBasic/how-to-overload-a-procedure-that-takes-an-indefinite-number-of-parameters_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#71;<ept id="p2">](./codesnippet/VisualBasic/how-to-overload-a-procedure-that-takes-an-indefinite-number-of-parameters_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The code in the overloaded versions does not have to test whether the calling code supplied one or more values for the <ph id="ph1">`ParamArray`</ph> parameter, or if so, how many.</source>
          <target state="translated">Il codice nelle versioni di overload non è necessario verificare se il codice chiamante ha fornito uno o più valori per il <ph id="ph1">`ParamArray`</ph> parametro, in caso affermativo, il numero.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> passes control to the version matching the calling argument list.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>passa il controllo alla versione corrispondente all'elenco di argomenti chiamante.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
          <target state="translated">Compilazione del codice</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Because a procedure with a <ph id="ph1">`ParamArray`</ph> parameter is equivalent to a set of overloaded versions, you cannot overload such a procedure with a parameter list corresponding to any of these implicit overloads.</source>
          <target state="translated">Poiché una routine con un <ph id="ph1">`ParamArray`</ph> parametro è equivalente a un set di versioni di overload, è possibile eseguire l'overload di una routine con un elenco di parametri corrispondente a uno di questi overload impliciti.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Considerations in Overloading Procedures<ept id="p1">](./considerations-in-overloading-procedures.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>Considerations in Overloading Procedures<ept id="p1">](./considerations-in-overloading-procedures.md)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>.NET Framework Security</source>
          <target state="translated">Sicurezza di .NET Framework</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Whenever you deal with an array which can be indefinitely large, there is a risk of overrunning some internal capacity of your application.</source>
          <target state="translated">Quando gestisce una matrice che può essere di grandi dimensioni in modo indefinito, sussiste il rischio di sovraccaricare capacità interna dell'applicazione.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If you accept a parameter array, you should test for the length of the array the calling code passed to it, and take appropriate steps if it is too large for your application.</source>
          <target state="translated">Se si accetta una matrice di parametri, si deve verificare la lunghezza della matrice passato al codice chiamante ed eseguire i passaggi appropriati, se è troppo grande per l'applicazione.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vedere anche</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Procedures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Procedure<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Parameters and Arguments<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Gli argomenti e parametri di routine<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Optional Parameters<ept id="p1">](./optional-parameters.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Parametri facoltativi<ept id="p1">](./optional-parameters.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Parameter Arrays<ept id="p1">](./parameter-arrays.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Matrici di parametri<ept id="p1">](./parameter-arrays.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Overloading<ept id="p1">](./procedure-overloading.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Overload di routine<ept id="p1">](./procedure-overloading.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Troubleshooting Procedures<ept id="p1">](./troubleshooting-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Le procedure di risoluzione<ept id="p1">](./troubleshooting-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Define Multiple Versions of a Procedure<ept id="p1">](./how-to-define-multiple-versions-of-a-procedure.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procedura: definire più versioni di una routine<ept id="p1">](./how-to-define-multiple-versions-of-a-procedure.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Call an Overloaded Procedure<ept id="p1">](./how-to-call-an-overloaded-procedure.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procedura: chiamare una routine di overload<ept id="p1">](./how-to-call-an-overloaded-procedure.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Overload a Procedure that Takes Optional Parameters<ept id="p1">](./how-to-overload-a-procedure-that-takes-optional-parameters.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procedura: eseguire l'Overload di una routine che accetta parametri facoltativi<ept id="p1">](./how-to-overload-a-procedure-that-takes-optional-parameters.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Overload Resolution<ept id="p1">](./overload-resolution.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Risoluzione dell'overload<ept id="p1">](./overload-resolution.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>