<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eeb55be1c368e9ca80ab94de814a5e2ba9bc9f1f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\data-types\how-to-use-a-generic-class.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b56552180af5d99c839883e830e014d8134a72de</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c4c2449b8b2b2f2a2136e38de656ec48939ba6b5</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_how-to-use-a-generic-class.6afd818d058542d4069de7b77e60f021a3caf088.it-it is different with handoff file name: how-to-use-a-generic-class.6afd818d058542d4069de7b77e60f021a3caf088.it-it.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Use a Generic Class (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Procedura: utilizzare una classe generica (Visual Basic) | Documenti di Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Use a Generic Class (Visual Basic)</source>
          <target state="translated">Procedura: utilizzare una classe generica (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A class that takes <bpt id="p1">*</bpt>type parameters<ept id="p1">*</ept> is called a <bpt id="p2">*</bpt>generic class<ept id="p2">*</ept>.</source>
          <target state="translated">Una classe che accetta <bpt id="p1">*</bpt>parametri di tipo<ept id="p1">*</ept> è chiamato <bpt id="p2">*</bpt>classe generica<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you are using a generic class, you can generate a <bpt id="p1">*</bpt>constructed class<ept id="p1">*</ept> from it by supplying a <bpt id="p2">*</bpt>type argument<ept id="p2">*</ept> for each of these parameters.</source>
          <target state="translated">Se si usa una classe generica, è possibile generare una <bpt id="p1">*</bpt>classe costruita<ept id="p1">*</ept> da essa fornendo un <bpt id="p2">*</bpt>argomento di tipo<ept id="p2">*</ept> per ciascuno di questi parametri.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can then declare a variable of the constructed class type, and you can create an instance of the constructed class and assign it to that variable.</source>
          <target state="translated">È possibile quindi dichiarare una variabile del tipo di classe costruita, creare un'istanza della classe costruita e assegnarla alla variabile.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>In addition to classes, you can also define and use generic structures, interfaces, procedures, and delegates.</source>
          <target state="translated">Oltre alle classi, è possibile definire e usare anche strutture, interfacce, routine e delegati generici.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following procedure takes a generic class defined in the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph> and creates an instance from it.</source>
          <target state="translated">La procedura seguente accetta una classe generica definita in <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph> e crea un'istanza da essa.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>To use a class that takes a type parameter</source>
          <target state="translated">Per usare una classe che accetta un parametro di tipo</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>At the beginning of your source file, include an <bpt id="p1">[</bpt>Imports Statement (.NET Namespace and Type)<ept id="p1">](../../../../visual-basic/language-reference/statements/imports-statement-net-namespace-and-type.md)</ept> to import the &lt;xref:System.Collections.Generic?displayProperty=fullName&gt; namespace.</source>
          <target state="translated">All'inizio del file di origine, includere un <bpt id="p1">[</bpt>istruzione Imports (tipo e Namespace .NET)<ept id="p1">](../../../../visual-basic/language-reference/statements/imports-statement-net-namespace-and-type.md)</ept> per importare il &lt;xref:System.Collections.Generic?displayProperty=fullName&gt;dello spazio dei nomi.&lt;/xref:System.Collections.Generic?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This allows you to refer to the &lt;xref:System.Collections.Generic.Queue%601?displayProperty=fullName&gt; class without having to fully qualify it to differentiate it from other queue classes such as &lt;xref:System.Collections.Queue?displayProperty=fullName&gt;.</source>
          <target state="translated">In questo modo è possibile fare riferimento alla &lt;xref:System.Collections.Generic.Queue%601?displayProperty=fullName&gt;classe senza qualificare completamente per differenziarla da altre classi queue, ad esempio &lt;xref:System.Collections.Queue?displayProperty=fullName&gt;.&lt;/xref:System.Collections.Queue?displayProperty=fullName&gt; &lt;/xref:System.Collections.Generic.Queue%601?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Create the object in the normal way, but add <ph id="ph1">`(Of`</ph> <ph id="ph2">`type``)`</ph> immediately after the class name.</source>
          <target state="translated">Creare l'oggetto in modo normale, ma aggiungere <ph id="ph1">`(Of`</ph> <ph id="ph2">`type``)`</ph> immediatamente dopo il nome della classe.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following example uses the same class (&lt;xref:System.Collections.Generic.Queue%601?displayProperty=fullName&gt;) to create two queue objects that hold items of different data types.</source>
          <target state="translated">Nell'esempio seguente viene utilizzata la stessa classe (&lt;xref:System.Collections.Generic.Queue%601?displayProperty=fullName&gt;) per creare due oggetti coda che contengono elementi di diversi tipi di dati.&lt;/xref:System.Collections.Generic.Queue%601?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It adds items to the end of each queue and then removes and displays items from the front of each queue.</source>
          <target state="translated">Aggiunge gli elementi alla fine di ogni coda e quindi rimuove e visualizza gli elementi dall'inizio di ogni coda.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDataTypes#9<ept id="p2">](../../../../visual-basic/language-reference/data-types/codesnippet/VisualBasic/how-to-use-a-generic-class_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>9 VbVbalrDataTypes<ept id="p2">](../../../../visual-basic/language-reference/data-types/codesnippet/VisualBasic/how-to-use-a-generic-class_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vedere anche</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Tipi di dati<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Generic Types in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Tipi generici in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/generic-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Language Independence and Language-Independent Components<ept id="p1">](https://msdn.microsoft.com/library/12a7a7h3)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Indipendenza del linguaggio e componenti indipendenti dal linguaggio<ept id="p1">](https://msdn.microsoft.com/library/12a7a7h3)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Of<ept id="p1">](../../../../visual-basic/language-reference/statements/of-clause.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Of<ept id="p1">](../../../../visual-basic/language-reference/statements/of-clause.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Imports Statement (.NET Namespace and Type)<ept id="p1">](../../../../visual-basic/language-reference/statements/imports-statement-net-namespace-and-type.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Istruzione Imports (tipo e spazio dei nomi .NET)<ept id="p1">](../../../../visual-basic/language-reference/statements/imports-statement-net-namespace-and-type.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Define a Class That Can Provide Identical Functionality on Different Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/how-to-define-a-class-that-can-provide-identical-functionality.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procedura: Definire una classe in grado di fornire funzionalità identiche con tipi di dati diversi<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/how-to-define-a-class-that-can-provide-identical-functionality.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Iterators<ept id="p1">](http://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Iteratori<ept id="p1">](http://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>