<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56d1ceba14020ca7f3dc750c2318efd3e9586af0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\procedures\passing-arguments-by-value-and-by-reference.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">62c343a889477a34526a3d140496ad330999cfea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24567c563777208151f3bb3bab04ba6930b4dd9c</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_passing-arguments-by-value-and-by-reference.2f30b701d989cf550309354a67d5003d01c659ba.it-it is different with handoff file name: passing-arguments-by-value-and-by-reference.2f30b701d989cf550309354a67d5003d01c659ba.it-it.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Passing Arguments by Value and by Reference (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Passaggio di argomenti per valore e per riferimento (Visual Basic) | Documenti di Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Passing Arguments by Value and by Reference (Visual Basic)</source>
          <target state="translated">Passaggio di argomenti per valore e per riferimento (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>, you can pass an argument to a procedure <bpt id="p1">*</bpt>by value<ept id="p1">*</ept> or <bpt id="p2">*</bpt>by reference<ept id="p2">*</ept>.</source>
          <target state="translated">In <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>, è possibile passare un argomento a una routine <bpt id="p1">*</bpt>dal valore<ept id="p1">*</ept> o <bpt id="p2">*</bpt>per riferimento<ept id="p2">*</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This is known as the <bpt id="p1">*</bpt>passing mechanism<ept id="p1">*</ept>, and it determines whether the procedure can modify the programming element underlying the argument in the calling code.</source>
          <target state="translated">Ciò è noto come il <bpt id="p1">*</bpt>meccanismo di trasferimento<ept id="p1">*</ept>, e determina se la routine può modificare l'elemento di programmazione sottostante all'argomento nel codice chiamante.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The procedure declaration determines the passing mechanism for each parameter by specifying the <bpt id="p1">[</bpt>ByVal<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byval.md)</ept> or <bpt id="p2">[</bpt>ByRef<ept id="p2">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept> keyword.</source>
          <target state="translated">La dichiarazione della routine determina il meccanismo di passaggio per ogni parametro, specificando il <bpt id="p1">[</bpt>ByVal<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byval.md)</ept> o <bpt id="p2">[</bpt>ByRef<ept id="p2">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept> (parola chiave).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Distinctions</source>
          <target state="translated">Differenze</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When passing an argument to a procedure, be aware of several different distinctions that interact with each other:</source>
          <target state="translated">Quando si passa un argomento a una routine, occorre considerare diverse distinzioni diverse che interagiscono tra loro:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Whether the underlying programming element is modifiable or nonmodifiable</source>
          <target state="translated">Se l'elemento di programmazione sottostante è modificabile o meno</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Whether the argument itself is modifiable or nonmodifiable</source>
          <target state="translated">Se l'argomento stesso sia modificabile o meno</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Whether the argument is being passed by value or by reference</source>
          <target state="translated">Se l'argomento sia passato per valore o riferimento</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Whether the argument data type is a value type or a reference type</source>
          <target state="translated">Se il tipo di dati dell'argomento è un tipo di valore o un tipo di riferimento</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Differences Between Modifiable and Nonmodifiable Arguments<ept id="p1">](./differences-between-modifiable-and-nonmodifiable-arguments.md)</ept> and <bpt id="p2">[</bpt>Differences Between Passing an Argument By Value and By Reference<ept id="p2">](./differences-between-passing-an-argument-by-value-and-by-reference.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>le differenze tra modificabile e non modificabili argomenti<ept id="p1">](./differences-between-modifiable-and-nonmodifiable-arguments.md)</ept> e <bpt id="p2">[</bpt>le differenze tra il passaggio di un argomento per valore e per riferimento<ept id="p2">](./differences-between-passing-an-argument-by-value-and-by-reference.md)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Choice of Passing Mechanism</source>
          <target state="translated">Meccanismo di passaggio</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You should choose the passing mechanism carefully for each argument.</source>
          <target state="translated">È consigliabile scegliere il meccanismo di passaggio attentamente per ogni argomento.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Protection<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Protezione<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In choosing between the two passing mechanisms, the most important criterion is the exposure of calling variables to change.</source>
          <target state="translated">Nella scelta tra i due meccanismi di passaggio, il criterio più importante è l'esposizione delle variabili chiamanti da modificare.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The advantage of passing an argument <ph id="ph1">`ByRef`</ph> is that the procedure can return a value to the calling code through that argument.</source>
          <target state="translated">Il vantaggio di passare un argomento <ph id="ph1">`ByRef`</ph> è che la procedura può restituire un valore per il codice chiamante tramite l'argomento.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The advantage of passing an argument <ph id="ph1">`ByVal`</ph> is that it protects a variable from being changed by the procedure.</source>
          <target state="translated">Il vantaggio di passare un argomento <ph id="ph1">`ByVal`</ph> è che esso impedisce che la variabile viene modificato dalla procedura.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Performance<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Prestazioni<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Although the passing mechanism can affect the performance of your code, the difference is usually insignificant.</source>
          <target state="translated">Sebbene il meccanismo di passaggio può influire sulle prestazioni del codice, la differenza è in genere irrilevante.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>One exception to this is a value type passed <ph id="ph1">`ByVal`</ph>.</source>
          <target state="translated">Unica eccezione è un tipo di valore passato <ph id="ph1">`ByVal`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In this case, <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> copies the entire data contents of the argument.</source>
          <target state="translated">In questo caso, <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> copia il contenuto di tutti i dati dell'argomento.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Therefore, for a large value type such as a structure, it can be more efficient to pass it <ph id="ph1">`ByRef`</ph>.</source>
          <target state="translated">Pertanto, per un tipo di valore di grandi dimensioni, ad esempio una struttura, può essere più efficiente passare <ph id="ph1">`ByRef`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For reference types, only the pointer to the data is copied (four bytes on 32-bit platforms, eight bytes on 64-bit platforms).</source>
          <target state="translated">Per i tipi di riferimento, solo il puntatore ai dati viene copiate (quattro byte in piattaforme a 32 bit, otto byte su piattaforme a 64 bit).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Therefore, you can pass arguments of type <ph id="ph1">`String`</ph> or <ph id="ph2">`Object`</ph> by value without harming performance.</source>
          <target state="translated">Pertanto, è possibile passare gli argomenti di tipo <ph id="ph1">`String`</ph> o <ph id="ph2">`Object`</ph> dal valore senza compromettere le prestazioni.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Determination of the Passing Mechanism</source>
          <target state="translated">Determinazione del meccanismo di passaggio</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The procedure declaration specifies the passing mechanism for each parameter.</source>
          <target state="translated">La dichiarazione della routine specifica il meccanismo di passaggio per ogni parametro.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The calling code can't override a <ph id="ph1">`ByVal`</ph> mechanism.</source>
          <target state="translated">Il codice chiamante non possono ignorare un <ph id="ph1">`ByVal`</ph> meccanismo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If a parameter is declared with <ph id="ph1">`ByRef`</ph>, the calling code can force the mechanism to <ph id="ph2">`ByVal`</ph> by enclosing the argument name in parentheses in the call.</source>
          <target state="translated">Se un parametro viene dichiarato con <ph id="ph1">`ByRef`</ph>, il codice chiamante può forzare il meccanismo <ph id="ph2">`ByVal`</ph> racchiudendo il nome dell'argomento tra parentesi nella chiamata.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Force an Argument to Be Passed by Value<ept id="p1">](./how-to-force-an-argument-to-be-passed-by-value.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>procedura: forzare un argomento sia passati per valore<ept id="p1">](./how-to-force-an-argument-to-be-passed-by-value.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The default in <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> is to pass arguments by value.</source>
          <target state="translated">Il valore predefinito in <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> gli argomenti vengono passati per valore.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>When to Pass an Argument by Value</source>
          <target state="translated">Quando passare un argomento per valore</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the calling code element underlying the argument is a nonmodifiable element, declare the corresponding parameter <bpt id="p1">[</bpt>ByVal<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byval.md)</ept>.</source>
          <target state="translated">Se l'elemento di codice chiamante sottostante all'argomento non è modificabile, dichiarare il parametro corrispondente <bpt id="p1">[</bpt>ByVal<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byval.md)</ept>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>No code can change the value of a nonmodifiable element.</source>
          <target state="translated">Codice non è possibile modificare il valore di un elemento non è modificabile.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If the underlying element is modifiable, but you do not want the procedure to be able to change its value, declare the parameter <ph id="ph1">`ByVal`</ph>.</source>
          <target state="translated">Se l'elemento sottostante è modificabile, ma non si desidera la procedura per essere in grado di modificare il relativo valore, dichiarare il parametro <ph id="ph1">`ByVal`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Only the calling code can change the value of a modifiable element passed by value.</source>
          <target state="translated">Solo il codice chiamante può modificare il valore di un elemento modificabile passato per valore.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When to Pass an Argument by Reference</source>
          <target state="translated">Quando un argomento venga passato per riferimento</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If the procedure has a genuine need to change the underlying element in the calling code, declare the corresponding parameter <bpt id="p1">[</bpt>ByRef<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept>.</source>
          <target state="translated">Se la procedura richiede la modifica dell'elemento sottostante nel codice chiamante, dichiarare il parametro corrispondente <bpt id="p1">[</bpt>ByRef<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If the correct execution of the code depends on the procedure changing the underlying element in the calling code, declare the parameter <ph id="ph1">`ByRef`</ph>.</source>
          <target state="translated">Se la corretta esecuzione del codice si basa sulla procedura di modifica dell'elemento nel codice chiamante, dichiarare il parametro <ph id="ph1">`ByRef`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If you pass it by value, or if the calling code overrides the <ph id="ph1">`ByRef`</ph> passing mechanism by enclosing the argument in parentheses, the procedure call might produce unexpected results.</source>
          <target state="translated">Se viene passato per valore o se il codice chiamante esegue l'override di <ph id="ph1">`ByRef`</ph> meccanismo di passaggio racchiudendo l'argomento tra parentesi, la chiamata di procedura potrebbe produrre risultati imprevisti.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Esempio</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descrizione</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The following example illustrates when to pass arguments by value and when to pass them by reference.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come passare gli argomenti per valore e quando passarli per riferimento.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Procedure <ph id="ph1">`Calculate`</ph> has both a <ph id="ph2">`ByVal`</ph> and a <ph id="ph3">`ByRef`</ph> parameter.</source>
          <target state="translated">Procedura <ph id="ph1">`Calculate`</ph> ha sia un <ph id="ph2">`ByVal`</ph> e <ph id="ph3">`ByRef`</ph> parametro.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Given an interest rate, <ph id="ph1">`rate`</ph>, and a sum of money, <ph id="ph2">`debt`</ph>, the task of the procedure is to calculate a new value for <ph id="ph3">`debt`</ph> that is the result of applying the interest rate to the original value of <ph id="ph4">`debt`</ph>.</source>
          <target state="translated">Dato un tasso di interesse, <ph id="ph1">`rate`</ph>e una somma di denaro, <ph id="ph2">`debt`</ph>, l'attività della procedura consiste nel calcolare un nuovo valore per <ph id="ph3">`debt`</ph> che rappresenta il risultato dell'applicazione il tasso di interesse per il valore originale di <ph id="ph4">`debt`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">`debt`</ph> is a <ph id="ph2">`ByRef`</ph> parameter, the new total is reflected in the value of the argument in the calling code that corresponds to <ph id="ph3">`debt`</ph>.</source>
          <target state="translated">Poiché <ph id="ph1">`debt`</ph> è un <ph id="ph2">`ByRef`</ph> parametro, il nuovo totale viene riflesso nel valore dell'argomento nel codice chiamante che corrisponde a <ph id="ph3">`debt`</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Parameter <ph id="ph1">`rate`</ph> is a <ph id="ph2">`ByVal`</ph> parameter because <ph id="ph3">`Calculate`</ph> should not change its value.</source>
          <target state="translated">Parametro <ph id="ph1">`rate`</ph> è un <ph id="ph2">`ByVal`</ph> parametro perché <ph id="ph3">`Calculate`</ph> non deve modificare il relativo valore.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">Codice</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#74<ept id="p2">](./codesnippet/VisualBasic/passing-arguments-by-value-and-by-reference_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#74;<ept id="p2">](./codesnippet/VisualBasic/passing-arguments-by-value-and-by-reference_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vedere anche</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Procedures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Procedure<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Parameters and Arguments<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Gli argomenti e parametri di routine<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Pass Arguments to a Procedure<ept id="p1">](./how-to-pass-arguments-to-a-procedure.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procedura: passare argomenti a una routine<ept id="p1">](./how-to-pass-arguments-to-a-procedure.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Change the Value of a Procedure Argument<ept id="p1">](./how-to-change-the-value-of-a-procedure-argument.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procedura: modificare il valore di un argomento di routine<ept id="p1">](./how-to-change-the-value-of-a-procedure-argument.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Protect a Procedure Argument Against Value Changes<ept id="p1">](./how-to-protect-a-procedure-argument-against-value-changes.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procedura: proteggere un argomento di routine modifica del valore<ept id="p1">](./how-to-protect-a-procedure-argument-against-value-changes.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Force an Argument to Be Passed by Value<ept id="p1">](./how-to-force-an-argument-to-be-passed-by-value.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procedura: forzare un argomento sia passati per valore<ept id="p1">](./how-to-force-an-argument-to-be-passed-by-value.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Passing Arguments by Position and by Name<ept id="p1">](./passing-arguments-by-position-and-by-name.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Passaggio di argomenti in base alla posizione e in base al nome<ept id="p1">](./passing-arguments-by-position-and-by-name.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Value Types and Reference Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Tipi valore e tipi di riferimento<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>