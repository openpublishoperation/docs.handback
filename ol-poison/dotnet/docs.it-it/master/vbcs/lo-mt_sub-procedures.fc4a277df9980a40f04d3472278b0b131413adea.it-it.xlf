<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d224fa3338ca707070ee431380578a8fdde47e07</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\procedures\sub-procedures.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92289ee0f1e0e4f2e2817ac61aaa137c5c974cfc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79bed87074bea072163a45e1c5c51a5e463e2db9</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_sub-procedures.fc4a277df9980a40f04d3472278b0b131413adea.it-it is different with handoff file name: sub-procedures.fc4a277df9980a40f04d3472278b0b131413adea.it-it.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Sub Procedures (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Sub (routine) (Visual Basic) | Documenti di Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Sub Procedures (Visual Basic)</source>
          <target state="translated">Routine Sub (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Sub`</ph> procedure is a series of <ph id="ph2">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> statements enclosed by the <ph id="ph3">`Sub`</ph> and <ph id="ph4">`End Sub`</ph> statements.</source>
          <target state="translated">Oggetto <ph id="ph1">`Sub`</ph> routine è una serie di <ph id="ph2">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> racchiuso tra istruzioni il <ph id="ph3">`Sub`</ph> e <ph id="ph4">`End Sub`</ph> istruzioni.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Sub`</ph> procedure performs a task and then returns control to the calling code, but it does not return a value to the calling code.</source>
          <target state="translated">Il <ph id="ph1">`Sub`</ph> routine esegue un'attività e quindi restituisce il controllo al codice chiamante, ma non restituisce un valore al codice chiamante.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Each time the procedure is called, its statements are executed, starting with the first executable statement after the <ph id="ph1">`Sub`</ph> statement and ending with the first <ph id="ph2">`End Sub`</ph>, <ph id="ph3">`Exit Sub`</ph>, or <ph id="ph4">`Return`</ph> statement encountered.</source>
          <target state="translated">Ogni volta che viene chiamata la routine, le relative istruzioni vengono eseguite a partire dalla prima istruzione eseguibile dopo il <ph id="ph1">`Sub`</ph> istruzione e terminando con il primo <ph id="ph2">`End Sub`</ph>, <ph id="ph3">`Exit Sub`</ph>, o <ph id="ph4">`Return`</ph> istruzione rilevata.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can define a <ph id="ph1">`Sub`</ph> procedure in modules, classes, and structures.</source>
          <target state="translated">È possibile definire un <ph id="ph1">`Sub`</ph> procedura in moduli, classi e strutture.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>By default, it is <ph id="ph1">`Public`</ph>, which means you can call it from anywhere in your application that has access to the module, class, or structure in which you defined it.</source>
          <target state="translated">Per impostazione predefinita è <ph id="ph1">`Public`</ph>, ovvero è possibile chiamarla da qualsiasi punto dell'applicazione che ha accesso al modulo, classe o struttura in cui è stata definita.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The term, <bpt id="p1">*</bpt>method<ept id="p1">*</ept>, describes a <ph id="ph1">`Sub`</ph> or <ph id="ph2">`Function`</ph> procedure that is accessed from outside its defining module, class, or structure.</source>
          <target state="translated">Il termine <bpt id="p1">*</bpt>metodo<ept id="p1">*</ept>, viene descritto un <ph id="ph1">`Sub`</ph> o <ph id="ph2">`Function`</ph> procedure accessibili dall'esterno la definizione di modulo, classe o struttura.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Procedures<ept id="p1">](./index.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>procedure<ept id="p1">](./index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Sub`</ph> procedure can take arguments, such as constants, variables, or expressions, which are passed to it by the calling code.</source>
          <target state="translated">Oggetto <ph id="ph1">`Sub`</ph> procedure può accettare argomenti, ad esempio costanti, variabili o espressioni, che vengono passate al metodo dal codice chiamante.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Declaration Syntax</source>
          <target state="translated">Sintassi di dichiarazione</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The syntax for declaring a <ph id="ph1">`Sub`</ph> procedure is as follows:</source>
          <target state="translated">La sintassi per dichiarare un <ph id="ph1">`Sub`</ph> è la seguente procedura:</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`[`</ph> <bpt id="p1">*</bpt>modifiers<ept id="p1">*</ept> <ph id="ph2">`] Sub`</ph>  <bpt id="p2">*</bpt>subname<ept id="p2">*</ept> <ph id="ph3">`[(`</ph> <bpt id="p3">*</bpt>parameterlist<ept id="p3">*</ept> <ph id="ph4">`)]`</ph></source>
          <target state="translated"><ph id="ph1">`[`</ph><bpt id="p1">*</bpt>modifiers<ept id="p1">*</ept> <ph id="ph2">`] Sub`</ph><bpt id="p2">*</bpt>subname<ept id="p2">*</ept> <ph id="ph3">`[(`</ph> <bpt id="p3">*</bpt>parameterlist<ept id="p3">*</ept>  <ph id="ph4">`)]`</ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`modifiers`</ph> can specify access level and information about overloading, overriding, sharing, and shadowing.</source>
          <target state="translated">Il <ph id="ph1">`modifiers`</ph> possibile specificare il livello di accesso e informazioni su overload, override, condivisione e shadowing.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Sub Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/sub-statement.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>Sub (istruzione)<ept id="p1">](../../../../visual-basic/language-reference/statements/sub-statement.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Parameter Declaration</source>
          <target state="translated">Dichiarazione di parametro</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You declare each procedure parameter similarly to how you declare a variable, specifying the parameter name and data type.</source>
          <target state="translated">Dichiarare ogni parametro di routine in modo analogo a come si dichiara una variabile, che specifica il tipo di dati e nome di parametro.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can also specify the passing mechanism, and whether the parameter is optional or a parameter array.</source>
          <target state="translated">È inoltre possibile specificare il meccanismo di passaggio e se il parametro è facoltativo o una matrice di parametri.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The syntax for each parameter in the parameter list is as follows:</source>
          <target state="translated">La sintassi per ogni parametro nell'elenco dei parametri è come segue:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`[Optional] [ByVal | ByRef] [ParamArray]`</ph>  <bpt id="p1">*</bpt>parametername<ept id="p1">*</ept>  <ph id="ph2">`As`</ph>  <bpt id="p2">*</bpt>datatype<ept id="p2">*</ept></source>
          <target state="translated"><ph id="ph1">`[Optional] [ByVal | ByRef] [ParamArray]`</ph>  <bpt id="p1">*</bpt>ParameterName<ept id="p1">*</ept><ph id="ph2">`As`</ph><bpt id="p2">*</bpt>tipo di dati    <ept id="p2">*</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If the parameter is optional, you must also supply a default value as part of its declaration.</source>
          <target state="translated">Se il parametro è facoltativo, è necessario fornire anche un valore predefinito come parte della relativa dichiarazione.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The syntax for specifying a default value is as follows:</source>
          <target state="translated">La sintassi per specificare un valore predefinito è come segue:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Optional [ByVal | ByRef]`</ph>  <bpt id="p1">*</bpt>parametername<ept id="p1">*</ept>  <ph id="ph2">`As`</ph>  <bpt id="p2">*</bpt>datatype<ept id="p2">*</ept>  <ph id="ph3">`=`</ph>  <bpt id="p3">*</bpt>defaultvalue<ept id="p3">*</ept></source>
          <target state="translated"><ph id="ph1">`Optional [ByVal | ByRef]`</ph>  <bpt id="p1">*</bpt>ParameterName<ept id="p1">*</ept><ph id="ph2">`As`</ph><bpt id="p2">*</bpt>datatype<ept id="p2">*</ept><ph id="ph3">`=`</ph><bpt id="p3">*</bpt>defaultvalue        <ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Parameters as Local Variables</source>
          <target state="translated">Parametri come variabili locali</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When control passes to the procedure, each parameter is treated as a local variable.</source>
          <target state="translated">Quando il controllo passa alla routine, ogni parametro viene trattato come una variabile locale.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This means that its lifetime is the same as that of the procedure, and its scope is the whole procedure.</source>
          <target state="translated">Ciò significa che la sua durata è uguale a quello della procedura e il relativo ambito è l'intera procedura.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Calling Syntax</source>
          <target state="translated">Sintassi di chiamata</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You invoke a <ph id="ph1">`Sub`</ph> procedure explicitly with a stand-alone calling statement.</source>
          <target state="translated">Richiamare un <ph id="ph1">`Sub`</ph> procedura in modo esplicito tramite un'istruzione di chiamata autonoma.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You cannot call it by using its name in an expression.</source>
          <target state="translated">È possibile effettuare la chiamata utilizzando il relativo nome in un'espressione.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You must provide values for all arguments that are not optional, and you must enclose the argument list in parentheses.</source>
          <target state="translated">È necessario fornire valori per tutti gli argomenti che non sono facoltativi e racchiudere l'elenco di argomenti racchiuso tra parentesi.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If no arguments are supplied, you can optionally omit the parentheses.</source>
          <target state="translated">Se viene fornito alcun argomento, è possibile omettere le parentesi.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The use of the <ph id="ph1">`Call`</ph> keyword is optional but not recommended.</source>
          <target state="translated">L'utilizzo di <ph id="ph1">`Call`</ph> (parola chiave) è facoltativo ma non consigliato.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The syntax for a call to a <ph id="ph1">`Sub`</ph> procedure is as follows:</source>
          <target state="translated">La sintassi per una chiamata a un <ph id="ph1">`Sub`</ph> è la seguente procedura:</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`[Call]`</ph>  <bpt id="p1">*</bpt>subname<ept id="p1">*</ept> <ph id="ph2">`[(`</ph> <bpt id="p2">*</bpt>argumentlist<ept id="p2">*</ept> <ph id="ph3">`)]`</ph></source>
          <target state="translated"><ph id="ph1">`[Call]`</ph>  <bpt id="p1">*</bpt>subname<ept id="p1">*</ept> <ph id="ph2">`[(`</ph> <bpt id="p2">*</bpt>argumentlist<ept id="p2">*</ept><ph id="ph3">`)]`</ph></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You can call a <ph id="ph1">`Sub`</ph> method from outside the class that defines it.</source>
          <target state="translated">È possibile chiamare un <ph id="ph1">`Sub`</ph> metodo dall'esterno della classe che lo definisce.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>First, you have to use the <ph id="ph1">`New`</ph> keyword to create an instance of the class, or call a method that returns an instance of the class.</source>
          <target state="translated">In primo luogo, è necessario utilizzare il <ph id="ph1">`New`</ph> (parola chiave) per creare un'istanza della classe o chiamare un metodo che restituisce un'istanza della classe.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>New Operator<ept id="p1">](../../../../visual-basic/language-reference/operators/new-operator.md)</ept>.</source>
          <target state="translated">Per ulteriori informazioni, vedere <bpt id="p1">[</bpt>nuovo operatore<ept id="p1">](../../../../visual-basic/language-reference/operators/new-operator.md)</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Then, you can use the following syntax to call the <ph id="ph1">`Sub`</ph> method on the instance object:</source>
          <target state="translated">Quindi, è possibile utilizzare la sintassi seguente per chiamare il <ph id="ph1">`Sub`</ph> metodo sull'oggetto dell'istanza:</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Object<ept id="p1">*</ept>.<bpt id="p2">*</bpt>methodname<ept id="p2">*</ept><ph id="ph1">`[(`</ph><bpt id="p3">*</bpt>argumentlist<ept id="p3">*</ept><ph id="ph2">`)]`</ph></source>
          <target state="translated"><bpt id="p1">*</bpt>Object<ept id="p1">*</ept>.<bpt id="p2">*</bpt> MethodName<ept id="p2">*</ept><ph id="ph1">`[(`</ph><bpt id="p3">*</bpt>argumentlist<ept id="p3">*</ept><ph id="ph2">`)]`</ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Illustration of Declaration and Call</source>
          <target state="translated">Illustrazione di dichiarazione e chiamata</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The following <ph id="ph1">`Sub`</ph> procedure tells the computer operator which task the application is about to perform, and also displays a time stamp.</source>
          <target state="translated">Nell'esempio <ph id="ph1">`Sub`</ph> procedure viene illustrato l'operatore computer quale attività l'applicazione sta per eseguire e visualizza un timestamp.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Instead of duplicating this code at the start of every task, the application just calls <ph id="ph1">`tellOperator`</ph> from various locations.</source>
          <target state="translated">Anziché ripetere questo codice all'inizio di ogni attività, l'applicazione chiama semplicemente <ph id="ph1">`tellOperator`</ph> da diverse posizioni.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Each call passes a string in the <ph id="ph1">`task`</ph> argument that identifies the task being started.</source>
          <target state="translated">Ogni chiamata passa una stringa di <ph id="ph1">`task`</ph> argomento che identifica l'attività in corso l'avvio.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#2<ept id="p2">](./codesnippet/VisualBasic/sub-procedures_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures n.&amp;2;<ept id="p2">](./codesnippet/VisualBasic/sub-procedures_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following example shows a typical call to <ph id="ph1">`tellOperator`</ph>.</source>
          <target state="translated">Nell'esempio seguente viene illustrata una tipica chiamata a <ph id="ph1">`tellOperator`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#3<ept id="p2">](./codesnippet/VisualBasic/sub-procedures_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures n.&amp;3;<ept id="p2">](./codesnippet/VisualBasic/sub-procedures_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vedere anche</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Procedures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Procedure<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Function Procedures<ept id="p1">](./function-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Routine di funzione<ept id="p1">](./function-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Property Procedures<ept id="p1">](./property-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Proprietà (routine)<ept id="p1">](./property-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operator Procedures<ept id="p1">](./operator-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Routine di operatore<ept id="p1">](./operator-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Parameters and Arguments<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Gli argomenti e parametri di routine<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Sub Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/sub-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Sub (istruzione)<ept id="p1">](../../../../visual-basic/language-reference/statements/sub-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Call a Procedure that Does Not Return a Value<ept id="p1">](./how-to-call-a-procedure-that-does-not-return-a-value.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procedura: chiamare una routine che non restituisce un valore<ept id="p1">](./how-to-call-a-procedure-that-does-not-return-a-value.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Call an Event Handler in Visual Basic<ept id="p1">](./how-to-call-an-event-handler.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procedura: chiamare un gestore eventi in Visual Basic<ept id="p1">](./how-to-call-an-event-handler.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>