<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="it-it">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6037d7ea17e260d44bae571aa25d413996f5a123</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\threading\thread-pooling.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">752ab8a32354efd3a876c9dda0b1223350a5dc96</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">323b018189df3ffdb291aadb2f112d1ab9a2adac</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_thread-pooling.df1322bff4457606e4aac415548bdb8d122e3038.it-it is different with handoff file name: thread-pooling.df1322bff4457606e4aac415548bdb8d122e3038.it-it.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Thread Pooling (Visual Basic) | Microsoft Docs</source>
          <target state="translated">(Visual Basic) di pooling dei thread | Documenti di Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Thread Pooling (Visual Basic)</source>
          <target state="translated">(Visual Basic) di pooling dei thread</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>thread pool<ept id="p1">*</ept> is a collection of threads that can be used to perform several tasks in the background.</source>
          <target state="translated">Oggetto <bpt id="p1">*</bpt>pool di thread<ept id="p1">*</ept> è una raccolta di thread che può essere utilizzato per eseguire diverse attività in background.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>(See <bpt id="p1">[</bpt>Threading (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/threading/index.md)</ept> for background information.) This leaves the primary thread free to perform other tasks asynchronously.</source>
          <target state="translated">(Vedere <bpt id="p1">[</bpt>Threading (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/threading/index.md)</ept> per le informazioni.) In questo modo il thread principale può eseguire altre attività in modo asincrono.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Thread pools are often employed in server applications.</source>
          <target state="translated">Pool di thread vengono spesso utilizzati nelle applicazioni server.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Each incoming request is assigned to a thread from the thread pool, so that the request can be processed asynchronously, without tying up the primary thread or delaying the processing of subsequent requests.</source>
          <target state="translated">Ogni richiesta in ingresso viene assegnato a un thread dal pool di thread, in modo che la richiesta può essere elaborata in modo asincrono, senza bloccare il thread principale o ritardare l'elaborazione delle richieste successive.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Once a thread in the pool completes its task, it is returned to a queue of waiting threads, where it can be reused.</source>
          <target state="translated">Una volta un thread nel pool di completamento dell'attività, viene restituito a una coda di thread in attesa, in cui può essere riutilizzato.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This reuse enables applications to avoid the cost of creating a new thread for each task.</source>
          <target state="translated">In questo modo le applicazioni evitare il costo di creazione di un nuovo thread per ogni attività.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Thread pools typically have a maximum number of threads.</source>
          <target state="translated">Pool di thread sono in genere un numero massimo di thread.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If all the threads are busy, additional tasks are put in queue until they can be serviced as threads become available.</source>
          <target state="translated">Se tutti i thread sono occupati, attività aggiuntive vengono inserite nella coda finché non può essere gestite come diventano disponibili thread.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You can implement your own thread pool, but it is easier to use the thread pool provided by the .NET Framework through the &lt;xref:System.Threading.ThreadPool&gt; class.</source>
          <target state="translated">È possibile implementare un pool di thread, ma è più semplice utilizzare il pool di thread fornito da .NET Framework tramite la &lt;xref:System.Threading.ThreadPool&gt;classe.&lt;/xref:System.Threading.ThreadPool&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>With thread pooling, you call the &lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=fullName&gt; method with a delegate for the procedure you want to run, and Visual Basic creates the thread and runs your procedure.</source>
          <target state="translated">Pool di thread, si chiama il &lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=fullName&gt;metodo con un delegato per la procedura da eseguire e Visual Basic viene creato il thread ed eseguita la procedura.&lt;/xref:System.Threading.ThreadPool.QueueUserWorkItem%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Thread Pooling Example</source>
          <target state="translated">Esempio di pooling dei thread</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following example shows how you can use thread pooling to start several tasks.</source>
          <target state="translated">Nell'esempio seguente viene illustrato come utilizzare pooling dei thread per avviare diverse attività.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>One advantage of thread pooling is that you can pass arguments in a state object to the task procedure.</source>
          <target state="translated">Un vantaggio del pool di thread consiste nel fatto che è possibile passare argomenti in un oggetto di stato per la routine dell'attività.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the procedure you are calling requires more than one argument, you can cast a structure or an instance of a class into an <ph id="ph1">`Object`</ph> data type.</source>
          <target state="translated">Se la procedura che si sta chiamando richiede più di un argomento, è possibile impostare una struttura o un'istanza di una classe in un <ph id="ph1">`Object`</ph> tipo di dati.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Thread Pool Parameters and Return Values</source>
          <target state="translated">Parametri del Pool di thread e i valori restituiti</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Returning values from a thread-pool thread is not straightforward.</source>
          <target state="translated">Restituzione di valori da un thread di pool di thread non è semplice.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The standard way of returning values from a function call is not allowed because <ph id="ph1">`Sub`</ph> procedures are the only type of procedure that can be queued to a thread pool.</source>
          <target state="translated">Il metodo standard per la restituzione di valori da una chiamata di funzione non è consentito perché <ph id="ph1">`Sub`</ph> procedure sono l'unico tipo di routine che può essere accodate al pool di thread.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>One way you can provide parameters and return values is by wrapping the parameters, return values, and methods in a wrapper class as described in <bpt id="p1">[</bpt>Parameters and Return Values for Multithreaded Procedures (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/threading/parameters-and-return-values-for-multithreaded-procedures.md)</ept>.</source>
          <target state="translated">Un modo per fornire parametri e restituire valori è incapsulando i parametri, i valori restituiti, e i metodi in un classe wrapper come descritto in <bpt id="p1">[</bpt>parametri e valori restituiti per routine multithreading (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/threading/parameters-and-return-values-for-multithreaded-procedures.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An easer way to provide parameters and return values is by using the optional <ph id="ph1">`ByVal`</ph> state object variable of the &lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt; method.</source>
          <target state="translated">Un modo di soluzione per fornire parametri e valori restituiti è tramite facoltativo <ph id="ph1">`ByVal`</ph> variabile oggetto di stato del &lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;(metodo).&lt;/xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If you use this variable to pass a reference to an instance of a class, the members of the instance can be modified by the thread-pool thread and used as return values.</source>
          <target state="translated">Se si utilizza questa variabile per passare un riferimento a un'istanza di una classe, i membri dell'istanza possono essere modificati dal thread del pool di thread e utilizzati come valori restituiti.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>At first it may not be obvious that you can modify an object referred to by a variable that is passed by value.</source>
          <target state="translated">Inizialmente potrebbe non essere evidente che è possibile modificare un oggetto a cui fa riferimento una variabile che viene passata per valore.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can do this because only the object reference is passed by value.</source>
          <target state="translated">È possibile farlo perché solo il riferimento all'oggetto viene passato per valore.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When you make changes to members of the object referred to by the object reference, the changes apply to the actual class instance.</source>
          <target state="translated">Quando si apportano modifiche ai membri dell'oggetto a cui fa riferimento il riferimento all'oggetto, le modifiche applicate all'istanza di classe effettiva.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Structures cannot be used to return values inside state objects.</source>
          <target state="translated">Le strutture non possono essere utilizzate per restituire i valori all'interno di oggetti di stato.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Because structures are value types, changes that the asynchronous process makes do not change the members of the original structure.</source>
          <target state="translated">Poiché le strutture sono tipi di valore, le modifiche apportate dal processo asincrono non modificano i membri della struttura originale.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Use structures to provide parameters when return values are not needed.</source>
          <target state="translated">Utilizzare le strutture per fornire parametri quando non sono necessari i valori restituiti.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Vedere anche</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;</source>
          <target state="translated">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;&lt;/xref:System.Threading.ThreadPool.QueueUserWorkItem%2A&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Threading&gt;</source>
          <target state="translated">&lt;xref:System.Threading&gt;&lt;/xref:System.Threading&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Threading.ThreadPool&gt;</source>
          <target state="translated">&lt;xref:System.Threading.ThreadPool&gt;&lt;/xref:System.Threading.ThreadPool&gt;</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Use a Thread Pool (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/threading/how-to-use-a-thread-pool.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Procedura: utilizzare un Pool di Thread (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/threading/how-to-use-a-thread-pool.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Threading (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/threading/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Threading (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/threading/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Multithreaded Applications (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/threading/multithreaded-applications.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Applicazioni multithreading (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/threading/multithreaded-applications.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Thread Synchronization (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/threading/thread-synchronization.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Sincronizzazione dei thread (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/threading/thread-synchronization.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>