<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ad585bd5475cf39aeae5dadc9ce3864c501a205</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\comparing.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d46b9488210d83bce57a95636e38e5bbcaeac9e1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e38260c2022fae2c9830d20fd6e648d4e819c0c0</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">file comparing.7bb48c2aba18ab4532ffa02b5642c8210a2c4d9e.ja-jp.xlf is out of handoff scope</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Comparing strings</source>
          <target state="translated">文字列の比較</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Comparing strings</source>
          <target state="translated">文字列の比較</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Comparing strings</source>
          <target state="translated">文字列の比較</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>.NET provides several methods to compare the values of strings.</source>
          <target state="translated">.NET は、文字列の値を比較するためのメソッドをいくつか提供します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The following table lists and describes the value-comparison methods.</source>
          <target state="translated">これらの値の比較メソッドとその説明を次の表に示します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Method name</source>
          <target state="translated">メソッド名</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">使用</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Compares the values of two strings.</source>
          <target state="translated">2 つの文字列の値を比較します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">整数値を返します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Compares two strings without regard to local culture.</source>
          <target state="translated">ローカル カルチャに関係なく、2 つの文字列を比較します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">整数値を返します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Compares the current string object to another string.</source>
          <target state="translated">現在の文字列オブジェクトを別の文字列と比較します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">整数値を返します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.StartsWith<ept id="p1">](xref:System.String.StartsWith(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.StartsWith<ept id="p1">](xref:System.String.StartsWith(System.String))</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Determines whether a string begins with the string passed.</source>
          <target state="translated">文字列が、渡された文字列で始まるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value.</source>
          <target state="translated">Boolean 値を返します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.EndsWith<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.EndsWith<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Determines whether a string ends with the string passed.</source>
          <target state="translated">文字列が、渡された文字列で終わるかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value.</source>
          <target state="translated">Boolean 値を返します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.Equals<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.Equals<ept id="p1">](xref:System.String.CompareTo(System.String))</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Determines whether two strings are the same.</source>
          <target state="translated">2 つの文字列が等しいかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value.</source>
          <target state="translated">Boolean 値を返します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.IndexOf<ept id="p1">](xref:System.String.IndexOf(System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.IndexOf<ept id="p1">](xref:System.String.IndexOf(System.Char))</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns the index position of a character or string, starting from the beginning of the string you are examining.</source>
          <target state="translated">検索対象文字列の先頭から開始して、特定の文字または文字列が見つかったインデックス位置を返します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">整数値を返します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>String.LastIndexOf<ept id="p1">](xref:System.String.LastIndexOf(System.Char))</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>String.LastIndexOf<ept id="p1">](xref:System.String.LastIndexOf(System.Char))</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns the index position of a character or string, starting from the end of the string you are examining.</source>
          <target state="translated">検索対象文字列の末尾から開始して、特定の文字または文字列が見つかったインデックス位置を返します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Returns an integer value.</source>
          <target state="translated">整数値を返します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Compare</source>
          <target state="translated">比較</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The static <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method provides a thorough way of comparing two strings.</source>
          <target state="translated">静的な <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> メソッドは、2 つの文字列を詳細に比較する手段を提供します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This method is culturally aware.</source>
          <target state="translated">このメソッドはカルチャに対応しています。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can use this function to compare two strings or substrings of two strings.</source>
          <target state="translated">この機能は、2 つの文字列、または 2 つの文字列の部分文字列を比較するために使用できます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Additionally, overloads are provided that regard or disregard case and cultural variance.</source>
          <target state="translated">また、大文字と小文字の区別やカルチャの違いを考慮または無視するためのオーバーロードも用意されています。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The following table shows the three integer values that this method might return.</source>
          <target state="translated">このメソッドによって返される可能性のある 3 つの整数値を次の表に示します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Return value</source>
          <target state="translated">戻り値</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Condition</source>
          <target state="translated">条件</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A negative integer</source>
          <target state="translated">負の整数</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The first string precedes the second string in the sort order, or the first string is <ph id="ph1">`null`</ph>.</source>
          <target state="translated">最初の文字列は、並べ替え順序が 2 番目の文字列の前に置かれます。そうでない場合、最初の文字列は <ph id="ph1">`null`</ph> です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The first string and the second string are equal, or both strings are <ph id="ph1">`null`</ph>.</source>
          <target state="translated">最初の文字列と 2 番目の文字列は等価です。そうでない場合、両方の文字列が <ph id="ph1">`null`</ph> です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A positive integer, or 1</source>
          <target state="translated">正の整数、または 1</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The first string follows the second string in the sort order, or the second string is null.</source>
          <target state="translated">最初の文字列は、並べ替え順序が 2 番目の文字列の後に続きます。そうでない場合、2 番目の文字列は null です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method is primarily intended for use when ordering or sorting strings.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> メソッドは、主に文字列の並べ替えに使用するものです。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>You should not use the <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method to test for equality (that is, to explicitly look for a return value of 0 with no regard for whether one string is less than or greater than the other).</source>
          <target state="translated">等価性をテストする (つまり、ある文字列が別の文字列より大きいか小さいかを問題にせずに戻り値 0 を明示的に検索する) 目的では、<bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> メソッドを使用しないでください。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Instead, to determine whether two strings are equal, use the <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept> method.</source>
          <target state="translated">2 つの文字列が等価かどうかを判断するには、<bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept> メソッドを使用してください。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following example uses the <bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method to determine the relative values of two strings.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.Compare<ept id="p1">](xref:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> メソッドを使用して、2 つの文字列の相対値を確認する例を次に示します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`-1`</ph> to the console.</source>
          <target state="translated">この例は、コンソールに <ph id="ph1">`-1`</ph> と出力します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>CompareOrdinal</source>
          <target state="translated">CompareOrdinal</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method compares two string objects without considering the local culture.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> メソッドは、ローカル カルチャを考慮せずに 2 つの文字列オブジェクトを比較します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The return values of this method are identical to the values returned by the <ph id="ph1">`Compare`</ph> method in the previous table.</source>
          <target state="translated">このメソッドの戻り値は、上の表で示した <ph id="ph1">`Compare`</ph> メソッドによって返される値と同じです。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method is primarily intended for use when ordering or sorting strings.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> メソッドは、主に文字列の並べ替えに使用するものです。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>You should not use the <bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> method to test for equality (that is, to explicitly look for a return value of 0 with no regard for whether one string is less than or greater than the other).</source>
          <target state="translated">等価性をテストする (つまり、ある文字列が別の文字列より大きいか小さいかを問題にせずに戻り値 0 を明示的に検索する) 目的では、<bpt id="p1">[</bpt>String.CompareOrdinal<ept id="p1">](xref:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32))</ept> メソッドを使用しないでください。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Instead, to determine whether two strings are equal, use the <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept> method.</source>
          <target state="translated">2 つの文字列が等価かどうかを判断するには、<bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept> メソッドを使用してください。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`CompareOrdinal`</ph> method to compare the values of two strings.</source>
          <target state="translated"><ph id="ph1">`CompareOrdinal`</ph> メソッドを使用して、2 つの文字列の値を比較する例を次に示します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`-32`</ph> to the console.</source>
          <target state="translated">この例は、コンソールに <ph id="ph1">`-32`</ph> と出力します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>CompareTo</source>
          <target state="translated">CompareTo</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method compares the string that the current string object encapsulates to another string or object.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> メソッドは、現在の文字列オブジェクトがカプセル化している文字列を別の文字列またはオブジェクトと比較します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The return values of this method are identical to the values returned by the <ph id="ph1">`String.Compare`</ph> method in the previous table.</source>
          <target state="translated">このメソッドの戻り値は、上の表で示した <ph id="ph1">`String.Compare`</ph> メソッドによって返される値と同じです。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method is primarily intended for use when ordering or sorting strings.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> メソッドは、主に文字列の並べ替えに使用するものです。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>You should not use the <bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method to test for equality (that is, to explicitly look for a return value of 0 with no regard for whether one string is less than or greater than the other).</source>
          <target state="translated">等価性をテストする (つまり、ある文字列が別の文字列より大きいか小さいかを問題にせずに戻り値 0 を明示的に検索する) 目的では、<bpt id="p1">[</bpt>String.CompareTo<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> メソッドを使用しないでください。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Instead, to determine whether two strings are equal, use the <bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept> method.</source>
          <target state="translated">2 つの文字列が等価かどうかを判断するには、<bpt id="p1">[</bpt>String.Equals(String, String, StringComparison)<ept id="p1">](xref:System.String.Equals(System.String,System.String,System.StringComparison))</ept> メソッドを使用してください。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`String.CompareTo`</ph> method to compare the <ph id="ph2">`string1`</ph> object to the <ph id="ph3">`string2`</ph> object.</source>
          <target state="translated"><ph id="ph1">`String.CompareTo`</ph> メソッドを使用して、<ph id="ph2">`string1`</ph> オブジェクトを <ph id="ph3">`string2`</ph> オブジェクトと比較する例を次に示します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`-1`</ph> to the console.</source>
          <target state="translated">この例は、コンソールに <ph id="ph1">`-1`</ph> と出力します。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="translated">次の値に等しい</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.Equals<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method can easily determine if two strings are the same.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.Equals<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> メソッドを使用すると、2 つの文字列が等しいかどうかを簡単に確認できます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This case-sensitive method returns a <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph> Boolean value.</source>
          <target state="translated">このメソッドは大文字と小文字を区別し、<ph id="ph1">`true`</ph> または <ph id="ph2">`false`</ph> の Boolean 値を返します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>It can be used from an existing class, as illustrated in the next example.</source>
          <target state="translated">このメソッドは、次の例に示すように、既存のクラスで使用できます。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`Equals`</ph> method to determine whether a string object contains the phrase "Hello World".</source>
          <target state="translated"><ph id="ph1">`Equals`</ph> メソッドを使用して、文字列オブジェクトに "Hello World" という語句が含まれているかどうかを確認する例を次に示します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`true`</ph> to the console.</source>
          <target state="translated">この例は、コンソールに <ph id="ph1">`true`</ph> と出力します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>This method can also be used as a static method.</source>
          <target state="translated">このメソッドは、静的メソッドとしても使用できます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The following example compares two string objects using a static method.</source>
          <target state="translated">静的メソッドを使用して、2 つの文字列オブジェクトを比較する例を次に示します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`true`</ph> to the console.</source>
          <target state="translated">この例は、コンソールに <ph id="ph1">`true`</ph> と出力します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>StartsWith and EndsWith</source>
          <target state="translated">StartsWith と EndsWith</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>String.StartsWith<ept id="p1">](xref:System.String.StartsWith(System.String))</ept> method to determine whether a string object begins with the same characters that encompass another string.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.StartsWith<ept id="p1">](xref:System.String.StartsWith(System.String))</ept> メソッドを使用すると、文字列オブジェクトが、別の文字列を構成している文字と同じ文字で始まっているかどうかを確認できます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This case-sensitive method returns <ph id="ph1">`true`</ph> if the current string object begins with the passed string and <ph id="ph2">`false`</ph> if it does not.</source>
          <target state="translated">このメソッドは大文字と小文字を区別し、現在の文字列オブジェクトが、渡された文字列で始まる場合は <ph id="ph1">`true`</ph>、それ以外の場合は <ph id="ph2">`false`</ph> を返します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The following example uses this method to determine if a string object begins with "Hello".</source>
          <target state="translated">このメソッドを使用して、文字列オブジェクトが "Hello" で始まるかどうかを確認する例を次に示します。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`true`</ph> to the console.</source>
          <target state="translated">この例は、コンソールに <ph id="ph1">`true`</ph> と出力します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.EndsWith<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> method compares a passed string to the characters that exist at the end of the current string object.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.EndsWith<ept id="p1">](xref:System.String.CompareTo(System.String))</ept> メソッドは、渡された文字列を現在の文字列オブジェクトの末尾にある文字列と比較します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>It also returns a Boolean value.</source>
          <target state="translated">このメソッドも Boolean 値を返します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The following example checks the end of a string using the <ph id="ph1">`EndsWith`</ph> method.</source>
          <target state="translated"><ph id="ph1">`EndsWith`</ph> メソッドを使用して、文字列の末尾を確認する例を次に示します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`false`</ph> to the console.</source>
          <target state="translated">この例は、コンソールに <ph id="ph1">`false`</ph> と出力します。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>IndexOf and LastIndexOf</source>
          <target state="translated">IndexOf と LastIndexOf</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>You can use the <bpt id="p1">[</bpt>String.IndexOf<ept id="p1">](xref:System.String.IndexOf(System.Char))</ept> method to determine the position of the first occurrence of a particular character within a string.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.IndexOf<ept id="p1">](xref:System.String.IndexOf(System.Char))</ept> メソッドを使用すると、特定の文字が文字列内で最初に出現する位置を確認できます。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>This case-sensitive method starts counting from the beginning of a string and returns the position of a passed character using a zero-based index.</source>
          <target state="translated">このメソッドは大文字と小文字を区別し、文字列の先頭からカウントを開始し、0 から始まるインデックスを使用して、渡された文字が出現する位置を返します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>If the character cannot be found, a value of –1 is returned.</source>
          <target state="translated">指定した文字が見つからない場合は、値 –1 を返します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`IndexOf`</ph> method to search for the first occurrence of the '<ph id="ph2">`l`</ph>' character in a string.</source>
          <target state="translated"><ph id="ph1">`IndexOf`</ph> メソッドを使用して、'<ph id="ph2">`l`</ph>' という文字が文字列内で最初に出現する位置を検索する例を次に示します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`2`</ph> to the console.</source>
          <target state="translated">この例は、コンソールに <ph id="ph1">`2`</ph> と出力します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>String.LastIndexOf<ept id="p1">](xref:System.String.LastIndexOf(System.Char))</ept> method is similar to the <ph id="ph1">`String.IndexOf`</ph> method except that it returns the position of the last occurrence of a particular character within a string.</source>
          <target state="translated"><bpt id="p1">[</bpt>String.LastIndexOf<ept id="p1">](xref:System.String.LastIndexOf(System.Char))</ept> メソッドは <ph id="ph1">`String.IndexOf`</ph> メソッドに似ていますが、指定した文字列が文字列内で最後に出現する位置を返すという点が異なります。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>It is case-sensitive and uses a zero-based index.</source>
          <target state="translated">このメソッドは大文字と小文字を区別し、0 から始まるインデックスを使用します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`LastIndexOf`</ph> method to search for the last occurrence of the '<ph id="ph2">`l`</ph>' character in a string.</source>
          <target state="translated"><ph id="ph1">`LastIndexOf`</ph> メソッドを使用して、'<ph id="ph2">`l`</ph>' という文字が文字列内で最後に出現する位置を検索する例を次に示します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This example displays <ph id="ph1">`9`</ph> to the console.</source>
          <target state="translated">この例は、コンソールに <ph id="ph1">`9`</ph> と出力します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Both methods are useful when used in conjunction with the <bpt id="p1">[</bpt>String.Remove<ept id="p1">](xref:System.String.Remove(System.Int32))</ept> method.</source>
          <target state="translated">いずれのメソッドも、<bpt id="p1">[</bpt>String.Remove<ept id="p1">](xref:System.String.Remove(System.Int32))</ept> メソッドと組み合わせて使用すると便利です。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>You can use either the <ph id="ph1">`IndexOf`</ph> or <ph id="ph2">`LastIndexOf`</ph> methods to retrieve the position of a character, and then supply that position to the <ph id="ph3">`Remove method`</ph> in order to remove a character or a word that begins with that character.</source>
          <target state="translated"><ph id="ph1">`IndexOf`</ph> メソッドまたは <ph id="ph2">`LastIndexOf`</ph> メソッドのいずれかを使用して文字の位置を取得し、その位置を <ph id="ph3">`Remove method`</ph> メソッドに渡すことによって、その文字またはその文字で始まる単語を削除できます。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Basic string operations<ept id="p1">](basic-string-operations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>基本的な文字列操作<ept id="p1">](basic-string-operations.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>