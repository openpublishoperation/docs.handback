<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dfc549dc84505185d29692750820a2682537858a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\misc\bc42004.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ccaa67ea00010911366cab0b139705155051ef8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5fc15e70fb2c5f6d2fe3224b330bcd892f3c6a8a</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_bc42004.43e4a919dd150733c8038eadaeadb20f47f48219.ja-jp is different with handoff file name: bc42004.43e4a919dd150733c8038eadaeadb20f47f48219.ja-jp.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Expression recursively calls containing Operator &amp;#39;<ph id="ph1">&amp;lt;</ph>operatorsymbol<ph id="ph2">&amp;gt;</ph>&amp;#39; | Microsoft Docs</source>
          <target state="translated">式を再帰的には、含まれる演算子を呼び出して '<ph id="ph1">&amp;lt;</ph>operatorsymbol<ph id="ph2">&amp;gt;</ph>' |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Expression recursively calls containing Operator &amp;#39;<ph id="ph1">&amp;lt;</ph>operatorsymbol<ph id="ph2">&amp;gt;</ph>&amp;#39;</source>
          <target state="translated">式を再帰的には、含まれる演算子を呼び出して '<ph id="ph1">&amp;lt;</ph>operatorsymbol<ph id="ph2">&amp;gt;</ph>'</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>An expression within an operator procedure uses the operator being defined.</source>
          <target state="translated">演算子プロシージャ内の式では、定義されている演算子を使用します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This results in the operator procedure calling itself because of the data types being used.</source>
          <target state="translated">つまり、使用するデータ型が原因で、演算子プロシージャはそれ自体を呼び出すことになります。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The operator procedure you are defining calls itself if it uses the same operator with any of the following:</source>
          <target state="translated">次のいずれかを指定して同じ演算子を使用する場合は、定義している演算子プロシージャはそれ自体を呼び出します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The same operands for which you are defining the operator;</source>
          <target state="translated">演算子を定義しているのと同じオペランド。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Operands of the same data types for which you are defining the operator; or</source>
          <target state="translated">演算子を定義しているのと同じデータ型のオペランド。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Operands of data types that widen to the data types for which you are defining the operator.</source>
          <target state="translated">演算子を定義しているデータ型に拡大変換するデータ型のオペランド。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>recursive call<ept id="p1">*</ept> is when a procedure calls itself.</source>
          <target state="translated"><bpt id="p1">*</bpt>再帰呼び出し<ept id="p1">*</ept> とは、プロシージャがそれ自体を呼び出すことを指します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Recursive calls can result in an <bpt id="p1">*</bpt>infinite loop<ept id="p1">*</ept>, in which control passes through the same set of statements repeatedly until your application is terminated externally.</source>
          <target state="translated">再帰呼び出しにより、 <bpt id="p1">*</bpt>無限ループ<ept id="p1">*</ept>が発生する可能性があります。この場合、アプリケーションが外部から終了されるまで、同じ一連のステートメントを制御が繰り返し通過します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If your code does not include one or more tests that can be used to terminate recursion, you risk an infinite loop.</source>
          <target state="translated">コードに再帰の終了に使用できる&amp;1; つ以上のテストが含まれていない場合は、無限ループが発生する危険性があります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>By default, this message is a warning.</source>
          <target state="translated">既定では、このメッセージは警告です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>For information on hiding warnings or treating warnings as errors, see <bpt id="p1">[</bpt>Configuring Warnings in Visual Basic<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/configuring-warnings-in-visual-basic)</ept>.</source>
          <target state="translated">警告を非表示にする方法や、警告をエラーとして扱う方法の詳細については、「 <bpt id="p1">[</bpt>Configuring Warnings in Visual Basic<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/configuring-warnings-in-visual-basic)</ept>」を参照してください。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Error ID:<ept id="p1">**</ept> BC42004</source>
          <target state="translated"><bpt id="p1">**</bpt>エラー ID:<ept id="p1">**</ept> BC42004</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>To correct this error</source>
          <target state="translated">このエラーを解決するには</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If your logic requires the operator procedure to call itself, then be sure you test for at least one condition that is certain to occur at some point, and use this test to terminate the recursive calls.</source>
          <target state="translated">ロジックで、演算子プロシージャにそれ自体を呼び出すよう要求する場合は、ある時点で確実に発生する少なくとも&amp;1; つの条件に対して必ずテストを行うようにして、このテストを使用して再帰呼び出しを終了します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If your logic does not require the operator procedure to call itself, then remove any recursive calls or replace them with statements that do not call their own procedure.</source>
          <target state="translated">ロジックで、演算子プロシージャにそれ自体を呼び出すよう要求しない場合は、再帰呼び出しを削除するか、独自のプロシージャを呼び出さないステートメントに置き換えます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operator Procedures<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>演算子プロシージャ<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operator Statement<ept id="p1">](../../visual-basic/language-reference/statements/operator-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Operator ステートメント<ept id="p1">](../../visual-basic/language-reference/statements/operator-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Define an Operator<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法: 演算子を定義<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/how-to-define-an-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Define a Conversion Operator<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/how-to-define-a-conversion-operator.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法 : 変換演算子を定義する<ept id="p1">](../../visual-basic/programming-guide/language-features/procedures/how-to-define-a-conversion-operator.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>