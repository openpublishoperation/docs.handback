<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c69b487322dc75ae8d54f42c1c62f8f5cc35757d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\control-flow\decision-structures.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6371dda25e94d9f6f4da57714a4f33b81d92a5d6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cac1619b85a26a94d6aebe727ad2f355a6d6b0fa</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_decision-structures.520fa1edca1e2b0bf07070c3de2f372dad8173a0.ja-jp is different with handoff file name: decision-structures.520fa1edca1e2b0bf07070c3de2f372dad8173a0.ja-jp.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Decision Structures (Visual Basic) | Microsoft Docs</source>
          <target state="translated">構造体 (Visual Basic) の意思決定 |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Decision Structures (Visual Basic)</source>
          <target state="translated">条件判断構造 (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> lets you test conditions and perform different operations depending on the results of that test.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>条件をテストし、そのテストの結果に応じて別の操作を実行することができます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can test for a condition being true or false, for various values of an expression, or for various exceptions generated when you execute a series of statements.</source>
          <target state="translated">True または false の場合、さまざまな値の式、または一連のステートメントを実行するときに生成された例外のさまざまな条件をテストできます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following illustration shows a decision structure that tests for a condition being true and takes different actions depending on whether it is true or false.</source>
          <target state="translated">次の図は、条件が真かをテストし、true または false であるかに基づいて異なる処理を実行する条件判断構造を示しています。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">![</bpt>Flow chart of an If...Then...Else construction<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/media/ifthenelse.gif "IfThenElse")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>If のフロー チャート.そうしたら。。。Else 構文<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/media/ifthenelse.gif "IfThenElse")</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Taking different actions when a condition is true and when it is false</source>
          <target state="translated">条件が true と false の場合は、異なる処理を実行</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If...Then...Else Construction</source>
          <target state="translated">もし。。。そうしたら。。。Else 構文</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`If...Then...Else`</ph> constructions let you test for one or more conditions and run one or more statements depending on each condition.</source>
          <target state="translated"><ph id="ph1">`If...Then...Else`</ph>構造では、1 つまたは複数の条件をテストして、各条件に応じて&amp;1; つまたは複数のステートメントを実行できます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can test conditions and take actions in the following ways:</source>
          <target state="translated">条件をテストし、次の方法で行うことができます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Run one or more statements if a condition is <ph id="ph1">`True`</ph></source>
          <target state="translated">条件の場合は、1 つまたは複数のステートメントを実行します。<ph id="ph1">`True`</ph></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Run one or more statements if a condition is <ph id="ph1">`False`</ph></source>
          <target state="translated">条件の場合は、1 つまたは複数のステートメントを実行します。<ph id="ph1">`False`</ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Run some statements if a condition is <ph id="ph1">`True`</ph> and others if it is <ph id="ph2">`False`</ph></source>
          <target state="translated">条件の場合は、いくつかのステートメントを実行<ph id="ph1">`True`</ph>およびその他のユーザーである場合<ph id="ph2">`False`</ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Test an additional condition if a prior condition is <ph id="ph1">`False`</ph></source>
          <target state="translated">前の条件の場合、追加的な条件をテストします。<ph id="ph1">`False`</ph></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The control structure that offers all these possibilities is the <bpt id="p1">[</bpt>If...Then...Else Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/if-then-else-statement.md)</ept>.</source>
          <target state="translated">これらすべての可能性を提供する制御構造体は、<bpt id="p1">[</bpt>場合.そうしたら。。。Else ステートメント<ept id="p1">](../../../../visual-basic/language-reference/statements/if-then-else-statement.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can use a single-line version if you have just one test and one statement to run.</source>
          <target state="translated">1 つのテストと&amp;1; つのステートメントを実行する必要がある場合は、単一行のバージョンを使用できます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If you have a more complex set of conditions and actions, you can use the multiple-line version.</source>
          <target state="translated">条件とアクションのより複雑なセットがある場合は、複数行のバージョンを使用することができます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Select...Case Construction</source>
          <target state="translated">選択してください。Case 構造</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Select...Case`</ph> construction lets you evaluate an expression one time and run different sets of statements based on different possible values.</source>
          <target state="translated"><ph id="ph1">`Select...Case`</ph>構築では、1 回式を評価し、異なる一連の別の使用可能な値に基づくステートメントを実行することができます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Select...Case Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/select-case-statement.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください<bpt id="p1">[</bpt>を選択しています.。Case ステートメント<ept id="p1">](../../../../visual-basic/language-reference/statements/select-case-statement.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Try...Catch...Finally Construction</source>
          <target state="translated">しようとしてください.キャッチしてください.最後に構築</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Try...Catch...Finally`</ph> constructions let you run a set of statements under an environment that retains control if any one of your statements causes an exception.</source>
          <target state="translated"><ph id="ph1">`Try...Catch...Finally`</ph>構造では、一連のステートメントのいずれかの例外が発生した場合は、コントロールを保持する環境の下のステートメントを実行できます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can take different actions for different exceptions.</source>
          <target state="translated">さまざまな例外のさまざまなアクションを実行できます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can optionally specify a block of code that runs before you exit the whole <ph id="ph1">`Try...Catch...Finally`</ph> construction, regardless of what occurs.</source>
          <target state="translated">全体を終了する前に実行されるコードのブロックを指定することもできます。<ph id="ph1">`Try...Catch...Finally`</ph>どうなるかに関係なく、構築します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Try...Catch...Finally Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください<bpt id="p1">[</bpt>しようとしています.。キャッチしてください.Finally ステートメント<ept id="p1">](../../../../visual-basic/language-reference/statements/try-catch-finally-statement.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>For many control structures, when you click a keyword, all of the keywords in the structure are highlighted.</source>
          <target state="translated">多くの制御構造のキーワードをクリックすると、すべての構造のキーワードが強調表示されます。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For instance, when you click <ph id="ph1">`If`</ph> in an <ph id="ph2">`If...Then...Else`</ph> construction, all instances of <ph id="ph3">`If`</ph>, <ph id="ph4">`Then`</ph>, <ph id="ph5">`ElseIf`</ph>, <ph id="ph6">`Else`</ph>, and <ph id="ph7">`End If`</ph> in the construction are highlighted.</source>
          <target state="translated">クリックすると、<ph id="ph1">`If`</ph>で、<ph id="ph2">`If...Then...Else`</ph>構築のすべてのインスタンス<ph id="ph3">`If`</ph>、 <ph id="ph4">`Then`</ph>、 <ph id="ph5">`ElseIf`</ph>、 <ph id="ph6">`Else`</ph>、および<ph id="ph7">`End If`</ph>構造で強調表示されます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To move to the next or previous highlighted keyword, press CTRL+SHIFT+DOWN ARROW or CTRL+SHIFT+UP ARROW.</source>
          <target state="translated">前または次の強調表示されているキーワードに移動するには、ctrl キーと shift キーを押しながら下方向キーまたは ctrl キーと shift キーを押しながら上方向をキーを押します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Control Flow<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>制御フロー<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Loop Structures<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/loop-structures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>ループ構造<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/loop-structures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Other Control Structures<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/other-control-structures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>他の制御構造<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/other-control-structures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Nested Control Structures<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/nested-control-structures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>入れ子になった制御構造<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/nested-control-structures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>If Operator<ept id="p1">](../../../../visual-basic/language-reference/operators/if-operator.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>If 演算子<ept id="p1">](../../../../visual-basic/language-reference/operators/if-operator.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>