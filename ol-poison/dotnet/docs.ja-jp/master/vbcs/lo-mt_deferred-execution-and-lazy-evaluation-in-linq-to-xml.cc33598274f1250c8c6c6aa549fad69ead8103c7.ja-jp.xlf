<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b7318eb9853d633d152b93fafcf9570ccd03835</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\deferred-execution-and-lazy-evaluation-in-linq-to-xml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">864e86df132186a54e683bc5a38fe0472099782b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a8b7a6b6d9e7930bbc7b5a43e4e0864a546b686f</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_deferred-execution-and-lazy-evaluation-in-linq-to-xml.cc33598274f1250c8c6c6aa549fad69ead8103c7.ja-jp is different with handoff file name: deferred-execution-and-lazy-evaluation-in-linq-to-xml.cc33598274f1250c8c6c6aa549fad69ead8103c7.ja-jp.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Deferred Execution and Lazy Evaluation in LINQ to XML (Visual Basic) | Microsoft Docs</source>
          <target state="translated">遅延実行とレイジー評価 linq to XML (Visual Basic) |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Deferred Execution and Lazy Evaluation in LINQ to XML (Visual Basic)</source>
          <target state="translated">遅延実行とレイジー評価 linq to XML (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Query and axis operations are often implemented to use deferred execution.</source>
          <target state="translated">クエリと軸の操作は、多くの場合、遅延実行を使用するように実装されています。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This topic explains the requirements and advantages of deferred execution, and some implementation considerations.</source>
          <target state="translated">このトピックでは、遅延実行の要件と利点、および実装に関する注意点について説明します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Deferred Execution</source>
          <target state="translated">遅延実行</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Deferred execution means that the evaluation of an expression is delayed until its <bpt id="p1">*</bpt>realized<ept id="p1">*</ept> value is actually required.</source>
          <target state="translated">遅延実行は、式の評価がまで遅延されることを意味の<bpt id="p1">*</bpt>実現<ept id="p1">*</ept>値が実際に必要です。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Deferred execution can greatly improve performance when you have to manipulate large data collections, especially in programs that contain a series of chained queries or manipulations.</source>
          <target state="translated">大きなデータ コレクションの操作が必要な場合、特に連結されたクエリや操作が含まれているプログラムでは、遅延実行によってパフォーマンスが大幅に向上することがあります。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In the best case, deferred execution enables only a single iteration through the source collection.</source>
          <target state="translated">最も効果的なケースでは、遅延実行を使用することによって、ソース コレクションの繰り返し処理を&amp;1; 度行うだけで済むようになります。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The LINQ technologies make extensive use of deferred execution in both the members of core &lt;xref:System.Linq?displayProperty=fullName&gt; classes and in the extension methods in the various LINQ namespaces, such as &lt;xref:System.Xml.Linq.Extensions?displayProperty=fullName&gt;.</source>
          <target state="translated">LINQ テクノロジでは、広く利用されて遅延実行の中核となるメンバーで&lt;xref:System.Linq?displayProperty=fullName&gt;クラスと、さまざまな LINQ 名前空間、 &lt;xref:System.Xml.Linq.Extensions?displayProperty=fullName&gt;.&lt;/xref:System.Xml.Linq.Extensions?displayProperty=fullName&gt;などの拡張メソッドで&lt;/xref:System.Linq?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Eager vs. Lazy Evaluation</source>
          <target state="translated">集中評価とレイジー評価</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When you write a method that implements deferred execution, you also have to decide whether to implement the method using lazy evaluation or eager evaluation.</source>
          <target state="translated">遅延実行を実装するメソッドを記述するときは、レイジー評価と集中評価のどちらを使用してメソッドを実装するかについても決定する必要があります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">*</bpt>lazy evaluation<ept id="p1">*</ept>, a single element of the source collection is processed during each call to the iterator.</source>
          <target state="translated"><bpt id="p1">*</bpt>レイジー評価<ept id="p1">*</ept>、反復子を呼び出すたびに、ソース コレクションの&amp;1; つの要素を処理します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This is the typical way in which iterators are implemented.</source>
          <target state="translated">これが、一般的な反復子の実装方法です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">*</bpt>eager evaluation<ept id="p1">*</ept>, the first call to the iterator will result in the entire collection being processed.</source>
          <target state="translated"><bpt id="p1">*</bpt>集中評価<ept id="p1">*</ept>、コレクション全体が処理中に、反復子の最初の呼び出しになります。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A temporary copy of the source collection might also be required.</source>
          <target state="translated">ソース コレクションの一時的なコピーが必要になる場合もあります。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, the &lt;xref:System.Linq.Enumerable.OrderBy%2A&gt; method has to sort the entire collection before it returns the first element.</source>
          <target state="translated">たとえば、&lt;xref:System.Linq.Enumerable.OrderBy%2A&gt;メソッドは、最初の要素を返す前に、コレクション全体を並べ替えるには&lt;/xref:System.Linq.Enumerable.OrderBy%2A&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Lazy evaluation usually yields better performance because it distributes overhead processing evenly throughout the evaluation of the collection and minimizes the use of temporary data.</source>
          <target state="translated">通常は、レイジー評価を使用するとパフォーマンスが向上します。コレクション評価時のオーバーヘッド処理が均等に分散され、一時データの使用が最小限に抑えられるためです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Of course, for some operations, there is no other option than to materialize intermediate results.</source>
          <target state="translated">もちろん、操作によっては、中間結果を具体化するより他に方法がない場合もあります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="translated">次の手順</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The next topic in this tutorial illustrates deferred execution:</source>
          <target state="translated">このチュートリアルの次のトピックでは、遅延実行について説明します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Deferred Execution Example (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/deferred-execution-example.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>遅延実行の例 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/deferred-execution-example.md)</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Tutorial: Deferred Execution (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/tutorial-deferred-execution.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>チュートリアル: 遅延実行 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/tutorial-deferred-execution.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Concepts and Terminology (Functional Transformation) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/concepts-and-terminology-functional-transformation.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>概念と用語 (関数型変換) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/concepts-and-terminology-functional-transformation.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Aggregation Operations (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/aggregation-operations.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>集計操作 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/aggregation-operations.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>