<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6e01ae91b9d5d875bb618993cd9eda82db59399</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\assemblies-gac\friend-assemblies.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aea05a541843c059778276654336ad8efc36b915</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">689fc82e2168bd08a376344086b01642311f327d</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_friend-assemblies.dd382620a351e41846ba759ca3a81b35c7418ccf.ja-jp is different with handoff file name: friend-assemblies.dd382620a351e41846ba759ca3a81b35c7418ccf.ja-jp.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Friend Assemblies (Visual Basic) | Microsoft Docs</source>
          <target state="translated">フレンド アセンブリ (Visual Basic) |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Friend Assemblies (Visual Basic)</source>
          <target state="translated">フレンド アセンブリ (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>friend assembly<ept id="p1">*</ept> is an assembly that can access another assembly's <bpt id="p2">[</bpt>Friend<ept id="p2">](../../../../visual-basic/language-reference/modifiers/friend.md)</ept> types and members.</source>
          <target state="translated">A<bpt id="p1">*</bpt>フレンド アセンブリ<ept id="p1">*</ept>別のアセンブリにアクセスできるアセンブリは、<bpt id="p2">[</bpt>フレンド<ept id="p2">](../../../../visual-basic/language-reference/modifiers/friend.md)</ept>型およびメンバーです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you identify an assembly as a friend assembly, you no longer have to mark types and members as public in order for them to be accessed by other assemblies.</source>
          <target state="translated">フレンド アセンブリとしてアセンブリを指定する場合は、不要になった型とメンバーをパブリックにするためには、他のアセンブリがアクセスできるマークする必要があります。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This is especially convenient in the following scenarios:</source>
          <target state="translated">これは、次のシナリオで特に便利です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>During unit testing, when test code runs in a separate assembly but requires access to members in the assembly being tested that are marked as <ph id="ph1">`Friend`</ph>.</source>
          <target state="translated">単体テストでの中にテスト コードで実行時に別のアセンブリ権限が必要ですとマークされているテスト対象のアセンブリ内のメンバーへのアクセス<ph id="ph1">`Friend`</ph>します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When you are developing a class library and additions to the library are contained in separate assemblies but require access to members in existing assemblies that are marked as <ph id="ph1">`Friend`</ph>.</source>
          <target state="translated">クラス ライブラリを開発しており、ライブラリへの追加は、別のアセンブリに含まれるとマークされている既存のアセンブリのメンバーにアクセスする必要<ph id="ph1">`Friend`</ph>します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">コメント</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can use the &lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt; attribute to identify one or more friend assemblies for a given assembly.</source>
          <target state="translated">使用することができます、&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;属性を特定のアセンブリの&amp;1; つまたは複数のフレンド アセンブリを指定します&lt;/xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt; attribute in assembly A and specifies assembly <ph id="ph1">`AssemblyB`</ph> as a friend assembly.</source>
          <target state="translated">次の例では、&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;アセンブリ A 内の属性し、アセンブリを指定<ph id="ph1">`AssemblyB`</ph>フレンド アセンブリとして&lt;/xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This gives assembly <ph id="ph1">`AssemblyB`</ph> access to all types and members in assembly A that are marked as <ph id="ph2">`Friend`</ph>.</source>
          <target state="translated">これにより、アセンブリ<ph id="ph1">`AssemblyB`</ph>すべての型およびメンバーとしてマークされているアセンブリへのアクセス<ph id="ph2">`Friend`</ph>します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you compile an assembly (assembly <ph id="ph1">`AssemblyB`</ph>) that will access internal types or internal members of another assembly (assembly <bpt id="p1">*</bpt>A<ept id="p1">*</ept>), you must explicitly specify the name of the output file (.exe or .dll) by using the <bpt id="p2">**</bpt>/out<ept id="p2">**</ept> compiler option.</source>
          <target state="translated">アセンブリをコンパイルする場合 (アセンブリ<ph id="ph1">`AssemblyB`</ph>) は内部型または別のアセンブリの内部メンバーにアクセスする (アセンブリ<bpt id="p1">*</bpt>A<ept id="p1">*</ept>) を使用して出力ファイル (.exe または .dll) の名前を明示的に指定する必要があります、 <bpt id="p2">**</bpt>/out<ept id="p2">**</ept>コンパイラ オプション。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</source>
          <target state="translated">コンパイラがバインド先の外部参照時に構築しているアセンブリの名前をまだ生成していないために必要です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>/out (Visual Basic)<ept id="p1">](../../../../visual-basic/reference/command-line-compiler/out.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>/out (Visual Basic)<ept id="p1">](../../../../visual-basic/reference/command-line-compiler/out.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Only assemblies that you explicitly specify as friends can access <ph id="ph1">`Friend`</ph> types and members.</source>
          <target state="translated">友人がアクセスできるように明示的に指定するアセンブリだけ<ph id="ph1">`Friend`</ph>型およびメンバーです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, if assembly B is a friend of assembly A and assembly C references assembly B, C does not have access to <ph id="ph1">`Friend`</ph> types in A.</source>
          <target state="translated">たとえば、アセンブリ B がアセンブリ A と C のアセンブリの参照アセンブリ B のフレンドである場合は、C がアクセスできないに<ph id="ph1">`Friend`</ph>A の種類</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The compiler performs some basic validation of the friend assembly name passed to the &lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt; attribute.</source>
          <target state="translated">コンパイラは渡されたフレンド アセンブリ名のいくつかの基本的な検証、実行、&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;属性&lt;/xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If assembly <bpt id="p1">*</bpt>A<ept id="p1">*</ept> declares <bpt id="p2">*</bpt>B<ept id="p2">*</ept> as a friend assembly, the validation rules are as follows:</source>
          <target state="translated">場合アセンブリ<bpt id="p1">*</bpt>A<ept id="p1">*</ept>宣言<bpt id="p2">*</bpt>B<ept id="p2">*</ept>フレンド アセンブリとして、検証規則は、次のようにします。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If assembly <bpt id="p1">*</bpt>A<ept id="p1">*</ept> is strong named, assembly <bpt id="p2">*</bpt>B<ept id="p2">*</ept> must also be strong named.</source>
          <target state="translated">場合アセンブリ<bpt id="p1">*</bpt>A<ept id="p1">*</ept>という名前のアセンブリに厳密な<bpt id="p2">*</bpt>B<ept id="p2">*</ept>厳密な名前もします。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The friend assembly name that is passed to the attribute must consist of the assembly name and the public key of the strong-name key that is used to sign assembly <bpt id="p1">*</bpt>B<ept id="p1">*</ept>.</source>
          <target state="translated">フレンド アセンブリ名、属性に渡される必要があります、アセンブリ名とアセンブリの署名に使用される厳密な名前キーの公開キーで構成されている<bpt id="p1">*</bpt>B<ept id="p1">*</ept>します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The friend assembly name that is passed to the &lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt; attribute cannot be the strong name of assembly <bpt id="p1">*</bpt>B<ept id="p1">*</ept>: do not include the assembly version, culture, architecture, or public key token.</source>
          <target state="translated">渡されるフレンド アセンブリ名、&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;属性がアセンブリの厳密な名前にすることはできません<bpt id="p1">*</bpt>B<ept id="p1">*</ept>: アセンブリのバージョン、カルチャ、アーキテクチャ、または公開キー トークンは含まれません&lt;/xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If assembly <bpt id="p1">*</bpt>A<ept id="p1">*</ept> is not strong named, the friend assembly name should consist of only the assembly name.</source>
          <target state="translated">場合アセンブリ<bpt id="p1">*</bpt>A<ept id="p1">*</ept>強力ではありませんという名前のフレンド アセンブリ名がアセンブリ名だけで構成する必要があります。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create Unsigned Friend Assemblies (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/how-to-create-unsigned-friend-assemblies.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>方法: 作成の署名のないフレンド アセンブリ (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/how-to-create-unsigned-friend-assemblies.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If assembly <bpt id="p1">*</bpt>B<ept id="p1">*</ept> is strong named, you must specify the strong-name key for assembly <bpt id="p2">*</bpt>B<ept id="p2">*</ept> by using the project setting or the command-line <ph id="ph1">`/keyfile`</ph> compiler option.</source>
          <target state="translated">場合アセンブリ<bpt id="p1">*</bpt>B<ept id="p1">*</ept>厳密な名前が、アセンブリの厳密な名前キーを指定する必要があります<bpt id="p2">*</bpt>B<ept id="p2">*</ept>プロジェクトの設定またはコマンドラインを使用して<ph id="ph1">`/keyfile`</ph>コンパイラ オプション。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create Signed Friend Assemblies (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/how-to-create-signed-friend-assemblies.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>方法: 署名されたフレンド アセンブリを作成する (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/how-to-create-signed-friend-assemblies.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt; class also provides the ability to share types, with the following differences:</source>
          <target state="translated">&lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt;クラスは、次の相違点の種類を共有する機能も提供します&lt;/xref:System.Security.Permissions.StrongNameIdentityPermission&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt; applies to an individual type, while a friend assembly applies to the whole assembly.</source>
          <target state="translated">&lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt;フレンド アセンブリがアセンブリ全体に適用中に、個々 の型に適用されます。&lt;/xref:System.Security.Permissions.StrongNameIdentityPermission&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If there are hundreds of types in assembly <bpt id="p1">*</bpt>A<ept id="p1">*</ept> that you want to share with assembly <bpt id="p2">*</bpt>B<ept id="p2">*</ept>, you have to add &lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt; to all of them.</source>
          <target state="translated">何百ものアセンブリ内の型がある場合<bpt id="p1">*</bpt>A<ept id="p1">*</ept>アセンブリを共有する<bpt id="p2">*</bpt>B<ept id="p2">*</ept>、追加する必要が&lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt;そのすべてを&lt;/xref:System.Security.Permissions.StrongNameIdentityPermission&gt;。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If you use a friend assembly, you only need to declare the friend relationship once.</source>
          <target state="translated">フレンド アセンブリを使用する場合のみ、フレンド関係を&amp;1; 回宣言する必要があります。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If you use &lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt;, the types you want to share have to be declared as public.</source>
          <target state="translated">使用する場合&lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt;、共有する型がパブリックとして宣言する必要がある&lt;/xref:System.Security.Permissions.StrongNameIdentityPermission&gt;。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you use a friend assembly, the shared types are declared as <ph id="ph1">`Friend`</ph>.</source>
          <target state="translated">として共有する型が宣言されたフレンド アセンブリを使用する場合<ph id="ph1">`Friend`</ph>します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For information about how to access an assembly's <ph id="ph1">`Friend`</ph> types and methods from a module file (a file with the .netmodule extension), see <bpt id="p1">[</bpt>/moduleassemblyname (Visual Basic)<ept id="p1">](../../../../visual-basic/reference/command-line-compiler/moduleassemblyname.md)</ept>.</source>
          <target state="translated">詳細については、アセンブリにアクセスする方法について<ph id="ph1">`Friend`</ph>型とモジュール ファイル (.netmodule 拡張子の付いたファイル) からメソッドを参照してください。 <bpt id="p1">[</bpt>/moduleassemblyname (Visual Basic)<ept id="p1">](../../../../visual-basic/reference/command-line-compiler/moduleassemblyname.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</source>
          <target state="translated">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;&lt;/xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt;</source>
          <target state="translated">&lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt;&lt;/xref:System.Security.Permissions.StrongNameIdentityPermission&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create Unsigned Friend Assemblies (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/how-to-create-unsigned-friend-assemblies.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法: 署名のないフレンド アセンブリ (Visual Basic) を作成します。<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/how-to-create-unsigned-friend-assemblies.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create Signed Friend Assemblies (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/how-to-create-signed-friend-assemblies.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法: 署名されたフレンド アセンブリ (Visual Basic) を作成します。<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/how-to-create-signed-friend-assemblies.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Assemblies and the Global Assembly Cache (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>アセンブリとグローバル アセンブリ キャッシュ (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Programming Concepts<ept id="p1">](../../../../visual-basic/programming-guide/concepts/index.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>プログラミングの概念<ept id="p1">](../../../../visual-basic/programming-guide/concepts/index.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>