<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">283b5e844c91da22aadd7bcf88ea327ccc080be7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\how-to-combine-linq-queries-with-regular-expressions.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">772a4d11309ccf853f83499f70bdffd7d33879e7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9c2125312724760ac23f82110524c6791b51ed1c</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_how-to-combine-linq-queries-with-regular-expressions.47c6d46d83464a9be837d6416c24bbe47a0e5654.ja-jp is different with handoff file name: how-to-combine-linq-queries-with-regular-expressions.47c6d46d83464a9be837d6416c24bbe47a0e5654.ja-jp.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Combine LINQ Queries with Regular Expressions (Visual Basic) | Microsoft Docs</source>
          <target state="translated">方法: LINQ クエリと正規表現 (Visual Basic) を組み合わせて |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Combine LINQ Queries with Regular Expressions (Visual Basic)</source>
          <target state="translated">方法: LINQ クエリは、正規表現 (Visual Basic) とを組み合わせる</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This example shows how to use the &lt;xref:System.Text.RegularExpressions.Regex&gt; class to create a regular expression for more complex matching in text strings.</source>
          <target state="translated">この例では、使用して、&lt;xref:System.Text.RegularExpressions.Regex&gt;のテキスト文字列にさらに複雑な一致する正規表現を作成するクラス&lt;/xref:System.Text.RegularExpressions.Regex&gt;。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The LINQ query makes it easy to filter on exactly the files that you want to search with the regular expression, and to shape the results.</source>
          <target state="translated">LINQ クエリでは、簡単に正規表現を検索して、結果の形式にファイルだけにフィルターします。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Note that you can also query the &lt;xref:System.Text.RegularExpressions.MatchCollection&gt; object that is returned by a <ph id="ph1">`RegEx`</ph> search.</source>
          <target state="translated">照会することもなお、&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;によって返されるオブジェクト、<ph id="ph1">`RegEx`</ph>検索&lt;/xref:System.Text.RegularExpressions.MatchCollection&gt;。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In this example only the value of each match is produced in the results.</source>
          <target state="translated">この例では、各一致文字列の値のみが結果として生成します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, it is also possible to use LINQ to perform all kinds of filtering, sorting, and grouping on that collection.</source>
          <target state="translated">ただし、LINQ を使用して、すべての種類のフィルター処理、並べ替え、およびそのコレクションにグループ化を実行することもできます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Because &lt;xref:System.Text.RegularExpressions.MatchCollection&gt; is a non-generic &lt;xref:System.Collections.IEnumerable&gt; collection, you have to explicitly state the type of the range variable in the query.</source>
          <target state="translated">&lt;xref:System.Text.RegularExpressions.MatchCollection&gt;非ジェネリック型&lt;xref:System.Collections.IEnumerable&gt;コレクション、クエリの範囲変数の型を明示的に記述する必要がある&lt;/xref:System.Collections.IEnumerable&gt;&lt;/xref:System.Text.RegularExpressions.MatchCollection&gt;。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
          <target state="translated">コードのコンパイル</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Create a project that targets the .NET Framework version 3.5 or higher with a reference to System.Core.dll and a <ph id="ph1">`Imports`</ph> statement for the System.Linq namespace.</source>
          <target state="translated">.NET Framework version 3.5 またはそれ以上、System.Core.dll への参照を対象とするプロジェクトを作成し、 <ph id="ph1">`Imports`</ph> System.Linq 名前空間のステートメントです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ and Strings (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-and-strings.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>LINQ と文字列 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-and-strings.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>LINQ and File Directories (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-and-file-directories.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>LINQ とファイル ディレクトリ (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-and-file-directories.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>