<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7487e4cde724c46a193639f2ad116d25e4ff834c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\procedures\how-to-get-a-value-from-a-property.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5fee6560f7f42662f2c5396e272fb366ee90aed4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">924ae702c40a1695046f42be4c648acbdc04ef2d</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_how-to-get-a-value-from-a-property.528767e95bbaacdf7b15de87354aa3dd6c96391e.ja-jp is different with handoff file name: how-to-get-a-value-from-a-property.528767e95bbaacdf7b15de87354aa3dd6c96391e.ja-jp.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Get a Value from a Property (Visual Basic) | Microsoft Docs</source>
          <target state="translated">方法: プロパティ (Visual Basic の場合) から値を取得 |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Get a Value from a Property (Visual Basic)</source>
          <target state="translated">方法: プロパティから値を取得する (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You retrieve a property's value by including the property name in an expression.</source>
          <target state="translated">プロパティの値を取得するには、式の中でプロパティ名を含めます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The property's <ph id="ph1">`Get`</ph> procedure retrieves the value, but you do not explicitly call it by name.</source>
          <target state="translated">プロパティの<ph id="ph1">`Get`</ph>プロシージャが値を取得が明示的に呼び出さないことを名前です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You use the property just as you would use a variable.</source>
          <target state="translated">変数と同じように、プロパティを使用します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> makes the calls to the property's procedures.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>プロパティのプロシージャを呼び出します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To retrieve a value from a property</source>
          <target state="translated">プロパティから値を取得するには</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Use the property name in an expression the same way you would use a variable name.</source>
          <target state="translated">式の中で変数名を使用すると同じように対応するプロパティ名を使用します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can use a property anywhere you can use a variable or a constant.</source>
          <target state="translated">プロパティを使用する変数または定数を使用する任意の場所。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>-or-</source>
          <target state="translated">または</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Use the property name following the equal (<ph id="ph1">`=`</ph>) sign in an assignment statement.</source>
          <target state="translated">後に続くプロパティ名を使用して (<ph id="ph1">`=`</ph>)、代入ステートメントにサインインします。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The following example reads the value of the <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> <ph id="ph2">`Now`</ph> property, implicitly calling its <ph id="ph3">`Get`</ph> procedure.</source>
          <target state="translated">次の例は、値を読み取って、 <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> <ph id="ph2">`Now`</ph>プロパティには、暗黙的に呼び出すことの<ph id="ph3">`Get`</ph>プロシージャです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDateProperties#4<ept id="p2">](./codesnippet/VisualBasic/how-to-get-a-value-from-a-property_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDateProperties&amp;4;<ept id="p2">](./codesnippet/VisualBasic/how-to-get-a-value-from-a-property_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If the property takes arguments, follow the property name with parentheses to enclose the argument list.</source>
          <target state="translated">プロパティは、引数を受け取る場合は、かっこで囲んだ引数リストのプロパティ名に従ってください。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If there are no arguments, you can optionally omit the parentheses.</source>
          <target state="translated">引数がない場合は、かっこを省略することができます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Place the arguments in the argument list within the parentheses, separated by commas.</source>
          <target state="translated">コンマで区切り、かっこで囲まれた引数のリストに、引数を配置します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Be sure you supply the arguments in the same order that the property defines the corresponding parameters.</source>
          <target state="translated">プロパティが対応するパラメーターを定義する順序と同じ順序で引数を指定することを確認します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The value of the property participates in the expression just as a variable or constant would, or it is stored in the variable or property on the left side of the assignment statement.</source>
          <target state="translated">プロパティの値が、式、変数と同様に参加する定数または変数または代入ステートメントの左側にあるプロパティに格納されます。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Procedures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>手順<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Property Procedures<ept id="p1">](./property-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>プロパティ プロシージャ<ept id="p1">](./property-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Parameters and Arguments<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>プロシージャのパラメーターと引数<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Property Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/property-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Property ステートメント<ept id="p1">](../../../../visual-basic/language-reference/statements/property-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Differences Between Properties and Variables in Visual Basic<ept id="p1">](./differences-between-properties-and-variables.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Visual Basic のプロパティと変数の違い<ept id="p1">](./differences-between-properties-and-variables.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create a Property<ept id="p1">](./how-to-create-a-property.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法: プロパティを作成します。<ept id="p1">](./how-to-create-a-property.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Declare a Property with Mixed Access Levels<ept id="p1">](./how-to-declare-a-property-with-mixed-access-levels.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法: 混合アクセス レベルを持つプロパティの宣言<ept id="p1">](./how-to-declare-a-property-with-mixed-access-levels.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Call a Property Procedure<ept id="p1">](./how-to-call-a-property-procedure.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法: プロパティ プロシージャを呼び出す<ept id="p1">](./how-to-call-a-property-procedure.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Declare and Call a Default Property in Visual Basic<ept id="p1">](./how-to-declare-and-call-a-default-property.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法: 宣言し、Visual Basic では、既定のプロパティを呼び出す<ept id="p1">](./how-to-declare-and-call-a-default-property.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Put a Value in a Property<ept id="p1">](./how-to-put-a-value-in-a-property.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法 : プロパティに値を格納する<ept id="p1">](./how-to-put-a-value-in-a-property.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>