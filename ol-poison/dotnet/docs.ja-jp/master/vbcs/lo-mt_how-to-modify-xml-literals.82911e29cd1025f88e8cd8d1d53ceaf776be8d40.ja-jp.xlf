<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ff2eba693862154d9c402748fb6797d10c4a1f8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\xml\how-to-modify-xml-literals.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b013940b18ed0f69c2e5325c7a2245bceb7d4cf5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e95ba81d1234d818a515f401fddfcfe71c50900a</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_how-to-modify-xml-literals.82911e29cd1025f88e8cd8d1d53ceaf776be8d40.ja-jp is different with handoff file name: how-to-modify-xml-literals.82911e29cd1025f88e8cd8d1d53ceaf776be8d40.ja-jp.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Modify XML Literals (Visual Basic) | Microsoft Docs</source>
          <target state="translated">方法: XML リテラル (Visual Basic) の変更 |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Modify XML Literals (Visual Basic)</source>
          <target state="translated">方法 : XML リテラルを変更する (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> provides convenient ways to modify XML literals.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>XML リテラルを変更する便利な手段を提供します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can add or delete elements and attributes, and you can also replace an existing element with a new XML element.</source>
          <target state="translated">リストにログインを追加したり、要素や属性を削除し、新しい XML 要素を持つ既存の要素を置換することもできます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This topic provides several examples of how to modify an existing XML literal.</source>
          <target state="translated">このトピックでは、既存の XML リテラルを変更する方法の例をいくつかを示します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To modify the value of an XML literal</source>
          <target state="translated">XML リテラルの値を変更するには</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>To modify the value of an XML literal, obtain a reference to the XML literal and set the <ph id="ph1">`Value`</ph> property to the desired value.</source>
          <target state="translated">XML リテラルの値を変更するには、XML リテラルと設定への参照を取得、<ph id="ph1">`Value`</ph>プロパティを目的の値にします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following code example updates the value of all the <ph id="ph1">\&lt;</ph>Price&gt; elements in an XML document.</source>
          <target state="translated">次のコード例は、すべての値を更新、<ph id="ph1">\&lt;</ph>価格 &gt; XML ドキュメント内の要素。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXmlSamples2#4<ept id="p2">](../../../../visual-basic/programming-guide/language-features/xml/codesnippet/VisualBasic/how-to-modify-xml-literals_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXmlSamples2&amp;4;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/xml/codesnippet/VisualBasic/how-to-modify-xml-literals_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following shows sample source XML and modified XML from this code example.</source>
          <target state="translated">次の XML のサンプルのソースを示していて、このコード例から XML を変更します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Value`</ph> property refers to the first XML element in a collection.</source>
          <target state="translated"><ph id="ph1">`Value`</ph>プロパティは、コレクション内の最初の XML 要素を参照します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If there is more than one element that has the same name in a collection, setting the <ph id="ph1">`Value`</ph> property affects only the first element in the collection.</source>
          <target state="translated">複数のコレクションで同じ名前を持つ要素がある場合は、設定、<ph id="ph1">`Value`</ph>プロパティは、コレクション内の最初の要素だけに影響します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>To add an attribute to an XML literal</source>
          <target state="translated">XML リテラルに属性を追加するには</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To add an attribute to an XML literal, first obtain a reference to the XML literal.</source>
          <target state="translated">XML リテラルに属性を追加するには、XML リテラルへの参照を最初に取得します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can then add an attribute by adding a new XML attribute axis property.</source>
          <target state="translated">新しい XML 属性軸プロパティを追加することで、属性を追加できます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can also add a new &lt;xref:System.Xml.Linq.XAttribute&gt; object to the XML literal by using the &lt;xref:System.Xml.Linq.XContainer.Add%2A&gt; method.</source>
          <target state="translated">追加することも、新しい&lt;xref:System.Xml.Linq.XAttribute&gt;オブジェクトを XML リテラルを使用して、&lt;xref:System.Xml.Linq.XContainer.Add%2A&gt;メソッド&lt;/xref:System.Xml.Linq.XContainer.Add%2A&gt;&lt;/xref:System.Xml.Linq.XAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following example shows both options.</source>
          <target state="translated">次の例では、両方のオプションを示します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXmlSamples2#5<ept id="p2">](../../../../visual-basic/programming-guide/language-features/xml/codesnippet/VisualBasic/how-to-modify-xml-literals_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXmlSamples&amp;#2;5<ept id="p2">](../../../../visual-basic/programming-guide/language-features/xml/codesnippet/VisualBasic/how-to-modify-xml-literals_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The following shows sample source XML and modified XML from this code example.</source>
          <target state="translated">次の XML のサンプルのソースを示していて、このコード例から XML を変更します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information about XML attribute axis properties, see <bpt id="p1">[</bpt>XML Attribute Axis Property<ept id="p1">](../../../../visual-basic/language-reference/xml-axis/xml-attribute-axis-property.md)</ept>.</source>
          <target state="translated">XML 属性軸プロパティの詳細については、次を参照してください。 <bpt id="p1">[</bpt>XML 属性軸プロパティ<ept id="p1">](../../../../visual-basic/language-reference/xml-axis/xml-attribute-axis-property.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To add an element to an XML literal</source>
          <target state="translated">XML リテラルに要素を追加するには</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To add an element to an XML literal, first obtain a reference to the XML literal.</source>
          <target state="translated">XML リテラルに要素を追加するには、XML リテラルへの参照を最初に取得します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can then add a new &lt;xref:System.Xml.Linq.XElement&gt; object as the last sub-element of the element by using the &lt;xref:System.Xml.Linq.XContainer.Add%2A&gt; method.</source>
          <target state="translated">新しく追加できます&lt;xref:System.Xml.Linq.XElement&gt;オブジェクトを使用して要素の最後のサブ要素として、&lt;xref:System.Xml.Linq.XContainer.Add%2A&gt;メソッド&lt;/xref:System.Xml.Linq.XContainer.Add%2A&gt;&lt;/xref:System.Xml.Linq.XElement&gt;。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>You can add a new &lt;xref:System.Xml.Linq.XElement&gt; object as the first sub-element by using the &lt;xref:System.Xml.Linq.XContainer.AddFirst%2A&gt; method.</source>
          <target state="translated">新しいを追加する&lt;xref:System.Xml.Linq.XElement&gt;オブジェクトを使用して最初のサブ要素として、&lt;xref:System.Xml.Linq.XContainer.AddFirst%2A&gt;メソッド&lt;/xref:System.Xml.Linq.XContainer.AddFirst%2A&gt;&lt;/xref:System.Xml.Linq.XElement&gt;。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>To add a new element in a specific location relative to other sub-elements, first obtain a reference to an adjacent sub-element.</source>
          <target state="translated">その他のサブ要素を基準とした特定の場所に新しい要素を追加するには、隣接するサブ要素への参照を最初に取得します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>You can then add the new &lt;xref:System.Xml.Linq.XElement&gt; object before the adjacent sub-element by using the &lt;xref:System.Xml.Linq.XNode.AddBeforeSelf%2A&gt; method.</source>
          <target state="translated">新しいできますし、追加&lt;xref:System.Xml.Linq.XElement&gt;オブジェクトを使用して、隣接するサブ要素の前に、&lt;xref:System.Xml.Linq.XNode.AddBeforeSelf%2A&gt;メソッド&lt;/xref:System.Xml.Linq.XNode.AddBeforeSelf%2A&gt;&lt;/xref:System.Xml.Linq.XElement&gt;。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You can also add the new &lt;xref:System.Xml.Linq.XElement&gt; object after the adjacent sub-element by using the &lt;xref:System.Xml.Linq.XNode.AddAfterSelf%2A&gt; method.</source>
          <target state="translated">追加することも、新しい&lt;xref:System.Xml.Linq.XElement&gt;オブジェクトを使用して、隣接するサブ要素の後に、&lt;xref:System.Xml.Linq.XNode.AddAfterSelf%2A&gt;メソッド&lt;/xref:System.Xml.Linq.XNode.AddAfterSelf%2A&gt;&lt;/xref:System.Xml.Linq.XElement&gt;。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The following example shows examples of each of these techniques.</source>
          <target state="translated">次の例では、これらの各手法の例を示します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXmlSamples2#6<ept id="p2">](../../../../visual-basic/programming-guide/language-features/xml/codesnippet/VisualBasic/how-to-modify-xml-literals_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXmlSamples2&amp;6;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/xml/codesnippet/VisualBasic/how-to-modify-xml-literals_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The following shows sample source XML and modified XML from this code example.</source>
          <target state="translated">次の XML のサンプルのソースを示していて、このコード例から XML を変更します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>To remove an element or attribute from an XML literal</source>
          <target state="translated">XML リテラルから要素または属性を削除するには</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>To remove an element or an attribute from an XML literal, obtain a reference to the element or attribute and call the <ph id="ph1">`Remove`</ph> method, as shown in the following example.</source>
          <target state="translated">XML リテラルから要素または属性を削除するには、要素または属性および呼び出しへの参照を取得、<ph id="ph1">`Remove`</ph>メソッドを次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXmlSamples2#7<ept id="p2">](../../../../visual-basic/programming-guide/language-features/xml/codesnippet/VisualBasic/how-to-modify-xml-literals_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXmlSamples&amp;#2;7<ept id="p2">](../../../../visual-basic/programming-guide/language-features/xml/codesnippet/VisualBasic/how-to-modify-xml-literals_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following shows sample source XML and modified XML from this code example.</source>
          <target state="translated">次の XML のサンプルのソースを示していて、このコード例から XML を変更します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>To remove all elements or attributes from an XML literal, obtain a reference to the XML literal and call the &lt;xref:System.Xml.Linq.XElement.RemoveAll%2A&gt; method.</source>
          <target state="translated">XML リテラルからすべての要素または属性を削除するには、XML リテラルへの参照を取得およびを呼び出す、&lt;xref:System.Xml.Linq.XElement.RemoveAll%2A&gt;メソッド&lt;/xref:System.Xml.Linq.XElement.RemoveAll%2A&gt;。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To modify an XML literal</source>
          <target state="translated">XML リテラルを変更するには</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>To change the name of an XML element, first obtain a reference to the element.</source>
          <target state="translated">XML 要素の名前を変更するには、まず要素への参照を取得します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>You can then create a new &lt;xref:System.Xml.Linq.XElement&gt; object that has a new name and pass the new &lt;xref:System.Xml.Linq.XElement&gt; object to the &lt;xref:System.Xml.Linq.XNode.ReplaceWith%2A&gt; method of the existing &lt;xref:System.Xml.Linq.XElement&gt; object.</source>
          <target state="translated">できますし、新規に作成する&lt;xref:System.Xml.Linq.XElement&gt;オブジェクトを持つ新しい名前を指定し、新しい渡す&lt;xref:System.Xml.Linq.XElement&gt;オブジェクトを&lt;xref:System.Xml.Linq.XNode.ReplaceWith%2A&gt;、既存のメソッド&lt;xref:System.Xml.Linq.XElement&gt;オブジェクト&lt;/xref:System.Xml.Linq.XElement&gt;&lt;/xref:System.Xml.Linq.XNode.ReplaceWith%2A&gt;&lt;/xref:System.Xml.Linq.XElement&gt;&lt;/xref:System.Xml.Linq.XElement&gt;。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If the element that you are replacing has sub-elements that must be preserved, set the value of the new &lt;xref:System.Xml.Linq.XElement&gt; object to the &lt;xref:System.Xml.Linq.XContainer.Nodes%2A&gt; property of the existing element.</source>
          <target state="translated">ものに交換する要素に保存する必要があるサブ要素がある場合は、新しい値を設定&lt;xref:System.Xml.Linq.XElement&gt;オブジェクトを&lt;xref:System.Xml.Linq.XContainer.Nodes%2A&gt;は既存の要素のプロパティ&lt;/xref:System.Xml.Linq.XContainer.Nodes%2A&gt;&lt;/xref:System.Xml.Linq.XElement&gt;。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This will set the value of the new element to the inner XML of the existing element.</source>
          <target state="translated">これにより、既存の要素の内部 XML を新しい要素の値が設定されます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Otherwise, you can set the value of the new element to the <ph id="ph1">`Value`</ph> property of the existing element.</source>
          <target state="translated">それ以外の場合に新しい要素の値を設定することができます、<ph id="ph1">`Value`</ph>は既存の要素のプロパティです。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The following code example replaces all <ph id="ph1">\&lt;</ph>Description&gt; elements with an <ph id="ph2">\&lt;</ph>Abstract&gt; element.</source>
          <target state="translated">次のコード例では、すべて置き換えられます<ph id="ph1">\&lt;</ph>説明 &gt; を持つ要素が<ph id="ph2">\&lt;</ph>抽象 &gt; 要素。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The content of the <ph id="ph1">\&lt;</ph>Description&gt; element is preserved in the new <ph id="ph2">\&lt;</ph>Abstract&gt; element by using the &lt;xref:System.Xml.Linq.XContainer.Nodes%2A&gt; property of the <ph id="ph3">\&lt;</ph>Description&gt; &lt;xref:System.Xml.Linq.XElement&gt; object.</source>
          <target state="translated">内容、<ph id="ph1">\&lt;</ph>説明 &gt; 要素は、新しい保持<ph id="ph2">\&lt;</ph>抽象 &gt; 要素を使用して、&lt;xref:System.Xml.Linq.XContainer.Nodes%2A&gt;のプロパティ、<ph id="ph3">\&lt;</ph>説明 &gt;&lt;xref:System.Xml.Linq.XElement&gt;オブジェクト&lt;/xref:System.Xml.Linq.XElement&gt;&lt;/xref:System.Xml.Linq.XContainer.Nodes%2A&gt;。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXmlSamples2#8<ept id="p2">](../../../../visual-basic/programming-guide/language-features/xml/codesnippet/VisualBasic/how-to-modify-xml-literals_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbXmlSamples&amp;#2;8<ept id="p2">](../../../../visual-basic/programming-guide/language-features/xml/codesnippet/VisualBasic/how-to-modify-xml-literals_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following shows sample source XML and modified XML from this code example.</source>
          <target state="translated">次の XML のサンプルのソースを示していて、このコード例から XML を変更します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Manipulating XML in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/manipulating-xml.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Visual Basic で XML を操作します。<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/manipulating-xml.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XML<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>XML<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Load XML from a File, String, or Stream<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/how-to-load-xml-from-a-file-string-or-stream.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法: ファイル、文字列またはストリームから XML を読み込む<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/how-to-load-xml-from-a-file-string-or-stream.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>LINQ<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>LINQ<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Introduction to LINQ in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Visual Basic における LINQ の概要<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>