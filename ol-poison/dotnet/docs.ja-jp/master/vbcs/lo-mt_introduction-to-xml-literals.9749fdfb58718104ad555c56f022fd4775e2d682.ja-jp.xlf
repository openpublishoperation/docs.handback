<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">391dd14f971f91d4d128841a7ebd24981266846a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\introduction-to-xml-literals.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9297ec9d0a9e9a60949ae2a4f2450725d8d75d7a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">376bbaff7061f7fa7dbfba60a368e67b1fdb4bdc</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_introduction-to-xml-literals.9749fdfb58718104ad555c56f022fd4775e2d682.ja-jp is different with handoff file name: introduction-to-xml-literals.9749fdfb58718104ad555c56f022fd4775e2d682.ja-jp.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Introduction to XML Literals in Visual Basic2 | Microsoft Docs</source>
          <target state="translated">Visual Basic2 内の XML リテラルの概要 |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Introduction to XML Literals in Visual Basic</source>
          <target state="translated">Visual Basic の XML リテラルの概要</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This section provides information about creating XML trees in <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</source>
          <target state="translated">ここでは、<ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> での XML ツリーの作成について説明します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For information about using the results of LINQ queries as the content for an XML tree, see <bpt id="p1">[</bpt>Functional Construction (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/functional-construction-linq-to-xml.md)</ept>.</source>
          <target state="translated">LINQ クエリの結果をコンテンツとして XML ツリーの使用方法の詳細については、次を参照してください。<bpt id="p1">[</bpt>関数型構築 (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/functional-construction-linq-to-xml.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information on XML literals in <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>, see <bpt id="p1">[</bpt>Overview of LINQ to XML in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/overview-of-linq-to-xml.md)</ept>.</source>
          <target state="translated">詳細については、XML リテラルの<ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>を参照してください<bpt id="p1">[</bpt>概要の LINQ to Visual Basic で XML<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/overview-of-linq-to-xml.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Creating XML Trees</source>
          <target state="translated">XML ツリーの作成</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The following example shows how to create an &lt;xref:System.Xml.Linq.XElement&gt;, in this case <ph id="ph1">`contacts`</ph>:</source>
          <target state="translated">次の例では、作成する方法、 &lt;xref:System.Xml.Linq.XElement&gt;、ここで<ph id="ph1">`contacts`</ph>:&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Creating an XElement with Simple Content</source>
          <target state="translated">単純コンテンツを持つ XElement の作成</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can create an &lt;xref:System.Xml.Linq.XElement&gt; that contains simple content, as follows:</source>
          <target state="translated">作成することができます、&lt;xref:System.Xml.Linq.XElement&gt;次のように、単純コンテンツを含む:&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creating an Empty Element</source>
          <target state="translated">空要素の作成</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can create an empty &lt;xref:System.Xml.Linq.XElement&gt;, as follows:</source>
          <target state="translated">空を作成する&lt;xref:System.Xml.Linq.XElement&gt;、次のように:&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Using Embedded Expressions</source>
          <target state="translated">組み込み式の使用</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An important feature of XML literals is that they allow embedded expressions.</source>
          <target state="translated">XML リテラルの重要な機能は、組み込み式を利用できることです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Embedded expressions enable you to evaluate an expression and insert the results of the expression into the XML tree.</source>
          <target state="translated">組み込み式を使用すると、式を評価してその式の結果を XML ツリーに挿入できます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to a type of &lt;xref:System.Xml.Linq.XElement&gt;, an element is inserted into the tree.</source>
          <target state="translated">型に式が評価された場合に&lt;xref:System.Xml.Linq.XElement&gt;、要素がツリーに挿入します&lt;/xref:System.Xml.Linq.XElement&gt;。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If the expression evaluates to a type of &lt;xref:System.Xml.Linq.XAttribute&gt;, an attribute is inserted into the tree.</source>
          <target state="translated">型に式が評価された場合に&lt;xref:System.Xml.Linq.XAttribute&gt;、属性がツリーに挿入します&lt;/xref:System.Xml.Linq.XAttribute&gt;。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can insert elements and attributes into the tree only where they are valid.</source>
          <target state="translated">要素および属性は、それらが有効となるツリーにのみ挿入できます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>It is important to note that only a single expression can go into an embedded expression.</source>
          <target state="translated">組み込み式に含めることができるのは&amp;1; つの式だけであることに注意してください。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You cannot embed multiple statements.</source>
          <target state="translated">複数のステートメントを組み込むことはできません。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If an expression extends beyond a single line, you must use the line continuation character.</source>
          <target state="translated">式が複数の行にまたがる場合は、行連結文字を使用する必要があります。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If you use an embedded expression to add existing nodes (including elements) and attributes to a new XML tree and if the existing nodes are already parented, the nodes are cloned.</source>
          <target state="translated">組み込み式を使用して既存のノード (要素を含む) や属性を新しい XML ツリーに追加する場合に、その既存のノードに既に親があるときは、ノードが複製されます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The newly cloned nodes are attached to the new XML tree.</source>
          <target state="translated">新しく複製されたノードは、新しい XML ツリーにアタッチされます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If the existing nodes are not parented, the nodes are simply attached to the new XML tree.</source>
          <target state="translated">既存のノードに親がない場合は、単にノードが新しい XML ツリーにアタッチされます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The last example in this topic demonstrates this.</source>
          <target state="translated">このトピックの最後の例では、この動作について説明します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following example uses an embedded expression to insert an element into the tree:</source>
          <target state="translated">次の例では、組み込み式を使用して要素をツリーに挿入します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Using Embedded Expressions for Content</source>
          <target state="translated">コンテンツに対する組み込み式の使用</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You can use an embedded expression to supply the content of an element:</source>
          <target state="translated">組み込み式を使用して要素のコンテンツを指定できます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Using a LINQ Query in an Embedded Expression</source>
          <target state="translated">組み込み式での LINQ クエリの使用</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You can use the results of a LINQ query for the content of an element:</source>
          <target state="translated">要素のコンテンツに対する LINQ クエリの結果を使用できます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Using Embedded Expressions for Node Names</source>
          <target state="translated">ノード名に対する組み込み式の使用</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>You can also use embedded expressions to calculate attribute names, attribute values, element names, and element values:</source>
          <target state="translated">組み込み式を使用して、属性名、属性値、要素名、および要素値を計算することもできます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Cloning vs. Attaching</source>
          <target state="translated">複製とアタッチ</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>As mentioned earlier, if you use an embedded expression to add existing nodes (including elements) and attributes to a new XML tree, if the existing nodes are already parented, the nodes are cloned and the newly cloned nodes are attached to the new XML tree.</source>
          <target state="translated">既に説明したとおり、組み込み式を使用して既存のノード (要素を含む) や属性を新しい XML ツリーに追加する場合に、その既存のノードに既に親があるときは、ノードが複製され、新しく複製されたノードが新しい XML ツリーにアタッチされます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If the existing nodes are not parented, they are simply attached to the new XML tree.</source>
          <target state="translated">既存のノードに親がない場合は、単にノードが新しい XML ツリーにアタッチされます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">この例を実行すると、次の出力が生成されます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Creating XML Trees (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/creating-xml-trees.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>XML ツリー (Visual Basic) の作成<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/creating-xml-trees.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>