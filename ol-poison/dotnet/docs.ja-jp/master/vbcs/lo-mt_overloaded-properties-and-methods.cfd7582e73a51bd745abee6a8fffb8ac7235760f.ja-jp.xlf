<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6f379f04ca9b75161baf2bf2c33e87f05a9edf97</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\objects-and-classes\overloaded-properties-and-methods.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7372d14666a9f448544c3f05b39733c2c698a618</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39771ef46075923244bb87287c8116e4335d650e</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_overloaded-properties-and-methods.cfd7582e73a51bd745abee6a8fffb8ac7235760f.ja-jp is different with handoff file name: overloaded-properties-and-methods.cfd7582e73a51bd745abee6a8fffb8ac7235760f.ja-jp.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Overloaded Properties and Methods (Visual Basic) | Microsoft Docs</source>
          <target state="translated">オーバー ロードされたプロパティとメソッド (Visual Basic) |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Overloaded Properties and Methods (Visual Basic)</source>
          <target state="translated">オーバーロードされたプロパティとメソッド (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Overloading is the creation of more than one procedure, instance constructor, or property in a class with the same name but different argument types.</source>
          <target state="translated">オーバー ロードは、1 つ以上のプロシージャ、インスタンス コンス トラクターで異なる引数の型が同じ名前のクラスのプロパティの作成です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overloading Usage</source>
          <target state="translated">使用率をオーバー ロード</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Overloading is especially useful when your object model dictates that you employ identical names for procedures that operate on different data types.</source>
          <target state="translated">オーバー ロードは、オブジェクト モデルで、別のデータ型を操作するプロシージャに同じ名前を使用しているときに便利です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For example, a class that can display several different data types could have <ph id="ph1">`Display`</ph> procedures that look like this:</source>
          <target state="translated">たとえば、複数のデータ型を表示できるクラスがある<ph id="ph1">`Display`</ph>次のようにプロシージャ。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#64<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/overloaded-properties-and-methods_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;64;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/overloaded-properties-and-methods_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Without overloading, you would need to create distinct names for each procedure, even though they do the same thing, as shown next:</source>
          <target state="translated">せず、オーバー ロードどおり、次に示すように、同じ場合でも各プロシージャの種類の名前を作成する必要は。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#65<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/overloaded-properties-and-methods_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;65;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/overloaded-properties-and-methods_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Overloading makes it easier to use properties or methods because it provides a choice of data types that can be used.</source>
          <target state="translated">オーバー ロードすると、使用できるデータ型の選択肢を提供するために、プロパティまたはメソッドを使用しやすきます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, the overloaded <ph id="ph1">`Display`</ph> method discussed previously can be called with any of the following lines of code:</source>
          <target state="translated">たとえば、オーバー ロードされた<ph id="ph1">`Display`</ph>説明以前メソッドで次のコード行のいずれか。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#66<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/overloaded-properties-and-methods_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;66;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/overloaded-properties-and-methods_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>At run time, <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> calls the correct procedure based on the data types of the parameters you specify.</source>
          <target state="translated">実行時に<ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>するパラメーターのデータ型に基づき適切なプロシージャの呼び出しを指定します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Overloading Rules</source>
          <target state="translated">オーバー ロードの規則</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You create an overloaded member for a class by adding two or more properties or methods with the same name.</source>
          <target state="translated">クラスのオーバー ロードされたメンバーを作成するには、2 つ以上のプロパティまたは同じ名前を持つメソッドを追加します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Except for overloaded derived members, each overloaded member must have different parameter lists, and the following items cannot be used as a differentiating feature when overloading a property or procedure:</source>
          <target state="translated">オーバー ロードの派生メンバーを除く各オーバー ロードされたメンバーは、異なるパラメーター リストを持つ必要があり、次の項目は、プロパティまたはプロシージャをオーバー ロードとの差別化機能として使用できません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Modifiers, such as <ph id="ph1">`ByVal`</ph> or <ph id="ph2">`ByRef`</ph>, that apply to a member, or parameters of the member.</source>
          <target state="translated">修飾子など<ph id="ph1">`ByVal`</ph>または<ph id="ph2">`ByRef`</ph>メンバー、またはメンバーのパラメーターに適用されています。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Names of parameters</source>
          <target state="translated">パラメーターの名前</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Return types of procedures</source>
          <target state="translated">プロシージャの戻り値の型</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Overloads`</ph> keyword is optional when overloading, but if any overloaded member uses the <ph id="ph2">`Overloads`</ph> keyword, then all other overloaded members with the same name must also specify this keyword.</source>
          <target state="translated"><ph id="ph1">`Overloads`</ph> 、オーバー ロードとは、キーワードは任意ですが、メンバーを使用していずれかのオーバー ロードされた場合、<ph id="ph2">`Overloads`</ph>このキーワードはキーワード、その他のすべてのオーバー ロードされたメンバーと同じ名前で指定もする必要があります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Derived classes can overload inherited members with members that have identical parameters and parameter types, a process known as <bpt id="p1">*</bpt>shadowing by name and signature<ept id="p1">*</ept>.</source>
          <target state="translated">派生クラスで継承されたメンバーを同一パラメーターとパラメーターの型と呼ばれるプロセスを持つメンバーとオーバー ロードできます<bpt id="p1">*</bpt>名前とシグネチャによるシャドウ<ept id="p1">*</ept>します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`Overloads`</ph> keyword is used when shadowing by name and signature, the derived class's implementation of the member will be used instead of the implementation in the base class, and all other overloads for that member will be available to instances of the derived class.</source>
          <target state="translated">場合、<ph id="ph1">`Overloads`</ph>名前とシグネチャによるシャドウ、メンバーの派生クラスの実装される基本クラスの実装ではなくとそのメンバーの他のすべてのオーバー ロードは、派生クラスのインスタンスに表示される場合に、キーワードを使用します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`Overloads`</ph> keyword is omitted when overloading an inherited member with a member that has identical parameters and parameter types, then the overloading is called <bpt id="p1">*</bpt>shadowing by name<ept id="p1">*</ept>.</source>
          <target state="translated">場合、<ph id="ph1">`Overloads`</ph>キーワードを省略して、継承されたメンバーと同じパラメーターとパラメーターの型を持つメンバーを持つオーバー ロードし、オーバー ロードが呼び出されます<bpt id="p1">*</bpt>名前によるシャドウ<ept id="p1">*</ept>します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Shadowing by name replaces the inherited implementation of a member, and it makes all other overloads unavailable to instances of the derived class and its decedents.</source>
          <target state="translated">継承されたメンバーの実装を置き換える名前によるシャドウおよびその他のすべてのオーバー ロードを置き換わります、派生クラスのインスタンスを使用できなくなります。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Overloads`</ph> and <ph id="ph2">`Shadows`</ph> modifiers cannot both be used with the same property or method.</source>
          <target state="translated"><ph id="ph1">`Overloads`</ph>と<ph id="ph2">`Shadows`</ph>修飾子両方では使用できません同じプロパティまたはメソッドです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following example creates overloaded methods that accept either a <ph id="ph1">`String`</ph> or <ph id="ph2">`Decimal`</ph> representation of a dollar amount and return a string containing the sales tax.</source>
          <target state="translated">次の例では、いずれかを受け取るオーバー ロードされたメソッド、<ph id="ph1">`String`</ph>または<ph id="ph2">`Decimal`</ph>形式の金額と売上税が含まれている文字列を返します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>To use this example to create an overloaded method</source>
          <target state="translated">この例を使用して、オーバー ロードされたメソッドを作成するには</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Open a new project and add a class named <ph id="ph1">`TaxClass`</ph>.</source>
          <target state="translated">新しいプロジェクトを開き、という名前のクラスを追加<ph id="ph1">`TaxClass`</ph>します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Add the following code to the <ph id="ph1">`TaxClass`</ph> class.</source>
          <target state="translated"><ph id="ph1">`TaxClass`</ph> クラスに次のコードを追加します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#67<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/overloaded-properties-and-methods_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;67;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/overloaded-properties-and-methods_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Add the following procedure to your form.</source>
          <target state="translated">フォームに次の手順を追加します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#68<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/overloaded-properties-and-methods_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;68;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/overloaded-properties-and-methods_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Add a button to your form and call the <ph id="ph1">`ShowTax`</ph> procedure from the <ph id="ph2">`Button1_Click`</ph> event of the button.</source>
          <target state="translated">呼び出し、フォームにボタンを追加、<ph id="ph1">`ShowTax`</ph>プロシージャから、<ph id="ph2">`Button1_Click`</ph>ボタンのイベントです。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Run the project and click the button on the form to test the overloaded <ph id="ph1">`ShowTax`</ph> procedure.</source>
          <target state="translated">プロジェクトを実行し、オーバー ロードされたをテストするフォーム上のボタンをクリックして<ph id="ph1">`ShowTax`</ph>プロシージャです。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>At run time, the compiler chooses the appropriate overloaded function that matches the parameters being used.</source>
          <target state="translated">実行時に、コンパイラは、使用されているパラメーターに一致する適切なオーバー ロードされた関数を選択します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When you click the button, the overloaded method is called first with a <ph id="ph1">`Price`</ph> parameter that is a string and the message, "Price is a String.</source>
          <target state="translated">ボタンをクリックすると、オーバー ロードされたメソッドが呼び出された最初、<ph id="ph1">`Price`</ph>パラメーターを文字列と、メッセージは、"価格は、文字列です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Tax is $5.12" is displayed.</source>
          <target state="translated">税金が $$5.12"が表示されます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`TaxAmount`</ph> is called with a <ph id="ph2">`Decimal`</ph> value the second time and the message, "Price is a Decimal.</source>
          <target state="translated"><ph id="ph1">`TaxAmount`</ph>呼び出された、<ph id="ph2">`Decimal`</ph>値&amp;2; 回目と、メッセージ、"価格は&amp;10; 進数です。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Tax is $5.12" is displayed.</source>
          <target state="translated">税金が $$5.12"が表示されます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Objects and Classes<ept id="p1">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>クラスとオブジェクト<ept id="p1">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Shadowing in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/shadowing.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Visual Basic におけるシャドウ<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/shadowing.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Sub Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/sub-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Sub ステートメント<ept id="p1">](../../../../visual-basic/language-reference/statements/sub-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Inheritance Basics<ept id="p1">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>継承の基本<ept id="p1">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Shadows<ept id="p1">](../../../../visual-basic/language-reference/modifiers/shadows.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>シャドウ<ept id="p1">](../../../../visual-basic/language-reference/modifiers/shadows.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ByVal<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byval.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>ByVal<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byval.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>ByRef<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>ByRef<ept id="p1">](../../../../visual-basic/language-reference/modifiers/byref.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Overloads<ept id="p1">](../../../../visual-basic/language-reference/modifiers/overloads.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>オーバー ロード<ept id="p1">](../../../../visual-basic/language-reference/modifiers/overloads.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Shadows<ept id="p1">](../../../../visual-basic/language-reference/modifiers/shadows.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Shadows<ept id="p1">](../../../../visual-basic/language-reference/modifiers/shadows.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>