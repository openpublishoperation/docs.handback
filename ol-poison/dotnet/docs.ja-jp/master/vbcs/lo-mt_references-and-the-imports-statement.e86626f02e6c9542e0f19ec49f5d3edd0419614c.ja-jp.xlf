<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">283a27e7703b31a9aeed8f7e4104e89b7ff78525</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\program-structure\references-and-the-imports-statement.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">41cc3a67da4899eeeb69f2febb409f267322f6ea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">abae93876060d733c73e625f0be4b5e7e2f8a7b0</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_references-and-the-imports-statement.e86626f02e6c9542e0f19ec49f5d3edd0419614c.ja-jp is different with handoff file name: references-and-the-imports-statement.e86626f02e6c9542e0f19ec49f5d3edd0419614c.ja-jp.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>References and the Imports Statement (Visual Basic) | Microsoft Docs</source>
          <target state="translated">参照と Imports ステートメント (Visual Basic) |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>References and the Imports Statement (Visual Basic)</source>
          <target state="translated">参照と Imports ステートメント (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can make external objects available to your project by choosing the <bpt id="p1">**</bpt>Add Reference<ept id="p1">**</ept> command on the <bpt id="p2">**</bpt>Project<ept id="p2">**</ept> menu.</source>
          <target state="translated">利用できる外部のオブジェクトをプロジェクトを選択して、<bpt id="p1">**</bpt>参照の追加<ept id="p1">**</ept>コマンドを<bpt id="p2">**</bpt>プロジェクト<ept id="p2">**</ept>メニュー。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>References in <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> can point to assemblies, which are like type libraries but contain more information.</source>
          <target state="translated">参照<ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>アセンブリでは、タイプ ライブラリの詳細に説明のようなものを指すことができます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The Imports Statement</source>
          <target state="translated">Imports ステートメント</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Assemblies include one or more namespaces.</source>
          <target state="translated">アセンブリには、1 つ以上の名前空間が含まれています。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When you add a reference to an assembly, you can also add an <ph id="ph1">`Imports`</ph> statement to a module that controls the visibility of that assembly's namespaces within the module.</source>
          <target state="translated">アセンブリへの参照を追加するときに追加することも、<ph id="ph1">`Imports`</ph>ステートメント、モジュール内でそのアセンブリの名前空間の表示を制御するモジュールにします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Imports`</ph> statement provides a scoping context that lets you use only the portion of the namespace necessary to supply a unique reference.</source>
          <target state="translated"><ph id="ph1">`Imports`</ph>ステートメントができるように一意の参照を指定するために必要な名前空間の部分のみを使用するスコープのコンテキストを提供します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Imports`</ph> statement has the following syntax:</source>
          <target state="translated"><ph id="ph1">`Imports`</ph>ステートメントでは、次の構文。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Imports`</ph> [<ph id="ph2">`|``Aliasname`</ph> =] <ph id="ph3">`Namespace`</ph></source>
          <target state="translated"><ph id="ph1">`Imports`</ph> [<ph id="ph2">`|``Aliasname`</ph> =] <ph id="ph3">`Namespace`</ph></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Aliasname`</ph> refers to a short name you can use within code to refer to an imported namespace.</source>
          <target state="translated"><ph id="ph1">`Aliasname`</ph>インポートされた名前空間を参照するコード内で使用できる短い名前を参照します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Namespace`</ph> is a namespace available through either a project reference, through a definition within the project, or through a previous <ph id="ph2">`Imports`</ph> statement.</source>
          <target state="translated"><ph id="ph1">`Namespace`</ph>いずれかで利用可能な名前空間、プロジェクト内の定義、または以前を通じて、プロジェクトの参照は、<ph id="ph2">`Imports`</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A module may contain any number of <ph id="ph1">`Imports`</ph> statements.</source>
          <target state="translated">モジュールは、任意の数を含めることがあります<ph id="ph1">`Imports`</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>They must appear after any <ph id="ph1">`Option`</ph> statements, if present, but before any other code.</source>
          <target state="translated">いずれかの後に現れる必要があります<ph id="ph1">`Option`</ph>存在する場合、ステートメントが、その他のコードよりも前に、です。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Do not confuse project references with the <ph id="ph1">`Imports`</ph> statement or the <ph id="ph2">`Declare`</ph> statement.</source>
          <target state="translated">プロジェクト参照とを混同しないでください、<ph id="ph1">`Imports`</ph>ステートメント、または<ph id="ph2">`Declare`</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Project references make external objects, such as objects in assemblies, available to <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> projects.</source>
          <target state="translated">プロジェクト参照を指定するように、アセンブリ内のオブジェクトなど、外部のオブジェクトは使用できる<ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>プロジェクトです。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Imports`</ph> statement is used to simplify access to project references, but does not provide access to these objects.</source>
          <target state="translated"><ph id="ph1">`Imports`</ph>ステートメントは、プロジェクト参照へのアクセスを簡略化されますが、これらのオブジェクトへのアクセスを提供しません。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Declare`</ph> statement is used to declare a reference to an external procedure in a dynamic-link library (DLL).</source>
          <target state="translated"><ph id="ph1">`Declare`</ph>ダイナミック リンク ライブラリ (DLL) で外部プロシージャへの参照を宣言するステートメントを使用します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Using Aliases with the Imports Statement</source>
          <target state="translated">Imports ステートメントを使用してエイリアスを使用します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Imports`</ph> statement makes it easier to access methods of classes by eliminating the need to explicitly type the fully qualified names of references.</source>
          <target state="translated"><ph id="ph1">`Imports`</ph>ステートメントをやすくクラスのアクセス方法によって明示的に参照の完全修飾名を入力する必要はありません。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Aliases let you assign a friendlier name to just one part of a namespace.</source>
          <target state="translated">エイリアスを使用する名前空間の一部に過ぎませんをわかりやすい名前を割り当てることができます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For example, the carriage return/line feed sequence that causes a single piece of text to be displayed on multiple lines is part of the &lt;xref:Microsoft.VisualBasic.ControlChars&gt; module in the &lt;xref:Microsoft.VisualBasic?displayProperty=fullName&gt; namespace.</source>
          <target state="translated">などの一部は、復帰/改行に複数の行に表示されるテキストの&amp;1; つの原因となるシーケンス、&lt;xref:Microsoft.VisualBasic.ControlChars&gt;のモジュール、&lt;xref:Microsoft.VisualBasic?displayProperty=fullName&gt;名前空間&lt;/xref:Microsoft.VisualBasic?displayProperty=fullName&gt;&lt;/xref:Microsoft.VisualBasic.ControlChars&gt;。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To use this constant in a program without an alias, you would need to type the following code:</source>
          <target state="translated">この定数を使用して、エイリアスを使わずにプログラムには、次のコードを入力する必要があります。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrApplication#3<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/references-and-the-imports-statement_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrApplication&amp;#3;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/references-and-the-imports-statement_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Imports`</ph> statements must always be the first lines immediately following any <ph id="ph2">`Option`</ph> statements in a module.</source>
          <target state="translated"><ph id="ph1">`Imports`</ph>ステートメントはすぐに次のいずれかの最初の行に常にあります<ph id="ph2">`Option`</ph>モジュール内のステートメントです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The following code fragment shows how to import and assign an alias to the &lt;xref:Microsoft.VisualBasic.ControlChars?displayProperty=fullName&gt; module:</source>
          <target state="translated">次のコード フラグメントをインポートしてのエイリアスを割り当てる方法を示しています、&lt;xref:Microsoft.VisualBasic.ControlChars?displayProperty=fullName&gt;モジュール:&lt;/xref:Microsoft.VisualBasic.ControlChars?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrApplication#4<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/references-and-the-imports-statement_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrApplication&amp;4;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/references-and-the-imports-statement_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Future references to this namespace can be considerably shorter:</source>
          <target state="translated">この名前空間への今後の参照が大幅に短くなります。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrApplication#5<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/references-and-the-imports-statement_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrApplication&amp;#5;<ept id="p2">](../../../visual-basic/programming-guide/program-structure/codesnippet/VisualBasic/references-and-the-imports-statement_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If an <ph id="ph1">`Imports`</ph> statement does not include an alias name, elements defined within the imported namespace can be used in the module without qualification.</source>
          <target state="translated">場合、<ph id="ph1">`Imports`</ph>ステートメントにエイリアス名を含まない、インポートされた名前空間内で定義されている要素を修飾なしのモジュールで使用できます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If the alias name is specified, it must be used as a qualifier for names contained within that namespace.</source>
          <target state="translated">エイリアス名が指定されている場合は、その名前空間内に含まれる名前の修飾子として使用するあります。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>&lt;xref:Microsoft.VisualBasic.ControlChars&gt;</source>
          <target state="translated">&lt;xref:Microsoft.VisualBasic.ControlChars&gt;&lt;/xref:Microsoft.VisualBasic.ControlChars&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>&lt;xref:Microsoft.VisualBasic&gt;</source>
          <target state="translated">&lt;xref:Microsoft.VisualBasic&gt;&lt;/xref:Microsoft.VisualBasic&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>NIB How to: Add or Remove References By Using the Add Reference Dialog Box<ept id="p1">](http://msdn.microsoft.com/en-us/3bd75d61-f00c-47c0-86a2-dd1f20e231c9)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>NIB 方法: [参照の追加] ダイアログ ボックスを使用して参照を追加または削除する<ept id="p1">](http://msdn.microsoft.com/en-us/3bd75d61-f00c-47c0-86a2-dd1f20e231c9)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Namespaces in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/program-structure/namespaces.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Visual Basic における名前空間<ept id="p1">](../../../visual-basic/programming-guide/program-structure/namespaces.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Assemblies and the Global Assembly Cache<ept id="p1">](../../../visual-basic/programming-guide/concepts/assemblies-gac/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>アセンブリとグローバル アセンブリ キャッシュ<ept id="p1">](../../../visual-basic/programming-guide/concepts/assemblies-gac/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create and Use Assemblies Using the Command Line<ept id="p1">](http://msdn.microsoft.com/library/70f65026-3687-4e9c-ab79-c18b97dd8be4)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法: を作成し、コマンドラインを使用してアセンブリを使用します。<ept id="p1">](http://msdn.microsoft.com/library/70f65026-3687-4e9c-ab79-c18b97dd8be4)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Imports Statement (.NET Namespace and Type)<ept id="p1">](../../../visual-basic/language-reference/statements/imports-statement-net-namespace-and-type.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Imports ステートメント (.NET 名前空間および型)<ept id="p1">](../../../visual-basic/language-reference/statements/imports-statement-net-namespace-and-type.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>