<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c0152250cf7cfb4b6cadbcaab60eaad8ec2fb5ee</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\scope-of-default-namespaces.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d4ca5abad58428dcb40d29c87de58f4688319d8e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fabdb13ef6f6677d28925b26b73f6d6668c4ccbf</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_scope-of-default-namespaces.bbe615d6a1af71c8998e58874fd299f06171307a.ja-jp is different with handoff file name: scope-of-default-namespaces.bbe615d6a1af71c8998e58874fd299f06171307a.ja-jp.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Scope of Default Namespaces in Visual Basic | Microsoft Docs</source>
          <target state="translated">Visual Basic での既定の名前空間のスコープ |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Scope of Default Namespaces in Visual Basic</source>
          <target state="translated">Visual Basic での既定の名前空間のスコープ</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Default namespaces as represented in the XML tree are not in scope for queries.</source>
          <target state="translated">XML ツリーで表される既定の名前空間は、クエリのスコープ内にありません。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you have XML that is in a default namespace, you still must declare an &lt;xref:System.Xml.Linq.XNamespace&gt; variable, and combine it with the local name to make a qualified name to be used in the query.</source>
          <target state="translated">かどうかは、既定の名前空間に含まれる XML がある、まだ宣言する必要あります、&lt;xref:System.Xml.Linq.XNamespace&gt;変数と組み合わせて作成クエリで使用される修飾名のローカル名&lt;/xref:System.Xml.Linq.XNamespace&gt;。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>One of the most common problems when querying XML trees is that if the XML tree has a default namespace, the developer sometimes writes the query as though the XML were not in a namespace.</source>
          <target state="translated">XML ツリーのクエリにおける最も一般的な問題の&amp;1; つは、XML ツリーに既定の名前空間がある場合に、XML が名前空間に含まれていないものとして開発者がクエリを記述してしまうことです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The first set of examples in this topic shows a typical way that XML in a default namespace is loaded, but is queried improperly.</source>
          <target state="translated">このトピックの最初に示す一連の例では、既定の名前空間内の XML が読み込まれても、クエリが不適切に実行される典型的な例を示しています。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The second set of examples show the necessary corrections so that you can query XML in a namespace.</source>
          <target state="translated">2 番目に示す一連の例では、名前空間内の XML に対してクエリを実行できるようにするために必要な修正を示しています。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This example shows the creation of XML in a namespace, and a query that returns an empty result set.</source>
          <target state="translated">この例では、名前空間内にある XML の作成、および空の結果セットを返すクエリを示します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">コード</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">コメント</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This example produces the following result:</source>
          <target state="translated">この例を実行すると、次の結果が得られます。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This example shows the creation of XML in a namespace, and a query that is coded properly.</source>
          <target state="translated">この例では、名前空間内にある XML の作成と、適切に記述されたクエリを示します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In contrast to the incorrectly coded example above, the correct approach when using Visual Basic is to declare and initialize a global default namespace.</source>
          <target state="translated">上記の不適切に記述された例に対しては、Visual Basic を使用する場合は、正しいアプローチを宣言して既定のグローバル名前空間の初期化です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This places all XML properties in the default namespace.</source>
          <target state="translated">これにより、すべての XML プロパティが既定の名前空間に配置されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>No other modifications are required to the example to make it work properly.</source>
          <target state="translated">この例を正しく動作させるために必要な変更はこれだけです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Code</source>
          <target state="translated">コード</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">コメント</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This example produces the following result:</source>
          <target state="translated">この例を実行すると、次の結果が得られます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Working with XML Namespaces (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>XML 名前空間 (Visual Basic) の使用<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>