<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">349cfdb3e31225f6aeba90ac29aa1c66e37c7e11</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\strings\types-of-string-manipulation-methods.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d305e7f8725d900b1792f291913a8d08f27f8753</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bd55b0d096b2ad7b4584ef0319d06a55e3b54d92</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_types-of-string-manipulation-methods.3620674c076ea77bdf56b4d6ea05809e5df80e56.ja-jp is different with handoff file name: types-of-string-manipulation-methods.3620674c076ea77bdf56b4d6ea05809e5df80e56.ja-jp.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Types of String Manipulation Methods in Visual Basic | Microsoft Docs</source>
          <target state="translated">Visual Basic で文字列操作メソッドの種類 |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Types of String Manipulation Methods in Visual Basic</source>
          <target state="translated">Visual Basic における文字列操作メソッドの種類</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>There are several different ways to analyze and manipulate your strings.</source>
          <target state="translated">分析し、文字列の操作をいくつかの方法があります。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Some of the methods are a part of the <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> language, and others are inherent in the <ph id="ph2">`String`</ph> class.</source>
          <target state="translated">一部である一部のメソッド、<ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>言語、およびその他のユーザーに内在する、<ph id="ph2">`String`</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Visual Basic Language and the .NET Framework</source>
          <target state="translated">Visual Basic 言語と .NET Framework</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> methods are used as inherent functions of the language.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>メソッドは、言語固有の関数として使用されます。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>They may be used without qualification in your code.</source>
          <target state="translated">これらは、コードで修飾しないで使用できる場合があります。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following example shows typical use of a <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> string-manipulation command:</source>
          <target state="translated">次の例の一般的な使用方法を示しています、<ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>文字列操作コマンド。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStrings#44<ept id="p2">](../../../../visual-basic/language-reference/functions/codesnippet/VisualBasic/types-of-string-manipulation-methods_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStrings #&amp;44;<ept id="p2">](../../../../visual-basic/language-reference/functions/codesnippet/VisualBasic/types-of-string-manipulation-methods_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In this example, the <ph id="ph1">`Mid`</ph> function performs a direct operation on <ph id="ph2">`aString`</ph> and assigns the value to <ph id="ph3">`bString`</ph>.</source>
          <target state="translated">この例では、<ph id="ph1">`Mid`</ph>関数に対して直接操作を実行する<ph id="ph2">`aString`</ph>に値を代入し、<ph id="ph3">`bString`</ph>します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For a list of Visual Basic string manipulation methods, see <bpt id="p1">[</bpt>String Manipulation Summary<ept id="p1">](../../../../visual-basic/language-reference/keywords/string-manipulation-summary.md)</ept>.</source>
          <target state="translated">Visual Basic の文字列操作メソッドの一覧は、次を参照してください。<bpt id="p1">[</bpt>文字列操作の概要<ept id="p1">](../../../../visual-basic/language-reference/keywords/string-manipulation-summary.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Shared Methods and Instance Methods</source>
          <target state="translated">共有メソッドとインスタンス メソッド</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You can also manipulate strings with the methods of the <ph id="ph1">`String`</ph> class.</source>
          <target state="translated">メソッドを使って文字列を操作することも、<ph id="ph1">`String`</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>There are two types of methods in <ph id="ph1">`String`</ph>: <bpt id="p1">*</bpt>shared<ept id="p1">*</ept> methods and <bpt id="p2">*</bpt>instance<ept id="p2">*</ept> methods.</source>
          <target state="translated">におけるメソッドの&amp;2; つの種類がある<ph id="ph1">`String`</ph>:<bpt id="p1">*</bpt>共有<ept id="p1">*</ept>メソッドと<bpt id="p2">*</bpt>インスタンス<ept id="p2">*</ept>メソッドです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Shared Methods</source>
          <target state="translated">共有メソッド</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A shared method is a method that stems from the <ph id="ph1">`String`</ph> class itself and does not require an instance of that class to work.</source>
          <target state="translated">共有メソッドに由来するメソッド、<ph id="ph1">`String`</ph>クラス自身と動作するには、そのクラスのインスタンスは必要ありません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>These methods can be qualified with the name of the class (<ph id="ph1">`String`</ph>) rather than with an instance of the <ph id="ph2">`String`</ph> class.</source>
          <target state="translated">これらのメソッドは、クラスの名前で修飾することができます (<ph id="ph1">`String`</ph>) のインスタンスではなく、<ph id="ph2">`String`</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例:</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStrings#45<ept id="p2">](../../../../visual-basic/language-reference/functions/codesnippet/VisualBasic/types-of-string-manipulation-methods_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStrings #&amp;45;<ept id="p2">](../../../../visual-basic/language-reference/functions/codesnippet/VisualBasic/types-of-string-manipulation-methods_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>In the preceding example, the &lt;xref:System.String.Copy%2A?displayProperty=fullName&gt; method is a static method, which acts upon an expression it is given and assigns the resulting value to <ph id="ph1">`bString`</ph>.</source>
          <target state="translated">上記の例では、&lt;xref:System.String.Copy%2A?displayProperty=fullName&gt;メソッドが静的メソッドで、式に対して機能することが指定されに結果として得られる値を代入<ph id="ph1">`bString`</ph>&lt;/xref:System.String.Copy%2A?displayProperty=fullName&gt;。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Instance Methods</source>
          <target state="translated">インスタンス メソッド</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Instance methods, by contrast, stem from a particular instance of <ph id="ph1">`String`</ph> and must be qualified with the instance name.</source>
          <target state="translated">特定のインスタンスのインスタンス メソッドがこれに対し、原因<ph id="ph1">`String`</ph>インスタンス名で修飾する必要があります。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">例:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStrings#46<ept id="p2">](../../../../visual-basic/language-reference/functions/codesnippet/VisualBasic/types-of-string-manipulation-methods_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStrings&amp;#46;<ept id="p2">](../../../../visual-basic/language-reference/functions/codesnippet/VisualBasic/types-of-string-manipulation-methods_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;xref:System.String.Substring%2A?displayProperty=fullName&gt; method is a method of the instance of <ph id="ph1">`String`</ph> (that is, <ph id="ph2">`aString`</ph>).</source>
          <target state="translated">この例では、&lt;xref:System.String.Substring%2A?displayProperty=fullName&gt;メソッドは、メソッドのインスタンスの<ph id="ph1">`String`</ph>(つまり、 <ph id="ph2">`aString`</ph>).&lt;/xref:System.String.Substring%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>It performs an operation on <ph id="ph1">`aString`</ph> and assigns that value to <ph id="ph2">`bString`</ph>.</source>
          <target state="translated">操作を実行<ph id="ph1">`aString`</ph>にその値を代入し、<ph id="ph2">`bString`</ph>します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information, see the documentation for the &lt;xref:System.String&gt; class.</source>
          <target state="translated">詳細については、&lt;xref:System.String&gt;クラス&lt;/xref:System.String&gt;のドキュメントを参照してください。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Introduction to Strings in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/strings/introduction-to-strings.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Visual Basic における文字列の概要<ept id="p1">](../../../../visual-basic/programming-guide/language-features/strings/introduction-to-strings.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>