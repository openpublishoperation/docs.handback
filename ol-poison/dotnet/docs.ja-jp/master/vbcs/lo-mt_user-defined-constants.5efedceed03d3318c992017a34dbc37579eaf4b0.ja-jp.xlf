<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e5942d8663a8866b2f9794a86756f2bf25660ba5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\constants-enums\user-defined-constants.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8056667c9bdbfaa3ce6d4bab9f7071aa0fbf9e40</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e667915f2c82670e4899dc88d75264cb3af3add0</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_user-defined-constants.5efedceed03d3318c992017a34dbc37579eaf4b0.ja-jp is different with handoff file name: user-defined-constants.5efedceed03d3318c992017a34dbc37579eaf4b0.ja-jp.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>User-Defined Constants (Visual Basic) | Microsoft Docs</source>
          <target state="translated">ユーザー定義定数 (Visual Basic) |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>User-Defined Constants (Visual Basic)</source>
          <target state="translated">ユーザー定義定数 (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A constant is a meaningful name that takes the place of a number or string that does not change.</source>
          <target state="translated">定数とは、数値または変更されない文字列の代わりに使用されるわかりやすい名前です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Constants store values that, as the name implies, remain constant throughout the execution of an application.</source>
          <target state="translated">定数値は、その名前からわかるように、一定に保たれるアプリケーションの実行中に格納します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can use constants that are defined by the controls or components you work with, or you can create your own.</source>
          <target state="translated">コントロールや使用するコンポーネントで定義されている定数を使用するか、独自に作成することができます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Constants you create yourself are described as <bpt id="p1">*</bpt>user-defined<ept id="p1">*</ept>.</source>
          <target state="translated">自分で作成した定数は<bpt id="p1">*</bpt>ユーザー定義<ept id="p1">*</ept>します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You declare a constant with the <ph id="ph1">`Const`</ph> statement, using the same guidelines you would for creating a variable name.</source>
          <target state="translated">持つ定数の宣言、<ph id="ph1">`Const`</ph>ステートメント、変数名を作成する場合と同じガイドラインを使用します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Option Strict`</ph> is <ph id="ph2">`On`</ph>, you must explicitly declare the constant type.</source>
          <target state="translated">場合<ph id="ph1">`Option Strict`</ph>は<ph id="ph2">`On`</ph>、定数の型を明示的に宣言する必要があります。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Const Statement Usage</source>
          <target state="translated">Const ステートメントの使用状況</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Const`</ph> statement can represent a mathematical or date/time quantity:</source>
          <target state="translated">A<ph id="ph1">`Const`</ph>ステートメント、数学的な表現したり、日付/時刻の数量。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#10<ept id="p2">](../../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/user-defined-constants_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask&amp;#10;<ept id="p2">](../../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/user-defined-constants_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>It also can define <ph id="ph1">`String`</ph> constants:</source>
          <target state="translated">定義できます<ph id="ph1">`String`</ph>定数。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#13<ept id="p2">](../../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/user-defined-constants_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask&amp;#13;<ept id="p2">](../../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/user-defined-constants_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The expression on the right side of the equal sign ( <ph id="ph1">`=`</ph> ) is often a number or literal string, but it also can be an expression that results in a number or string (although that expression cannot contain calls to functions).</source>
          <target state="translated">等号の右側にある式 ( <ph id="ph1">`=`</ph> ) 多くの場合、数値またはリテラル文字列が、(ただし、その式には、関数の呼び出しを含めることはできません)、数値または文字列に評価される式を指定することもできます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can even define constants in terms of previously defined constants:</source>
          <target state="translated">以前に定義された定数の観点から定数を定義することもできます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#15<ept id="p2">](../../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/user-defined-constants_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask&amp;#15;<ept id="p2">](../../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/user-defined-constants_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Scope of User-Defined Constants</source>
          <target state="translated">ユーザー定義関数のスコープ</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Const`</ph> statement's scope is the same as that of a variable declared in the same location.</source>
          <target state="translated">A<ph id="ph1">`Const`</ph>ステートメントのスコープは、同じ場所で宣言された変数のと同じです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can specify scope in any of the following ways:</source>
          <target state="translated">次のような方法では、スコープを指定できます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>To create a constant that exists only within a procedure, declare it within that procedure.</source>
          <target state="translated">プロシージャ内でのみ存在する定数を作成するには、そのプロシージャ内で宣言します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>To create a constant available to all procedures within a class, but not to any code outside that module, declare it in the declarations section of the class.</source>
          <target state="translated">使用できるは、そのモジュールの外部コードではなく、クラス内のすべてのプロシージャに定数を作成するには、クラスの宣言セクションで宣言します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To create a constant that is available to all members of an assembly, but not to outside clients of the assembly, declare it using the <ph id="ph1">`Friend`</ph> keyword in the declarations section of the class.</source>
          <target state="translated">アセンブリの外部のクライアントではなく、アセンブリのすべてのメンバーには、使用できる定数を作成するには、宣言を使用して、<ph id="ph1">`Friend`</ph>クラスの宣言セクションにキーワードです。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>To create a constant available throughout the application, declare it using the <ph id="ph1">`Public`</ph> keyword in the declarations section the class.</source>
          <target state="translated">アプリケーション全体で使用できる定数を作成するには、宣言を使用して、<ph id="ph1">`Public`</ph>セクションで、クラスの宣言でキーワードです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Declare A Constant<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-declare-a-constant.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>方法: A 定数の宣言<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-declare-a-constant.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Avoiding Circular References</source>
          <target state="translated">循環参照の回避</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Because constants can be defined in terms of other constants, it is possible to inadvertently create a <bpt id="p1">*</bpt>cycle<ept id="p1">*</ept>, or circular reference, between two or more constants.</source>
          <target state="translated">発生する可能性は他の定数の観点から定数を定義するため、<bpt id="p1">*</bpt>サイクル<ept id="p1">*</ept>、または&amp;2; つ以上の定数の間での循環参照。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A cycle occurs when you have two or more public constants, each of which is defined in terms of the other, as in the following example:</source>
          <target state="translated">サイクルは、2 つ以上のパブリック定数は、別の例を次の条件で定義したときに発生します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#16<ept id="p2">](../../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/user-defined-constants_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask&amp;#16;<ept id="p2">](../../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/user-defined-constants_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask#17<ept id="p2">](../../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/user-defined-constants_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbEnumsTask&amp;17;<ept id="p2">](../../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/user-defined-constants_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If a cycle occurs, <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> generates a compiler error.</source>
          <target state="translated">循環参照が発生した場合<ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>コンパイラ エラーが発生します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Const Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/const-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Const ステートメント<ept id="p1">](../../../../visual-basic/language-reference/statements/const-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Constant and Literal Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/constant-and-literal-data-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>定数とリテラルのデータ型<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/constant-and-literal-data-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Constants and Enumerations<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>定数と列挙型<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Constants and Enumerations<ept id="p1">](../../../../visual-basic/language-reference/constants-and-enumerations.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>定数と列挙型<ept id="p1">](../../../../visual-basic/language-reference/constants-and-enumerations.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Enumerations Overview<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/enumerations-overview.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>列挙型の概要<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/enumerations-overview.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Constants Overview<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/constants-overview.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>定数の概要<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/constants-overview.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Declare an Enumeration<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-declare-enumerations.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法: 列挙型を宣言<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/how-to-declare-enumerations.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Enumerations and Name Qualification<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/enumerations-and-name-qualification.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>列挙型と名前修飾<ept id="p1">](../../../../visual-basic/programming-guide/language-features/constants-enums/enumerations-and-name-qualification.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Option Strict Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Option Strict ステートメント<ept id="p1">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>