<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8cabb2d319288653c80099c816e46e822429d6ec</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\variables\variable-declaration.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4851e4155555bc60b2377de2fc95a776e8efc24a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8b95e9a521e51a58aa3913a7843afc173cf3310e</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_variable-declaration.b8962fd082025e5061e975e2749360cb562a83c3.ja-jp is different with handoff file name: variable-declaration.b8962fd082025e5061e975e2749360cb562a83c3.ja-jp.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Variable Declaration in Visual Basic | Microsoft Docs</source>
          <target state="translated">Visual Basic での変数宣言 |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Variable Declaration in Visual Basic</source>
          <target state="translated">Visual Basic での変数宣言</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You declare a variable to specify its name and characteristics.</source>
          <target state="translated">名前と特性を指定する変数を宣言するとします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The declaration statement for variables is the <bpt id="p1">[</bpt>Dim Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/dim-statement.md)</ept>.</source>
          <target state="translated">変数の宣言ステートメントは、 <bpt id="p1">[</bpt>Dim ステートメント<ept id="p1">](../../../../visual-basic/language-reference/statements/dim-statement.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Its location and contents determine the variable's characteristics.</source>
          <target state="translated">その場所や内容は、変数の特性を決定します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>For variable naming rules and considerations, see <bpt id="p1">[</bpt>Declared Element Names<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.</source>
          <target state="translated">変数の名前付け規則と考慮事項では、次を参照してください。<bpt id="p1">[</bpt>宣言された要素の名前<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Declaration Levels</source>
          <target state="translated">宣言のレベル</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Local and Member Variables</source>
          <target state="translated">ローカル変数とメンバー変数</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>local variable<ept id="p1">*</ept> is one that is declared within a procedure.</source>
          <target state="translated">A<bpt id="p1">*</bpt>ローカル変数<ept id="p1">*</ept>プロシージャ内で宣言されている&amp;1; つです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>member variable<ept id="p1">*</ept> is a member of a <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> type; it is declared at module level, inside a class, structure, or module, but not within any procedure internal to that class, structure, or module.</source>
          <target state="translated">A<bpt id="p1">*</bpt>メンバー変数<ept id="p1">*</ept>のメンバーである、<ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>型クラス、構造体、またはモジュールに内部プロシージャ内ではありませんが、クラス、構造体、またはモジュール内のモジュール レベルで宣言されています。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Shared and Instance Variables</source>
          <target state="translated">共有し、インスタンス変数</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In a class or structure, the category of a member variable depends on whether or not it is shared.</source>
          <target state="translated">クラスまたは構造体のメンバー変数のカテゴリが共有されるかどうかに依存します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If it is declared with the <bpt id="p1">[</bpt>Shared<ept id="p1">](../../../../visual-basic/language-reference/modifiers/shared.md)</ept> keyword, it is a <bpt id="p2">*</bpt>shared variable<ept id="p2">*</ept>, and it exists in a single copy shared among all instances of the class or structure.</source>
          <target state="translated">宣言されている場合、 <bpt id="p1">[</bpt>Shared<ept id="p1">](../../../../visual-basic/language-reference/modifiers/shared.md)</ept>は、キーワード、<bpt id="p2">*</bpt>共有変数<ept id="p2">*</ept>、1 つのコピーがクラスまたは構造体のすべてのインスタンス間で共有内に存在するとします。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Otherwise it is an <bpt id="p1">*</bpt>instance variable<ept id="p1">*</ept>, and a separate copy of it is created for each instance of the class or structure.</source>
          <target state="translated">以外の場合は、<bpt id="p1">*</bpt>インスタンス変数<ept id="p1">*</ept>、およびクラスまたは構造体の各インスタンスの独立したコピーを作成します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A given copy of an instance variable is available only to the instance of the class or structure in which it was created.</source>
          <target state="translated">インスタンス変数のコピーは、クラスまたは構造体が作成されたインスタンスでのみ使用可能です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>It is independent of a copy of the instance variable in any other instance of the class or structure.</source>
          <target state="translated">これは、クラスまたは構造体の他の任意のインスタンスにインスタンス変数のコピーに依存しません。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Declaring Data Type</source>
          <target state="translated">データ型の宣言</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>As<ept id="p1">](../../../../visual-basic/language-reference/statements/as-clause.md)</ept> clause in the declaration statement allows you to define the data type or object type of the variable you are declaring.</source>
          <target state="translated"><bpt id="p1">[</bpt>として<ept id="p1">](../../../../visual-basic/language-reference/statements/as-clause.md)</ept>宣言ステートメントに句を使用すると、データ型またはオブジェクトを宣言する変数の型を定義します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can specify any of the following types for a variable:</source>
          <target state="translated">変数の種類を次のいずれかを指定できます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An elementary data type, such as <ph id="ph1">`Boolean`</ph>, <ph id="ph2">`Long`</ph>, or <ph id="ph3">`Decimal`</ph></source>
          <target state="translated">基本データ型など、 <ph id="ph1">`Boolean`</ph>、 <ph id="ph2">`Long`</ph>、または<ph id="ph3">`Decimal`</ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A composite data type, such as an array or structure</source>
          <target state="translated">配列や構造体などの複合データ型</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An object type, or class, defined either in your application or in another application</source>
          <target state="translated">オブジェクトの種類、または、アプリケーションまたは別のアプリケーションのいずれかを定義したクラス</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">[!INCLUDE[dnprdnshort](../../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph> class, such as &lt;xref:System.Windows.Forms.Label&gt; or &lt;xref:System.Windows.Forms.TextBox&gt;</source>
          <target state="translated">A<ph id="ph1">[!INCLUDE[dnprdnshort](../../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph>クラスなど、&lt;xref:System.Windows.Forms.Label&gt;または&lt;xref:System.Windows.Forms.TextBox&gt;&lt;/xref:System.Windows.Forms.TextBox&gt;&lt;/xref:System.Windows.Forms.Label&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An interface type, such as &lt;xref:System.IComparable&gt; or &lt;xref:System.IDisposable&gt;</source>
          <target state="translated">インターフェイス型など、&lt;xref:System.IComparable&gt;または&lt;xref:System.IDisposable&gt;&lt;/xref:System.IDisposable&gt;&lt;/xref:System.IComparable&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can declare several variables in one statement without having to repeat the data type.</source>
          <target state="translated">データ型を繰り返さなくても、1 つのステートメントで複数の変数を宣言できます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the following statements, the variables <ph id="ph1">`i`</ph>, <ph id="ph2">`j`</ph>, and <ph id="ph3">`k`</ph> are declared as type <ph id="ph4">`Integer`</ph>, <ph id="ph5">`l`</ph> and <ph id="ph6">`m`</ph> as <ph id="ph7">`Long`</ph>, and <ph id="ph8">`x`</ph> and <ph id="ph9">`y`</ph> as <ph id="ph10">`Single`</ph>:</source>
          <target state="translated">次のステートメントでは、変数で<ph id="ph1">`i`</ph>、 <ph id="ph2">`j`</ph>、および<ph id="ph3">`k`</ph>型として宣言されて<ph id="ph4">`Integer`</ph>、<ph id="ph5">`l`</ph>と<ph id="ph6">`m`</ph>として<ph id="ph7">`Long`</ph>、および<ph id="ph8">`x`</ph>と<ph id="ph9">`y`</ph>として<ph id="ph10">`Single`</ph>:</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>For more information on data types, see <bpt id="p1">[</bpt>Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept>.</source>
          <target state="translated">データ型の詳細については、次を参照してください。<bpt id="p1">[</bpt>データ型<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information on objects, see <bpt id="p1">[</bpt>Objects and Classes<ept id="p1">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)</ept> and <bpt id="p2">[</bpt>Programming with Components<ept id="p2">](http://msdn.microsoft.com/library/d4d4fcb4-e0b8-46b3-b679-7ee0026eb9e3)</ept>.</source>
          <target state="translated">オブジェクトの詳細については、次を参照してください。<bpt id="p1">[</bpt>オブジェクトおよびクラス<ept id="p1">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)</ept>と<bpt id="p2">[</bpt>コンポーネントを使用したプログラミング<ept id="p2">](http://msdn.microsoft.com/library/d4d4fcb4-e0b8-46b3-b679-7ee0026eb9e3)</ept>します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Local Type Inference</source>
          <target state="translated">ローカル型の推論</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>Type inference<ept id="p1">*</ept> is used to determine the data types of local variables declared without an <ph id="ph1">`As`</ph> clause.</source>
          <target state="translated"><bpt id="p1">*</bpt>型の推論<ept id="p1">*</ept>なしで宣言されたローカル変数のデータ型を決定するために使用、<ph id="ph1">`As`</ph>句。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The compiler infers the type of the variable from the type of the initialization expression.</source>
          <target state="translated">コンパイラは、初期化式の型から変数の型を推論します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This enables you to declare variables without explicitly stating a type.</source>
          <target state="translated">これにより、型を明示的に指定せずに変数を宣言することができます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>In the following example, both <ph id="ph1">`num1`</ph> and <ph id="ph2">`num2`</ph> are strongly typed as integers.</source>
          <target state="translated">次の例では両方とも<ph id="ph1">`num1`</ph>と<ph id="ph2">`num2`</ph>整数として厳密に型指定します。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrTypeInference#1<ept id="p2">](../../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/variable-declaration_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrTypeInference&amp;#1;<ept id="p2">](../../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/variable-declaration_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If you want to use local type inference, <ph id="ph1">`Option Infer`</ph> must be set to <ph id="ph2">`On`</ph>.</source>
          <target state="translated">ローカル型推論を使用する場合は、<ph id="ph1">`Option Infer`</ph>に設定する必要があります<ph id="ph2">`On`</ph>します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Local Type Inference<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept> and <bpt id="p2">[</bpt>Option Infer Statement<ept id="p2">](../../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>ローカル型推論<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept>と<bpt id="p2">[</bpt>Option Infer ステートメント<ept id="p2">](../../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Characteristics of Declared Variables</source>
          <target state="translated">宣言された変数の特性</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>lifetime<ept id="p1">*</ept> of a variable is the period of time during which it is available for use.</source>
          <target state="translated"><bpt id="p1">*</bpt>有効期間<ept id="p1">*</ept>変数は、一定時間その中に、使用可能です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>In general, a variable exists as long as the element that declares it (such as a procedure or class) continues to exist.</source>
          <target state="translated">一般に、変数は、(手順やクラスで) 宣言された要素が存在し続けます限り存在します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If the variable does not need to continue existing beyond the lifetime of its containing element, you do not need to do anything special in the declaration.</source>
          <target state="translated">変数がそのコンテナー要素の有効期間よりも長く必要がない場合は、宣言で特別な対応を行う必要はありません。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If the variable needs to continue to exist longer than its containing element, you can include the <ph id="ph1">`Static`</ph> or <ph id="ph2">`Shared`</ph> keyword in its <ph id="ph3">`Dim`</ph> statement.</source>
          <target state="translated">含めることができますが、変数は、引き続きそのコンテナー要素よりも長く存在する必要がある場合、<ph id="ph1">`Static`</ph>または<ph id="ph2">`Shared`</ph>キーワードでその<ph id="ph3">`Dim`</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Lifetime in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/lifetime.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Visual Basic における有効期間<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/lifetime.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">*</bpt>scope<ept id="p1">*</ept> of a variable is the set of all code that can refer to it without qualifying its name.</source>
          <target state="translated"><bpt id="p1">*</bpt>スコープ<ept id="p1">*</ept>の変数の名前を修飾せずに参照できるすべてのコードのセットです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A variable's scope is determined by where it is declared.</source>
          <target state="translated">変数のスコープは、宣言されている場所によって決まります。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Code located in a given region can use the variables defined in that region without having to qualify their names.</source>
          <target state="translated">指定したリージョンに置かれているコードは、その名前を修飾しなくても、そのリージョンで定義されている変数を使用できます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Scope in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/scope.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Visual Basic におけるスコープ<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/scope.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A variable's <bpt id="p1">*</bpt>access level<ept id="p1">*</ept> is the extent of code that has permission to access it.</source>
          <target state="translated">変数の<bpt id="p1">*</bpt>アクセス レベル<ept id="p1">*</ept>へのアクセス許可のあるコードの範囲は、です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>This is determined by the access modifier (such as <bpt id="p1">[</bpt>Public<ept id="p1">](../../../../visual-basic/language-reference/modifiers/public.md)</ept> or <bpt id="p2">[</bpt>Private<ept id="p2">](../../../../visual-basic/language-reference/modifiers/private.md)</ept>) that you use in the <ph id="ph1">`Dim`</ph> statement.</source>
          <target state="translated">これは、アクセス修飾子によって決まります (よう<bpt id="p1">[</bpt>パブリック<ept id="p1">](../../../../visual-basic/language-reference/modifiers/public.md)</ept>または<bpt id="p2">[</bpt>プライベート<ept id="p2">](../../../../visual-basic/language-reference/modifiers/private.md)</ept>) で使用する、<ph id="ph1">`Dim`</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Access Levels in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Visual Basic でのアクセス レベル<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Create a New Variable<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/how-to-create-a-new-variable.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>方法: 新しい変数を作成<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/how-to-create-a-new-variable.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Move Data Into and Out of a Variable<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/how-to-move-data-into-and-out-of-a-variable.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>方法: 変数に出入りするデータを移動<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/how-to-move-data-into-and-out-of-a-variable.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Data Types<ept id="p1">](../../../../visual-basic/language-reference/data-types/data-type-summary.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>データ型<ept id="p1">](../../../../visual-basic/language-reference/data-types/data-type-summary.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Protected<ept id="p1">](../../../../visual-basic/language-reference/modifiers/protected.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>保護されています。<ept id="p1">](../../../../visual-basic/language-reference/modifiers/protected.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Friend<ept id="p1">](../../../../visual-basic/language-reference/modifiers/friend.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Friend<ept id="p1">](../../../../visual-basic/language-reference/modifiers/friend.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Static<ept id="p1">](../../../../visual-basic/language-reference/modifiers/static.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>静的<ept id="p1">](../../../../visual-basic/language-reference/modifiers/static.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Declared Element Characteristics<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-characteristics.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>宣言された要素の特性<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-characteristics.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Local Type Inference<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>ローカル型推論<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Option Infer Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Option Infer ステートメント<ept id="p1">](../../../../visual-basic/language-reference/statements/option-infer-statement.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>