<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">076bc8d33e97286c31f27a2016e39a25e9cec22c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\interfaces\walkthrough-creating-and-implementing-interfaces.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc02a2c8bbe5b48d96a00cb75dc0d0e16d1fedf6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6246e721275bdbcb0e8367a5496f38bd7ba8c155</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_walkthrough-creating-and-implementing-interfaces.a9b3c22d2caf76208c29623c4bc2bde4ef86c56b.ja-jp is different with handoff file name: walkthrough-creating-and-implementing-interfaces.a9b3c22d2caf76208c29623c4bc2bde4ef86c56b.ja-jp.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Creating and Implementing Interfaces (Visual Basic) | Microsoft Docs</source>
          <target state="translated">作成するインターフェイスと実装 (Visual Basic) |Microsoft ドキュメント</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Creating and Implementing Interfaces (Visual Basic)</source>
          <target state="translated">チュートリアル: インターフェイスの作成と実装 (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Interfaces describe the characteristics of properties, methods, and events, but leave the implementation details up to structures or classes.</source>
          <target state="translated">インターフェイスは、プロパティ、メソッド、およびイベントの特性を記述する、最大で構造体またはクラスの実装の詳細のままです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This walkthrough demonstrates how to declare and implement an interface.</source>
          <target state="translated">このチュートリアルでは、宣言およびインターフェイスを実装する方法を示します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This walkthrough doesn't provide information about how to create a user interface.</source>
          <target state="translated">このチュートリアルでは、ユーザー インターフェイスを作成する方法に関する情報を提供しません。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To define an interface</source>
          <target state="translated">インターフェイスを定義するには</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Open a new <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> Windows Application project.</source>
          <target state="translated">新しい<ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>Windows アプリケーション プロジェクト。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Add a new module to the project by clicking <bpt id="p1">**</bpt>Add Module<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>Project<ept id="p2">**</ept> menu.</source>
          <target state="translated">クリックして、プロジェクトに新しいモジュールを追加<bpt id="p1">**</bpt>モジュールの追加<ept id="p1">**</ept>上、<bpt id="p2">**</bpt>プロジェクト<ept id="p2">**</ept>メニュー。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Name the new module <ph id="ph1">`Module1.vb`</ph> and click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept>.</source>
          <target state="translated">新しいモジュール名前<ph id="ph1">`Module1.vb`</ph> をクリック<bpt id="p1">**</bpt>追加<ept id="p1">**</ept>します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The code for the new module is displayed.</source>
          <target state="translated">新しいモジュールのコードが表示されます。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Define an interface named <ph id="ph1">`TestInterface`</ph> within <ph id="ph2">`Module1`</ph> by typing <ph id="ph3">`Interface TestInterface`</ph> between the <ph id="ph4">`Module`</ph> and <ph id="ph5">`End Module`</ph> statements, and then pressing ENTER.</source>
          <target state="translated">という名前のインターフェイスを定義する<ph id="ph1">`TestInterface`</ph>内<ph id="ph2">`Module1`</ph>」と入力して<ph id="ph3">`Interface TestInterface`</ph>間、<ph id="ph4">`Module`</ph>と<ph id="ph5">`End Module`</ph>ステートメント、および ENTER キーを押します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept> indents the <ph id="ph1">`Interface`</ph> keyword and adds an <ph id="ph2">`End Interface`</ph> statement to form a code block.</source>
          <target state="translated"><bpt id="p1">**</bpt>コード エディター<ept id="p1">**</ept>インデント、<ph id="ph1">`Interface`</ph>キーワードを追加し、<ph id="ph2">`End Interface`</ph>コード ブロックを形成するステートメントです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Define a property, method, and event for the interface by placing the following code between the <ph id="ph1">`Interface`</ph> and <ph id="ph2">`End Interface`</ph> statements:</source>
          <target state="translated">間に次のコードを配置することで、プロパティ、メソッド、およびインターフェイスのイベントを定義、<ph id="ph1">`Interface`</ph>と<ph id="ph2">`End Interface`</ph>ステートメント。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#98<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;98;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Implementation</source>
          <target state="translated">実装</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You may notice that the syntax used to declare interface members is different from the syntax used to declare class members.</source>
          <target state="translated">インターフェイス メンバーの宣言に使用する構文はクラス メンバーを宣言するための構文を異なることに注意してください可能性があります。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This difference reflects the fact that interfaces cannot contain implementation code.</source>
          <target state="translated">この違いは、インターフェイスが実装コードを含めることはできませんという事実を表しています。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>To implement the interface</source>
          <target state="translated">インターフェイスを実装するには</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Add a class named <ph id="ph1">`ImplementationClass`</ph> by adding the following statement to <ph id="ph2">`Module1`</ph>, after the <ph id="ph3">`End Interface`</ph> statement but before the <ph id="ph4">`End Module`</ph> statement, and then pressing ENTER:</source>
          <target state="translated">という名前のクラスを追加<ph id="ph1">`ImplementationClass`</ph>に次のステートメントを追加することで<ph id="ph2">`Module1`</ph>後に、<ph id="ph3">`End Interface`</ph>ステートメント前に、<ph id="ph4">`End Module`</ph>ステートメント、および ENTER キーを押します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#99<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP&amp;#99;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If you are working within the integrated development environment, the <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept> supplies a matching <ph id="ph1">`End Class`</ph> statement when you press ENTER.</source>
          <target state="translated">統合開発環境で作業している場合、<bpt id="p1">**</bpt>コード エディター<ept id="p1">**</ept>提供、対応する<ph id="ph1">`End Class`</ph>ステートメント ENTER キーを押す。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Add the following <ph id="ph1">`Implements`</ph> statement to <ph id="ph2">`ImplementationClass`</ph>, which names the interface the class implements:</source>
          <target state="translated">次の追加<ph id="ph1">`Implements`</ph>ステートメント<ph id="ph2">`ImplementationClass`</ph>を実装するクラス、インターフェイスを示しています。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#100<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP&amp;#100;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When listed separately from other items at the top of a class or structure, the <ph id="ph1">`Implements`</ph> statement indicates that the class or structure implements an interface.</source>
          <target state="translated">クラスまたは構造の上部にある他の項目とは別に表示されている場合、<ph id="ph1">`Implements`</ph>ステートメントでは、クラスまたは構造体でインターフェイスを実装することを示します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you are working within the integrated development environment, the <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept> implements the class members required by <ph id="ph1">`TestInterface`</ph> when you press ENTER, and you can skip the next step.</source>
          <target state="translated">統合開発環境で作業している場合、<bpt id="p1">**</bpt>コード エディター<ept id="p1">**</ept>で必要なクラス メンバーを実装して<ph id="ph1">`TestInterface`</ph>、ENTER キーを押すし、次の手順をスキップすることができます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If you are not working within the integrated development environment, you must implement all the members of the interface <ph id="ph1">`MyInterface`</ph>.</source>
          <target state="translated">統合開発環境で機能しない場合は、インターフェイスのすべてのメンバーを実装する必要があります<ph id="ph1">`MyInterface`</ph>します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Add the following code to <ph id="ph1">`ImplementationClass`</ph> to implement <ph id="ph2">`Event1`</ph>, <ph id="ph3">`Method1`</ph>, and <ph id="ph4">`Prop1`</ph>:</source>
          <target state="translated">次のコードを追加<ph id="ph1">`ImplementationClass`</ph>を実装する<ph id="ph2">`Event1`</ph>、 <ph id="ph3">`Method1`</ph>、および<ph id="ph4">`Prop1`</ph>:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#101<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;101;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Implements`</ph> statement names the interface and interface member being implemented.</source>
          <target state="translated"><ph id="ph1">`Implements`</ph>ステートメント インターフェイスおよび実装するインターフェイス メンバーの名前します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Complete the definition of <ph id="ph1">`Prop1`</ph> by adding a private field to the class that stored the property value:</source>
          <target state="translated">定義が完了<ph id="ph1">`Prop1`</ph>プロパティ値を格納するクラスにプライベート フィールドを追加します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#102<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;102;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Return the value of the <ph id="ph1">`pval`</ph> from the property get accessor.</source>
          <target state="translated">値を返す、<ph id="ph1">`pval`</ph>プロパティ アクセサーを取得します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#103<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;103;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Set the value of <ph id="ph1">`pval`</ph> in the property set accessor.</source>
          <target state="translated">値を設定<ph id="ph1">`pval`</ph>プロパティのアクセサーを設定します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#104<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_7.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;104;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_7.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Complete the definition of <ph id="ph1">`Method1`</ph> by adding the following code.</source>
          <target state="translated">定義が完了<ph id="ph1">`Method1`</ph>によって次のコードを追加します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#105<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_8.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;105;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_8.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To test the implementation of the interface</source>
          <target state="translated">インターフェイスの実装をテストするには</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Right-click the startup form for your project in the <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, and click <bpt id="p2">**</bpt>View Code<ept id="p2">**</ept>.</source>
          <target state="translated">プロジェクトのスタートアップ フォームを右クリックし、<bpt id="p1">**</bpt>ソリューション エクスプ ローラー<ept id="p1">**</ept>、 をクリック<bpt id="p2">**</bpt>コードの表示<ept id="p2">**</ept>します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The editor displays the class for your startup form.</source>
          <target state="translated">エディターには、スタートアップ フォームのクラスが表示されます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>By default, the startup form is called <ph id="ph1">`Form1`</ph>.</source>
          <target state="translated">既定では、スタートアップ フォームと呼ばれる<ph id="ph1">`Form1`</ph>です。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Add the following <ph id="ph1">`testInstance`</ph> field to the <ph id="ph2">`Form1`</ph> class:</source>
          <target state="translated">次の追加<ph id="ph1">`testInstance`</ph>フィールドを<ph id="ph2">`Form1`</ph>クラス。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#120<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_9.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;120;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_9.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>By declaring <ph id="ph1">`testInstance`</ph> as <ph id="ph2">`WithEvents`</ph>, the <ph id="ph3">`Form1`</ph> class can handle its events.</source>
          <target state="translated">宣言することで<ph id="ph1">`testInstance`</ph>として<ph id="ph2">`WithEvents`</ph>、<ph id="ph3">`Form1`</ph>クラスは、そのイベントを処理できます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Add the following event handler to the <ph id="ph1">`Form1`</ph> class to handle events raised by <ph id="ph2">`testInstance`</ph>:</source>
          <target state="translated">次のイベント ハンドラーを追加、<ph id="ph1">`Form1`</ph>クラスによって生成されるイベントを処理する<ph id="ph2">`testInstance`</ph>:</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#106<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_10.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;106;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_10.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Add a subroutine named <ph id="ph1">`Test`</ph> to the <ph id="ph2">`Form1`</ph> class to test the implementation class:</source>
          <target state="translated">という名前のサブルーチンを追加<ph id="ph1">`Test`</ph>に、<ph id="ph2">`Form1`</ph>実装クラスをテストするクラス。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#107<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_11.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;107;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_11.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Test`</ph> procedure creates an instance of the class that implements <ph id="ph2">`MyInterface`</ph>, assigns that instance to the <ph id="ph3">`testInstance`</ph> field, sets a property, and runs a method through the interface.</source>
          <target state="translated"><ph id="ph1">`Test`</ph>プロシージャを実装するクラスのインスタンスの作成<ph id="ph2">`MyInterface`</ph>、そのインスタンスを割り当てる、<ph id="ph3">`testInstance`</ph>フィールド、プロパティの設定およびインターフェイスを通じたメソッドを実行します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Add code to call the <ph id="ph1">`Test`</ph> procedure from the <ph id="ph2">`Form1 Load`</ph> procedure of your startup form:</source>
          <target state="translated">呼び出すコードを追加、<ph id="ph1">`Test`</ph>プロシージャから、<ph id="ph2">`Form1 Load`</ph>スタートアップ フォームの手順。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#108<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_12.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;108;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-creating-and-implementing-interfaces_12.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Run the <ph id="ph1">`Test`</ph> procedure by pressing F5.</source>
          <target state="translated">実行、 <ph id="ph1">`Test`</ph> f5 キーを押してプロシージャです。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The message "Prop1 was set to 9" is displayed.</source>
          <target state="translated">メッセージ「Prop1 に設定されて 9」が表示されます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>After you click OK, the message "The X parameter for Method1 is 5" is displayed.</source>
          <target state="translated">クリックした後、メッセージ「Method1 の X パラメーターが 5」が表示されます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Click OK, and the message "The event handler caught the event" is displayed.</source>
          <target state="translated">[Ok] をクリックし、「イベント ハンドラーは、イベントをキャッチ」メッセージが表示されます。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">関連項目</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Implements Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/implements-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Implements ステートメント<ept id="p1">](../../../../visual-basic/language-reference/statements/implements-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Interfaces<ept id="p1">](../../../../visual-basic/programming-guide/language-features/interfaces/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>インターフェイス<ept id="p1">](../../../../visual-basic/programming-guide/language-features/interfaces/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Interface Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/interface-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Interface ステートメント<ept id="p1">](../../../../visual-basic/language-reference/statements/interface-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Event Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/event-statement.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Event ステートメント<ept id="p1">](../../../../visual-basic/language-reference/statements/event-statement.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>