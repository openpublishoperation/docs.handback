<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2930bf6879df3cd16cbd0221ae6dfcba9b41de2e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\numerics.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24b6e1e8e0861ff277d5ebffac2c08c5b8c952e3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4abf0ba51574d959cfebae5f27bc52240f51d32f</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">file numerics.3cae565a7bf0ad930aed72b463f8dc1f484efead.ko-kr.xlf is out of handoff scope</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Numerics in .NET Core</source>
          <target state="translated">.NET Core의 숫자</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Numerics in .NET Core</source>
          <target state="translated">.NET Core의 숫자</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Numerics in .NET Core</source>
          <target state="translated">.NET Core의 숫자</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>.NET Core supports the standard numeric integral and floating-point primitives, as well as <bpt id="p1">[</bpt>System.Numerics.BigInteger<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.BigInteger)</ept>, an integral type with no theoretical upper or lower bound, <bpt id="p2">[</bpt>System.Numerics.Complex<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Complex)</ept>, a type that represents complex numbers, and a set of Single Instruction Multiple Data (<bpt id="p3">[</bpt>SIMD<ept id="p3">](https://en.wikipedia.org/wiki/SIMD)</ept>)-enabled vector types in the <bpt id="p4">[</bpt>System.Numerics<ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Numerics)</ept> namespace.</source>
          <target state="translated">.NET Core는 표준 숫자 정수 계열 및 부동 소수점 기본 형식과 <bpt id="p4">[</bpt>System.Numerics<ept id="p4">](https://docs.microsoft.com/dotnet/core/api/System.Numerics)</ept> 네임스페이스의 <bpt id="p1">[</bpt>System.Numerics.BigInteger<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.BigInteger)</ept>, 이론적 상한 또는 하한이 없는 정수 형식, <bpt id="p2">[</bpt>System.Numerics.Complex<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Complex)</ept>, 복소수를 나타내는 형식, <bpt id="p3">[</bpt>SIMD<ept id="p3">](https://en.wikipedia.org/wiki/SIMD)</ept>(Single Instruction Multiple Data) 사용 벡터 형식 집합을 지원합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Integral types</source>
          <target state="translated">정수 계열 형식 표</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>.NET Core supports both signed and unsigned integers ranging from one byte to eight bytes in length.</source>
          <target state="translated">.NET Core에서는 길이 범위가 1~8바이트인 부호 있는 정수와 부호 없는 정수를 둘 다 지원합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following table lists the integral types and their size, indicates whether they are signed or unsigned, and documents their range.</source>
          <target state="translated">다음 표에서는 정수 계열 형식 및 해당 크기 목록을 제공하고 부호가 있는지 여부를 표시하고 해당 범위를 문서화합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>All integers are value types.</source>
          <target state="translated">모든 정수는 값 형식입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">형식</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Signed/Unsigned</source>
          <target state="translated">부호 있음/부호 없음</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Size (bytes)</source>
          <target state="translated">크기(바이트)</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Minimum Value</source>
          <target state="translated">최소값</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Maximum Value</source>
          <target state="translated">최대값</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Byte<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Byte)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Byte<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Byte)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Unsigned</source>
          <target state="translated">부호 없음</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>255</source>
          <target state="translated">255</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Int16<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Int16)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Int16<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Int16)</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Signed</source>
          <target state="translated">서명</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>-32,768</source>
          <target state="translated">-32,768</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>32,767</source>
          <target state="translated">32,767</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Int32<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Int32)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Int32<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Int32)</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Signed</source>
          <target state="translated">서명</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-2,147,483,648</source>
          <target state="translated">-2,147,483,648</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>2,147,483,647</source>
          <target state="translated">2,147,483,647</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Int64<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Int64)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Int64<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Int64)</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Signed</source>
          <target state="translated">서명</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>8</source>
          <target state="translated">9</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-9,223,372,036,854,775,808</source>
          <target state="translated">-9,223,372,036,854,775,808</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>9,223,372,036,854,775,807</source>
          <target state="translated">9,223,372,036,854,775,807</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.SByte<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.SByte)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.SByte<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.SByte)</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Signed</source>
          <target state="translated">서명</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>1</source>
          <target state="translated">1</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>-128</source>
          <target state="translated">-128</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>127</source>
          <target state="translated">127</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.UInt16<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.UInt16)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.UInt16<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.UInt16)</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Unsigned</source>
          <target state="translated">부호 없음</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>2</source>
          <target state="translated">2</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>65,535</source>
          <target state="translated">65,535</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.UInt32<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.UInt32)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.UInt32<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.UInt32)</ept></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Unsigned</source>
          <target state="translated">부호 없음</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>4,294,967,295</source>
          <target state="translated">4,294,967,295</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.UInt64<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.UInt64)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.UInt64<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.UInt64)</ept></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Unsigned</source>
          <target state="translated">부호 없음</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>8</source>
          <target state="translated">9</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>0</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>18,446,744,073,709,551,615</source>
          <target state="translated">18,446,744,073,709,551,615</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Each integral type supports a standard set of arithmetic, comparison, equality, explicit conversion, and implicit conversion operators.</source>
          <target state="translated">각 정수 계열 형식은 산술, 비교, 같음, 명시적 변환 및 암시적 변환 연산자의 표준 집합을 지원합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Each integer also includes methods to perform equality comparisons and relative comparisons, to convert the string representation of a number to that integer, and to convert an integer to its string representation.</source>
          <target state="translated">각 정수에는 같음 비교 및 상대 비교를 수행하고, 숫자의 문자열 표시를 해당 정수로 변환하고, 정수를 해당 문자열 표시로 변환하는 메서드가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Some additional mathematical operations beyond those handled by the standard operators, such as rounding and identifying the smaller or larger value of two integers, are available from the <bpt id="p1">[</bpt>System.Math<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Math)</ept> class.</source>
          <target state="translated">두 정수의 더 작거나 더 큰 값을 반올림하고 식별하는 연산과 같이 표준 연산자를 통해 처리되는 연산 이외의 몇몇 추가 수치 연산은 <bpt id="p1">[</bpt>System.Math<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Math)</ept> 클래스에서 제공됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>You can also work with the individual bits in an integer value by using the <bpt id="p1">[</bpt>System.BitConverter<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.BitConverter)</ept> class.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.BitConverter<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.BitConverter)</ept> 클래스를 사용하여 정수 값의 개별 비트를 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Note that the unsigned integral types are not CLS-compliant.</source>
          <target state="translated">부호 없는 정수 형식은 CLS와 호환되지 않습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>.NET Common Type System &amp; Common Language Specification<ept id="p1">](common-type-system.md)</ept>.</source>
          <target state="translated">자세한 내용은 <bpt id="p1">[</bpt>.NET 공용 형식 시스템 및 공용 언어 사양<ept id="p1">](common-type-system.md)</ept>을 참조하세요.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Floating-point types</source>
          <target state="translated">부동 소수점 형식</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>.NET Core includes three primitive floating point types, which are listed in the following table.</source>
          <target state="translated">.NET Core에는 다음 표에 나열된 세 가지 기본 부동 소수점 형식이 포함되어 있습니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">형식</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Size (bytes)</source>
          <target state="translated">크기(바이트)</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Minimum Value</source>
          <target state="translated">최소값</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Maximum Value</source>
          <target state="translated">최대값</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Double<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Double)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Double<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Double)</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>8</source>
          <target state="translated">9</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>-1.79769313486232e308</source>
          <target state="translated">-1.79769313486232e308</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>1.79769313486232e308</source>
          <target state="translated">1.79769313486232e308</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Single<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Single)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Single<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Single)</ept></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>-3.402823e38</source>
          <target state="translated">-3.402823e38</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>3.402823e38</source>
          <target state="translated">3.402823e38</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Decimal<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Decimal)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Decimal<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Decimal)</ept></target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>16</source>
          <target state="translated">16</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-79,228,162,514,264,337,593,543,950,335</source>
          <target state="translated">-79,228,162,514,264,337,593,543,950,335</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>79,228,162,514,264,337,593,543,950,335</source>
          <target state="translated">79,228,162,514,264,337,593,543,950,335</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Each floating-point type supports a standard set of arithmetic, comparison, equality, explicit conversion, and implicit conversion operators.</source>
          <target state="translated">각 부동 소수점 형식은 산술, 비교, 같음, 명시적 변환 및 암시적 변환 연산자의 표준 집합을 지원합니다.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Each also includes methods to perform equality comparisons and relative comparisons, to convert the string representation of a floating-point number, and to convert a floating-point number to its string representation.</source>
          <target state="translated">각 형식에는 같음 비교 및 상대 비교를 수행하고, 부동 소수점 수의 문자열 표시를 변환하고, 부동 소수점 수를 해당 문자열 표시로 변환하는 메서드가 포함됩니다.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Some additional mathematical, algebraic, and trigonometric operations are available from the <ph id="ph1">`Math`</ph> class.</source>
          <target state="translated">일부 추가적인 수치, 대수 및 삼각 연산은 <ph id="ph1">`Math`</ph> 클래스에서 제공됩니다.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You can also work with the individual bits in <ph id="ph1">`Double`</ph> and <ph id="ph2">`Single`</ph> values by using the <ph id="ph3">`BitConverter`</ph> class.</source>
          <target state="translated"><ph id="ph3">`BitConverter`</ph> 클래스를 사용하여 <ph id="ph1">`Double`</ph> 및 <ph id="ph2">`Single`</ph> 값의 개별 비트를 사용할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Decimal`</ph> structure has its own methods, <ph id="ph2">`Decimal.GetBits`</ph> and <ph id="ph3">`Decimal.Decimal(Int32())`</ph>, for working with a decimal value's individual bits, as well as its own set of methods for performing some additional mathematical operations.</source>
          <target state="translated"><ph id="ph1">`Decimal`</ph> 구조체에는 10진수 값의 개별 비트를 사용하기 위한 고유한 메서드인 <ph id="ph2">`Decimal.GetBits`</ph> 및 <ph id="ph3">`Decimal.Decimal(Int32())`</ph>와 몇몇 추가적인 수치 연산을 수행하기 위한 고유한 메서드 집합이 있습니다.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Double`</ph> and <ph id="ph2">`Single`</ph> types are intended to be used for values that by their nature are imprecise (such as the distance between two stars in the solar system) and for applications in which a high degree of precision and small rounding error is not required.</source>
          <target state="translated"><ph id="ph1">`Double`</ph> 및 <ph id="ph2">`Single`</ph> 형식은 기본적으로 정확하지 않은 값(태양계에서 두 별 사이의 거리) 및 정밀도가 높고 반올림 오류가 적을 필요 없는 응용 프로그램에 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>You should use the <ph id="ph1">`Decimal`</ph> type for cases in which greater precision is required and rounding error is undesirable.</source>
          <target state="translated">정밀도가 더 높아야 하고 반올림 오류가 없어야 하는 경우 <ph id="ph1">`Decimal`</ph> 형식을 사용해야 합니다.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>BigInteger</source>
          <target state="translated">BigInteger</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Numerics.BigInteger<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.BigInteger)</ept> is an immutable type that represents an arbitrarily large integer whose value in theory has no upper or lower bounds.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Numerics.BigInteger<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.BigInteger)</ept>는 이론상 값에 상한이나 하한이 없는 임의로 큰 정수를 나타내는 변경할 수 없는 형식입니다.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The methods of the <ph id="ph1">`BigInteger`</ph> type closely parallel those of the other integral types.</source>
          <target state="translated"><ph id="ph1">`BigInteger`</ph> 형식의 메서드는 기타 정수 계열 형식의 메서드와 매우 유사합니다.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Complex</source>
          <target state="translated">복합</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Numerics.Complex<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Complex)</ept> type represents a complex number, that is, a number with a real number part and an imaginary number part.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Numerics.Complex<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Complex)</ept> 형식은 실수 부분과 허수 부분이 포함된 숫자인 복소수를 나타냅니다.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>It supports a standard set of arithmetic, comparison, equality, explicit conversion, and implicit conversion operators, as well as mathematical, algebraic, and trigonometric methods.</source>
          <target state="translated">이 형식은 산술, 비교, 같음, 명시적 변환 및 암시적 변환 연산자의 표준 집합과 수치, 대수 및 삼각 메서드를 지원합니다.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>SIMD-enabled vector types</source>
          <target state="translated">SIMD 사용 벡터 형식</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`System.Numerics`</ph> namespace includes a set of SIMD-enabled vector types for .NET Core.</source>
          <target state="translated"><ph id="ph1">`System.Numerics`</ph> 네임스페이스에는 .NET Core를 위한 SIMD 사용 벡터 형식 집합이 있습니다.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>SIMD allows some operations to be parallelized at the hardware level, which results in huge performance improvements in mathematical, scientific, and graphics apps that perform computations over vectors.</source>
          <target state="translated">SIMD를 통해 일부 연산을 하드웨어 수준에서 병렬화할 수 있습니다. 이 덕분에 벡터를 통해 계산을 수행하는 수치, 공학용 및 그래픽 앱의 성능이 훨씬 향상됩니다.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The SIMD-enabled vector types in .NET Core include the following:</source>
          <target state="translated">.NET Core의 SIMD 사용 벡터 형식은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Numerics.Vector2<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Vector2)</ept>, <bpt id="p2">[</bpt>System.Numerics.Vector3<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Vector3)</ept>, and <bpt id="p3">[</bpt>System.Numerics.Vector4<ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Vector4)</ept> types, which are 2-, 3-, and 4-dimensional vectors of type <ph id="ph1">`Single`</ph>.</source>
          <target state="translated"><ph id="ph1">`Single`</ph> 형식의 2차원, 3차원 및 4차원 벡터인 <bpt id="p1">[</bpt>System.Numerics.Vector2<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Vector2)</ept>, <bpt id="p2">[</bpt>System.Numerics.Vector3<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Vector3)</ept> 및 <bpt id="p3">[</bpt>System.Numerics.Vector4<ept id="p3">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Vector4)</ept> 형식</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Vector<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Vector-1)</ept> structure that allows you to create a vector of any primitive numeric type.</source>
          <target state="translated">기본 숫자 형식의 벡터를 만들 수 있는 <bpt id="p1">[</bpt>Vector<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Vector-1)</ept> 구조체.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The primitive numeric types include all numeric types in the System namespace except for Decimal.</source>
          <target state="translated">기본 숫자 형식에는 Decimal을 제외한 System 네임스페이스의 모든 숫자 형식이 포함됩니다.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Two matrix types, <bpt id="p1">[</bpt>System.Numerics.Matrix3x2<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Matrix3x2)</ept>, which represents a 3x2 matrix; and <bpt id="p2">[</bpt>System.Numerics.Matrix4x4<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Matrix4x4)</ept>, which represents a 4x4 matrix.</source>
          <target state="translated">두 행렬 형식 <bpt id="p1">[</bpt>System.Numerics.Matrix3x2<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Matrix3x2)</ept>(3x2 행렬을 나타냄) 및 <bpt id="p2">[</bpt>System.Numerics.Matrix4x4<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Matrix4x4)</ept>(4x4 행렬을 나타냄)</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>System.Numerics.Plane<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Plane)</ept> type, which represents a three-dimensional plane, and the <bpt id="p2">[</bpt>System.Numerics.Quaternion<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Quaternion)</ept> type, which represents a vector that is used to encode three-dimensional physical rotations.</source>
          <target state="translated"><bpt id="p1">[</bpt>System.Numerics.Plane<ept id="p1">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Plane)</ept> 형식(3차원 평면을 나타냄) 및 <bpt id="p2">[</bpt>System.Numerics.Quaternion<ept id="p2">](https://docs.microsoft.com/dotnet/core/api/System.Numerics.Quaternion)</ept> 형식(3차원 물리적 회전을 인코드하는 데 사용되는 벡터를 나타냄)</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>