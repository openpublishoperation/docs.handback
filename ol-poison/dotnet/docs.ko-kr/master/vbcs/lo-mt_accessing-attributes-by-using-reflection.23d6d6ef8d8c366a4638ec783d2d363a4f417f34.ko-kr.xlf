<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4763eccc5d1a6bdf3e89c1c4d825d5ff5c6caa3e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\attributes\accessing-attributes-by-using-reflection.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a8718ef448a32c39ad758a28595b926d459f2297</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0a8e83fa43f04787cfcc3f75e6c6c687e88d0ac1</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_accessing-attributes-by-using-reflection.23d6d6ef8d8c366a4638ec783d2d363a4f417f34.ko-kr is different with handoff file name: accessing-attributes-by-using-reflection.23d6d6ef8d8c366a4638ec783d2d363a4f417f34.ko-kr.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Accessing Attributes by Using Reflection (Visual Basic) | Microsoft Docs</source>
          <target state="translated">(Visual Basic) 리플렉션을 사용 하 여 특성 액세스 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Accessing Attributes by Using Reflection (Visual Basic)</source>
          <target state="translated">(Visual Basic) 리플렉션을 사용 하 여 특성 액세스</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The fact that you can define custom attributes and place them in your source code would be of little value without some way of retrieving that information and acting on it.</source>
          <target state="translated">해당 정보를 검색 하 고 작업할 방법이 없는 작은 값의 사용자 지정 특성을 정의 하 고 소스 코드에 배치할 수 있는 팩트는 것입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>By using reflection, you can retrieve the information that was defined with custom attributes.</source>
          <target state="translated">리플렉션을 사용 하 여, 사용자 지정 특성으로 정의 된 정보를 검색할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The key method is <ph id="ph1">`GetCustomAttributes`</ph>, which returns an array of objects that are the run-time equivalents of the source code attributes.</source>
          <target state="translated">핵심 메서드는 <ph id="ph1">`GetCustomAttributes`</ph>, 소스 코드 특성의 해당 하는 런타임 실행 되는 개체의 배열을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This method has several overloaded versions.</source>
          <target state="translated">이 메서드는 몇 가지 오버 로드 된 버전이 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For more information, see &lt;xref:System.Attribute&gt;.</source>
          <target state="translated">자세한 내용은 &lt;xref:System.Attribute&gt;.&lt;/xref:System.Attribute&gt; 을 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An attribute specification such as:</source>
          <target state="translated">와 같은 특성 사양:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>is conceptually equivalent to this:</source>
          <target state="translated">개념적으로이에 해당 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>However, the code is not executed until <ph id="ph1">`SampleClass`</ph> is queried for attributes.</source>
          <target state="translated">그러나 코드에 실행 됩니다 <ph id="ph1">`SampleClass`</ph> 특성에 대 한 쿼리 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Calling <ph id="ph1">`GetCustomAttributes`</ph> on <ph id="ph2">`SampleClass`</ph> causes an <ph id="ph3">`Author`</ph> object to be constructed and initialized as above.</source>
          <target state="translated">호출 <ph id="ph1">`GetCustomAttributes`</ph> 에 <ph id="ph2">`SampleClass`</ph> 하면는 <ph id="ph3">`Author`</ph> 개체를 생성 하 고 위에서 설명한 것 처럼 초기화 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If the class has other attributes, other attribute objects are constructed similarly.</source>
          <target state="translated">클래스에 다른 특성이 다른 특성 개체 마찬가지로 생성 됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`GetCustomAttributes`</ph> then returns the <ph id="ph2">`Author`</ph> object and any other attribute objects in an array.</source>
          <target state="translated"><ph id="ph1">`GetCustomAttributes`</ph>그런 다음 반환 된 <ph id="ph2">`Author`</ph> 배열에 다른 특성 개체와 개체입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can then iterate over this array, determine what attributes were applied based on the type of each array element, and extract information from the attribute objects.</source>
          <target state="translated">각 배열 요소의 형식에 따라 적용 된 특성을 결정 하 고 특성 개체에서 정보를 추출이 배열을 반복할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Here is a complete example.</source>
          <target state="translated">전체 예제는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A custom attribute is defined, applied to several entities, and retrieved via reflection.</source>
          <target state="translated">사용자 지정 특성 정의 하 고 여러 엔터티에 적용 하 고 리플렉션을 통해 검색 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Reflection&gt;</source>
          <target state="translated">&lt;xref:System.Reflection&gt;&lt;/xref:System.Reflection&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Attribute&gt;</source>
          <target state="translated">&lt;xref:System.Attribute&gt;&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Visual Basic Programming Guide<ept id="p1">](../../../../visual-basic/programming-guide/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Visual Basic 프로그래밍 가이드<ept id="p1">](../../../../visual-basic/programming-guide/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Retrieving Information Stored in Attributes<ept id="p1">](http://msdn.microsoft.com/library/37dfe4e3-7da0-48b6-a3d9-398981524e1c)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>특성에 저장 된 정보 검색<ept id="p1">](http://msdn.microsoft.com/library/37dfe4e3-7da0-48b6-a3d9-398981524e1c)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Reflection (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/reflection.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>리플렉션 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/reflection.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Attributes (Visual Basic)<ept id="p1">](../../../../visual-basic/language-reference/attributes.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>특성 (Visual Basic)<ept id="p1">](../../../../visual-basic/language-reference/attributes.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Creating Custom Attributes (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/attributes/creating-custom-attributes.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>사용자 지정 특성 (Visual Basic) 만들기<ept id="p1">](../../../../visual-basic/programming-guide/concepts/attributes/creating-custom-attributes.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>