<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1aa97a591fdbdfab931a8b5e4f70ec3c00762332</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\attributes\creating-custom-attributes.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1d789b86e919780564160094a64a319e73a66b48</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">316825e9d601284cc3d4675827b4c83eee53cfab</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_creating-custom-attributes.b87af6c07f6d3bc9e46652007de3b863d9175b6a.ko-kr is different with handoff file name: creating-custom-attributes.b87af6c07f6d3bc9e46652007de3b863d9175b6a.ko-kr.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Creating Custom Attributes (Visual Basic) | Microsoft Docs</source>
          <target state="translated">사용자 지정 특성 (Visual Basic) 만들기 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Creating Custom Attributes (Visual Basic)</source>
          <target state="translated">사용자 지정 특성 (Visual Basic) 만들기</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can create your own custom attributes by defining an attribute class, a class that derives directly or indirectly from &lt;xref:System.Attribute&gt;, which makes identifying attribute definitions in metadata fast and easy.</source>
          <target state="translated">특성 클래스에서 직접 또는 간접적으로 파생 되는 클래스를 정의 하 여 사용자 지정 특성을 만들 수 있습니다 &lt;xref:System.Attribute&gt;, 식별 하는 쉽고 빠르게 메타 데이터의 특성 정의가 있습니다.&lt;/xref:System.Attribute&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Suppose you want to tag types with the name of the programmer who wrote the type.</source>
          <target state="translated">이름으로 형식을 작성 하는 프로그래머의 태그 형식으로 한다고 가정 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You might define a custom <ph id="ph1">`Author`</ph> attribute class:</source>
          <target state="translated">사용자 지정을 정의할 수 있습니다 <ph id="ph1">`Author`</ph> 클래스에 특성:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The class name is the attribute's name, <ph id="ph1">`Author`</ph>.</source>
          <target state="translated">클래스 이름은 특성의 이름이 <ph id="ph1">`Author`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It is derived from <ph id="ph1">`System.Attribute`</ph>, so it is a custom attribute class.</source>
          <target state="translated">파생 된 <ph id="ph1">`System.Attribute`</ph>이므로 사용자 지정 특성 클래스입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The constructor's parameters are the custom attribute's positional parameters.</source>
          <target state="translated">생성자의 매개 변수는 사용자 지정 특성의 위치 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In this example, <ph id="ph1">`name`</ph> is a positional parameter.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`name`</ph> 위치 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Any public read-write fields or properties are named parameters.</source>
          <target state="translated">모든 공용 읽기 / 쓰기 필드 또는 속성에는 매개 변수 이름이 지정 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In this case, <ph id="ph1">`version`</ph> is the only named parameter.</source>
          <target state="translated">이 경우 <ph id="ph1">`version`</ph> 은 유일한 명명 된 매개 변수입니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Note the use of the <ph id="ph1">`AttributeUsage`</ph> attribute to make the <ph id="ph2">`Author`</ph> attribute valid only on class and <ph id="ph3">`Structure`</ph> declarations.</source>
          <target state="translated">사용 하 여는 <ph id="ph1">`AttributeUsage`</ph> 특성 확인을 <ph id="ph2">`Author`</ph> 특성 클래스에 대해서만 유효 하 고 <ph id="ph3">`Structure`</ph> 선언 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>You could use this new attribute as follows:</source>
          <target state="translated">이 새 특성을 다음과 같이 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`AttributeUsage`</ph> has a named parameter, <ph id="ph2">`AllowMultiple`</ph>, with which you can make a custom attribute single-use or multiuse.</source>
          <target state="translated"><ph id="ph1">`AttributeUsage`</ph>명명 된 매개 변수가 <ph id="ph2">`AllowMultiple`</ph>, 있는 하거나 설정할 수 있습니다 사용자 지정 특성 일회용 다용도 사용 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the following code example, a multiuse attribute is created.</source>
          <target state="translated">다음 코드 예제에서는 다용도 특성이 만들어집니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In the following code example, multiple attributes of the same type are applied to a class.</source>
          <target state="translated">다음 코드 예제에서는 동일한 형식의 여러 특성 클래스에 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>If your attribute class contains a property, that property must be read-write.</source>
          <target state="translated">특성 클래스 속성을 포함 하는 경우 해당 속성에는 읽기 / 쓰기 여야 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Reflection&gt;</source>
          <target state="translated">&lt;xref:System.Reflection&gt;&lt;/xref:System.Reflection&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Visual Basic Programming Guide<ept id="p1">](../../../../visual-basic/programming-guide/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Visual Basic 프로그래밍 가이드<ept id="p1">](../../../../visual-basic/programming-guide/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Writing Custom Attributes<ept id="p1">](http://msdn.microsoft.com/library/97216f69-bde8-49fd-ac40-f18c500ef5dc)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>사용자 지정 특성 작성<ept id="p1">](http://msdn.microsoft.com/library/97216f69-bde8-49fd-ac40-f18c500ef5dc)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Reflection (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/reflection.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>리플렉션 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/reflection.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Attributes (Visual Basic)<ept id="p1">](../../../../visual-basic/language-reference/attributes.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>특성 (Visual Basic)<ept id="p1">](../../../../visual-basic/language-reference/attributes.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Accessing Attributes by Using Reflection (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/attributes/accessing-attributes-by-using-reflection.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>(Visual Basic) 리플렉션을 사용 하 여 특성 액세스<ept id="p1">](../../../../visual-basic/programming-guide/concepts/attributes/accessing-attributes-by-using-reflection.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>AttributeUsage (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/attributes/attributeusage.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>AttributeUsage (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/attributes/attributeusage.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>