<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">71b4f64f6deeb334412c87131ccd9480620f284f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\operators\floating-point-division-operator.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9c4e6fe2d68f7279616d50e857366983419b1e62</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a25525c92ef6d214c6c7523e9c084e4d741950b</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_floating-point-division-operator.ec0a020918595b6a2632f5d570d7cd275ec958d9.ko-kr is different with handoff file name: floating-point-division-operator.ec0a020918595b6a2632f5d570d7cd275ec958d9.ko-kr.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>/ Operator (Visual Basic) | Microsoft Docs</source>
          <target state="translated">/ 연산자 (Visual Basic) | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>/ Operator (Visual Basic)</source>
          <target state="translated">/ 연산자(Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Divides two numbers and returns a floating-point result.</source>
          <target state="translated">두 수를 나누고 부동 소수점 결과를 반환합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 요소.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Any numeric expression.</source>
          <target state="translated">임의의 숫자 식입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 요소.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Any numeric expression.</source>
          <target state="translated">임의의 숫자 식입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Supported Types</source>
          <target state="translated">지원 형식</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>All numeric types, including the unsigned and floating-point types and <ph id="ph1">`Decimal`</ph>.</source>
          <target state="translated">부호 없는 및 부동 소수점 형식을 비롯 한 모든 숫자 형식, 및 <ph id="ph1">`Decimal`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">결과</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The result is the full quotient of <ph id="ph1">`expression1`</ph> divided by <ph id="ph2">`expression2`</ph>, including any remainder.</source>
          <target state="translated">결과 전체 몫 <ph id="ph1">`expression1`</ph> 나눈 <ph id="ph2">`expression2`</ph>, 나머지 포함 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>\ Operator (Visual Basic)<ept id="p1">](../../../visual-basic/language-reference/operators/integer-division-operator.md)</ept> returns the integer quotient, which drops the remainder.</source>
          <target state="translated"><bpt id="p1">[</bpt>\ 연산자 (Visual Basic)<ept id="p1">](../../../visual-basic/language-reference/operators/integer-division-operator.md)</ept> 나머지 부분을 삭제 하는 정수 몫을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">주의</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The data type of the result depends on the types of the operands.</source>
          <target state="translated">결과의 데이터 형식 피연산자의 형식에 따라 달라 집니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following table shows how the data type of the result is determined.</source>
          <target state="translated">다음 표에서 결과의 데이터 형식을 결정 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Operand data types</source>
          <target state="translated">피연산자 데이터 형식</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Result data type</source>
          <target state="translated">결과 데이터 형식</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Both expressions are integral data types (<bpt id="p1">[</bpt>SByte<ept id="p1">](../../../visual-basic/language-reference/data-types/sbyte-data-type.md)</ept>, <bpt id="p2">[</bpt>Byte<ept id="p2">](../../../visual-basic/language-reference/data-types/byte-data-type.md)</ept>, <bpt id="p3">[</bpt>Short<ept id="p3">](../../../visual-basic/language-reference/data-types/short-data-type.md)</ept>, <bpt id="p4">[</bpt>UShort<ept id="p4">](../../../visual-basic/language-reference/data-types/ushort-data-type.md)</ept>, <bpt id="p5">[</bpt>Integer<ept id="p5">](../../../visual-basic/language-reference/data-types/integer-data-type.md)</ept>, <bpt id="p6">[</bpt>UInteger<ept id="p6">](../../../visual-basic/language-reference/data-types/uinteger-data-type.md)</ept>, <bpt id="p7">[</bpt>Long<ept id="p7">](../../../visual-basic/language-reference/data-types/long-data-type.md)</ept>, <bpt id="p8">[</bpt>ULong<ept id="p8">](../../../visual-basic/language-reference/data-types/ulong-data-type.md)</ept>)</source>
          <target state="translated">두 식이 모두 정수 계열 데이터 형식 (<bpt id="p1">[</bpt>SByte<ept id="p1">](../../../visual-basic/language-reference/data-types/sbyte-data-type.md)</ept>, <bpt id="p2">[</bpt>바이트<ept id="p2">](../../../visual-basic/language-reference/data-types/byte-data-type.md)</ept>, <bpt id="p3">[</bpt>짧은<ept id="p3">](../../../visual-basic/language-reference/data-types/short-data-type.md)</ept>, <bpt id="p4">[</bpt>UShort<ept id="p4">](../../../visual-basic/language-reference/data-types/ushort-data-type.md)</ept>, <bpt id="p5">[</bpt>정수<ept id="p5">](../../../visual-basic/language-reference/data-types/integer-data-type.md)</ept>, <bpt id="p6">[</bpt>UInteger<ept id="p6">](../../../visual-basic/language-reference/data-types/uinteger-data-type.md)</ept>, <bpt id="p7">[</bpt>긴<ept id="p7">](../../../visual-basic/language-reference/data-types/long-data-type.md)</ept>, <bpt id="p8">[</bpt>ULong<ept id="p8">](../../../visual-basic/language-reference/data-types/ulong-data-type.md)</ept>)</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>One expression is a <bpt id="p1">[</bpt>Single<ept id="p1">](../../../visual-basic/language-reference/data-types/single-data-type.md)</ept> data type and the other is not a <bpt id="p2">[</bpt>Double<ept id="p2">](../../../visual-basic/language-reference/data-types/double-data-type.md)</ept></source>
          <target state="translated">한 식은 <bpt id="p1">[</bpt>단일<ept id="p1">](../../../visual-basic/language-reference/data-types/single-data-type.md)</ept> 데이터 형식을 지정 하 고 다른 한 <bpt id="p2">[</bpt>Double<ept id="p2">](../../../visual-basic/language-reference/data-types/double-data-type.md)</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>One expression is a <bpt id="p1">[</bpt>Decimal<ept id="p1">](../../../visual-basic/language-reference/data-types/decimal-data-type.md)</ept> data type and the other is not a <bpt id="p2">[</bpt>Single<ept id="p2">](../../../visual-basic/language-reference/data-types/single-data-type.md)</ept> or a <bpt id="p3">[</bpt>Double<ept id="p3">](../../../visual-basic/language-reference/data-types/double-data-type.md)</ept></source>
          <target state="translated">한 식은 <bpt id="p1">[</bpt>10 진수<ept id="p1">](../../../visual-basic/language-reference/data-types/decimal-data-type.md)</ept> 데이터 형식을 지정 하 고 다른 한 <bpt id="p2">[</bpt>단일<ept id="p2">](../../../visual-basic/language-reference/data-types/single-data-type.md)</ept> 또는 <bpt id="p3">[</bpt>Double<ept id="p3">](../../../visual-basic/language-reference/data-types/double-data-type.md)</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Either expression is a <bpt id="p1">[</bpt>Double<ept id="p1">](../../../visual-basic/language-reference/data-types/double-data-type.md)</ept> data type</source>
          <target state="translated">두 식 중 하나가 <bpt id="p1">[</bpt>Double<ept id="p1">](../../../visual-basic/language-reference/data-types/double-data-type.md)</ept> 데이터 형식</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Before division is performed, any integral numeric expressions are widened to <ph id="ph1">`Double`</ph>.</source>
          <target state="translated">정수 계열 숫자 식이 모두로 확장 됩니다 나누기를 수행 하기 전에 <ph id="ph1">`Double`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If you assign the result to an integral data type, Visual Basic attempts to convert the result from <ph id="ph1">`Double`</ph> to that type.</source>
          <target state="translated">결과 정수 계열 데이터 형식에 할당 하면 Visual Basic에서 결과 변환 하려고 시도 <ph id="ph1">`Double`</ph> 해당 형식에 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This can throw an exception if the result does not fit in that type.</source>
          <target state="translated">이 결과 해당 형식에 맞지 않을 경우 예외가 throw 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In particular, see "Attempted Division by Zero" on this Help page.</source>
          <target state="translated">이 도움말 페이지에 특히, "0으로 나누기"를 참조 하십시오.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`expression1`</ph> or <ph id="ph2">`expression2`</ph> evaluates to <bpt id="p1">[</bpt>Nothing<ept id="p1">](../../../visual-basic/language-reference/nothing.md)</ept>, it is treated as zero.</source>
          <target state="translated">경우 <ph id="ph1">`expression1`</ph> 또는 <ph id="ph2">`expression2`</ph> 계산 <bpt id="p1">[</bpt>Nothing<ept id="p1">](../../../visual-basic/language-reference/nothing.md)</ept>,&amp;0;으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Attempted Division by Zero</source>
          <target state="translated">0으로 나누기</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`expression2`</ph> evaluates to zero, the <ph id="ph2">`/`</ph> operator behaves differently for different operand data types.</source>
          <target state="translated">경우 <ph id="ph1">`expression2`</ph>&amp;0;으로 계산 된 <ph id="ph2">`/`</ph> 연산자는 여러 가지 피연산자 데이터 형식에 따라 다르게 동작 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The following table shows the possible behaviors.</source>
          <target state="translated">다음 표에서 가능한 동작을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Operand data types</source>
          <target state="translated">피연산자 데이터 형식</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Behavior if <ph id="ph1">`expression2`</ph> is zero</source>
          <target state="translated">동작 하는 경우 <ph id="ph1">`expression2`</ph>&amp;0;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Floating-point (<ph id="ph1">`Single`</ph> or <ph id="ph2">`Double`</ph>)</source>
          <target state="translated">부동 소수점 (<ph id="ph1">`Single`</ph> 또는 <ph id="ph2">`Double`</ph>)</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Returns infinity (&lt;xref:System.Double.PositiveInfinity&gt; or &lt;xref:System.Double.NegativeInfinity&gt;), or &lt;xref:System.Double.NaN&gt; (not a number) if <ph id="ph1">`expression1`</ph> is also zero</source>
          <target state="translated">무한대를 반환 (&lt;xref:System.Double.PositiveInfinity&gt; 또는 &lt;xref:System.Double.NegativeInfinity&gt;), 또는 &lt;xref:System.Double.NaN&gt;(숫자가 아님) 하는 경우 <ph id="ph1">`expression1`</ph> 도&amp;0; 이면&lt;/xref:System.Double.NaN&gt; &lt;/xref:System.Double.NegativeInfinity&gt; &lt;/xref:System.Double.PositiveInfinity&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Throws &lt;xref:System.DivideByZeroException&gt;</source>
          <target state="translated">Throw&lt;xref:System.DivideByZeroException&gt;&lt;/xref:System.DivideByZeroException&gt;</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Integral (signed or unsigned)</source>
          <target state="translated">정수 계열 (정수 또는 부호 없는)</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Attempted conversion back to integral type throws &lt;xref:System.OverflowException&gt; because integral types cannot accept &lt;xref:System.Double.PositiveInfinity&gt;, &lt;xref:System.Double.NegativeInfinity&gt;, or &lt;xref:System.Double.NaN&gt;</source>
          <target state="translated">Throw 정수 계열 형식으로 다시 변환 하려고 &lt;xref:System.OverflowException&gt;정수 계열 형식 받아들일 수 있기 때문에 &lt;xref:System.Double.PositiveInfinity&gt;, &lt;xref:System.Double.NegativeInfinity&gt;, 또는 &lt;xref:System.Double.NaN&gt;&lt;/xref:System.Double.NaN&gt; &lt;/xref:System.Double.NegativeInfinity&gt; &lt;/xref:System.Double.PositiveInfinity&gt; &lt;/xref:System.OverflowException&gt;</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`/`</ph> operator can be <bpt id="p1">*</bpt>overloaded<ept id="p1">*</ept>, which means that a class or structure can redefine its behavior when an operand has the type of that class or structure.</source>
          <target state="translated"><ph id="ph1">`/`</ph> 연산자 될 수 있습니다 <bpt id="p1">*</bpt>오버 로드 된<ept id="p1">*</ept>, 클래스 또는 구조체 수 할의 동작에 해당 클래스 또는 구조체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If your code uses this operator on such a class or structure, be sure you understand its redefined behavior.</source>
          <target state="translated">이 연산자를 사용 하 여 이러한 클래스 또는 구조체에는 코드를 다시 정의 된 동작을 이해 해야 합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Operator Procedures<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>연산자 프로시저<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This example uses the <ph id="ph1">`/`</ph> operator to perform floating-point division.</source>
          <target state="translated">사용 하 여이 예제는 <ph id="ph1">`/`</ph> 연산자를 부동 소수점 나누기 연산을 수행 합니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The result is the quotient of the two operands.</source>
          <target state="translated">결과 두 피연산자의 몫입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOperators#16<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/floating-point-division-operator_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOperators #&amp;16;<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/floating-point-division-operator_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The expressions in the preceding example return values of 2.5 and 3.333333.</source>
          <target state="translated">앞의 예제에서 식에는 2.5 및 3.333333 값을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Note that the result is always floating-point (<ph id="ph1">`Double`</ph>), even though both operands are integer constants.</source>
          <target state="translated">결과 항상 부동 소수점 (<ph id="ph1">`Double`</ph>) 피연산자가 모두 정수 상수는 경우에 있습니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>/= Operator (Visual Basic)<ept id="p1">](../../../visual-basic/language-reference/operators/floating-point-division-assignment-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>/ = 연산자 (Visual Basic)<ept id="p1">](../../../visual-basic/language-reference/operators/floating-point-division-assignment-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>\ Operator (Visual Basic)<ept id="p1">](../../../visual-basic/language-reference/operators/integer-division-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>\ 연산자 (Visual Basic)<ept id="p1">](../../../visual-basic/language-reference/operators/integer-division-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Data Types of Operator Results<ept id="p1">](../../../visual-basic/language-reference/operators/data-types-of-operator-results.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>연산자 결과의 데이터 형식<ept id="p1">](../../../visual-basic/language-reference/operators/data-types-of-operator-results.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Arithmetic Operators<ept id="p1">](../../../visual-basic/language-reference/operators/arithmetic-operators.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>산술 연산자<ept id="p1">](../../../visual-basic/language-reference/operators/arithmetic-operators.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operator Precedence in Visual Basic<ept id="p1">](../../../visual-basic/language-reference/operators/operator-precedence.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Visual Basic의 연산자 우선 순위<ept id="p1">](../../../visual-basic/language-reference/operators/operator-precedence.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operators Listed by Functionality<ept id="p1">](../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>기능별 연산자 목록<ept id="p1">](../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Arithmetic Operators in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/arithmetic-operators.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Visual Basic의 산술 연산자<ept id="p1">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/arithmetic-operators.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>