<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b181b18a28a8b92a392fffdc10e08690d54f545</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\operators\function-expression.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e1763aee995853adc0e68e511d4e95b9db0352ee</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5d5ce2e9cc737f8579efc7bd8eeaa4b181c75b18</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_function-expression.c56fa0cc90f47971d821223583d33f30b17a66c4.ko-kr is different with handoff file name: function-expression.c56fa0cc90f47971d821223583d33f30b17a66c4.ko-kr.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Function Expression (Visual Basic) | Microsoft Docs</source>
          <target state="translated">함수 식 (Visual Basic) | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Function Expression (Visual Basic)</source>
          <target state="translated">함수 식(Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Declares the parameters and code that define a function lambda expression.</source>
          <target state="translated">함수가 람다 식을 정의 하는 코드와 매개 변수를 선언 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="translated">용어</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">정의</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택적 요소.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A list of local variable names that represent the parameters of this procedure.</source>
          <target state="translated">이 절차의 매개 변수를 나타내는 로컬 변수 이름의 목록입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The parentheses must be present even when the list is empty.</source>
          <target state="translated">괄호는 목록이 비어 있는 경우에 제공 되어야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Parameter List<ept id="p1">](../../../visual-basic/language-reference/statements/parameter-list.md)</ept>.</source>
          <target state="translated">참조 <bpt id="p1">[</bpt>매개 변수 목록<ept id="p1">](../../../visual-basic/language-reference/statements/parameter-list.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 요소.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A single expression.</source>
          <target state="translated">단일 식입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The type of the expression is the return type of the function.</source>
          <target state="translated">식의 형식이 함수 반환 형식입니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 요소.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A list of statements that returns a value by using the <ph id="ph1">`Return`</ph> statement.</source>
          <target state="translated">사용 하 여 값을 반환 하는 문 목록이 <ph id="ph1">`Return`</ph> 문입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>(See <bpt id="p1">[</bpt>Return Statement<ept id="p1">](../../../visual-basic/language-reference/statements/return-statement.md)</ept>.) The type of the value returned is the return type of the function.</source>
          <target state="translated">(참조 <bpt id="p1">[</bpt>Return 문<ept id="p1">](../../../visual-basic/language-reference/statements/return-statement.md)</ept>.) 반환 된 값 형식은 함수의 반환 형식을 표시 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">주의</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>lambda expression<ept id="p1">*</ept> is a function without a name that calculates and returns a value.</source>
          <target state="translated">A <bpt id="p1">*</bpt>람다 식을<ept id="p1">*</ept> 계산 하 고 값을 반환 하는 이름이 없는 함수입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You can use a lambda expression anywhere you can use a delegate type, except as an argument to <ph id="ph1">`RemoveHandler`</ph>.</source>
          <target state="translated">람다 식을 사용 하 여 인수를 제외 하 고 대리자를 사용할 수는 아무 곳 이나 <ph id="ph1">`RemoveHandler`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For more information about delegates, and the use of lambda expressions with delegates, see <bpt id="p1">[</bpt>Delegate Statement<ept id="p1">](../../../visual-basic/language-reference/statements/delegate-statement.md)</ept> and <bpt id="p2">[</bpt>Relaxed Delegate Conversion<ept id="p2">](../../../visual-basic/programming-guide/language-features/delegates/relaxed-delegate-conversion.md)</ept>.</source>
          <target state="translated">대리자 및 대리자와 함께 람다 식을 사용 하는 방법에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>대리자 문을<ept id="p1">](../../../visual-basic/language-reference/statements/delegate-statement.md)</ept> 및 <bpt id="p2">[</bpt>완화 된 대리자 변환<ept id="p2">](../../../visual-basic/programming-guide/language-features/delegates/relaxed-delegate-conversion.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Lambda Expression Syntax</source>
          <target state="translated">람다 식 구문</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The syntax of a lambda expression resembles that of a standard function.</source>
          <target state="translated">람다 식의 구문에는 표준 함수의 유사합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The differences are as follows:</source>
          <target state="translated">차이점은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A lambda expression does not have a name.</source>
          <target state="translated">람다 식에 이름이 없습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Lambda expressions cannot have modifiers, such as <ph id="ph1">`Overloads`</ph> or <ph id="ph2">`Overrides`</ph>.</source>
          <target state="translated">람다 식은와 같은 한정자를 가질 수 없습니다 <ph id="ph1">`Overloads`</ph> 또는 <ph id="ph2">`Overrides`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Lambda expressions do not use an <ph id="ph1">`As`</ph> clause to designate the return type of the function.</source>
          <target state="translated">람다 식 사용 하지 않는 <ph id="ph1">`As`</ph> 절을 함수의 반환 형식을 지정 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Instead, the type is inferred from the value that the body of a single-line lambda expression evaluates to, or the return value of a multiline lambda expression.</source>
          <target state="translated">대신, 형식은 한 줄 람다 식의 본문이 평가 하는 값 또는 여러 줄 람다 식의 반환 값에서 유추 됩니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For example, if the body of a single-line lambda expression is <ph id="ph1">`Where cust.City = "London"`</ph>, its return type is <ph id="ph2">`Boolean`</ph>.</source>
          <target state="translated">예를 들어 한 줄 람다 식의 본문이 <ph id="ph1">`Where cust.City = "London"`</ph>, 해당 반환 형식은 <ph id="ph2">`Boolean`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The body of a single-line lambda expression must be an expression, not a statement.</source>
          <target state="translated">한 줄 람다 식의 본문에는 문이 아닌 식 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The body can consist of a call to a function procedure, but not a call to a sub procedure.</source>
          <target state="translated">Function 프로시저를 호출 하지만 sub 프로시저를 호출 하지 본문 구성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Either all parameters must have specified data types or all must be inferred.</source>
          <target state="translated">데이터 형식 중 하나 또는 모두를 유추 합니다 모든 매개 변수에 지정 해야 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Optional and Paramarray parameters are not permitted.</source>
          <target state="translated">선택 사항 및 Paramarray 매개 변수가 허용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Generic parameters are not permitted.</source>
          <target state="translated">제네릭 매개 변수가 허용 되지 않습니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The following examples show two ways to create simple lambda expressions.</source>
          <target state="translated">다음 예제에서는 간단한 람다 식을 만드는 두 가지 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The first uses a <ph id="ph1">`Dim`</ph> to provide a name for the function.</source>
          <target state="translated">사용 하는 첫 번째는 <ph id="ph1">`Dim`</ph> 함수에 대 한 이름을 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>To call the function, you send in a value for the parameter.</source>
          <target state="translated">함수를 호출 하는 매개 변수 값에 보냅니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas#1<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/function-expression_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas #&amp;1;<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/function-expression_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas#2<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/function-expression_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas #&amp;2;<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/function-expression_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Alternatively, you can declare and run the function at the same time.</source>
          <target state="translated">또는 선언 하 고 동시에 함수를 실행할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas#3<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/function-expression_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas #&amp;3;<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/function-expression_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Following is an example of a lambda expression that increments its argument and returns the value.</source>
          <target state="translated">다음은 인수를 증가 시키고 값을 반환 하는 람다 식의 예입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The example shows both the single-line and multiline lambda expression syntax for a function.</source>
          <target state="translated">함수에 대 한 두는 한 줄 및 여러 줄 람다 식 구문을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more examples, see <bpt id="p1">[</bpt>Lambda Expressions<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md)</ept>.</source>
          <target state="translated">더 많은 예제를 참조 하십시오. <bpt id="p1">[</bpt>람다 식<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas#14<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/function-expression_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrLambdas #&amp;14;<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/function-expression_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Lambda expressions underlie many of the query operators in <ph id="ph1">[!INCLUDE[vbteclinqext](../../../csharp/getting-started/includes/vbteclinqext_md.md)]</ph>, and can be used explicitly in method-based queries.</source>
          <target state="translated">람다 식에 있는 쿼리 연산자의 여러 기반이 <ph id="ph1">[!INCLUDE[vbteclinqext](../../../csharp/getting-started/includes/vbteclinqext_md.md)]</ph>, 메서드 기반 쿼리를 명시적으로 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following example shows a typical <ph id="ph1">[!INCLUDE[vbteclinq](../../../csharp/includes/vbteclinq_md.md)]</ph> query, followed by the translation of the query into method format.</source>
          <target state="translated">다음 예제에서는 일반적인 <ph id="ph1">[!INCLUDE[vbteclinq](../../../csharp/includes/vbteclinq_md.md)]</ph> 다음의 경우 쿼리 메서드 형식을 쿼리 합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>For more information about query methods, see <bpt id="p1">[</bpt>Queries<ept id="p1">](../../../visual-basic/language-reference/queries/queries.md)</ept>.</source>
          <target state="translated">쿼리 메서드에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>쿼리<ept id="p1">](../../../visual-basic/language-reference/queries/queries.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For more information about standard query operators, see <bpt id="p1">[</bpt>Standard Query Operators Overview<ept id="p1">](http://msdn.microsoft.com/library/24cda21e-8af8-4632-b519-c404a839b9b2)</ept>.</source>
          <target state="translated">표준 쿼리 연산자에 대 한 자세한 내용은 참조 <bpt id="p1">[</bpt>표준 쿼리 연산자 개요<ept id="p1">](http://msdn.microsoft.com/library/24cda21e-8af8-4632-b519-c404a839b9b2)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Function Statement<ept id="p1">](../../../visual-basic/language-reference/statements/function-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Function 문<ept id="p1">](../../../visual-basic/language-reference/statements/function-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Lambda Expressions<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>람다 식<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/lambda-expressions.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operators and Expressions<ept id="p1">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>연산자 및 식<ept id="p1">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Statements<ept id="p1">](../../../visual-basic/programming-guide/language-features/statements.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>문<ept id="p1">](../../../visual-basic/programming-guide/language-features/statements.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Value Comparisons<ept id="p1">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/value-comparisons.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>값 비교<ept id="p1">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/value-comparisons.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Boolean Expressions<ept id="p1">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/boolean-expressions.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>부울 식<ept id="p1">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/boolean-expressions.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>If Operator<ept id="p1">](../../../visual-basic/language-reference/operators/if-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>경우 연산자<ept id="p1">](../../../visual-basic/language-reference/operators/if-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Relaxed Delegate Conversion<ept id="p1">](../../../visual-basic/programming-guide/language-features/delegates/relaxed-delegate-conversion.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>완화된 대리자 변환<ept id="p1">](../../../visual-basic/programming-guide/language-features/delegates/relaxed-delegate-conversion.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>