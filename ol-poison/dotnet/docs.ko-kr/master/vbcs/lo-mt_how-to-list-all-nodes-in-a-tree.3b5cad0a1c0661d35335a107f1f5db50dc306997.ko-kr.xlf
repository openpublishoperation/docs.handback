<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6e3aa8df843b8b601b2724f6de48d66d1a806db4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\how-to-list-all-nodes-in-a-tree.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1d50d07996961b2b0b9ec21461c491cc5caad15</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">908dfb02170d3aeaeffc99ea8b3e6f8af3f0f694</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_how-to-list-all-nodes-in-a-tree.3b5cad0a1c0661d35335a107f1f5db50dc306997.ko-kr is different with handoff file name: how-to-list-all-nodes-in-a-tree.3b5cad0a1c0661d35335a107f1f5db50dc306997.ko-kr.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: List All Nodes in a Tree (Visual Basic) | Microsoft Docs</source>
          <target state="translated">방법: (Visual Basic) 트리의 모든 노드 나열 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: List All Nodes in a Tree (Visual Basic)</source>
          <target state="translated">방법: (Visual Basic) 트리의 모든 노드 나열</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Sometimes it is helpful to list all nodes in a tree.</source>
          <target state="translated">경우에 따라 트리의 모든 노드를 나열하는 것이 유용합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This can be useful when learning exactly how a method or property affects the tree.</source>
          <target state="translated">이것은 메서드나 속성이 트리에 미치는 영향을 정확히 확인할 때 유용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>One approach to listing all nodes in a textual form is to generate an XPath expression that exactly and specifically identifies any node in the tree.</source>
          <target state="translated">텍스트 형식으로 모든 노드를 나열하는 한 가지 방법은 트리의 노드를 정확하고 특정하게 식별하는 XPath 식을 생성하는 것입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>It is not particularly helpful to execute XPath expressions using <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>을 사용하여 XPath 식을 실행하는 것은 특히 유용하지 않습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>XPath expressions have poorer performance than <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> queries, and <ph id="ph2">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> queries are much more powerful.</source>
          <target state="translated">XPath 식은 <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> 쿼리보다 성능이 낮으며 <ph id="ph2">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> 쿼리가 훨씬 더 강력합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>However, as a way to identify nodes in the XML tree, XPath works well.</source>
          <target state="translated">그러나 XML 트리의 노드를 식별하는 방법으로 XPath는 효과적으로 작동합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This example shows an function named <ph id="ph1">`GetXPath`</ph> that generates a specific XPath expression for any node in the XML tree.</source>
          <target state="translated">이 예제에서는 XML 트리의 노드에 대한 특정 XPath 식을 생성하는 <ph id="ph1">`GetXPath`</ph>라는 함수를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>It generates appropriate XPath expressions even when nodes are in a namespace.</source>
          <target state="translated">이 함수는 노드가 네임스페이스에 있는 경우에도 적절한 XPath 식을 생성합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The XPath expressions are generated by using namespace prefixes.</source>
          <target state="translated">XPath 식은 네임스페이스 접두사를 사용하여 생성됩니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The example then creates a small XML tree that contains an example of several types of nodes.</source>
          <target state="translated">그런 다음 이 예제에서는 몇 가지 형식의 노드 예가 포함된 작은 XML 트리를 만든 후</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It then iterates through the descendant nodes and prints the XPath expression for each node.</source>
          <target state="translated">하위 노드를 반복하고 각 노드에 대한 XPath 식을 출력합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You will notice that the XML declaration is not a node in the tree.</source>
          <target state="translated">XML 선언은 트리의 노드가 아닌 것을 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following is an XML file that contains several types of nodes:</source>
          <target state="translated">몇 가지 형식의 노드가 포함된 XML 파일은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following is the list of nodes in the above XML tree, expressed as XPath expressions:</source>
          <target state="translated">XPath 식으로 표현된, XML 트리 위의 노드 목록은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">이 예제는 다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Advanced Query Techniques (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/advanced-query-techniques-linq-to-xml.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>고급 쿼리 기술 (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/advanced-query-techniques-linq-to-xml.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>