<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9865e2d7d3786d289add3fa63b3db777317facdf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\delegates\how-to-pass-procedures-to-another-procedure.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f2e93e71fa4de7936f94c84ec8cbc9999b81ef39</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c532db6fb779fd6a43f38fda4ea17f2902cdf47</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_how-to-pass-procedures-to-another-procedure.3306168cd4b585f2848da64a7771199b54381a18.ko-kr is different with handoff file name: how-to-pass-procedures-to-another-procedure.3306168cd4b585f2848da64a7771199b54381a18.ko-kr.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Pass Procedures to Another Procedure in Visual Basic | Microsoft Docs</source>
          <target state="translated">방법: 프로시저에 Visual Basic에서 다른 프로시저 전달 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Pass Procedures to Another Procedure in Visual Basic</source>
          <target state="translated">방법: Visual Basic에서 프로시저에 다른 프로시저 전달</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This example shows how to use delegates to pass a procedure to another procedure.</source>
          <target state="translated">이 예제에서는 대리자를 사용 하 여 프로시저에 다른 프로시저 전달 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>A delegate is a type that you can use like any other type in <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</source>
          <target state="translated">대리자는 형식에서 다른 형식 처럼 사용할 수 있는 <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`AddressOf`</ph> operator returns a delegate object when applied to a procedure name.</source>
          <target state="translated"><ph id="ph1">`AddressOf`</ph> 연산자 프로시저 이름에 적용 될 때 대리자 개체를 반환 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This example has a procedure with a delegate parameter that can take a reference to another procedure, obtained with the <ph id="ph1">`AddressOf`</ph> operator.</source>
          <target state="translated">이 예제에 다른 프로시저를 사용 하 여 얻은에 대 한 참조를 사용할 수 있는 대리자 매개 변수가 있는 프로시저는 <ph id="ph1">`AddressOf`</ph> 연산자입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Create the delegate and matching procedures</source>
          <target state="translated">대리자 및 일치 하는 프로시저 만들기</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Create a delegate named <ph id="ph1">`MathOperator`</ph>.</source>
          <target state="translated">명명 된 대리자를 만들고 <ph id="ph1">`MathOperator`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates#1<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates #&amp;1;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Create a procedure named <ph id="ph1">`AddNumbers`</ph> with parameters and return value that match those of <ph id="ph2">`MathOperator`</ph>, so that the signatures match.</source>
          <target state="translated">라는 프로시저를 만들어 <ph id="ph1">`AddNumbers`</ph> 매개 변수 및 반환 값의 일치 하는 <ph id="ph2">`MathOperator`</ph>서명이 일치 되도록 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates#2<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates #&amp;2;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Create a procedure named <ph id="ph1">`SubtractNumbers`</ph> with a signature that matches <ph id="ph2">`MathOperator`</ph>.</source>
          <target state="translated">라는 프로시저를 만들어 <ph id="ph1">`SubtractNumbers`</ph> 일치 하는 서명을 사용 하 여 <ph id="ph2">`MathOperator`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates#3<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates #&amp;3;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Create a procedure named <ph id="ph1">`DelegateTest`</ph> that takes a delegate as a parameter.</source>
          <target state="translated">라는 프로시저를 만들어 <ph id="ph1">`DelegateTest`</ph> 대리자를 매개 변수로 사용 합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>This procedure can accept a reference to <ph id="ph1">`AddNumbers`</ph> or <ph id="ph2">`SubtractNumbers`</ph>, because their signatures match the <ph id="ph3">`MathOperator`</ph> signature.</source>
          <target state="translated">이 절차에 대 한 참조를 수락할 수 있는 <ph id="ph1">`AddNumbers`</ph> 또는 <ph id="ph2">`SubtractNumbers`</ph>해당 서명이 일치 하기 때문에는 <ph id="ph3">`MathOperator`</ph> 서명 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates#4<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates #&amp;4;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Create a procedure named <ph id="ph1">`Test`</ph> that calls <ph id="ph2">`DelegateTest`</ph> once with the delegate for <ph id="ph3">`AddNumbers`</ph> as a parameter, and again with the delegate for <ph id="ph4">`SubtractNumbers`</ph> as a parameter.</source>
          <target state="translated">라는 프로시저를 만듭니다 <ph id="ph1">`Test`</ph> 호출 하는 <ph id="ph2">`DelegateTest`</ph> 에 대 한 대리자를 두 번 <ph id="ph3">`AddNumbers`</ph> 및 다시에 대 한 대리자를 매개 변수로 <ph id="ph4">`SubtractNumbers`</ph> 매개 변수로 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates#5<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrDelegates #&amp;5;<ept id="p2">](../../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/how-to-pass-procedures-to-another-procedure_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`Test`</ph> is called, it first displays the result of <ph id="ph2">`AddNumbers`</ph> acting on <ph id="ph3">`5`</ph> and <ph id="ph4">`3`</ph>, which is 8.</source>
          <target state="translated">때 <ph id="ph1">`Test`</ph> 은 호출 먼저 표시의 결과 <ph id="ph2">`AddNumbers`</ph> 실행 <ph id="ph3">`5`</ph> 및 <ph id="ph4">`3`</ph>은 8입니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Then the result of <ph id="ph1">`SubtractNumbers`</ph> acting on <ph id="ph2">`9`</ph> and <ph id="ph3">`3`</ph> is displayed, which is 6.</source>
          <target state="translated">결과 <ph id="ph1">`SubtractNumbers`</ph> 작업할 <ph id="ph2">`9`</ph> 및 <ph id="ph3">`3`</ph> 표시 되 면 6이 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Delegates<ept id="p1">](../../../../visual-basic/programming-guide/language-features/delegates/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>대리자<ept id="p1">](../../../../visual-basic/programming-guide/language-features/delegates/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>AddressOf Operator<ept id="p1">](../../../../visual-basic/language-reference/operators/addressof-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>AddressOf 연산자<ept id="p1">](../../../../visual-basic/language-reference/operators/addressof-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Delegate Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/delegate-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Delegate 문<ept id="p1">](../../../../visual-basic/language-reference/statements/delegate-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Invoke a Delegate Method<ept id="p1">](../../../../visual-basic/programming-guide/language-features/delegates/how-to-invoke-a-delegate-method.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>방법: 대리자 메서드 호출<ept id="p1">](../../../../visual-basic/programming-guide/language-features/delegates/how-to-invoke-a-delegate-method.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>