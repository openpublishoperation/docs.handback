<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a9edd260e9bc36449445ee835648573c7bc9c229</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\how-to-project-an-anonymous-type.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4fba46278ece7c104673917e8be37c0656794bdf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7a28b1e766f75a6f207cdbcca1475e56a6fbf17</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_how-to-project-an-anonymous-type.a3e6ae420be08d161685c8831813dbaca3a249d2.ko-kr is different with handoff file name: how-to-project-an-anonymous-type.a3e6ae420be08d161685c8831813dbaca3a249d2.ko-kr.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Project an Anonymous Type (Visual Basic) | Microsoft Docs</source>
          <target state="translated">방법: 익명 형식 (Visual Basic) 프로젝트 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Project an Anonymous Type (Visual Basic)</source>
          <target state="translated">방법: 익명 형식 (Visual Basic) 프로젝트</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In some cases you might want to project a query to a new type, even though you know you will only use this type for a short while.</source>
          <target state="translated">새 형식을 잠깐 동안만 사용할 경우에도 필요에 따라 쿼리를 해당 형식으로 프로젝션하려고 할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It is a lot of extra work to create a new type just to use in the projection.</source>
          <target state="translated">프로젝션에서만 사용하기 위해 새 형식을 만드는 것은 비효율적입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A more efficient approach in this case is to project to an anonymous type.</source>
          <target state="translated">이 경우 더 효율적인 방법은 익명 형식을 프로젝션하는 것입니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Anonymous types allow you to define a class, then declare and initialize an object of that class, without giving the class a name.</source>
          <target state="translated">익명 형식을 사용하면 클래스를 정의한 다음 클래스의 이름을 지정하지 않고도 클래스의 개체를 선언하고 초기화할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Anonymous types are the C# implementation of the mathematical concept of a <bpt id="p1">*</bpt>tuple<ept id="p1">*</ept>.</source>
          <target state="translated">익명 형식은의 수학적 개념의 C# 구현 되는 <bpt id="p1">*</bpt>튜플<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The mathematical term tuple originated from the sequence single, double, triple, quadruple, quintuple, n-tuple.</source>
          <target state="translated">수학 용어인 튜플은 단일(single), 이중(double),&amp;3;중(triple),&amp;4;중(quadruple),&amp;5;중(quintuple), n중(n-tuple)에서 유래되었습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It refers to a finite sequence of objects, each of a specific type.</source>
          <target state="translated">튜플은 각각 특정 형식으로 되어 있는 개체의 유한 시퀀스를 의미합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Sometimes this is called a list of name/value pairs.</source>
          <target state="translated">이를 이름/값 쌍의 목록이라고 하기도 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, the contents of an address in the <bpt id="p1">[</bpt>Sample XML File: Typical Purchase Order (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-linq-to-xml.md)</ept> XML document could be expressed as follows:</source>
          <target state="translated">예를 들어 주소에서의 내용을 <bpt id="p1">[</bpt>샘플 XML 파일: 일반적인 구매 주문 (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-linq-to-xml.md)</ept> XML 문서를 다음과 같이 표현 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you create an instance of an anonymous type, it is convenient to think of it as creating a tuple of order n.</source>
          <target state="translated">익명 형식의 인스턴스를 만드는 경우 n번째 튜플을 만드는 것으로 생각하면 편리합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you write a query that creates a tuple in the <ph id="ph1">`Select`</ph> clause, the query returns an <ph id="ph2">`IEnumerable`</ph> of the tuple.</source>
          <target state="translated"><ph id="ph1">`Select`</ph> 절에서 튜플을 만드는 쿼리를 작성하면 쿼리에서 튜플의 <ph id="ph2">`IEnumerable`</ph>을 반환합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In this example, the <ph id="ph1">`Select`</ph> clause projects an anonymous type.</source>
          <target state="translated">이 예제에서 <ph id="ph1">`Select`</ph> 절은 익명 형식을 프로젝션한 다음</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The example then uses <ph id="ph1">`Dim`</ph> to create the <ph id="ph2">`IEnumerable`</ph> object.</source>
          <target state="translated"><ph id="ph1">`Dim`</ph>을 사용하여 <ph id="ph2">`IEnumerable`</ph> 개체를 만듭니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Within the <ph id="ph1">`For Each`</ph> loop, the iteration variable becomes an instance of the anonymous type created in the query expression.</source>
          <target state="translated"><ph id="ph1">`For Each`</ph> 루프에서 반복 변수는 쿼리 식에서 만든 익명 형식의 인스턴스가 됩니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This example uses the following XML document: <bpt id="p1">[</bpt>Sample XML File: Customers and Orders (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-customers-and-orders-linq-to-xml.md)</ept>.</source>
          <target state="translated">이 예제에서는 다음 XML 문서: <bpt id="p1">[</bpt>샘플 XML 파일: Customers 및 Orders (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-customers-and-orders-linq-to-xml.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This code produces the following output:</source>
          <target state="translated">이 코드의 결과는 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Projections and Transformations (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/projections-and-transformations-linq-to-xml.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>프로젝션 및 변환 (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/projections-and-transformations-linq-to-xml.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>