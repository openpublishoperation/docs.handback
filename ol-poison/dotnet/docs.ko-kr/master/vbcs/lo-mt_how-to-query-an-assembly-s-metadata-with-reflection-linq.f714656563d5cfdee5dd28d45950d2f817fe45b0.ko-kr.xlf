<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c1bc26d7b23135dd45ad58ea0bd2510b7157448</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\how-to-query-an-assembly-s-metadata-with-reflection-linq.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5e3b0b5b14c907eda23d4bcbdcce29fe9cf0d2e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3fdf987bf518ffd6d818ba46043d437cb65cb2f7</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_how-to-query-an-assembly-s-metadata-with-reflection-linq.f714656563d5cfdee5dd28d45950d2f817fe45b0.ko-kr is different with handoff file name: how-to-query-an-assembly-s-metadata-with-reflection-linq.f714656563d5cfdee5dd28d45950d2f817fe45b0.ko-kr.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Query An Assembly&amp;#39;s Metadata with Reflection (LINQ) (Visual Basic) | Microsoft Docs</source>
          <target state="translated">방법: 리플렉션 (LINQ) (Visual Basic) 사용 하 여 어셈블리의 메타 데이터 쿼리 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Query An Assembly&amp;#39;s Metadata with Reflection (LINQ) (Visual Basic)</source>
          <target state="translated">방법: 리플렉션 (LINQ) (Visual Basic) 사용 하 여 어셈블리의 메타 데이터 쿼리</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The following example shows how LINQ can be used with reflection to retrieve specific metadata about methods that match a specified search criterion.</source>
          <target state="translated">다음 예제에서는 지정 된 검색 조건과 일치 하는 방법에 대 한 특정 메타 데이터를 검색할 리플렉션을 사용 하 여 LINQ에 사용할 수는 방법을 보여줍니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In this case, the query will find the names of all the methods in the assembly that return enumerable types such as arrays.</source>
          <target state="translated">이 경우에 쿼리는 배열과 같은 열거 가능한 형식을 반환 하는 어셈블리의 모든 메서드의 이름을 검색 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The example uses the &lt;xref:System.Reflection.Assembly.GetTypes%2A&gt; method to return an array of types in the specified assembly.</source>
          <target state="translated">이 예제에서는 사용 된 &lt;xref:System.Reflection.Assembly.GetTypes%2A&gt;메서드를 지정된 된 어셈블리에서 형식의 배열을 반환 합니다.&lt;/xref:System.Reflection.Assembly.GetTypes%2A&gt;</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>Where Clause<ept id="p1">](../../../../visual-basic/language-reference/queries/where-clause.md)</ept> filter is applied so that only public types are returned.</source>
          <target state="translated"><bpt id="p1">[</bpt>Where 절<ept id="p1">](../../../../visual-basic/language-reference/queries/where-clause.md)</ept> public 형식만 반환 되도록 필터 적용 됩니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For each public type, a subquery is generated by using the &lt;xref:System.Reflection.MethodInfo&gt; array that is returned from the &lt;xref:System.Type.GetMethods%2A&gt; call.</source>
          <target state="translated">각 공용 형식에 대해 하위 쿼리를 사용 하 여 생성 됩니다는 &lt;xref:System.Reflection.MethodInfo&gt;배열에서 반환 되는 &lt;xref:System.Type.GetMethods%2A&gt;호출.&lt;/xref:System.Type.GetMethods%2A&gt; &lt;/xref:System.Reflection.MethodInfo&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>These results are filtered to return only those methods whose return type is an array or else a type that implements &lt;xref:System.Collections.Generic.IEnumerable%601&gt;.</source>
          <target state="translated">이러한 결과는 해당 반환 형식이 &lt;xref:System.Collections.Generic.IEnumerable%601&gt;.&lt;/xref:System.Collections.Generic.IEnumerable%601&gt; 를 구현 하는 형식을 그렇지 배열 하는 방법에만 반환 하는 필터링 됩니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Finally, these results are grouped by using the type name as a key.</source>
          <target state="translated">마지막으로, 이러한 결과 형식 이름을 키로 사용 하 여 그룹화 됩니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Compiling the Code</source>
          <target state="translated">코드 컴파일</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Create a project that targets the .NET Framework version 3.5 or higher with a reference to System.Core.dll and a <ph id="ph1">`Imports`</ph> statement for the System.Linq namespace.</source>
          <target state="translated">.NET Framework 버전 3.5 이상 System.Core.dll에 대 한 참조를 대상으로 하는 프로젝트 만들기 및 <ph id="ph1">`Imports`</ph> 는 System.Linq 네임 스페이스에 대 한 정보입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ to Objects (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-objects.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>LINQ to Objects (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-objects.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>