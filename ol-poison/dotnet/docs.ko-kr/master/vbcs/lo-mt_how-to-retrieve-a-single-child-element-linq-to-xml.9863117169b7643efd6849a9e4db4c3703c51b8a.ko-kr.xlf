<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e96e2e2270f16364b0a26a0b4f17c0d96d7c38b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\how-to-retrieve-a-single-child-element-linq-to-xml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bd5cb6d7f4afbc44cf74f2976c9c476ca5d47801</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b16f8f4de04ee060bd48b545686dec2a18171417</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_how-to-retrieve-a-single-child-element-linq-to-xml.9863117169b7643efd6849a9e4db4c3703c51b8a.ko-kr is different with handoff file name: how-to-retrieve-a-single-child-element-linq-to-xml.9863117169b7643efd6849a9e4db4c3703c51b8a.ko-kr.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Retrieve a Single Child Element (LINQ to XML) (Visual Basic) | Microsoft Docs</source>
          <target state="translated">방법: 단일 자식 요소 (LINQ to XML) 검색 (Visual Basic) | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Retrieve a Single Child Element (LINQ to XML) (Visual Basic)</source>
          <target state="translated">방법: 단일 자식 요소 (LINQ to XML) 검색 (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic explains how to retrieve a single child element, given the name of the child element.</source>
          <target state="translated">이 항목에서는 자식 요소의 이름이 제공되는 경우 단일 자식 요소를 검색하는 방법에 대해 설명합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>When you know the name of the child element and that there is only one element that has this name, it can be convenient to retrieve just one element, instead of a collection.</source>
          <target state="translated">자식 요소의 이름과 해당 이름을 가진 요소가 하나만 있음을 알고 있는 경우 컬렉션 대신 한 요소만 검색하는 것이 편리할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Linq.XContainer.Element%2A&gt; method returns the first child &lt;xref:System.Xml.Linq.XElement&gt; with the specified &lt;xref:System.Xml.Linq.XName&gt;.</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XContainer.Element%2A&gt;메서드가 반환 된 첫 번째 자식 &lt;xref:System.Xml.Linq.XElement&gt; &lt;xref:System.Xml.Linq.XName&gt;.&lt;/xref:System.Xml.Linq.XName&gt; 지정&lt;/xref:System.Xml.Linq.XElement&gt; &lt;/xref:System.Xml.Linq.XContainer.Element%2A&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If you want to retrieve a single child element in Visual Basic, a common approach is to use the XML property, and then retrieve the first element using array indexer notation.</source>
          <target state="translated">Visual Basic에서 단일 자식 요소를 검색하려는 경우 일반적인 방법은 XML 속성을 사용한 다음 배열 인덱서 표기법을 사용하여 첫 번째 요소를 검색하는 것입니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the use of the &lt;xref:System.Xml.Linq.XContainer.Element%2A&gt; method.</source>
          <target state="translated">다음 예제에서는 &lt;xref:System.Xml.Linq.XContainer.Element%2A&gt;메서드.&lt;/xref:System.Xml.Linq.XContainer.Element%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This example takes the XML tree named <ph id="ph1">`po`</ph> and finds the first element named <ph id="ph2">`Comment`</ph>.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`po`</ph>라는 XML 트리를 가져와서 <ph id="ph2">`Comment`</ph>라는 첫 번째 요소를 찾습니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The Visual Basic example shows using array indexer notation to retrieve a single element.</source>
          <target state="translated">Visual Basic 예제에서는 배열 인덱서 표기법을 사용하여 단일 요소를 검색하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This example uses the following XML document: <bpt id="p1">[</bpt>Sample XML File: Typical Purchase Order (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-linq-to-xml.md)</ept>.</source>
          <target state="translated">이 예제에서는 다음 XML 문서: <bpt id="p1">[</bpt>샘플 XML 파일: 일반적인 구매 주문 (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-linq-to-xml.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">이 예제는 다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The following example shows the same code for XML that is in a namespace.</source>
          <target state="translated">다음 예제에서는 네임스페이스에 있는 XML에 대한 동일한 코드를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Working with XML Namespaces (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>XML 네임 스페이스 (Visual Basic) 작업<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/working-with-xml-namespaces.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This example uses the following XML document: <bpt id="p1">[</bpt>Sample XML File: Typical Purchase Order in a Namespace<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-in-a-namespace.md)</ept>.</source>
          <target state="translated">이 예제에서는 다음 XML 문서를 사용 하 여: <bpt id="p1">[</bpt>샘플 XML 파일: 일반적인 구매 주문에는 Namespace<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-in-a-namespace.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">이 예제는 다음과 같은 출력을 생성합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ to XML Axes (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-axes.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>LINQ to XML 축 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-axes.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>