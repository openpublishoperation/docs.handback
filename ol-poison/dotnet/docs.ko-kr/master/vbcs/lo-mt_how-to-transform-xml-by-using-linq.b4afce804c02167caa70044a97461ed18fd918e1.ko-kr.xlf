<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f97466727064ea275c051b5916b0fb297e9e23a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\xml\how-to-transform-xml-by-using-linq.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a771d8dd5b30cfe55d95bcf6bfe0cd77dd56535b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5d55cb5c06d611e9051cc38eac643df6075ec0f9</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_how-to-transform-xml-by-using-linq.b4afce804c02167caa70044a97461ed18fd918e1.ko-kr is different with handoff file name: how-to-transform-xml-by-using-linq.b4afce804c02167caa70044a97461ed18fd918e1.ko-kr.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Transform XML by Using LINQ (Visual Basic) | Microsoft Docs</source>
          <target state="translated">방법: LINQ (Visual Basic)를 사용 하 여 XML 변환 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Transform XML by Using LINQ (Visual Basic)</source>
          <target state="translated">방법: LINQ를 사용하여 XML 변형(Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Literals<ept id="p1">](../../../../visual-basic/language-reference/xml-literals/index.md)</ept> make it easy to read XML from one source and transform it to a new XML format.</source>
          <target state="translated"><bpt id="p1">[</bpt>XML 리터럴<ept id="p1">](../../../../visual-basic/language-reference/xml-literals/index.md)</ept> 쉽게 한 소스에서 XML을 읽고 새 XML 형식으로 변환 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can take advantage of LINQ queries to retrieve the content to transform, or change content in an existing document to a new XML format.</source>
          <target state="translated">콘텐츠를 변환 하 고, 검색에 대 한 LINQ 쿼리를 활용 하거나 새로운 XML 형식으로 기존 문서에서 콘텐츠를 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The example in this topic transforms content from an XML source document to HTML to be viewed in a browser.</source>
          <target state="translated">이 항목의 예제 HTML 브라우저에 표시 되는 XML 소스 문서에서 콘텐츠를 변환 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To transform an XML document</source>
          <target state="translated">XML 문서를 변환 하려면</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>In Visual Studio, create a new Visual Basic project in the <bpt id="p1">**</bpt>Console Application<ept id="p1">**</ept> project template.</source>
          <target state="translated">Visual Studio에서 새 Visual Basic 프로젝트에서 만들기는 <bpt id="p1">**</bpt>콘솔 응용 프로그램<ept id="p1">**</ept> 프로젝트 템플릿.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Double-click the Module1.vb file created in the project to modify the Visual Basic code.</source>
          <target state="translated">Visual Basic 코드를 수정 하는 프로젝트에서 생성 된 Module1.vb 파일을 두 번 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Add the following code to the <ph id="ph1">`Sub Main`</ph> of the <ph id="ph2">`Module1`</ph> module.</source>
          <target state="translated">다음 코드를 추가 하는 <ph id="ph1">`Sub Main`</ph> 의 <ph id="ph2">`Module1`</ph> 모듈입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This code creates the source XML document as an &lt;xref:System.Xml.Linq.XDocument&gt; object.</source>
          <target state="translated">이 코드는 소스 XML 문서를 만듭니다는 &lt;xref:System.Xml.Linq.XDocument&gt;개체.&lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: Load XML from a File, String, or Stream<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/how-to-load-xml-from-a-file-string-or-stream.md)</ept>.</source>
          <target state="translated"><bpt id="p1">[</bpt>방법: 파일, 문자열 또는 스트림에서 XML 로드<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/how-to-load-xml-from-a-file-string-or-stream.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>After the code to create the source XML document, add the following code to retrieve all the <ph id="ph1">\&lt;</ph>Book&gt; elements from the object and transform them into an HTML document.</source>
          <target state="translated">소스 XML 문서를 만드는 코드 뒤 모두 검색 하려면 다음 코드를 추가 <ph id="ph1">\&lt;</ph>책 &gt; 개체에서 요소는 HTML 문서를 변환 하 고 있습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The list of <ph id="ph1">\&lt;</ph>Book&gt; elements is created by using a LINQ query that returns a collection of &lt;xref:System.Xml.Linq.XElement&gt; objects that contain the transformed HTML.</source>
          <target state="translated">목록이 <ph id="ph1">\&lt;</ph>책 &gt; 요소 컬렉션을 반환 하는 LINQ 쿼리를 사용 하 여 만들어집니다 &lt;xref:System.Xml.Linq.XElement&gt;변환된 된 HTML을 포함 하는 개체입니다.&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use embedded expressions to put the values from the source document in the new XML format.</source>
          <target state="translated">새 XML 형식에서 소스 문서에서의 끝에 포함 된 식을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The resulting HTML document is written to a file by using the &lt;xref:System.Xml.Linq.XElement.Save%2A&gt; method.</source>
          <target state="translated">결과 HTML 문서를 사용 하 여 파일에 기록 되는 &lt;xref:System.Xml.Linq.XElement.Save%2A&gt;메서드.&lt;/xref:System.Xml.Linq.XElement.Save%2A&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>After <ph id="ph1">`Sub Main`</ph> of <ph id="ph2">`Module1`</ph>, add a new method (<ph id="ph3">`Sub`</ph>) to transform a <ph id="ph4">\&lt;</ph>Description&gt; node into the specified HTML format.</source>
          <target state="translated">후 <ph id="ph1">`Sub Main`</ph> 의 <ph id="ph2">`Module1`</ph>, 새 메서드 추가 (<ph id="ph3">`Sub`</ph>) 변환 하는 <ph id="ph4">\&lt;</ph>설명 &gt; 지정한 HTML 형식으로 노드.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This method is called by the code in the previous step and is used to preserve the format of the <ph id="ph1">\&lt;</ph>Description&gt; elements.</source>
          <target state="translated">이 메서드는 이전 단계에서 코드에 의해 호출 되며의 형식을 유지 하는 데 사용 됩니다는 <ph id="ph1">\&lt;</ph>설명 &gt; 요소입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This method replaces sub-elements of the <ph id="ph1">\&lt;</ph>Description&gt; element with HTML.</source>
          <target state="translated">하위 요소를 대체 하는이 메서드는 <ph id="ph1">\&lt;</ph>설명 &gt; html 요소입니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`ReplaceWith`</ph> method is used to preserve the location of the sub-elements.</source>
          <target state="translated"><ph id="ph1">`ReplaceWith`</ph> 메서드는 하위 요소의 위치를 유지 하기 위해 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The transformed content of the <ph id="ph1">\&lt;</ph>Description&gt; element is included in an HTML paragraph (<ph id="ph2">\&lt;</ph>p&gt;) element.</source>
          <target state="translated">변환된 된 내용을 <ph id="ph1">\&lt;</ph>설명 &gt; 요소가 HTML 단락에 포함 되어 (<ph id="ph2">\&lt;</ph>p &gt;) 요소입니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Linq.XContainer.Nodes%2A&gt; property is used to retrieve the transformed content of the <ph id="ph1">\&lt;</ph>Description&gt; element.</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XContainer.Nodes%2A&gt;속성은 변환된 된 내용을 검색 하는 데 사용 된 <ph id="ph1">\&lt;</ph>설명 &gt; 요소.&lt;/xref:System.Xml.Linq.XContainer.Nodes%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This ensures that sub-elements are included in the transformed content.</source>
          <target state="translated">이렇게 하면 하위 요소는 변환된 된 내용에 포함 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Add the following code after <ph id="ph1">`Sub Main`</ph> of <ph id="ph2">`Module1`</ph>.</source>
          <target state="translated">다음 코드를 추가 <ph id="ph1">`Sub Main`</ph> 의 <ph id="ph2">`Module1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Save your changes.</source>
          <target state="translated">변경 내용을 저장합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Press F5 to run the code.</source>
          <target state="translated">F5 키를 눌러 코드를 실행 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The resulting saved document will resemble the following:</source>
          <target state="translated">문서를 저장 된 결과 다음과 유사 합니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Literals<ept id="p1">](../../../../visual-basic/language-reference/xml-literals/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>XML 리터럴<ept id="p1">](../../../../visual-basic/language-reference/xml-literals/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Manipulating XML in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/manipulating-xml.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Visual Basic에서 XML 조작<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/manipulating-xml.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>XML<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>XML<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Load XML from a File, String, or Stream<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/how-to-load-xml-from-a-file-string-or-stream.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>방법: 파일, 문자열 또는 스트림에서 XML 로드<ept id="p1">](../../../../visual-basic/programming-guide/language-features/xml/how-to-load-xml-from-a-file-string-or-stream.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>LINQ<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>LINQ<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Introduction to LINQ in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Visual Basic의 LINQ 소개<ept id="p1">](../../../../visual-basic/programming-guide/language-features/linq/introduction-to-linq.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>