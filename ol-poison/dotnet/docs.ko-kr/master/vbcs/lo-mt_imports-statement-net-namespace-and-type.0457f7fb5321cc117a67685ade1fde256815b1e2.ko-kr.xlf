<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">393f3e9a264817d8658585267c954d973290530a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\statements\imports-statement-net-namespace-and-type.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b3551749296380ecf46d8c8f4dccbc38d40695df</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65a350bc220c96a474f4b24566c08b744ae47069</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_imports-statement-net-namespace-and-type.0457f7fb5321cc117a67685ade1fde256815b1e2.ko-kr is different with handoff file name: imports-statement-net-namespace-and-type.0457f7fb5321cc117a67685ade1fde256815b1e2.ko-kr.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Imports Statement (.NET Namespace and Type) | Microsoft Docs</source>
          <target state="translated">Imports 문 (.NET Namespace 및 형식) | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Imports Statement (.NET Namespace and Type)</source>
          <target state="translated">Imports 문(.NET 네임스페이스 및 형식)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Enables type names to be referenced without namespace qualification.</source>
          <target state="translated">형식 이름을 네임 스페이스 한정자 없이 참조할 수를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="translated">용어</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">정의</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택적 요소.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">*</bpt>import alias<ept id="p1">*</ept> or name by which code can refer to <ph id="ph1">`namespace`</ph> instead of the full qualification string.</source>
          <target state="translated"><bpt id="p1">*</bpt>가져오기 별칭<ept id="p1">*</ept> 또는 코드를 참조할 수 있는 이름을 <ph id="ph1">`namespace`</ph> 정규화 문자열 대신 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Declared Element Names<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.</source>
          <target state="translated">참조 <bpt id="p1">[</bpt>선언 된 요소 이름<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 요소.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The fully qualified name of the namespace being imported.</source>
          <target state="translated">가져오고 있는 네임 스페이스의 정규화 된 이름입니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Can be a string of namespaces nested to any level.</source>
          <target state="translated">중첩 될 수 있습니다 문자열로 네임 스페이스의 모든 수준에 있습니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택적 요소.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The name of a programming element declared in the namespace.</source>
          <target state="translated">네임 스페이스에 선언 된 프로그래밍 요소의 이름입니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Can be any container element.</source>
          <target state="translated">모든 컨테이너 요소를 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">주의</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Imports`</ph>  statement enables types that are contained in a given namespace to be referenced directly.</source>
          <target state="translated"><ph id="ph1">`Imports`</ph> 문이 지정된 된 네임 스페이스를 직접 참조할 수에 포함 된 형식을 사용 하도록 설정 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can supply a single namespace name or a string of nested namespaces.</source>
          <target state="translated">단일 네임 스페이스 이름 또는 중첩 된 네임 스페이스의 문자열을 제공할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Each nested namespace is separated from the next higher level namespace by a period (<ph id="ph1">`.`</ph>), as the following example illustrates.</source>
          <target state="translated">각 중첩 된 네임 스페이스는 마침표로 다음 수준의 네임 스페이스에서 (<ph id="ph1">`.`</ph>) 다음 예제와 같이 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Each source file can contain any number of <ph id="ph1">`Imports`</ph> statements.</source>
          <target state="translated">각 소스 파일에는 개수에 제한 없이 포함 될 수 있습니다 <ph id="ph1">`Imports`</ph> 문입니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>These must follow any option declarations, such as the <ph id="ph1">`Option Strict`</ph> statement, and they must precede any programming element declarations, such as <ph id="ph2">`Module`</ph> or <ph id="ph3">`Class`</ph> statements.</source>
          <target state="translated">이러한 옵션 선언 같은 따라야는 <ph id="ph1">`Option Strict`</ph> 않으며 문 앞에 야 프로그래밍 요소 선언와 같은 <ph id="ph2">`Module`</ph> 또는 <ph id="ph3">`Class`</ph> 문입니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>You can use <ph id="ph1">`Imports`</ph> only at file level.</source>
          <target state="translated">사용할 수 있습니다 <ph id="ph1">`Imports`</ph> 파일 수준에만 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This means the declaration context for importation must be a source file, and cannot be a namespace, class, structure, module, interface, procedure, or block.</source>
          <target state="translated">즉, 가져오기에 대 한 선언 컨텍스트는 소스 파일 이어야 하며 네임 스페이스, 클래스, 구조체, 모듈, 인터페이스, 프로시저 또는 차단 될 수 없습니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Note that the <ph id="ph1">`Imports`</ph> statement does not make elements from other projects and assemblies available to your project.</source>
          <target state="translated"><ph id="ph1">`Imports`</ph> 문을 해도 다른 프로젝트 및 어셈블리에서 요소를 프로젝트에서 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Importing does not take the place of setting a reference.</source>
          <target state="translated">가져오기 참조 설정 대신을 가지 지 않습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>It only removes the need to qualify names that are already available to your project.</source>
          <target state="translated">만 이미 프로젝트에 사용할 수 있는 이름을 정규화 할 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>For more information, see "Importing Containing Elements" in <bpt id="p1">[</bpt>References to Declared Elements<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>.</source>
          <target state="translated">자세한 내용은 "포함 된 요소를 가져오는"의 참조 <bpt id="p1">[</bpt>선언 된 요소에 대 한 참조<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can define implicit <ph id="ph1">`Imports`</ph> statements by using the <bpt id="p1">[</bpt>References Page, Project Designer (Visual Basic)<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/references-page-project-designer-visual-basic)</ept>.</source>
          <target state="translated">암시적으로 정의할 수 <ph id="ph1">`Imports`</ph> 문에서 사용 하 여는 <bpt id="p1">[</bpt>프로젝트 디자이너 (Visual Basic), 참조 페이지<ept id="p1">](https://docs.microsoft.com/visualstudio/ide/reference/references-page-project-designer-visual-basic)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Imported Namespaces (Visual Basic)<ept id="p1">](http://msdn.microsoft.com/library/44cebec3-0ea0-47c2-8406-4edeab6a997e)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>하는 방법: 추가 또는 제거 가져온 네임 스페이스 (Visual Basic)<ept id="p1">](http://msdn.microsoft.com/library/44cebec3-0ea0-47c2-8406-4edeab6a997e)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Import Aliases</source>
          <target state="translated">Import 별칭</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An <bpt id="p1">*</bpt>import alias<ept id="p1">*</ept> defines the alias for a namespace or type.</source>
          <target state="translated"><bpt id="p1">*</bpt>가져오기 별칭<ept id="p1">*</ept> 형식 또는 네임 스페이스에 대 한 별칭을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Import aliases are useful when you need to use items with the same name that are declared in one or more namespaces.</source>
          <target state="translated">Import 별칭은 하나 이상의 네임 스페이스에 선언 되어 있는 동일한 이름의 항목을 사용 해야 할 때 유용 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>For more information and an example, see "Qualifying an Element Name" in <bpt id="p1">[</bpt>References to Declared Elements<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>.</source>
          <target state="translated">자세한 내용 및 예에 "요소 이름 한정" 참조 <bpt id="p1">[</bpt>선언 된 요소에 대 한 참조<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You should not declare a member at module level with the same name as <ph id="ph1">`aliasname`</ph>.</source>
          <target state="translated">동일한 이름의 모듈 수준에서 멤버 선언 하면 안 <ph id="ph1">`aliasname`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If you do, the Visual Basic compiler uses <ph id="ph1">`aliasname`</ph> only for the declared member and no longer recognizes it as an import alias.</source>
          <target state="translated">Visual Basic 컴파일러를 사용 하면 <ph id="ph1">`aliasname`</ph> 선언 된 멤버에 대해서만 하 고 더 이상 가져오기 별칭으로 인식 합니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Although the syntax used for declaring an import alias is like that used for importing an XML namespace prefix, the results are different.</source>
          <target state="translated">XML 네임 스페이스 접두사를 가져오기 위한 가져오기 별칭을 선언 하는 데 사용 되는 구문은 사용 그렇게, 되지만 결과가 서로 다릅니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An import alias can be used as an expression in your code, whereas an XML namespace prefix can be used only in XML literals or XML axis properties as the prefix for a qualified element or attribute name.</source>
          <target state="translated">반면 XML 네임 스페이스 접두사는 사용할 수 XML 리터럴 또는 XML 축 속성에만 접두사로 정규화 된 요소 또는 특성 이름에 대 한 코드에서 식으로 가져오기 별칭을 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Element Names</source>
          <target state="translated">요소 이름</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If you supply <ph id="ph1">`element`</ph>, it must represent a <bpt id="p1">*</bpt>container element<ept id="p1">*</ept>, that is, a programming element that can contain other elements.</source>
          <target state="translated">제공 하는 경우 <ph id="ph1">`element`</ph>, 나타내야는 <bpt id="p1">*</bpt>컨테이너 요소<ept id="p1">*</ept>, 다른 요소를 포함할 수 있는 프로그래밍 요소입니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Container elements include classes, structures, modules, interfaces, and enumerations.</source>
          <target state="translated">컨테이너 요소는 클래스, 구조체, 모듈, 인터페이스 및 열거형에 포함 됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The scope of the elements made available by an <ph id="ph1">`Imports`</ph> statement depends on whether you specify <ph id="ph2">`element`</ph>.</source>
          <target state="translated">사용할 수 있도록 하는 요소의 범위는 <ph id="ph1">`Imports`</ph> 문을 지정 하는지 여부에 따라 달라 집니다 <ph id="ph2">`element`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If you specify only <ph id="ph1">`namespace`</ph>, all uniquely named members of that namespace, and members of container elements within that namespace, are available without qualification.</source>
          <target state="translated">만 지정한 경우 <ph id="ph1">`namespace`</ph>, 모든 고유 하 게 명명 된 해당 네임 스페이스의 멤버 및 해당 네임 스페이스 내에서 컨테이너 요소의 멤버, 한정자 없이 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you specify both <ph id="ph1">`namespace`</ph> and <ph id="ph2">`element`</ph>, only the members of that element are available without qualification.</source>
          <target state="translated">모두 지정 하면 <ph id="ph1">`namespace`</ph> 및 <ph id="ph2">`element`</ph>만 해당 요소의 멤버를 한정자 없이 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The following example returns all the folders in the C:\ directory by using the &lt;xref:System.IO.DirectoryInfo&gt; class.</source>
          <target state="translated">다음 예제에서는 &lt;xref:System.IO.DirectoryInfo&gt;클래스&lt;/xref:System.IO.DirectoryInfo&gt; 를 사용 하 여 C:\ 디렉터리에 있는 모든 폴더를 반환</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The code has no <ph id="ph1">`Imports`</ph> statements at the top of the file.</source>
          <target state="translated">코드에 없는 <ph id="ph1">`Imports`</ph> 파일 맨 위에 있는 문.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Therefore, the <ph id="ph1">`DirectoryInfo`</ph>, &lt;xref:System.Text.StringBuilder&gt;, and &lt;xref:Microsoft.VisualBasic.ControlChars.CrLf&gt; references are all fully qualified with the namespaces.</source>
          <target state="translated">따라서는 <ph id="ph1">`DirectoryInfo`</ph>, &lt;xref:System.Text.StringBuilder&gt;, 및 &lt;xref:Microsoft.VisualBasic.ControlChars.CrLf&gt;네임 스페이스를 사용 하 여 정규화 되지 않은 참조는.&lt;/xref:Microsoft.VisualBasic.ControlChars.CrLf&gt; &lt;/xref:System.Text.StringBuilder&gt;</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#152<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;152;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following example includes <ph id="ph1">`Imports`</ph> statements for the referenced namespaces.</source>
          <target state="translated">다음 예제에서는 포함 <ph id="ph1">`Imports`</ph> 참조 된 네임 스페이스에 대 한 문입니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Therefore, the types do not have to be fully qualified with the namespaces.</source>
          <target state="translated">따라서 형식 네임 스페이스를 사용 하 여 정규화 될 필요가 없습니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#153<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;153;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#154<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;154;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following example includes <ph id="ph1">`Imports`</ph> statements that create aliases for the referenced namespaces.</source>
          <target state="translated">다음 예제에서는 포함 <ph id="ph1">`Imports`</ph> 참조 된 네임 스페이스에 대 한 별칭을 사용 하는 문입니다.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The types are qualified with the aliases.</source>
          <target state="translated">형식은 별칭으로 한정 됩니다.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#155<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;155;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#156<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;156;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The following example includes <ph id="ph1">`Imports`</ph> statements that create aliases for the referenced types.</source>
          <target state="translated">다음 예제에서는 포함 <ph id="ph1">`Imports`</ph> 참조 된 형식에 대 한 별칭을 사용 하는 문입니다.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Aliases are used to specify the types.</source>
          <target state="translated">별칭은 형식을 지정 하는 데 사용 됩니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#157<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;157;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#158<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_7.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;158;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/imports-statement-net-namespace-and-type_7.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Namespace Statement<ept id="p1">](../../../visual-basic/language-reference/statements/namespace-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Namespace 문<ept id="p1">](../../../visual-basic/language-reference/statements/namespace-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Namespaces in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/program-structure/namespaces.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Visual Basic의 네임 스페이스<ept id="p1">](../../../visual-basic/programming-guide/program-structure/namespaces.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>References and the Imports Statement<ept id="p1">](../../../visual-basic/programming-guide/program-structure/references-and-the-imports-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>참조 및 Imports 문<ept id="p1">](../../../visual-basic/programming-guide/program-structure/references-and-the-imports-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Imports Statement (XML Namespace)<ept id="p1">](../../../visual-basic/language-reference/statements/imports-statement-xml-namespace.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Imports 문 (XML Namespace)<ept id="p1">](../../../visual-basic/language-reference/statements/imports-statement-xml-namespace.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>References to Declared Elements<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>선언된 요소 참조<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>