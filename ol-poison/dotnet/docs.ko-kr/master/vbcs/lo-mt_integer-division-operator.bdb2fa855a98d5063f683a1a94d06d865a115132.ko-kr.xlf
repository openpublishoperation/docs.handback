<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93d56bd2f5d1c426ff234cada232f5e8b02bed5d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\operators\integer-division-operator.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53f73056f01962aaf854a5ca4fc4326319dea36d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a5cb55701522bbf5757a4631b61b07468e588b46</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_integer-division-operator.bdb2fa855a98d5063f683a1a94d06d865a115132.ko-kr is different with handoff file name: integer-division-operator.bdb2fa855a98d5063f683a1a94d06d865a115132.ko-kr.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>\ Operator (Visual Basic) | Microsoft Docs</source>
          <target state="translated">\ 연산자 (Visual Basic) | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>\ Operator (Visual Basic)</source>
          <target state="translated">\ 연산자(Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Divides two numbers and returns an integer result.</source>
          <target state="translated">두 수를 나누고 정수 결과를 반환합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 요소.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Any numeric expression.</source>
          <target state="translated">임의의 숫자 식입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 요소.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Any numeric expression.</source>
          <target state="translated">임의의 숫자 식입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Supported Types</source>
          <target state="translated">지원 형식</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>All numeric types, including the unsigned and floating-point types and <ph id="ph1">`Decimal`</ph>.</source>
          <target state="translated">부호 없는 및 부동 소수점 형식을 비롯 한 모든 숫자 형식, 및 <ph id="ph1">`Decimal`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">결과</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The result is the integer quotient of <ph id="ph1">`expression1`</ph> divided by <ph id="ph2">`expression2`</ph>, which discards any remainder and retains only the integer portion.</source>
          <target state="translated">결과의 정수 몫은 <ph id="ph1">`expression1`</ph> 나눈 <ph id="ph2">`expression2`</ph>, 나머지는 버리고 정수 부분만 유지 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This is known as <bpt id="p1">*</bpt>truncation<ept id="p1">*</ept>.</source>
          <target state="translated">이 이라고 <bpt id="p1">*</bpt>잘림<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The result data type is a numeric type appropriate for the data types of <ph id="ph1">`expression1`</ph> and <ph id="ph2">`expression2`</ph>.</source>
          <target state="translated">결과 데이터 형식이의 데이터 형식에 대 한 적합 한 숫자 형식 <ph id="ph1">`expression1`</ph> 및 <ph id="ph2">`expression2`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>See the "Integer Arithmetic" tables in <bpt id="p1">[</bpt>Data Types of Operator Results<ept id="p1">](../../../visual-basic/language-reference/operators/data-types-of-operator-results.md)</ept>.</source>
          <target state="translated">"정수 연산" 표를 참조 하십시오. <bpt id="p1">[</bpt>연산자 결과의 데이터 형식을<ept id="p1">](../../../visual-basic/language-reference/operators/data-types-of-operator-results.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>/ Operator (Visual Basic)<ept id="p1">](../../../visual-basic/language-reference/operators/floating-point-division-operator.md)</ept> returns the full quotient, which retains the remainder in the fractional portion.</source>
          <target state="translated"><bpt id="p1">[</bpt>/ 연산자 (Visual Basic)<ept id="p1">](../../../visual-basic/language-reference/operators/floating-point-division-operator.md)</ept> 소수 부분에 포함 된 나머지를 유지 하는 전체 몫을 반환 합니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">주의</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Before performing the division, Visual Basic attempts to convert any floating-point numeric expression to <ph id="ph1">`Long`</ph>.</source>
          <target state="translated">나누기를 수행 하기 전에 Visual Basic에 임의의 부동 소수점 숫자 식으로 변환 하려고 <ph id="ph1">`Long`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Option Strict`</ph> is <ph id="ph2">`On`</ph>, a compiler error occurs.</source>
          <target state="translated">경우 <ph id="ph1">`Option Strict`</ph> 는 <ph id="ph2">`On`</ph>, 컴파일러 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Option Strict`</ph> is <ph id="ph2">`Off`</ph>, an &lt;xref:System.OverflowException&gt; is possible if the value is outside the range of the <bpt id="p1">[</bpt>Long Data Type<ept id="p1">](../../../visual-basic/language-reference/data-types/long-data-type.md)</ept>.</source>
          <target state="translated">경우 <ph id="ph1">`Option Strict`</ph> 는 <ph id="ph2">`Off`</ph>, &lt;xref:System.OverflowException&gt;값이 범위 밖의 경우에 <bpt id="p1">[</bpt>Long 데이터 형식<ept id="p1">](../../../visual-basic/language-reference/data-types/long-data-type.md)</ept>.&lt;/xref:System.OverflowException&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The conversion to <ph id="ph1">`Long`</ph> is also subject to <bpt id="p1">*</bpt>banker's rounding<ept id="p1">*</ept>.</source>
          <target state="translated">변환할 <ph id="ph1">`Long`</ph> 를 일으키는 이기도 <bpt id="p1">*</bpt>은행원 반올림<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see "Fractional Parts" in <bpt id="p1">[</bpt>Type Conversion Functions<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept>.</source>
          <target state="translated">자세한 내용은 "소수 부분"의 참조 <bpt id="p1">[</bpt>형식 변환 함수<ept id="p1">](../../../visual-basic/language-reference/functions/type-conversion-functions.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`expression1`</ph> or <ph id="ph2">`expression2`</ph> evaluates to <bpt id="p1">[</bpt>Nothing<ept id="p1">](../../../visual-basic/language-reference/nothing.md)</ept>, it is treated as zero.</source>
          <target state="translated">경우 <ph id="ph1">`expression1`</ph> 또는 <ph id="ph2">`expression2`</ph> 계산 <bpt id="p1">[</bpt>Nothing<ept id="p1">](../../../visual-basic/language-reference/nothing.md)</ept>,&amp;0;으로 간주 됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Attempted Division by Zero</source>
          <target state="translated">0으로 나누기</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`expression2`</ph> evaluates to zero, the <ph id="ph2">`\`</ph> operator throws a &lt;xref:System.DivideByZeroException&gt; exception.</source>
          <target state="translated">경우 <ph id="ph1">`expression2`</ph>&amp;0;으로 계산 된 <ph id="ph2">`\`</ph> 연산자 throw는 &lt;xref:System.DivideByZeroException&gt;예외.&lt;/xref:System.DivideByZeroException&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This is true for all numeric data types of the operands.</source>
          <target state="translated">피연산자의 모든 숫자 데이터 형식에 유용합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`\`</ph> operator can be <bpt id="p1">*</bpt>overloaded<ept id="p1">*</ept>, which means that a class or structure can redefine its behavior when an operand has the type of that class or structure.</source>
          <target state="translated"><ph id="ph1">`\`</ph> 연산자 될 수 있습니다 <bpt id="p1">*</bpt>오버 로드 된<ept id="p1">*</ept>, 클래스 또는 구조체 수 할의 동작에 해당 클래스 또는 구조체의 형식입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If your code uses this operator on such a class or structure, be sure you understand its redefined behavior.</source>
          <target state="translated">이 연산자를 사용 하 여 이러한 클래스 또는 구조체에는 코드를 다시 정의 된 동작을 이해 해야 합니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Operator Procedures<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>연산자 프로시저<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/operator-procedures.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`\`</ph> operator to perform integer division.</source>
          <target state="translated">다음 예제에서는 <ph id="ph1">`\`</ph> 정수 나누기 연산을 수행 하는 연산자입니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The result is an integer that represents the integer quotient of the two operands, with the remainder discarded.</source>
          <target state="translated">결과 나머지 삭제에 두 피연산자의 몫을 나타내는 정수입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOperators#18<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/integer-division-operator_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOperators #&amp;18;<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/integer-division-operator_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The expressions in the preceding example return values of 2, 3, 33, and -22, respectively.</source>
          <target state="translated">식 앞의 예제에서는 각각 2, 3, 33,,-22의 값을 반환합니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt><ph id="ph1">\\</ph>= Operator<ept id="p1">](../../../visual-basic/language-reference/operators/integer-division-assignment-operator.md)</ept><ph id="ph2"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt><ph id="ph1">\\</ph>= 연산자<ept id="p1">](../../../visual-basic/language-reference/operators/integer-division-assignment-operator.md)</ept><ph id="ph2"> </ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>/ Operator (Visual Basic)<ept id="p1">](../../../visual-basic/language-reference/operators/floating-point-division-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>/ 연산자 (Visual Basic)<ept id="p1">](../../../visual-basic/language-reference/operators/floating-point-division-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Option Strict Statement<ept id="p1">](../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Option Strict 문<ept id="p1">](../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Arithmetic Operators<ept id="p1">](../../../visual-basic/language-reference/operators/arithmetic-operators.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>산술 연산자<ept id="p1">](../../../visual-basic/language-reference/operators/arithmetic-operators.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operator Precedence in Visual Basic<ept id="p1">](../../../visual-basic/language-reference/operators/operator-precedence.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Visual Basic의 연산자 우선 순위<ept id="p1">](../../../visual-basic/language-reference/operators/operator-precedence.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operators Listed by Functionality<ept id="p1">](../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>기능별 연산자 목록<ept id="p1">](../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Arithmetic Operators in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/arithmetic-operators.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Visual Basic의 산술 연산자<ept id="p1">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/arithmetic-operators.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>