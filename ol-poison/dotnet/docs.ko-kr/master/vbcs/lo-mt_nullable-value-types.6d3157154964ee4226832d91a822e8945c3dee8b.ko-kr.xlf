<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9cdf1864fe955a082936596821ee84c831b86444</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\data-types\nullable-value-types.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">026e294bdd6f97d8d365f4e81101898e762943fc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6fed3ca968601f71b711a462ffa98b9f5f4c2eaa</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_nullable-value-types.6d3157154964ee4226832d91a822e8945c3dee8b.ko-kr is different with handoff file name: nullable-value-types.6d3157154964ee4226832d91a822e8945c3dee8b.ko-kr.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Nullable Value Types (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Nullable 값 형식 (Visual Basic) | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Nullable Value Types (Visual Basic)</source>
          <target state="translated">Nullable 값 형식(Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Sometimes you work with a value type that does not have a defined value in certain circumstances.</source>
          <target state="translated">경우에 따라 상황에 따라 정의 된 값이 없는 값 형식으로 작업할 수도 있습니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, a field in a database might have to distinguish between having an assigned value that is meaningful and not having an assigned value.</source>
          <target state="translated">예를 들어 한 데이터베이스의 필드에에서 의미 있는 할당된 된 값 들이 없는 할당된 된 값을 구분 해야 합니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Value types can be extended to take either their normal values or a null value.</source>
          <target state="translated">값 형식 변수 정상 값 또는 null 값을 확장할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Such an extension is called a <bpt id="p1">*</bpt>nullable type<ept id="p1">*</ept>.</source>
          <target state="translated">이러한 확장 이라고는 <bpt id="p1">*</bpt>nullable 형식<ept id="p1">*</ept>합니다.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Each nullable type is constructed from the generic &lt;xref:System.Nullable%601&gt; structure.</source>
          <target state="translated">각 nullable 형식이 제네릭에서 생성 된 &lt;xref:System.Nullable%601&gt;구조.&lt;/xref:System.Nullable%601&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Consider a database that tracks work-related activities.</source>
          <target state="translated">작업 관련 작업을 추적 하는 데이터베이스를 고려해 야 합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following example constructs a nullable <ph id="ph1">`Boolean`</ph> type and declares a variable of that type.</source>
          <target state="translated">다음 구성 예제는 null을 허용 <ph id="ph1">`Boolean`</ph> 입력 하 고 해당 형식의 변수를 선언 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You can write the declaration in three ways:</source>
          <target state="translated">세 가지 방법으로 선언을 작성할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrNullableValue#1<ept id="p2">](../../../../visual-basic/programming-guide/language-features/data-types/codesnippet/VisualBasic/nullable-value-types_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrNullableValue #&amp;1;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/data-types/codesnippet/VisualBasic/nullable-value-types_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The variable <ph id="ph1">`ridesBusToWork`</ph> can hold a value of <ph id="ph2">`True`</ph>, a value of <ph id="ph3">`False`</ph>, or no value at all.</source>
          <target state="translated">변수 <ph id="ph1">`ridesBusToWork`</ph> 의 값을 보유할 수 <ph id="ph2">`True`</ph>, 값이 <ph id="ph3">`False`</ph>, 또는 모두에 값이 없습니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Its initial default value is no value at all, which in this case could mean that the information has not yet been obtained for this person.</source>
          <target state="translated">초기 기본값은 값이 없는 전혀는 예제의 것을 의미할 수도이 사용자에 대 한 정보가 아직 획득 하지.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>In contrast, <ph id="ph1">`False`</ph> could mean that the information has been obtained and the person does not ride the bus to work.</source>
          <target state="translated">반면, <ph id="ph1">`False`</ph> 정보를 획득 한를 사람이 버스로 작동 하지 않음을 의미할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can declare variables and properties with nullable types, and you can declare an array with elements of a nullable type.</source>
          <target state="translated">Nullable 형식의 변수 및 속성을 선언할 수 및 nullable 형식의 요소가 포함 된 배열을 선언할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can declare procedures with nullable types as parameters, and you can return a nullable type from a <ph id="ph1">`Function`</ph> procedure.</source>
          <target state="translated">Nullable 형식의 매개 변수로 프로시저를 선언할 수 있고에서 null 허용 형식을 반환할 수는 <ph id="ph1">`Function`</ph> 프로시저입니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You cannot construct a nullable type on a reference type such as an array, a <ph id="ph1">`String`</ph>, or a class.</source>
          <target state="translated">배열 등과 같이 참조 형식에는 nullable 형식을 구성할 수 없습니다. 한 <ph id="ph1">`String`</ph>, 또는 클래스입니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The underlying type must be a value type.</source>
          <target state="translated">기본 형식이 값 형식 이어야 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Value Types and Reference Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>값 형식과 참조 형식이<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Using a Nullable Type Variable</source>
          <target state="translated">Nullable 형식 변수를 사용 하 여</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The most important members of a nullable type are its &lt;xref:System.Nullable%601.HasValue%2A&gt; and &lt;xref:System.Nullable%601.Value%2A&gt; properties.</source>
          <target state="translated">Nullable 형식의 가장 중요 한 멤버는 해당 &lt;xref:System.Nullable%601.HasValue%2A&gt;및 &lt;xref:System.Nullable%601.Value%2A&gt;속성.&lt;/xref:System.Nullable%601.Value%2A&gt; &lt;/xref:System.Nullable%601.HasValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>For a variable of a nullable type, &lt;xref:System.Nullable%601.HasValue%2A&gt; tells you whether the variable contains a defined value.</source>
          <target state="translated">Nullable 형식의 변수에 대 한 &lt;xref:System.Nullable%601.HasValue%2A&gt;변수에 정의 된 값을 포함 하는 여부를 알려줍니다.&lt;/xref:System.Nullable%601.HasValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If &lt;xref:System.Nullable%601.HasValue%2A&gt; is <ph id="ph1">`True`</ph>, you can read the value from &lt;xref:System.Nullable%601.Value%2A&gt;.</source>
          <target state="translated">경우 &lt;xref:System.Nullable%601.HasValue%2A&gt;은 <ph id="ph1">`True`</ph>, &lt;xref:System.Nullable%601.Value%2A&gt;.&lt;/xref:System.Nullable%601.Value%2A&gt; 에서 값을 읽을 수&lt;/xref:System.Nullable%601.HasValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Note that both &lt;xref:System.Nullable%601.HasValue%2A&gt; and &lt;xref:System.Nullable%601.Value%2A&gt; are <ph id="ph1">`ReadOnly`</ph> properties.</source>
          <target state="translated">모두 &lt;xref:System.Nullable%601.HasValue%2A&gt;및 &lt;xref:System.Nullable%601.Value%2A&gt;는 <ph id="ph1">`ReadOnly`</ph> 속성.&lt;/xref:System.Nullable%601.Value%2A&gt; &lt;/xref:System.Nullable%601.HasValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Default Values</source>
          <target state="translated">기본값</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When you declare a variable with a nullable type, its &lt;xref:System.Nullable%601.HasValue%2A&gt; property has a default value of <ph id="ph1">`False`</ph>.</source>
          <target state="translated">Nullable 형식으로 변수를 선언 하는 경우 해당 &lt;xref:System.Nullable%601.HasValue%2A&gt;속성의 기본값은 <ph id="ph1">`False`</ph>.&lt;/xref:System.Nullable%601.HasValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This means that by default the variable has no defined value, instead of the default value of its underlying value type.</source>
          <target state="translated">즉, 기본적으로 변수에 있는 내부 값 형식의 기본값 대신 정의 된 값 없음.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>In the following example, the variable <ph id="ph1">`numberOfChildren`</ph> initially has no defined value, even though the default value of the <ph id="ph2">`Integer`</ph> type is 0.</source>
          <target state="translated">다음 예제에서는 변수에서에서 <ph id="ph1">`numberOfChildren`</ph> 처음 정의 된 값이 없는 경우에 기본의 값이 고 <ph id="ph2">`Integer`</ph> 유형 0입니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrNullableValue#2<ept id="p2">](../../../../visual-basic/programming-guide/language-features/data-types/codesnippet/VisualBasic/nullable-value-types_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrNullableValue #&amp;2;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/data-types/codesnippet/VisualBasic/nullable-value-types_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A null value is useful to indicate an undefined or unknown value.</source>
          <target state="translated">Null 값이 정의 되지 않거나 알 수 없는 값을 나타내는 데 유용 합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`numberOfChildren`</ph> had been declared as <ph id="ph2">`Integer`</ph>, there would be no value that could indicate that the information is not currently available.</source>
          <target state="translated">경우 <ph id="ph1">`numberOfChildren`</ph> 로 선언 <ph id="ph2">`Integer`</ph>, 정보를 현재 사용할 수 없다는 나타낼 수 있는 값이 없는 것입니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Storing Values</source>
          <target state="translated">값 저장</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>You store a value in a variable or property of a nullable type in the typical way.</source>
          <target state="translated">일반적인 방식으로 변수나 nullable 형식의 속성에 값을 저장 합니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following example assigns a value to the variable <ph id="ph1">`numberOfChildren`</ph> declared in the previous example.</source>
          <target state="translated">다음 예제에서는 값을 변수에 할당 <ph id="ph1">`numberOfChildren`</ph> 이전 예제의 선언 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrNullableValue#3<ept id="p2">](../../../../visual-basic/programming-guide/language-features/data-types/codesnippet/VisualBasic/nullable-value-types_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrNullableValue #&amp;3;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/data-types/codesnippet/VisualBasic/nullable-value-types_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>If a variable or property of a nullable type contains a defined value, you can cause it to revert to its initial state of not having a value assigned.</source>
          <target state="translated">변수 또는 nullable 형식의 속성에 정의 된 값이 있으면 값이 할당 하지 않는 경우의 초기 상태로 되돌릴 발생할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>You do this by setting the variable or property to <ph id="ph1">`Nothing`</ph>, as the following example shows.</source>
          <target state="translated">변수 또는 속성을 설정 하 여이 작업을 수행 <ph id="ph1">`Nothing`</ph>다음 예제와 같이 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrNullableValue#4<ept id="p2">](../../../../visual-basic/programming-guide/language-features/data-types/codesnippet/VisualBasic/nullable-value-types_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrNullableValue #&amp;4;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/data-types/codesnippet/VisualBasic/nullable-value-types_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Although you can assign <ph id="ph1">`Nothing`</ph> to a variable of a nullable type, you cannot test it for <ph id="ph2">`Nothing`</ph> by using the equal sign.</source>
          <target state="translated">할당할 수 있지만 <ph id="ph1">`Nothing`</ph> nullable 형식의 변수에 테스트할 수는 없습니다에 대 한 <ph id="ph2">`Nothing`</ph> 등호를 사용 하 여 합니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Comparison that uses the equal sign, <ph id="ph1">`someVar = Nothing`</ph>, always evaluates to <ph id="ph2">`Nothing`</ph>.</source>
          <target state="translated">등호를 사용 하 여 비교 <ph id="ph1">`someVar = Nothing`</ph>, 언제나 평가 <ph id="ph2">`Nothing`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>You can test the variable's &lt;xref:System.Nullable%601.HasValue%2A&gt; property for <ph id="ph1">`False`</ph>, or test by using the <ph id="ph2">`Is`</ph> or <ph id="ph3">`IsNot`</ph> operator.</source>
          <target state="translated">변수를 테스트할 수 &lt;xref:System.Nullable%601.HasValue%2A&gt;속성에 대 한 <ph id="ph1">`False`</ph>, 또는 사용 하 여 테스트는 <ph id="ph2">`Is`</ph> 또는 <ph id="ph3">`IsNot`</ph> 연산자.&lt;/xref:System.Nullable%601.HasValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Retrieving Values</source>
          <target state="translated">값 검색</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>To retrieve the value of a variable of a nullable type, you should first test its &lt;xref:System.Nullable%601.HasValue%2A&gt; property to confirm that it has a value.</source>
          <target state="translated">Nullable 형식의 변수 값을 검색 하려면 먼저을 테스트 해야 해당 &lt;xref:System.Nullable%601.HasValue%2A&gt;속성을 값이 있는지 확인 합니다.&lt;/xref:System.Nullable%601.HasValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If you try to read the value when &lt;xref:System.Nullable%601.HasValue%2A&gt; is <ph id="ph1">`False`</ph>, <ph id="ph2">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> throws an &lt;xref:System.InvalidOperationException&gt; exception.</source>
          <target state="translated">값을 읽고 하려고 하면 때 &lt;xref:System.Nullable%601.HasValue%2A&gt;은 <ph id="ph1">`False`</ph>, <ph id="ph2">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> throw는 &lt;xref:System.InvalidOperationException&gt;예외가.&lt;/xref:System.InvalidOperationException&gt; &lt;/xref:System.Nullable%601.HasValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The following example shows the recommended way to read the variable <ph id="ph1">`numberOfChildren`</ph> of the previous examples.</source>
          <target state="translated">다음 예에서는 변수를 읽은 하는 권장된 방법은 <ph id="ph1">`numberOfChildren`</ph> 앞의 예제입니다.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrNullableValue#5<ept id="p2">](../../../../visual-basic/programming-guide/language-features/data-types/codesnippet/VisualBasic/nullable-value-types_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrNullableValue #&amp;5;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/data-types/codesnippet/VisualBasic/nullable-value-types_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Comparing Nullable Types</source>
          <target state="translated">Nullable 형식 비교</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>When nullable <ph id="ph1">`Boolean`</ph> variables are used in Boolean expressions, the result can be <ph id="ph2">`True`</ph>, <ph id="ph3">`False`</ph>, or <ph id="ph4">`Nothing`</ph>.</source>
          <target state="translated">Null을 허용 하는 경우 <ph id="ph1">`Boolean`</ph> 변수는 부울 식에 사용 될 수 있습니다, <ph id="ph2">`True`</ph>, <ph id="ph3">`False`</ph>, 또는 <ph id="ph4">`Nothing`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The following is the truth table for <ph id="ph1">`And`</ph> and <ph id="ph2">`Or`</ph>.</source>
          <target state="translated">다음은 truth 테이블에 대 한 <ph id="ph1">`And`</ph> 및 <ph id="ph2">`Or`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">`b1`</ph> and <ph id="ph2">`b2`</ph> now have three possible values, there are nine combinations to evaluate.</source>
          <target state="translated">때문에 <ph id="ph1">`b1`</ph> 및 <ph id="ph2">`b2`</ph> 만들었습니다 다음&amp;3; 가지 값을&amp;9; 개 조합을 평가 해야 합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>b1</source>
          <target state="translated">b1</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>b2</source>
          <target state="translated">b&amp;2;</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>b1 And b2</source>
          <target state="translated">b1 및 b&amp;2;</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>b1 Or b2</source>
          <target state="translated">b1 또는 b&amp;2;</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>When the value of a Boolean variable or expression is <ph id="ph1">`Nothing`</ph>, it is neither <ph id="ph2">`true`</ph> nor <ph id="ph3">`false`</ph>.</source>
          <target state="translated">부울 변수 또는 식의 값이 <ph id="ph1">`Nothing`</ph>가 아닌 <ph id="ph2">`true`</ph> 나 <ph id="ph3">`false`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Consider the following example.</source>
          <target state="translated">다음 예제를 살펴보십시오.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrNullableValue#6<ept id="p2">](../../../../visual-basic/programming-guide/language-features/data-types/codesnippet/VisualBasic/nullable-value-types_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrNullableValue #&amp;6;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/data-types/codesnippet/VisualBasic/nullable-value-types_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In this example, <ph id="ph1">`b1 And b2`</ph> evaluates to <ph id="ph2">`Nothing`</ph>.</source>
          <target state="translated">이 예제에서는 <ph id="ph1">`b1 And b2`</ph> 계산 <ph id="ph2">`Nothing`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>As a result, the <ph id="ph1">`Else`</ph> clause is executed in each <ph id="ph2">`If`</ph> statement, and the output is as follows:</source>
          <target state="translated">결과적으로 <ph id="ph1">`Else`</ph> 각 절이 실행 <ph id="ph2">`If`</ph> 문과 출력은 다음과 같습니다.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> `AndAlso`</ph> and <ph id="ph2">`OrElse`</ph>, which use short-circuit evaluation, must evaluate their second operands when the first evaluates to <ph id="ph3">`Nothing`</ph>.</source>
          <target state="translated"><ph id="ph1"> `AndAlso`</ph>및 <ph id="ph2">`OrElse`</ph>, 단락 계산을 사용 하는 계산 되어야 두 번째 피연산자는 첫 번째 일 때 <ph id="ph3">`Nothing`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Propagation</source>
          <target state="translated">전파</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>If one or both of the operands of an arithmetic, comparison, shift, or type operation is nullable, the result of the operation is also nullable.</source>
          <target state="translated">산술, 비교, 시프트 또는 형식 작업의 피연산자 중 하나 또는 모두 이면 null을 허용 연산의 결과가 null을 허용 이기도 합니다.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>If both operands have values that are not <ph id="ph1">`Nothing`</ph>, the operation is performed on the underlying values of the operands, as if neither were a nullable type.</source>
          <target state="translated">두 피연산자 값이 없는 경우 <ph id="ph1">`Nothing`</ph>, 작업은 피연산자의 내부 값에 것 처럼 수행 모두 nullable 형식입니다.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>In the following example, variables <ph id="ph1">`compare1`</ph> and <ph id="ph2">`sum1`</ph> are implicitly typed.</source>
          <target state="translated">다음 예제에서 변수 <ph id="ph1">`compare1`</ph> 및 <ph id="ph2">`sum1`</ph> 는 암시적으로 형식화 합니다.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If you rest the mouse pointer over them, you will see that the compiler infers nullable types for both of them.</source>
          <target state="translated">위로 마우스 포인터를 놓으면 컴파일러 둘 다에 대 한 null 허용 형식 유추는 표시 됩니다.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrNullableValue#7<ept id="p2">](../../../../visual-basic/programming-guide/language-features/data-types/codesnippet/VisualBasic/nullable-value-types_7.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrNullableValue #&amp;7;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/data-types/codesnippet/VisualBasic/nullable-value-types_7.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>If one or both operands have a value of <ph id="ph1">`Nothing`</ph>, the result will be <ph id="ph2">`Nothing`</ph>.</source>
          <target state="translated">하나 또는 두 피연산자의 값이 없는 경우 <ph id="ph1">`Nothing`</ph>, 결과 <ph id="ph2">`Nothing`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrNullableValue#8<ept id="p2">](../../../../visual-basic/programming-guide/language-features/data-types/codesnippet/VisualBasic/nullable-value-types_8.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrNullableValue #&amp;8;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/data-types/codesnippet/VisualBasic/nullable-value-types_8.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Using Nullable Types with Data</source>
          <target state="translated">데이터와 Nullable 형식 사용</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A database is one of the most important places to use nullable types.</source>
          <target state="translated">데이터베이스에는 nullable 형식을 사용 하 여 가장 중요 한 위치 중 하나입니다.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Not all database objects currently support nullable types, but the designer-generated table adapters do.</source>
          <target state="translated">모든 데이터베이스 개체에는 현재 nullable 형식 지원 않지만 테이블 디자이너에서 생성 된 어댑터입니다.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>See "TableAdapter Support for Nullable Types" in <bpt id="p1">[</bpt>TableAdapter Overview<ept id="p1">](https://docs.microsoft.com/visualstudio/data-tools/tableadapter-overview)</ept>.</source>
          <target state="translated">"Nullable 형식에 대 한 TableAdapter 지원"을 참조 <bpt id="p1">[</bpt>TableAdapter 개요<ept id="p1">](https://docs.microsoft.com/visualstudio/data-tools/tableadapter-overview)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.InvalidOperationException&gt;</source>
          <target state="translated">&lt;xref:System.InvalidOperationException&gt;&lt;/xref:System.InvalidOperationException&gt;</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Nullable%601.HasValue%2A&gt;</source>
          <target state="translated">&lt;xref:System.Nullable%601.HasValue%2A&gt;&lt;/xref:System.Nullable%601.HasValue%2A&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Using Nullable Types<ept id="p1">](../../../../csharp/programming-guide/nullable-types/using-nullable-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Nullable 형식 사용<ept id="p1">](../../../../csharp/programming-guide/nullable-types/using-nullable-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>데이터 형식<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Value Types and Reference Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>값 형식과 참조 형식<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/value-types-and-reference-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Troubleshooting Data Types<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>데이터 형식 문제 해결<ept id="p1">](../../../../visual-basic/programming-guide/language-features/data-types/troubleshooting-data-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>TableAdapter Overview<ept id="p1">](https://docs.microsoft.com/visualstudio/data-tools/tableadapter-overview)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>TableAdapter 개요<ept id="p1">](https://docs.microsoft.com/visualstudio/data-tools/tableadapter-overview)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>If Operator<ept id="p1">](../../../../visual-basic/language-reference/operators/if-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>경우 연산자<ept id="p1">](../../../../visual-basic/language-reference/operators/if-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Local Type Inference<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>지역 형식 유추<ept id="p1">](../../../../visual-basic/programming-guide/language-features/variables/local-type-inference.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Is Operator<ept id="p1">](../../../../visual-basic/language-reference/operators/is-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Is 연산자<ept id="p1">](../../../../visual-basic/language-reference/operators/is-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>IsNot Operator<ept id="p1">](../../../../visual-basic/language-reference/operators/isnot-operator.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>IsNot 연산자<ept id="p1">](../../../../visual-basic/language-reference/operators/isnot-operator.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>