<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">059b1347c4a35b896f5aa19cadb28fbceb8b25c9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\statements\raiseevent-statement.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7964dc18dc3e82f623e9dbc1db790ccdf42feb01</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3b60fd47194322e7bd8d14aab5e3097706d483a</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_raiseevent-statement.86b43ac4b03f5c76c34170732c7407d1ac9ccb00.ko-kr is different with handoff file name: raiseevent-statement.86b43ac4b03f5c76c34170732c7407d1ac9ccb00.ko-kr.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>RaiseEvent Statement | Microsoft Docs</source>
          <target state="translated">RaiseEvent 문 | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>RaiseEvent Statement</source>
          <target state="translated">RaiseEvent 문</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Triggers an event declared at module level within a class, form, or document.</source>
          <target state="translated">트리거는 이벤트 클래스, 폼 또는 문서 내에서 모듈 수준에서 선언 합니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">구문</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">요소</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">필수 요소.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name of the event to trigger.</source>
          <target state="translated">트리거할 이벤트의 이름입니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">선택적 요소.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Comma-delimited list of variables, arrays, or expressions.</source>
          <target state="translated">변수, 배열, 또는 식의 쉼표로 구분 된 목록입니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`argumentlist`</ph> argument must be enclosed by parentheses.</source>
          <target state="translated"><ph id="ph1">`argumentlist`</ph> 인수를 괄호로 묶어야 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If there are no arguments, the parentheses must be omitted.</source>
          <target state="translated">인수가 있을 경우 괄호를 생략 해야 합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">주의</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The required <ph id="ph1">`eventname`</ph> is the name of an event declared within the module.</source>
          <target state="translated">필수 <ph id="ph1">`eventname`</ph> 모듈 내에서 선언 하는 이벤트의 이름입니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It follows Visual Basic variable naming conventions.</source>
          <target state="translated">Visual Basic의 변수 명명 규칙을 따릅니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the event has not been declared within the module in which it is raised, an error occurs.</source>
          <target state="translated">이 이벤트는 발생 한 모듈 내에서 선언 되지 않은, 오류가 발생 합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following code fragment illustrates an event declaration and a procedure in which the event is raised.</source>
          <target state="translated">다음 코드에서는 이벤트 선언 및 이벤트가 발생 하는 프로시저를 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents#37<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/raiseevent-statement_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents #&amp;37;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/raiseevent-statement_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You cannot use <ph id="ph1">`RaiseEvent`</ph> to raise events that are not explicitly declared in the module.</source>
          <target state="translated">사용할 수 없습니다 <ph id="ph1">`RaiseEvent`</ph> 모듈에 명시적으로 선언 되지 않은 이벤트를 발생 합니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, all forms inherit a &lt;xref:System.Windows.Forms.Control.Click&gt; event from &lt;xref:System.Windows.Forms.Form?displayProperty=fullName&gt;, it cannot be raised using <ph id="ph1">`RaiseEvent`</ph> in a derived form.</source>
          <target state="translated">예를 들어 모든 폼 상속을 &lt;xref:System.Windows.Forms.Control.Click&gt;에서 이벤트 &lt;xref:System.Windows.Forms.Form?displayProperty=fullName&gt;를 사용 하 여 높일 수 없습니다 <ph id="ph1">`RaiseEvent`</ph> 파생된 된 폼에서.&lt;/xref:System.Windows.Forms.Form?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.Control.Click&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you declare a <ph id="ph1">`Click`</ph> event in the form module, it shadows the form's own &lt;xref:System.Windows.Forms.Control.Click&gt; event.</source>
          <target state="translated">선언 하는 경우는 <ph id="ph1">`Click`</ph> 이벤트 폼 자체의 폼 모듈에 숨겨집니다 &lt;xref:System.Windows.Forms.Control.Click&gt;이벤트.&lt;/xref:System.Windows.Forms.Control.Click&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can still invoke the form's &lt;xref:System.Windows.Forms.Control.Click&gt; event by calling the &lt;xref:System.Windows.Forms.Control.OnClick%2A&gt; method.</source>
          <target state="translated">폼의를 여전히 호출할 수 있습니다 &lt;xref:System.Windows.Forms.Control.Click&gt;를 호출 하 여 이벤트는 &lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;메서드.&lt;/xref:System.Windows.Forms.Control.OnClick%2A&gt; &lt;/xref:System.Windows.Forms.Control.Click&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>By default, an event defined in Visual Basic raises its event handlers in the order that the connections are established.</source>
          <target state="translated">기본적으로 Visual Basic에서 정의 된 이벤트의 이벤트 처리기는 연결이 설정 된 순서 대로 발생 합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Because events can have <ph id="ph1">`ByRef`</ph> parameters, a process that connects late may receive parameters that have been changed by an earlier event handler.</source>
          <target state="translated">이벤트를 가질 수 있으므로 <ph id="ph1">`ByRef`</ph> 매개 변수를 나중에 연결 하는 프로세스는 이전 이벤트 처리기에 의해 변경 된 매개 변수를 받을 수 있습니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>After the event handlers execute, control is returned to the subroutine that raised the event.</source>
          <target state="translated">이벤트 처리기가 실행 된 후 컨트롤 이벤트를 발생 시킨 서브루틴으로 반환 됩니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Non-shared events should not be raised within the constructor of the class in which they are declared.</source>
          <target state="translated">공유 되지 않는 이벤트 선언 된 클래스의 생성자 내에서 발생 하지 해야 합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Although such events do not cause run-time errors, they may fail to be caught by associated event handlers.</source>
          <target state="translated">이러한 이벤트를 런타임 오류 발생 지는 않지만 연결 된 이벤트 처리기에서 포착 하지 못할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`Shared`</ph> modifier to create a shared event if you need to raise an event from a constructor.</source>
          <target state="translated">사용 된 <ph id="ph1">`Shared`</ph> 한정자를 생성자에서 이벤트를 발생 하는 경우 공유 이벤트를 만듭니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can change the default behavior of events by defining a custom event.</source>
          <target state="translated">사용자 지정 이벤트를 정의 하 여 이벤트의 기본 동작을 변경할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For custom events, the <ph id="ph1">`RaiseEvent`</ph> statement invokes the event's <ph id="ph2">`RaiseEvent`</ph> accessor.</source>
          <target state="translated">사용자 지정 이벤트는 <ph id="ph1">`RaiseEvent`</ph> 문은 이벤트의 호출 <ph id="ph2">`RaiseEvent`</ph> 접근자입니다.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information on custom events, see <bpt id="p1">[</bpt>Event Statement<ept id="p1">](../../../visual-basic/language-reference/statements/event-statement.md)</ept>.</source>
          <target state="translated">사용자 지정 이벤트에 대 한 자세한 내용은 참조 하십시오. <bpt id="p1">[</bpt>Event 문<ept id="p1">](../../../visual-basic/language-reference/statements/event-statement.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example uses events to count down seconds from 10 to 0.</source>
          <target state="translated">다음 예제에서는 이벤트를 사용하여 10초부터 0초까지 카운트 다운합니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The code illustrates several of the event-related methods, properties, and statements, including the <ph id="ph1">`RaiseEvent`</ph> statement.</source>
          <target state="translated">코드에 나와 있는 이벤트 관련 메서드, 속성 및 포함 하 여 문 중 일부는 <ph id="ph1">`RaiseEvent`</ph> 문입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The class that raises an event is the event source, and the methods that process the event are the event handlers.</source>
          <target state="translated">이벤트를 발생시키는 클래스는 이벤트 소스이고 이벤트를 처리하는 메서드는 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An event source can have multiple handlers for the events it generates.</source>
          <target state="translated">이벤트 소스는 생성되는 이벤트에 대해 여러 개의 처리기를 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When the class raises the event, that event is raised on every class that has elected to handle events for that instance of the object.</source>
          <target state="translated">클래스에서 이벤트를 발생시키면 해당 이벤트는 개체의 해당 인스턴스에 대해 이벤트를 처리하도록 선택한 모든 클래스에서 발생됩니다.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The example also uses a form (<ph id="ph1">`Form1`</ph>) with a button (<ph id="ph2">`Button1`</ph>) and a text box (<ph id="ph3">`TextBox1`</ph>).</source>
          <target state="translated">또한 이 예제에서는 단추(<ph id="ph2">`Button1`</ph>)와 텍스트 상자(<ph id="ph3">`TextBox1`</ph>)가 있는 폼(<ph id="ph1">`Form1`</ph>)을 사용합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When you click the button, the first text box displays a countdown from 10 to 0 seconds.</source>
          <target state="translated">단추를 클릭하면 첫 번째 텍스트 상자에 10초부터 0초까지의 카운트 다운이 표시됩니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When the full time (10 seconds) has elapsed, the first text box displays "Done".</source>
          <target state="translated">전체 시간(10초)이 경과되면 첫 번째 텍스트 상자에 "Done"이 표시됩니다.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The code for <ph id="ph1">`Form1`</ph> specifies the initial and terminal states of the form.</source>
          <target state="translated"><ph id="ph1">`Form1`</ph>에 대한 코드는 폼의 초기 상태 및 최종 상태를 지정합니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>It also contains the code executed when events are raised.</source>
          <target state="translated">또한 이벤트가 발생될 때 실행될 코드도 포함됩니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To use this example, open a new Windows Application project, add a button named <ph id="ph1">`Button1`</ph> and a text box named <ph id="ph2">`TextBox1`</ph> to the main form, named <ph id="ph3">`Form1`</ph>.</source>
          <target state="translated">이 예제를 사용 하려면 새 Windows 응용 프로그램 프로젝트를 열고 라는 단추를 추가 <ph id="ph1">`Button1`</ph> 및 라는 텍스트 상자가 <ph id="ph2">`TextBox1`</ph> 라는 기본 폼에 <ph id="ph3">`Form1`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Then right-click the form and click <bpt id="p1">**</bpt>View Code<ept id="p1">**</ept> to open the Code Editor.</source>
          <target state="translated">그런 다음 폼을 마우스 오른쪽 단추로 클릭 하 고 클릭 <bpt id="p1">**</bpt>코드 보기<ept id="p1">**</ept> 코드 편집기를 엽니다.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">`WithEvents`</ph> variable to the declarations section of the <ph id="ph2">`Form1`</ph> class.</source>
          <target state="translated">추가 <ph id="ph1">`WithEvents`</ph> 의 선언 섹션에는 변수는 <ph id="ph2">`Form1`</ph> 클래스입니다.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents#14<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/raiseevent-statement_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents #&amp;14;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/raiseevent-statement_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">예제</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Add the following code to the code for <ph id="ph1">`Form1`</ph>.</source>
          <target state="translated"><ph id="ph1">`Form1`</ph>에 대한 코드에 다음 코드를 추가합니다.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Replace any duplicate procedures that may exist, such as <ph id="ph1">`Form_Load`</ph>, or <ph id="ph2">`Button_Click`</ph>.</source>
          <target state="translated">교체와 같은 존재할 수 있는 모든 중복 프로시저 <ph id="ph1">`Form_Load`</ph>, 또는 <ph id="ph2">`Button_Click`</ph>합니다.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents#15<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/raiseevent-statement_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents #&amp;15;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/raiseevent-statement_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Press F5 to run the preceding example, and click the button labeled <bpt id="p1">**</bpt>Start<ept id="p1">**</ept>.</source>
          <target state="translated">앞의 예제를 실행 하 고 저장 단추를 클릭 하는 F5 키를 눌러 <bpt id="p1">**</bpt>시작<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The first text box starts to count down the seconds.</source>
          <target state="translated">첫 번째 텍스트 상자에서 초를 카운트 다운하기 시작합니다.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When the full time (10 seconds) has elapsed, the first text box displays "Done".</source>
          <target state="translated">전체 시간(10초)이 경과되면 첫 번째 텍스트 상자에 "Done"이 표시됩니다.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Application.DoEvents`</ph> method does not process events in exactly the same way as the form does.</source>
          <target state="translated"><ph id="ph1">`My.Application.DoEvents`</ph> 메서드 이벤트를 처리 하지 동일한 방식으로 폼 마찬가지로 합니다.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To allow the form to handle the events directly, you can use multithreading.</source>
          <target state="translated">사용할 수를 직접 이벤트를 처리 하기 위해 다중 스레딩을 합니다.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Threading<ept id="p1">](http://msdn.microsoft.com/library/552f6c68-dbdb-4327-ae36-32cf9063d88c)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>스레딩<ept id="p1">](http://msdn.microsoft.com/library/552f6c68-dbdb-4327-ae36-32cf9063d88c)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Events<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>이벤트<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Event Statement<ept id="p1">](../../../visual-basic/language-reference/statements/event-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Event 문<ept id="p1">](../../../visual-basic/language-reference/statements/event-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>AddHandler Statement<ept id="p1">](../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>AddHandler 문<ept id="p1">](../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>RemoveHandler Statement<ept id="p1">](../../../visual-basic/language-reference/statements/removehandler-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>RemoveHandler 문<ept id="p1">](../../../visual-basic/language-reference/statements/removehandler-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Handles<ept id="p1">](../../../visual-basic/language-reference/statements/handles-clause.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>핸들<ept id="p1">](../../../visual-basic/language-reference/statements/handles-clause.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>