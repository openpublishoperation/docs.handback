<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9fc95cd5f7cfd5637f6282c6ef571eb81bac1816</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\procedures\recursive-procedures.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe08d283738dba319fbbebb24b7abc69c04266ca</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5eebabfe97fe54a0d78f3b3ed4a8dafad0bbb24b</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_recursive-procedures.66fa4a6daf1ae450eb0ffc9eee44c4898eba9ee4.ko-kr is different with handoff file name: recursive-procedures.66fa4a6daf1ae450eb0ffc9eee44c4898eba9ee4.ko-kr.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Recursive Procedures (Visual Basic) | Microsoft Docs</source>
          <target state="translated">재귀 프로시저 (Visual Basic) | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Recursive Procedures (Visual Basic)</source>
          <target state="translated">재귀 프로시저(Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>recursive<ept id="p1">*</ept> procedure is one that calls itself.</source>
          <target state="translated">A <bpt id="p1">*</bpt>재귀<ept id="p1">*</ept> 절차는 자신을 호출 하는 하나입니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In general, this is not the most effective way to write <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> code.</source>
          <target state="translated">일반적으로 이것이 작성 하는 가장 효과적인 방법은 <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> 코드입니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following procedure uses recursion to calculate the factorial of its original argument.</source>
          <target state="translated">다음 절차에서는 원래 인수의 계승 계산을 재귀를 사용 합니다.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#51<ept id="p2">](./codesnippet/VisualBasic/recursive-procedures_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures #&amp;51;<ept id="p2">](./codesnippet/VisualBasic/recursive-procedures_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Considerations with Recursive Procedures</source>
          <target state="translated">재귀 프로시저에 대 한 고려 사항</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Limiting Conditions<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>제한 조건<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You must design a recursive procedure to test for at least one condition that can terminate the recursion, and you must also handle the case where no such condition is satisfied within a reasonable number of recursive calls.</source>
          <target state="translated">재귀를 종료할 수 있는 하나 이상의 조건에 대해 테스트 하는 재귀 프로시저를 디자인 해야 하 고 적절 한 횟수의 재귀 호출 내에서 없는 이러한 조건을 충족 하는 경우를도 처리 해야 합니다.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Without at least one condition that can be met without fail, your procedure runs a high risk of executing in an infinite loop.</source>
          <target state="translated">오류 없이 충족 될 수 있는 하나 이상의 조건 없이 프로시저는 무한 루프를 실행 한 높은 위험을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Memory Usage<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>메모리 사용량<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Your application has a limited amount of space for local variables.</source>
          <target state="translated">응용 프로그램에 제한 된 양의 지역 변수에 대 한 공간.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Each time a procedure calls itself, it uses more of that space for additional copies of its local variables.</source>
          <target state="translated">프로시저는 자신을 호출할 때마다 사용 하 여 그만큼의 공간이 더는 지역 변수의의 추가 복사본에 대 한 합니다.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If this process continues indefinitely, it eventually causes a &lt;xref:System.StackOverflowException&gt; error.</source>
          <target state="translated">이 프로세스는 무기한 계속 되 면 그로 인해는 &lt;xref:System.StackOverflowException&gt;오류.&lt;/xref:System.StackOverflowException&gt;</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Efficiency<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>효율성<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>You can almost always substitute a loop for recursion.</source>
          <target state="translated">거의 항상 재귀에 대 한 루프를 대체할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A loop does not have the overhead of passing arguments, initializing additional storage, and returning values.</source>
          <target state="translated">루프는 인수 전달 추가 저장소를 초기화 하 고 값을 반환 하는 오버 헤드는 없습니다.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Your performance can be much better without recursive calls.</source>
          <target state="translated">성능 재귀 호출 하지 않고 훨씬 향상 될 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Mutual Recursion<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>상호 재귀<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>You might observe very poor performance, or even an infinite loop, if two procedures call each other.</source>
          <target state="translated">두 절차 서로 호출 하는 경우 성능이 매우 저하 또는 심지어는 무한 루프를 확인할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Such a design presents the same problems as a single recursive procedure, but can be harder to detect and debug.</source>
          <target state="translated">이러한 디자인을 단일 재귀 프로시저와 같은 문제를 표시 하지만 검색 하 고 디버그 어려울 수 있습니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Calling with Parentheses<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>괄호를 사용한 호출<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">`Function`</ph> procedure calls itself recursively, you must follow the procedure name with parentheses, even if there is no argument list.</source>
          <target state="translated">경우는 <ph id="ph1">`Function`</ph> 재귀적으로 프로시저 호출, 인수 목록이 없는 경우에 프로시저 이름 뒤에 괄호를 따라야 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Otherwise, the function name is taken as representing the return value of the function.</source>
          <target state="translated">그렇지 않은 경우 함수 이름은 함수의 반환 값을 나타내는 것으로 합니다.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Testing<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>테스트<ept id="p1">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If you write a recursive procedure, you should test it very carefully to make sure it always meets some limiting condition.</source>
          <target state="translated">재귀 프로시저를 작성 하는 경우 항상 제한 일부 조건이 충족 되었는지 확인 하려면 신중 하 게 테스트 해야 있습니다.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You should also ensure that you cannot run out of memory due to having too many recursive calls.</source>
          <target state="translated">또한 재귀 호출이 너무 많아서 인해 메모리가 부족 해지지 확인 해야 합니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.StackOverflowException&gt;</source>
          <target state="translated">&lt;xref:System.StackOverflowException&gt;&lt;/xref:System.StackOverflowException&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>프로시저<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Sub Procedures<ept id="p1">](./sub-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Sub 프로시저<ept id="p1">](./sub-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Function Procedures<ept id="p1">](./function-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Function 프로시저<ept id="p1">](./function-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Property Procedures<ept id="p1">](./property-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>속성 프로시저<ept id="p1">](./property-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operator Procedures<ept id="p1">](./operator-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>연산자 프로시저<ept id="p1">](./operator-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Parameters and Arguments<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>프로시저 매개 변수 및 인수<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Overloading<ept id="p1">](./procedure-overloading.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>프로시저 오버 로드<ept id="p1">](./procedure-overloading.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Troubleshooting Procedures<ept id="p1">](./troubleshooting-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>문제 해결 절차<ept id="p1">](./troubleshooting-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Loop Structures<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/loop-structures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>루프 구조<ept id="p1">](../../../../visual-basic/programming-guide/language-features/control-flow/loop-structures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Troubleshooting Exceptions: System.StackOverflowException<ept id="p1">](http://msdn.microsoft.com/library/51b71217-c507-4f5b-bc35-0236180d7968)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>예외 문제 해결: System.StackOverflowException<ept id="p1">](http://msdn.microsoft.com/library/51b71217-c507-4f5b-bc35-0236180d7968)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>