<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ko-kr">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aeaa5c2bb85c1a642da15c6a29546cf065380e27</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\objects-and-classes\walkthrough-defining-classes.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3bc43c75cdd4794a4b9ca5242e89527049a5b88</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">302dd6187d2456f9c0dec9953586191f411b4889</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_walkthrough-defining-classes.8790e31b9f1c207b0ce184fe64f9271e0f23a55d.ko-kr is different with handoff file name: walkthrough-defining-classes.8790e31b9f1c207b0ce184fe64f9271e0f23a55d.ko-kr.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defining Classes (Visual Basic) | Microsoft Docs</source>
          <target state="translated">클래스 정의 (Visual Basic) | Microsoft 문서</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Walkthrough: Defining Classes (Visual Basic)</source>
          <target state="translated">연습: 클래스 정의(Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This walkthrough demonstrates how to define classes, which you can then use to create objects.</source>
          <target state="translated">이 연습에서는 다음 개체를 만드는 데 사용할 수 있는 클래스를 정의 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It also shows you how to add properties and methods to the new class, and demonstrates how to initialize an object.</source>
          <target state="translated">또한 새 클래스에 속성 및 메서드를 추가 하는 방법을 보여 주고 개체를 초기화 하는 방법을 보여 줍니다.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>To define a class</source>
          <target state="translated">클래스를 정의 하려면</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Create a project by clicking <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>File<ept id="p2">**</ept> menu.</source>
          <target state="translated">클릭 하 여 프로젝트를 만드는 <bpt id="p1">**</bpt>새 프로젝트<ept id="p1">**</ept> 에 <bpt id="p2">**</bpt>파일<ept id="p2">**</ept> 메뉴.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>New Project<ept id="p1">**</ept> dialog box appears.</source>
          <target state="translated"><bpt id="p1">**</bpt>새 프로젝트<ept id="p1">**</ept> 대화 상자가 나타납니다.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Select Windows Application from the list of <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> project templates to display the new project.</source>
          <target state="translated">Windows 응용 프로그램의 목록에서 선택 <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> 프로젝트 새 프로젝트를 표시 하는 템플릿이 포함 되어 있습니다.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Add a new class to the project by clicking <bpt id="p1">**</bpt>Add Class<ept id="p1">**</ept> on the <bpt id="p2">**</bpt>Project<ept id="p2">**</ept> menu.</source>
          <target state="translated">새 클래스를 클릭 하 여 프로젝트에 추가 <bpt id="p1">**</bpt>클래스 추가<ept id="p1">**</ept> 에 <bpt id="p2">**</bpt>프로젝트<ept id="p2">**</ept> 메뉴.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Add New Item<ept id="p1">**</ept> dialog box appears.</source>
          <target state="translated"><bpt id="p1">**</bpt>새 항목 추가<ept id="p1">**</ept> 대화 상자가 나타납니다.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Select the <bpt id="p1">**</bpt>Class<ept id="p1">**</ept> template.</source>
          <target state="translated">선택 된 <bpt id="p1">**</bpt>클래스<ept id="p1">**</ept> 템플릿.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Name the new class <ph id="ph1">`UserNameInfo.vb`</ph>, and then click <bpt id="p1">**</bpt>Add<ept id="p1">**</ept> to display the code for the new class.</source>
          <target state="translated">새 클래스 이름을 <ph id="ph1">`UserNameInfo.vb`</ph>를 클릭 하 고 <bpt id="p1">**</bpt>추가<ept id="p1">**</ept> 새 클래스에 대 한 코드를 표시 합니다.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#5<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;5;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept> to add a class to your startup form by typing the <ph id="ph2">`Class`</ph> keyword followed by the name of the new class.</source>
          <target state="translated">사용할 수는 <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> <bpt id="p1">**</bpt>코드 편집기<ept id="p1">**</ept> 시작 폼에 입력 하 여 클래스를 추가 하는 <ph id="ph2">`Class`</ph> 키워드 새 클래스의 이름이 차례로 나옵니다.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>Code Editor<ept id="p1">**</ept> provides a corresponding <ph id="ph1">`End Class`</ph> statement for you.</source>
          <target state="translated"><bpt id="p1">**</bpt>코드 편집기<ept id="p1">**</ept> 해당 제공 <ph id="ph1">`End Class`</ph> 문이 있습니다.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Define a private field for the class by adding the following code between the <ph id="ph1">`Class`</ph> and <ph id="ph2">`End Class`</ph> statements:</source>
          <target state="translated">사이 다음 코드를 추가 하 여 클래스에 대 한 전용 필드 정의 <ph id="ph1">`Class`</ph> 및 <ph id="ph2">`End Class`</ph> 문:</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#7<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;7;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Declaring the field as <ph id="ph1">`Private`</ph> means it can be used only within the class.</source>
          <target state="translated">로 필드를 선언 <ph id="ph1">`Private`</ph> 클래스 내 에서만 사용할 수 있습니다.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can make fields available from outside a class by using access modifiers such as <ph id="ph1">`Public`</ph> that provide more access.</source>
          <target state="translated">가능 필드는 클래스 외부에서 사용할 수와 같은 액세스 한정자를 사용 하 여 <ph id="ph1">`Public`</ph> 동일한 액세스를 제공 하는 합니다.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Access Levels in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</source>
          <target state="translated">자세한 내용은 참조 <bpt id="p1">[</bpt>Visual Basic의 액세스 수준을<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>합니다.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Define a property for the class by adding the following code:</source>
          <target state="translated">다음 코드를 추가 하 여 클래스에 대 한 속성을 정의 합니다.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#8<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;8;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Define a method for the class by adding the following code:</source>
          <target state="translated">다음 코드를 추가 하 여 클래스에 대 한 메서드를 정의 합니다.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#9<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;9;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Define a parameterized constructor for the new class by adding a procedure named <ph id="ph1">`Sub New`</ph>:</source>
          <target state="translated">프로시저를 추가 하 여 새 클래스에 대 한 매개 변수가 있는 생성자를 정의 <ph id="ph1">`Sub New`</ph>:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#10<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;10;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Sub New`</ph> constructor is called automatically when an object based on this class is created.</source>
          <target state="translated"><ph id="ph1">`Sub New`</ph> 생성자는이 클래스를 기반으로 하는 개체를 만들 때 자동으로 호출 됩니다.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This constructor sets the value of the field that holds the user name.</source>
          <target state="translated">이 생성자는 사용자 이름을 사용 하는 필드의 값을 설정 합니다.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To create a button to test the class</source>
          <target state="translated">클래스를 테스트 하려면 단추를 만들려면</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Change the startup form to design mode by right-clicking its name in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept> and then clicking <bpt id="p2">**</bpt>View Designer<ept id="p2">**</ept>.</source>
          <target state="translated">시작 폼에서 해당 이름을 마우스 오른쪽 단추로 클릭 하 여 디자인 모드로 변경 <bpt id="p1">**</bpt>솔루션 탐색기<ept id="p1">**</ept> 클릭 한 다음 <bpt id="p2">**</bpt>뷰 디자이너<ept id="p2">**</ept>합니다.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>By default, the startup form for Windows Application projects is named Form1.vb.</source>
          <target state="translated">기본적으로 Windows 응용 프로그램 프로젝트에 대 한 시작 폼 Form1.vb 이라고 합니다.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The main form will then appear.</source>
          <target state="translated">기본 폼이 나타납니다.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Add a button to the main form and double-click it to display the code for the <ph id="ph1">`Button1_Click`</ph> event handler.</source>
          <target state="translated">기본 폼에 단추를 추가 하 고 두 번 클릭 하 여 코드를 표시 하는 <ph id="ph1">`Button1_Click`</ph> 이벤트 처리기입니다.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Add the following code to call the test procedure:</source>
          <target state="translated">테스트 프로시저를 호출 하려면 다음 코드를 추가 합니다.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP#12<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOOP #&amp;12;<ept id="p2">](../../../../visual-basic/misc/codesnippet/VisualBasic/walkthrough-defining-classes_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>To run your application</source>
          <target state="translated">응용 프로그램을 실행하려면</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Run your application by pressing F5.</source>
          <target state="translated">F5 키를 눌러 응용 프로그램을 실행 합니다.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Click the button on the form to call the test procedure.</source>
          <target state="translated">테스트 프로시저를 호출 하려면 폼의 단추를 클릭 합니다.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>It displays a message stating that the original <ph id="ph1">`UserName`</ph> is "MOORE, BOBBY", because the procedure called the <ph id="ph2">`Capitalize`</ph> method of the object.</source>
          <target state="translated">원래 했다는 메시지가 표시 <ph id="ph1">`UserName`</ph> 프로시저가 호출 되므로 "MOORE, BOBBY"는 <ph id="ph2">`Capitalize`</ph> 개체의 메서드.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Click <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> to dismiss the message box.</source>
          <target state="translated">클릭 <bpt id="p1">**</bpt>확인<ept id="p1">**</ept> 메시지 상자를 닫습니다.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Button1 Click`</ph> procedure changes the value of the <ph id="ph2">`UserName`</ph> property and displays a message stating that the new value of <ph id="ph3">`UserName`</ph> is "Worden, Joe".</source>
          <target state="translated"><ph id="ph1">`Button1 Click`</ph> 의 값을 변경 하는 절차는 <ph id="ph2">`UserName`</ph> 속성의 새 값이 했다는 메시지가 표시 됩니다 <ph id="ph3">`UserName`</ph> "Worden, Joe"는 합니다.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">참고 항목</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Object-Oriented Programming<ept id="p1">](http://msdn.microsoft.com/library/1cf6e655-3f30-45f1-9a5d-4a88ca24a1c2)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>개체 지향 프로그래밍<ept id="p1">](http://msdn.microsoft.com/library/1cf6e655-3f30-45f1-9a5d-4a88ca24a1c2)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Objects and Classes<ept id="p1">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>개체 및 클래스<ept id="p1">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/index.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>