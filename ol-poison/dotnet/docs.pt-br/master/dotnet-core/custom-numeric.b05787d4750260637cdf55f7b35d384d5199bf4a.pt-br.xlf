<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d5a051efd074d02f2a5e9ff03c11e1d9a202d7f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\base-types\custom-numeric.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5724ebc47e4c46c835461b323e34a5701828103b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f6177e15ce0e26bf509a91d66d188c9e20083da</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">file custom-numeric.b05787d4750260637cdf55f7b35d384d5199bf4a.pt-br.xlf is out of handoff scope</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings</source>
          <target state="translated">Cadeias de caracteres de formato numérico personalizado</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings</source>
          <target state="translated">Cadeias de caracteres de formato numérico personalizado</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings</source>
          <target state="translated">Cadeias de caracteres de formato numérico personalizado</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>You can create a custom numeric format string, which consists of one or more custom numeric specifiers, to define how to format numeric data.</source>
          <target state="translated">Você pode criar uma cadeia de caracteres de formato numérico personalizado, que consiste em um ou mais especificadores numéricos personalizados, para definir a formatação de dados numéricos.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>A custom numeric format string is any format string that is not a <bpt id="p1">[</bpt>standard numeric format string<ept id="p1">](standard-numeric.md)</ept>.</source>
          <target state="translated">Uma cadeia de caracteres de formato numérico personalizado é qualquer cadeia de caracteres que é não uma <bpt id="p1">[</bpt>cadeia de caracteres de formato numérico padrão<ept id="p1">](standard-numeric.md)</ept>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings are supported by some overloads of the <ph id="ph1">`ToString`</ph> method of all numeric types.</source>
          <target state="translated">As cadeias de caracteres de formato numérico personalizado têm suporte de algumas sobrecargas do método <ph id="ph1">`ToString`</ph> de todos os tipos numéricos.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, you can supply a numeric format string to the <bpt id="p1">[</bpt>ToString(String)<ept id="p1">](xref:System.Int32.ToString(System.String))</ept> and <bpt id="p2">[</bpt>ToString(String, IFormatProvider)<ept id="p2">](xref:System.Int32.ToString(System.String,System.IFormatProvider))</ept> methods of the <bpt id="p3">[</bpt>Int32<ept id="p3">](xref:System.Int32)</ept> type.</source>
          <target state="translated">Por exemplo, você pode fornecer uma cadeia de caracteres de formato numérico aos métodos <bpt id="p1">[</bpt>ToString(String)<ept id="p1">](xref:System.Int32.ToString(System.String))</ept> e <bpt id="p2">[</bpt>ToString(String, IFormatProvider)<ept id="p2">](xref:System.Int32.ToString(System.String,System.IFormatProvider))</ept> do tipo <bpt id="p3">[</bpt>Int32<ept id="p3">](xref:System.Int32)</ept>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Custom numeric format strings are also supported by the .NET Framework <bpt id="p1">[</bpt>composite formatting<ept id="p1">](composite-format.md)</ept> feature, which is used by some <ph id="ph1">`Write`</ph> and <ph id="ph2">`WriteLine`</ph> methods of the <bpt id="p2">[</bpt>Console<ept id="p2">](xref:System.Console)</ept> and <bpt id="p3">[</bpt>StreamWriter<ept id="p3">](xref:System.IO.StreamWriter)</ept> classes, the <bpt id="p4">[</bpt>String.Format<ept id="p4">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> method, and the <bpt id="p5">[</bpt>StringBuilder.AppendFormat<ept id="p5">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept> method.</source>
          <target state="translated">As cadeias de caracteres de formato numérico personalizado também têm suporte do recurso de <bpt id="p1">[</bpt>formatação de composição<ept id="p1">](composite-format.md)</ept> do .NET Framework, que é usado por alguns métodos <ph id="ph1">`Write`</ph> e <ph id="ph2">`WriteLine`</ph> das classes <bpt id="p2">[</bpt>Console<ept id="p2">](xref:System.Console)</ept> e <bpt id="p3">[</bpt>StreamWriter<ept id="p3">](xref:System.IO.StreamWriter)</ept>, do método <bpt id="p4">[</bpt>String.Format<ept id="p4">](xref:System.String.Format(System.IFormatProvider,System.String,System.Object))</ept> e do método <bpt id="p5">[</bpt>StringBuilder.AppendFormat<ept id="p5">](xref:System.Text.StringBuilder.AppendFormat(System.IFormatProvider,System.String,System.Object))</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following table describes the custom numeric format specifiers and displays sample output produced by each format specifier.</source>
          <target state="translated">A tabela a seguir descreve os especificadores de formato numérico personalizado e exibe amostras de saída produzidas por cada especificador de formato.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>See the <bpt id="p1">[</bpt>Notes<ept id="p1">](#notes)</ept> section for additional information about using custom numeric format strings, and the <bpt id="p2">[</bpt>Example<ept id="p2">](#example)</ept> section for a comprehensive illustration of their use.</source>
          <target state="translated">Consulte a seção <bpt id="p1">[</bpt>Notas<ept id="p1">](#notes)</ept> para obter informações adicionais sobre como usar cadeias de caracteres de formato numérico personalizado e a seção <bpt id="p2">[</bpt>Exemplo<ept id="p2">](#example)</ept> para obter uma ilustração abrangente de seu uso.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Format specifier</source>
          <target state="translated">Especificador de formato</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Nome</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Exemplos</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>"0"</source>
          <target state="translated">"0"</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Zero placeholder</source>
          <target state="translated">Espaço reservado de zero</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Replaces the zero with the corresponding digit if one is present; otherwise, zero appears in the result string.</source>
          <target state="translated">Substitui o zero pelo dígito correspondente, se houver um presente. Caso contrário, o zero aparecerá na cadeia de caracteres de resultado.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`1234.5678 ("00000") -&gt; 01235`</ph>; <ph id="ph2">`0.45678 ("0.00", en-US) -&gt; 0.46`</ph>; <ph id="ph3">`0.45678 ("0.00", fr-FR) -&gt; 0,46`</ph></source>
          <target state="translated"><ph id="ph1">`1234.5678 ("00000") -&gt; 01235`</ph>; <ph id="ph2">`0.45678 ("0.00", en-US) -&gt; 0.46`</ph>; <ph id="ph3">`0.45678 ("0.00", fr-FR) -&gt; 0,46`</ph></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>"#"</source>
          <target state="translated">"#"</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Digit placeholder</source>
          <target state="translated">Espaço reservado de dígito</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Replaces the "#" symbol with the corresponding digit if one is present; otherwise, no digit appears in the result string.</source>
          <target state="translated">Substitui o símbolo "#" pelo dígito correspondente, se houver um presente. Caso contrário, nenhum dígito aparecerá na cadeia de caracteres de resultado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Note that no digit appears in the result string if the corresponding digit in the input string is a non-significant 0.</source>
          <target state="translated">Observe que nenhum dígito aparece na cadeia de caracteres de resultado se o dígito na cadeia de entrada correspondente for um 0 não significativo.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For example, 0003 ("####") -&gt; 3.</source>
          <target state="translated">Por exemplo, 0003 ("####") -&gt; 3.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`1234.5678 ("#####") -&gt; 1235`</ph>; <ph id="ph2">`0.45678 ("#.##", en-US) -&gt; .46`</ph>; <ph id="ph3">`0.45678 ("#.##", fr-FR) -&gt; ,46`</ph></source>
          <target state="translated"><ph id="ph1">`1234.5678 ("#####") -&gt; 1235`</ph>; <ph id="ph2">`0.45678 ("#.##", en-US) -&gt; .46`</ph>; <ph id="ph3">`0.45678 ("#.##", fr-FR) -&gt; ,46`</ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>"."</source>
          <target state="translated">"."</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Decimal point</source>
          <target state="translated">Ponto decimal</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Determines the location of the decimal separator in the result string.</source>
          <target state="translated">Determina a posição do separador decimal na cadeia de caracteres de resultado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`0.45678 ("0.00", en-US) -&gt; 0.46`</ph>; <ph id="ph2">`0.45678 ("0.00", fr-FR) -&gt; 0,46`</ph></source>
          <target state="translated"><ph id="ph1">`0.45678 ("0.00", en-US) -&gt; 0.46`</ph>; <ph id="ph2">`0.45678 ("0.00", fr-FR) -&gt; 0,46`</ph></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>","</source>
          <target state="translated">","","</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Group separator and number scaling</source>
          <target state="translated">Separador de grupo e escala numérica</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Serves as both a group separator and a number scaling specifier.</source>
          <target state="translated">Funciona tanto como um separador de grupo quanto como um especificador de escala numérica.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>As a group separator, it inserts a localized group separator character between each group.</source>
          <target state="translated">Como separador de grupo, insere um caractere separador de grupo localizado entre cada grupo.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>As a number scaling specifier, it divides a number by 1000 for each comma specified.</source>
          <target state="translated">Como especificador de escala numérica, divide um número por 1000 para cada vírgula especificada.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Group separator specifier: <ph id="ph1">`2147483647 ("##,#", en-US) -&gt; 2,147,483,647`</ph>; <ph id="ph2">`2147483647 ("##,#", es-ES) -&gt; 2.147.483.647`</ph>.</source>
          <target state="translated">Especificador de separador de grupo: <ph id="ph1">`2147483647 ("##,#", en-US) -&gt; 2,147,483,647`</ph>; <ph id="ph2">`2147483647 ("##,#", es-ES) -&gt; 2.147.483.647`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Scaling specifier: <ph id="ph1">`2147483647 ("#,#,,", en-US) -&gt; 2,147`</ph>; <ph id="ph2">`2147483647 ("#,#,,", es-ES) -&gt; 2.147`</ph></source>
          <target state="translated">Especificador de escala: <ph id="ph1">`2147483647 ("#,#,,", en-US) -&gt; 2,147`</ph>; <ph id="ph2">`2147483647 ("#,#,,", es-ES) -&gt; 2.147`</ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>"%"</source>
          <target state="translated">"%"</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Percentage placeholder</source>
          <target state="translated">Espaço reservado percentual</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Multiplies a number by 100 and inserts a localized percentage symbol in the result string.</source>
          <target state="translated">Multiplica um número por 100 e insere um símbolo percentual localizado na cadeia de caracteres de resultado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`0.3697 ("%#0.00", en-US) -&gt; %36.97`</ph>; <ph id="ph2">`0.3697 ("%#0.00", el-GR) -&gt; %36,97`</ph>; <ph id="ph3">`0.3697 ("##.0 %", en-US) -&gt; 37.0 %`</ph>; <ph id="ph4">`0.3697 ("##.0 %", el-GR) -&gt; 37,0 %`</ph></source>
          <target state="translated"><ph id="ph1">`0.3697 ("%#0.00", en-US) -&gt; %36.97`</ph>; <ph id="ph2">`0.3697 ("%#0.00", el-GR) -&gt; %36,97`</ph>; <ph id="ph3">`0.3697 ("##.0 %", en-US) -&gt; 37.0 %`</ph>; <ph id="ph4">`0.3697 ("##.0 %", el-GR) -&gt; 37,0 %`</ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>"‰"</source>
          <target state="translated">"‰"</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Per mille placeholder</source>
          <target state="translated">Espaço reservado por milhar</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Multiplies a number by 1000 and inserts a localized per mille symbol in the result string.</source>
          <target state="translated">Multiplica um número por 1000 e insere um símbolo de por milhar localizado na cadeia de caracteres de resultado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`0.03697 ("#0.00‰", en-US) -&gt; 36.97‰`</ph>; <ph id="ph2">`0.03697 ("#0.00‰", ru-RU) -&gt; 36,97‰`</ph></source>
          <target state="translated"><ph id="ph1">`0.03697 ("#0.00‰", en-US) -&gt; 36.97‰`</ph>; <ph id="ph2">`0.03697 ("#0.00‰", ru-RU) -&gt; 36,97‰`</ph></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>"E0", "E+0", "E-0", "e0", "e+0", "e-0"</source>
          <target state="translated">"E0", "E+0", "E-0", "e0", "e+0", "e-0"</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Exponential notation</source>
          <target state="translated">Notação exponencial</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If followed by at least one 0 (zero), formats the result using exponential notation.</source>
          <target state="translated">Se seguida por pelo menos um 0 (zero), formata o resultado usando notação exponencial.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The case of "E" or "e" indicates the case of the exponent symbol in the result string.</source>
          <target state="translated">A caixa de “E” ou “e” indica a caixa do símbolo do expoente na cadeia de caracteres de resultado.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The number of zeros following the "E" or "e" character determines the minimum number of digits in the exponent.</source>
          <target state="translated">O número de zero depois do caractere “E” ou “e” determina o número mínimo de dígitos do expoente.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A plus sign (+) indicates that a sign character always precedes the exponent.</source>
          <target state="translated">Um sinal de positivo (+) indica que um caractere de sinal sempre precede o expoente.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A minus sign (-) indicates that a sign character precedes only negative exponents.</source>
          <target state="translated">Um sinal de negativo (-) indica que um caractere de sinal precede apenas expoentes negativos.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`987654 ("#0.0e0") -&gt; 98.8e4`</ph>; <ph id="ph2">`1503.92311 ("0.0##e+00") -&gt; 1.504e+03`</ph>; <ph id="ph3">`1.8901385E-16 ("0.0e+00") -&gt; 1.9e-16`</ph></source>
          <target state="translated"><ph id="ph1">`987654 ("#0.0e0") -&gt; 98.8e4`</ph>; <ph id="ph2">`1503.92311 ("0.0##e+00") -&gt; 1.504e+03`</ph>; <ph id="ph3">`1.8901385E-16 ("0.0e+00") -&gt; 1.9e-16`</ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Escape character</source>
          <target state="translated">Caractere de escape</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Causes the next character to be interpreted as a literal rather than as a custom format specifier.</source>
          <target state="translated">Faz com que o próximo caractere seja interpretado como um literal em vez de como um especificador de formato personalizado.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>'string', "string"</source>
          <target state="translated">'string', "string"</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Literal string delimiter</source>
          <target state="translated">Delimitador de cadeia de caracteres literal</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Indicates that the enclosed characters should be copied to the result string unchanged.</source>
          <target state="translated">Indica que os caracteres delimitados devem ser copiados para a cadeia de caracteres de resultado sem sofrerem alterações.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>;</source>
          <target state="translated">;</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Section separator</source>
          <target state="translated">Separador de seção</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Defines sections with separate format strings for positive, negative, and zero numbers.</source>
          <target state="translated">Define seções com cadeias de caracteres de formato separadas para números positivos, negativos e zero.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`12.345 ("#0.0#;(#0.0#);-\0-") -&gt; 12.35`</ph>; <ph id="ph2">`0 ("#0.0#;(#0.0#);-\0-") -&gt; -0-`</ph>; <ph id="ph3">`-12.345 ("#0.0#;(#0.0#);-\0-") -&gt; (12.35)`</ph>; <ph id="ph4">`12.345 ("#0.0#;(#0.0#)") -&gt; 12.35`</ph>; <ph id="ph5">`0 ("#0.0#;(#0.0#)") -&gt; 0.0 ; -12.345 ("#0.0#;(#0.0#)") -&gt; (12.35)`</ph></source>
          <target state="translated"><ph id="ph1">`12.345 ("#0.0#;(#0.0#);-\0-") -&gt; 12.35`</ph>; <ph id="ph2">`0 ("#0.0#;(#0.0#);-\0-") -&gt; -0-`</ph>; <ph id="ph3">`-12.345 ("#0.0#;(#0.0#);-\0-") -&gt; (12.35)`</ph>; <ph id="ph4">`12.345 ("#0.0#;(#0.0#)") -&gt; 12.35`</ph>; <ph id="ph5">`0 ("#0.0#;(#0.0#)") -&gt; 0.0 ; -12.345 ("#0.0#;(#0.0#)") -&gt; (12.35)`</ph></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Outros</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>All other characters</source>
          <target state="translated">Todos os outros caracteres</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The character is copied to the result string unchanged.</source>
          <target state="translated">O caractere é copiado, inalterado, para a cadeia de caracteres de resultado.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The following sections provide detailed information about each of the custom numeric format specifiers.</source>
          <target state="translated">As seções a seguir fornecem informações detalhadas sobre cada um dos especificadores de formato numérico personalizado.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The "0" Custom Specifier</source>
          <target state="translated">Especificador personalizado "0"</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The "0" custom format specifier serves as a zero-placeholder symbol.</source>
          <target state="translated">O especificador de formato personalizado “0 " funciona como um símbolo de espaço reservado de zero.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If the value that is being formatted has a digit in the position where the zero appears in the format string, that digit is copied to the result string; otherwise, a zero appears in the result string.</source>
          <target state="translated">Se o valor que está sendo formatado tiver um dígito na posição em que o zero aparece na cadeia de caracteres de formato, esse dígito será copiado para a cadeia de caracteres de resultado; caso contrário, um zero aparecerá na cadeia de caracteres de resultado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The position of the leftmost zero before the decimal point and the rightmost zero after the decimal point determines the range of digits that are always present in the result string.</source>
          <target state="translated">A posição do zero mais à esquerda antes do ponto decimal e o zero mais à direita após o ponto decimal determina o intervalo de dígitos que estão sempre presentes na cadeia de caracteres de resultado.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The "00" specifier causes the value to be rounded to the nearest digit preceding the decimal, where rounding away from zero is always used.</source>
          <target state="translated">O especificador "00" faz com que o valor seja arredondado para o dígito mais próximo anterior ao decimal, no qual o arredondamento para cima sempre é usado.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>For example, formatting 34.5 with "00" would result in the value 35.</source>
          <target state="translated">Por exemplo, a formatação de 34,5 com "00" resultaria no valor 35.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The following example displays several values that are formatted by using custom format strings that include zero placeholders.</source>
          <target state="translated">O exemplo a seguir mostra vários valores formatados com cadeias de caracteres de formato personalizado que incluem espaços reservados de zero.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The "#" Custom Specifier</source>
          <target state="translated">Especificador personalizado "#"</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The "#" custom format specifier serves as a digit-placeholder symbol.</source>
          <target state="translated">O especificador de formato personalizado “# " funciona como um símbolo de espaço reservado de dígito.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If the value that is being formatted has a digit in the position where the "#" symbol appears in the format string, that digit is copied to the result string.</source>
          <target state="translated">Se o valor que está sendo formatado tem um dígito na posição onde o símbolo "#" aparece na cadeia de caracteres de formato, esse dígito é copiado para a cadeia de caracteres de resultado.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Otherwise, nothing is stored in that position in the result string.</source>
          <target state="translated">Caso contrário, nada é armazenado nessa posição na cadeia de caracteres de resultado.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Note that this specifier never displays a zero that is not a significant digit, even if zero is the only digit in the string.</source>
          <target state="translated">Observe que esse especificador nunca exibe um zero que não seja um dígito significativo, mesmo se o zero é o único dígito na cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>It will display zero only if it is a significant digit in the number that is being displayed.</source>
          <target state="translated">Ele exibirá zero somente se ele for um dígito significativo no número que está sendo exibido.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The "##" format string causes the value to be rounded to the nearest digit preceding the decimal, where rounding away from zero is always used.</source>
          <target state="translated">A cadeia de caracteres de formato "##" faz com que o valor seja arredondado para o dígito mais próximo anterior ao decimal, no qual o arredondamento para cima sempre é usado.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For example, formatting 34.5 with "##" would result in the value 35.</source>
          <target state="translated">Por exemplo, a formatação de 34,5 com "##" resultaria no valor 35.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The following example displays several values that are formatted by using custom format strings that include digit placeholders.</source>
          <target state="translated">O exemplo a seguir mostra vários valores formatados com cadeias de caracteres de formato personalizado que incluem espaços reservados de dígito.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>To return a result string in which absent digits or leading zeroes are replaced by spaces, use the <bpt id="p1">[</bpt>composite formatting<ept id="p1">](composite-format.md)</ept> feature and specify a field width, as the following example illustrates.</source>
          <target state="translated">Para retornar uma cadeia de caracteres de resultado em que dígitos ausentes ou zeros à esquerda são substituídos por espaços, use o recurso de <bpt id="p1">[</bpt>formatação de composição<ept id="p1">](composite-format.md)</ept> e especifique uma largura de campo, como mostra o exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The "." Custom Specifier</source>
          <target state="translated">O "." Especificador Personalizado</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The "." custom format specifier inserts a localized decimal separator into the result string.</source>
          <target state="translated">O especificador de formato personalizado "." insere um separador decimal localizado na cadeia de caracteres resultante.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The first period in the format string determines the location of the decimal separator in the formatted value; any additional periods are ignored.</source>
          <target state="translated">O primeiro caractere de ponto na cadeia de caracteres de formato determina o local do separador decimal no valor formatado; quaisquer caracteres de ponto adicionais são ignorados.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The character that is used as the decimal separator in the result string is not always a period; it is determined by the <bpt id="p1">[</bpt>NumberDecimalSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator)</ept> property of the <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> object that controls formatting.</source>
          <target state="translated">O caractere que é usado como separador decimal na cadeia de caracteres de resultado não é sempre um ponto, ele é determinado pela propriedade <bpt id="p1">[</bpt>NumberDecimalSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator)</ept> do objeto <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> que controla a formatação.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The following example uses the "." format specifier to define the location of the decimal point in several result strings.</source>
          <target state="translated">O exemplo a seguir usa o especificador de formato "." para definir a posição do ponto decimal em várias cadeias de caracteres de resultados.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The "," Custom Specifier</source>
          <target state="translated">Especificador personalizado ","</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The "," character serves as both a group separator and a number scaling specifier.</source>
          <target state="translated">O caractere "," funciona tanto como um separador de grupo quanto como um especificador de escala do número.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Group separator: If one or more commas are specified between two digit placeholders (0 or #) that format the integral digits of a number, a group separator character is inserted between each number group in the integral part of the output.</source>
          <target state="translated">Separador de grupo: se uma ou mais vírgulas forem especificadas entre dois espaços reservados de dígito (0 ou #) que formatam os dígitos integrais de um número, um caractere separador de grupo será inserido entre cada grupo de números na parte integral da saída.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>NumberGroupSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator)</ept> and <bpt id="p2">[</bpt>NumberGroupSizes<ept id="p2">](xref:System.Globalization.NumberFormatInfo.NumberGroupSizes)</ept> properties of the current <bpt id="p3">[</bpt>NumberFormatInfo<ept id="p3">](xref:System.Globalization.NumberFormatInfo)</ept> object determine the character used as the number group separator and the size of each number group.</source>
          <target state="translated">As propriedades <bpt id="p1">[</bpt>NumberGroupSeparator<ept id="p1">](xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator)</ept> e <bpt id="p2">[</bpt>NumberGroupSizes<ept id="p2">](xref:System.Globalization.NumberFormatInfo.NumberGroupSizes)</ept> do objeto <bpt id="p3">[</bpt>NumberFormatInfo<ept id="p3">](xref:System.Globalization.NumberFormatInfo)</ept> atual determinam o caractere usado como separador de número de grupo e o tamanho de cada grupo de números.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>For example, if the string "#,#" and the invariant culture are used to format the number 1000, the output is "1,000".</source>
          <target state="translated">Por exemplo, se a cadeia de caracteres "#,#" e a cultura invariável forem usadas para formatar o número 1000, a saída será "1.000".</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Number scaling specifier: If one or more commas are specified immediately to the left of the explicit or implicit decimal point, the number to be formatted is divided by 1000 for each comma.</source>
          <target state="translated">Especificador de escala numérica: se uma ou mais vírgulas forem especificadas imediatamente à esquerda do ponto decimal explícito ou implícito, o número a ser formatado será dividido por 1000 para cada vírgula.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For example, if the string "0,," is used to format the number 100 million, the output is "100".</source>
          <target state="translated">Por exemplo, se a cadeia de caracteres "0,," for usada para formatar o número 100 milhões, a saída será "100".</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>You can use group separator and number scaling specifiers in the same format string.</source>
          <target state="translated">Você pode usar os especificadores de separador de grupo e escala numérica na mesma cadeia de caracteres de formato.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>For example, if the string "#,0,," and the invariant culture are used to format the number one billion, the output is "1,000".</source>
          <target state="translated">Por exemplo, se a cadeia de caracteres "#, 0,," e a cultura invariante forem usadas para formatar o número um bilhão, a saída será "1.000".</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of the comma as a group separator.</source>
          <target state="translated">O exemplo a seguir ilustra o uso da vírgula como um separador de grupo.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of the comma as a specifier for number scaling.</source>
          <target state="translated">O exemplo a seguir ilustra o uso da vírgula como um especificador de escala numérica.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The "%" Custom Specifier</source>
          <target state="translated">Especificador personalizado "%"</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A percent sign (%) in a format string causes a number to be multiplied by 100 before it is formatted.</source>
          <target state="translated">Um sinal de porcentagem (%) em uma cadeia de caracteres de formato faz com que um número seja multiplicado por 100 antes de ser formatado.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The localized percent symbol is inserted in the number at the location where the % appears in the format string.</source>
          <target state="translated">O símbolo de porcentagem localizado é inserido no próprio número no local em que o % aparece na cadeia de caracteres de formato.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The percent character used is defined by the <bpt id="p1">[</bpt>PercentSymbol<ept id="p1">](xref:System.Globalization.NumberFormatInfo.PercentSymbol)</ept> property of the current <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> object.</source>
          <target state="translated">O caractere de porcentagem usado é definido pela propriedade <bpt id="p1">[</bpt>PercentSymbol<ept id="p1">](xref:System.Globalization.NumberFormatInfo.PercentSymbol)</ept> do objeto <bpt id="p2">[</bpt>NumberFormatInfo<ept id="p2">](xref:System.Globalization.NumberFormatInfo)</ept> atual.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The following example defines several custom format strings that include the "%" custom specifier.</source>
          <target state="translated">O exemplo a seguir define várias cadeias de caracteres de formato personalizado que incluem o especificador personalizado "%".</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The "‰" Custom Specifier</source>
          <target state="translated">Especificador personalizado "‰"</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A per mille character (‰ or \u2030) in a format string causes a number to be multiplied by 1000 before it is formatted.</source>
          <target state="translated">Um caractere de por mil sinal (‰ ou \u2030) em uma cadeia de caracteres de formato faz com que um número seja multiplicado por 1000 antes de ser formatado.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The appropriate per mille symbol is inserted in the returned string at the location where the ‰ symbol appears in the format string.</source>
          <target state="translated">O símbolo de por mil apropriado é inserido na cadeia de caracteres retornada no local em que o símbolo ‰ aparece na cadeia de caracteres de formato.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The per mille character used is defined by the <bpt id="p1">[</bpt>NumberFormatInfo.PerMilleSymbol<ept id="p1">](xref:System.Globalization.NumberFormatInfo.PerMilleSymbol)</ept> property of the object that provides culture-specific formatting information.</source>
          <target state="translated">O caractere de por mil usado é definido pela propriedade <bpt id="p1">[</bpt>NumberFormatInfo.PerMilleSymbol<ept id="p1">](xref:System.Globalization.NumberFormatInfo.PerMilleSymbol)</ept> do objeto que fornece informações de formatação específicas da cultura.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The following example defines a custom format string that includes the "‰" custom specifier.</source>
          <target state="translated">O exemplo a seguir define uma cadeia de caracteres de formato personalizado que inclui o especificador personalizado "‰".</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The "E" and "e" Custom Specifiers</source>
          <target state="translated">Especificadores personalizados "E" e "e"</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>If any of the strings "E", "E+", "E-", "e", "e+", or "e-" are present in the format string and are followed immediately by at least one zero, the number is formatted by using scientific notation with an "E" or "e" inserted between the number and the exponent.</source>
          <target state="translated">Se qualquer uma das cadeias de caracteres "E", " E + ", " E - ", "e", " e + " ou " e - " estiver presente na cadeia de caracteres de formato e for seguida imediatamente por pelo menos um caractere zero, então o número será formatado usando notação científica com um "E" ou "e" inserido entre o número e o expoente.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The number of zeros following the scientific notation indicator determines the minimum number of digits to output for the exponent.</source>
          <target state="translated">O número de zeros após o indicador de notação científica determina o número mínimo de dígitos que serão enviados para o expoente.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The "E+" and "e+" formats indicate that a plus sign or minus sign should always precede the exponent.</source>
          <target state="translated">Os formatos "E+" e "e+" indicam que um caractere de positivo ou negativo sempre deve preceder o expoente.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The "E", "E-", "e", or "e-" formats indicate that a sign character should precede only negative exponents.</source>
          <target state="translated">Os formatos "E", " E-", "e" ou "e-" indicam que um caractere de sinal só deve preceder os expoentes negativos.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The following example formats several numeric values using the specifiers for scientific notation.</source>
          <target state="translated">O exemplo a seguir formata vários valores numéricos usando os especificadores para notação científica.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The "<ph id="ph1">\"</ph> Escape Character</source>
          <target state="translated">Caractere de escape “<ph id="ph1">\"</ph>”</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The "#", "0", ".", ",", "%", and "‰" symbols in a format string are interpreted as format specifiers rather than as literal characters.</source>
          <target state="translated">Os símbolos “#”, “0 ", “. ”, “,”, “% e "‰" em uma cadeia de caracteres de formato são interpretados como especificadores de formato e não como caracteres literais.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Depending on their position in a custom format string, the uppercase and lowercase "E" as well as the + and - symbols may also be interpreted as format specifiers.</source>
          <target state="translated">Dependendo da sua posição em uma cadeia de caracteres de formato personalizado, o "E" em maiúscula e minúscula, bem como os símbolos + e -, também podem ser interpretados como especificadores de formato.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>To prevent a character from being interpreted as a format specifier, you can precede it with a backslash, which is the escape character.</source>
          <target state="translated">Para impedir que um caractere seja interpretado como um especificador de formato, você pode precedê-lo com uma barra invertida, que é o caractere de escape.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The escape character signifies that the following character is a character literal that should be included in the result string unchanged.</source>
          <target state="translated">O caractere de escape significa que o próximo caractere é um literal de caractere que deve ser incluído inalterado na cadeia de caracteres de resultado.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>To include a backslash in a result string, you must escape it with another backslash (<ph id="ph1">\\</ph>).</source>
          <target state="translated">Para incluir uma barra invertida em uma cadeia de caracteres de resultado, você deve escapá-la com outra barra invertida (<ph id="ph1">\\</ph>).</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Some compilers, such as the C# compiler, may also interpret a single backslash character as an escape character.</source>
          <target state="translated">Alguns compiladores, como o compilador C#, também podem interpretar um único caractere de barra invertida como um caractere de escape.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>To ensure that a string is interpreted correctly when formatting, you can use the verbatim string literal character (the <ph id="ph1">@</ph> character) before the string in C#, or add another backslash character before each backslash.</source>
          <target state="translated">Para garantir que uma cadeia de caracteres seja interpretada corretamente quando formatada, você poderá usar o caractere literal de cadeia de caracteres textual (o caractere <ph id="ph1">@</ph>) antes da cadeia de caracteres em C# ou adicionar outro caractere de barra invertida antes de cada barra invertida.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The following C# example illustrates both approaches.</source>
          <target state="translated">O exemplo de C# a seguir ilustra ambas as abordagens.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The following example uses the escape character to prevent the formatting operation from interpreting the "#", "0", and "<ph id="ph1">\"</ph> characters as either escape characters or format specifiers.</source>
          <target state="translated">O exemplo a seguir usa o caractere de escape para impedir que a operação de formatação interprete os caracteres "#", "0", e "<ph id="ph1">\"</ph>" como caracteres de escape ou especificadores de formato.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The example uses an additional backslash to ensure that a backslash is interpreted as a literal character.</source>
          <target state="translated">O exemplo usa uma barra invertida adicional para garantir que uma barra invertida seja interpretada como um caractere literal.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The ";" Section Separator</source>
          <target state="translated">Separador de seção ";"</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The semicolon (;) is a conditional format specifier that applies different formatting to a number depending on whether its value is positive, negative, or zero.</source>
          <target state="translated">O ponto-e-vírgula (;) é um especificador de formato condicional que aplica formatação diferente a um número dependendo se o valor é positivo, negativo ou zero.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>To produce this behavior, a custom format string can contain up to three sections separated by semicolons.</source>
          <target state="translated">Para produzir esse comportamento, uma cadeia de caracteres de formato personalizado pode conter até três seções separadas por ponto-e-vírgula.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>These sections are described in the following table.</source>
          <target state="translated">Essas seções são descritas na tabela a seguir.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Number of sections</source>
          <target state="translated">Número de seções</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>One section</source>
          <target state="translated">Uma seção</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The format string applies to all values.</source>
          <target state="translated">A cadeia de caracteres de formato aplica-se a todos os valores.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Two sections</source>
          <target state="translated">Duas seções</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The first section applies to positive values and zeros, and the second section applies to negative values.</source>
          <target state="translated">A primeira seção aplica-se a valores positivos e zeros e a segunda seção aplica-se a valores negativos.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>If the number to be formatted is negative, but becomes zero after rounding according to the format in the second section, the resulting zero is formatted according to the first section.</source>
          <target state="translated">Se o número a ser formatado for negativo, mas se tornar zero após o arredondamento de acordo com o formato na segunda seção, então o zero resultante será formatado de acordo com a primeira seção.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Three sections</source>
          <target state="translated">Trê seções</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The first section applies to positive values, the second section applies to negative values, and the third section applies to zeros.</source>
          <target state="translated">A primeira seção aplica-se a valores positivos, a segunda seção aplica-se a valores negativos e a terceira seção aplica-se a zeros.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The second section can be left empty (by having nothing between the semicolons), in which case the first section applies to all nonzero values.</source>
          <target state="translated">A segunda seção pode ser deixada em branco (ao não ter nada entre os pontos-e-vírgulas), caso em que a primeira seção se aplica a todos os valores diferentes de zero.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>If the number to be formatted is nonzero, but becomes zero after rounding according to the format in the first or second section, the resulting zero is formatted according to the third section.</source>
          <target state="translated">Se o número a ser formatado for não zero, mas se tornar zero após o arredondamento de acordo com o formato na primeira ou segunda seção, então o zero resultante será formatado de acordo com a terceira seção.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Section separators ignore any preexisting formatting associated with a number when the final value is formatted.</source>
          <target state="translated">Separadores de seção ignoram qualquer formatação preexistente associada a um número quando o valor final é formatado.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>For example, negative values are always displayed without a minus sign when section separators are used.</source>
          <target state="translated">Por exemplo, valores negativos sempre são exibidos sem um sinal de negativ o quando os separadores de seção são usados.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>If you want the final formatted value to have a minus sign, you should explicitly include the minus sign as part of the custom format specifier.</source>
          <target state="translated">Se desejar que o valor final formatado contenha um sinal de negativo, você deverá incluir explicitamente o sinal de negativo como parte de especificador de formato personalizado.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The following example uses the ";" format specifier to format positive, negative, and zero numbers differently.</source>
          <target state="translated">O exemplo a seguir utiliza o especificador de formato ";" para formatar números positivos, negativos e zero de maneira diferente.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Observações</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Floating-Point Infinities and NaN</source>
          <target state="translated">Infinitos de ponto flutuante e NaN</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Regardless of the format string, if the value of a <bpt id="p1">[</bpt>Single<ept id="p1">](xref:System.Single)</ept> or <bpt id="p2">[</bpt>Double<ept id="p2">](xref:System.Double)</ept> floating-point type is positive infinity, negative infinity, or not a number (NaN), the formatted string is the value of the respective <bpt id="p3">[</bpt>PositiveInfinitySymbol<ept id="p3">](xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol)</ept>, <bpt id="p4">[</bpt>NegativeInfinitySymbol<ept id="p4">](xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol)</ept>, or <bpt id="p5">[</bpt>NaNSymbol<ept id="p5">](xref:System.Globalization.NumberFormatInfo.NaNSymbol)</ept> property that is specified by the currently applicable <bpt id="p6">[</bpt>NumberFormatInfo<ept id="p6">](xref:System.Globalization.NumberFormatInfo)</ept> object.</source>
          <target state="translated">Independentemente da cadeia de caracteres de formato, se o valor de um tipo de ponto flutuante <bpt id="p1">[</bpt>Single<ept id="p1">](xref:System.Single)</ept> ou <bpt id="p2">[</bpt>Double<ept id="p2">](xref:System.Double)</ept> é infinito positivo, infinito negativo ou não é um número (NaN), a cadeia de caracteres formatada é o valor das respectivas propriedades <bpt id="p3">[</bpt>PositiveInfinitySymbol<ept id="p3">](xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol)</ept>, <bpt id="p4">[</bpt>NegativeInfinitySymbol<ept id="p4">](xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol)</ept> ou <bpt id="p5">[</bpt>NaNSymbol<ept id="p5">](xref:System.Globalization.NumberFormatInfo.NaNSymbol)</ept> especificadas pelo objeto <bpt id="p6">[</bpt>NumberFormatInfo<ept id="p6">](xref:System.Globalization.NumberFormatInfo)</ept> aplicável no momento.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Rounding and Fixed-Point Format Strings</source>
          <target state="translated">Arredondamento e cadeias de caracteres de formato de ponto fixo</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>For fixed-point format strings (that is, format strings that do not contain scientific notation format characters), numbers are rounded to as many decimal places as there are digit placeholders to the right of the decimal point.</source>
          <target state="translated">Para cadeias de caracteres de formato de ponto fixo (isto é, cadeias de caracteres de formato que não contêm caracteres de formato de notação científica), os números são arredondados para tantas casas decimais quanto houver espaços reservados de dígitos à direita do ponto decimal.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>If the format string does not contain a decimal point, the number is rounded to the nearest integer.</source>
          <target state="translated">Se a cadeia de caracteres de formato não contiver um ponto decimal, o número será arredondado para o inteiro mais próximo.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>If the number has more digits than there are digit placeholders to the left of the decimal point, the extra digits are copied to the result string immediately before the first digit placeholder.</source>
          <target state="translated">Se o número tiver mais dígitos do que espaços reservados de dígitos à esquerda do ponto decimal, os dígitos extras serão copiados para a cadeia de caracteres de resultado imediatamente antes do primeiro espaço reservado de dígito.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Exemplo</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The following example demonstrates two custom numeric format strings.</source>
          <target state="translated">O exemplo a seguir demonstra duas cadeias de caracteres de formato numérico personalizado.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>In both cases, the digit placeholder (#) displays the numeric data, and all other characters are copied to the result string.</source>
          <target state="translated">Em ambos os casos, o espaço reservado de dígito (#) exibe os dados numéricos e todos os outros caracteres são copiados para a cadeia de caracteres de resultado.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Globalization.NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Globalization.NumberFormatInfo<ept id="p1">](xref:System.Globalization.NumberFormatInfo)</ept></target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Formatting types<ept id="p1">](formatting-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Formatando tipos<ept id="p1">](formatting-types.md)</ept></target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Standard numeric format strings<ept id="p1">](standard-numeric.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Cadeias de caracteres de formato numérico padrão<ept id="p1">](standard-numeric.md)</ept></target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>How to: pad a number with leading zeros<ept id="p1">](pad-number.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Como preencher um número com zeros à esquerda<ept id="p1">](pad-number.md)</ept></target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Composite formatting<ept id="p1">](composite-format.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Formatação de composição<ept id="p1">](composite-format.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>