<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0af9ae7d378d0e83e1748977f17bca35b14d1b0b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\fsharp\language-reference\symbol-and-operator-reference\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e9ac68464032bde679f1bcb450815b35128194d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d2be4dfd667ace1657538087192b103202276ca</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">file index.903db04c668cad7da9f5d63aa1b1eaa712d0d01d.pt-br.xlf is out of handoff scope</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Symbol and Operator Reference (F#)</source>
          <target state="translated">Referência de símbolos e operadores (F#)</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Symbol and Operator Reference (F#)</source>
          <target state="translated">Referência de símbolos e operadores (F#)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>visual f#, f#, functional programming</source>
          <target state="translated">visual f#, f#, programação funcional</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Symbol and Operator Reference</source>
          <target state="translated">Referência de símbolos e operadores</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The API reference links in this article will take you to MSDN.</source>
          <target state="translated">Os links de referência da API neste artigo levarão você até o MSDN.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The docs.microsoft.com API reference is not complete.</source>
          <target state="translated">A referência da API docs.microsoft.com não está completa.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This topic includes a table of symbols and operators that are used in the F# language.</source>
          <target state="translated">Este tópico inclui uma tabela de símbolos e operadores usados na linguagem F#.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Table of Symbols and Operators</source>
          <target state="translated">Tabela de Símbolos e Operadores</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following table describes symbols used in the F# language, provides links to topics that provide more information, and provides a brief description of some of the uses of the symbol.</source>
          <target state="translated">A tabela a seguir descreve os símbolos usados na linguagem F#, fornece links para tópicos que contêm mais informações e fornece uma breve descrição de alguns dos usos do símbolo.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Symbols are ordered according to the ASCII character set ordering.</source>
          <target state="translated">Os símbolos são organizados de acordo com a ordem de conjunto de caracteres ASCII.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Symbol or operator</source>
          <target state="translated">Símbolo ou operador</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Reference Cells<ept id="p1">](../reference-cells.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Células de Referência<ept id="p1">](../reference-cells.md)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Computation Expressions<ept id="p1">](../computation-expressions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Expressões de Computação<ept id="p1">](../computation-expressions.md)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Dereferences a reference cell.</source>
          <target state="translated">Cancela a referência de uma célula de referência.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>After a keyword, indicates a modified version of the keyword's behavior as controlled by a workflow.</source>
          <target state="translated">Após uma palavra-chave, indica uma versão modificada do comportamento da palavra-chave conforme controlado por um fluxo de trabalho.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
          <target state="translated">Não aplicável.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Not used in F#.</source>
          <target state="translated">Não é usada em F#.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`&lt;&gt;`</ph> for inequality operations.</source>
          <target state="translated">Use <ph id="ph1">`&lt;&gt;`</ph> para operações de desigualdade.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Literals<ept id="p1">](../literals.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Literais<ept id="p1">](../literals.md)</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Strings<ept id="p1">](../strings.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Cadeias de Caracteres<ept id="p1">](../strings.md)</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Delimits a text string.</source>
          <target state="translated">Delimita uma cadeia de texto.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Strings<ept id="p1">](../strings.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Cadeias de Caracteres<ept id="p1">](../strings.md)</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Delimits a verbatim text string.</source>
          <target state="translated">Delimita uma cadeia de caracteres textuais.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Differs from <ph id="ph1">`@"..."`</ph> in that a you can indicate a quotation mark character by using a single quote in the string.</source>
          <target state="translated">Difere de <ph id="ph1">`@"..."`</ph> em que você pode indicar um caractere de aspas usando aspas simples na cadeia de caracteres.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Compiler Directives<ept id="p1">](../compiler-directives.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Diretivas de Compilador<ept id="p1">](../compiler-directives.md)</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Flexible Types<ept id="p1">](../flexible-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Tipos Flexíveis<ept id="p1">](../flexible-types.md)</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Prefixes a preprocessor or compiler directive, such as <ph id="ph1">`#light`</ph>.</source>
          <target state="translated">Prefixos de uma diretiva de pré-processador ou compilador, tal como <ph id="ph1">`#light`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When used with a type, indicates a <bpt id="p1">*</bpt>flexible type<ept id="p1">*</ept>, which refers to a type or any one of its derived types.</source>
          <target state="translated">Quando usado com um tipo, indica um <bpt id="p1">*</bpt>tipo flexível<ept id="p1">*</ept>, que se refere a um tipo ou a qualquer um de seus tipos derivados.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>No more information available.</source>
          <target state="translated">Não há mais informações disponíveis.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Used internally for certain compiler-generated variable and function names.</source>
          <target state="translated">Usado internamente para determinados nomes de variáveis e de funções gerados pelo compilador.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arithmetic Operators<ept id="p1">](arithmetic-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Aritméticos<ept id="p1">](arithmetic-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Code Quotations<ept id="p1">](../code-quotations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Citações de Código<ept id="p1">](../code-quotations.md)</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Computes the integer modulus.</source>
          <target state="translated">Calcula o módulo de inteiro.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Used for splicing expressions into typed code quotations.</source>
          <target state="translated">Usado para união de expressões em cotações de códigos digitados.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Code Quotations<ept id="p1">](../code-quotations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Citações de Código<ept id="p1">](../code-quotations.md)</ept></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Used for splicing expressions into untyped code quotations.</source>
          <target state="translated">Usado para união de expressões em cotações de códigos não digitados.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nullable Operators<ept id="p1">](nullable-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Anuláveis<ept id="p1">](nullable-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Computes the integer modulus, when the right side is a nullable type.</source>
          <target state="translated">Calcula o módulo de inteiro, quando o lado direito for um tipo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Match Expressions<ept id="p1">](../match-expressions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Expressões Match<ept id="p1">](../match-expressions.md)</ept></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Computes the address of a mutable value, for use when interoperating with other languages.</source>
          <target state="translated">Calcula o endereço de um valor mutável, para uso ao interoperar com outros idiomas.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Used in AND patterns.</source>
          <target state="translated">Usado em padrões AND.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Boolean Operators<ept id="p1">](boolean-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Boolianos<ept id="p1">](boolean-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Computes the Boolean AND operation.</source>
          <target state="translated">Calcula a operação AND booleana.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Bitwise Operators<ept id="p1">](bitwise-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Bit a Bit<ept id="p1">](bitwise-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Computes the bitwise AND operation.</source>
          <target state="translated">Calcula a operação AND bit a bit.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Literals<ept id="p1">](../literals.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Literais<ept id="p1">](../literals.md)</ept></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Automatic Generalization<ept id="p1">](../generics/automatic-generalization.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Generalização automática<ept id="p1">](../generics/automatic-generalization.md)</ept></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Delimits a single-character literal.</source>
          <target state="translated">Delimita um literal de caractere único.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Indicates a generic type parameter.</source>
          <target state="translated">Indica um parâmetro de tipo genérico.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>No more information available.</source>
          <target state="translated">Não há mais informações disponíveis.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Delimits an identifier that would otherwise not be a legal identifier, such as a language keyword.</source>
          <target state="translated">Delimita um identificador que não seria um identificador legal, como uma palavra-chave de idioma.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Unit Type<ept id="p1">](../unit-type.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Tipo Unit<ept id="p1">](../unit-type.md)</ept></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Represents the single value of the unit type.</source>
          <target state="translated">Representa um único valor do tipo de unidade.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Tuples<ept id="p1">](../tuples.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Tuplas<ept id="p1">](../tuples.md)</ept></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operator Overloading<ept id="p1">](../operator-overloading.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Sobrecarga de Operador<ept id="p1">](../operator-overloading.md)</ept></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Indicates the order in which expressions are evaluated.</source>
          <target state="translated">Indica a ordem na qual as expressões são avaliadas.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Delimits a tuple.</source>
          <target state="translated">Delimita uma tupla.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Used in operator definitions.</source>
          <target state="translated">Usado em definições de operador.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Delimits a comment that could span multiple lines.</source>
          <target state="translated">Delimita um comentário que poderia abranger várias linhas.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Active Patterns<ept id="p1">](../active-patterns.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Padrões Ativos<ept id="p1">](../active-patterns.md)</ept></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Delimits an active pattern.</source>
          <target state="translated">Delimita um padrão ativo.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Also called <bpt id="p1">*</bpt>banana clips<ept id="p1">*</ept>.</source>
          <target state="translated">Também chamado de <bpt id="p1">*</bpt>pipe ativo<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arithmetic Operators<ept id="p1">](arithmetic-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Aritméticos<ept id="p1">](arithmetic-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Tuples<ept id="p1">](../tuples.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Tuplas<ept id="p1">](../tuples.md)</ept></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Units of Measure<ept id="p1">](../units-of-measure.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Unidades de Medida<ept id="p1">](../units-of-measure.md)</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>When used as a binary operator, multiplies the left and right sides.</source>
          <target state="translated">Quando usado como um operador binário, multiplica os lados esquerdo e direito.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>In types, indicates pairing in a tuple.</source>
          <target state="translated">Em tipos, indica emparelhamento em uma tupla.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Used in units of measure types.</source>
          <target state="translated">Usado em unidades de tipos de medida.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nullable Operators<ept id="p1">](nullable-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Anuláveis<ept id="p1">](nullable-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Multiplies the left and right sides, when the right side is a nullable type.</source>
          <target state="translated">Multiplica os lados esquerdo e direito, quando o lado direito for um tipo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arithmetic Operators<ept id="p1">](arithmetic-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Aritméticos<ept id="p1">](arithmetic-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Computes the exponentiation operation (<ph id="ph1">`x ** y`</ph> means <ph id="ph2">`x`</ph> to the power of <ph id="ph3">`y`</ph>).</source>
          <target state="translated">Calcula a operação de exponenciação (<ph id="ph1">`x ** y`</ph> significa <ph id="ph2">`x`</ph> à potência de <ph id="ph3">`y`</ph>).</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arithmetic Operators<ept id="p1">](arithmetic-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Aritméticos<ept id="p1">](arithmetic-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>When used as a binary operator, adds the left and right sides.</source>
          <target state="translated">Quando usado como um operador binário, adiciona os lados esquerdo e direito.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>When used as a unary operator, indicates a positive quantity.</source>
          <target state="translated">Quando usado como um operador unário, indica uma quantidade positiva.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>(Formally, it produces the same value with the sign unchanged.)</source>
          <target state="translated">(Formalmente, ele produz o mesmo valor com o sinal inalterado).</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nullable Operators<ept id="p1">](nullable-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Anuláveis<ept id="p1">](nullable-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Adds the left and right sides, when the right side is a nullable type.</source>
          <target state="translated">Adiciona os lados esquerdo e direito, quando o lado direito for um tipo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Tuples<ept id="p1">](../tuples.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Tuplas<ept id="p1">](../tuples.md)</ept></target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Separates the elements of a tuple, or type parameters.</source>
          <target state="translated">Separa os elementos de uma tupla ou parâmetros de tipo.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arithmetic Operators<ept id="p1">](arithmetic-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Aritméticos<ept id="p1">](arithmetic-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When used as a binary operator, subtracts the right side from the left side.</source>
          <target state="translated">Quando usado como um operador binário, subtrai o lado direito do lado esquerdo.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>When used as a unary operator, performs a negation operation.</source>
          <target state="translated">Quando usado como um operador unário, executa uma operação de negação.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nullable Operators<ept id="p1">](nullable-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Anuláveis<ept id="p1">](nullable-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Subtracts the right side from the left side, when the right side is a nullable type.</source>
          <target state="translated">Subtrai o lado direito do lado esquerdo, quando o lado direito for um tipo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Functions<ept id="p1">](../functions/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Funções<ept id="p1">](../functions/index.md)</ept></target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Match Expressions<ept id="p1">](../match-expressions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Expressões Match<ept id="p1">](../match-expressions.md)</ept></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>In function types, delimits arguments and return values.</source>
          <target state="translated">Em tipos de função, delimita argumentos e valores de retorno.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Yields an expression (in sequence expressions); equivalent to the <ph id="ph1">`yield`</ph> keyword.</source>
          <target state="translated">Gera uma expressão (em expressões de sequência); equivalente à palavra-chave <ph id="ph1">`yield`</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Used in match expressions</source>
          <target state="translated">Usado em expressões de correspondência</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Members<ept id="p1">](../members/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Membros<ept id="p1">](../members/index.md)</ept></target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Primitive Types<ept id="p1">](../primitive-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Tipos Primitivos<ept id="p1">](../primitive-types.md)</ept></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Accesses a member, and separates individual names in a fully qualified name.</source>
          <target state="translated">Acessa um membro e separa nomes individuais em um nome totalmente qualificado.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Specifies a decimal point in floating point numbers.</source>
          <target state="translated">Especifica um ponto decimal em números de ponto flutuante.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Loops: <ph id="ph1">`for...in`</ph> Expression<ept id="p1">](../loops-for-in-expression.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Loops: <ph id="ph1">`for...in`</ph> expressão<ept id="p1">](../loops-for-in-expression.md)</ept></target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Specifies a range.</source>
          <target state="translated">Especifica um intervalo.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Loops: <ph id="ph1">`for...in`</ph> Expression<ept id="p1">](../loops-for-in-expression.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Loops: <ph id="ph1">`for...in`</ph> expressão<ept id="p1">](../loops-for-in-expression.md)</ept></target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Specifies a range together with an increment.</source>
          <target state="translated">Especifica um intervalo com um incremento.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arrays<ept id="p1">](../arrays.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Matrizes<ept id="p1">](../arrays.md)</ept></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Accesses an array element.</source>
          <target state="translated">Acessa um elemento de matriz.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arithmetic Operators<ept id="p1">](arithmetic-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Aritméticos<ept id="p1">](arithmetic-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Units of Measure<ept id="p1">](../units-of-measure.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Unidades de Medida<ept id="p1">](../units-of-measure.md)</ept></target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Divides the left side (numerator) by the right side (denominator).</source>
          <target state="translated">Divide o lado esquerdo (numerador) pelo direito (denominador).</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Used in units of measure types.</source>
          <target state="translated">Usado em unidades de tipos de medida.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nullable Operators<ept id="p1">](nullable-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Anuláveis<ept id="p1">](nullable-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Divides the left side by the right side, when the right side is a nullable type.</source>
          <target state="translated">Divide o lado esquerdo pelo lado direito, quando o lado direito for um tipo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Indicates the beginning of a single-line comment.</source>
          <target state="translated">Indica o início de um comentário de uma linha.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Documentation<ept id="p1">](../xml-documentation.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Documentação XML<ept id="p1">](../xml-documentation.md)</ept></target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Indicates an XML comment.</source>
          <target state="translated">Indica um comentário XML.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Functions<ept id="p1">](../functions/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Funções<ept id="p1">](../functions/index.md)</ept></target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>In a type annotation, separates a parameter or member name from its type.</source>
          <target state="translated">Em uma anotação de tipo, separa um nome de parâmetro ou de membro do seu tipo.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Lists<ept id="p1">](../lists.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Listas<ept id="p1">](../lists.md)</ept></target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Match Expressions<ept id="p1">](../match-expressions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Expressões Match<ept id="p1">](../match-expressions.md)</ept></target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Creates a list.</source>
          <target state="translated">Cria uma lista.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The element on the left side is prepended to the list on the right side.</source>
          <target state="translated">O elemento no lado esquerdo é anexado à lista no lado direito.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Used in pattern matching to separate the parts of a list.</source>
          <target state="translated">Usado na correspondência de padrões para separar as partes de uma lista.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Reference Cells<ept id="p1">](../reference-cells.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Células de Referência<ept id="p1">](../reference-cells.md)</ept></target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Assigns a value to a reference cell.</source>
          <target state="translated">Atribui um valor a uma célula de referência.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Casting and Conversions<ept id="p1">](../casting-and-conversions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Conversões<ept id="p1">](../casting-and-conversions.md)</ept></target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Converts a type to type that is higher in the hierarchy.</source>
          <target state="translated">Converte um tipo em um tipo que seja superior na hierarquia.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Match Expressions<ept id="p1">](../match-expressions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Expressões Match<ept id="p1">](../match-expressions.md)</ept></target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`true`</ph> if the value matches the specified type; otherwise, returns <ph id="ph2">`false`</ph> (type test operator).</source>
          <target state="translated">Retorna <ph id="ph1">`true`</ph> se o valor corresponder ao tipo especificado; caso contrário, retorna <ph id="ph2">`false`</ph> (operador de teste do tipo).</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Casting and Conversions<ept id="p1">](../casting-and-conversions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Conversões<ept id="p1">](../casting-and-conversions.md)</ept></target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Converts a type to a type that is lower in the hierarchy.</source>
          <target state="translated">Converte um tipo em um tipo que seja inferior na hierarquia.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Verbose Syntax<ept id="p1">](../verbose-syntax.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Sintaxe Detalhada<ept id="p1">](../verbose-syntax.md)</ept></target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Lists<ept id="p1">](../lists.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Listas<ept id="p1">](../lists.md)</ept></target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Records<ept id="p1">](../records.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Registros<ept id="p1">](../records.md)</ept></target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Separates expressions (used mostly in verbose syntax).</source>
          <target state="translated">Separa expressões (usadas principalmente na sintaxe detalhada).</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Separates elements of a list.</source>
          <target state="translated">Separa elementos de uma lista.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Separates fields of a record.</source>
          <target state="translated">Separa campos de um registro.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arithmetic Operators<ept id="p1">](arithmetic-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Aritméticos<ept id="p1">](arithmetic-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Computes the less-than operation.</source>
          <target state="translated">Calcula a operação menor que.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nullable Operators<ept id="p1">](nullable-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Anuláveis<ept id="p1">](nullable-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Computes the less than operation, when the right side is a nullable type.</source>
          <target state="translated">Calcula a operação menor que, quando o lado direito for um tipo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Functions<ept id="p1">](../functions/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Funções<ept id="p1">](../functions/index.md)</ept></target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Composes two functions in reverse order; the second one is executed first (backward composition operator).</source>
          <target state="translated">Compõe duas funções em ordem inversa; a segunda é executada primeiro (operador de composição invertida).</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Bitwise Operators<ept id="p1">](bitwise-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Bit a Bit<ept id="p1">](bitwise-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Shifts bits in the quantity on the left side to the left by the number of bits specified on the right side.</source>
          <target state="translated">Desloca bits na quantidade no lado esquerdo para a esquerda pelo número de bits especificado no lado direito.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Values<ept id="p1">](../values/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Valores<ept id="p1">](../values/index.md)</ept></target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Assigns a value to a variable.</source>
          <target state="translated">Atribui um valor a uma variável.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Automatic Generalization<ept id="p1">](../generics/automatic-generalization.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Generalização automática<ept id="p1">](../generics/automatic-generalization.md)</ept></target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Delimits type parameters.</source>
          <target state="translated">Delimita parâmetros de tipo.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arithmetic Operators<ept id="p1">](arithmetic-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Aritméticos<ept id="p1">](arithmetic-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`true`</ph> if the left side is not equal to the right side; otherwise, returns false.</source>
          <target state="translated">Retorna <ph id="ph1">`true`</ph> se o lado esquerdo não for igual ao direito; caso contrário, retorna false.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nullable Operators<ept id="p1">](nullable-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Anuláveis<ept id="p1">](nullable-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Computes the "not equal" operation when the right side is a nullable type.</source>
          <target state="translated">Calcula a operação "diferente de", quando o lado direito for um tipo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arithmetic Operators<ept id="p1">](arithmetic-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Aritméticos<ept id="p1">](arithmetic-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`true`</ph> if the left side is less than or equal to the right side; otherwise, returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Retorna <ph id="ph1">`true`</ph> se o lado esquerdo for menor ou igual ao lado direito; caso contrário, retorna <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nullable Operators<ept id="p1">](nullable-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Anuláveis<ept id="p1">](nullable-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Computes the "less than or equal to" operation when the right side is a nullable type.</source>
          <target state="translated">Calcula a operação "menor ou igual a", quando o lado direito for um tipo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Functions<ept id="p1">](../functions/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Funções<ept id="p1">](../functions/index.md)</ept></target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Passes the result of the expression on the right side to the function on left side (backward pipe operator).</source>
          <target state="translated">Passa o resultado da expressão no lado direito para a função no lado esquerdo (operador barra vertical invertida).</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operators.&amp;#40; &amp;#60;&amp;#124;&amp;#124; &amp;#41;&amp;#60;'T1,'T2,'U&amp;#62; Function<ept id="p1">](https://msdn.microsoft.com/visualfsharpdocs/conceptual/operators.%5b-%5bhh-%5d%5b%27t1%2c%27t2%2c%27u%5d-function-%5bfsharp%5d)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores.&amp;#40; &amp;#60;&amp;#124;&amp;#124; &amp;#41;&amp;#60;'T1,'T2,'U&amp;#62; Função<ept id="p1">](https://msdn.microsoft.com/visualfsharpdocs/conceptual/operators.%5b-%5bhh-%5d%5b%27t1%2c%27t2%2c%27u%5d-function-%5bfsharp%5d)</ept></target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Passes the tuple of two arguments on the right side to the function on left side.</source>
          <target state="translated">Passa a tupla de dois argumentos no lado direito para a função no lado esquerdo.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operators.&amp;#40; &amp;#60;&amp;#124;&amp;#124;&amp;#124; &amp;#41;&amp;#60;'T1,'T2,'T3,'U&amp;#62; Function<ept id="p1">](https://msdn.microsoft.com/visualfsharpdocs/conceptual/operators.%5b-%5bhhh-%5d%5b%27t1%2c%27t2%2c%27t3%2c%27u%5d-function-%5bfsharp%5d)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores.&amp;#40; &amp;#60;&amp;#124;&amp;#124;&amp;#124; &amp;#41;&amp;#60;'T1,'T2,'T3,'U&amp;#62; Função<ept id="p1">](https://msdn.microsoft.com/visualfsharpdocs/conceptual/operators.%5b-%5bhhh-%5d%5b%27t1%2c%27t2%2c%27t3%2c%27u%5d-function-%5bfsharp%5d)</ept></target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Passes the tuple of three arguments on the right side to the function on left side.</source>
          <target state="translated">Passa a tupla de três argumentos no lado direito para a função no lado esquerdo.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Code Quotations<ept id="p1">](../code-quotations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Citações de Código<ept id="p1">](../code-quotations.md)</ept></target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Delimits a typed code quotation.</source>
          <target state="translated">Delimita uma cotação de código digitado.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Code Quotations<ept id="p1">](../code-quotations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Citações de Código<ept id="p1">](../code-quotations.md)</ept></target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Delimits an untyped code quotation.</source>
          <target state="translated">Delimita uma cotação de código não digitado.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arithmetic Operators<ept id="p1">](arithmetic-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Aritméticos<ept id="p1">](arithmetic-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`true`</ph> if the left side is equal to the right side; otherwise, returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Retorna <ph id="ph1">`true`</ph> se o lado esquerdo for igual ao lado direito; caso contrário, retorna <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nullable Operators<ept id="p1">](nullable-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Anuláveis<ept id="p1">](nullable-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Computes the "equal" operation when the right side is a nullable type.</source>
          <target state="translated">Calcula a operação "igual", quando o lado direito for um tipo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Not applicable.</source>
          <target state="translated">Não aplicável.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Not used in F#.</source>
          <target state="translated">Não é usada em F#.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`=`</ph> for equality operations.</source>
          <target state="translated">Use <ph id="ph1">`=`</ph> para operações de igualdade.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arithmetic Operators<ept id="p1">](arithmetic-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Aritméticos<ept id="p1">](arithmetic-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`true`</ph> if the left side is greater than the right side; otherwise, returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Retorna <ph id="ph1">`true`</ph> se o lado esquerdo for maior que o lado direito; caso contrário, retorna <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nullable Operators<ept id="p1">](nullable-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Anuláveis<ept id="p1">](nullable-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Computes the "greather than" operation when the right side is a nullable type.</source>
          <target state="translated">Calcula a operação "maior que", quando o lado direito for um tipo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Functions<ept id="p1">](../functions/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Funções<ept id="p1">](../functions/index.md)</ept></target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Composes two functions (forward composition operator).</source>
          <target state="translated">Compõe duas funções (operador de composição direta).</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Bitwise Operators<ept id="p1">](bitwise-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Bit a Bit<ept id="p1">](bitwise-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Shifts bits in the quantity on the left side to the right by the number of places specified on the right side.</source>
          <target state="translated">Desloca bits na quantidade no lado esquerdo para a direita pelo número de casas especificado no lado direito.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arithmetic Operators<ept id="p1">](arithmetic-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Aritméticos<ept id="p1">](arithmetic-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`true`</ph> if the right side is greater than or equal to the left side; otherwise, returns <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Retorna <ph id="ph1">`true`</ph> se o lado direito for maior ou igual ao lado esquerdo; caso contrário, retorna <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nullable Operators<ept id="p1">](nullable-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Anuláveis<ept id="p1">](nullable-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Computes the "greater than or equal" operation when the right side is a nullable type.</source>
          <target state="translated">Calcula a operação "maior ou igual a", quando o lado direito for um tipo que permite valor nulo.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Parameters and Arguments<ept id="p1">](../parameters-and-arguments.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Parâmetros e Argumentos<ept id="p1">](../parameters-and-arguments.md)</ept></target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Specifies an optional argument.</source>
          <target state="translated">Especifica um argumento opcional.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Used as an operator for dynamic method and property calls.</source>
          <target state="translated">Usado como um operador de chamadas de método e propriedade dinâmicas.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>You must provide your own implementation.</source>
          <target state="translated">Você deve fornecer sua própria implementação.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>No more information available.</source>
          <target state="translated">Não há mais informações disponíveis.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Used as an operator for setting dynamic properties.</source>
          <target state="translated">Usado como um operador de propriedades de configuração dinâmica.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>You must provide your own implementation.</source>
          <target state="translated">Você deve fornecer sua própria implementação.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`?&gt;=`</ph>, <ph id="ph2">`?&gt;`</ph>, <ph id="ph3">`?&lt;=`</ph>, <ph id="ph4">`?&lt;`</ph>, <ph id="ph5">`?=`</ph>, <ph id="ph6">`?&lt;&gt;`</ph>, <ph id="ph7">`?+`</ph>, <ph id="ph8">`?-`</ph>, <ph id="ph9">`?*`</ph>, <ph id="ph10">`?/`</ph></source>
          <target state="translated"><ph id="ph1">`?&gt;=`</ph>, <ph id="ph2">`?&gt;`</ph>, <ph id="ph3">`?&lt;=`</ph>, <ph id="ph4">`?&lt;`</ph>, <ph id="ph5">`?=`</ph>, <ph id="ph6">`?&lt;&gt;`</ph>, <ph id="ph7">`?+`</ph>, <ph id="ph8">`?-`</ph>, <ph id="ph9">`?*`</ph>, <ph id="ph10">`?/`</ph></target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nullable Operators<ept id="p1">](nullable-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Anuláveis<ept id="p1">](nullable-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Equivalent to the corresponding operators without the ?</source>
          <target state="translated">Equivalente aos operadores correspondentes sem o sufixo ?</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>prefix, where a nullable type is on the left.</source>
          <target state="translated">em que um tipo que permite valor nulo está à esquerda.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`&gt;=?`</ph>, <ph id="ph2">`&gt;?`</ph>, <ph id="ph3">`&lt;=?`</ph>, <ph id="ph4">`&lt;?`</ph>, <ph id="ph5">`=?`</ph>, <ph id="ph6">`&lt;&gt;?`</ph>, <ph id="ph7">`+?`</ph>, <ph id="ph8">`-?`</ph>, <ph id="ph9">`*?`</ph>, <ph id="ph10">`/?`</ph></source>
          <target state="translated"><ph id="ph1">`&gt;=?`</ph>, <ph id="ph2">`&gt;?`</ph>, <ph id="ph3">`&lt;=?`</ph>, <ph id="ph4">`&lt;?`</ph>, <ph id="ph5">`=?`</ph>, <ph id="ph6">`&lt;&gt;?`</ph>, <ph id="ph7">`+?`</ph>, <ph id="ph8">`-?`</ph>, <ph id="ph9">`*?`</ph>, <ph id="ph10">`/?`</ph></target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nullable Operators<ept id="p1">](nullable-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Anuláveis<ept id="p1">](nullable-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Equivalent to the corresponding operators without the ?</source>
          <target state="translated">Equivalente aos operadores correspondentes sem o sufixo ?</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>suffix, where a nullable type is on the right.</source>
          <target state="translated">em que um tipo que permite valor nulo está à direita.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`?&gt;=?`</ph>, <ph id="ph2">`?&gt;?`</ph>, <ph id="ph3">`?&lt;=?`</ph>, <ph id="ph4">`?&lt;?`</ph>, <ph id="ph5">`?=?`</ph>, <ph id="ph6">`?&lt;&gt;?`</ph>, <ph id="ph7">`?+?`</ph>, <ph id="ph8">`?-?`</ph>, <ph id="ph9">`?*?`</ph>, <ph id="ph10">`?/?`</ph></source>
          <target state="translated"><ph id="ph1">`?&gt;=?`</ph>, <ph id="ph2">`?&gt;?`</ph>, <ph id="ph3">`?&lt;=?`</ph>, <ph id="ph4">`?&lt;?`</ph>, <ph id="ph5">`?=?`</ph>, <ph id="ph6">`?&lt;&gt;?`</ph>, <ph id="ph7">`?+?`</ph>, <ph id="ph8">`?-?`</ph>, <ph id="ph9">`?*?`</ph>, <ph id="ph10">`?/?`</ph></target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Nullable Operators<ept id="p1">](nullable-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Anuláveis<ept id="p1">](nullable-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Equivalent to the corresponding operators without the surrounding question marks, where both sides are nullable types.</source>
          <target state="translated">Equivalente aos operadores correspondentes sem pontos de interrogação adjacentes, em que os dois lados são tipos que permitem valor nulo.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Lists<ept id="p1">](../lists.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Listas<ept id="p1">](../lists.md)</ept></target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Strings<ept id="p1">](../strings.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Cadeias de Caracteres<ept id="p1">](../strings.md)</ept></target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Concatenates two lists.</source>
          <target state="translated">Concatena duas listas.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>When placed before a string literal, indicates that the string is to be interpreted verbatim, with no interpretation of escape characters.</source>
          <target state="translated">Quando colocado antes de uma sequência literal, indica que a sequência deve ser interpretada textualmente, sem nenhuma interpretação de caracteres de escape.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Lists<ept id="p1">](../lists.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Listas<ept id="p1">](../lists.md)</ept></target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Delimits the elements of a list.</source>
          <target state="translated">Delimita os elementos de uma lista.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arrays<ept id="p1">](../arrays.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Matrizes<ept id="p1">](../arrays.md)</ept></target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Delimits the elements of an array.</source>
          <target state="translated">Delimita os elementos de uma matriz.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Attributes<ept id="p1">](../attributes.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Atributos<ept id="p1">](../attributes.md)</ept></target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Delimits an attribute.</source>
          <target state="translated">Delimita um atributo.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Strings<ept id="p1">](../strings.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Cadeias de Caracteres<ept id="p1">](../strings.md)</ept></target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Escapes the next character; used in character and string literals.</source>
          <target state="translated">Pula o próximo caractere; usado em literal de caractere ou em sequência literal.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Statically Resolved Type Parameters<ept id="p1">](../generics/statically-resolved-type-parameters.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Parâmetros de Tipo Resolvidos Estaticamente<ept id="p1">](../generics/statically-resolved-type-parameters.md)</ept></target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Strings<ept id="p1">](../strings.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Cadeias de Caracteres<ept id="p1">](../strings.md)</ept></target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Specifies type parameters that must be resolved at compile time, not at runtime.</source>
          <target state="translated">Especifica os parâmetros de tipo que devem ser resolvidos no tempo de compilação, não no tempo de execução.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Concatenates strings.</source>
          <target state="translated">Concatena sequências.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Bitwise Operators<ept id="p1">](bitwise-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Bit a Bit<ept id="p1">](bitwise-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Computes the bitwise exclusive OR operation.</source>
          <target state="translated">Calcula a operação OR exclusiva bit a bit.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Match Expressions<ept id="p1">](../match-expressions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Expressões Match<ept id="p1">](../match-expressions.md)</ept></target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Generics<ept id="p1">](../generics/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Genéricos<ept id="p1">](../generics/index.md)</ept></target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Indicates a wildcard pattern.</source>
          <target state="translated">Indica um padrão de curinga.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Specifies an anonymous generic parameter.</source>
          <target state="translated">Especifica um parâmetro genérico anônimo.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Automatic Generalization<ept id="p1">](../generics/automatic-generalization.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Generalização automática<ept id="p1">](../generics/automatic-generalization.md)</ept></target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Used internally to indicate a generic type parameter.</source>
          <target state="translated">Usado internamente para indicar um parâmetro de tipo genérico.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Sequences<ept id="p1">](../sequences.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Sequências<ept id="p1">](../sequences.md)</ept></target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Records<ept id="p1">](../records.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Registros<ept id="p1">](../records.md)</ept></target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Delimits sequence expressions and computation expressions.</source>
          <target state="translated">Delimita expressões de sequência e expressões de computação.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Used in record definitions.</source>
          <target state="translated">Usado em definições de registro.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Match Expressions<ept id="p1">](../match-expressions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Expressões Match<ept id="p1">](../match-expressions.md)</ept></target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Delimits individual match cases, individual discriminated union cases, and enumeration values.</source>
          <target state="translated">Delimita casos de correspondência individuais, casos de união discriminada individuais e valores de enumeração.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Boolean Operators<ept id="p1">](boolean-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Boolianos<ept id="p1">](boolean-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Computes the Boolean OR operation.</source>
          <target state="translated">Calcula a operação OR booleana.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Bitwise Operators<ept id="p1">](bitwise-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Bit a Bit<ept id="p1">](bitwise-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Computes the bitwise OR operation.</source>
          <target state="translated">Calcula a operação OR bit a bit.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Functions<ept id="p1">](../functions/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Funções<ept id="p1">](../functions/index.md)</ept></target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Passes the result of the left side to the function on the right side (forward pipe operator).</source>
          <target state="translated">Passa o resultado do lado esquerdo para a função no lado direito (operador barra vertical direta).</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operators.&amp;#40; &amp;#124;&amp;#124;&amp;#62; &amp;#41;&amp;#60;'T1,'T2,'U&amp;#62; Function<ept id="p1">](https://msdn.microsoft.com/visualfsharpdocs/conceptual/operators.%5b-hh%5d-%5d%5b%27t1%2c%27t2%2c%27u%5d-function-%5bfsharp%5d)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores.&amp;#40; &amp;#124;&amp;#124;&amp;#62; &amp;#41;&amp;#60;'T1,'T2,'U&amp;#62; Função<ept id="p1">](https://msdn.microsoft.com/visualfsharpdocs/conceptual/operators.%5b-hh%5d-%5d%5b%27t1%2c%27t2%2c%27u%5d-function-%5bfsharp%5d)</ept></target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Passes the tuple of two arguments on the left side to the function on the right side.</source>
          <target state="translated">Passa a tupla de dois argumentos no lado esquerdo para a função no lado direito.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operators.&amp;#40; &amp;#124;&amp;#124;&amp;#124;&amp;#62; &amp;#41;&amp;#60;'T1,'T2,'T3,'U&amp;#62; Function<ept id="p1">](https://msdn.microsoft.com/visualfsharpdocs/conceptual/operators.%5b-hhh%5d-%5d%5b%27t1%2c%27t2%2c%27t3%2c%27u%5d-function-%5bfsharp%5d)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores.&amp;#40; &amp;#124;&amp;#124;&amp;#124;&amp;#62; &amp;#41;&amp;#60;'T1,'T2,'T3,'U&amp;#62; Função<ept id="p1">](https://msdn.microsoft.com/visualfsharpdocs/conceptual/operators.%5b-hhh%5d-%5d%5b%27t1%2c%27t2%2c%27t3%2c%27u%5d-function-%5bfsharp%5d)</ept></target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>Passes the tuple of three arguments on the left side to the function on the right side.</source>
          <target state="translated">Passa a tupla de três argumentos no lado esquerdo para a função no lado direito.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operator Overloading<ept id="p1">](../operator-overloading.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Sobrecarga de Operador<ept id="p1">](../operator-overloading.md)</ept></target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Used to declare an overload for the unary negation operator.</source>
          <target state="translated">Usado para declarar uma sobrecarga para o operador de negação unário.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Bitwise Operators<ept id="p1">](bitwise-operators.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Operadores Bit a Bit<ept id="p1">](bitwise-operators.md)</ept></target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Computes the bitwise NOT operation.</source>
          <target state="translated">Calcula a operação NOT bit a bit.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operator Overloading<ept id="p1">](../operator-overloading.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Sobrecarga de Operador<ept id="p1">](../operator-overloading.md)</ept></target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Used to declare an overload for the unary minus operator.</source>
          <target state="translated">Usado para declarar uma sobrecarga para o operador de subtração unário.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operator Overloading<ept id="p1">](../operator-overloading.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Sobrecarga de Operador<ept id="p1">](../operator-overloading.md)</ept></target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Used to declare an overload for the unary plus operator.</source>
          <target state="translated">Usado para declarar uma sobrecarga para o operador de adição unário.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Operator Precedence</source>
          <target state="translated">Precedência do Operador</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The following table shows the order of precedence of operators and other expression keywords in the F# language, in order from lowest precedence to the highest precedence.</source>
          <target state="translated">A tabela a seguir mostra a ordem de precedência de operadores e outras palavras-chave da expressão na linguagem F#, na ordem de precedência mais baixa para a mais alta.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Also listed is the associativity, if applicable.</source>
          <target state="translated">Também é listada a capacidade de associação, se aplicável.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Operator</source>
          <target state="translated">Operador</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Associativity</source>
          <target state="translated">Associatividade</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Right</source>
          <target state="translated">Direita</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Right</source>
          <target state="translated">Direita</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">&amp;#124;</ph><ept id="p1">&lt;/code&gt;</ept> (pipe)</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">&amp;#124;</ph><ept id="p1">&lt;/code&gt;</ept> (pipe)</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Left</source>
          <target state="translated">Esquerda</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Right</source>
          <target state="translated">Direita</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Nonassociative</source>
          <target state="translated">Não associativo</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`function`</ph>, <ph id="ph2">`fun`</ph>, <ph id="ph3">`match`</ph>, <ph id="ph4">`try`</ph></source>
          <target state="translated"><ph id="ph1">`function`</ph>, <ph id="ph2">`fun`</ph>, <ph id="ph3">`match`</ph>, <ph id="ph4">`try`</ph></target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Nonassociative</source>
          <target state="translated">Não associativo</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Nonassociative</source>
          <target state="translated">Não associativo</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Right</source>
          <target state="translated">Direita</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Right</source>
          <target state="translated">Direita</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Nonassociative</source>
          <target state="translated">Não associativo</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`or`</ph>, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">&amp;#124;&amp;#124;</ph><ept id="p1">&lt;/code&gt;</ept></source>
          <target state="translated"><ph id="ph1">`or`</ph>, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">&amp;#124;&amp;#124;</ph><ept id="p1">&lt;/code&gt;</ept></target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Left</source>
          <target state="translated">Esquerda</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`&amp;`</ph>, <ph id="ph2">`&amp;&amp;`</ph></source>
          <target state="translated"><ph id="ph1">`&amp;`</ph>, <ph id="ph2">`&amp;&amp;`</ph></target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Left</source>
          <target state="translated">Esquerda</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`:&gt;;`</ph>, <ph id="ph2">`:?&gt;;`</ph></source>
          <target state="translated"><ph id="ph1">`:&gt;;`</ph>, <ph id="ph2">`:?&gt;;`</ph></target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Right</source>
          <target state="translated">Direita</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`!=`</ph><bpt id="p1">*</bpt>op<ept id="p1">*</ept>, <ph id="ph2">`&lt;`</ph><bpt id="p2">*</bpt>op<ept id="p2">*</ept>, <ph id="ph3">`&gt;`</ph><bpt id="p3">*</bpt>op<ept id="p3">*</ept>, <ph id="ph4">`=`</ph>, <bpt id="p4">&lt;code&gt;</bpt><ph id="ph5">&amp;#124;</ph><ept id="p4">&lt;/code&gt;</ept><bpt id="p5">*</bpt>op<ept id="p5">*</ept>, <ph id="ph6">`&amp;`</ph><bpt id="p6">*</bpt>op<ept id="p6">*</ept>, <ph id="ph7">`&amp;`</ph></source>
          <target state="translated"><ph id="ph1">`!=`</ph><bpt id="p1">*</bpt>op<ept id="p1">*</ept>, <ph id="ph2">`&lt;`</ph><bpt id="p2">*</bpt>op<ept id="p2">*</ept>, <ph id="ph3">`&gt;`</ph><bpt id="p3">*</bpt>op<ept id="p3">*</ept>, <ph id="ph4">`=`</ph>, <bpt id="p4">&lt;code&gt;</bpt><ph id="ph5">&amp;#124;</ph><ept id="p4">&lt;/code&gt;</ept><bpt id="p5">*</bpt>op<ept id="p5">*</ept>, <ph id="ph6">`&amp;`</ph><bpt id="p6">*</bpt>op<ept id="p6">*</ept>, <ph id="ph7">`&amp;`</ph></target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>(including <ph id="ph1">`&lt;&lt;&lt;`</ph>, <ph id="ph2">`&gt;&gt;&gt;`</ph>, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">&amp;#124;&amp;#124;&amp;#124;</ph><ept id="p1">&lt;/code&gt;</ept>, <ph id="ph4">`&amp;&amp;&amp;`</ph>)</source>
          <target state="translated">(incluindo <ph id="ph1">`&lt;&lt;&lt;`</ph>, <ph id="ph2">`&gt;&gt;&gt;`</ph>, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">&amp;#124;&amp;#124;&amp;#124;</ph><ept id="p1">&lt;/code&gt;</ept>, <ph id="ph4">`&amp;&amp;&amp;`</ph>)</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Left</source>
          <target state="translated">Esquerda</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`^`</ph><bpt id="p1">*</bpt>op<ept id="p1">*</ept></source>
          <target state="translated"><ph id="ph1">`^`</ph><bpt id="p1">*</bpt>op<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>(including <ph id="ph1">`^^^`</ph>)</source>
          <target state="translated">(incluindo <ph id="ph1">`^^^`</ph>)</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Right</source>
          <target state="translated">Direita</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Right</source>
          <target state="translated">Direita</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Not associative</source>
          <target state="translated">Não associativo</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`-`</ph><bpt id="p1">*</bpt>op<ept id="p1">*</ept>, <ph id="ph2">`+`</ph><bpt id="p2">*</bpt>op<ept id="p2">*</ept></source>
          <target state="translated"><ph id="ph1">`-`</ph><bpt id="p1">*</bpt>op<ept id="p1">*</ept>, <ph id="ph2">`+`</ph><bpt id="p2">*</bpt>op<ept id="p2">*</ept></target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Applies to infix uses of these symbols</source>
          <target state="translated">Aplica-se a utilizações de infixo desses símbolos</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`*`</ph><bpt id="p1">*</bpt>op<ept id="p1">*</ept>, <ph id="ph2">`/`</ph><bpt id="p2">*</bpt>op<ept id="p2">*</ept>, <ph id="ph3">`%`</ph><bpt id="p3">*</bpt>op<ept id="p3">*</ept></source>
          <target state="translated"><ph id="ph1">`*`</ph><bpt id="p1">*</bpt>op<ept id="p1">*</ept>, <ph id="ph2">`/`</ph><bpt id="p2">*</bpt>op<ept id="p2">*</ept>, <ph id="ph3">`%`</ph><bpt id="p3">*</bpt>op<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Left</source>
          <target state="translated">Esquerda</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`**`</ph><bpt id="p1">*</bpt>op<ept id="p1">*</ept></source>
          <target state="translated"><ph id="ph1">`**`</ph><bpt id="p1">*</bpt>op<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Right</source>
          <target state="translated">Direita</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`f x`</ph> (function application)</source>
          <target state="translated"><ph id="ph1">`f x`</ph> (aplicativo de função)</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Left</source>
          <target state="translated">Esquerda</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">&amp;#124;</ph><ept id="p1">&lt;/code&gt;</ept> (pattern match)</source>
          <target state="translated"><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">&amp;#124;</ph><ept id="p1">&lt;/code&gt;</ept> (correspondência padrão)</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Right</source>
          <target state="translated">Direita</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>prefix operators (<ph id="ph1">`+`</ph><bpt id="p1">*</bpt>op<ept id="p1">*</ept>, <ph id="ph2">`-`</ph><bpt id="p2">*</bpt>op<ept id="p2">*</ept>, <ph id="ph3">`%`</ph>, <ph id="ph4">`%%`</ph>, <ph id="ph5">`&amp;`</ph>, <ph id="ph6">`&amp;&amp;`</ph>, <ph id="ph7">`!`</ph><bpt id="p3">*</bpt>op<ept id="p3">*</ept>, <ph id="ph8">`~`</ph><bpt id="p4">*</bpt>op<ept id="p4">*</ept>)</source>
          <target state="translated">operadores de prefixo (<ph id="ph1">`+`</ph><bpt id="p1">*</bpt>op<ept id="p1">*</ept>, <ph id="ph2">`-`</ph><bpt id="p2">*</bpt>op<ept id="p2">*</ept>, <ph id="ph3">`%`</ph>, <ph id="ph4">`%%`</ph>, <ph id="ph5">`&amp;`</ph>, <ph id="ph6">`&amp;&amp;`</ph>, <ph id="ph7">`!`</ph><bpt id="p3">*</bpt>op<ept id="p3">*</ept>, <ph id="ph8">`~`</ph><bpt id="p4">*</bpt>op<ept id="p4">*</ept>)</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Left</source>
          <target state="translated">Esquerda</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Left</source>
          <target state="translated">Esquerda </target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Left</source>
          <target state="translated">Esquerda</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`f&lt;`</ph><bpt id="p1">*</bpt>types<ept id="p1">*</ept><ph id="ph2">`&gt;`</ph></source>
          <target state="translated"><ph id="ph1">`f&lt;`</ph><bpt id="p1">*</bpt>tipos<ept id="p1">*</ept><ph id="ph2">`&gt;`</ph></target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Left</source>
          <target state="translated">Esquerda</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>F# supports custom operator overloading.</source>
          <target state="translated">F# oferece suporte à sobrecarga de operador personalizado.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>This means that you can define your own operators.</source>
          <target state="translated">Isso significa que você pode definir seus próprio operadores.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>In the previous table, <bpt id="p1">*</bpt>op<ept id="p1">*</ept> can be any valid (possibly empty) sequence of operator characters, either built-in or user-defined.</source>
          <target state="translated">Na tabela anterior, <bpt id="p1">*</bpt>op<ept id="p1">*</ept> pode ser qualquer sequência (possivelmente vazia) válida de caracteres de operador, internos ou definidos pelo usuário.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Thus, you can use this table to determine what sequence of characters to use for a custom operator to achieve the desired level of precedence.</source>
          <target state="translated">Dessa forma, é possível usar esta tabela para determinar qual sequência de caracteres usar para que um operador personalizado atinja o nível desejado de precedência.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Leading <ph id="ph1">`.`</ph> characters are ignored when the compiler determines precedence.</source>
          <target state="translated">Os caracteres <ph id="ph1">`.`</ph> à esquerda são ignorados quando o compilador determina a precedência.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>F# Language Reference<ept id="p1">](../index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Referência da Linguagem F#<ept id="p1">](../index.md)</ept></target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operator Overloading<ept id="p1">](../operator-overloading.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Sobrecarga de Operador<ept id="p1">](../operator-overloading.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>