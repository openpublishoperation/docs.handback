<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0d049356fe16a660c54493600e289cd21de2e051</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\fsharp\language-reference\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">522a71a9e66727272bab2e1d4801f583a5e38b78</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a5c288b2906785516937035cbad8814c17e2fe0</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">file index.95c4cd68f30baa239e9f02259a7fa324c154ff20.pt-br.xlf is out of handoff scope</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>F# Language Reference</source>
          <target state="translated">Referência da linguagem F#</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>F# Language Reference</source>
          <target state="translated">Referência da linguagem F#</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>visual f#, f#, functional programming</source>
          <target state="translated">visual f#, f#, programação funcional</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>F# Language Reference</source>
          <target state="translated">Referência da linguagem F#</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This section is a reference to the F# language, a multi-paradigm programming language targeting the .NET platform.</source>
          <target state="translated">Esta seção é uma referência à linguagem F#, uma linguagem de programação de vários paradigmas para a plataforma .NET.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The F# language supports functional, object-oriented and imperative programming models.</source>
          <target state="translated">A linguagem F# oferece suporte a modelos de programação imprescindíveis, funcionais e orientados a objeto.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>F# Tokens</source>
          <target state="translated">Tokens do F#</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following table shows reference topics that provide tables of keywords, symbols and literals used as tokens in F#.</source>
          <target state="translated">A tabela a seguir mostra os tópicos de referência que fornecem tabelas de palavras-chave, símbolos e literais usados como tokens no F#.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">Título</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Keyword Reference<ept id="p1">](keyword-reference.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Referência de Palavras-Chave<ept id="p1">](keyword-reference.md)</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Contains links to information about all F# language keywords.</source>
          <target state="translated">Contém links para informações sobre todas as palavras-chave do F#.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Symbol and Operator Reference<ept id="p1">](symbol-and-operator-reference/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Referência de Símbolos e Operadores<ept id="p1">](symbol-and-operator-reference/index.md)</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Contains a table of symbols and operators that are used in the F# language.</source>
          <target state="translated">Contém uma tabela de símbolos e operadores usados na linguagem F#.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Literals<ept id="p1">](literals.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Literais<ept id="p1">](literals.md)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Describes the syntax for literal values in F# and how to specify type information for F# literals.</source>
          <target state="translated">Descreve a sintaxe para valores literais no F# e como especificar informações de tipo para literais do F#.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>F# Language Concepts</source>
          <target state="translated">Conceitos da linguagem F#</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The following table shows reference topics available that describe language concepts.</source>
          <target state="translated">A tabela a seguir mostra os tópicos de referência disponíveis que descrevem os conceitos de linguagem.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">Título</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Functions<ept id="p1">](functions/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Funções<ept id="p1">](functions/index.md)</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Functions are the fundamental unit of program execution in any programming language.</source>
          <target state="translated">As funções são a unidade fundamental de execução do programa em qualquer linguagem de programação.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>As in other languages, an F# function has a name, can have parameters and take arguments, and has a body.</source>
          <target state="translated">Como em outras linguagens, uma função do F# tem um nome, pode ter parâmetros e receber argumentos, e tem um corpo.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>F# also supports functional programming constructs such as treating functions as values, using unnamed functions in expressions, composition of functions to form new functions, curried functions, and the implicit definition of functions by way of the partial application of function arguments.</source>
          <target state="translated">O F# também oferece suporte a construções de programação funcional como tratamento de funções como valores, uso de funções sem nome em expressões, composição de funções para formar novas funções, funções via currying e a definição implícita de funções por meio da aplicação parcial dos argumentos da função.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>F# Types<ept id="p1">](fsharp-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Tipos do F#<ept id="p1">](fsharp-types.md)</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Describes the types that are used in F# and how F# types are named and described.</source>
          <target state="translated">Descreve os tipos que são usados no F# e como os tipos F# são nomeados e descritos.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Type Inference<ept id="p1">](type-inference.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Inferência de Tipos<ept id="p1">](type-inference.md)</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Describes how the F# compiler infers the types of values, variables, parameters and return values.</source>
          <target state="translated">Descreve como o compilador do F# infere os tipos de valores, variáveis, parâmetros e valores de retorno.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Automatic Generalization<ept id="p1">](generics/automatic-generalization.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Generalização automática<ept id="p1">](generics/automatic-generalization.md)</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Describes generic constructs in F#.</source>
          <target state="translated">Descreve as construções genéricas no F#.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Inheritance<ept id="p1">](inheritance.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Herança<ept id="p1">](inheritance.md)</ept></target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Describes inheritance, which is used to model the "is-a" relationship, or subtyping, in object-oriented programming.</source>
          <target state="translated">Descreve a herança, que é usada para modelar a relação "é um" ou subtipagem na programação orientada a objetos.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Members<ept id="p1">](members/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Membros<ept id="p1">](members/index.md)</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Describes members of F# object types.</source>
          <target state="translated">Descreve os membros de tipos de objeto do F#.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Parameters and Arguments <ept id="p1">](Parameters-and-Arguments.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Parâmetros e Argumentos <ept id="p1">](Parameters-and-Arguments.md)</ept></target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Describes language support for defining parameters and passing arguments to functions, methods, and properties.</source>
          <target state="translated">Descreve o suporte de linguagem para definir parâmetros e passar argumentos para funções, métodos e propriedades.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>It includes information about how to pass by reference.</source>
          <target state="translated">Inclui informações sobre como passar referência.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Operator Overloading<ept id="p1">](operator-overloading.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Sobrecarga de Operador<ept id="p1">](operator-overloading.md)</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Describes how to overload arithmetic operators in a class or record type, and at the global level.</source>
          <target state="translated">Descreve como sobrecarregar operadores aritméticos em uma classe ou tipo de registro e no nível global.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Casting and Conversions<ept id="p1">](casting-and-conversions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Conversões<ept id="p1">](casting-and-conversions.md)</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Describes support for type conversions in F#.</source>
          <target state="translated">Descreve o suporte para conversões de tipos no F#.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Access Control<ept id="p1">](access-control.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Controle de Acesso<ept id="p1">](access-control.md)</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Describes access control in F#.</source>
          <target state="translated">Descreve o controle de acesso no F#.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Access control means declaring what clients are able to use certain program elements, such as types, methods, functions and so on.</source>
          <target state="translated">Controle de acesso significa declarar que os clientes são capazes de usar determinados elementos de programação, como tipos, métodos, funções e assim por diante.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Pattern Matching<ept id="p1">](pattern-matching.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Correspondência Padrão<ept id="p1">](pattern-matching.md)</ept></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Describes patterns, which are rules for transforming input data that are used throughout the F# language to extract compare data with a pattern, decompose data into constituent parts, or extract information from data in various ways.</source>
          <target state="translated">Descreve os padrões, que são regras para transformar os dados de entrada que são usados em toda a linguagem F# para extrair dados de comparação com um padrão, decompor os dados em partes constituintes ou extrair informações de dados de várias maneiras.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Active Patterns<ept id="p1">](active-patterns.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Padrões Ativos<ept id="p1">](active-patterns.md)</ept></target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Describes active patterns.</source>
          <target state="translated">Descreve padrões ativos.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Active patterns enable you to define named partitions that subdivide input data.</source>
          <target state="translated">Padrões ativos permitem definir partições nomeadas que subdividem os dados de entrada.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You can use active patterns to decompose data in a customized manner for each partition.</source>
          <target state="translated">Você pode usar padrões ativos para decompor os dados de uma maneira personalizada para cada partição.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Assertions<ept id="p1">](assertions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Asserções<ept id="p1">](assertions.md)</ept></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Describes the <ph id="ph1">`assert`</ph> expression, which is a debugging feature that you can use to test an expression.</source>
          <target state="translated">Descreve a expressão <ph id="ph1">`assert`</ph>, que é um recurso de depuração que você pode usar para testar uma expressão.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Upon failure in Debug mode, an assertion generates a system error dialog box.</source>
          <target state="translated">Em caso de falha no modo de depuração, uma asserção gera uma caixa de diálogo de erro do sistema.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Exception Handling<ept id="p1">](exception-handling/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Tratamento de Exceção<ept id="p1">](exception-handling/index.md)</ept></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Contains information about exception handling support in the F# language.</source>
          <target state="translated">Contém informações sobre suporte de manipulação de exceção na linguagem F#.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>attributes<ept id="p1">](attributes.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Atributos<ept id="p1">](attributes.md)</ept></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Describes attributes, which enable metadata to be applied to a programming construct.</source>
          <target state="translated">Descreve os atributos, que permitem os metadados a serem aplicados a uma construção de programação.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Resource Management: The <ph id="ph1">`use`</ph> Keyword<ept id="p1">](resource-management-the-use-keyword.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Gerenciamento de Recursos: a palavra-chave <ph id="ph1">`use`</ph><ept id="p1">](resource-management-the-use-keyword.md)</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Describes the keywords <ph id="ph1">`use`</ph> and <ph id="ph2">`using`</ph>, which can control the initialization and release of resources</source>
          <target state="translated">Descreve as palavras-chave <ph id="ph1">`use`</ph> e <ph id="ph2">`using`</ph>, que podem controlar a inicialização e a liberação de recursos</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>namespaces<ept id="p1">](namespaces.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>namespaces<ept id="p1">](namespaces.md)</ept></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Describes namespace support in F#.</source>
          <target state="translated">Descreve o suporte a namespace no F#.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A namespace lets you organize code into areas of related functionality by enabling you to attach a name to a grouping of program elements.</source>
          <target state="translated">Um namespace permite organizar o código em áreas de funcionalidade relacionada ao permitir que você anexe um nome a um agrupamento de elementos de programação.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Modules<ept id="p1">](modules.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Módulos<ept id="p1">](modules.md)</ept></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Describes modules.</source>
          <target state="translated">Descreve os módulos.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>An F# module is a grouping of F# code, such as values, types, and function values, in an F# program.</source>
          <target state="translated">Um módulo do F# é um agrupamento de código F#, como valores, tipos e valores de função em um programa no F#.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Grouping code in modules helps keep related code together and helps avoid name conflicts in your program.</source>
          <target state="translated">O agrupamento de código em módulos ajuda a manter junto o código relacionado e ajuda a evitar conflitos de nome em seu programa.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Import Declarations: The <ph id="ph1">`open`</ph> Keyword<ept id="p1">](import-declarations-the-open-keyword.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Declarações de Importação: a palavra-chave <ph id="ph1">`open`</ph><ept id="p1">](import-declarations-the-open-keyword.md)</ept></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Describes how <ph id="ph1">`open`</ph> works.</source>
          <target state="translated">Descreve como <ph id="ph1">`open`</ph> funciona.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An import declaration specifies a module or namespace whose elements you can reference without using a fully qualified name.</source>
          <target state="translated">Uma declaração de importação especifica um módulo ou namespace cujos elementos você pode referenciar sem usar um nome totalmente qualificado.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Signatures<ept id="p1">](signatures.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Assinaturas<ept id="p1">](signatures.md)</ept></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Describes signatures and signature files.</source>
          <target state="translated">Descreve as assinaturas e os arquivos de assinatura.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A signature file contains information about the public signatures of a set of F# program elements, such as types, namespaces, and modules.</source>
          <target state="translated">Um arquivo de assinatura contém informações sobre as assinaturas públicas de um conjunto de elementos de programação de F#, como tipos, namespaces e módulos.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It can be used to specify the accessibility of these program elements.</source>
          <target state="translated">Ele pode ser usado para especificar a acessibilidade desses elementos de programa.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>XML Documentation<ept id="p1">](xml-documentation.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Documentação XML<ept id="p1">](xml-documentation.md)</ept></target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Describes support for generating documentation files for XML doc comments, also known as triple slash comments.</source>
          <target state="translated">Descreve o suporte para gerar arquivos de documentação para comentários de documento XML, também conhecidos como comentários de barra tripla.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>You can produce documentation from code comments in F# just as in other .NET languages.</source>
          <target state="translated">Você pode gerar documentação de comentários de código no F#, assim como em outras linguagens .NET.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Verbose Syntax<ept id="p1">](verbose-syntax.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Sintaxe Detalhada<ept id="p1">](verbose-syntax.md)</ept></target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Describes the syntax for F# constructs when lightweight syntax is not enabled.</source>
          <target state="translated">Descreve a sintaxe para construções no F# quando a sintaxe leve não está habilitada.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Verbose syntax is indicated by the <ph id="ph1">`#light "off"`</ph> directive at the top of the code file.</source>
          <target state="translated">A sintaxe detalhada está indicada pela diretiva <ph id="ph1">`#light "off"`</ph> na parte superior do arquivo de código.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>F# Types</source>
          <target state="translated">Tipos F#</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The following table shows reference topics available that describe types supported by the F# language.</source>
          <target state="translated">A tabela a seguir mostra os tópicos de referência disponíveis que descrevem os tipos com suporte pela linguagem F#.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">Título</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>values<ept id="p1">](values/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Valores<ept id="p1">](values/index.md)</ept></target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Describes values, which are immutable quantities that have a specific type; values can be integral or floating point numbers, characters or text, lists, sequences, arrays, tuples, discriminated unions, records, class types, or function values.</source>
          <target state="translated">Descreve os valores, que são quantidades imutáveis que têm um tipo específico; valores podem ser números inteiros ou de ponto flutuante, caracteres ou texto, listas, sequências, matrizes, tuplas, uniões discriminadas, registros, tipos de classe ou valores de função.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Primitive Types<ept id="p1">](primitive-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Tipos Primitivos<ept id="p1">](primitive-types.md)</ept></target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Describes the fundamental primitive types that are used in the F# language.</source>
          <target state="translated">Descreve os tipos primitivos fundamentais usados na linguagem F#.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>It also provides the corresponding .NET types and the minimum and maximum values for each type.</source>
          <target state="translated">Ele também fornece os tipos .NET correspondentes e os valores mínimos e máximos para cada tipo.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Unit Type<ept id="p1">](unit-type.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Tipo Unit<ept id="p1">](unit-type.md)</ept></target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Describes the <ph id="ph1">`unit`</ph> type, which is a type that indicates the absence of a specific value; the <ph id="ph2">`unit`</ph> type has only a single value, which acts as a placeholder when no other value exists or is needed.</source>
          <target state="translated">Descreve o tipo <ph id="ph1">`unit`</ph>, que é um tipo que indica a ausência de um valor específico; o tipo <ph id="ph2">`unit`</ph> tem apenas um único valor, que atua como espaço reservado quando nenhum outro valor existe ou é necessário.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Strings<ept id="p1">](strings.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Cadeias de Caracteres<ept id="p1">](strings.md)</ept></target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Describes strings in F#.</source>
          <target state="translated">Descreve cadeias de caracteres no F#.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`string`</ph> type represents immutable text, as a sequence of Unicode characters.</source>
          <target state="translated">O tipo <ph id="ph1">`string`</ph> representa texto imutável, como uma sequência de caracteres Unicode.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`string`</ph> is an alias for <ph id="ph2">`System.String`</ph> in the .NET Framework.</source>
          <target state="translated"><ph id="ph1">`string`</ph> é um alias para <ph id="ph2">`System.String`</ph> no .NET Framework.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Tuples<ept id="p1">](tuples.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Tuplas<ept id="p1">](tuples.md)</ept></target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Describes tuples, which are groupings of unnamed but ordered values of possibly different types.</source>
          <target state="translated">Descreve as tuplas, que são agrupamentos de valores sem nome, mas valores ordenados de tipos possivelmente diferentes.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>F# Collection Types<ept id="p1">](fsharp-collection-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Tipos de Coleção do F#<ept id="p1">](fsharp-collection-types.md)</ept></target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>An overview of the F# functional collection types, including types for arrays, lists, sequences (seq), maps, and sets.</source>
          <target state="translated">Visão geral dos tipos de coleção funcional do F#, incluindo tipos de matrizes, listas, sequências (seq), mapas e conjuntos.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Lists<ept id="p1">](lists.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Listas<ept id="p1">](lists.md)</ept></target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Describes lists.</source>
          <target state="translated">Descreve as listas.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>A list in F# is an ordered, immutable series of elements all of the same type.</source>
          <target state="translated">Uma lista no F# é uma série imutável, ordenada, de elementos do mesmo tipo.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Options<ept id="p1">](options.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Opções<ept id="p1">](options.md)</ept></target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Describes the option type.</source>
          <target state="translated">Descreve o tipo de opção.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An option in F# is used when a value may or may not exist.</source>
          <target state="translated">Uma opção no F# é usada quando um valor pode ou não existir.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>An option has an underlying type and may either hold a value of that type or it may not have a value.</source>
          <target state="translated">Uma opção tem um tipo subjacente e pode conter um valor desse tipo ou pode não ter um valor.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Sequences<ept id="p1">](sequences.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Sequências<ept id="p1">](sequences.md)</ept></target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Describes sequences.</source>
          <target state="translated">Descreve as sequências.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A sequence is a logical series of elements all of one type.</source>
          <target state="translated">Uma sequência é uma série lógica de elementos todos de um tipo.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Individual sequence elements are only computed if required, so the representation may be smaller than a literal element count indicates.</source>
          <target state="translated">Os elementos individuais de sequência são computados somente se for necessário, para que a representação possa ser menor do que indicado por uma contagem do elemento literal.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arrays<ept id="p1">](arrays.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Matrizes<ept id="p1">](arrays.md)</ept></target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Describes arrays.</source>
          <target state="translated">Descreve as matrizes.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Arrays are fixed-size, zero-based, mutable sequences of consecutive data elements, all of the same type.</source>
          <target state="translated">As matrizes são sequências de tamanho fixo, com base em zero e mutáveis de elementos de dados consecutivos, todos do mesmo tipo.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Records<ept id="p1">](records.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Registros<ept id="p1">](records.md)</ept></target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Describes records.</source>
          <target state="translated">Descreve os registros.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Records represent simple aggregates of named values, optionally with members.</source>
          <target state="translated">Registros representam agregações simples de valores nomeados, opcionalmente com membros.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Discriminated Unions<ept id="p1">](discriminated-unions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Uniões Discriminadas<ept id="p1">](discriminated-unions.md)</ept></target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Describes discriminated unions, which provides support for values which may be one of a variety of named cases, each with possibly different values and types.</source>
          <target state="translated">Descreve as uniões discriminadas, que fornecem suporte para valores que podem ser de uma variedade de casos nomeados, cada um com tipos e valores possivelmente diferentes.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Enumerations<ept id="p1">](enumerations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Enumerações<ept id="p1">](enumerations.md)</ept></target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Describes enumerations are types that have a defined set of named values.</source>
          <target state="translated">Descreve as enumerações que são tipos que têm um conjunto definido de valores nomeados.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>You can use them in place of literals to make code more readable and maintainable.</source>
          <target state="translated">Você pode usá-los no lugar de literais para tornar o código mais legível e fácil de manter.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Reference Cells<ept id="p1">](reference-cells.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Células de Referência<ept id="p1">](reference-cells.md)</ept></target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Describes reference cells, which are storage locations that enable you to create mutable variables with reference semantics.</source>
          <target state="translated">Descreve as células de referência, que são locais de armazenamento que permitem criar variáveis mutáveis com semântica de referência.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Type Abbreviations<ept id="p1">](type-abbreviations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Abreviações de Tipo<ept id="p1">](type-abbreviations.md)</ept></target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Describes type abbreviations, which are alternate names for types.</source>
          <target state="translated">Descreve as abreviações de tipo, que são nomes alternativos para tipos.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Classes<ept id="p1">](classes.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Classes<ept id="p1">](classes.md)</ept></target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Describes classes, which are types that represent objects that can have properties, methods, and events.</source>
          <target state="translated">Descreve as classes, que são tipos que representam os objetos que podem ter propriedades, métodos e eventos.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Structures<ept id="p1">](structures.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Estruturas<ept id="p1">](structures.md)</ept></target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Describes structures, which are compact object types that can be more efficient than a class for types that have a small amount of data and simple behavior.</source>
          <target state="translated">Descreve estruturas, que são tipos de objeto compacto que podem ser mais eficiente do que uma classe para tipos que tenham uma pequena quantidade de dados e comportamento simples.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Interfaces<ept id="p1">](interfaces.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Interfaces<ept id="p1">](interfaces.md)</ept></target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Describes interfaces, which specify sets of related members that other classes implement.</source>
          <target state="translated">Descreve interfaces, que especificam os conjuntos de membros relacionados que outras classes implementam.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Abstract Classes<ept id="p1">](abstract-classes.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Classes Abstratas<ept id="p1">](abstract-classes.md)</ept></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Describes abstract classes, which are classes that leave some or all members unimplemented, so that implementations can be provided by derived classes.</source>
          <target state="translated">Descreve classes abstratas, que são classes que deixam alguns ou todos os membros não implementados, para que as implementações possam ser fornecidas por classes derivadas.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Type Extensions<ept id="p1">](type-extensions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Extensões de Tipo<ept id="p1">](type-extensions.md)</ept></target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Describes type extensions, which let you add new members to a previously defined object type.</source>
          <target state="translated">Descreve as extensões de tipo, que permitem que você adicione novos membros a um tipo de objeto definido anteriormente.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Flexible Types<ept id="p1">](flexible-types.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Tipos Flexíveis<ept id="p1">](flexible-types.md)</ept></target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Describes flexible types.</source>
          <target state="translated">Descreve os tipos flexíveis.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A flexible type annotation is an indication that a parameter, variable or value has a type that is compatible with type specified, where compatibility is determined by position in an object-oriented hierarchy of classes or interfaces.</source>
          <target state="translated">Uma anotação de tipo flexível é uma indicação de que um parâmetro, variável ou valor tem um tipo que é compatível com o tipo especificado, onde a compatibilidade é determinada pela posição em uma hierarquia orientada a objetos de classes ou interfaces.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Delegates<ept id="p1">](delegates.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Delegados<ept id="p1">](delegates.md)</ept></target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Describes delegates, which represent a function call as an object.</source>
          <target state="translated">Descreve delegados, que representam uma chamada de função como um objeto.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Units of Measure<ept id="p1">](units-of-measure.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Unidades de Medida<ept id="p1">](units-of-measure.md)</ept></target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Describes units of measure.</source>
          <target state="translated">Descreve as unidades de medida.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Floating point values in F# can have associated units of measure, which are typically used to indicate length, volume, mass, and so on.</source>
          <target state="translated">Valores de ponto flutuante no F# podem ter unidades de medida associadas, que normalmente são usadas para indicar o comprimento, o volume, a massa e assim por diante.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Type Providers<ept id="p1">](../tutorials/type-providers/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Provedores de Tipos<ept id="p1">](../tutorials/type-providers/index.md)</ept></target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Describes type provides and provides links to walkthroughs on using the built-in type providers to access databases and web services.</source>
          <target state="translated">Descreve provedores de tipo e fornece links para instruções passo a passo sobre como usar os provedores de tipos internos para acessar bancos de dados e serviços da Web.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>F# Expressions</source>
          <target state="translated">Expressões em F#</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The following table lists topics that describe F# expressions.</source>
          <target state="translated">A tabela a seguir lista os tópicos que descrevem as expressões no F#.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">Título</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Conditional Expressions: <ph id="ph1">`if...then...else`</ph><ept id="p1">](conditional-expressions-if-then-else.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Expressões condicionais: <ph id="ph1">`if...then...else`</ph><ept id="p1">](conditional-expressions-if-then-else.md)</ept></target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Describes the <ph id="ph1">`if...then...else`</ph> expression, which runs different branches of code and also evaluates to a different value depending on the Boolean expression given.</source>
          <target state="translated">Descreve a expressão <ph id="ph1">`if...then...else`</ph>, que executa diferentes ramificações do código e também é avaliada como um valor diferente dependendo da expressão booliana fornecida.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Match Expressions<ept id="p1">](match-expressions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Expressões Match<ept id="p1">](match-expressions.md)</ept></target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Describes the <ph id="ph1">`match`</ph> expression, which provides branching control that is based on the comparison of an expression with a set of patterns.</source>
          <target state="translated">Descreve a expressão <ph id="ph1">`match`</ph>, que fornece controle de ramificação com base na comparação de uma expressão com um conjunto de padrões.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Loops: <ph id="ph1">`for...to`</ph> Expression<ept id="p1">](loops-for-to-expression.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Loops: <ph id="ph1">`for...to`</ph> expressão<ept id="p1">](loops-for-to-expression.md)</ept></target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Describes the <ph id="ph1">`for...to`</ph> expression, which is used to iterate in a loop over a range of values of a loop variable.</source>
          <target state="translated">Descreve a expressão <ph id="ph1">`for...to`</ph>, que é usada para iterar em um loop em um intervalo de valores de uma variável de loop.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Loops: <ph id="ph1">`for...in`</ph> Expression<ept id="p1">](loops-for-in-expression.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Loops: <ph id="ph1">`for...in`</ph> expressão<ept id="p1">](loops-for-in-expression.md)</ept></target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Describes the <ph id="ph1">`for...in`</ph> expression, a looping construct that is used to iterate over the matches of a pattern in an enumerable collection such as a range expression, sequence, list, array, or other construct that supports enumeration.</source>
          <target state="translated">Descreve a expressão <ph id="ph1">`for...in`</ph>, uma construção de loop usada para iterar sobre as correspondências de um padrão em uma coleção enumerável como uma expressão de intervalo, sequência, lista, matriz ou outra construção que oferece suporte à enumeração.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Loops: <ph id="ph1">`while...do`</ph> Expression<ept id="p1">](loops-while-do-expression.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Loops: <ph id="ph1">`while...do`</ph> expressão<ept id="p1">](loops-while-do-expression.md)</ept></target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Describes the <ph id="ph1">`while...do`</ph> expression, which is used to perform iterative execution (looping) while a specified test condition is true.</source>
          <target state="translated">Descreve a expressão <ph id="ph1">`while...do`</ph>, que é usada para uma execução iterativa (loop) enquanto uma condição de teste especificada é verdadeira.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Object Expressions<ept id="p1">](object-expressions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Expressões de Objeto<ept id="p1">](object-expressions.md)</ept></target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Describes object expressions, which are expressions that create new instances of a dynamically created, anonymous object type that is based on an existing base type, interface, or set of interfaces.</source>
          <target state="translated">Descreve as expressões de objeto, que são expressões que criam novas instâncias de um tipo de objeto anônimo e criado dinamicamente, com base em um tipo base existente, interface ou conjunto de interfaces.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Lazy Computations<ept id="p1">](lazy-computations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Computações Lentas<ept id="p1">](lazy-computations.md)</ept></target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Describes lazy computations, which are computations that are not evaluated immediately, but are instead evaluated when the result is actually needed.</source>
          <target state="translated">Descreve as computações lentas, que são cálculos que não são avaliados imediatamente, mas em vez disso, são avaliados quando o resultado é realmente necessário.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Computation Expressions<ept id="p1">](computation-expressions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Expressões de Computação<ept id="p1">](computation-expressions.md)</ept></target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Describes computation expressions in F#, which provide a convenient syntax for writing computations that can be sequenced and combined using control flow constructs and bindings.</source>
          <target state="translated">Descreve expressões de computação no F#, que fornece uma sintaxe conveniente para criar cálculos que podem ser sequenciados e combinados usando construções de fluxo de controle e associações.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>They can be used to provide a convenient syntax for <bpt id="p1">*</bpt>monads<ept id="p1">*</ept>, a functional programming feature that can be used to manage data, control and side effects in functional programs.</source>
          <target state="translated">Podem ser usados para fornecer uma sintaxe conveniente para <bpt id="p1">*</bpt>monads<ept id="p1">*</ept>, um recurso de programação funcional que pode ser usado para gerenciar dados, controle e efeitos colaterais em programas funcionais.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>One type of computation expression, the asynchronous workflow, provides support for asynchronous and parallel computations.</source>
          <target state="translated">Um tipo de expressão de computação, o fluxo de trabalho assíncrono, oferece suporte para computações paralelas e assíncronas.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Workflows<ept id="p1">](asynchronous-workflows.md)</ept>.</source>
          <target state="translated">Para saber mais, consulte <bpt id="p1">[</bpt>Fluxos de Trabalho Assíncronos<ept id="p1">](asynchronous-workflows.md)</ept>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Asynchronous Workflows<ept id="p1">](asynchronous-workflows.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Fluxos de Trabalho Assíncronos<ept id="p1">](asynchronous-workflows.md)</ept></target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Describes asynchronous workflows, a language feature that lets you write asynchronous code in a way that is very close to the way you would naturally write synchronous code.</source>
          <target state="translated">Descreve os fluxos de trabalho assíncronos, um recurso de linguagem que permite que você escreva código assíncrono de forma que seja muito próximo da maneira como você escreveria naturalmente código síncrono.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Code Quotations<ept id="p1">](code-quotations.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Citações de Código<ept id="p1">](code-quotations.md)</ept></target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Describes code quotations, a language feature that enables you to generate and work with F# code expressions programmatically.</source>
          <target state="translated">Descreve citações de código, um recurso de linguagem que permite gerar e trabalhar com expressões de código F# programaticamente.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Query Expressions<ept id="p1">](query-expressions.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Expressões de Consulta<ept id="p1">](query-expressions.md)</ept></target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Describes query expressions, a language feature that implements LINQ for F# and enables you to write queries against a data source or enumerable collection.</source>
          <target state="translated">Descreve expressões de consulta, um recurso de linguagem que implementa o LINQ para F# e permite escrever consultas em uma fonte de dados ou uma coleção enumerável.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Compiler-supported Constructs</source>
          <target state="translated">Construções com suporte do compilador</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The following table lists topics that describe special compiler-supported constructs.</source>
          <target state="translated">A tabela a seguir lista tópicos que descrevem as construções especiais com suporte do compilador.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Topic</source>
          <target state="translated">Tópico</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Compiler Options<ept id="p1">](compiler-options.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Opções do Compilador<ept id="p1">](compiler-options.md)</ept></target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Describes the command-line options for the F# compiler.</source>
          <target state="translated">Descreve as opções de linha de comando para o compilador do F#.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Compiler Directives<ept id="p1">](compiler-directives.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Diretivas de Compilador<ept id="p1">](compiler-directives.md)</ept></target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Describes processor directives and compiler directives.</source>
          <target state="translated">Descreve as diretivas de processador e diretivas de compilador.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Source Line, File, and Path Identifiers<ept id="p1">](source-line-file-path-identifiers.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Identificadores de Linha, Arquivo e Demarcador de Origem<ept id="p1">](source-line-file-path-identifiers.md)</ept></target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Describes the identifiers <ph id="ph1">`__LINE__`</ph>, <ph id="ph2">`__SOURCE_DIRECTORY__`</ph> and <ph id="ph3">`__SOURCE_FILE__`</ph>, which are built-in values that enable you to access the source line number, directory and file name in your code.</source>
          <target state="translated">Descreve os identificadores <ph id="ph1">`__LINE__`</ph>, <ph id="ph2">`__SOURCE_DIRECTORY__`</ph> e <ph id="ph3">`__SOURCE_FILE__`</ph>, que são valores internos que permitem acessar o número da linha de origem, o diretório e o nome do arquivo em seu código.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Visual F#<ept id="p1">](../index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Visual F#<ept id="p1">](../index.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>