<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2406a03fa64eb02c70f05c1e8240e4bc5981e98d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\garbagecollection\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e9eeef525cefecc3f8304c5b07b6b4589ee643f9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f24418e8e5c00595888e7a9a0d9e0b8080a3fc70</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Targeting source file commit 213ce098bcc2b5e31c55e759d895254d5ca33caa is lower than latest handed back source file commit 213ce098bcc2b5e31c55e759d895254d5ca33caa</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Garbage Collection</source>
          <target state="translated">Coleta de Lixo</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Garbage Collection</source>
          <target state="translated">Coleta de Lixo</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Garbage collection</source>
          <target state="translated">Coleta de lixo</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Garbage collection is one of most important features of the .NET managed code platform.</source>
          <target state="translated">Coleta de lixo é um dos recursos mais importantes da plataforma de código gerenciado do .NET.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The garbage collector (GC) manages allocating and releasing memory for you.</source>
          <target state="translated">O coletor de lixo (GC) gerencia para você a alocação e liberação de memória.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You do not need to how to allocate and release memory or manage the lifetime of the objects that use that memory.</source>
          <target state="translated">Você não precisa saber como alocar e liberar memória ou gerenciar o tempo de vida dos objetos que usam essa memória.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An allocation is made any time you <bpt id="p1">_</bpt>new<ept id="p1">_</ept> an object or a value type is boxed.</source>
          <target state="translated">Uma alocação é feita sempre que você <bpt id="p1">_</bpt>novo<ept id="p1">_</ept> um objeto ou um tipo de valor é colocado em caixa.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Allocations are typically very fast.</source>
          <target state="translated">As alocações são geralmente muito rápidas.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When there isn’t enough memory to allocate an object, the GC must collect and dispose of garbage memory to make memory available for new allocations.</source>
          <target state="translated">Quando não houver memória suficiente para alocar um objeto, o GC deverá coletar e eliminar de memória de lixo para tornar mais memória disponível para novas alocações.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This process is called “garbage collection”.</source>
          <target state="translated">Esse processo é chamado de "coleta de lixo".</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The garbage collector serves as an automatic memory manager.</source>
          <target state="translated">O coletor de lixo atua como um gerenciador automático de memória.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>It provides the following benefits:</source>
          <target state="translated">Ele oferece os seguintes benefícios:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Enables you to develop your application without having to free memory.</source>
          <target state="translated">Permite que você desenvolva seu aplicativo sem a necessidade de liberar memória.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Allocates objects on the managed heap efficiently.</source>
          <target state="translated">Aloca objetos no heap gerenciado com eficiência.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Reclaims objects that are no longer being used, clears their memory, and keeps the memory available for future allocations.</source>
          <target state="translated">Recupera os objetos que não estão sendo usados, limpa a memória e mantém a memória disponível para alocações futuras.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Managed objects automatically get clean content to start with, so their constructors do not have to initialize every data field.</source>
          <target state="translated">Os objetos gerenciados obtêm automaticamente conteúdo limpo com o qual começar, portanto, seus construtores não precisam inicializar cada campo de dados.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Provides memory safety by making sure that an object cannot use the content of another object.</source>
          <target state="translated">Fornece segurança de memória, assegurando que um objeto não possa usar o conteúdo de outro objeto.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The .NET GC is generational and has 3 generations.</source>
          <target state="translated">O .NET GC é geracional e tem 3 gerações.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Each generation has its own heap that it uses for storage of allocated objects.</source>
          <target state="translated">Cada geração tem seu próprio heap que ela usa para o armazenamento de objetos alocados.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>There is a basic principle that most objects are either short lived or long lived.</source>
          <target state="translated">Há um princípio básico de que a maioria dos objetos são de vida útil curta ou então longa.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Generation 0 is where objects are first allocated.</source>
          <target state="translated">A geração 0 é aquela na qual os objetos são alocados primeiro.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Objects often don’t live past the first generation, since they are no longer in use (out of scope) by the time the next garbage collection occurs.</source>
          <target state="translated">Objetos muitas vezes não duram após a primeira geração, pois eles não estão mais em uso (fora do escopo) quando a próxima coleta de lixo ocorre.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Generation 0 is quick to collect because its associated heap is small.</source>
          <target state="translated">A geração 0 é de coleta rápida, porque seu heap associado é pequeno.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Generation 1 is really a second chance space.</source>
          <target state="translated">A geração 1 é, na verdade, um espaço que funciona como uma segunda chance.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Objects that are short lived but survive the generation 0 collection (often based on coincidental timing) go to generation 1<ph id="ph1">\.</ph> Generation 1 collections are also quick because its associated heap is also small.</source>
          <target state="translated">Objetos de vida útil curta, mas que sobrevivem à coleta da geração 0 (geralmente devido a uma coincidência dos tempos) vão para a geração 1<ph id="ph1">\.</ph> Coletas de geração 1 também são rápidas, porque seu heap associado também é pequeno.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The first two heaps remain small because objects are either collected or are promoted to the next generation heap.</source>
          <target state="translated">Os dois primeiros heaps permanecem pequenos porque os objetos são coletados ou então são promovidos para o heap da próxima geração.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Generation 2 is where all long lived objects are.</source>
          <target state="translated">A geração 2 é aquela em que todos os objetos de vida útil longa estão.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The generation 2 heap can grow to be very large, since the objects it contains can survive a long time and there is no generation 3 heap to further promote objects.</source>
          <target state="translated">O heap da geração 2 pode crescer até ficar muito grande, considerando que os objetos que ele contém podem sobreviver por muito tempo e não há nenhum heap de geração 3 para promover ainda mais os objetos.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The GC has has an additional heap for large objects called the Large Object Heap (LOH).</source>
          <target state="translated">O GC tem um heap adicional para objetos grandes, chamado de Heap de Objeto Grande (LOH).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It is reserved for objects that are 85,000 bytes or greater.</source>
          <target state="translated">Ele é reservado para objetos com 85.000 bytes ou mais.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A byte array (Byte[]) with 85k elements would be an example of a large object.</source>
          <target state="translated">Uma matriz de bytes (Byte[]) com 85 mil elementos seria um exemplo de objeto grande.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Large objects are not allocated to the generational heaps but are allocated directly to the LOH.</source>
          <target state="translated">Objetos grandes não são alocados para os heaps geracionais, mas sim alocados diretamente para o LOH.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Generation 2 and LOH collections can take noticeable time for programs that have run for a long time or operate over large amounts of data.</source>
          <target state="translated">Coletas de geração 2 e de LOH podem levar um tempo considerável para programas que foram executados por um longo tempo ou que operam com grandes quantidades de dados.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Large server programs are known to have heaps in the 10s of GBs.</source>
          <target state="translated">Programas de servidor de grande conhecidos por terem heaps com dezenas de GBs.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The GC employs a variety of techniques to reduce the amount of time that it blocks program execution.</source>
          <target state="translated">O GC emprega uma variedade de técnicas para reduzir a quantidade de tempo pelo qual bloqueia a execução do programa.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The primary approach is to do as much garbage collection work as possible on a background thread in a way that does not interfere with program execution.</source>
          <target state="translated">A abordagem principal consiste em fazer tanto trabalho de coleta de lixo quanto possível em um thread em segundo plano, de modo que isso não interfira na execução do programa.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The GC also exposes a few ways for developers to influence its behavior, which can be quite useful to improve performance.</source>
          <target state="translated">O GC também expõe algumas maneiras para desenvolvedores influenciarem seu comportamento, o que pode ser muito útil para melhorar o desempenho.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Related Topics</source>
          <target state="translated">Tópicos relacionados</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">Título</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Descrição</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Automatic memory management and garbage collection<ept id="p1">](gc.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Gerenciamento automático de memória e coleta de lixo<ept id="p1">](gc.md)</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Introduces the basic concepts of memory management in .NET</source>
          <target state="translated">Apresenta os conceitos básicos de gerenciamento de memória no .NET</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Fundamentals of garbage collection<ept id="p1">](fundamentals.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Noções básicas da coleta de lixo<ept id="p1">](fundamentals.md)</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Describes how garbage collection works, how objects are allocated on the managed heap, and other core concepts.</source>
          <target state="translated">Descreve como funciona a coleta de lixo, como os objetos são alocados no heap gerenciado e outros conceitos principais.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Induced collections<ept id="p1">](induced.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Coletas induzidas<ept id="p1">](induced.md)</ept></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Describes how to make a garbage collection occur.</source>
          <target state="translated">Descreve como fazer uma coleta de lixo ocorrer.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Latency modes<ept id="p1">](latency.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Modos de latência<ept id="p1">](latency.md)</ept></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Describes the modes that determine the intrusiveness of garbage collection.</source>
          <target state="translated">Descreve os modos de determinam o grau de intrusão da coleta de lixo.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Weak references<ept id="p1">](weak-references.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Referências fracas<ept id="p1">](weak-references.md)</ept></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Describes features that permit the garbage collector to collect an object while still allowing the application to access that object.</source>
          <target state="translated">Descreve os recursos que permitem que um objeto seja, simultaneamente, coletado pelo coletor de lixo e acessado pelo aplicativo.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Referência</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.GC<ept id="p1">](xref:System.GC)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.GC<ept id="p1">](xref:System.GC)</ept></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.GCCollectionMode<ept id="p1">](xref:System.GCCollectionMode)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.GCCollectionMode<ept id="p1">](xref:System.GCCollectionMode)</ept></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Runtime.GCLatencyMode<ept id="p1">](xref:System.Runtime.GCLatencyMode)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Runtime.GCLatencyMode<ept id="p1">](xref:System.Runtime.GCLatencyMode)</ept></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.Runtime.GCSettings<ept id="p1">](xref:System.Runtime.GCSettings)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.Runtime.GCSettings<ept id="p1">](xref:System.Runtime.GCSettings)</ept></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>GCSettings.LargeObjectHeapCompactionMode<ept id="p1">](xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>GCSettings.LargeObjectHeapCompactionMode<ept id="p1">](xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode)</ept></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Object.Finalize<ept id="p1">](xref:System.Object.Finalize)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Object.Finalize<ept id="p1">](xref:System.Object.Finalize)</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>System.IDisposable<ept id="p1">](xref:System.IDisposable)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>System.IDisposable<ept id="p1">](xref:System.IDisposable)</ept></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Cleaning up unmanaged resources<ept id="p1">](unmanaged.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Limpando recursos não gerenciados<ept id="p1">](unmanaged.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>