<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">caae9f0a32c4378488329fd6d88c1dc7bf96ae9a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\deploying\reducing-dependencies.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f092be6e8b03fa8f1e8c2408f261d26993d078ea</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d13aab02bcdf2637f78010cf62e522d32a87ac0f</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Targeting source file commit 62fdb3e60b206728d86220076867eb8fd68af82e is lower than latest handed back source file commit 62fdb3e60b206728d86220076867eb8fd68af82e</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Reducing Package Dependencies with project.json</source>
          <target state="translated">Reduzindo as dependências de pacote com o project.json</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Reducing Package Dependencies with project.json</source>
          <target state="translated">Reduzindo as dependências de pacote com o project.json</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Reducing Package Dependencies with project.json</source>
          <target state="translated">Reduzindo as dependências de pacote com o project.json</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article covers what you need to know about reducing your package dependencies when authoring <ph id="ph1">`project.json`</ph> libraries.</source>
          <target state="translated">Este artigo aborda o que você precisa saber sobre como reduzir suas dependências de pacote ao criar bibliotecas <ph id="ph1">`project.json`</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>By the end of this article, you will learn how to compose your library such that it only uses the dependencies it needs.</source>
          <target state="translated">No final deste artigo, você aprenderá como compor sua biblioteca de forma que ela usa apenas as dependências necessárias.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Why it's Important</source>
          <target state="translated">Por que isso é importante</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>.NET Core is a product made up of NuGet packages.</source>
          <target state="translated">O .NET Core é um produto composto por pacotes NuGet.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An essential package is the <bpt id="p1">[</bpt>.NET Standard Library metapackage<ept id="p1">](https://www.nuget.org/packages/NETStandard.Library)</ept>, which is a NuGet package composed of other packages.</source>
          <target state="translated">Um pacote essencial é o <bpt id="p1">[</bpt>metapacote da .NET Standard Library<ept id="p1">](https://www.nuget.org/packages/NETStandard.Library)</ept>, que é um pacote NuGet composto por outros pacotes.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It provides you with the set of packages that are guaranteed to work on multiple .NET implementations, such as .NET Framework, .NET Core and Xamarin/Mono.</source>
          <target state="translated">Ele fornece o conjunto de pacotes que com certeza funcionam com diversas implementações .NET, como o .NET Framework, .NET Core e Xamarin/Mono.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>However, there's a good chance that your library won't use every single package it contains.</source>
          <target state="translated">No entanto, há uma boa chance de que a biblioteca não use todos os pacotes que ele contém.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When authoring a library and distributing it over NuGet, it's a best practice to "trim" your dependencies down to only the packages you actually use.</source>
          <target state="translated">Ao criar uma biblioteca e distribuí-la com o NuGet, é uma melhor prática “cortar” suas dependências para deixar apenas os pacotes que realmente serão usados.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This results in a smaller overall footprint for NuGet packages.</source>
          <target state="translated">Isso resulta em uma menor superfície geral de pacotes NuGet.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>How to do it</source>
          <target state="translated">Como fazer isso</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Currently, there is no official <ph id="ph1">`dotnet`</ph> command which trims package references.</source>
          <target state="translated">Atualmente, não há nenhum comando <ph id="ph1">`dotnet`</ph> oficial para cortar as referências de pacote.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Instead, you'll have to do it manually.</source>
          <target state="translated">Em vez disso, você terá que fazê-lo manualmente.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The general process looks like the following:</source>
          <target state="translated">O processo geral é semelhante ao seguinte:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Reference <ph id="ph1">`NETStandard.Library`</ph> version <ph id="ph2">`1.6.0`</ph> in a <ph id="ph3">`dependencies`</ph> section of your <ph id="ph4">`project.json`</ph>.</source>
          <target state="translated">Faça referência à <ph id="ph1">`NETStandard.Library`</ph> versão <ph id="ph2">`1.6.0`</ph> em uma seção <ph id="ph3">`dependencies`</ph> de seu <ph id="ph4">`project.json`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Restore packages with <ph id="ph1">`dotnet restore`</ph> from the command line.</source>
          <target state="translated">Restaure os pacotes com <ph id="ph1">`dotnet restore`</ph> da linha de comando.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Inspect the <ph id="ph1">`project.lock.json`</ph> file and find the <ph id="ph2">`NETSTandard.Library`</ph> section.</source>
          <target state="translated">Inspecione o arquivo <ph id="ph1">`project.lock.json`</ph> e localize a seção <ph id="ph2">`NETSTandard.Library`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It's near the beginning of the file.</source>
          <target state="translated">Ele estará perto do início do arquivo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Copy all of the listed packages under <ph id="ph1">`dependencies`</ph>.</source>
          <target state="translated">Copie todos os pacotes listados em <ph id="ph1">`dependencies`</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Remove the <ph id="ph1">`.NETStandard.Library`</ph> reference and replace it with the copied packages.</source>
          <target state="translated">Remova a referência <ph id="ph1">`.NETStandard.Library`</ph> e substitua-a pelos pacotes copiados.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Remove references to packages you don't need.</source>
          <target state="translated">Remova as referências aos pacotes que não são necessários.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>You can find out which packages you don't need by one of the following ways:</source>
          <target state="translated">Você pode descobrir quais pacotes não são necessários das seguintes maneiras:</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Trial and error.</source>
          <target state="translated">Tentativa e erro.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This involves removing a package, restoring, seeing if your library still compiles, and repeating this process.</source>
          <target state="translated">Isso significa remover um pacote, restaurar, ver se sua biblioteca ainda é compilada e repetir esse processo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Using a tool such as <bpt id="p1">[</bpt>ILSpy<ept id="p1">](http://ilspy.net)</ept> or <bpt id="p2">[</bpt>.NET Reflector<ept id="p2">](http://www.red-gate.com/products/dotnet-development/reflector)</ept> to peek at references to see what your code is actually using.</source>
          <target state="translated">Usar uma ferramenta como <bpt id="p1">[</bpt>ILSpy<ept id="p1">](http://ilspy.net)</ept> ou <bpt id="p2">[</bpt>.NET Reflector<ept id="p2">](http://www.red-gate.com/products/dotnet-development/reflector)</ept> para inspecionar as referências e ver o que seu código realmente está usando.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can then remove packages which don't correspond to types you're using.</source>
          <target state="translated">Você poderá então remover os pacotes que não correspondem aos tipos que você está usando.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Exemplo</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Imagine that you wrote a library which provided additional functionality to generic collection types.</source>
          <target state="translated">Imagine que você criou uma biblioteca que fornecia uma funcionalidade adicional para tipos de coleção genérica.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Such a library would need to depend on packages such as <ph id="ph1">`System.Collections`</ph>, but may not at all depend on packages such as <ph id="ph2">`System.Net.Http`</ph>.</source>
          <target state="translated">Uma biblioteca precisaria depender de pacotes como <ph id="ph1">`System.Collections`</ph>, mas pode não de pacotes como <ph id="ph2">`System.Net.Http`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>As such, it would be good to trim package dependencies down to only what this library required!</source>
          <target state="translated">Dessa forma, seria bom cortar as dependências do pacote para reduzir até o que essa biblioteca realmente precisa.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To trim this library, you start with the <ph id="ph1">`project.json`</ph> file and add a reference to <ph id="ph2">`NETStandard.Library`</ph> version <ph id="ph3">`1.6.0`</ph>.</source>
          <target state="translated">Para cortar essa biblioteca, você deve começar com o arquivo <ph id="ph1">`project.json`</ph> e adicionar uma referência ao <ph id="ph2">`NETStandard.Library`</ph> versão <ph id="ph3">`1.6.0`</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Next, you restore packages with <ph id="ph1">`dotnet restore`</ph>, inspect the <ph id="ph2">`project.lock.json`</ph> file, and find all the packages restored for <ph id="ph3">`NETSTandard.Library`</ph>.</source>
          <target state="translated">Em seguida, restaure os pacotes com <ph id="ph1">`dotnet restore`</ph>, inspecione o arquivo <ph id="ph2">`project.lock.json`</ph> e localize todos os pacotes restaurados para <ph id="ph3">`NETSTandard.Library`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Here's what the relevant section in the <ph id="ph1">`project.lock.json`</ph> file looks like when targeting <ph id="ph2">`netstandard1.0`</ph>:</source>
          <target state="translated">Veja como a seção relevante no arquivo <ph id="ph1">`project.lock.json`</ph> se parece ao redirecionar para <ph id="ph2">`netstandard1.0`</ph>:</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Next, copy over the package references into the <ph id="ph1">`dependencies`</ph> section of the library's <ph id="ph2">`project.json`</ph> file, replacing the <ph id="ph3">`NETStandard.Library`</ph> reference:</source>
          <target state="translated">Em seguida, copie as referências do pacote para a seção <ph id="ph1">`dependencies`</ph> do arquivo <ph id="ph2">`project.json`</ph> da biblioteca, substituindo a referência <ph id="ph3">`NETStandard.Library`</ph>:</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>That's quite a lot of packages, many of which which certainly aren't necessary for extending collection types.</source>
          <target state="translated">Há um grande volume de pacotes, muitos dos quais certamente não são necessários para estender os tipos de coleção.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>You can either remove packages manually or use a tool such as <bpt id="p1">[</bpt>ILSpy<ept id="p1">](http://ilspy.net)</ept> or <bpt id="p2">[</bpt>.NET Reflector<ept id="p2">](http://www.red-gate.com/products/dotnet-development/reflector)</ept> to identify which packages your code actually uses.</source>
          <target state="translated">Você pode remover os pacotes manualmente ou usar uma ferramenta como <bpt id="p1">[</bpt>ILSpy<ept id="p1">](http://ilspy.net)</ept> ou <bpt id="p2">[</bpt>.NET Reflector<ept id="p2">](http://www.red-gate.com/products/dotnet-development/reflector)</ept> para identificar quais pacotes seu código realmente usa.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Here's what a trimmed package could look like:</source>
          <target state="translated">Veja como um pacote cortado pareceria:</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Now, it has a smaller footprint than if it had depended on the <ph id="ph1">`NETStandard.Library`</ph> metapackage.</source>
          <target state="translated">Agora, ele tem uma superfície menor do que se tivesse dependentes no metapacote <ph id="ph1">`NETStandard.Library`</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>