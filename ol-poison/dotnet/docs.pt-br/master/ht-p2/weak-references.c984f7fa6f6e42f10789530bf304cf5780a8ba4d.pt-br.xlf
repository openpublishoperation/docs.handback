<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-eac019f" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc43c319f2ec8055073da4749cbfb7c56b825df9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\garbagecollection\weak-references.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74ee65cabb35b067b7c71eb39e3f79e7364848da</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b528e9e221e8e3373f6bf61ae040e935c316df98</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Targeting source file commit 213ce098bcc2b5e31c55e759d895254d5ca33caa is lower than latest handed back source file commit 213ce098bcc2b5e31c55e759d895254d5ca33caa</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Weak references</source>
          <target state="translated">Referências fracas</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Weak references</source>
          <target state="translated">Referências fracas</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Weak references</source>
          <target state="translated">Referências fracas</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The garbage collector cannot collect an object in use by an application while the application's code can reach that object.</source>
          <target state="translated">O coletor de lixo não pode coletar um objeto em uso por um aplicativo enquanto o código do aplicativo pode acessar esse objeto.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The application is said to have a strong reference to the object.</source>
          <target state="translated">O aplicativo tem uma referência forte para o objeto.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A weak reference permits the garbage collector to collect the object while still allowing the application to access the object.</source>
          <target state="translated">Uma referência fraca permite que o coletor de lixo colete o objeto enquanto ainda permite que o aplicativo o acesse.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A weak reference is valid only during the indeterminate amount of time until the object is collected when no strong references exist.</source>
          <target state="translated">Uma referência fraca é válida somente durante o período indeterminado até que o objeto seja coletado quando não há nenhuma referência forte.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When you use a weak reference, the application can still obtain a strong reference to the object, which prevents it from being collected.</source>
          <target state="translated">Quando você usa uma referência fraca, o aplicativo ainda pode obter uma referência forte para o objeto, o que impede que ele seja coletado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>However, there is always the risk that the garbage collector will get to the object first before a strong reference is reestablished.</source>
          <target state="translated">No entanto, sempre há o risco de o coletor de lixo obter o objeto primeiro antes de uma referência forte ser restabelecida.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Weak references are useful for objects that use a lot of memory, but can be recreated easily if they are reclaimed by garbage collection.</source>
          <target state="translated">As referências fracas são úteis para objetos que usam muita memória, mas podem ser facilmente recriados se forem recuperados pela coleta de lixo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Suppose a tree view displays a complex hierarchical choice of options to the user.</source>
          <target state="translated">Suponha que um modo de exibição de árvore exiba uma escolha hierárquica complexa de opções para o usuário.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the underlying data is large, keeping the tree in memory is inefficient when the user is involved with something else in the application.</source>
          <target state="translated">Se os dados subjacentes forem grandes, manter a árvore na memória é ineficiente quando o usuário está envolvido com outra coisa no aplicativo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When the user switches away to another part of the application, you can use the <bpt id="p1">[</bpt>WeakReference<ept id="p1">](xref:System.WeakReference)</ept> or <bpt id="p2">[</bpt>WeakReference<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](xref:System.WeakReference%601)</ept> class to create a weak reference to the tree and destroy all strong references.</source>
          <target state="translated">Quando o usuário alterna para outra parte do aplicativo, você pode usar a classe <bpt id="p1">[</bpt>WeakReference<ept id="p1">](xref:System.WeakReference)</ept> ou <bpt id="p2">[</bpt>WeakReference<ph id="ph1">&amp;lt;</ph>T<ph id="ph2">&amp;gt;</ph><ept id="p2">](xref:System.WeakReference%601)</ept> para criar uma referência fraca para a árvore e destruir todas as referências fortes.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When the user switches back to the tree, the application attempts to obtain a strong reference to the tree and, if successful, avoids reconstructing the tree.</source>
          <target state="translated">Quando o usuário alterna de volta para a árvore, o aplicativo tenta obter uma referência forte para a árvore e, se tiver êxito, evita a reconstrução da árvore.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>To establish a weak reference with an object, you create a <bpt id="p1">[</bpt>WeakReference<ept id="p1">](xref:System.WeakReference)</ept> using the instance of the object to be tracked.</source>
          <target state="translated">Para estabelecer uma referência fraca com um objeto, você cria uma <bpt id="p1">[</bpt>WeakReference<ept id="p1">](xref:System.WeakReference)</ept> usando a instância do objeto a ser rastreada.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You then set the <bpt id="p1">[</bpt>Target<ept id="p1">](xref:System.WeakReference.Target)</ept> property to that object and set the original reference to the object to null.</source>
          <target state="translated">Em seguida, você deve define a propriedade <bpt id="p1">[</bpt>Target<ept id="p1">](xref:System.WeakReference.Target)</ept> para aquele objeto e define a referência original para o objeto como null.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Short and Long Weak References</source>
          <target state="translated">Referências fracas curtas e longas</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can create a short weak reference or a long weak reference:</source>
          <target state="translated">Você pode criar uma referência fraca curta ou uma referência fraca longa:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Short</source>
          <target state="translated">Abreviado</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The target of a short weak reference becomes <ph id="ph1">`null`</ph> when the object is reclaimed by garbage collection.</source>
          <target state="translated">O destino de uma referência fraca curta se torna <ph id="ph1">`null`</ph> quando o objeto é recuperado pela coleta de lixo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The weak reference is itself a managed object, and is subject to garbage collection just like any other managed object.</source>
          <target state="translated">A referência fraca é um objeto gerenciado e está sujeita à coleta de lixo assim como qualquer outro objeto gerenciado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A short weak reference is the default constructor for <bpt id="p1">[</bpt>WeakReference<ept id="p1">](xref:System.WeakReference)</ept>.</source>
          <target state="translated">Uma referência fraca curta é o construtor padrão para <bpt id="p1">[</bpt>WeakReference<ept id="p1">](xref:System.WeakReference)</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Long</source>
          <target state="translated">Long</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A long weak reference is retained after the object's <bpt id="p1">[</bpt>Finalize<ept id="p1">](xref:System.Object.Finalize)</ept> method has been called.</source>
          <target state="translated">Uma referência fraca longa é mantida após o método <bpt id="p1">[</bpt>Finalize<ept id="p1">](xref:System.Object.Finalize)</ept> do objeto ter sido chamado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This allows the object to be recreated, but the state of the object remains unpredictable.</source>
          <target state="translated">Isso permite que o objeto seja recriado, mas o estado do objeto permanece imprevisível.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>To use a long reference, specify <ph id="ph1">`true`</ph> in the <bpt id="p1">[</bpt>WeakReference<ept id="p1">](xref:System.WeakReference)</ept> constructor.</source>
          <target state="translated">Para usar uma referência longa, especifique <ph id="ph1">`true`</ph> no construtor <bpt id="p1">[</bpt>WeakReference<ept id="p1">](xref:System.WeakReference)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If the object's type does not have a <bpt id="p1">[</bpt>Finalize<ept id="p1">](xref:System.Object.Finalize)</ept> method, the short weak reference functionality applies and the weak reference is valid only until the target is collected, which can occur anytime after the finalizer is run.</source>
          <target state="translated">Se o tipo de objeto não tiver um método <bpt id="p1">[</bpt>Finalize<ept id="p1">](xref:System.Object.Finalize)</ept>, a funcionalidade de referência fraca curta é aplicada e a referência fraca é válida apenas até o destino ser coletado, o que pode ocorrer a qualquer momento após o finalizador ser executado.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To establish a strong reference and use the object again, cast the <bpt id="p1">[</bpt>Target<ept id="p1">](xref:System.WeakReference.Target)</ept> property of a <bpt id="p2">[</bpt>WeakReference<ept id="p2">](xref:System.WeakReference)</ept> to the type of the object.</source>
          <target state="translated">Para estabelecer uma referência forte e usar o objeto novamente, converta a propriedade <bpt id="p1">[</bpt>Target<ept id="p1">](xref:System.WeakReference.Target)</ept> de um <bpt id="p2">[</bpt>WeakReference<ept id="p2">](xref:System.WeakReference)</ept> para o tipo do objeto.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">[</bpt>Target<ept id="p1">](xref:System.WeakReference.Target)</ept> property returns <ph id="ph1">`null`</ph>, the object was collected; otherwise, you can continue to use the object because the application has regained a strong reference to it.</source>
          <target state="translated">Se a propriedade <bpt id="p1">[</bpt>Target<ept id="p1">](xref:System.WeakReference.Target)</ept> retornar <ph id="ph1">`null`</ph>, o objeto foi coletado, caso contrário, você pode continuar a usar o objeto, pois o aplicativo recuperou uma referência forte para ele.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Guidelines for Using Weak References</source>
          <target state="translated">Diretrizes para usar referências fracas</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Use long weak references only when necessary as the state of the object is unpredictable after finalization.</source>
          <target state="translated">Use referências fracas longas somente quando necessário, uma vez que o estado do objeto é imprevisível após a finalização.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Avoid using weak references to small objects because the pointer itself may be as large or larger.</source>
          <target state="translated">Evite usar referências fracas para objetos pequenos, pois o ponteiro em si pode ser tão grande quanto ou maior.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Avoid using weak references as an automatic solution to memory management problems.</source>
          <target state="translated">Evite usar referências fracas como uma solução automática para problemas de gerenciamento de memória.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Instead, develop an effective caching policy for handling your application's objects.</source>
          <target state="translated">Em vez disso, desenvolva uma política de cache efetiva para lidar com os objetos do seu aplicativo.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Garbage collection in .NET<ept id="p1">](index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Coleta de lixo no .NET<ept id="p1">](index.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>