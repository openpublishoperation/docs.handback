<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">840036a91f430f72e0258b8be466770f2855a58f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\program-structure\how-to-break-and-combine-statements-in-code.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fc6f4877fcbdf7d53bc3257c50cd2500ca418ee2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f15091623e8328c7d76caa99217809cc785b086</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_how-to-break-and-combine-statements-in-code.d9b8930c41778ff86913b23883bef9d9ee34af61.pt-br is different with handoff file name: how-to-break-and-combine-statements-in-code.d9b8930c41778ff86913b23883bef9d9ee34af61.pt-br.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Break and Combine Statements in Code (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Como: quebrar e combinar instruções no código (Visual Basic) | Documentos do Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Break and Combine Statements in Code (Visual Basic)</source>
          <target state="translated">Como quebrar e combinar instruções no código (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When writing your code, you might at times create lengthy statements that necessitate horizontal scrolling in the Code Editor.</source>
          <target state="translated">Ao escrever seu código, às vezes você pode criar instruções longas que exigem rolagem horizontal no Editor de códigos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Although this doesn't affect the way your code runs, it makes it difficult for you or anyone else to read the code as it appears on the monitor.</source>
          <target state="translated">Embora isso não afeta a maneira como seu código é executado, ele torna difícil para você ou outra pessoa ler o código que aparece no monitor.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>In such cases, you should consider breaking the single long statement into several lines.</source>
          <target state="translated">Nesses casos, considere dividir a única instrução longa em várias linhas.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To break a single statement into multiple lines</source>
          <target state="translated">Para dividir uma única instrução em várias linhas</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Use the line-continuation character, which is an underscore (<ph id="ph1">`_`</ph>), at the point at which you want the line to break.</source>
          <target state="translated">Use o caractere de continuação de linha, que é um caractere de sublinhado (<ph id="ph1">`_`</ph>), no ponto em que você deseja quebrar a linha.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The underscore must be immediately preceded by a space and immediately followed by a line terminator (carriage return).</source>
          <target state="translated">O sublinhado deve ser imediatamente precedido por um espaço e seguido imediatamente por um terminador de linha (retorno de carro).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>In some cases, if you omit the line-continuation character, the Visual Basic compiler will implicitly continue the statement on the next line of code.</source>
          <target state="translated">Em alguns casos, se você omitir o caractere de continuação de linha, o compilador do Visual Basic continuará implicitamente a instrução na próxima linha de código.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For a list of syntax elements for which you can omit the line-continuation character, see "Implicit Line Continuation" in <bpt id="p1">[</bpt>Statements<ept id="p1">](../../../visual-basic/programming-guide/language-features/statements.md)</ept>.</source>
          <target state="translated">Para obter uma lista de elementos de sintaxe para a qual você pode omitir o caractere de continuação de linha, consulte "Continuação implícita de linha" em <bpt id="p1">[</bpt>instruções<ept id="p1">](../../../visual-basic/programming-guide/language-features/statements.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In the following example, the statement is broken into four lines with line-continuation characters terminating all but the last line.</source>
          <target state="translated">No exemplo a seguir, a instrução é dividida em quatro linhas com caracteres de continuação de linha, encerrando todos, mas a última linha.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnConventions#20<ept id="p2">](../../../visual-basic/programming-guide/language-features/codesnippet/VisualBasic/how-to-break-and-combine-statements-in-code_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>20 VbVbcnConventions<ept id="p2">](../../../visual-basic/programming-guide/language-features/codesnippet/VisualBasic/how-to-break-and-combine-statements-in-code_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Using this sequence makes your code easier to read, both online and when printed.</source>
          <target state="translated">Usar essa sequência torna seu código mais fácil de ler, online e quando impresso.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The line-continuation character must be the last character on a line.</source>
          <target state="translated">O caractere de continuação de linha deve ser o último caractere em uma linha.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>You can't follow it with anything else on the same line.</source>
          <target state="translated">Você não pode segui-lo com qualquer outra coisa na mesma linha.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Some limitations exist as to where you can use the line-continuation character; for example, you can't use it in the middle of an argument name.</source>
          <target state="translated">Existem algumas limitações sobre onde você pode usar o caractere de continuação de linha; Por exemplo, você não pode usá-lo no meio de um nome de argumento.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can break an argument list with the line-continuation character, but the individual names of the arguments must remain intact.</source>
          <target state="translated">Você pode interromper uma lista de argumentos com o caractere de continuação de linha, mas os nomes individuais dos argumentos devem permanecer intactos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You can't continue a comment by using a line-continuation character.</source>
          <target state="translated">Você não pode continuar um comentário usando um caractere de continuação de linha.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The compiler doesn't examine the characters in a comment for special meaning.</source>
          <target state="translated">O compilador não examina os caracteres em um comentário para um significado especial.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For a multiple-line comment, repeat the comment symbol (<ph id="ph1">`'`</ph>) on each line.</source>
          <target state="translated">Para um comentário de várias linhas, repita o símbolo de comentário (<ph id="ph1">`'`</ph>) em cada linha.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Although placing each statement on a separate line is the recommended method, <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> also allows you to place multiple statements on the same line.</source>
          <target state="translated">Embora colocar cada instrução em uma linha separada é o método recomendado, <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> também permite que você coloque várias instruções na mesma linha.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>To place multiple statements on the same line</source>
          <target state="translated">Para colocar várias instruções na mesma linha</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Separate the statements with a colon (<ph id="ph1">`:`</ph>), as in the following example.</source>
          <target state="translated">Separe as instruções com dois-pontos (<ph id="ph1">`:`</ph>), como no exemplo a seguir.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnConventions#10<ept id="p2">](../../../visual-basic/programming-guide/language-features/codesnippet/VisualBasic/how-to-break-and-combine-statements-in-code_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnConventions n º&amp;10;<ept id="p2">](../../../visual-basic/programming-guide/language-features/codesnippet/VisualBasic/how-to-break-and-combine-statements-in-code_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Program Structure and Code Conventions<ept id="p1">](../../../visual-basic/programming-guide/program-structure/program-structure-and-code-conventions.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Estrutura do programa e convenções de código<ept id="p1">](../../../visual-basic/programming-guide/program-structure/program-structure-and-code-conventions.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Statements<ept id="p1">](../../../visual-basic/programming-guide/language-features/statements.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Instruções<ept id="p1">](../../../visual-basic/programming-guide/language-features/statements.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>