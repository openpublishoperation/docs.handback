<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c1ef9db560de02efa20dbe88ff0e73ffd9e7fff</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\how-to-find-child-elements-based-on-position.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8cf1cf34f992911c5c590d4d6d47ba0b64ae601</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08b185f11e01ee97c04f0119e95ad0b88708af63</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_how-to-find-child-elements-based-on-position.ecffb7b3572e4c372e7d5e6a4cb46e284ef40f5d.pt-br is different with handoff file name: how-to-find-child-elements-based-on-position.ecffb7b3572e4c372e7d5e6a4cb46e284ef40f5d.pt-br.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Find Child Elements Based on Position (XPath-LINQ to XML) (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Como: localizar elementos filho com base na posição (XPath-LINQ para XML) (Visual Basic) | Documentos do Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Find Child Elements Based on Position (XPath-LINQ to XML) (Visual Basic)</source>
          <target state="translated">Como: localizar elementos filho com base na posição (XPath-LINQ para XML) (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Sometimes you want to find elements based on their position.</source>
          <target state="translated">Às vezes você deseja localizar elementos com base em sua posição.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You might want to find the second element, or you might want to find the third through the fifth element.</source>
          <target state="translated">Você pode desejar localizar o segundo elemento, ou você talvez queira localizar o terceiro através do quinto elemento.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The XPath expression is:</source>
          <target state="translated">A expressão XPath é:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>There are two approaches to writing this <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> query in a lazy way.</source>
          <target state="translated">Há duas abordagens para escrever esta consulta de <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> de uma maneira lazy.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>You can use the &lt;xref:System.Linq.Enumerable.Skip%2A&gt; and &lt;xref:System.Linq.Enumerable.Take%2A&gt; operators, or you can use the &lt;xref:System.Linq.Enumerable.Where%2A&gt; overload that takes an index.</source>
          <target state="translated">Você pode usar o &lt;xref:System.Linq.Enumerable.Skip%2A&gt;e &lt;xref:System.Linq.Enumerable.Take%2A&gt;operadores, ou você pode usar o &lt;xref:System.Linq.Enumerable.Where%2A&gt;sobrecarga que utiliza um índice.&lt;/xref:System.Linq.Enumerable.Where%2A&gt; &lt;/xref:System.Linq.Enumerable.Take%2A&gt; &lt;/xref:System.Linq.Enumerable.Skip%2A&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When you use the &lt;xref:System.Linq.Enumerable.Where%2A&gt; overload, you use a lambda expression that takes two arguments.</source>
          <target state="translated">Quando você usa o &lt;xref:System.Linq.Enumerable.Where%2A&gt;sobrecarga, você usar uma expressão lambda que leva dois argumentos.&lt;/xref:System.Linq.Enumerable.Where%2A&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following example shows both methods of selecting based on position.</source>
          <target state="translated">O exemplo a seguir mostra os dois métodos de selecione a posição de functionamento base.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Exemplo</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This example finds the second through the fourth <ph id="ph1">`Test`</ph> element.</source>
          <target state="translated">Este exemplo localiza o segundo a quarto elemento de <ph id="ph1">`Test`</ph> .</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The result is a collection of elements.</source>
          <target state="translated">O resultado é uma coleção de elementos.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This example uses the following XML document: <bpt id="p1">[</bpt>Sample XML File: Test Configuration (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-test-configuration-linq-to-xml.md)</ept>.</source>
          <target state="translated">Este exemplo usa o seguinte documento XML: <bpt id="p1">[</bpt>arquivo XML de exemplo: configuração de teste (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-test-configuration-linq-to-xml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">Este exemplo gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ to XML for XPath Users (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>LINQ to XML para XPath usuários (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>