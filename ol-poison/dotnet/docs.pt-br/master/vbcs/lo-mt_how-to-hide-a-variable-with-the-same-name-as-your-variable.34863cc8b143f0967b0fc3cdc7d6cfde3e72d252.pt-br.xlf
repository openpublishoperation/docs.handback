<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e568d41fc4a194ab6231ade201f95658c85a13fe</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\declared-elements\how-to-hide-a-variable-with-the-same-name-as-your-variable.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">141577ef2450772057a83a4217e47459f4038495</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c03695b1b8bcfd41fce46a5357a0c3c3e932e5a2</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_how-to-hide-a-variable-with-the-same-name-as-your-variable.34863cc8b143f0967b0fc3cdc7d6cfde3e72d252.pt-br is different with handoff file name: how-to-hide-a-variable-with-the-same-name-as-your-variable.34863cc8b143f0967b0fc3cdc7d6cfde3e72d252.pt-br.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Hide a Variable with the Same Name as Your Variable (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Como: ocultar uma variável com o mesmo nome que sua variável (Visual Basic) | Documentos do Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Hide a Variable with the Same Name as Your Variable (Visual Basic)</source>
          <target state="translated">Como ocultar uma variável com o mesmo nome que a variável (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You can hide a variable by <bpt id="p1">*</bpt>shadowing<ept id="p1">*</ept> it, that is, by redefining it with a variable of the same name.</source>
          <target state="translated">Você pode ocultar uma variável por <bpt id="p1">*</bpt>sombreamento<ept id="p1">*</ept> -lo, ou seja, redefinindo-o com uma variável de mesmo nome.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can shadow the variable you want to hide in two ways:</source>
          <target state="translated">Você pode sombrear a variável que você deseja ocultar de duas maneiras:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Shadowing Through Scope.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sombreamento através de escopo.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can shadow it through scope by redeclaring it inside a subregion of the region containing the variable you want to hide.</source>
          <target state="translated">Você pode sombreá-lo através de escopo redeclarando-dentro uma sub-região da região que contém a variável que você deseja ocultar.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Shadowing Through Inheritance.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Sombreamento através de herança.<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If the variable you want to hide is defined at class level, you can shadow it through inheritance by redeclaring it with the <bpt id="p1">[</bpt>Shadows<ept id="p1">](../../../../visual-basic/language-reference/modifiers/shadows.md)</ept> keyword in a derived class.</source>
          <target state="translated">Se a variável que você deseja ocultar é definida no nível de classe, você pode sombreá-lo por meio da herança redeclarando com o <bpt id="p1">[</bpt>sombras<ept id="p1">](../../../../visual-basic/language-reference/modifiers/shadows.md)</ept> palavra-chave em uma classe derivada.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Two Ways to Hide a Variable</source>
          <target state="translated">Duas maneiras para ocultar uma variável</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To hide a variable by shadowing it through scope</source>
          <target state="translated">Para ocultar uma variável de sombreamento-lo através de escopo</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Determine the region defining the variable you want to hide, and determine a subregion in which to redefine it with your variable.</source>
          <target state="translated">Determine a definição da variável que você deseja ocultar a região e determinar uma sub-região no qual deseja redefini-la com sua variável.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Variable's region</source>
          <target state="translated">Região da variável</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Allowable subregion for redefining it</source>
          <target state="translated">Sub-região permitido para redefinir a ele</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Module</source>
          <target state="translated">Módulo</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A class within the module</source>
          <target state="translated">Uma classe dentro do módulo</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Classe</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A subclass within the class</source>
          <target state="translated">Uma subclasse da classe</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A procedure within the class</source>
          <target state="translated">Um procedimento dentro da classe</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You cannot redefine a procedure variable in a block within that procedure, for example in an <ph id="ph1">`If`</ph>...<ph id="ph2">`End If`</ph> construction or a <ph id="ph3">`For`</ph> loop.</source>
          <target state="translated">Você não pode redefinir uma variável de procedimento em um bloco dentro desse procedimento, por exemplo em um <ph id="ph1">`If`</ph>... <ph id="ph2">`End If`</ph> construção ou um <ph id="ph3">`For`</ph> loop.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Create the subregion if it does not already exist.</source>
          <target state="translated">Crie a sub-região se ele ainda não existir.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Within the subregion, write a <bpt id="p1">[</bpt>Dim Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/dim-statement.md)</ept> declaring the shadowing variable.</source>
          <target state="translated">Dentro da sub-região, escrever um <bpt id="p1">[</bpt>instrução Dim<ept id="p1">](../../../../visual-basic/language-reference/statements/dim-statement.md)</ept> declarando a variável de sombreamento.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>When code inside the subregion refers to the variable name, the compiler resolves the reference to the shadowing variable.</source>
          <target state="translated">Quando o código dentro a sub-região refere-se ao nome da variável, o compilador resolve a referência à variável de sombreamento.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The following example illustrates shadowing through scope, as well as a reference that bypasses the shadowing.</source>
          <target state="translated">O exemplo a seguir ilustra sombreamento através de escopo, bem como uma referência que ignora o sombreamento.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The preceding example declares the variable <ph id="ph1">`num`</ph> both at module level and at procedure level (in the procedure <ph id="ph2">`show`</ph>).</source>
          <target state="translated">O exemplo anterior declara a variável <ph id="ph1">`num`</ph> no nível de módulo e no nível de procedimento (no procedimento <ph id="ph2">`show`</ph>).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The local variable <ph id="ph1">`num`</ph> shadows the module-level variable <ph id="ph2">`num`</ph> within <ph id="ph3">`show`</ph>, so the local variable is set to 2.</source>
          <target state="translated">A variável local <ph id="ph1">`num`</ph> sombreia a variável de nível de módulo <ph id="ph2">`num`</ph> em <ph id="ph3">`show`</ph>, portanto, a variável local é definida como 2.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>However, there is no local variable to shadow <ph id="ph1">`num`</ph> in the <ph id="ph2">`useModuleLevelNum`</ph> procedure.</source>
          <target state="translated">No entanto, não há nenhuma variável local a sombra <ph id="ph1">`num`</ph> no <ph id="ph2">`useModuleLevelNum`</ph> procedimento.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Therefore, <ph id="ph1">`useModuleLevelNum`</ph> sets the value of the module-level variable to 1.</source>
          <target state="translated">Portanto, <ph id="ph1">`useModuleLevelNum`</ph> define o valor da variável de nível de módulo para 1.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`MsgBox`</ph> call inside <ph id="ph2">`show`</ph> bypasses the shadowing mechanism by qualifying <ph id="ph3">`num`</ph> with the module name.</source>
          <target state="translated">O <ph id="ph1">`MsgBox`</ph> chamar dentro <ph id="ph2">`show`</ph> ignora o mecanismo de sombreamento qualificando <ph id="ph3">`num`</ph> com o nome do módulo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Therefore, it displays the module-level variable instead of the local variable.</source>
          <target state="translated">Portanto, ele exibe a variável de nível de módulo em vez da variável local.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>To hide a variable by shadowing it through inheritance</source>
          <target state="translated">Para ocultar uma variável de sombreamento-lo através de herança</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Be sure the variable you want to hide is declared in a class, and at class level (outside any procedure).</source>
          <target state="translated">Certifique-se de que a variável que você deseja ocultar é declarada em uma classe e no nível de classe (fora de qualquer procedimento).</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Otherwise you cannot shadow it through inheritance.</source>
          <target state="translated">Caso contrário, você não pode sombreá-lo por meio da herança.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Define a class derived from the variable's class if one does not already exist.</source>
          <target state="translated">Defina uma classe derivada da classe da variável se ainda não existir.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Inside the derived class, write a <ph id="ph1">`Dim`</ph> statement declaring your variable.</source>
          <target state="translated">Dentro da classe derivada, escreva um <ph id="ph1">`Dim`</ph> declarando a variável de instrução.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Include the <bpt id="p1">[</bpt>Shadows<ept id="p1">](../../../../visual-basic/language-reference/modifiers/shadows.md)</ept> keyword in the declaration.</source>
          <target state="translated">Incluir o <bpt id="p1">[</bpt>sombras<ept id="p1">](../../../../visual-basic/language-reference/modifiers/shadows.md)</ept> palavra-chave na declaração.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When code in the derived class refers to the variable name, the compiler resolves the reference to your variable.</source>
          <target state="translated">Quando o código na classe derivada refere-se ao nome da variável, o compilador resolve a referência à variável.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following example illustrates shadowing through inheritance.</source>
          <target state="translated">O exemplo a seguir ilustra sombreamento através de herança.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It makes two references, one that accesses the shadowing variable and one that bypasses the shadowing.</source>
          <target state="translated">Ele faz duas referências, que acessa a variável de sombreamento e outra que ignora o sombreamento.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The preceding example declares the variable <ph id="ph1">`shadowString`</ph> in the base class and shadows it in the derived class.</source>
          <target state="translated">O exemplo anterior declara a variável <ph id="ph1">`shadowString`</ph> na classe base e a sombreia na classe derivada.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The procedure <ph id="ph1">`showStrings`</ph> in the derived class displays the shadowing version of the string when the name <ph id="ph2">`shadowString`</ph> is not qualified.</source>
          <target state="translated">O procedimento <ph id="ph1">`showStrings`</ph> na classe derivada exibe a versão sombreada da cadeia de caracteres quando o nome <ph id="ph2">`shadowString`</ph> não está qualificado.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>It then displays the shadowed version when <ph id="ph1">`shadowString`</ph> is qualified with the <ph id="ph2">`MyBase`</ph>keyword.</source>
          <target state="translated">Em seguida, exibe a versão sombreada quando <ph id="ph1">`shadowString`</ph> qualificado com o <ph id="ph2">`MyBase`</ph>palavra-chave.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Robust Programming</source>
          <target state="translated">Programação robusta</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Shadowing introduces more than one version of a variable with the same name.</source>
          <target state="translated">Sombreamento introduz mais de uma versão de uma variável com o mesmo nome.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>When a code statement refers to the variable name, the version to which the compiler resolves the reference depends on factors such as the location of the code statement and the presence of a qualifying string.</source>
          <target state="translated">Quando uma declaração de código refere-se ao nome da variável, a versão para que o compilador resolve a referência depende de fatores como o local da instrução do código e a presença de uma cadeia de caracteres de qualificação.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This can increase the risk of referring to an unintended version of a shadowed variable.</source>
          <target state="translated">Isso pode aumentar o risco de se referir a uma versão não intencional de uma variável sombreada.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>You can lower that risk by fully qualifying all references to a shadowed variable.</source>
          <target state="translated">Você pode diminuir esse risco qualificar totalmente todas as referências a uma variável sombreada.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>References to Declared Elements<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Referências a elementos declarados<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/references-to-declared-elements.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Shadowing in Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/shadowing.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Sombreamento no Visual Basic<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/shadowing.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Differences Between Shadowing and Overriding<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/differences-between-shadowing-and-overriding.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Diferenças entre sombreamento e sobreposição<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/differences-between-shadowing-and-overriding.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Hide an Inherited Variable<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/how-to-hide-an-inherited-variable.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Como: ocultar uma variável herdada<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/how-to-hide-an-inherited-variable.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Access a Variable Hidden by a Derived Class<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/how-to-access-a-variable-hidden-by-a-derived-class.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Como: acessar uma variável ocultada por uma classe derivada<ept id="p1">](../../../../visual-basic/programming-guide/language-features/declared-elements/how-to-access-a-variable-hidden-by-a-derived-class.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Overrides<ept id="p1">](../../../../visual-basic/language-reference/modifiers/overrides.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Substituições<ept id="p1">](../../../../visual-basic/language-reference/modifiers/overrides.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Me, My, MyBase, and MyClass<ept id="p1">](../../../../visual-basic/programming-guide/program-structure/me-my-mybase-and-myclass.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Me, My, MyBase e MyClass<ept id="p1">](../../../../visual-basic/programming-guide/program-structure/me-my-mybase-and-myclass.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Inheritance Basics<ept id="p1">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Noções Básicas de Herança<ept id="p1">](../../../../visual-basic/programming-guide/language-features/objects-and-classes/inheritance-basics.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>