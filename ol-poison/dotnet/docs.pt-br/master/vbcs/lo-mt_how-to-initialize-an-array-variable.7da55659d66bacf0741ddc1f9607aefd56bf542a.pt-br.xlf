<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0793eafe0c5dc22b4b35f4c2913dfe7151a09379</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\arrays\how-to-initialize-an-array-variable.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">275b88419925aeb53a274e9ca23e4294c352e1c6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9323aaaa06425e7ac2d09d183bdea5062e016e2d</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_how-to-initialize-an-array-variable.7da55659d66bacf0741ddc1f9607aefd56bf542a.pt-br is different with handoff file name: how-to-initialize-an-array-variable.7da55659d66bacf0741ddc1f9607aefd56bf542a.pt-br.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Initialize an Array Variable in Visual Basic | Microsoft Docs</source>
          <target state="translated">Como: inicializar uma variável de matriz no Visual Basic | Documentos do Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Initialize an Array Variable in Visual Basic</source>
          <target state="translated">Como inicializar uma variável de matriz no Visual Basic</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>You initialize an array variable by including an array literal in a <ph id="ph1">`New`</ph> clause and specifying the initial values of the array.</source>
          <target state="translated">Você deve inicializar uma variável de matriz, incluindo uma matriz literal em uma <ph id="ph1">`New`</ph> cláusula e especificando os valores iniciais da matriz.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>You can either specify the type or allow it to be inferred from the values in the array literal.</source>
          <target state="translated">Você pode especificar o tipo ou permitir que ele ser inferidos dos valores na matriz de literal.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information about how the type is inferred, see "Populating an Array with Initial Values" in <bpt id="p1">[</bpt>Arrays<ept id="p1">](../../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept>.</source>
          <target state="translated">Para obter mais informações sobre como o tipo é inferido, consulte "Preencher uma matriz com valores iniciais" <bpt id="p1">[</bpt>matrizes<ept id="p1">](../../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>To initialize an array variable by using an array literal</source>
          <target state="translated">Para inicializar uma variável de matriz usando um literal de matriz</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Either in the <ph id="ph1">`New`</ph> clause, or when you assign the array value, supply the element values inside braces (<ph id="ph2">`{}`</ph>).</source>
          <target state="translated">No <ph id="ph1">`New`</ph> cláusula, ou quando você atribui o valor de matriz, forneça os valores dos elementos dentro de chaves (<ph id="ph2">`{}`</ph>).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The following example shows several ways to declare, create, and initialize a variable to contain an array that has elements of type <ph id="ph1">`Char`</ph>.</source>
          <target state="translated">O exemplo a seguir mostra várias maneiras de declarar, criar e inicializar uma variável para conter uma matriz com elementos do tipo <ph id="ph1">`Char`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrArrays#16<ept id="p2">](../../../../visual-basic/programming-guide/language-features/arrays/codesnippet/VisualBasic/how-to-initialize-an-array-variable_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrArrays n º&amp;16;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/arrays/codesnippet/VisualBasic/how-to-initialize-an-array-variable_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>After each statement executes, the array that's created has a length of 3, with elements at index 0 through index 2 containing the initial values.</source>
          <target state="translated">Após cada instrução é executada, a matriz que é criada tem um comprimento igual a 3, com elementos no índice 0 até índice 2 que contém os valores iniciais.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If you supply both the upper bound and the values, you must include a value for every element from index 0 through the upper bound.</source>
          <target state="translated">Se você fornecer o limite superior e os valores, você deve incluir um valor para cada elemento do índice 0 até o limite superior.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Notice that you do not have to specify the index upper bound if you supply element values in an array literal.</source>
          <target state="translated">Observe que você não precisa especificar o limite superior do índice se você fornecer valores de elemento em um literal de matriz.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If no upper bound is specified, the size of the array is inferred based on the number of values in the array literal.</source>
          <target state="translated">Se nenhum limite superior for especificado, o tamanho da matriz é inferido com base no número de valores na matriz literal.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>To initialize a multidimensional array variable by using array literals</source>
          <target state="translated">Para inicializar uma variável de matriz multidimensional usando literais de matriz</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Nest values inside braces (<ph id="ph1">`{}`</ph>) within braces.</source>
          <target state="translated">Aninhar valores entre chaves (<ph id="ph1">`{}`</ph>) entre chaves.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Ensure that the nested array literals all infer as arrays of the same type and length.</source>
          <target state="translated">Certifique-se de que os literais de matriz aninhada que todos inferir como matrizes do mesmo tipo e comprimento.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The following code example shows several examples of multidimensional array initialization.</source>
          <target state="translated">O exemplo de código a seguir mostra vários exemplos de inicialização de matriz multidimensional.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrArrays#17<ept id="p2">](../../../../visual-basic/programming-guide/language-features/arrays/codesnippet/VisualBasic/how-to-initialize-an-array-variable_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>17 VbVbalrArrays<ept id="p2">](../../../../visual-basic/programming-guide/language-features/arrays/codesnippet/VisualBasic/how-to-initialize-an-array-variable_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>You can explicitly specify the array bounds, or leave them out and have the compiler infer the array bounds based on the values in the array literal.</source>
          <target state="translated">Explicitamente você pode especificar os limites da matriz, ou omiti-los e que o compilador inferir os limites de matriz com base nos valores do literal de matriz.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you supply both the upper bounds and the values, you must include a value for every element from index 0 through the upper bound in every dimension.</source>
          <target state="translated">Se você fornecer os limites superiores e os valores, você deve incluir um valor para cada elemento do índice 0 até o limite superior de cada dimensão.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The following example shows several ways to declare, create, and initialize a variable to contain a two-dimensional array that has elements of type <ph id="ph1">`Short`</ph></source>
          <target state="translated">O exemplo a seguir mostra várias maneiras de declarar, criar e inicializar uma variável para conter uma matriz bidimensional com elementos do tipo<ph id="ph1">`Short`</ph></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrArrays#18<ept id="p2">](../../../../visual-basic/programming-guide/language-features/arrays/codesnippet/VisualBasic/how-to-initialize-an-array-variable_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrArrays n º&amp;18;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/arrays/codesnippet/VisualBasic/how-to-initialize-an-array-variable_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>After each statement executes, the created array contains six initialized elements that have indexes <ph id="ph1">`(0,0)`</ph>, <ph id="ph2">`(0,1)`</ph>, <ph id="ph3">`(0,2)`</ph>, <ph id="ph4">`(1,0)`</ph>, <ph id="ph5">`(1,1)`</ph>, and <ph id="ph6">`(1,2)`</ph>.</source>
          <target state="translated">Após cada instrução é executada, a matriz criada contém seis elementos inicializados com índices <ph id="ph1">`(0,0)`</ph>, <ph id="ph2">`(0,1)`</ph>, <ph id="ph3">`(0,2)`</ph>, <ph id="ph4">`(1,0)`</ph>, <ph id="ph5">`(1,1)`</ph>, e <ph id="ph6">`(1,2)`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Each array location contains the value <ph id="ph1">`10`</ph>.</source>
          <target state="translated">Cada local da matriz contém o valor <ph id="ph1">`10`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The following example iterates through a multidimensional array.</source>
          <target state="translated">O exemplo a seguir itera em uma matriz multidimensional.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In a Windows console application that is written in Visual Basic, paste the code inside the <ph id="ph1">`Sub Main()`</ph> method.</source>
          <target state="translated">Em um aplicativo de console do Windows que é escrito em Visual Basic, cole o código dentro de <ph id="ph1">`Sub Main()`</ph> método.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The last comments show the output.</source>
          <target state="translated">Os comentários do último mostram a saída.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrArrays#31<ept id="p2">](../../../../visual-basic/programming-guide/language-features/arrays/codesnippet/VisualBasic/how-to-initialize-an-array-variable_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrArrays&amp;#31;<ept id="p2">](../../../../visual-basic/programming-guide/language-features/arrays/codesnippet/VisualBasic/how-to-initialize-an-array-variable_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>To initialize a jagged array variable by using array literals</source>
          <target state="translated">Para inicializar uma variável de matriz denteada usando literais de matriz</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Nest object values inside braces (<ph id="ph1">`{}`</ph>).</source>
          <target state="translated">Aninhar valores de objeto entre chaves (<ph id="ph1">`{}`</ph>).</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Although you can also nest array literals that specify arrays of different lengths, in the case of a jagged array, make sure that that the nested array literals are enclosed in parentheses (<ph id="ph1">`()`</ph>).</source>
          <target state="translated">Embora você também pode aninhar literais de matriz que especificam matrizes de tamanhos diferentes, no caso de uma matriz denteada, certifique-se que os literais de matriz aninhados são colocados entre parênteses (<ph id="ph1">`()`</ph>).</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The parentheses force the evaluation of the nested array literals, and the resulting arrays are used as the initial values of the jagged array.</source>
          <target state="translated">Os parênteses forçam a avaliação dos literais de matriz aninhada e os conjuntos resultantes são usados como os valores iniciais da matriz denteada.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The following code example shows two examples of jagged array initialization.</source>
          <target state="translated">O exemplo de código a seguir mostra dois exemplos de inicialização de matriz denteada.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrArrays#19<ept id="p2">](../../../../visual-basic/programming-guide/language-features/arrays/codesnippet/VisualBasic/how-to-initialize-an-array-variable_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>19 VbVbalrArrays<ept id="p2">](../../../../visual-basic/programming-guide/language-features/arrays/codesnippet/VisualBasic/how-to-initialize-an-array-variable_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The following example iterates through a jagged array.</source>
          <target state="translated">O exemplo a seguir itera em uma matriz denteada.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>In a Windows console application that is written in Visual Basic, paste the code inside the <ph id="ph1">`Sub Main()`</ph> method.</source>
          <target state="translated">Em um aplicativo de console do Windows que é escrito em Visual Basic, cole o código dentro de <ph id="ph1">`Sub Main()`</ph> método.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The last comments in the code show the output.</source>
          <target state="translated">Os último comentários no código mostram a saída.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrArrays#32<ept id="p2">](../../../../visual-basic/programming-guide/language-features/arrays/codesnippet/VisualBasic/how-to-initialize-an-array-variable_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>32 VbVbalrArrays<ept id="p2">](../../../../visual-basic/programming-guide/language-features/arrays/codesnippet/VisualBasic/how-to-initialize-an-array-variable_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Arrays<ept id="p1">](../../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Matrizes<ept id="p1">](../../../../visual-basic/programming-guide/language-features/arrays/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Troubleshooting Arrays<ept id="p1">](../../../../visual-basic/programming-guide/language-features/arrays/troubleshooting-arrays.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Solução de problemas de matrizes<ept id="p1">](../../../../visual-basic/programming-guide/language-features/arrays/troubleshooting-arrays.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>