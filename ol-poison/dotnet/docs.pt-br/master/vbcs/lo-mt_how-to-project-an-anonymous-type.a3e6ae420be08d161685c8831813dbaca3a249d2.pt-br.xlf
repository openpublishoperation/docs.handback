<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a9edd260e9bc36449445ee835648573c7bc9c229</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\how-to-project-an-anonymous-type.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4fba46278ece7c104673917e8be37c0656794bdf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7a28b1e766f75a6f207cdbcca1475e56a6fbf17</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_how-to-project-an-anonymous-type.a3e6ae420be08d161685c8831813dbaca3a249d2.pt-br is different with handoff file name: how-to-project-an-anonymous-type.a3e6ae420be08d161685c8831813dbaca3a249d2.pt-br.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>How to: Project an Anonymous Type (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Como: projeto de um tipo anônimo (Visual Basic) | Documentos do Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>How to: Project an Anonymous Type (Visual Basic)</source>
          <target state="translated">Como: projeto de um tipo anônimo (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>In some cases you might want to project a query to a new type, even though you know you will only use this type for a short while.</source>
          <target state="translated">Em alguns casos você pode querer projetar uma consulta a um novo tipo, mesmo que você soubesse que você usará apenas este tipo para um curto quando.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>It is a lot of extra work to create a new type just to use in the projection.</source>
          <target state="translated">É muito trabalho adicional para criar apenas um novo tipo para usar na projeção.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>A more efficient approach in this case is to project to an anonymous type.</source>
          <target state="translated">Uma abordagem mais eficiente nesse caso é projeto para um tipo anônimo.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Anonymous types allow you to define a class, then declare and initialize an object of that class, without giving the class a name.</source>
          <target state="translated">Tipos anônimos permitem que você defina uma classe, então declare e inicialize um objeto de aquela classe, sem dar um nome para a classe.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Anonymous types are the C# implementation of the mathematical concept of a <bpt id="p1">*</bpt>tuple<ept id="p1">*</ept>.</source>
          <target state="translated">Tipos anônimos são a implementação do c# do conceito matemático de um <bpt id="p1">*</bpt>tupla<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The mathematical term tuple originated from the sequence single, double, triple, quadruple, quintuple, n-tuple.</source>
          <target state="translated">O tuple o termo matemático proveniente da sequência única, double, triplo, quádruplo, quintuple, n- tuple.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It refers to a finite sequence of objects, each of a specific type.</source>
          <target state="translated">Refere-se a uma sequência finito rotuladas de objetos, cada um de um tipo específico.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Sometimes this is called a list of name/value pairs.</source>
          <target state="translated">Isso é às vezes chamado uma lista de pares nome/valor.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For example, the contents of an address in the <bpt id="p1">[</bpt>Sample XML File: Typical Purchase Order (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-linq-to-xml.md)</ept> XML document could be expressed as follows:</source>
          <target state="translated">Por exemplo, o conteúdo de um endereço no <bpt id="p1">[</bpt>arquivo XML de exemplo: ordem de compra típica (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-linq-to-xml.md)</ept> documento XML pode ser expressa da seguinte maneira:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you create an instance of an anonymous type, it is convenient to think of it as creating a tuple of order n.</source>
          <target state="translated">Quando você cria uma instância de um tipo anônimo, é conveniente pensar nele como criar um tuple de Em ordem.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you write a query that creates a tuple in the <ph id="ph1">`Select`</ph> clause, the query returns an <ph id="ph2">`IEnumerable`</ph> of the tuple.</source>
          <target state="translated">Se você escrever uma consulta que cria um tuple na cláusula <ph id="ph1">`Select`</ph> , a consulta retorna <ph id="ph2">`IEnumerable`</ph> de tuple.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Exemplo</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In this example, the <ph id="ph1">`Select`</ph> clause projects an anonymous type.</source>
          <target state="translated">Nesse exemplo, a cláusula de <ph id="ph1">`Select`</ph> projetos de um tipo anônimo.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The example then uses <ph id="ph1">`Dim`</ph> to create the <ph id="ph2">`IEnumerable`</ph> object.</source>
          <target state="translated">O exemplo usa em <ph id="ph1">`Dim`</ph> para criar o objeto de <ph id="ph2">`IEnumerable`</ph> .</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Within the <ph id="ph1">`For Each`</ph> loop, the iteration variable becomes an instance of the anonymous type created in the query expression.</source>
          <target state="translated">Dentro do loop de <ph id="ph1">`For Each`</ph> , a variável de iteração torna-se em uma instância do tipo anônimo criado na expressão de consulta.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This example uses the following XML document: <bpt id="p1">[</bpt>Sample XML File: Customers and Orders (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-customers-and-orders-linq-to-xml.md)</ept>.</source>
          <target state="translated">Este exemplo usa o seguinte documento XML: <bpt id="p1">[</bpt>arquivo XML de exemplo: clientes e pedidos (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/sample-xml-file-customers-and-orders-linq-to-xml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This code produces the following output:</source>
          <target state="translated">Esse código gera a seguinte saída:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Projections and Transformations (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/projections-and-transformations-linq-to-xml.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Projeções e transformações (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/projections-and-transformations-linq-to-xml.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>