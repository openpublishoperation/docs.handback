<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b026718bd398d747dc30b161c2250a06e2ce0500</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\operators\if-operator.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">14e0a8413ab4d4135359f01e2ed18967624e39be</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f4ac826e33dc2098ea7b035c4bed64b917498c0</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_if-operator.01f20f05d5793a51a8d05662fb96e878243b0b1c.pt-br is different with handoff file name: if-operator.01f20f05d5793a51a8d05662fb96e878243b0b1c.pt-br.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>If Operator (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Se o operador (Visual Basic) | Documentos do Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>If Operator (Visual Basic)</source>
          <target state="translated">Operador If (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Uses short-circuit evaluation to conditionally return one of two values.</source>
          <target state="translated">Usos de curto-circuito avaliação para retornar um de dois valores condicionalmente.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`If`</ph> operator can be called with three arguments or with two arguments.</source>
          <target state="translated">O <ph id="ph1">`If`</ph> operador pode ser chamado com três argumentos ou com dois argumentos.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Sintaxe</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If Operator Called with Three Arguments</source>
          <target state="translated">Se o operador chamado com três argumentos</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When <ph id="ph1">`If`</ph> is called by using three arguments, the first argument must evaluate to a value that can be cast as a <ph id="ph2">`Boolean`</ph>.</source>
          <target state="translated">Quando <ph id="ph1">`If`</ph> é chamado usando três argumentos, o primeiro argumento deve ser avaliada como um valor que pode ser convertido como um <ph id="ph2">`Boolean`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>That <ph id="ph1">`Boolean`</ph> value will determine which of the other two arguments is evaluated and returned.</source>
          <target state="translated">Que <ph id="ph1">`Boolean`</ph> valor determinará qual dos outros dois argumentos é avaliado e retornado.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The following list applies only when the <ph id="ph1">`If`</ph> operator is called by using three arguments.</source>
          <target state="translated">A lista a seguir se aplica somente quando o <ph id="ph1">`If`</ph> é chamado de operador usando três argumentos.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">Partes</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="translated">Termo</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">Definição</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Boolean`</ph>.</source>
          <target state="translated"><ph id="ph1">`Boolean`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Determines which of the other arguments to evaluate and return.</source>
          <target state="translated">Determina qual dos outros argumentos para avaliar e retornar.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Object`</ph>.</source>
          <target state="translated"><ph id="ph1">`Object`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Evaluated and returned if <ph id="ph1">`argument1`</ph> evaluates to <ph id="ph2">`True`</ph>.</source>
          <target state="translated">Avaliado e retornado se <ph id="ph1">`argument1`</ph> é avaliada como <ph id="ph2">`True`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Object`</ph>.</source>
          <target state="translated"><ph id="ph1">`Object`</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Evaluated and returned if <ph id="ph1">`argument1`</ph> evaluates to <ph id="ph2">`False`</ph> or if <ph id="ph3">`argument1`</ph> is a <bpt id="p1">[</bpt>Nullable<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/nullable-value-types.md)</ept><ph id="ph4">`Boolean`</ph> variable that evaluates to <bpt id="p2">[</bpt>Nothing<ept id="p2">](../../../visual-basic/language-reference/nothing.md)</ept>.</source>
          <target state="translated">Avaliado e retornado se <ph id="ph1">`argument1`</ph> é avaliada como <ph id="ph2">`False`</ph> ou se <ph id="ph3">`argument1`</ph> é um <bpt id="p1">[</bpt>Nullable<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/nullable-value-types.md)</ept> <ph id="ph4">`Boolean`</ph> variável que é avaliada como <bpt id="p2">[</bpt>nada<ept id="p2">](../../../visual-basic/language-reference/nothing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`If`</ph> operator that is called with three arguments works like an <ph id="ph2">`IIf`</ph> function except that it uses short-circuit evaluation.</source>
          <target state="translated">Um <ph id="ph1">`If`</ph> operador que é chamado com três argumentos funciona como um <ph id="ph2">`IIf`</ph> função exceto que ele usa curto-circuito avaliação.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`IIf`</ph> function always evaluates all three of its arguments, whereas an <ph id="ph2">`If`</ph> operator that has three arguments evaluates only two of them.</source>
          <target state="translated">Um <ph id="ph1">`IIf`</ph> função sempre avalia todos os três argumentos, enquanto um <ph id="ph2">`If`</ph> operador que possui três argumentos é avaliada somente dois deles.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">`If`</ph> argument is evaluated and the result is cast as a <ph id="ph2">`Boolean`</ph> value, <ph id="ph3">`True`</ph> or <ph id="ph4">`False`</ph>.</source>
          <target state="translated">A primeira <ph id="ph1">`If`</ph> argumento é avaliado e o resultado é convertido como um <ph id="ph2">`Boolean`</ph> valor, <ph id="ph3">`True`</ph> ou <ph id="ph4">`False`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>If the value is <ph id="ph1">`True`</ph>, <ph id="ph2">`argument2`</ph> is evaluated and its value is returned, but <ph id="ph3">`argument3`</ph> is not evaluated.</source>
          <target state="translated">Se o valor for <ph id="ph1">`True`</ph>, <ph id="ph2">`argument2`</ph> é avaliada e seu valor é retornado, mas <ph id="ph3">`argument3`</ph> não será avaliado.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If the value of the <ph id="ph1">`Boolean`</ph> expression is <ph id="ph2">`False`</ph>, <ph id="ph3">`argument3`</ph> is evaluated and its value is returned, but <ph id="ph4">`argument2`</ph> is not evaluated.</source>
          <target state="translated">Se o valor da <ph id="ph1">`Boolean`</ph> expressão é <ph id="ph2">`False`</ph>, <ph id="ph3">`argument3`</ph> é avaliada e seu valor é retornado, mas <ph id="ph4">`argument2`</ph> não será avaliado.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The following examples illustrate the use of <ph id="ph1">`If`</ph> when three arguments are used:</source>
          <target state="translated">Os exemplos a seguir ilustram o uso de <ph id="ph1">`If`</ph> quando são usados três argumentos:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOperators#100<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/if-operator_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOperators&amp;#100;<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/if-operator_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The following example illustrates the value of short-circuit evaluation.</source>
          <target state="translated">O exemplo a seguir ilustra o valor de avaliação de curto-circuito.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The example shows two attempts to divide variable <ph id="ph1">`number`</ph> by variable <ph id="ph2">`divisor`</ph> except when <ph id="ph3">`divisor`</ph> is zero.</source>
          <target state="translated">O exemplo mostra duas tentativas de dividir variável <ph id="ph1">`number`</ph> pela variável <ph id="ph2">`divisor`</ph> exceto quando <ph id="ph3">`divisor`</ph> é zero.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>In that case, a 0 should be returned, and no attempt should be made to perform the division because a run-time error would result.</source>
          <target state="translated">Nesse caso, um 0 deve ser retornado, e deve ser feita nenhuma tentativa de executar a divisão porque resultaria um erro de tempo de execução.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Because the <ph id="ph1">`If`</ph> expression uses short-circuit evaluation, it evaluates either the second or the third argument, depending on the value of the first argument.</source>
          <target state="translated">Porque o <ph id="ph1">`If`</ph> avaliação de curto-circuito do uso de expressões, ele avalia o segundo ou terceiro argumento, dependendo do valor do primeiro argumento.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If the first argument is true, the divisor is not zero and it is safe to evaluate the second argument and perform the division.</source>
          <target state="translated">Se o primeiro argumento for true, o divisor não for zero e é seguro avaliar o segundo argumento e realizar a divisão.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If the first argument is false, only the third argument is evaluated and a 0 is returned.</source>
          <target state="translated">Se o primeiro argumento for false, somente o terceiro argumento é avaliado e 0 é retornado.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Therefore, when the divisor is 0, no attempt is made to perform the division and no error results.</source>
          <target state="translated">Portanto, quando o divisor for 0, nenhuma tentativa é feita para realizar a divisão e nenhum resultado de erro.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>However, because <ph id="ph1">`IIf`</ph> does not use short-circuit evaluation, the second argument is evaluated even when the first argument is false.</source>
          <target state="translated">No entanto, porque <ph id="ph1">`IIf`</ph> não usa avaliação de curto-circuito, o segundo argumento é avaliado, mesmo quando o primeiro argumento é false.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>This causes a run-time divide-by-zero error.</source>
          <target state="translated">Isso causará um erro de divisão por zero tempo de execução.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOperators#101<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/if-operator_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOperators&amp;#101;<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/if-operator_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If Operator Called with Two Arguments</source>
          <target state="translated">Se o operador chamado com dois argumentos</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The first argument to <ph id="ph1">`If`</ph> can be omitted.</source>
          <target state="translated">O primeiro argumento para <ph id="ph1">`If`</ph> pode ser omitido.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>This enables the operator to be called by using only two arguments.</source>
          <target state="translated">Isso permite que o operador a ser chamado usando apenas dois argumentos.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The following list applies only when the <ph id="ph1">`If`</ph> operator is called with two arguments.</source>
          <target state="translated">A lista a seguir se aplica somente quando o <ph id="ph1">`If`</ph> operador é chamado com dois argumentos.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">Partes</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Term</source>
          <target state="translated">Termo</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Definition</source>
          <target state="translated">Definição</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Object`</ph>.</source>
          <target state="translated"><ph id="ph1">`Object`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Must be a reference or nullable type.</source>
          <target state="translated">Deve ser uma referência ou um tipo anulável.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Evaluated and returned when it evaluates to anything other than <ph id="ph1">`Nothing`</ph>.</source>
          <target state="translated">Avaliado e retornado quando ele for avaliado como algo diferente de <ph id="ph1">`Nothing`</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">Necessário.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Object`</ph>.</source>
          <target state="translated"><ph id="ph1">`Object`</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Evaluated and returned if <ph id="ph1">`argument2`</ph> evaluates to <ph id="ph2">`Nothing`</ph>.</source>
          <target state="translated">Avaliado e retornado se <ph id="ph1">`argument2`</ph> é avaliada como <ph id="ph2">`Nothing`</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>When the <ph id="ph1">`Boolean`</ph> argument is omitted, the first argument must be a reference or nullable type.</source>
          <target state="translated">Quando o <ph id="ph1">`Boolean`</ph> argumento for omitido, o primeiro argumento deve ser uma referência ou um tipo anulável.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If the first argument evaluates to <ph id="ph1">`Nothing`</ph>, the value of the second argument is returned.</source>
          <target state="translated">Se o primeiro argumento for avaliado como <ph id="ph1">`Nothing`</ph>, o valor do segundo argumento é retornado.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>In all other cases, the value of the first argument is returned.</source>
          <target state="translated">Em outros casos, o valor do primeiro argumento será retornado.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following example illustrates how this evaluation works.</source>
          <target state="translated">O exemplo a seguir ilustra como funciona essa avaliação.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOperators#102<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/if-operator_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrOperators&amp;#102;<ept id="p2">](../../../visual-basic/language-reference/operators/codesnippet/VisualBasic/if-operator_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>&lt;xref:Microsoft.VisualBasic.Interaction.IIf%2A&gt;</source>
          <target state="translated">&lt;xref:Microsoft.VisualBasic.Interaction.IIf%2A&gt;&lt;/xref:Microsoft.VisualBasic.Interaction.IIf%2A&gt;</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Nullable Value Types<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/nullable-value-types.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Tipos de valor anulável<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/nullable-value-types.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Nothing<ept id="p1">](../../../visual-basic/language-reference/nothing.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Nothing<ept id="p1">](../../../visual-basic/language-reference/nothing.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>