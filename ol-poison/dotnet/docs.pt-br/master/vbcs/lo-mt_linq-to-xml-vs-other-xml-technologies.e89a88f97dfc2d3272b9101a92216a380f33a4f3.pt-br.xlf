<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0254788fb9efa018e735a57990144c6b176d30d6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\linq-to-xml-vs-other-xml-technologies.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f79b3f5dc88ac7a7c1018b309e2c4bd1a29ea91</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">01e69010dcf9e7fb7c719391c4aaf86203e7ae6c</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_linq-to-xml-vs-other-xml-technologies.e89a88f97dfc2d3272b9101a92216a380f33a4f3.pt-br is different with handoff file name: linq-to-xml-vs-other-xml-technologies.e89a88f97dfc2d3272b9101a92216a380f33a4f3.pt-br.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>LINQ to XML vs. Other XML Technologies2 | Microsoft Docs</source>
          <target state="translated">LINQ to XML e Outros Technologies2 XML | Documentos do Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>LINQ to XML vs. Other XML Technologies</source>
          <target state="translated">LINQ to XML e Outras tecnologias XML</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic compares <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> to the following XML technologies: &lt;xref:System.Xml.XmlReader&gt;, XSLT, MSXML, and XmlLite.</source>
          <target state="translated">Este tópico compara <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> para as seguintes tecnologias XML: &lt;xref:System.Xml.XmlReader&gt;, XSLT, MSXML e XmlLite.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This information can help you decide which technology to use.</source>
          <target state="translated">Estas informações podem ajudá-lo a decidir qual tecnologia usar.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For a comparison of <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> to the Document Object Model (DOM), see <bpt id="p1">[</bpt>LINQ to XML vs. DOM (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-vs-dom.md)</ept>.</source>
          <target state="translated">Para obter uma comparação de <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> para o DOM Document Object Model (), consulte <bpt id="p1">[</bpt>LINQ to XML e. DOM (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-vs-dom.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>LINQ to XML vs. XmlReader</source>
          <target state="translated">LINQ to XML e XmlReader</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.XmlReader&gt; is a fast, forward-only, non-caching parser.</source>
          <target state="translated">&lt;xref:System.Xml.XmlReader&gt;é um analisador rápido, somente de encaminhamento e sem cache.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> is implemented on top of &lt;xref:System.Xml.XmlReader&gt;, and they are tightly integrated.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>é implementado na parte superior do &lt;xref:System.Xml.XmlReader&gt;, e eles são totalmente integrados.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>However, you can also use &lt;xref:System.Xml.XmlReader&gt; by itself.</source>
          <target state="translated">No entanto, você também pode usar &lt;xref:System.Xml.XmlReader&gt;por si só.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For example, suppose you are building a Web service that will parse hundreds of XML documents per second, and the documents have the same structure, meaning that you only have to write one implementation of the code to parse the XML.</source>
          <target state="translated">Por exemplo, suponha que você esteja criando um serviço Web que analisará centenas de documentos XML por segundo e que os documentos tenham a mesma estrutura, o que significa que você só precisará criar uma única implementação do código para analisar o XML.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In this case, you would probably want to use &lt;xref:System.Xml.XmlReader&gt; by itself.</source>
          <target state="translated">Nesse caso, você provavelmente desejaria usar &lt;xref:System.Xml.XmlReader&gt;por si só.&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>In contrast, if you are building a system that parses many smaller XML documents, and each one is different, you would want to take advantage of the productivity improvements that <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> provides.</source>
          <target state="translated">Por outro lado, se você estiver criando um sistema que analisa vários documentos XML menores, e cada um deles é diferente, convém aproveitar as melhorias de produtividade que <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> fornece.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>LINQ to XML vs. XSLT</source>
          <target state="translated">LINQ to XML e XSLT</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Both <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> and XSLT provide extensive XML document transformation capabilities.</source>
          <target state="translated">Ambos <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> e XSLT fornecem recursos abrangentes de transformação de documento XML.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>XSLT is a rule-based, declarative approach.</source>
          <target state="translated">A linguagem XSLT é uma abordagem declarativa baseada em regras.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Advanced XSLT programmers write XSLT in a functional programming style that emphasizes a stateless approach.</source>
          <target state="translated">Programadores avançados de XSLT criam XSLT em um estilo funcional de programação que enfatiza uma abordagem sem estado.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Transformations can be written using pure functions that are implemented without side effects.</source>
          <target state="translated">As transformações podem ser criadas com o uso de funções puras que são implementadas sem efeitos colaterais.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This rule-based or functional approach is unfamiliar to many developers, and can be difficult and time-consuming to learn.</source>
          <target state="translated">Essa abordagem funcional baseada em regras é desconhecida para muitos desenvolvedores e sua compreensão pode ser difícil e demorada.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>XSLT can be a very productive system that yields high-performance applications.</source>
          <target state="translated">A linguagem XSLT pode ser um sistema muito produtivo que gera aplicativos de alto desempenho.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, some big Web companies use XSLT as a way to generate HTML from XML that has been pulled from a variety of data stores.</source>
          <target state="translated">Por exemplo, algumas grandes empresas da Web usam XSLT para gerar HTML de XML extraído de uma variedade de repositórios de dados.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The managed XSLT engine compiles XSLT to CLR code, and performs even better in some scenarios than the native XSLT engine.</source>
          <target state="translated">O mecanismo XSLT gerenciado compila XSLT em código CLR e é executado ainda melhor em alguns cenários do que o mecanismo XSLT nativo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>However, XSLT does not take advantage of the C# and Visual Basic knowledge that many developers have.</source>
          <target state="translated">No entanto, XSLT não aproveita as vantagens dos conhecimentos de C# e de Visual Basic que muitos desenvolvedores possuem.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>It requires developers to write code in a different and complex programming language.</source>
          <target state="translated">Ela requer que os desenvolvedores criem código em uma linguagem de programação diferente e complexa.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Using two non-integrated development systems such as C# (or Visual Basic) and XSLT results in software systems that are more difficult to develop and maintain.</source>
          <target state="translated">O uso de dois sistemas de desenvolvimento não integrados, como C# (ou Visual Basic) e XSLT, resulta em sistemas de software que são mais difíceis de desenvolver e manter.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>After you have mastered <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> query expressions, <ph id="ph2">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> transformations are a powerful technology that is easy to use.</source>
          <target state="translated">Após você dominar <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> expressões de consulta <ph id="ph2">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> transformações são uma tecnologia poderosa que é fácil de usar.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Basically, you form your XML document by using functional construction, pulling in data from various sources, constructing &lt;xref:System.Xml.Linq.XElement&gt; objects dynamically, and assembling the whole into a new XML tree.</source>
          <target state="translated">Basicamente, você forma seu documento XML usando construção funcional, extraindo dados de várias fontes, construindo &lt;xref:System.Xml.Linq.XElement&gt;objetos dinamicamente e montando o todo em uma nova árvore XML.&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The transformation can generate a completely new document.</source>
          <target state="translated">A transformação pode gerar um documento completamente novo.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Constructing transformations in <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> is relatively easy and intuitive, and the resulting code is readable.</source>
          <target state="translated">Construir transformações no <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> é relativamente fácil e intuitivo, e o código resultante é legível.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>This reduces development and maintenance costs.</source>
          <target state="translated">Isso reduz custos de desenvolvimento e de manutenção.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> is not intended to replace XSLT.</source>
          <target state="translated">O <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> não pretende substituir a linguagem XSLT.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>XSLT is still the tool of choice for complicated and document-centric XML transformations, especially if the structure of the document is not well defined.</source>
          <target state="translated">A linguagem XSLT ainda é a melhor ferramenta para transformações XML complicadas e centradas em documentos, especialmente se a estrutura do documento não estiver bem-definida.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>XSLT has the advantage of being a World Wide Web Consortium (W3C) standard.</source>
          <target state="translated">A linguagem XSLT tem a vantagem de ser um padrão W3C (World Wide Web Consortium).</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If you have a requirement that you use only technologies that are standards, XSLT might be more appropriate.</source>
          <target state="translated">Se você tiver um requisito de usar apenas tecnologias que sejam padrões, a linguagem XSLT pode ser mais apropriada.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>XSLT is XML, and therefore can be programmatically manipulated.</source>
          <target state="translated">XSLT é XML; portanto, ela pode ser manipulada programaticamente.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>LINQ to XML vs. MSXML</source>
          <target state="translated">LINQ to XML e MSXML</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>MSXML is the COM-based technology for processing XML that is included with Microsoft Windows.</source>
          <target state="translated">MSXML é a tecnologia baseada em COM para processar XML que vem incluída no Microsoft Windows.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>MSXML provides a native implementation of the DOM with support for XPath and XSLT.</source>
          <target state="translated">A tecnologia MSXML fornece uma implementação nativa do DOM com suporte para XPath e XSLT.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>It also contains the SAX2 non-caching, event-based parser.</source>
          <target state="translated">Ela também contém o analisador SAX2 baseado em eventos e não armazenado em cache.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>MSXML performs well, is secure by default in most scenarios, and can be accessed in Internet Explorer for performing client-side XML processing in AJAX-style applications.</source>
          <target state="translated">A MSXML tem bom desempenho, é segura por padrão na maioria dos cenários e pode ser acessada no Internet Explorer para executar processamento XML do lado do cliente em aplicativos em estilo AJAX.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>MSXML can be used from any programming language that supports COM, including C++, JavaScript, and <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> 6.0.</source>
          <target state="translated">A MSXML pode ser usada de qualquer linguagem de programação que dê suporte a COM, incluindo C++, JavaScript e <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> 6.0.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>MSXML is not recommended for use in managed code based on the common language runtime (CLR).</source>
          <target state="translated">A MSXML não é recomendada para uso em código gerenciado baseado em CLR (Common Language Runtime).</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>LINQ to XML vs. XmlLite</source>
          <target state="translated">LINQ to XML e XmlLite</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>XmlLite is a non-caching, forward only, pull parser.</source>
          <target state="translated">XmlLite é um analisador de pull, somente encaminhamento e não armazenado em cache.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Developers primarily use XmlLite with C++.</source>
          <target state="translated">Os desenvolvedores usam XmlLite principalmente com C++.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>It is not recommended for developers to use XmlLite with managed code.</source>
          <target state="translated">Não é recomendado que os desenvolvedores usem XmlLite com código gerenciado.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The main advantage of XmlLite is that it is a lightweight, fast XML parser that is secure in most scenarios.</source>
          <target state="translated">A principal vantagem de XmlLite é ser um analisador XML leve, rápido e seguro na maioria dos cenários.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Its threat surface area is very small.</source>
          <target state="translated">Sua área de superfície de ameaças é muito pequena.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If you have to parse untrusted documents and you want to protect against attacks such as denial of service or exposure of data, XmlLite might be a good option.</source>
          <target state="translated">Se você precisar analisar documentos não confiáveis e quiser protegê-los contra ataques de negação de serviço ou da exibição de dados, XmlLite pode ser uma boa opção.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>XmlLite is not integrated with <ph id="ph1">[!INCLUDE[vbteclinqext](../../../../csharp/getting-started/includes/vbteclinqext_md.md)]</ph>.</source>
          <target state="translated">XmlLite não está integrado com <ph id="ph1">[!INCLUDE[vbteclinqext](../../../../csharp/getting-started/includes/vbteclinqext_md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>It does not yield the programmer productivity improvements that are the motivating force behind <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph>.</source>
          <target state="translated">Não produz o programador melhorias de produtividade que são a força motriz associada <ph id="ph1">[!INCLUDE[vbteclinq](../../../../csharp/includes/vbteclinq_md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Getting Started (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/getting-started-linq-to-xml.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Introdução (LINQ to XML)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/getting-started-linq-to-xml.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>