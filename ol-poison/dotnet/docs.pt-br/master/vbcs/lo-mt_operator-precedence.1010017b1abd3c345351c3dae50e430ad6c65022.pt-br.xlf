<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="pt-br">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6532fc0c26db3b736c863be075571570a3d25eef</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\operators\operator-precedence.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d9ae8174a0e577d360966221c3c6b515fecdd523</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">900114c1e2a1d4fe98ae344a839b7daa07940dd7</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_operator-precedence.1010017b1abd3c345351c3dae50e430ad6c65022.pt-br is different with handoff file name: operator-precedence.1010017b1abd3c345351c3dae50e430ad6c65022.pt-br.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Operator Precedence in Visual Basic | Microsoft Docs</source>
          <target state="translated">Precedência do operador no Visual Basic | Documentos do Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Operator Precedence in Visual Basic</source>
          <target state="translated">Precedência do operador no Visual Basic</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When several operations occur in an expression, each part is evaluated and resolved in a predetermined order called <bpt id="p1">*</bpt>operator precedence<ept id="p1">*</ept>.</source>
          <target state="translated">Quando várias operações ocorrem em uma expressão, cada parte é avaliado e resolvido em uma ordem predeterminada chamada <bpt id="p1">*</bpt>precedência do operador<ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Precedence Rules</source>
          <target state="translated">Regras de precedência</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When expressions contain operators from more than one category, they are evaluated according to the following rules:</source>
          <target state="translated">Quando as expressões contêm operadores de mais de uma categoria, eles são avaliados de acordo com as regras a seguir:</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The arithmetic and concatenation operators have the order of precedence described in the following section, and all have greater precedence than the comparison, logical, and bitwise operators.</source>
          <target state="translated">Os operadores aritméticos e concatenação têm a ordem de precedência descrita na seção a seguir, e todas têm precedência maior do que a comparação, lógicos e operadores bit a bit.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>All comparison operators have equal precedence, and all have greater precedence than the logical and bitwise operators, but lower precedence than the arithmetic and concatenation operators.</source>
          <target state="translated">Todos os operadores de comparação têm a mesma precedência e todas têm precedência maior do que os operadores lógicos e bit a bit, mas menor precedência que os operadores aritméticos e concatenação.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The logical and bitwise operators have the order of precedence described in the following section, and all have lower precedence than the arithmetic, concatenation, and comparison operators.</source>
          <target state="translated">Os operadores lógicos e bit a bit que a ordem de precedência descrita na seção a seguir, e todas têm precedência menor que a aritmética, concatenação e operadores de comparação.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Operators with equal precedence are evaluated left to right in the order in which they appear in the expression.</source>
          <target state="translated">Operadores com a mesma precedência são avaliados da esquerda para a direita na ordem em que aparecem na expressão.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Precedence Order</source>
          <target state="translated">Ordem de precedência</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Operators are evaluated in the following order of precedence:</source>
          <target state="translated">Operadores são avaliados na seguinte ordem de precedência:</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Await Operator</source>
          <target state="translated">Operador Await</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Await</source>
          <target state="translated">À espera</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Arithmetic and Concatenation Operators</source>
          <target state="translated">Aritmética e operadores de concatenação</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Exponentiation (<ph id="ph1">`^`</ph>)</source>
          <target state="translated">Exponenciação (<ph id="ph1">`^`</ph>)</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Unary identity and negation (<ph id="ph1">`+`</ph>, <ph id="ph2">`–`</ph>)</source>
          <target state="translated">Unários identidade e negação (<ph id="ph1">`+`</ph>, <ph id="ph2">`–`</ph>)</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Multiplication and floating-point division (<ph id="ph1">`*`</ph>, <ph id="ph2">`/`</ph>)</source>
          <target state="translated">Multiplicação e divisão de ponto flutuante (<ph id="ph1">`*`</ph>, <ph id="ph2">`/`</ph>)</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Integer division (<ph id="ph1">`\`</ph>)</source>
          <target state="translated">Divisão de inteiros (<ph id="ph1">`\`</ph>)</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Modulus arithmetic (<ph id="ph1">`Mod`</ph>)</source>
          <target state="translated">Módulo aritmético (<ph id="ph1">`Mod`</ph>)</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Addition and subtraction (<ph id="ph1">`+`</ph>, <ph id="ph2">`–`</ph>)</source>
          <target state="translated">Adição e subtração (<ph id="ph1">`+`</ph>, <ph id="ph2">`–`</ph>)</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>String concatenation (<ph id="ph1">`&amp;`</ph>)</source>
          <target state="translated">Concatenação de cadeia de caracteres (<ph id="ph1">`&amp;`</ph>)</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Arithmetic bit shift (<ph id="ph1">`&lt;&lt;`</ph>, <ph id="ph2">`&gt;&gt;`</ph>)</source>
          <target state="translated">Aritmética bit shift (<ph id="ph1">`&lt;&lt;`</ph>, <ph id="ph2">`&gt;&gt;`</ph>)</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Comparison Operators</source>
          <target state="translated">Operadores de comparação</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>All comparison operators (<ph id="ph1">`=`</ph>, <ph id="ph2">`&lt;&gt;`</ph>, <ph id="ph3">`&lt;`</ph>, <ph id="ph4">`&lt;=`</ph>, <ph id="ph5">`&gt;`</ph>, <ph id="ph6">`&gt;=`</ph>, <ph id="ph7">`Is`</ph>, <ph id="ph8">`IsNot`</ph>, <ph id="ph9">`Like`</ph>, <ph id="ph10">`TypeOf`</ph>...<ph id="ph11">`Is`</ph>)</source>
          <target state="translated">All comparison operators (<ph id="ph1">`=`</ph>, <ph id="ph2">`&lt;&gt;`</ph>, <ph id="ph3">`&lt;`</ph>, <ph id="ph4">`&lt;=`</ph>, <ph id="ph5">`&gt;`</ph>, <ph id="ph6">`&gt;=`</ph>, <ph id="ph7">`Is`</ph>, <ph id="ph8">`IsNot`</ph>, <ph id="ph9">`Like`</ph>, <ph id="ph10">`TypeOf`</ph>... <ph id="ph11">`Is`</ph>)</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Logical and Bitwise Operators</source>
          <target state="translated">Operadores lógicos e bit a bit</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Negation (<ph id="ph1">`Not`</ph>)</source>
          <target state="translated">Negação (<ph id="ph1">`Not`</ph>)</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Conjunction (<ph id="ph1">`And`</ph>, <ph id="ph2">`AndAlso`</ph>)</source>
          <target state="translated">Conjunto (<ph id="ph1">`And`</ph>, <ph id="ph2">`AndAlso`</ph>)</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Inclusive disjunction (<ph id="ph1">`Or`</ph>, <ph id="ph2">`OrElse`</ph>)</source>
          <target state="translated">Disjunção (<ph id="ph1">`Or`</ph>, <ph id="ph2">`OrElse`</ph>)</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Exclusive disjunction (<ph id="ph1">`Xor`</ph>)</source>
          <target state="translated">Disjunção (<ph id="ph1">`Xor`</ph>)</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Comments</source>
          <target state="translated">Comentários</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`=`</ph> operator is only the equality comparison operator, not the assignment operator.</source>
          <target state="translated">O <ph id="ph1">`=`</ph> operador é apenas o igualdade operador de comparação, não o operador de atribuição.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The string concatenation operator (<ph id="ph1">`&amp;`</ph>) is not an arithmetic operator, but in precedence it is grouped with the arithmetic operators.</source>
          <target state="translated">O operador de concatenação de cadeia de caracteres (<ph id="ph1">`&amp;`</ph>) não é um operador aritmético, mas na prioridade é agrupado com os operadores aritméticos.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Is`</ph> and <ph id="ph2">`IsNot`</ph> operators are object reference comparison operators.</source>
          <target state="translated">O <ph id="ph1">`Is`</ph> e <ph id="ph2">`IsNot`</ph> operadores são operadores de comparação de referência de objeto.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>They do not compare the values of two objects; they check only to determine whether two object variables refer to the same object instance.</source>
          <target state="translated">Eles não são os valores dos dois objetos. eles verifique apenas para determinar se duas variáveis de objeto se referem à mesma instância de objeto.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Associativity</source>
          <target state="translated">Associatividade</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When operators of equal precedence appear together in an expression, for example multiplication and division, the compiler evaluates each operation as it encounters it from left to right.</source>
          <target state="translated">Quando operadores de precedência igual aparecem juntos em uma expressão, por exemplo, multiplicação e divisão, o compilador avalia cada operação conforme ele encontra da esquerda para a direita.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The following example illustrates this.</source>
          <target state="translated">O exemplo a seguir ilustra essa situação.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The first expression evaluates the division 96 / 8 (which results in 12) and then the division 12 / 4, which results in three.</source>
          <target state="translated">A primeira expressão é avaliada a divisão 96 / 8 (o que resulta em 12) e, em seguida, a divisão de 12 / 4, o que resulta em três.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Because the compiler evaluates the operations for <ph id="ph1">`n1`</ph> from left to right, the evaluation is the same when that order is explicitly indicated for <ph id="ph2">`n2`</ph>.</source>
          <target state="translated">Porque o compilador avalia as operações <ph id="ph1">`n1`</ph> da esquerda para a direita, a avaliação é o mesmo quando a ordem é explicitamente indicada para <ph id="ph2">`n2`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Both <ph id="ph1">`n1`</ph> and <ph id="ph2">`n2`</ph> have a result of three.</source>
          <target state="translated">Ambos <ph id="ph1">`n1`</ph> e <ph id="ph2">`n2`</ph> tem um resultado de três.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>By contrast, <ph id="ph1">`n3`</ph> has a result of 48, because the parentheses force the compiler to evaluate 8 / 4 first.</source>
          <target state="translated">Por outro lado, <ph id="ph1">`n3`</ph> possui um resultado de 48, porque os parênteses forçam o compilador para avaliar 8 / 4 primeiro.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Because of this behavior, operators are said to be <bpt id="p1">*</bpt>left associative<ept id="p1">*</ept> in <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</source>
          <target state="translated">Devido a esse comportamento, operadores são considerados <bpt id="p1">*</bpt>permanecem associativos<ept id="p1">*</ept> em <ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Overriding Precedence and Associativity</source>
          <target state="translated">Substituição de precedência e associatividade</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>You can use parentheses to force some parts of an expression to be evaluated before others.</source>
          <target state="translated">Você pode usar parênteses para forçar algumas partes de uma expressão a ser avaliada antes de outros.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This can override both the order of precedence and the left associativity.</source>
          <target state="translated">Isso pode substituir a ordem de precedência e a associatividade à esquerda.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph> always performs operations that are enclosed in parentheses before those outside.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[vbprvb](../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>sempre executa operações que estão entre parênteses antes de fora.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>However, within parentheses, it maintains ordinary precedence and associativity, unless you use parentheses within the parentheses.</source>
          <target state="translated">No entanto, dentro dos parênteses, ele mantém comum precedência e associatividade, a menos que você use parênteses dentro dos parênteses.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The following example illustrates this.</source>
          <target state="translated">O exemplo a seguir ilustra essa situação.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">Consulte também</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>= Operator<ept id="p1">](../../../visual-basic/language-reference/operators/assignment-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>= Operador<ept id="p1">](../../../visual-basic/language-reference/operators/assignment-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Is Operator<ept id="p1">](../../../visual-basic/language-reference/operators/is-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Operador is<ept id="p1">](../../../visual-basic/language-reference/operators/is-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>IsNot Operator<ept id="p1">](../../../visual-basic/language-reference/operators/isnot-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Operador IsNot<ept id="p1">](../../../visual-basic/language-reference/operators/isnot-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Like Operator<ept id="p1">](../../../visual-basic/language-reference/operators/like-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Operador LIKE<ept id="p1">](../../../visual-basic/language-reference/operators/like-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>TypeOf Operator<ept id="p1">](../../../visual-basic/language-reference/operators/typeof-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Operador TypeOf<ept id="p1">](../../../visual-basic/language-reference/operators/typeof-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Await Operator<ept id="p1">](../../../visual-basic/language-reference/operators/await-operator.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Operador await<ept id="p1">](../../../visual-basic/language-reference/operators/await-operator.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operators Listed by Functionality<ept id="p1">](../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Operadores listados por funcionalidade<ept id="p1">](../../../visual-basic/language-reference/operators/operators-listed-by-functionality.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Operators and Expressions<ept id="p1">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/index.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Operadores e Expressões<ept id="p1">](../../../visual-basic/programming-guide/language-features/operators-and-expressions/index.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>