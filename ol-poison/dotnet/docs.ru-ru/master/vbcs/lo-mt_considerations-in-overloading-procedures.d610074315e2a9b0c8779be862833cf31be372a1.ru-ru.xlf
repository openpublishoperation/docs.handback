<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ru-ru">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aa20cf367fba157f88afd861a4799540dcdecde1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\language-features\procedures\considerations-in-overloading-procedures.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f52ec90a3aebcd6aa14f57bd27ef742c13f07a2a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">688fea8d4502cbf2b4c108da3eb234a948a3f500</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_considerations-in-overloading-procedures.d610074315e2a9b0c8779be862833cf31be372a1.ru-ru is different with handoff file name: considerations-in-overloading-procedures.d610074315e2a9b0c8779be862833cf31be372a1.ru-ru.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Considerations in Overloading Procedures (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Вопросы, связанные с перегрузкой процедур (Visual Basic) | Документы Microsoft</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Considerations in Overloading Procedures (Visual Basic)</source>
          <target state="translated">Вопросы, связанные с перегрузкой процедур (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>When you overload a procedure, you must use a different <bpt id="p1">*</bpt>signature<ept id="p1">*</ept> for each overloaded version.</source>
          <target state="translated">При перегрузке процедур необходимо использовать другой <bpt id="p1">*</bpt>подписи<ept id="p1">*</ept> для каждой из перегруженных версий.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>This usually means each version must specify a different parameter list.</source>
          <target state="translated">Это обычно означает, что каждая версия необходимо указать другой список параметров.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>For more information, see "Different Signature" in <bpt id="p1">[</bpt>Procedure Overloading<ept id="p1">](./procedure-overloading.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе «Другую подпись» в <bpt id="p1">[</bpt>перегрузка процедур<ept id="p1">](./procedure-overloading.md)</ept>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>You can overload a <ph id="ph1">`Function`</ph> procedure with a <ph id="ph2">`Sub`</ph> procedure, and vice versa, provided they have different signatures.</source>
          <target state="translated">Можно перегрузить <ph id="ph1">`Function`</ph> процедуры с <ph id="ph2">`Sub`</ph> процедура и наоборот, если они имеют разные сигнатуры.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Two overloads cannot differ only in that one has a return value and the other does not.</source>
          <target state="translated">Две перегрузки не отличаются только тем, что одна имеет возвращаемое значение, а другой — нет.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>You can overload a property the same way you overload a procedure, and with the same restrictions.</source>
          <target state="translated">Свойство можно перегрузить перегрузка процедуры, так же, как и с тем же ограничениями.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>However, you cannot overload a procedure with a property, or vice versa.</source>
          <target state="translated">Однако нельзя перегрузить процедуру со свойством или наоборот.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Alternatives to Overloaded Versions</source>
          <target state="translated">Альтернативы перегруженных версий</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>You sometimes have alternatives to overloaded versions, particularly when the presence of arguments is optional or their number is variable.</source>
          <target state="translated">Иногда существуют альтернативы перегруженных версий, особенно если наличие аргументов является необязательным или их количество может меняться.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Keep in mind that optional arguments are not necessarily supported by all languages, and parameter arrays are limited to <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</source>
          <target state="translated">Имейте в виду, что необязательные аргументы могут не поддерживаться все языки, а массивы параметров ограничены <ph id="ph1">[!INCLUDE[vbprvb](../../../../csharp/programming-guide/concepts/linq/includes/vbprvb_md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If you are writing a procedure that is likely to be called from code written in any of several different languages, overloaded versions offer the greatest flexibility.</source>
          <target state="translated">При создании процедуры, который должен вызываться из кода, написанного на любом из нескольких различных языков, перегруженные версии предоставляют наибольшую гибкость.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Overloads and Optional Arguments</source>
          <target state="translated">Перегрузки и необязательные аргументы</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When the calling code can optionally supply or omit one or more arguments, you can define multiple overloaded versions or use optional parameters.</source>
          <target state="translated">Если вызывающий код может при необходимости предоставить или пропустить один или несколько аргументов, можно определить несколько перегруженных версий или использовать дополнительные параметры.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When to Use Overloaded Versions</source>
          <target state="translated">Когда следует использовать перегруженные версии</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>You can consider defining a series of overloaded versions in the following cases:</source>
          <target state="translated">Можно определять наборы перегруженных версий в следующих случаях:</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The logic in the procedure code is significantly different depending on whether the calling code supplies an optional argument or not.</source>
          <target state="translated">Логика в коде процедуры существенно отличается в зависимости от того, является ли вызывающий код предоставляет необязательный аргумент или нет.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The procedure code cannot reliably test whether the calling code has supplied an optional argument.</source>
          <target state="translated">Код процедуры нельзя надежно проверить, является ли вызывающий код имеет указанный необязательный аргумент.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This is the case, for example, if there is no possible candidate for a default value that the calling code could not be expected to supply.</source>
          <target state="translated">Это происходит, например, если нет ни одного кандидата для значение по умолчанию, которое вызывающий код не может предоставить.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When to Use Optional Parameters</source>
          <target state="translated">Когда следует использовать дополнительные параметры</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>You might prefer one or more optional parameters in the following cases:</source>
          <target state="translated">Может потребоваться один или несколько необязательных параметров в следующих случаях:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The only required action when the calling code does not supply an optional argument is to set the parameter to a default value.</source>
          <target state="translated">Присвойте параметру значение по умолчанию является только требуемое действие, когда вызывающий код не предоставляет необязательный аргумент.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>In such a case, the procedure code can be less complicated if you define a single version with one or more <ph id="ph1">`Optional`</ph> parameters.</source>
          <target state="translated">В таком случае код процедуры можно упростить, если определить одну версию с одним или несколькими <ph id="ph1">`Optional`</ph> параметров.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Optional Parameters<ept id="p1">](./optional-parameters.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>необязательные параметры<ept id="p1">](./optional-parameters.md)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Overloads and ParamArrays</source>
          <target state="translated">Перегрузки и массивы параметров</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>When the calling code can pass a variable number of arguments, you can define multiple overloaded versions or use a parameter array.</source>
          <target state="translated">Если вызывающий код может передавать переменное число аргументов, можно определить несколько перегруженных версий или использовать массив параметров.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When to Use Overloaded Versions</source>
          <target state="translated">Когда следует использовать перегруженные версии</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You can consider defining a series of overloaded versions in the following cases:</source>
          <target state="translated">Можно определять наборы перегруженных версий в следующих случаях:</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You know that the calling code never passes more than a small number of values to the parameter array.</source>
          <target state="translated">Вы знаете, что вызывающий код передает в более чем небольшое количество значений в массиве параметров.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The logic in the procedure code is significantly different depending on how many values the calling code passes.</source>
          <target state="translated">Логика в коде процедуры существенно отличается в зависимости от количества значений, которые передает вызывающий код.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The calling code can pass values of different data types.</source>
          <target state="translated">Вызывающий код может передавать значения различных типов данных.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When to Use a Parameter Array</source>
          <target state="translated">Когда следует использовать массив параметров</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>You are better served by a <ph id="ph1">`ParamArray`</ph> parameter in the following cases:</source>
          <target state="translated">Вам удобнее работать с <ph id="ph1">`ParamArray`</ph> параметр в следующих случаях:</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>You are not able to predict how many values the calling code can pass to the parameter array, and it could be a large number.</source>
          <target state="translated">Невозможно предсказать количество значений, вызывающий код может передать в массив параметров, и он может быть большим числом.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The procedure logic lends itself to iterating through all the values the calling code passes, performing essentially the same operations on every value.</source>
          <target state="translated">Логика процедуры пригоден для прохода по всем значениям, которые передает вызывающий код выполняет по сути одинаковые операции над каждым значением.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Parameter Arrays<ept id="p1">](./parameter-arrays.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>массивы параметров<ept id="p1">](./parameter-arrays.md)</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Implicit Overloads for Optional Parameters</source>
          <target state="translated">Неявные перегрузки для дополнительных параметров</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A procedure with an <bpt id="p1">[</bpt>Optional<ept id="p1">](../../../../visual-basic/language-reference/modifiers/optional.md)</ept> parameter is equivalent to two overloaded procedures, one with the optional parameter and one without it.</source>
          <target state="translated">Процедуры с <bpt id="p1">[</bpt>необязательно<ept id="p1">](../../../../visual-basic/language-reference/modifiers/optional.md)</ept> эквивалентна двум перегруженным процедурам, с необязательным параметром, а другая — нет.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>You cannot overload such a procedure with a parameter list corresponding to either of these.</source>
          <target state="translated">Невозможно перегрузить такую процедуру со списком параметров, соответствующего любой из них.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The following declarations illustrate this.</source>
          <target state="translated">Показано в следующих объявлениях.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#58<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#58;<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#60<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#60;<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#61<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#61;<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For a procedure with more than one optional parameter, there is a set of implicit overloads, arrived at by logic similar to that in the preceding example.</source>
          <target state="translated">Для процедуры с более чем один необязательный параметр существует набор неявных перегрузок, получающихся логикой, подобного приведенному в предыдущем примере.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Implicit Overloads for a ParamArray Parameter</source>
          <target state="translated">Неявные перегрузки для параметра ParamArray</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The compiler considers a procedure with a <bpt id="p1">[</bpt>ParamArray<ept id="p1">](../../../../visual-basic/language-reference/modifiers/paramarray.md)</ept> parameter to have an infinite number of overloads, differing from each other in what the calling code passes to the parameter array, as follows:</source>
          <target state="translated">Компилятор считает, что процедуры с <bpt id="p1">[</bpt>ParamArray<ept id="p1">](../../../../visual-basic/language-reference/modifiers/paramarray.md)</ept> параметра бесконечным числом перегрузок, отличающихся друг от друга, в то, что вызывающий код передает в массив параметров следующим образом:</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>One overload for when the calling code does not supply an argument to the <ph id="ph1">`ParamArray`</ph></source>
          <target state="translated">Одна перегрузка, когда вызывающий код не передает аргумент<ph id="ph1">`ParamArray`</ph></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>One overload for when the calling code supplies a one-dimensional array of the <ph id="ph1">`ParamArray`</ph> element type</source>
          <target state="translated">Одна перегрузка, когда вызывающий код предоставляет одномерный массив <ph id="ph1">`ParamArray`</ph> тип элемента</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>For every positive integer, one overload for when the calling code supplies that number of arguments, each of the <ph id="ph1">`ParamArray`</ph> element type</source>
          <target state="translated">Одна перегрузка для каждого положительного целого числа, когда вызывающий код предоставляет количество аргументов, каждый из <ph id="ph1">`ParamArray`</ph> тип элемента</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The following declarations illustrate these implicit overloads.</source>
          <target state="translated">Эти неявные перегрузки показывают следующие объявления.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#68<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_4.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#68;<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_4.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#70<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_5.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#70;<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_5.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You cannot overload such a procedure with a parameter list that takes a one-dimensional array for the parameter array.</source>
          <target state="translated">Нельзя перегрузить процедуру со списком параметров, который принимает одномерный массив для массива параметров.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>However, you can use the signatures of the other implicit overloads.</source>
          <target state="translated">Тем не менее можно использовать подписи неявных перегрузок.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The following declarations illustrate this.</source>
          <target state="translated">Показано в следующих объявлениях.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures#71<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_6.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbcnProcedures&amp;#71;<ept id="p2">](./codesnippet/VisualBasic/considerations-in-overloading-procedures_6.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Typeless Programming as an Alternative to Overloading</source>
          <target state="translated">Программирование без типов как альтернатива перегрузке</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If you want to allow the calling code to pass different data types to a parameter, an alternative approach is typeless programming.</source>
          <target state="translated">Если требуется разрешить вызывающему коду передачу различных типов данных в параметр альтернативный подход — программирование.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>You can set the type checking switch to <ph id="ph1">`Off`</ph> with either the <bpt id="p1">[</bpt>Option Strict Statement<ept id="p1">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept> or the <bpt id="p2">[</bpt>/optionstrict<ept id="p2">](../../../../visual-basic/reference/command-line-compiler/optionstrict.md)</ept> compiler option.</source>
          <target state="translated">Можно задать ключ для проверки типа <ph id="ph1">`Off`</ph> с помощью <bpt id="p1">[</bpt>оператор Option Strict<ept id="p1">](../../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept> или <bpt id="p2">[</bpt>/optionstrict<ept id="p2">](../../../../visual-basic/reference/command-line-compiler/optionstrict.md)</ept> параметр компилятора.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Then you do not have to declare the parameter's data type.</source>
          <target state="translated">Затем у вас объявить тип данных параметра.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>However, this approach has the following disadvantages compared to overloading:</source>
          <target state="translated">Однако такой подход имеет следующие недостатки по сравнению с перегрузкой:</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Typeless programming produces less efficient execution code.</source>
          <target state="translated">Программирование выводятся менее эффективного выполнения кода.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The procedure must test for every data type it anticipates being passed.</source>
          <target state="translated">Процедура должна проверять каждый тип данных, который может передан.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The compiler cannot signal an error if the calling code passes a data type that the procedure does not support.</source>
          <target state="translated">Компилятор не может сообщить об ошибке, если вызывающий код передает тип данных, процедура не поддерживает.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">См. также</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Procedures<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Процедуры<ept id="p1">](./index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Procedure Parameters and Arguments<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Параметры и аргументы процедуры<ept id="p1">](./procedure-parameters-and-arguments.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Troubleshooting Procedures<ept id="p1">](./troubleshooting-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Рекомендации по устранению неполадок<ept id="p1">](./troubleshooting-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Define Multiple Versions of a Procedure<ept id="p1">](./how-to-define-multiple-versions-of-a-procedure.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Практическое руководство: определение различных версий процедуры<ept id="p1">](./how-to-define-multiple-versions-of-a-procedure.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Call an Overloaded Procedure<ept id="p1">](./how-to-call-an-overloaded-procedure.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Практическое руководство: вызов перегруженной процедуры<ept id="p1">](./how-to-call-an-overloaded-procedure.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Overload a Procedure that Takes Optional Parameters<ept id="p1">](./how-to-overload-a-procedure-that-takes-optional-parameters.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Практическое руководство: перегрузка процедуры, которая принимает необязательные параметры<ept id="p1">](./how-to-overload-a-procedure-that-takes-optional-parameters.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Overload a Procedure that Takes an Indefinite Number of Parameters<ept id="p1">](./how-to-overload-a-procedure-that-takes-an-indefinite-number-of-parameters.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Практическое руководство: перегрузка процедуры, принимающей неопределенное число параметров<ept id="p1">](./how-to-overload-a-procedure-that-takes-an-indefinite-number-of-parameters.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Overload Resolution<ept id="p1">](./overload-resolution.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Разрешение перегрузки<ept id="p1">](./overload-resolution.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Overloads<ept id="p1">](../../../../visual-basic/language-reference/modifiers/overloads.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>Перегрузки<ept id="p1">](../../../../visual-basic/language-reference/modifiers/overloads.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>