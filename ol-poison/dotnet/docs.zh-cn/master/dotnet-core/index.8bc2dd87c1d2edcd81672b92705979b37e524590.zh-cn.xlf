<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8eb9274def2683fae20765cbf701b706293744fc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2edd7b1f455399ae3233ab3f1b477f75a54c96fa</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40518b9883242ba4484d0e98f199b5aa77e34fb8</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">file index.8bc2dd87c1d2edcd81672b92705979b37e524590.zh-cn.xlf is out of handoff scope</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>About .NET</source>
          <target state="translated">关于 .NET</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Learn about the .NET Platform.</source>
          <target state="translated">了解 .NET 平台。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>.NET Platform Guide</source>
          <target state="translated">.NET 平台指南</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This article is going to be rewritten.</source>
          <target state="translated">这篇文章将重写。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Check out the <bpt id="p1">[</bpt>"Getting Started with .NET Core" tutorials<ept id="p1">](../core/getting-started.md)</ept> to learn how to create a simple .NET Core application.</source>
          <target state="translated">请查看<bpt id="p1">[</bpt>“.NET Core 入门”教程<ept id="p1">](../core/getting-started.md)</ept>，了解如何创建简单的 .NET Core 应用程序。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>It only takes a few minutes to get your first app up and running.</source>
          <target state="translated">只需几分钟即可生成并运行第一个应用。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>.NET is a general purpose development platform.</source>
          <target state="translated">.NET 是一个通用开发平台。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>It can be used for any kind of app type or workload where general purpose solutions are used.</source>
          <target state="translated">在使用通用解决方案的任何类型的应用或工作负荷中，都可以使用 .NET。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>It has several key features that are attractive to many developers, including automatic memory management and modern programming languages, that make it easier to efficiently build high-quality applications.</source>
          <target state="translated">.NET 提供很多开发人员都会感兴趣的一些重要功能，包括自动内存管理和现代编程语言，可方便开发人员有效构建优质应用程序。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>.NET enables a high-level programming environment with many convenience features, while providing low-level access to native memory and APIs.</source>
          <target state="translated">.NET 允许具有许多便利功能的高级编程环境，同时提供对本机内存和 API 的底层访问。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>C#, F# and Visual Basic are popular languages that target and rely on the .NET platform.</source>
          <target state="translated">C#、F# 和 Visual Basic 是面向并依赖 .NET 平台的热门语言。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The .NET languages are known for key features such as their asynchronous programming model, language-integrated query, generic types and type system reflection.</source>
          <target state="translated">.NET 语言因其异步编程模型、语言集成查询、泛型类型和类型系统反射等主要功能而闻名。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The languages also provide great options for both object-oriented and functional programming paradigms.</source>
          <target state="translated">该语言也是面向对象和功能性编程范例的不错选择。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>There is great diversity across these languages, in philosophy and syntax, but also symmetry provided by a shared type system.</source>
          <target state="translated">这些语言在理念和语法，以及共享类型系统所提供的对称方面存在诸多差异。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This type system is provided by the underlying runtime environment.</source>
          <target state="translated">此类型系统由基础运行时环境提供。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>.NET was designed around the idea of a "common language runtime" that could support the requirements of diverse languages -- for example, dynamic and statically typed languages -- and enable interoperability between them.</source>
          <target state="translated">.NET 围绕“公共语言运行时”理念设计，支持多种语言要求（例如，动态和静态类型的语言），并可实现语言间的互操作性。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, it's possible to pass a collection of <ph id="ph1">`People`</ph> objects between languages with no loss in semantics or capability.</source>
          <target state="translated">例如，可以在语言之间传递 <ph id="ph1">`People`</ph> 对象集合，且不丢失语义或功能。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Multiple <bpt id="p1">[</bpt>.NET implementations and products<ept id="p1">](components.md)</ept> are available, based on open <bpt id="p2">[</bpt>.NET Standards<ept id="p2">](https://github.com/dotnet/coreclr/blob/master/Documentation/project-docs/dotnet-standards.md)</ept> that specify the fundamentals of the platform.</source>
          <target state="translated">.NET 基于指定平台的基本要素的开放式 <bpt id="p2">[</bpt>.NET 标准<ept id="p2">](https://github.com/dotnet/coreclr/blob/master/Documentation/project-docs/dotnet-standards.md)</ept>，提供多种 <bpt id="p1">[</bpt>.NET 实现和产品<ept id="p1">](components.md)</ept>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>They are separately optimized for different application types (for example, desktop, mobile, gaming, cloud) and support many chips (for example, x86/x64, ARM) and operating systems (for example, Windows, Linux, iOS, Android, macOS).</source>
          <target state="translated">这些实现和产品已针对不同的应用程序类型（例如桌面、移动、游戏和云）进行单独优化，支持多种芯片（例如 x86/x64 和 ARM）和操作系统（例如 Windows、Linux、iOS、Android 和 macOS）。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Open source is also an important part of the .NET ecosystem, with multiple .NET implementations and many libraries available under OSI-approved licenses.</source>
          <target state="translated">开放源代码也是 .NET 生态系统的重要组成部分，其中包含多种 .NET 实现和许多的库，购买 OSI 批准的许可证后即可使用这些库。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Learn about <bpt id="p1">[</bpt>C#<ept id="p1">](../csharp/index.md)</ept></source>
          <target state="translated">了解 <bpt id="p1">[</bpt>C#<ept id="p1">](../csharp/index.md)</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Learn about <bpt id="p1">[</bpt>F#<ept id="p1">](../fsharp/index.md)</ept></source>
          <target state="translated">了解 <bpt id="p1">[</bpt>F#<ept id="p1">](../fsharp/index.md)</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Browse the <bpt id="p1">[</bpt>.NET API Library<ept id="p1">](../../api/index.md)</ept></source>
          <target state="translated">浏览 <bpt id="p1">[</bpt>.NET API 库<ept id="p1">](../../api/index.md)</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Introduction to the Common Language Runtime<ept id="p1">](https://github.com/dotnet/coreclr/blob/master/Documentation/botr/intro-to-clr.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>公共语言运行时简介<ept id="p1">](https://github.com/dotnet/coreclr/blob/master/Documentation/botr/intro-to-clr.md)</ept></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Fundamentals</source>
          <target state="translated">基础知识</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Multi-Language<ept id="p1">**</ept> -- .NET provides a well-defined type system, file formats, runtime, framework and tools that can be used by multiple languages, both for their own execution and also to interoperate with other languages using those same components of .NET as their shared currency.</source>
          <target state="translated"><bpt id="p1">**</bpt>多语言<ept id="p1">**</ept> - .NET 提供可由多种语言使用的明确定义的类型系统、文件格式、运行时、框架和工具，目的是为了实现自身执行，同时与使用共享货币所用的 .NET 组件的语言进行互操作。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Managed Memory<ept id="p1">**</ept> -- .NET automatically manages memory for you via a garbage collector.</source>
          <target state="translated"><bpt id="p1">**</bpt>托管内存<ept id="p1">**</ept> - .NET 通过垃圾回收器自动为你管理内存。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>It ensures that you always reference live objects, guaranteeing that you avoid nasty problems like buffer overruns and access violations.</source>
          <target state="translated">确保你能始终引用活动对象，保证避免缓冲区溢出和访问冲突等棘手问题。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This includes array bounds checking.</source>
          <target state="translated">这包括数组边界检查。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Type Safety<ept id="p1">**</ept> -- The primary .NET model for functionality and memory representation is "types".</source>
          <target state="translated"><bpt id="p1">**</bpt>类型安全性<ept id="p1">**</ept> -- 功能和内存表现形式的主 .NET 模型为“类型”。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Types define shape and optionally behavior.</source>
          <target state="translated">类型可定义形状和行为（可选）。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The runtime ensures that calling code can only operate on types according to their definition and specified visibility of members, providing consistent, reliable and secure results.</source>
          <target state="translated">运行时确保调用代码根据其定义和指定的成员可见性，仅对类型执行操作，从而提供一致、可靠、安全的结果。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">功能</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>User-defined Value Types<ept id="p1">**</ept> -- Value types are a useful category of types since they offer the semantic of "pass by value" instead of "pass by reference", as is the case for classes.</source>
          <target state="translated"><bpt id="p1">**</bpt>用户定义的值类型<ept id="p1">**</ept> - 值类型是类型的实用类别，因为它们提供“按值传递”而非“按引用传递”的语义，与类的情况类似。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Value types are most obviously usefully for numeric data.</source>
          <target state="translated">值类型对于数值数据特别有用。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>.NET enables value types for both primitive types, like integers, and user-defined types.</source>
          <target state="translated">.NET 允许基元类型（如整数）和用户定义的类型使用值类型。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Generic types<ept id="p1">**</ept> -- Generic types are types with one or more type parameters that can be specified on a per-instantiation basis.</source>
          <target state="translated"><bpt id="p1">**</bpt>泛型类型<ept id="p1">**</ept> - 泛型类型是包含一个或多个类型参数的类型，具体情况可根据每次实例化进行指定。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This is useful for many types, which otherwise would  expose contents as the Object type or require multiple type definitions.</source>
          <target state="translated">这可用于多种类型，在其他情况下，还会将内容公开为 Object 类型或需要多个类型定义。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>For example, a given instantiation of a collection type can be made specific to People, GPS locations or strings.</source>
          <target state="translated">例如，集合类型的给定实例化可能特定于人员、GPS 位置或字符串。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Reflection<ept id="p1">**</ept> -- .NET defines a metadata format that describes the types within a binary.</source>
          <target state="translated"><bpt id="p1">**</bpt>反射<ept id="p1">**</ept> - .NET 定义元数据格式，该格式用于描述二进制文件中的类型。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The reflection subsystem uses this data, exposing APIs for both reading and instantiating types at runtime.</source>
          <target state="translated">反射子系统使用此数据公开在运行时读取和实例化类型的 API。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This facility is very useful for dynamic scenarios where it is not convenient to know the exact implementation of a program ahead of time.</source>
          <target state="translated">此功能非常适用于不方便预先了解某程序的确切实现的动态方案。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Flexible code generation<ept id="p1">**</ept> -- .NET does not prescribe a specific approach to transforming .NET binaries into machine code.</source>
          <target state="translated"><bpt id="p1">**</bpt>灵活的代码生成<ept id="p1">**</ept> - .NET 不指定将 .NET 二进制文件转换为机器码的特定方法。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Many approaches have been used successfully, including interpretation, just-in-time (JIT) compilation, ahead-of-time (AOT) compilation with JIT fallback and AOT compilation with no JIT fallback.</source>
          <target state="translated">已成功使用多种方法，包括转译、实时 (JIT) 编译以及有/无实时回退的预编译。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Each of these strategies can be valuable and there are opportunities for using them together.</source>
          <target state="translated">以上每种策略都很有用，并存在共同使用这些策略的情况。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Cross-platform<ept id="p1">**</ept> -- .NET was intended to be cross platform from its inception.</source>
          <target state="translated"><bpt id="p1">**</bpt>跨平台<ept id="p1">**</ept> - .NET 自推出之日起便已支持跨平台。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The binary format and the instruction set are operating system, CPU and pointer-size agnostic.</source>
          <target state="translated">二进制格式和指令集包括操作系统、CPU 并与指针大小无关。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A given .NET binary built in 2000 to run on a 32-bit Windows machine can run on the ARM64 iOS device on 2016 without modification.</source>
          <target state="translated">2000 年生成的在 32 位 Windows 计算机上运行的给定 .NET 二进制文件无需修改即可在 2016 ARM64 iOS 设备上运行。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Open source</source>
          <target state="translated">打开源</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>.NET Core<ept id="p1">](https://github.com/dotnet/core)</ept> and <bpt id="p2">[</bpt>Mono<ept id="p2">](https://github.com/mono/mono)</ept> implementations of .NET are open source, using the MIT license.</source>
          <target state="translated">.NET 的 <bpt id="p1">[</bpt>.NET Core<ept id="p1">](https://github.com/dotnet/core)</ept> 和 <bpt id="p2">[</bpt>Mono<ept id="p2">](https://github.com/mono/mono)</ept> 实现是使用 MIT 许可证的开放源代码。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Documentation uses the <bpt id="p1">[</bpt>Creative Commons CC-BY<ept id="p1">](https://creativecommons.org/licenses/by/4.0/)</ept> license.</source>
          <target state="translated">文档使用<bpt id="p1">[</bpt>知识共享 CC-BY<ept id="p1">](https://creativecommons.org/licenses/by/4.0/)</ept>许可证。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>.NET Core and Mono are sponsored by Microsoft and have many contributors from the community.</source>
          <target state="translated">.NET Core 和 Mono 由 Microsoft 提供赞助，并拥有许多来自社区的参与者。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>These general purpose runtimes can be used as the basis of academic research or teaching/learning or commercial products.</source>
          <target state="translated">这些通用运行时可用作学术研究、教学/学习或者商业产品的基础。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Their open nature also means that anyone can contribute back to the upstream product code given a bug or the desire for a new feature.</source>
          <target state="translated">其开放性还意味着只要产品存在 bug 或用户渴求新功能，任何人都可以向上游产品代码提供反馈。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Projects</source>
          <target state="translated">项目</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CoreCLR<ept id="p1">](https://github.com/dotnet/coreclr)</ept> - .NET runtime, used by .NET Core.</source>
          <target state="translated"><bpt id="p1">[</bpt>CoreCLR<ept id="p1">](https://github.com/dotnet/coreclr)</ept> - .NET 运行时，适用于 .NET Core。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Mono<ept id="p1">](https://github.com/mono/mono)</ept> - .NET runtime, used by Xamarin and others.</source>
          <target state="translated"><bpt id="p1">[</bpt>Mono<ept id="p1">](https://github.com/mono/mono)</ept> - .NET 运行时，适用于 Xamarin 和其他环境。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>CoreFX<ept id="p1">](https://github.com/dotnet/coreclr)</ept> - .NET class libraries, used by .NET Core and to a degree by Mono via source sharing.</source>
          <target state="translated"><bpt id="p1">[</bpt>CoreFX<ept id="p1">](https://github.com/dotnet/coreclr)</ept> - .NET 类库，适用于 .NET Core 和 Mono（Mono 在某种程度上通过源共享使用）。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Roslyn<ept id="p1">](https://github.com/dotnet/roslyn)</ept> - C# and Visual Basic compilers, used by most .NET platforms and tools.</source>
          <target state="translated"><bpt id="p1">[</bpt>Roslyn<ept id="p1">](https://github.com/dotnet/roslyn)</ept> - C# 和 Visual Basic 编译器，适用于大多数 .NET 平台和工具。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Exposes APIs for reading, writing and analyzing source code.</source>
          <target state="translated">公开用于读取、编写和分析源代码的 API。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>F#<ept id="p1">](https://github.com/microsoft/visualfsharp)</ept> - F# compiler.</source>
          <target state="translated"><bpt id="p1">[</bpt>F#<ept id="p1">](https://github.com/microsoft/visualfsharp)</ept> - F# 编译器。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Xamarin SDK<ept id="p1">](http://open.xamarin.com)</ept> - Tools and libraries needed to write Android, iOS and macOS in C# and F#.</source>
          <target state="translated"><bpt id="p1">[</bpt>Xamarin SDK<ept id="p1">](http://open.xamarin.com)</ept> - 采用 C# 和 F# 编写 Android、iOS 和 macOS 所需的工具和库。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Standardized</source>
          <target state="translated">标准化</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>.NET is specified via open <bpt id="p1">[</bpt>ECMA standards<ept id="p1">](https://github.com/dotnet/coreclr/blob/master/Documentation/project-docs/dotnet-standards.md)</ept> that outline its capabilities and that can be used to make a new implementation.</source>
          <target state="translated">通过打开 <bpt id="p1">[</bpt>ECMA 标准<ept id="p1">](https://github.com/dotnet/coreclr/blob/master/Documentation/project-docs/dotnet-standards.md)</ept>指定 .NET，该标准概述了其功能，并可用于开发新实现。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>There are other .NET implementations, with Mono and Unity being the most popular beyond the Microsoft ones.</source>
          <target state="translated">还有其他 .NET 实现，除了 Microsoft 实现外，最热门的是 Mono 和 Unity。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>