<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6e01ae91b9d5d875bb618993cd9eda82db59399</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\assemblies-gac\friend-assemblies.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aea05a541843c059778276654336ad8efc36b915</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">689fc82e2168bd08a376344086b01642311f327d</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_friend-assemblies.dd382620a351e41846ba759ca3a81b35c7418ccf.zh-cn is different with handoff file name: friend-assemblies.dd382620a351e41846ba759ca3a81b35c7418ccf.zh-cn.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Friend Assemblies (Visual Basic) | Microsoft Docs</source>
          <target state="translated">友元程序集 (Visual Basic 中) |Microsoft 文档</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Friend Assemblies (Visual Basic)</source>
          <target state="translated">友元程序集 (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>A <bpt id="p1">*</bpt>friend assembly<ept id="p1">*</ept> is an assembly that can access another assembly's <bpt id="p2">[</bpt>Friend<ept id="p2">](../../../../visual-basic/language-reference/modifiers/friend.md)</ept> types and members.</source>
          <target state="translated">一个<bpt id="p1">*</bpt>友元程序集<ept id="p1">*</ept>是可以访问其他程序集的程序集<bpt id="p2">[</bpt>朋友<ept id="p2">](../../../../visual-basic/language-reference/modifiers/friend.md)</ept>类型和成员。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>If you identify an assembly as a friend assembly, you no longer have to mark types and members as public in order for them to be accessed by other assemblies.</source>
          <target state="translated">如果您发现一个程序集作为友元程序集，您不再需要标记类型和成员为公共，以使其可由其他程序集访问。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This is especially convenient in the following scenarios:</source>
          <target state="translated">这是在以下方案中特别方便︰</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>During unit testing, when test code runs in a separate assembly but requires access to members in the assembly being tested that are marked as <ph id="ph1">`Friend`</ph>.</source>
          <target state="translated">在单元测试，测试代码在运行时单独的程序集，但需要访问所测试程序集中的成员标记为<ph id="ph1">`Friend`</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When you are developing a class library and additions to the library are contained in separate assemblies but require access to members in existing assemblies that are marked as <ph id="ph1">`Friend`</ph>.</source>
          <target state="translated">当您正在开发类库和库的新增功能包含在单独的程序集，但需要访问的成员的现有程序集中标记为<ph id="ph1">`Friend`</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">备注</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You can use the &lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt; attribute to identify one or more friend assemblies for a given assembly.</source>
          <target state="translated">您可以使用&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;属性来标识给定程序集的一个或多个友元程序集。&lt;/xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt; attribute in assembly A and specifies assembly <ph id="ph1">`AssemblyB`</ph> as a friend assembly.</source>
          <target state="translated">下面的示例使用&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;属性集 A 中，指定程序集<ph id="ph1">`AssemblyB`</ph>作为友元程序集。&lt;/xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This gives assembly <ph id="ph1">`AssemblyB`</ph> access to all types and members in assembly A that are marked as <ph id="ph2">`Friend`</ph>.</source>
          <target state="translated">这样，程序集<ph id="ph1">`AssemblyB`</ph>访问所有类型和成员的程序集标记为<ph id="ph2">`Friend`</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>When you compile an assembly (assembly <ph id="ph1">`AssemblyB`</ph>) that will access internal types or internal members of another assembly (assembly <bpt id="p1">*</bpt>A<ept id="p1">*</ept>), you must explicitly specify the name of the output file (.exe or .dll) by using the <bpt id="p2">**</bpt>/out<ept id="p2">**</ept> compiler option.</source>
          <target state="translated">当编译的程序集 (程序集<ph id="ph1">`AssemblyB`</ph>)，将访问内部类型或内部成员的另一个程序集 (程序集<bpt id="p1">*</bpt>A<ept id="p1">*</ept>)，您必须显式指定输出文件 （.exe 或.dll） 的名称，通过使用<bpt id="p2">**</bpt>/out<ept id="p2">**</ept>编译器选项。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</source>
          <target state="translated">这是必需的因为编译器不生成在它所绑定到外部引用时生成的程序集的名称。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>/out (Visual Basic)<ept id="p1">](../../../../visual-basic/reference/command-line-compiler/out.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>/输出 (Visual Basic 中)<ept id="p1">](../../../../visual-basic/reference/command-line-compiler/out.md)</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Only assemblies that you explicitly specify as friends can access <ph id="ph1">`Friend`</ph> types and members.</source>
          <target state="translated">只有您显式指定与朋友可以访问的程序集<ph id="ph1">`Friend`</ph>类型和成员。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, if assembly B is a friend of assembly A and assembly C references assembly B, C does not have access to <ph id="ph1">`Friend`</ph> types in A.</source>
          <target state="translated">例如，如果程序集 B 的友元程序集 A 和程序集 C 引用程序集 B，C 没有对访问<ph id="ph1">`Friend`</ph>A.中的类型</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The compiler performs some basic validation of the friend assembly name passed to the &lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt; attribute.</source>
          <target state="translated">编译器执行的友元程序集名称传递给一些基本验证&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;属性。&lt;/xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If assembly <bpt id="p1">*</bpt>A<ept id="p1">*</ept> declares <bpt id="p2">*</bpt>B<ept id="p2">*</ept> as a friend assembly, the validation rules are as follows:</source>
          <target state="translated">如果程序集<bpt id="p1">*</bpt>A<ept id="p1">*</ept>声明<bpt id="p2">*</bpt>B<ept id="p2">*</ept>作为友元程序集的验证规则是，如下所示︰</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If assembly <bpt id="p1">*</bpt>A<ept id="p1">*</ept> is strong named, assembly <bpt id="p2">*</bpt>B<ept id="p2">*</ept> must also be strong named.</source>
          <target state="translated">如果程序集<bpt id="p1">*</bpt>A<ept id="p1">*</ept>具有强名称程序集<bpt id="p2">*</bpt>B<ept id="p2">*</ept>还必须具有强名称。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The friend assembly name that is passed to the attribute must consist of the assembly name and the public key of the strong-name key that is used to sign assembly <bpt id="p1">*</bpt>B<ept id="p1">*</ept>.</source>
          <target state="translated">传递给特性的友元程序集名称必须包含程序集名称和用于程序集签名的强名称密钥的公钥<bpt id="p1">*</bpt>B<ept id="p1">*</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The friend assembly name that is passed to the &lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt; attribute cannot be the strong name of assembly <bpt id="p1">*</bpt>B<ept id="p1">*</ept>: do not include the assembly version, culture, architecture, or public key token.</source>
          <target state="translated">友元程序集名称传递给&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;属性不能是程序集的强名称<bpt id="p1">*</bpt>B<ept id="p1">*</ept>︰ 不包括程序集版本、 区域性、 体系结构或公钥标记。&lt;/xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If assembly <bpt id="p1">*</bpt>A<ept id="p1">*</ept> is not strong named, the friend assembly name should consist of only the assembly name.</source>
          <target state="translated">如果程序集<bpt id="p1">*</bpt>A<ept id="p1">*</ept>不具有强名称，友元程序集名称应仅包含程序集名称。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create Unsigned Friend Assemblies (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/how-to-create-unsigned-friend-assemblies.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何︰ 创建未签名友元程序集 (Visual Basic 中)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/how-to-create-unsigned-friend-assemblies.md)</ept>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>If assembly <bpt id="p1">*</bpt>B<ept id="p1">*</ept> is strong named, you must specify the strong-name key for assembly <bpt id="p2">*</bpt>B<ept id="p2">*</ept> by using the project setting or the command-line <ph id="ph1">`/keyfile`</ph> compiler option.</source>
          <target state="translated">如果程序集<bpt id="p1">*</bpt>B<ept id="p1">*</ept>具有强名称，必须指定程序集的强名称密钥<bpt id="p2">*</bpt>B<ept id="p2">*</ept>通过项目设置或命令行<ph id="ph1">`/keyfile`</ph>编译器选项。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create Signed Friend Assemblies (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/how-to-create-signed-friend-assemblies.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>如何︰ 创建签名的友元程序集 (Visual Basic 中)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/how-to-create-signed-friend-assemblies.md)</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt; class also provides the ability to share types, with the following differences:</source>
          <target state="translated">&lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt;类还提供了共享类型，具有以下差异的能力︰&lt;/xref:System.Security.Permissions.StrongNameIdentityPermission&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt; applies to an individual type, while a friend assembly applies to the whole assembly.</source>
          <target state="translated">&lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt;应用于单个类型，而友元程序集应用于整个程序集。&lt;/xref:System.Security.Permissions.StrongNameIdentityPermission&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If there are hundreds of types in assembly <bpt id="p1">*</bpt>A<ept id="p1">*</ept> that you want to share with assembly <bpt id="p2">*</bpt>B<ept id="p2">*</ept>, you have to add &lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt; to all of them.</source>
          <target state="translated">如果有数百个程序集中的类型<bpt id="p1">*</bpt>A<ept id="p1">*</ept>想要与程序集共享<bpt id="p2">*</bpt>B<ept id="p2">*</ept>，您必须添加&lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt;访问所有这些。&lt;/xref:System.Security.Permissions.StrongNameIdentityPermission&gt;</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If you use a friend assembly, you only need to declare the friend relationship once.</source>
          <target state="translated">如果您使用友元程序集，只需一次声明友元关系。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If you use &lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt;, the types you want to share have to be declared as public.</source>
          <target state="translated">如果您使用&lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt;，您想要共享的类型必须声明为公共。&lt;/xref:System.Security.Permissions.StrongNameIdentityPermission&gt;</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If you use a friend assembly, the shared types are declared as <ph id="ph1">`Friend`</ph>.</source>
          <target state="translated">如果您使用友元程序集，共享的类型被声明为<ph id="ph1">`Friend`</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For information about how to access an assembly's <ph id="ph1">`Friend`</ph> types and methods from a module file (a file with the .netmodule extension), see <bpt id="p1">[</bpt>/moduleassemblyname (Visual Basic)<ept id="p1">](../../../../visual-basic/reference/command-line-compiler/moduleassemblyname.md)</ept>.</source>
          <target state="translated">有关如何访问程序集的信息<ph id="ph1">`Friend`</ph>类型和方法从模块文件 （扩展名为.netmodule 文件），请参阅<bpt id="p1">[</bpt>/moduleassemblyname (Visual Basic 中)<ept id="p1">](../../../../visual-basic/reference/command-line-compiler/moduleassemblyname.md)</ept>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</source>
          <target state="translated">&lt;xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;&lt;/xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt;</source>
          <target state="translated">&lt;xref:System.Security.Permissions.StrongNameIdentityPermission&gt;&lt;/xref:System.Security.Permissions.StrongNameIdentityPermission&gt;</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create Unsigned Friend Assemblies (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/how-to-create-unsigned-friend-assemblies.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>如何︰ 创建未签名友元程序集 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/how-to-create-unsigned-friend-assemblies.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Create Signed Friend Assemblies (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/how-to-create-signed-friend-assemblies.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>如何︰ 创建签名的友元程序集 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/how-to-create-signed-friend-assemblies.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Assemblies and the Global Assembly Cache (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>程序集和全局程序集缓存 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/assemblies-gac/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Programming Concepts<ept id="p1">](../../../../visual-basic/programming-guide/concepts/index.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>编程概念<ept id="p1">](../../../../visual-basic/programming-guide/concepts/index.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>