<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">559bf330640840a310ff947cac118953d1df1a13</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\linq-to-xml-security.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c3e028d278a890879da49e91d70c71f00e01a53d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">69b11564e33037fecb602325ee5331c54238dde3</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_linq-to-xml-security.b32495630c47b7609e691e8feedd1c4a33c5be70.zh-cn is different with handoff file name: linq-to-xml-security.b32495630c47b7609e691e8feedd1c4a33c5be70.zh-cn.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>LINQ to XML Security (Visual Basic) | Microsoft Docs</source>
          <target state="translated">LINQ to XML 安全性 (Visual Basic 中) |Microsoft 文档</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>LINQ to XML Security (Visual Basic)</source>
          <target state="translated">LINQ to XML 安全性 (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic describes security issues associated with LINQ to XML.</source>
          <target state="translated">本主题说明与 LINQ to XML 相关的安全问题。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>In addition, it provides some guidance for mitigating security exposure.</source>
          <target state="translated">此外，它还提供减轻安全隐患的一些指导。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>LINQ to XML Security Overview</source>
          <target state="translated">LINQ to XML 安全性概述</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>LINQ to XML is designed more for programming convenience than for server-side applications with stringent security requirements.</source>
          <target state="translated">在旨在提高编程方便性和使服务器端应用程序具有严格安全要求两者之间，LINQ to XML 更倾向于前者。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Most XML scenarios consist of processing trusted XML documents, rather than processing untrusted XML documents that are uploaded to a server.</source>
          <target state="translated">多数 XML 方案均涉及处理受信任的 XML 文档，而不涉及处理上载到服务器的不受信任的 XML 文档。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>LINQ to XML is optimized for these scenarios.</source>
          <target state="translated">LINQ to XML 针对这些方案进行了优化。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If you must process untrusted data from unknown sources, Microsoft recommends that you use an instance of the &lt;xref:System.Xml.XmlReader&gt; class that has been configured to filter out known XML denial of service (DoS) attacks.</source>
          <target state="translated">如果必须处理来自未知源的不受信任的数据时，Microsoft 建议使用的实例&lt;xref:System.Xml.XmlReader&gt;已配置为筛除已知 XML 拒绝服务 (DoS) 攻击的类。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If you have configured an &lt;xref:System.Xml.XmlReader&gt; to mitigate denial of service attacks, you can use that reader to populate a LINQ to XML tree and still benefit from the programmer productivity enhancements of LINQ to XML.</source>
          <target state="translated">如果已配置&lt;xref:System.Xml.XmlReader&gt;以缓解拒绝服务攻击的可能性，可以使用该读取器填充 LINQ to XML 树，同时仍想获得的程序员的工作效率增强功能的 LINQ to XML。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Many mitigation techniques involve creating readers that are configured to mitigate the security issue, and then instantiating an XML tree through the configured reader.</source>
          <target state="translated">许多缓解技术均涉及创建配置为可缓解安全问题的读取器，然后通过配置的读取器实例化 XML 树。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>XML is intrinsically vulnerable to denial of service attacks because documents are unbounded in size, depth, element name size, and more.</source>
          <target state="translated">由于文档不受大小、深度、元素名称大小等的限制，因此 XML 从本质上就容易受到拒绝服务攻击。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Regardless of the component that you use to process XML, you should always be prepared to recycle the application domain if it uses excessive resources.</source>
          <target state="translated">不管使用哪个组件处理 XML，都应该始终准备好在应用程序域使用过多资源的情况下回收应用程序域。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Mitigation of XML, XSD, XPath, and XSLT Attacks</source>
          <target state="translated">缓解 XML、XSD、XPath 和 XSLT 攻击</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>LINQ to XML is built upon &lt;xref:System.Xml.XmlReader&gt; and &lt;xref:System.Xml.XmlWriter&gt;.</source>
          <target state="translated">LINQ to XML 是基于&lt;xref:System.Xml.XmlReader&gt;和&lt;xref:System.Xml.XmlWriter&gt;。&lt;/xref:System.Xml.XmlWriter&gt; &lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>LINQ to XML supports XSD and XPath through extension methods in the &lt;xref:System.Xml.Schema?displayProperty=fullName&gt; and &lt;xref:System.Xml.XPath?displayProperty=fullName&gt; namespaces.</source>
          <target state="translated">LINQ to XML 通过中的扩展方法支持 XSD 和 XPath&lt;xref:System.Xml.Schema?displayProperty=fullName&gt;和&lt;xref:System.Xml.XPath?displayProperty=fullName&gt;命名空间。&lt;/xref:System.Xml.XPath?displayProperty=fullName&gt; &lt;/xref:System.Xml.Schema?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Using the &lt;xref:System.Xml.XmlReader&gt;, &lt;xref:System.Xml.XPath.XPathNavigator&gt;, and &lt;xref:System.Xml.XmlWriter&gt; classes in conjunction with LINQ to XML, you can invoke XSLT to transform XML trees.</source>
          <target state="translated">使用&lt;xref:System.Xml.XmlReader&gt;， &lt;xref:System.Xml.XPath.XPathNavigator&gt;，和&lt;xref:System.Xml.XmlWriter&gt;在结合 LINQ to XML 类时，您可以调用 XSLT 来转换 XML 树。&lt;/xref:System.Xml.XmlWriter&gt; &lt;/xref:System.Xml.XPath.XPathNavigator&gt; &lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>If you are operating in a less secure environment, there are a number of security issues that are associated with XML and the use of the classes in &lt;xref:System.Xml?displayProperty=fullName&gt;, &lt;xref:System.Xml.Schema?displayProperty=fullName&gt;, &lt;xref:System.Xml.XPath?displayProperty=fullName&gt;, and &lt;xref:System.Xml.Xsl?displayProperty=fullName&gt;.</source>
          <target state="translated">如果您在较不安全的环境中操作，有许多与 XML 相关联的安全问题和中的类使用&lt;xref:System.Xml?displayProperty=fullName&gt;， &lt;xref:System.Xml.Schema?displayProperty=fullName&gt;， &lt;xref:System.Xml.XPath?displayProperty=fullName&gt;，和&lt;xref:System.Xml.Xsl?displayProperty=fullName&gt;。&lt;/xref:System.Xml.Xsl?displayProperty=fullName&gt; &lt;/xref:System.Xml.XPath?displayProperty=fullName&gt; &lt;/xref:System.Xml.Schema?displayProperty=fullName&gt; &lt;/xref:System.Xml?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>These issues include, but are not limited to, the following:</source>
          <target state="translated">这些问题包括但不限于以下问题：</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>XSD, XPath, and XSLT are string-based languages in which you can specify operations that consume a lot of time or memory.</source>
          <target state="translated">XSD、XPath 和 XSLT 是基于字符串的语言，您可以使用此语言指定消耗很多时间和内存的操作。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>It is the responsibility of application programmers who take XSD, XPath, or XSLT strings from untrusted sources to validate that the strings are not malicious, or to monitor and mitigate the possibility that evaluating these strings will lead to excessive system resource consumption.</source>
          <target state="translated">从不受信任的源获取 XSD、XPath 或 XSLT 字符串的应用程序程序员应当负责验证这些字符串以确保其中不包含恶意内容，或监视这些字符串并尽量避免计算这些字符串时消耗过多的系统资源。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>XSD schemas (including inline schemas) are inherently vulnerable to denial of service attacks; you should not accept schemas from untrusted sources.</source>
          <target state="translated">XSD 架构（包括内联架构）从本质上就容易受到拒绝服务攻击，因此不应接受来自不受信任的源的架构。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>XSD and XSLT can include references to other files, and such references can result in cross-zone and cross-domain attacks.</source>
          <target state="translated">XSD 和 XSLT 可能包括对其他文件的引用，这种引用可能导致跨区和跨域攻击。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>External entities in DTDs can result in cross-zone and cross-domain attacks.</source>
          <target state="translated">DTD 中的外部实体可能会导致跨区和跨域攻击。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>DTDs are vulnerable to denial of service attacks.</source>
          <target state="translated">DTD 容易受到拒绝服务攻击。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Exceptionally deep XML documents can pose denial of service issues; you might want to limit the depth of XML documents.</source>
          <target state="translated">异常深的 XML 文档可能引起拒绝服务问题；您可能需要限制 XML 文档的深度。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Do not accept supporting components, such as &lt;xref:System.Xml.NameTable&gt;, &lt;xref:System.Xml.XmlNamespaceManager&gt;, and &lt;xref:System.Xml.XmlResolver&gt; objects, from untrusted assemblies.</source>
          <target state="translated">不接受支持组件，如&lt;xref:System.Xml.NameTable&gt;， &lt;xref:System.Xml.XmlNamespaceManager&gt;，和&lt;xref:System.Xml.XmlResolver&gt;来自不受信任的程序集对象。&lt;/xref:System.Xml.XmlResolver&gt; &lt;/xref:System.Xml.XmlNamespaceManager&gt; &lt;/xref:System.Xml.NameTable&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Read data in chunks to mitigate large document attacks.</source>
          <target state="translated">分块区读取数据以缓解大文档攻击。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Script blocks in XSLT style sheets can expose a number of attacks.</source>
          <target state="translated">XSLT 样式表中的脚本块易于受到多种攻击。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Validate carefully before constructing dynamic XPath expressions.</source>
          <target state="translated">构造动态 XPath 表达式之前需仔细验证这些表达式。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>LINQ to XML Security Issues</source>
          <target state="translated">LINQ to XML 安全问题</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The security issues in this topic are not presented in any particular order.</source>
          <target state="translated">本主题中介绍的安全问题不区分顺序。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>All issues are important and should be addressed as appropriate.</source>
          <target state="translated">所有问题都很重要，都应得到相应解决。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A successful elevation of privilege attack gives a malicious assembly more control over its environment.</source>
          <target state="translated">成功的特权提升攻击可使恶意程序集能够更好地控制其环境。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A successful elevation of privilege attack can result in disclosure of data, denial of service, and more.</source>
          <target state="translated">成功的特权提升攻击可能导致数据泄露、拒绝服务等。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Applications should not disclose data to users who are not authorized to see that data.</source>
          <target state="translated">应用程序不应该向未经授权查看数据的用户泄露数据。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Denial of service attacks cause the XML parser or LINQ to XML to consume excessive amounts of memory or CPU time.</source>
          <target state="translated">拒绝服务攻击会导致 XML 分析器或 LINQ to XML 消耗过多的内存或 CPU 时间。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Denial of service attacks are considered to be less severe than elevation of privilege attacks or disclosure of data attacks.</source>
          <target state="translated">拒绝服务攻击的严重性可视为比特权提升攻击或数据泄露攻击的严重性低。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>However, they are important in a scenario where a server needs to process XML documents from untrusted sources.</source>
          <target state="translated">但在服务器需要处理来自不受信任的源的 XML 文档的方案中，拒绝服务攻击很重要。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Exceptions and Error Messages Might Reveal Data</source>
          <target state="translated">异常和错误消息可能会泄露数据</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The description of an error might reveal data, such as the data being transformed, file names, or implementation details.</source>
          <target state="translated">错误说明中可能会显示数据，如正在转换的数据、文件名或实现详细信息。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Error messages should not be exposed to callers that are not trusted.</source>
          <target state="translated">不应向不受信任的调用方公开错误消息。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>You should catch all errors and report errors with your own custom error messages.</source>
          <target state="translated">您应该捕捉所有错误并用自己的自定义错误消息报告错误。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Do Not Call CodeAccessPermissions.Assert in an Event Handler</source>
          <target state="translated">不要在事件处理程序中调用 CodeAccessPermissions.Assert</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An assembly can have lesser or greater permissions.</source>
          <target state="translated">程序集可具有较低或较高的权限。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An assembly that has greater permissions has greater control over the computer and its environments.</source>
          <target state="translated">程序集的权限越高，其对计算机及其环境的控制程度也就越高。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If code in an assembly with greater permissions calls &lt;xref:System.Security.CodeAccessPermission.Assert%2A?displayProperty=fullName&gt; in an event handler, and then the XML tree is passed to a malicious assembly that has restricted permissions, the malicious assembly can cause an event to be raised.</source>
          <target state="translated">如果具有较高权限的程序集中的代码调用&lt;xref:System.Security.CodeAccessPermission.Assert%2A?displayProperty=fullName&gt;中事件处理程序，然后将 XML 树传递给恶意程序集，具有受限制的权限，则恶意程序集可能会导致引发事件。&lt;/xref:System.Security.CodeAccessPermission.Assert%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Because the event runs code that is in the assembly with greater permissions, the malicious assembly would then be operating with elevated privileges.</source>
          <target state="translated">由于该事件运行具有较高权限的程序集中的代码，因此恶意程序集将使用提升的特权运行。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Microsoft recommends that you never call &lt;xref:System.Security.CodeAccessPermission.Assert%2A?displayProperty=fullName&gt; in an event handler.</source>
          <target state="translated">Microsoft 建议您永远不会调用&lt;xref:System.Security.CodeAccessPermission.Assert%2A?displayProperty=fullName&gt;事件处理程序中。&lt;/xref:System.Security.CodeAccessPermission.Assert%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>DTDs are Not Secure</source>
          <target state="translated">DTD 不安全</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Entities in DTDs are inherently not secure.</source>
          <target state="translated">DTD 中的实体在本质上就不安全。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>It is possible for a malicious XML document that contains a DTD to cause the parser to use all memory and CPU time, causing a denial of service attack.</source>
          <target state="translated">包含 DTD 的恶意 XML 文档可使分析器使用全部内存和 CPU 时间，从而导致拒绝服务攻击。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Therefore, in LINQ to XML, DTD processing is turned off by default.</source>
          <target state="translated">因此，在 LINQ to XML 中，默认情况下关闭 DTD 处理。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>You should not accept DTDs from untrusted sources.</source>
          <target state="translated">您不应接受来自不受信任源的 DTD。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>One example of accepting DTDs from untrusted sources is a Web application that allows Web users to upload an XML file that references a DTD and a DTD file.</source>
          <target state="translated">接受来自不受信任源的 DTD 的一个示例是：允许 Web 用户上载引用 DTD 和 DTD 文件的 XML 文件的 Web 应用程序。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Upon validation of the file, a malicious DTD could execute a denial of service attack on your server.</source>
          <target state="translated">在验证该文件时，恶意 DTD 会在您的服务器上执行拒绝服务攻击。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Another example of accepting DTDs from untrusted sources is to reference a DTD on a network share that also allows anonymous FTP access.</source>
          <target state="translated">接受来自不受信任源的 DTD 的另一个示例是：引用网络共享上也允许匿名 FTP 访问的 DTD。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Avoid Excessive Buffer Allocation</source>
          <target state="translated">避免分配过多的缓冲区</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Application developers should be aware that extremely large data sources can lead to resource exhaustion and denial of service attacks.</source>
          <target state="translated">应用程序开发人员应该知道，过大的数据源可能导致资源耗尽和拒绝服务攻击。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>If a malicious user submits or uploads a very large XML document, it could cause LINQ to XML to consume excessive system resources.</source>
          <target state="translated">如果恶意用户提交或上载非常大的 XML 文档，则可能导致 LINQ to XML 使用过多的系统资源。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This can constitute a denial of service attack.</source>
          <target state="translated">这可能构成拒绝服务攻击。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>To prevent this, you can set the &lt;xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A?displayProperty=fullName&gt; property, and create a reader that is then limited in the size of document that it can load.</source>
          <target state="translated">若要避免此情形，您可以设置&lt;xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A?displayProperty=fullName&gt;属性，并创建一个读取器，然后限制在可以加载的文档的大小。&lt;/xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>You then use the reader to create the XML tree.</source>
          <target state="translated">然后使用该读取器创建 XML 树。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For example, if you know that the maximum expected size of your XML documents coming from an untrusted source will be less than 50K bytes, set &lt;xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A?displayProperty=fullName&gt; to 100,000.</source>
          <target state="translated">例如，如果您知道预计最大的来自不受信任的源 XML 文档的大小将会不超过 50k 字节，设置&lt;xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A?displayProperty=fullName&gt;为 100000。&lt;/xref:System.Xml.XmlReaderSettings.MaxCharactersInDocument%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This will not encumber your processing of XML documents, and at the same time it will mitigate denial of service threats where documents might be uploaded that would consume large amounts of memory.</source>
          <target state="translated">这不会妨碍您处理 XML 文档，同时还可在要上载的文档会使用大量内存的情况下缓解拒绝服务威胁。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Avoid Excess Entity Expansion</source>
          <target state="translated">避免过度扩展实体</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>One of the known denial of service attacks when using a DTD is a document that causes excessive entity expansion.</source>
          <target state="translated">使用 DTD 时的一种已知拒绝服务攻击是导致过度扩展实体的文档造成的。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>To prevent this, you can set the &lt;xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A?displayProperty=fullName&gt; property, and create a reader that is then limited in the number of characters that result from entity expansion.</source>
          <target state="translated">若要避免此情形，您可以设置&lt;xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A?displayProperty=fullName&gt;属性，并创建然后限制读取器中从扩展实体产生的字符数。&lt;/xref:System.Xml.XmlReaderSettings.MaxCharactersFromEntities%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>You then use the reader to create the XML tree.</source>
          <target state="translated">然后使用该读取器创建 XML 树。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Limit the Depth of the XML Hierarchy</source>
          <target state="translated">限制 XML 层次结构的深度</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>One possible denial of service attack is when a document is submitted that has excessive depth of hierarchy.</source>
          <target state="translated">在提交具有过深层次结构的文档时，会发生一种可能的拒绝服务攻击。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>To prevent this, you can wrap a &lt;xref:System.Xml.XmlReader&gt; in your own class that counts the depth of elements.</source>
          <target state="translated">若要避免此情形，您可以将包装&lt;xref:System.Xml.XmlReader&gt;在您自己的可计算元素深度的类。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If the depth exceeds a predetermined reasonable level, you can terminate the processing of the malicious document.</source>
          <target state="translated">如果深度超过预设的合理等级，您可以终止处理恶意文档。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Protect Against Untrusted XmlReader or XmlWriter Implementations</source>
          <target state="translated">防止不受信任的 XmlReader 或 XmlWriter 实现</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Administrators should verify that any externally supplied &lt;xref:System.Xml.XmlReader&gt; or &lt;xref:System.Xml.XmlWriter&gt; implementations have strong names and have been registered in the machine configuration.</source>
          <target state="translated">管理员应验证任何外部提供&lt;xref:System.Xml.XmlReader&gt;或&lt;xref:System.Xml.XmlWriter&gt;实现具有强名称且已在计算机配置中注册。&lt;/xref:System.Xml.XmlWriter&gt; &lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This prevents malicious code masquerading as a reader or writer from being loaded.</source>
          <target state="translated">这可防止加载伪装成读取器或编写器的恶意代码。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Periodically Free Objects that Reference XName</source>
          <target state="translated">定期释放引用 XName 的对象</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>To protect against certain kinds of attacks, application programmers should free all objects that reference an &lt;xref:System.Xml.Linq.XName&gt; object in the application domain on a regular basis.</source>
          <target state="translated">若要防止某些类型的攻击，应用程序程序员应当释放引用的所有对象&lt;xref:System.Xml.Linq.XName&gt;规律地定期应用程序域中的对象。&lt;/xref:System.Xml.Linq.XName&gt;</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Protect Against Random XML Names</source>
          <target state="translated">防止随机 XML 名称</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Applications that take data from untrusted sources should consider using an &lt;xref:System.Xml.XmlReader&gt; that is wrapped in custom code to inspect for the possibility of random XML names and namespaces.</source>
          <target state="translated">不受信任源中获取数据的应用程序应考虑使用&lt;xref:System.Xml.XmlReader&gt;包装在自定义代码来检查是否可能会出现随机 XML 名称和命名空间。&lt;/xref:System.Xml.XmlReader&gt;</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If such random XML names and namespaces are detected, the application can then terminate the processing of the malicious document.</source>
          <target state="translated">如果检测到这样的随机 XML 名称和命名空间，则应用程序可以终止处理恶意文档。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>You might want to limit the number of names in any given namespace (including names in no namespace) to a reasonable limit.</source>
          <target state="translated">您可能需要将任何给定命名空间中的名称数目（包括不在命名空间中的名称）限制为合理的极限。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Annotations Are Accessible by Software Components that Share a LINQ to XML Tree</source>
          <target state="translated">通过共享 LINQ to XML 树的软件组件可以访问批注</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>LINQ to XML could be used to build processing pipelines in which different application components load, validate, query, transform, update, and save XML data that is passed between components as XML trees.</source>
          <target state="translated">LINQ to XML 可用于生成处理管道，其中的不同应用程序组件可分别加载、验证、查询、转换、更新和保存在组件之间作为 XML 树传递的 XML 数据。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This can help optimize performance, because the overhead of loading and serializing objects to XML text is done only at the ends of the pipeline.</source>
          <target state="translated">这有助于优化性能，因为仅在管道末端消耗加载对象并将对象序列化为 XML 文本的系统资源。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Developers must be aware, however, that all annotations and event handlers created by one component are accessible to other components.</source>
          <target state="translated">但开发人员必须知道，由一个组件创建的所有批注和事件处理程序都可以由其他组件访问。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>This can create a number of vulnerabilities if the components have different levels of trust.</source>
          <target state="translated">如果组件的信任级别不同，这可能会造成很多安全漏洞。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>To build secure pipelines across less trusted components, you must serialize LINQ to XML objects to XML text before passing the data to an untrusted component.</source>
          <target state="translated">若要在低信任级别的组件之间生成安全管道，在将数据传递给不受信任的组件之前，您必须将 LINQ to XML 对象序列化为 XML 文本。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Some security is provided by the common language runtime (CLR).</source>
          <target state="translated">某些安全功能是由公共语言运行库 (CLR) 提供的。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For example, a component that does not include a private class cannot access annotations keyed by that class.</source>
          <target state="translated">例如，不包括私有类的组件无法访问由该类键控的批注。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>However, annotations can be deleted by components that cannot read them.</source>
          <target state="translated">但是，不能读取批注的组件却可以删除该批注。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>This could be used as a tampering attack.</source>
          <target state="translated">这可能用作篡改攻击。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Programming Guide (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/programming-guide-linq-to-xml.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>编程指南 (LINQ to XML) (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/programming-guide-linq-to-xml.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>