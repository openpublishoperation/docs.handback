<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">abadaa8e035bfa4c92acc30ab633d6a7e958676c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\statements\parameter-list.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48b19eee5923a5ae5d891c4df7076fe3ec663448</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8444c2b74bf3f0e31802e82b82876a06e6f60998</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_parameter-list.e1208c3e226fbe46ece0e718685668e9e7d1dcaf.zh-cn is different with handoff file name: parameter-list.e1208c3e226fbe46ece0e718685668e9e7d1dcaf.zh-cn.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Parameter List (Visual Basic) | Microsoft Docs</source>
          <target state="translated">参数列表 (Visual Basic 中) |Microsoft 文档</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Parameter List (Visual Basic)</source>
          <target state="translated">参数列表 (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Specifies the parameters a procedure expects when it is called.</source>
          <target state="translated">指定过程需要被调用时的参数。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Multiple parameters are separated by commas.</source>
          <target state="translated">由逗号分隔多个参数。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The following is the syntax for one parameter.</source>
          <target state="translated">下面是一个参数的语法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">部件</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>List of attributes that apply to this parameter.</source>
          <target state="translated">将应用到此参数的属性列表。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>You must enclose the <bpt id="p1">[</bpt>Attribute List<ept id="p1">](../../../visual-basic/language-reference/statements/attribute-list.md)</ept> in angle brackets ("<ph id="ph1">`&lt;`</ph>" and "<ph id="ph2">`&gt;`</ph>").</source>
          <target state="translated">必须将括<bpt id="p1">[</bpt>属性列表<ept id="p1">](../../../visual-basic/language-reference/statements/attribute-list.md)</ept>在尖括号 ("<ph id="ph1">`&lt;`</ph>"和"<ph id="ph2">`&gt;`</ph>")。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Specifies that this parameter is not required when the procedure is called.</source>
          <target state="translated">指定此参数不需要调用该过程时。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Specifies that the procedure cannot replace or reassign the variable element underlying the corresponding argument in the calling code.</source>
          <target state="translated">指定该过程不能替换或重新分配下调用的代码中的对应参数的变量元素。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Specifies that the procedure can modify the underlying variable element in the calling code the same way the calling code itself can.</source>
          <target state="translated">指定该过程可以用相同的方式与调用代码本身可以修改调用代码中的基础变量元素。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Specifies that the last parameter in the parameter list is an optional array of elements of the specified data type.</source>
          <target state="translated">指定的参数列表中的最后一个参数是一个指定的数据类型的元素的可选数组。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This lets the calling code pass an arbitrary number of arguments to the procedure.</source>
          <target state="translated">这样将任意数量的参数传递给过程的调用代码。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Name of the local variable representing the parameter.</source>
          <target state="translated">表示参数的本地变量的名称。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Required if <ph id="ph1">`Option Strict`</ph> is <ph id="ph2">`On`</ph>.</source>
          <target state="translated">如果使用<ph id="ph1">`Option Strict`</ph>是<ph id="ph2">`On`</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Data type of the local variable representing the parameter.</source>
          <target state="translated">表示参数的本地变量的数据类型。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Required for <ph id="ph1">`Optional`</ph> parameters.</source>
          <target state="translated">所需的<ph id="ph1">`Optional`</ph>参数。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Any constant or constant expression that evaluates to the data type of the parameter.</source>
          <target state="translated">任何常量或常量表达式的计算结果为该参数的数据类型。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If the type is <ph id="ph1">`Object`</ph>, or a class, interface, array, or structure, the default value can only be <ph id="ph2">`Nothing`</ph>.</source>
          <target state="translated">如果类型为<ph id="ph1">`Object`</ph>，或类、 接口、 数组或结构，默认值只能是<ph id="ph2">`Nothing`</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">备注</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Parameters are surrounded by parentheses and separated by commas.</source>
          <target state="translated">参数是用括号括起来，并且用逗号隔开。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A parameter can be declared with any data type.</source>
          <target state="translated">可以使用任何数据类型声明参数。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If you do not specify <ph id="ph1">`parametertype`</ph>, it defaults to <ph id="ph2">`Object`</ph>.</source>
          <target state="translated">如果未指定<ph id="ph1">`parametertype`</ph>，它将默认为<ph id="ph2">`Object`</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>When the calling code calls the procedure, it passes an <bpt id="p1">*</bpt>argument<ept id="p1">*</ept> to each required parameter.</source>
          <target state="translated">当调用的代码调用该过程时，它将传递<bpt id="p1">*</bpt>参数<ept id="p1">*</ept>向每个所需的参数。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Differences Between Parameters and Arguments<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/differences-between-parameters-and-arguments.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>差异之间形参和实参<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/differences-between-parameters-and-arguments.md)</ept>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The argument the calling code passes to each parameter is a pointer to an underlying element in the calling code.</source>
          <target state="translated">调用代码将传递给每个参数的参数是指向中调用代码的基础元素的指针。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If this element is <bpt id="p1">*</bpt>nonvariable<ept id="p1">*</ept> (a constant, literal, enumeration, or expression), it is impossible for any code to change it.</source>
          <target state="translated">如果此元素为<bpt id="p1">*</bpt>不可变元素<ept id="p1">*</ept>（常量、 文字、 枚举或表达式），它是不可能将其更改任何代码。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>If it is a <bpt id="p1">*</bpt>variable<ept id="p1">*</ept> element (a declared variable, field, property, array element, or structure element), the calling code can change it.</source>
          <target state="translated">如果它是<bpt id="p1">*</bpt>变量<ept id="p1">*</ept>元素 （声明的变量、 字段、 属性、 数组元素或结构元素），调用代码可以对其进行更改。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Differences Between Modifiable and Nonmodifiable Arguments<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/differences-between-modifiable-and-nonmodifiable-arguments.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>差异之间可修改和不可修改参数<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/differences-between-modifiable-and-nonmodifiable-arguments.md)</ept>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>If a variable element is passed <ph id="ph1">`ByRef`</ph>, the procedure can change it as well.</source>
          <target state="translated">如果传递的变量元素<ph id="ph1">`ByRef`</ph>，该过程它也可以进行更改。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Differences Between Passing an Argument By Value and By Reference<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/differences-between-passing-an-argument-by-value-and-by-reference.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>差异之间传递的参数值和通过引用来<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/differences-between-passing-an-argument-by-value-and-by-reference.md)</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Rules</source>
          <target state="translated">规则</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Parentheses.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>括号。<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If you specify a parameter list, you must enclose it in parentheses.</source>
          <target state="translated">如果指定的参数列表，则必须将其括在括号中。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If there are no parameters, you can still use parentheses enclosing an empty list.</source>
          <target state="translated">如果没有任何参数，您仍然可以使用括号内包含一个空列表。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This improves the readability of your code by clarifying that the element is a procedure.</source>
          <target state="translated">这将通过清晰化元素一个过程提高代码的可读性。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Optional Parameters.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>可选参数。<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>If you use the <ph id="ph1">`Optional`</ph> modifier on a parameter, all subsequent parameters in the list must also be optional and be declared by using the <ph id="ph2">`Optional`</ph> modifier.</source>
          <target state="translated">如果您使用<ph id="ph1">`Optional`</ph>参数修饰符，列表中的所有后续参数也必须为可选和使用声明<ph id="ph2">`Optional`</ph>修饰符。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Every optional parameter declaration must supply the <ph id="ph1">`defaultvalue`</ph> clause.</source>
          <target state="translated">每个可选参数声明必须提供<ph id="ph1">`defaultvalue`</ph>子句。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Optional Parameters<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/optional-parameters.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>可选参数<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/optional-parameters.md)</ept>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Parameter Arrays.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>参数数组。<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>You must specify <ph id="ph1">`ByVal`</ph> for a <ph id="ph2">`ParamArray`</ph> parameter.</source>
          <target state="translated">必须指定<ph id="ph1">`ByVal`</ph>为<ph id="ph2">`ParamArray`</ph>参数。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>You cannot use both <ph id="ph1">`Optional`</ph> and <ph id="ph2">`ParamArray`</ph> in the same parameter list.</source>
          <target state="translated">您不能同时使用<ph id="ph1">`Optional`</ph>和<ph id="ph2">`ParamArray`</ph>在相同的参数列表中。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Parameter Arrays<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/parameter-arrays.md)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>参数数组<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/parameter-arrays.md)</ept>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Passing Mechanism.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>传递机制。<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default mechanism for every argument is <ph id="ph1">`ByVal`</ph>, which means the procedure cannot change the underlying variable element.</source>
          <target state="translated">每个参数的默认机制是<ph id="ph1">`ByVal`</ph>，这意味着该过程不能更改基础变量元素。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>However, if the element is a reference type, the procedure can modify the contents or members of the underlying object, even though it cannot replace or reassign the object itself.</source>
          <target state="translated">但是，如果该元素是引用类型，该过程可以修改内容或成员的基础对象，即使它不能替换或重新分配对象本身。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Parameter Names.<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>参数名称。<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If the parameter's data type is an array, follow <ph id="ph1">`parametername`</ph> immediately by parentheses.</source>
          <target state="translated">如果参数的数据类型是一个数组，请按照<ph id="ph1">`parametername`</ph>紧跟括号。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>For more information on parameter names, see <bpt id="p1">[</bpt>Declared Element Names<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.</source>
          <target state="translated">参数名称的详细信息，请参阅<bpt id="p1">[</bpt>声明元素名称<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The following example shows a <ph id="ph1">`Function`</ph> procedure that defines two parameters.</source>
          <target state="translated">下面的示例演示<ph id="ph1">`Function`</ph>定义两个参数的过程。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#2<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/parameter-list_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;2;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/parameter-list_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;</source>
          <target state="translated">&lt;xref:System.Runtime.InteropServices.DllImportAttribute&gt;&lt;/xref:System.Runtime.InteropServices.DllImportAttribute&gt;</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Function Statement<ept id="p1">](../../../visual-basic/language-reference/statements/function-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Function 语句<ept id="p1">](../../../visual-basic/language-reference/statements/function-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Sub Statement<ept id="p1">](../../../visual-basic/language-reference/statements/sub-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Sub 语句<ept id="p1">](../../../visual-basic/language-reference/statements/sub-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Declare Statement<ept id="p1">](../../../visual-basic/language-reference/statements/declare-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Declare 语句<ept id="p1">](../../../visual-basic/language-reference/statements/declare-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Structure Statement<ept id="p1">](../../../visual-basic/language-reference/statements/structure-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Structure 语句<ept id="p1">](../../../visual-basic/language-reference/statements/structure-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Option Strict Statement<ept id="p1">](../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Option Strict 语句<ept id="p1">](../../../visual-basic/language-reference/statements/option-strict-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Attributes overview<ept id="p1">](../../../visual-basic/programming-guide/concepts/attributes/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>属性概述<ept id="p1">](../../../visual-basic/programming-guide/concepts/attributes/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Break and Combine Statements in Code<ept id="p1">](../../../visual-basic/programming-guide/program-structure/how-to-break-and-combine-statements-in-code.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>如何：在代码中拆分和合并语句<ept id="p1">](../../../visual-basic/programming-guide/program-structure/how-to-break-and-combine-statements-in-code.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>