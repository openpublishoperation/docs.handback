<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">059b1347c4a35b896f5aa19cadb28fbceb8b25c9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\statements\raiseevent-statement.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7964dc18dc3e82f623e9dbc1db790ccdf42feb01</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3b60fd47194322e7bd8d14aab5e3097706d483a</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_raiseevent-statement.86b43ac4b03f5c76c34170732c7407d1ac9ccb00.zh-cn is different with handoff file name: raiseevent-statement.86b43ac4b03f5c76c34170732c7407d1ac9ccb00.zh-cn.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>RaiseEvent Statement | Microsoft Docs</source>
          <target state="translated">RaiseEvent 语句 |Microsoft 文档</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>RaiseEvent Statement</source>
          <target state="translated">RaiseEvent 语句</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Triggers an event declared at module level within a class, form, or document.</source>
          <target state="translated">触发器在类、 表单或文档中的模块级别声明的事件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">语法</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">部件</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必需。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Name of the event to trigger.</source>
          <target state="translated">要触发的事件的名称。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">可选。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Comma-delimited list of variables, arrays, or expressions.</source>
          <target state="translated">以逗号分隔的变量、 数组或表达式列表。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`argumentlist`</ph> argument must be enclosed by parentheses.</source>
          <target state="translated"><ph id="ph1">`argumentlist`</ph>参数必须用括号括起来。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If there are no arguments, the parentheses must be omitted.</source>
          <target state="translated">如果不有任何参数，则必须省略括号。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">备注</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The required <ph id="ph1">`eventname`</ph> is the name of an event declared within the module.</source>
          <target state="translated">所需<ph id="ph1">`eventname`</ph>模块中声明的事件名称。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>It follows Visual Basic variable naming conventions.</source>
          <target state="translated">它遵循 Visual Basic 变量命名规则。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the event has not been declared within the module in which it is raised, an error occurs.</source>
          <target state="translated">如果尚未在其中将引发此事件的模块内声明该事件，就会出错。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The following code fragment illustrates an event declaration and a procedure in which the event is raised.</source>
          <target state="translated">下面的代码段演示了一个事件声明和引发该事件的过程。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents#37<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/raiseevent-statement_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents #&amp;37;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/raiseevent-statement_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>You cannot use <ph id="ph1">`RaiseEvent`</ph> to raise events that are not explicitly declared in the module.</source>
          <target state="translated">不能使用<ph id="ph1">`RaiseEvent`</ph>引发未在模块中显式声明的事件。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>For example, all forms inherit a &lt;xref:System.Windows.Forms.Control.Click&gt; event from &lt;xref:System.Windows.Forms.Form?displayProperty=fullName&gt;, it cannot be raised using <ph id="ph1">`RaiseEvent`</ph> in a derived form.</source>
          <target state="translated">例如，所有窗体继承&lt;xref:System.Windows.Forms.Control.Click&gt;来自事件&lt;xref:System.Windows.Forms.Form?displayProperty=fullName&gt;，不能提升使用<ph id="ph1">`RaiseEvent`</ph>派生窗体中。&lt;/xref:System.Windows.Forms.Form?displayProperty=fullName&gt; &lt;/xref:System.Windows.Forms.Control.Click&gt;</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you declare a <ph id="ph1">`Click`</ph> event in the form module, it shadows the form's own &lt;xref:System.Windows.Forms.Control.Click&gt; event.</source>
          <target state="translated">如果您声明<ph id="ph1">`Click`</ph>事件在窗体模块中，它将隐藏窗体自身的&lt;xref:System.Windows.Forms.Control.Click&gt;事件。&lt;/xref:System.Windows.Forms.Control.Click&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can still invoke the form's &lt;xref:System.Windows.Forms.Control.Click&gt; event by calling the &lt;xref:System.Windows.Forms.Control.OnClick%2A&gt; method.</source>
          <target state="translated">还可调用窗体的&lt;xref:System.Windows.Forms.Control.Click&gt;事件通过调用&lt;xref:System.Windows.Forms.Control.OnClick%2A&gt;方法。&lt;/xref:System.Windows.Forms.Control.OnClick%2A&gt; &lt;/xref:System.Windows.Forms.Control.Click&gt;</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>By default, an event defined in Visual Basic raises its event handlers in the order that the connections are established.</source>
          <target state="translated">默认情况下，在 Visual Basic 中定义的事件引发其事件处理程序建立的连接顺序。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Because events can have <ph id="ph1">`ByRef`</ph> parameters, a process that connects late may receive parameters that have been changed by an earlier event handler.</source>
          <target state="translated">由于事件可以具有<ph id="ph1">`ByRef`</ph>参数，晚期连接的进程可能会收到较早的事件处理程序已更改的参数。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>After the event handlers execute, control is returned to the subroutine that raised the event.</source>
          <target state="translated">事件处理程序执行后，控制权就会归还引发事件的子例程。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Non-shared events should not be raised within the constructor of the class in which they are declared.</source>
          <target state="translated">非共享事件应该不会出现声明它们的类的构造函数内。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Although such events do not cause run-time errors, they may fail to be caught by associated event handlers.</source>
          <target state="translated">尽管此类事件不会导致运行时错误，但它们可能无法由关联的事件处理程序捕获。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`Shared`</ph> modifier to create a shared event if you need to raise an event from a constructor.</source>
          <target state="translated">使用<ph id="ph1">`Shared`</ph>修饰符来创建共享的事件，如果您需要从一个构造函数中引发事件。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You can change the default behavior of events by defining a custom event.</source>
          <target state="translated">通过定义自定义事件，可以更改事件的默认行为。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For custom events, the <ph id="ph1">`RaiseEvent`</ph> statement invokes the event's <ph id="ph2">`RaiseEvent`</ph> accessor.</source>
          <target state="translated">对于自定义事件<ph id="ph1">`RaiseEvent`</ph>语句调用的事件<ph id="ph2">`RaiseEvent`</ph>取值函数。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For more information on custom events, see <bpt id="p1">[</bpt>Event Statement<ept id="p1">](../../../visual-basic/language-reference/statements/event-statement.md)</ept>.</source>
          <target state="translated">自定义事件的详细信息，请参阅<bpt id="p1">[</bpt>Event 语句<ept id="p1">](../../../visual-basic/language-reference/statements/event-statement.md)</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The following example uses events to count down seconds from 10 to 0.</source>
          <target state="translated">下面的示例使用事件从 10 秒到 0 秒进行倒计时。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The code illustrates several of the event-related methods, properties, and statements, including the <ph id="ph1">`RaiseEvent`</ph> statement.</source>
          <target state="translated">代码阐释了几个与事件相关的方法、 属性和语句，其中包括<ph id="ph1">`RaiseEvent`</ph>语句。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The class that raises an event is the event source, and the methods that process the event are the event handlers.</source>
          <target state="translated">引发事件的类是事件源，处理事件的方法是事件处理程序。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An event source can have multiple handlers for the events it generates.</source>
          <target state="translated">事件源对于它生成的事件可以具有多个处理程序。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>When the class raises the event, that event is raised on every class that has elected to handle events for that instance of the object.</source>
          <target state="translated">类引发事件时，会在选择用于为对象的该实例处理事件的每个类上引发该事件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The example also uses a form (<ph id="ph1">`Form1`</ph>) with a button (<ph id="ph2">`Button1`</ph>) and a text box (<ph id="ph3">`TextBox1`</ph>).</source>
          <target state="translated">该示例还使用一个窗体 (<ph id="ph1">`Form1`</ph>)，其中包含一个按钮 (<ph id="ph2">`Button1`</ph>) 和一个文本框 (<ph id="ph3">`TextBox1`</ph>)。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>When you click the button, the first text box displays a countdown from 10 to 0 seconds.</source>
          <target state="translated">单击该按钮时，第一个文本框显示从 10 秒到 0 秒的倒计时。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When the full time (10 seconds) has elapsed, the first text box displays "Done".</source>
          <target state="translated">经过了全部时间（10 秒）之后，第一个文本框会显示“Done”。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The code for <ph id="ph1">`Form1`</ph> specifies the initial and terminal states of the form.</source>
          <target state="translated"><ph id="ph1">`Form1`</ph> 的代码指定窗体的初始和最终状态。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>It also contains the code executed when events are raised.</source>
          <target state="translated">它还包含引发事件时执行的代码。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>To use this example, open a new Windows Application project, add a button named <ph id="ph1">`Button1`</ph> and a text box named <ph id="ph2">`TextBox1`</ph> to the main form, named <ph id="ph3">`Form1`</ph>.</source>
          <target state="translated">若要使用此示例中，打开一个新的 Windows 应用程序项目，添加名为的按钮<ph id="ph1">`Button1`</ph>和一个名为文本框<ph id="ph2">`TextBox1`</ph>到主窗体中，名为<ph id="ph3">`Form1`</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Then right-click the form and click <bpt id="p1">**</bpt>View Code<ept id="p1">**</ept> to open the Code Editor.</source>
          <target state="translated">右键单击该表单，然后单击<bpt id="p1">**</bpt>查看代码<ept id="p1">**</ept>以打开代码编辑器。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Add a <ph id="ph1">`WithEvents`</ph> variable to the declarations section of the <ph id="ph2">`Form1`</ph> class.</source>
          <target state="translated">添加<ph id="ph1">`WithEvents`</ph>变量的声明部分<ph id="ph2">`Form1`</ph>类。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents#14<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/raiseevent-statement_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents #&amp;14;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/raiseevent-statement_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">示例</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Add the following code to the code for <ph id="ph1">`Form1`</ph>.</source>
          <target state="translated">将下面的代码添加到 <ph id="ph1">`Form1`</ph> 的代码：</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Replace any duplicate procedures that may exist, such as <ph id="ph1">`Form_Load`</ph>, or <ph id="ph2">`Button_Click`</ph>.</source>
          <target state="translated">替换任何重复的过程，可能存在，如<ph id="ph1">`Form_Load`</ph>，或<ph id="ph2">`Button_Click`</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents#15<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/raiseevent-statement_3.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrEvents #&amp;15;<ept id="p2">](../../../visual-basic/language-reference/statements/codesnippet/VisualBasic/raiseevent-statement_3.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Press F5 to run the preceding example, and click the button labeled <bpt id="p1">**</bpt>Start<ept id="p1">**</ept>.</source>
          <target state="translated">按 f5 键以运行前面的示例中，然后单击标记为按钮<bpt id="p1">**</bpt>启动<ept id="p1">**</ept>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The first text box starts to count down the seconds.</source>
          <target state="translated">第一个文本框中开始倒计时秒数。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When the full time (10 seconds) has elapsed, the first text box displays "Done".</source>
          <target state="translated">经过了全部时间（10 秒）之后，第一个文本框会显示“Done”。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`My.Application.DoEvents`</ph> method does not process events in exactly the same way as the form does.</source>
          <target state="translated"><ph id="ph1">`My.Application.DoEvents`</ph>窗体一样方法不完全相同的方式处理事件。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>To allow the form to handle the events directly, you can use multithreading.</source>
          <target state="translated">若要使表单能够直接处理事件，可以使用多线程处理。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Threading<ept id="p1">](http://msdn.microsoft.com/library/552f6c68-dbdb-4327-ae36-32cf9063d88c)</ept>.</source>
          <target state="translated">有关详细信息，请参阅<bpt id="p1">[</bpt>线程处理<ept id="p1">](http://msdn.microsoft.com/library/552f6c68-dbdb-4327-ae36-32cf9063d88c)</ept>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Events<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>事件<ept id="p1">](../../../visual-basic/programming-guide/language-features/events/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Event Statement<ept id="p1">](../../../visual-basic/language-reference/statements/event-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Event 语句<ept id="p1">](../../../visual-basic/language-reference/statements/event-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>AddHandler Statement<ept id="p1">](../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>AddHandler 语句<ept id="p1">](../../../visual-basic/language-reference/statements/addhandler-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>RemoveHandler Statement<ept id="p1">](../../../visual-basic/language-reference/statements/removehandler-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>RemoveHandler 语句<ept id="p1">](../../../visual-basic/language-reference/statements/removehandler-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Handles<ept id="p1">](../../../visual-basic/language-reference/statements/handles-clause.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>句柄<ept id="p1">](../../../visual-basic/language-reference/statements/handles-clause.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>