<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31111b23adb019aad3ad55787c073dc02446291d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\xdocument-class-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d6f5b75b5c96f78d5c0aa2be3fe368385f26440f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e8b9370b09566fd5ab6ec9dd58271e0162efebe</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_xdocument-class-overview.9fee52f485649d6ad221260c48ab3e0ff06de109.zh-cn is different with handoff file name: xdocument-class-overview.9fee52f485649d6ad221260c48ab3e0ff06de109.zh-cn.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>XDocument Class Overview (Visual Basic) | Microsoft Docs</source>
          <target state="translated">XDocument 类概述 (Visual Basic 中) |Microsoft 文档</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>XDocument Class Overview (Visual Basic)</source>
          <target state="translated">XDocument 类概述 (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic introduces the &lt;xref:System.Xml.Linq.XDocument&gt; class.</source>
          <target state="translated">本主题介绍了&lt;xref:System.Xml.Linq.XDocument&gt;类。&lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Overview of the XDocument class</source>
          <target state="translated">XDocument 类概述</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Linq.XDocument&gt; class contains the information necessary for a valid XML document.</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XDocument&gt;类包含有效的 XML 文档所需的信息。&lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>This includes an XML declaration, processing instructions, and comments.</source>
          <target state="translated">其中包括 XML 声明、处理指令和注释。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Note that you only have to create &lt;xref:System.Xml.Linq.XDocument&gt; objects if you require the specific functionality provided by the &lt;xref:System.Xml.Linq.XDocument&gt; class.</source>
          <target state="translated">请注意，您只需创建&lt;xref:System.Xml.Linq.XDocument&gt;对象，如果您需要的特定功能，提供的&lt;xref:System.Xml.Linq.XDocument&gt;类。&lt;/xref:System.Xml.Linq.XDocument&gt; &lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>In many circumstances, you can work directly with &lt;xref:System.Xml.Linq.XElement&gt;.</source>
          <target state="translated">在许多情况下，您可以直接使用&lt;xref:System.Xml.Linq.XElement&gt;。&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Working directly with &lt;xref:System.Xml.Linq.XElement&gt; is a simpler programming model.</source>
          <target state="translated">直接使用&lt;xref:System.Xml.Linq.XElement&gt;是更简单的编程模型。&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Linq.XDocument&gt; derives from &lt;xref:System.Xml.Linq.XContainer&gt;.</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XDocument&gt;派生自&lt;xref:System.Xml.Linq.XContainer&gt;。&lt;/xref:System.Xml.Linq.XContainer&gt;&lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Therefore, it can contain child nodes.</source>
          <target state="translated">因此，它可以包含子节点。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>However, &lt;xref:System.Xml.Linq.XDocument&gt; objects can have only one child &lt;xref:System.Xml.Linq.XElement&gt; node.</source>
          <target state="translated">但是，&lt;xref:System.Xml.Linq.XDocument&gt;对象只能有一个子&lt;xref:System.Xml.Linq.XElement&gt;节点。&lt;/xref:System.Xml.Linq.XElement&gt; &lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This reflects the XML standard that there can be only one root element in an XML document.</source>
          <target state="translated">这反映了 XML 标准，即在 XML 文档中只能有一个根元素。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Components of XDocument</source>
          <target state="translated">Xdocument 的组件</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An &lt;xref:System.Xml.Linq.XDocument&gt; can contain the following elements:</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XDocument&gt;可以包含下列元素︰&lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>One &lt;xref:System.Xml.Linq.XDeclaration&gt; object.</source>
          <target state="translated">一个&lt;xref:System.Xml.Linq.XDeclaration&gt;对象。&lt;/xref:System.Xml.Linq.XDeclaration&gt;</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Xml.Linq.XDeclaration&gt; enables you to specify the pertinent parts of an XML declaration: the XML version, the encoding of the document, and whether the XML document is stand-alone.</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XDeclaration&gt;使您能够指定 XML 声明的相关部分︰ XML 版本、 文档的编码和 XML 文档是否是独立。&lt;/xref:System.Xml.Linq.XDeclaration&gt;</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>One &lt;xref:System.Xml.Linq.XElement&gt; object.</source>
          <target state="translated">一个&lt;xref:System.Xml.Linq.XElement&gt;对象。&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This is the root node of the XML document.</source>
          <target state="translated">这是 XML 文档的根节点。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Any number of &lt;xref:System.Xml.Linq.XProcessingInstruction&gt; objects.</source>
          <target state="translated">任意数量的&lt;xref:System.Xml.Linq.XProcessingInstruction&gt;对象。&lt;/xref:System.Xml.Linq.XProcessingInstruction&gt;</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A processing instruction communicates information to an application that processes the XML.</source>
          <target state="translated">处理指令将信息传递给处理 XML 的应用程序。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Any number of &lt;xref:System.Xml.Linq.XComment&gt; objects.</source>
          <target state="translated">任意数量的&lt;xref:System.Xml.Linq.XComment&gt;对象。&lt;/xref:System.Xml.Linq.XComment&gt;</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The comments will be siblings to the root element.</source>
          <target state="translated">注释将与根元素同级。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The &lt;xref:System.Xml.Linq.XComment&gt; object cannot be the first argument in the list, because it is not valid for an XML document to start with a comment.</source>
          <target state="translated">&lt;xref:System.Xml.Linq.XComment&gt;对象不能为在列表中，第一个参数，因为它与 XML 文档以注释开头无效。&lt;/xref:System.Xml.Linq.XComment&gt;</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>One &lt;xref:System.Xml.Linq.XDocumentType&gt; for the DTD.</source>
          <target state="translated">一个&lt;xref:System.Xml.Linq.XDocumentType&gt;的 dtd。&lt;/xref:System.Xml.Linq.XDocumentType&gt;</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When you serialize an &lt;xref:System.Xml.Linq.XDocument&gt;, even if <ph id="ph1">`XDocument.Declaration`</ph> is <ph id="ph2">`null`</ph>, the output will have an XML declaration if the writer has <ph id="ph3">`Writer.Settings.OmitXmlDeclaration`</ph> set to <ph id="ph4">`false`</ph> (the default).</source>
          <target state="translated">当序列化&lt;xref:System.Xml.Linq.XDocument&gt;，即使<ph id="ph1">`XDocument.Declaration`</ph>是<ph id="ph2">`null`</ph>，输出将具有 XML 声明，前提是编写器已经<ph id="ph3">`Writer.Settings.OmitXmlDeclaration`</ph>设置为<ph id="ph4">`false`</ph>（默认值）。&lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>By default, <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> sets the version to "1.0", and sets the encoding to "utf-8".</source>
          <target state="translated">默认情况下，<ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> 将版本设置为“1.0”，将编码设置为“utf-8”。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Using XElement without XDocument</source>
          <target state="translated">在没有 Xdocument 的情况下使用 XElement</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>As previously mentioned, the &lt;xref:System.Xml.Linq.XElement&gt; class is the main class in the <ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph> programming interface.</source>
          <target state="translated">正如前面提到，&lt;xref:System.Xml.Linq.XElement&gt;类是中的主类<ph id="ph1">[!INCLUDE[sqltecxlinq](../../../../csharp/programming-guide/concepts/linq/includes/sqltecxlinq_md.md)]</ph>编程接口。&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In many cases, your application will not require that you create a document.</source>
          <target state="translated">在很多情况下，您的应用程序不需要您创建文档。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>By using the &lt;xref:System.Xml.Linq.XElement&gt; class, you can create an XML tree, add other XML trees to it, modify the XML tree, and save it.</source>
          <target state="translated">通过使用&lt;xref:System.Xml.Linq.XElement&gt;类，可以创建 XML 树、 向其中添加其他 XML 树，修改 XML 树中，和保存它。&lt;/xref:System.Xml.Linq.XElement&gt;</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Using XDocument</source>
          <target state="translated">使用 XDocument</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>To construct an &lt;xref:System.Xml.Linq.XDocument&gt;, use functional construction, just like you do to construct &lt;xref:System.Xml.Linq.XElement&gt; objects.</source>
          <target state="translated">若要构造&lt;xref:System.Xml.Linq.XDocument&gt;，使用函数构造，像您那样来构造&lt;xref:System.Xml.Linq.XElement&gt;对象。&lt;/xref:System.Xml.Linq.XElement&gt; &lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The following code creates an &lt;xref:System.Xml.Linq.XDocument&gt; object and its associated contained objects.</source>
          <target state="translated">下面的代码创建&lt;xref:System.Xml.Linq.XDocument&gt;对象及其关联的包含对象。&lt;/xref:System.Xml.Linq.XDocument&gt;</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When you examine the file test.xml, you get the following output:</source>
          <target state="translated">当你检查文件 test.xml 时, 会得到以下输出：</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另请参阅</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>LINQ to XML Programming Overview (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-programming-overview.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>LINQ to XML 编程概述 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-programming-overview.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>