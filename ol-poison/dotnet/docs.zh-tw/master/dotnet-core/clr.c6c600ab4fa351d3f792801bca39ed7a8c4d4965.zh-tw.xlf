<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">779b4bc43465833fa92e85d42156a232f390f7c2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\standard\clr.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p2</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">58d1482c26521e9bd42709329d2fd6453d5bc197</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a056ebaf7e3d15383eefc9a8806808489b75153c</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">file clr.c6c600ab4fa351d3f792801bca39ed7a8c4d4965.zh-tw.xlf is out of handoff scope</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Common Language Runtime (CLR)</source>
          <target state="translated">Common Language Runtime (CLR)</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Common Language Runtime (CLR)</source>
          <target state="translated">Common Language Runtime (CLR)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Common Language Runtime (CLR)</source>
          <target state="translated">Common Language Runtime (CLR)</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The .NET Framework provides a run-time environment called the common language runtime, which runs the code and provides services that make the development process easier.</source>
          <target state="translated">.NET Framework 提供稱為 Common Language Runtime 的執行階段環境，它能執行程式碼，並提供使程式開發過程更為容易的服務。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Compilers and tools expose the common language runtime's functionality and enable you to write code that benefits from this managed execution environment.</source>
          <target state="translated">編譯器和工具會公開 Common Language Runtime 的功能，並且可以讓您撰寫從這個 Managed 執行環境獲益的程式碼。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Code that you develop with a language compiler that targets the runtime is called managed code; it benefits from features such as cross-language integration, cross-language exception handling, enhanced security, versioning and deployment support, a simplified model for component interaction, and debugging and profiling services.</source>
          <target state="translated">以 Runtime 為目標的語言編譯器所開發的程式碼稱為 Managed 程式碼；它可因某些功能而得到改進，例如跨程式語言整合、跨程式語言例外狀況處理 (Exception Handling)、增強的安全性、版本控制和部署支援、元件互動的簡化模型，以及偵錯和設定檔服務。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Compilers and tools are able to produce output that the common language runtime can consume because the type system, the format of metadata, and the runtime environment (the virtual execution system) are all defined by a public standard, the ECMA Common Language Infrastructure specification.</source>
          <target state="translated">編譯器和工具能夠產生 Common Language Runtime 可以使用的輸出，因為類型系統、中繼資料格式和執行階段環境 (虛擬執行系統) 都是以公用標準 ECMA 通用語言基礎結構規格來定義。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Specifications<ept id="p1">](https://www.visualstudio.com/en-us/mt639507)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱 <bpt id="p1">[</bpt>ECMA C# 和通用語言基礎結構規格<ept id="p1">](https://www.visualstudio.com/en-us/mt639507)</ept>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To enable the runtime to provide services to managed code, language compilers must emit metadata that describes the types, members, and references in your code.</source>
          <target state="translated">若要讓 Runtime 能夠提供服務給 Managed 程式碼，語言編譯器必須發出描述程式碼中型別、成員和參考的中繼資料。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Metadata is stored with the code; every loadable common language runtime portable executable (PE) file contains metadata.</source>
          <target state="translated">中繼資料是與程式碼一起儲存；每一個可載入的 Common Language Runtime 可移植執行檔 (PE) 都包含中繼資料。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The runtime uses metadata to locate and load classes, lay out instances in memory, resolve method invocations, generate native code, enforce security, and set run-time context boundaries.</source>
          <target state="translated">Runtime 使用中繼資料來找出並載入類別、配置記憶體中的執行個體 (Instance)、解析方法引動過程 (Method Invocation)、產生機器碼、強制使用安全性，和設定 Run-Time 內容界限 (Context Boundary)。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The runtime automatically handles object layout and manages references to objects, releasing them when they are no longer being used.</source>
          <target state="translated">Runtime 會自動處理物件配置和管理物件的參考，並在它們不再被使用時將它們釋出。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Objects whose lifetimes are managed in this way are called managed data.</source>
          <target state="translated">以這個方式管理存留期 (Lifetime) 的物件稱為 Managed 資料。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Garbage collection eliminates memory leaks as well as some other common programming errors.</source>
          <target state="translated">記憶體回收排除記憶體流失 (Memory Leak) 和其他常見的程式設計錯誤。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If your code is managed, you can use managed data, unmanaged data, or both managed and unmanaged data in your .NET Framework application.</source>
          <target state="translated">如果您的程式碼為 Managed，您可以在 .NET Framework 應用程式中使用 Managed 資料、Unmanaged 資料或兩者。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Because language compilers supply their own types, such as primitive types, you might not always know (or need to know) whether your data is being managed.</source>
          <target state="translated">由於語言編譯器提供它們自己的型別 (如基本型別)，您可能不一定知道 (或需要知道) 資料是否為 Managed。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The common language runtime makes it easy to design components and applications whose objects interact across languages.</source>
          <target state="translated">Common Language Runtime 使得設計其物件可跨語言互動的元件和應用程式更為容易。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Objects written in different languages can communicate with each other, and their behaviors can be tightly integrated.</source>
          <target state="translated">不同語言所撰寫的物件可以彼此通訊，而且它們的行為可以緊密整合。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For example, you can define a class and then use a different language to derive a class from your original class or call a method on the original class.</source>
          <target state="translated">例如，您可以定義一個類別，並接著使用不同語言從您的原始類別來衍生類別，或呼叫原始類別上的方法。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You can also pass an instance of a class to a method of a class written in a different language.</source>
          <target state="translated">您也可以傳遞類別的執行個體給不同語言撰寫的類別的方法。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This cross-language integration is possible because language compilers and tools that target the runtime use a common type system defined by the runtime, and they follow the runtime's rules for defining new types, as well as for creating, using, persisting, and binding to types.</source>
          <target state="translated">這個跨程式語言整合是可能的，因為以 Runtime 為目標的語言編譯器和工具會使用 Runtime 所定義的一般型別系統，而且它們會遵照 Runtime 的規則來定義新型別，以及建立、使用、保存 (Persist) 和繫結至型別。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>As part of their metadata, all managed components carry information about the components and resources they were built against.</source>
          <target state="translated">所有 Managed 元件都攜帶它們據以建置 (Build) 元件和資源的資訊，做為其中繼資料的一部分。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The runtime uses this information to ensure that your component or application has the specified versions of everything it needs, which makes your code less likely to break because of some unmet dependency.</source>
          <target state="translated">Runtime 使用這個資訊，確保元件或應用程式擁有其所需的一應俱全的指定版本，使程式碼較不可能因某些不符合的相依性而中斷。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Information about the types you define (and their dependencies) is stored with the code as metadata, making the tasks of component replication and removal much less complicated.</source>
          <target state="translated">若您定義的類型資訊 (和它們的相依性) 與程式碼一起儲存為中繼資料，會使元件複寫和移除的工作變得簡單許多。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Language compilers and tools expose the runtime's functionality in ways that are intended to be useful and intuitive to developers.</source>
          <target state="translated">語言編譯器和工具會以旨在對開發人員有用處而且直覺的方式，公開 Runtime 的功能。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This means that some features of the runtime might be more noticeable in one environment than in another.</source>
          <target state="translated">這意謂 Runtime 的一些功能在某個環境中可能比在另一個環境更值得注意。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>How you experience the runtime depends on which language compilers or tools you use.</source>
          <target state="translated">您如何感受 Runtime 取決於您使用哪一種語言編譯器或工具。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The runtime provides the following benefits:</source>
          <target state="translated">執行階段具有下列優點：</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The ability to easily use components developed in other languages.</source>
          <target state="translated">易於使用以其他語言開發的元件的能力。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Extensible types provided by a class library.</source>
          <target state="translated">類別庫 (Class Library) 提供的擴充式型別。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Language features such as inheritance, interfaces, and overloading for object-oriented programming.</source>
          <target state="translated">有利於物件導向程式設計的語言功能，例如介面、繼承和多載。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Support for explicit free threading that allows creation of multithreaded, scalable applications.</source>
          <target state="translated">支援明確無限制執行緒 (Free Threading)，允許建立具有多執行緒、可擴充的應用程式。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Support for structured exception handling.</source>
          <target state="translated">支援結構化例外狀況處理。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Support for custom attributes.</source>
          <target state="translated">支援自訂屬性。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Garbage collection.</source>
          <target state="translated">記憶體回收。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Use of delegates instead of function pointers for increased type safety and security.</source>
          <target state="translated">使用委派，而非會增加型別安全和安全性顧慮的函式指標。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Versions of the Common Language Runtime</source>
          <target state="translated">Common Language Runtime 的版本</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The version number of the .NET Framework doesn't necessarily correspond to the version number of the CLR it includes.</source>
          <target state="translated">.NET Framework 的版本號碼不一定對應於它包含的 CLR 版本號碼。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The following table shows how the two version numbers correlate.</source>
          <target state="translated">下表顯示這兩個版本號碼如何相互關聯。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>.NET Framework version</source>
          <target state="translated">.NET Framework 版本</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Includes CLR version</source>
          <target state="translated">包含的 CLR 版本</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>1.0</source>
          <target state="translated">1.0</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>1.0</source>
          <target state="translated">1.0</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>1.1</source>
          <target state="translated">1.1</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>1.1</source>
          <target state="translated">1.1</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>2.0</source>
          <target state="translated">2.0</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>2.0</source>
          <target state="translated">2.0</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>3.0</source>
          <target state="translated">3.0</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>2.0</source>
          <target state="translated">2.0</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>3.5</source>
          <target state="translated">3.5</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>2.0</source>
          <target state="translated">2.0</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>4.5 (including 4.5.1 and 4.5.2)</source>
          <target state="translated">4.5 (包括 4.5.1 和 4.5.2)</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>4.6 (including 4.6.1 and 4.6.2)</source>
          <target state="translated">4.6 (包括 4.6.1 和 4.6.2)</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>4</source>
          <target state="translated">4</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Automatic Memory Management<ept id="p1">](garbagecollection/index.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>自動管理記憶體<ept id="p1">](garbagecollection/index.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>