<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-6a73dd2" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f4f580a8287f371ff5cdc37b78e73b7329dca02</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\core\versions\index.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ht-p1</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b5037624484e633a5262969056c30933f776febf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab4b7b03e2d80dcce3797240e18146b05d8feeee</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">file index.b30cf6bccbcaf31708d07e58451f5973b2020242.zh-tw.xlf is out of handoff scope</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>.NET Core Versioning</source>
          <target state="translated">.NET Core 版本控制</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>.NET Core Versioning</source>
          <target state="translated">.NET Core 版本控制</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="translated">.NET, .NET Core</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>.NET Core Versioning</source>
          <target state="translated">.NET Core 版本控制</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>.NET Core is a platform of <bpt id="p1">[</bpt>NuGet packages<ept id="p1">](../packages.md)</ept>, of frameworks and distributed as a unit.</source>
          <target state="translated">.NET Core 是 <bpt id="p1">[</bpt>NuGet 套件<ept id="p1">](../packages.md)</ept>的平台架構，並且是作為一個單位來散發。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Each of these platform layers can be versioned separately for product agility and to accurately describe product changes.</source>
          <target state="translated">這些平台層級可個別建立版本以獲得產品的靈活度，並正確地描述產品變更。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>While there is significant versioning flexibility, there is a desire to version the platform as a unit to make the product easier to understand.</source>
          <target state="translated">雖然有顯著的版本控制彈性，還是會渴望將平台當做一個單位來建立版本，讓產品更容易了解。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The product is in some respects unique, being described and delivered via a package manager (NuGet) as packages.</source>
          <target state="translated">產品在某些方面是唯一的，透過封裝管理員 (NuGet) 以套件的方式來描述和傳遞。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>While you typically acquire .NET Core as a standalone SDK, the SDK is largely a convenience experience over NuGet packages and therefore not distinct from packages.</source>
          <target state="translated">雖然您通常會以獨立 SDK 形式取得 .NET Core，SDK 主要是 NuGet 套件的方便體驗，因此與套件並無不同。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>As a result, versioning is first and foremost in terms of packages and other versioning experiences follow from there.</source>
          <target state="translated">因此，就套件而言，版本控制是最先且最重要的，其他版本控制體驗則為其後續。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Semantic Versioning</source>
          <target state="translated">語意版本控制</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>.NET Core uses <bpt id="p1">[</bpt>Semantic Versioning (SemVer)<ept id="p1">](http://semver.org/)</ept>, adopting the use of major.minor.patch versioning, using the various parts of the version number to describe the degree and kind of change.</source>
          <target state="translated">.NET Core 使用<bpt id="p1">[</bpt>語意版本控制 (SemVer)<ept id="p1">](http://semver.org/)</ept>，並採用 major.minor.patch 版本控制，使用版本號碼的不同部分來描述變更的程度和類型。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The following versioning template is generally applied to .NET Core.</source>
          <target state="translated">下列版本控制範本通常會套用到 .NET Core。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>There are cases where it has been adapted to fit with existing versioning.</source>
          <target state="translated">在有些情況下，已經過調整以配合現有的版本控制。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>These cases are described later in this document.</source>
          <target state="translated">本文件稍後會說明這些情況。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>For example, frameworks are only intended to represent platform and API capabilities, which aligns with major/minor versioning.</source>
          <target state="translated">比方說，架構只用來代表平台和 API 功能，這與主要/次要版本控制一致。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Versioning Form</source>
          <target state="translated">版本控制格式</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>MAJOR.MINOR.PATCH[-PRERELEASE-BUILDNUMBER]</source>
          <target state="translated">MAJOR.MINOR.PATCH[-PRERELEASE-BUILDNUMBER]</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Decision Tree</source>
          <target state="translated">決策樹</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>MAJOR when:</source>
          <target state="translated">MAJOR 的時機︰</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>drop support for a platform</source>
          <target state="translated">捨棄平台的支援</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>adopt a newer MAJOR version of an existing dependency</source>
          <target state="translated">採用現有相依性的較新的 MAJOR 版本</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>disable a compatibility quirk off by default</source>
          <target state="translated">預設停用相容性實際關閉</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>MINOR when:</source>
          <target state="translated">MINOR 的時機︰</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>add public API surface area</source>
          <target state="translated">新增公用 API 介面區</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>add new behavior</source>
          <target state="translated">加入新行為</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>adopt a newer MINOR version of an existing dependency</source>
          <target state="translated">採用現有相依性的較新的 MINOR 版本</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>introduce a new dependency</source>
          <target state="translated">採用新的相依性</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>PATCH when:</source>
          <target state="translated">PATCH 的時機︰</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>make bug fixes</source>
          <target state="translated">進行 Bug 修正</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>add support for a newer platform</source>
          <target state="translated">新增對較新平台的支援</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>adopt a newer PATCH version of an existing dependency</source>
          <target state="translated">採用現有相依性的較新的 PATCH 版本</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>any other change (not otherwise captured)</source>
          <target state="translated">任何其他變更 (它處未擷取)</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When determining what to increment when there are multiple changes, choose the highest kind of change.</source>
          <target state="translated">在決定有多項變更時要遞增的項目時，請選擇最高的變更類型。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Versioning Scheme</source>
          <target state="translated">版本控制配置</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>.NET Core can be defined as and will version in the following way:</source>
          <target state="translated">.NET Core 可以下列方式定義，並且將如下進行版本控制︰</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A runtime and framework implementation, distributed as packages.</source>
          <target state="translated">執行階段和架構實作，以套件進行散發。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Each package is versioned independently, particularly for patch versioning.</source>
          <target state="translated">每個套件會獨立建立版本，尤其是修補程式版本控制。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A set of metapackages that reference fine-grained packages as a versioned unit.</source>
          <target state="translated">一組中繼套件，它們以建立版本的單位來參考細部的套件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Metapackages are versioned separately from packages.</source>
          <target state="translated">中繼套件與套件分開建立版本。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A set of frameworks (for example, <ph id="ph1">`netstandard`</ph>) that represent a progressively larger API set, described in a set of versioned snapshots.</source>
          <target state="translated">一組的架構 (例如，<ph id="ph1">`netstandard`</ph>)，它們代表逐漸變大的 API 集，而這是以一組已建立版本的快照集來描述。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Packages</source>
          <target state="translated">封裝</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Library packages evolve and version independently.</source>
          <target state="translated">程式庫套件會獨立演化及進行版本控制。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Packages that overlap with .NET Framework System.<ph id="ph1">\*</ph></source>
          <target state="translated">與 .NET Framework 系統重疊的套件。<ph id="ph1">\*</ph></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>assemblies typically use 4.x versions, aligning with the .NET Framework 4.x versioning (a historical choice).</source>
          <target state="translated">組件通常使用 4.x 版本，並與 .NET Framework 4.x 版本控制 (一個歷史選項) 一致。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Packages that do not overlap with the .NET Framework libraries (for example, <bpt id="p1">[</bpt>System.Reflection.Metadata<ept id="p1">](https://www.nuget.org/packages/System.Reflection.Metadata)</ept>) typically start at 1.0 and increment from there.</source>
          <target state="translated">不與 .NET Framework 程式庫重疊的套件 (比方說，<bpt id="p1">[</bpt>System.Reflection.Metadata<ept id="p1">](https://www.nuget.org/packages/System.Reflection.Metadata)</ept>) 通常從 1.0 開始，並從該處遞增。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The packages described by <bpt id="p1">[</bpt>NETStandard.Library<ept id="p1">](https://www.nuget.org/packages/NETStandard.Library)</ept> are treated specially due to being at the base of the platform.</source>
          <target state="translated"><bpt id="p1">[</bpt>NETStandard.Library<ept id="p1">](https://www.nuget.org/packages/NETStandard.Library)</ept> 所描述的套件會被特別處理，因為它們是平台的基底。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>NETStandard.Library packages will typically version as a set, since they have implementation-level dependencies between them.</source>
          <target state="translated">NETStandard.Library 套件通常會作為一個集合來進行版本控制，因為它們彼此之間有實作層級的相依性。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>APIs will only be added to NETStandard.Library packages as part of major or minor .NET Core releases, since doing so would require adding a new <ph id="ph1">`netstandard`</ph> version.</source>
          <target state="translated">API 將只會作為主要或次要 .NET Core 版本新增至 NETStandard.Library 套件，因為這樣做就必須新增新的 <ph id="ph1">`netstandard`</ph> 版本。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This is in addition to SemVer requirements.</source>
          <target state="translated">這是 SemVer 需求之外額外增加。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Metapackages</source>
          <target state="translated">中繼套件</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Versioning for .NET Core metapackages is based on the framework that they map to.</source>
          <target state="translated">.NET Core 中繼套件的版本控制是根據它們所對應的架構。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The metapackages adopt the highest version number of the framework (for example, netstandard1.6) it maps to in its package closure.</source>
          <target state="translated">中繼套件採用它在套件終止中對應到的架構最高版本號碼 (例如，netstandard1.6)。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The patch version for the metapackage is used to represent updates to the metapackage to reference updated packages.</source>
          <target state="translated">中繼套件的修補程式版本用來代表中繼套件的更新，以參考更新過的套件。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Patch versions will never include an updated framework version.</source>
          <target state="translated">修補程式版本將永遠不會包含更新的架構版本。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>As a result, the metapackages are not strictly SemVer compliant because their versioning scheme doesn't represent the degree of change in the underlying packages, but primarily the API level.</source>
          <target state="translated">因此，中繼套件並不與 SemVer 嚴格相容，因為其版本控制配置並不代表基礎套件中的變更程度，而是主要代表 API 層級。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>There are two primary metapackages for .NET Core.</source>
          <target state="translated">.NET Core 有兩個主要的中繼套件。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>NETStandard.Library<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>NETStandard.Library<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>v1.6 as of .NET Core 1.0 (these versions won't typically or intentionally match).</source>
          <target state="translated">截至 .NET Core 1.0 為 1.6 版 (這些版本通常不會相符，或是不會蓄意地相符)。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Maps to the <ph id="ph1">`netstandard`</ph> framework.</source>
          <target state="translated">對應至 <ph id="ph1">`netstandard`</ph> 架構。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Describes the packages that are considered required for modern app development and that .NET platforms must implement to be considered a <bpt id="p1">[</bpt>.NET Standard<ept id="p1">](../../standard/library.md)</ept> platform.</source>
          <target state="translated">描述被視為現代化應用程式開發所需的套件，而且 .NET 平台必須實作這些套件才會被視為 <bpt id="p1">[</bpt>.NET Standard<ept id="p1">](../../standard/library.md)</ept> 平台。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Microsoft.NETCore.App<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Microsoft.NETCore.App<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>v1.0 as of .NET Core 1.0 (these versions will match).</source>
          <target state="translated">截至 .NET Core 1.0 為 1.0 版 (這些版本將會相符)。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Maps to the <ph id="ph1">`netcoreapp`</ph> framework.</source>
          <target state="translated">對應至 <ph id="ph1">`netcoreapp`</ph> 架構。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Describes the packages in the .NET Core distribution.</source>
          <target state="translated">描述 .NET Core 散發套件中的套件。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Note: <bpt id="p1">[</bpt><ph id="ph1">`Microsoft.NETCore.Portable.Compatibility`</ph><ept id="p1">](https://www.nuget.org/packages/Microsoft.NETCore.Portable.Compatibility)</ept> is another .NET Core metapackage.</source>
          <target state="translated">注意︰<bpt id="p1">[</bpt><ph id="ph1">`Microsoft.NETCore.Portable.Compatibility`</ph><ept id="p1">](https://www.nuget.org/packages/Microsoft.NETCore.Portable.Compatibility)</ept> 是另一個 .NET Core 中繼套件。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>It doesn't map to a particular framework, so versions like a package.</source>
          <target state="translated">它不會對應至特定的架構，因此其版本控制類似套件。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Frameworks</source>
          <target state="translated">架構</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Framework versions are updated when new APIs are added.</source>
          <target state="translated">新增 API 時，會更新架構版本。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>They have no concept of patch version, since they represent API shape and not implementation concerns.</source>
          <target state="translated">它們有沒有修補程式版本的概念，因為它們代表 API 圖形，而不是實作考量。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Major and minor versioning will follow the SemVer rules specified earlier.</source>
          <target state="translated">主要和次要版本控制會依照稍早指定的 SemVer 規則。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`netcoreapp`</ph> framework is tied to the .NET Core distribution.</source>
          <target state="translated"><ph id="ph1">`netcoreapp`</ph> 架構會繫結至 .NET Core 散發套件。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>It will follow the version numbers used by .NET Core.</source>
          <target state="translated">它會遵循 .NET Core 所使用的版本號碼。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For example, when .NET Core 2.0 is released, it will target <ph id="ph1">`netcoreapp2.0`</ph>.</source>
          <target state="translated">例如，.NET Core 2.0 發行時，它將以 <ph id="ph1">`netcoreapp2.0`</ph> 為目標。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`netstandard`</ph> framework will not match the versioning scheme of any .NET runtime, given that it is equally applicable to all of them.</source>
          <target state="translated"><ph id="ph1">`netstandard`</ph> 架構不會符合任何 .NET 執行階段的版本控制配置，假設全部都同樣適用的話。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Versioning in Practice</source>
          <target state="translated">版本控制實踐</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>There are commits and PRs on .NET Core repos on GitHub on a daily basis, resulting in new builds of many libraries.</source>
          <target state="translated">GitHub 上的 .NET Core 儲存機制每天都有認可和 PR，進而產生許多程式庫的新組建。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>It is not practical to create new public versions of .NET Core for every change.</source>
          <target state="translated">為每一項變更建立新的公用版本 .NET Core 並不實際。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Instead, changes will be aggregated over some loosely-defined period of time (for example, weeks or months) before making a new public stable .NET Core version.</source>
          <target state="translated">相反地，會針對一段定義寬鬆的時間 (例如，數週或數個月) 彙總變更，然後才製作新的公用穩定 .NET Core 版本。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A new version of .NET Core could mean several things:</source>
          <target state="translated">新的 .NET Core 版本可能意謂著幾件事︰</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>New versions of packages and metapackages.</source>
          <target state="translated">新版本的套件和中繼套件。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>New versions of various frameworks, assuming the addition of new APIs.</source>
          <target state="translated">新版本的各種架構，假設新增 API 版本的話。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>New version of the .NET Core distribution.</source>
          <target state="translated">新版本的 .NET Core 散發套件。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Shipping a patch release</source>
          <target state="translated">修補程式版本出貨</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>After shipping a .NET Core v1.0.0 stable version, patch-level changes (no new APIs) are made to .NET Core libraries to fix bugs and improve performance and reliability.</source>
          <target state="translated">.NET Core 1.0.0 版穩定版本出貨之後，會針對 .NET Core 程式庫進行修補程式層級的變更 (沒有新的 API)，以修正 Bug 並改善效能和可靠性。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The various metapackages are updated to reference the updated .NET Core library packages.</source>
          <target state="translated">各種中繼套件會更新，參考更新過的 .NET Core 程式庫套件。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The metapackages are versioned as patch updates (x.y.z).</source>
          <target state="translated">中繼套件的版本建立是作為修補程式的更新 (x.y.z)。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Frameworks are not updated.</source>
          <target state="translated">不會更新架構。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>A new .NET Core distribution is released with a matching version number to the <ph id="ph1">`Microsoft.NETCore.App`</ph> metapackage.</source>
          <target state="translated">新的 .NET Core 散發套件發行時，版本號碼會與 <ph id="ph1">`Microsoft.NETCore.App`</ph> 中繼套件相符。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>You can see patch updates demonstrated in the project.json examples below.</source>
          <target state="translated">您可以在下列 project.json 範例中看到示範的修補程式更新。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Shipping a minor release</source>
          <target state="translated">次要版本出貨</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>After shipping a .NET Core v1.0.0 stable version, new APIs are added to .NET Core libraries to enable new scenarios.</source>
          <target state="translated">.NET Core v1.0.0 穩定版本出貨之後，新的 API 新增至 .NET Core 程式庫，以啟用新案例。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The various metapackages are updated to reference the updated .NET Core library packages.</source>
          <target state="translated">各種中繼套件會更新，參考更新過的 .NET Core 程式庫套件。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The metapackages are versioned as patch updates (x.y) to match the higher framework version.</source>
          <target state="translated">中繼套件的版本建立為修補程式更新 (x.y) 以符合較高的架構版本。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The various frameworks are updated to describe the new APIs.</source>
          <target state="translated">各種架構已更新為說明新的 API。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A new .NET Core distribution is released with a matching version number to the <ph id="ph1">`Microsoft.NETCore.App`</ph> metapackage.</source>
          <target state="translated">新的 .NET Core 散發套件發行時，版本號碼會與 <ph id="ph1">`Microsoft.NETCore.App`</ph> 中繼套件相符。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>You can see minor updates demonstrated in the project.json examples below.</source>
          <target state="translated">您可以在下列 project.json 範例中看到示範的次要更新。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Shipping a major release</source>
          <target state="translated">主要版本出貨</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Given a .NET Core v1.y.z stable version, new APIs are added to .NET Core libraries to enable major new scenarios.</source>
          <target state="translated">對於 .NET Core v1.y.z 穩定版本，新的 API 已新增至 .NET Core 程式庫，以啟用主要的新案例。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Perhaps, support is dropped for a platform.</source>
          <target state="translated">或許，不再支援某個平台。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The various metapackages are updated to reference the updated .NET Core library packages.</source>
          <target state="translated">各種中繼套件會更新，參考更新過的 .NET Core 程式庫套件。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Microsoft.NETCore.App`</ph> metapackage and the <ph id="ph2">`netcore`</ph> framework are versioned as a major update (x.).</source>
          <target state="translated"><ph id="ph1">`Microsoft.NETCore.App`</ph> 中繼套件和 <ph id="ph2">`netcore`</ph> 架構的版本建立為主要更新 (x.)。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`NETStandard.Library`</ph> metapackage is likely  versioned as a minor update (x.y) since it applies to multiple .NET implementations.</source>
          <target state="translated"><ph id="ph1">`NETStandard.Library`</ph> 中繼套件的版本可能建立為次要更新 (x.y)，因為它適用於多個 .NET 實作。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A new .NET Core distribution would be released with a matching version number to the <ph id="ph1">`Microsoft.NETCore.App`</ph> metapackage.</source>
          <target state="translated">新的 .NET Core 散發套件發行時，版本號碼會與 <ph id="ph1">`Microsoft.NETCore.App`</ph> 中繼套件相符。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>You can see major updates demonstrated in the project.json metapackage reference in the example below.</source>
          <target state="translated">您可以在下列範例中的 project.json 中繼套件參考看到示範的主要更新。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>