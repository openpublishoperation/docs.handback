<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b70822edd972ac33614ab49faad6ff50b0e80b7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\async\cancel-remaining-async-tasks-after-one-is-complete.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b63bc483eb5845d7bb3872636b21fe3b057c2c69</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">322df83f9249cfb434fbff5e8b1167b7b10f17e5</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_cancel-remaining-async-tasks-after-one-is-complete.ba565666689c9909cb8aee9bca6b5cea242230e6.zh-tw is different with handoff file name: cancel-remaining-async-tasks-after-one-is-complete.ba565666689c9909cb8aee9bca6b5cea242230e6.zh-tw.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Cancel Remaining Async Tasks after One Is Complete (Visual Basic) | Microsoft Docs</source>
          <target state="translated">當取消剩餘的非同步工作是完整 (Visual Basic) |Microsoft 文件</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Cancel Remaining Async Tasks after One Is Complete (Visual Basic)</source>
          <target state="translated">當取消剩餘的非同步工作是完整 (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>By using the &lt;xref:System.Threading.Tasks.Task.WhenAny%2A?displayProperty=fullName&gt; method together with a &lt;xref:System.Threading.CancellationToken&gt;, you can cancel all remaining tasks when one task is complete.</source>
          <target state="translated">使用&lt;xref:System.Threading.Tasks.Task.WhenAny%2A?displayProperty=fullName&gt;方法並搭配&lt;xref:System.Threading.CancellationToken&gt;，一個工作完成時，您可以取消所有其餘的工作。&lt;/xref:System.Threading.CancellationToken&gt; &lt;/xref:System.Threading.Tasks.Task.WhenAny%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`WhenAny`</ph> method takes an argument that’s a collection of tasks.</source>
          <target state="translated"><ph id="ph1">`WhenAny`</ph>方法會採用一組工作的引數。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The method starts all the tasks and returns a single task.</source>
          <target state="translated">這個方法會啟動所有工作，並傳回單一工作。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The single task is complete when any task in the collection is complete.</source>
          <target state="translated">集合中的任何工作完成時，單一工作已完成。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to use a cancellation token in conjunction with <ph id="ph1">`WhenAny`</ph> to hold onto the first task to finish from the collection of tasks and to cancel the remaining tasks.</source>
          <target state="translated">這個範例示範如何搭配使用取消語彙基元<ph id="ph1">`WhenAny`</ph>固守第一項工作完成的工作集合，以及取消其餘的工作。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Each task downloads the contents of a website.</source>
          <target state="translated">每一項工作會下載網站的內容。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The example displays the length of the contents of the first download to complete and cancels the other downloads.</source>
          <target state="translated">此範例顯示的第一個完成的下載內容的長度，並取消其他下載。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>To run the examples, you must have Visual Studio 2012 or newer and the .NET Framework 4.5 or newer installed on your computer.</source>
          <target state="translated">若要執行範例，您必須擁有 Visual Studio 2012 或較新和.NET Framework 4.5 或更新版本安裝在電腦上。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Downloading the Example</source>
          <target state="translated">下載範例</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You can download the complete Windows Presentation Foundation (WPF) project from <bpt id="p1">[</bpt>Async Sample: Fine Tuning Your Application<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept> and then follow these steps.</source>
          <target state="translated">您可以下載完整的 Windows Presentation Foundation (WPF) 專案，從<bpt id="p1">[</bpt>非同步範例︰ 順利微調您的應用程式<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept>，然後依照下列步驟。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Decompress the file that you downloaded, and then start Visual Studio.</source>
          <target state="translated">解壓縮您下載的檔案，然後啟動 Visual Studio。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>On the menu bar, choose <bpt id="p1">**</bpt>File<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Open<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Project/Solution<ept id="p3">**</ept>.</source>
          <target state="translated">在功能表列上，依序選擇 [檔案] 、[開啟舊檔] 及 [專案/方案] 。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>In the <bpt id="p1">**</bpt>Open Project<ept id="p1">**</ept> dialog box, open the folder that holds the sample code that you decompressed, and then open the solution (.sln) file for AsyncFineTuningVB.</source>
          <target state="translated">在<bpt id="p1">**</bpt>開啟專案<ept id="p1">**</ept>對話方塊中，開啟保存在解壓縮時，範例程式碼的資料夾，並接著開啟 AsyncFineTuningVB 方案 (.sln) 檔案。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>In <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>, open the shortcut menu for the <bpt id="p2">**</bpt>CancelAfterOneTask<ept id="p2">**</ept> project, and then choose <bpt id="p3">**</bpt>Set as StartUp Project<ept id="p3">**</ept>.</source>
          <target state="translated">在<bpt id="p1">**</bpt>方案總管 中<ept id="p1">**</ept>，開啟捷徑功能表<bpt id="p2">**</bpt>CancelAfterOneTask<ept id="p2">**</ept>專案，然後再選擇<bpt id="p3">**</bpt>設定為啟始專案<ept id="p3">**</ept>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Choose the F5 key to run the project.</source>
          <target state="translated">選擇 F5 鍵以執行專案。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Choose the Ctrl+F5 keys to run the project without debugging it.</source>
          <target state="translated">選擇 Ctrl + F5 鍵以執行專案，但不偵錯它。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Run the program several times to verify that different downloads finish first.</source>
          <target state="translated">若要確認不同的下載完成第一次執行程式數次。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If you don't want to download the project, you can review the MainWindow.xaml.vb file at the end of this topic.</source>
          <target state="translated">如果您不想要下載的專案，您可以檢閱本主題結尾處的 MainWindow.xaml.vb 檔案。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Building the Example</source>
          <target state="translated">建置範例</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The example in this topic adds to the project that's developed in <bpt id="p1">[</bpt>Cancel an Async Task or a List of Tasks<ept id="p1">](http://msdn.microsoft.com/library/d6e4e801-df64-4705-98fc-df725a577fb0)</ept> to cancel a list of tasks.</source>
          <target state="translated">本主題中的範例將加入專案中開發<bpt id="p1">[</bpt>取消一項非同步工作或工作清單<ept id="p1">](http://msdn.microsoft.com/library/d6e4e801-df64-4705-98fc-df725a577fb0)</ept>取消的工作清單。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The example uses the same UI, although the <bpt id="p1">**</bpt>Cancel<ept id="p1">**</ept> button isn’t used explicitly.</source>
          <target state="translated">雖然此範例會使用相同的 UI，<bpt id="p1">**</bpt>取消<ept id="p1">**</ept>按鈕不會明確地使用。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>To build the example yourself, step by step, follow the instructions in the "Downloading the Example" section, but choose <bpt id="p1">**</bpt>CancelAListOfTasks<ept id="p1">**</ept> as the <bpt id="p2">**</bpt>StartUp Project<ept id="p2">**</ept>.</source>
          <target state="translated">若要建置範例自行逐步解說，依照指示下載 「 範例 」 一節中的，但是選擇<bpt id="p1">**</bpt>CancelAListOfTasks<ept id="p1">**</ept>為<bpt id="p2">**</bpt>啟始專案<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Add the changes in this topic to that project.</source>
          <target state="translated">本主題中加入該專案所做的變更。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In the MainWindow.xaml.vb file of the <bpt id="p1">**</bpt>CancelAListOfTasks<ept id="p1">**</ept> project, start the transition by moving the processing steps for each website from the loop in <ph id="ph1">`AccessTheWebAsync`</ph> to the following async method.</source>
          <target state="translated">中的 MainWindow.xaml.vb 檔案<bpt id="p1">**</bpt>CancelAListOfTasks<ept id="p1">**</ept>專案中，從迴圈中移動的每個網站的處理步驟開始轉換<ph id="ph1">`AccessTheWebAsync`</ph>下列非同步方法。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>In <ph id="ph1">`AccessTheWebAsync`</ph>, this example uses a query, the  &lt;xref:System.Linq.Enumerable.ToArray%2A&gt; method, and the <ph id="ph2">`WhenAny`</ph> method to create and start an array of tasks.</source>
          <target state="translated">在<ph id="ph1">`AccessTheWebAsync`</ph>，這個範例會使用查詢，&lt;xref:System.Linq.Enumerable.ToArray%2A&gt;方法，而<ph id="ph2">`WhenAny`</ph>方法來建立並啟動工作的陣列。&lt;/xref:System.Linq.Enumerable.ToArray%2A&gt;</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The application of <ph id="ph1">`WhenAny`</ph> to the array returns a single task that, when awaited, evaluates to the first task to reach completion in the array of tasks.</source>
          <target state="translated">應用程式的<ph id="ph1">`WhenAny`</ph>陣列傳回的單一工作，當等候時，會評估為連線到陣列中的完成工作的第一個工作。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Make the following changes in <ph id="ph1">`AccessTheWebAsync`</ph>.</source>
          <target state="translated">進行下列變更在<ph id="ph1">`AccessTheWebAsync`</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Asterisks mark the changes in the code file.</source>
          <target state="translated">星號標示的程式碼檔案中的變更。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Comment out or delete the loop.</source>
          <target state="translated">註解化或刪除迴圈。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Create a query that, when executed, produces a collection of generic tasks.</source>
          <target state="translated">建立查詢，在執行時，會產生一組一般工作。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Each call to <ph id="ph1">`ProcessURLAsync`</ph> returns a &lt;xref:System.Threading.Tasks.Task%601&gt; where <ph id="ph2">`TResult`</ph> is an integer.</source>
          <target state="translated">每次呼叫<ph id="ph1">`ProcessURLAsync`</ph>傳回&lt;xref:System.Threading.Tasks.Task%601&gt;其中<ph id="ph2">`TResult`</ph>是一個整數。&lt;/xref:System.Threading.Tasks.Task%601&gt;</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;CodeContentPlaceHolder&gt;</bpt>1<ept id="p1">&lt;/CodeContentPlaceHolder&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;CodeContentPlaceHolder&gt;</bpt>1<ept id="p1">&lt;/CodeContentPlaceHolder&gt;</ept></target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`ToArray`</ph> to execute the query and start the tasks.</source>
          <target state="translated">呼叫<ph id="ph1">`ToArray`</ph>來執行查詢，並開始工作。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The application of the <ph id="ph1">`WhenAny`</ph> method in the next step would execute the query and start the tasks without using <ph id="ph2">`ToArray`</ph>, but other methods might not.</source>
          <target state="translated">應用程式的<ph id="ph1">`WhenAny`</ph>下一個步驟中的方法會執行查詢，並啟動工作，而不使用<ph id="ph2">`ToArray`</ph>，但不是可能的其他方法。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The safest practice is to force execution of the query explicitly.</source>
          <target state="translated">最安全的作法是明確地強制執行查詢。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;CodeContentPlaceHolder&gt;</bpt>2<ept id="p1">&lt;/CodeContentPlaceHolder&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;CodeContentPlaceHolder&gt;</bpt>2<ept id="p1">&lt;/CodeContentPlaceHolder&gt;</ept></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Call <ph id="ph1">`WhenAny`</ph> on the collection of tasks.</source>
          <target state="translated">呼叫<ph id="ph1">`WhenAny`</ph>上工作的集合。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`WhenAny`</ph> returns a <ph id="ph2">`Task(Of Task(Of Integer))`</ph> or <ph id="ph3">`Task&lt;Task&lt;int&gt;&gt;`</ph>.</source>
          <target state="translated"><ph id="ph1">`WhenAny`</ph>傳回<ph id="ph2">`Task(Of Task(Of Integer))`</ph>或<ph id="ph3">`Task&lt;Task&lt;int&gt;&gt;`</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>That is, <ph id="ph1">`WhenAny`</ph> returns a task that evaluates to a single <ph id="ph2">`Task(Of Integer)`</ph> or <ph id="ph3">`Task&lt;int&gt;`</ph> when it’s awaited.</source>
          <target state="translated">也就是<ph id="ph1">`WhenAny`</ph>傳回的工作，評估單一<ph id="ph2">`Task(Of Integer)`</ph>或<ph id="ph3">`Task&lt;int&gt;`</ph>時，它會等候。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>That single task is the first task in the collection to finish.</source>
          <target state="translated">該單一的工作會在完成集合中的第一項工作。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The task that finished first is assigned to <ph id="ph1">`firstFinishedTask`</ph>.</source>
          <target state="translated">已完成第一次工作指派給<ph id="ph1">`firstFinishedTask`</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The type of <ph id="ph1">`firstFinishedTask`</ph> is &lt;xref:System.Threading.Tasks.Task%601&gt; where <ph id="ph2">`TResult`</ph> is an integer because that's the return type of <ph id="ph3">`ProcessURLAsync`</ph>.</source>
          <target state="translated">型別<ph id="ph1">`firstFinishedTask`</ph>是&lt;xref:System.Threading.Tasks.Task%601&gt;其中<ph id="ph2">`TResult`</ph>是一個整數，因為這是傳回型別<ph id="ph3">`ProcessURLAsync`</ph>。&lt;/xref:System.Threading.Tasks.Task%601&gt;</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>In this example, you’re interested only in the task that finishes first.</source>
          <target state="translated">在此範例中，您想要知道只能在第一次完成的工作項目。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Therefore, use &lt;xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=fullName&gt; to cancel the remaining tasks.</source>
          <target state="translated">因此，使用&lt;xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=fullName&gt;取消其餘的工作。&lt;/xref:System.Threading.CancellationTokenSource.Cancel%2A?displayProperty=fullName&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Finally, await <ph id="ph1">`firstFinishedTask`</ph> to retrieve the length of the downloaded content.</source>
          <target state="translated">最後，等候<ph id="ph1">`firstFinishedTask`</ph>擷取下載的內容長度。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Run the program several times to verify that different downloads finish first.</source>
          <target state="translated">若要確認不同的下載完成第一次執行程式數次。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Complete Example</source>
          <target state="translated">完整範例</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The following code is the complete MainWindow.xaml.vb or MainWindow.xaml.cs file for the example.</source>
          <target state="translated">下列程式碼是完整的 MainWindow.xaml.vb 或 MainWindow.xaml.cs 檔案的範例。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Asterisks mark the elements that were added for this example.</source>
          <target state="translated">星號標示此範例中所新增的項目。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Notice that you must add a reference for &lt;xref:System.Net.Http&gt;.</source>
          <target state="translated">請注意，您必須加入&lt;xref:System.Net.Http&gt;.&lt;/xref:System.Net.Http&gt;的參考</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>You can download the project from <bpt id="p1">[</bpt>Async Sample: Fine Tuning Your Application<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept>.</source>
          <target state="translated">您可以下載的專案<bpt id="p1">[</bpt>非同步範例︰ 順利微調您的應用程式<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>&lt;xref:System.Threading.Tasks.Task.WhenAny%2A&gt;</source>
          <target state="translated">&lt;xref:System.Threading.Tasks.Task.WhenAny%2A&gt;&lt;/xref:System.Threading.Tasks.Task.WhenAny%2A&gt;</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Fine-Tuning Your Async Application (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/fine-tuning-your-async-application.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>微調非同步應用程式 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/fine-tuning-your-async-application.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Asynchronous Programming with Async and Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>非同步程式設計使用 Async 和 Await (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/async/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Async Sample: Fine Tuning Your Application<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>非同步範例︰ 微調應用程式<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=255046)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>