<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a188ad5182b757a798f7f29414536ba2d1a88c2b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\programming-guide\concepts\linq\functional-transformation-of-xml.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9bb9060c4a30e3e37d6dc18ac7613a8d2e1cc29d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc2780bdf427353b7a2ddab095a0a270fad35015</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_functional-transformation-of-xml.34012e8a7a4ccf8a42a08f6587c031e39dab9c8a.zh-tw is different with handoff file name: functional-transformation-of-xml.34012e8a7a4ccf8a42a08f6587c031e39dab9c8a.zh-tw.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Functional Transformation of XML (Visual Basic) | Microsoft Docs</source>
          <target state="translated">功能性轉換的 XML (Visual Basic) |Microsoft 文件</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Functional Transformation of XML (Visual Basic)</source>
          <target state="translated">功能性轉換的 XML (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This topic discusses the pure functional transformation approach to modifying XML documents, and contrasts it with a procedural approach.</source>
          <target state="translated">本主題討論修改 XML 文件的純功能性轉換方法，並與程序性方法對照。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Modifying an XML Document</source>
          <target state="translated">修改 XML 文件</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>One of the most common tasks for an XML programmer is transforming XML from one shape to another.</source>
          <target state="translated">XML 程式設計人員其中一個最常見的工做為，將 XML 從一個組織結構轉換為另一個組織結構。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The shape of an XML document is the structure of the document, which includes the following:</source>
          <target state="translated">XML 文件的組織結構就是文件的結構，其中包括：</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The hierarchy expressed by the document.</source>
          <target state="translated">以文件表示的階層。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The element and attribute names.</source>
          <target state="translated">項目和屬性名稱。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The data types of the elements and attributes.</source>
          <target state="translated">項目和屬性的資料型別。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In general, the most effective approach to transforming XML from one shape to another is that of pure functional transformation.</source>
          <target state="translated">一般而言，將 XML 從一個組織結構轉換為另一個組織結構最有效的方法是，純功能性轉換的方法。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>In this approach, the primary programmer task is to create a transformation which is applied to the entire XML document (or to one or more strictly defined nodes).</source>
          <target state="translated">以此種方法，程式設計人員的主要工做為建立適用於整個 XML 文件 (或者一或多個嚴格定義的程式碼) 的轉換。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Functional transformation is arguably the easiest to code (after a programmer is familiar with the approach), yields the most maintainable code, and is often more compact than alternative approaches.</source>
          <target state="translated">在論證上，功能性轉換對程式碼而言是最簡單的 (在程式設計人員熟悉方法之後)，它會產生最容易維護的程式碼，而且通常比替代方法更精簡。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>XML Functional Transformational Technologies</source>
          <target state="translated">XML 功能性轉換技術</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Microsoft offers two functional transformation technologies for use on XML documents: XSLT and LINQ to XML.</source>
          <target state="translated">Microsoft 提供兩個可用於 XML 文件的功能性轉換技術：XSLT 和 LINQ to XML。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>XSLT is supported in the &lt;xref:System.Xml.Xsl&gt; managed namespace and in the native COM implementation of MSXML.</source>
          <target state="translated">中支援 XSLT &lt;xref:System.Xml.Xsl&gt;managed 命名空間與 MSXML 的原始 COM 實作中。&lt;/xref:System.Xml.Xsl&gt;</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Although XSLT is a robust technology for manipulating XML documents, it requires expertise in a specialized domain, namely the XSLT language and its supporting APIs.</source>
          <target state="translated">雖然 XSLT 是強大的管理 XML 文件技術，但是它需要特殊領域的專業知識，也就是 XSLT 語言及其支援的 API。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>LINQ to XML provides the tools necessary to code pure functional transformations in an expressive and powerful way, within C# or Visual Basic code.</source>
          <target state="translated">LINQ to XML 在 C# 或 Visual Basic 程式碼中，提供以明確而且強大的方式撰寫純功能性轉換之程式碼所需的工具。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>For example, many of the examples in the LINQ to XML documentation use a pure functional approach.</source>
          <target state="translated">例如，LINQ to XML 文件中的許多範例都使用純功能性方法。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Also, in the <bpt id="p1">[</bpt>Tutorial: Manipulating Content in a WordprocessingML Document (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/tutorial-manipulating-content-in-a-wordprocessingml-document.md)</ept> tutorial, we use LINQ to XML in a functional approach to manipulate information in a Microsoft Word document.</source>
          <target state="translated">此外，在<bpt id="p1">[</bpt>教學課程︰ 管理 WordprocessingML 文件 (Visual Basic) 中的內容<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/tutorial-manipulating-content-in-a-wordprocessingml-document.md)</ept>教學課程中，我們使用 LINQ to XML 以功能性方法來管理 Microsoft Word 文件中的資訊。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>For a more complete comparison of LINQ to XML with other Microsoft XML technologies, see <bpt id="p1">[</bpt>LINQ to XML vs. Other XML Technologies<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-vs-other-xml-technologies.md)</ept>.</source>
          <target state="translated">Linq to XML 與其他 Microsoft XML 技術的更完整比較，請參閱<bpt id="p1">[</bpt>LINQ to XML 比較。其他 XML 技術<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-vs-other-xml-technologies.md)</ept>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>XSLT is the recommended tool for  document-centric transformations when the source document has an irregular structure.</source>
          <target state="translated">當來源文件具有不規則的結構時，XSLT 是文件中心轉換的建議工具。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>However, LINQ to XML can also perform document-centric transforms.</source>
          <target state="translated">不過，LINQ to XML 也可以執行文件中心的轉換。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Use Annotations to Transform LINQ to XML Trees in an XSLT Style (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-use-annotation-trees-to-transform-linq-to-xml-trees-in-an-xslt-style.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>How to︰ 使用註解轉換 linq to XML 樹狀結構中的 XSLT 樣式 (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/how-to-use-annotation-trees-to-transform-linq-to-xml-trees-in-an-xslt-style.md)</ept>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Introduction to Pure Functional Transformations (Visual Basic)<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/introduction-to-pure-functional-transformations.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>純功能性轉換 (Visual Basic) 簡介<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/introduction-to-pure-functional-transformations.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>LINQ to XML vs. Other XML Technologies<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-vs-other-xml-technologies.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>LINQ to XML 與其他 XML 技術<ept id="p1">](../../../../visual-basic/programming-guide/concepts/linq/linq-to-xml-vs-other-xml-technologies.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>LINQ to XML vs. Other XML Technologies<ept id="p1">](http://msdn.microsoft.com/library/7ba1eecf-f09a-42de-bc80-22ca5b2e42d3)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>LINQ to XML 與其他 XML 技術的比較<ept id="p1">](http://msdn.microsoft.com/library/7ba1eecf-f09a-42de-bc80-22ca5b2e42d3)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>