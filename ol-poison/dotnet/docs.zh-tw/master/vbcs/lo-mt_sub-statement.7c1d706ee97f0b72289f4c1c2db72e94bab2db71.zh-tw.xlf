<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0eb78f92f22502d9e8595051361b45d9bf53ed64</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\language-reference\statements\sub-statement.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af3bbf4ff56c5fca97ee40a8ec1534c4a08a54bf</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8aefaeee3f8a7ad51aca5b95b3f34c8e22086bec</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_sub-statement.7c1d706ee97f0b72289f4c1c2db72e94bab2db71.zh-tw is different with handoff file name: sub-statement.7c1d706ee97f0b72289f4c1c2db72e94bab2db71.zh-tw.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Sub Statement (Visual Basic) | Microsoft Docs</source>
          <target state="translated">Sub 陳述式 (Visual Basic) |Microsoft 文件</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Sub Statement (Visual Basic)</source>
          <target state="translated">Sub 陳述式 (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Declares the name, parameters, and code that define a <ph id="ph1">`Sub`</ph> procedure.</source>
          <target state="translated">名稱、 參數和定義的程式碼會宣告<ph id="ph1">`Sub`</ph>程序。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Parts</source>
          <target state="translated">組件</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">選擇項。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Attribute List<ept id="p1">](attribute-list.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>屬性清單<ept id="p1">](attribute-list.md)</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">選擇項。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Indicates definition of a partial method.</source>
          <target state="translated">表示部分方法的定義。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Partial Methods<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/partial-methods.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>部分方法<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/partial-methods.md)</ept>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">選擇項。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Can be one of the following:</source>
          <target state="translated">可以是下列其中一項：</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Public<ept id="p1">](../modifiers/public.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Public<ept id="p1">](../modifiers/public.md)</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Protected<ept id="p1">](../modifiers/protected.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Protected<ept id="p1">](../modifiers/protected.md)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Friend<ept id="p1">](../modifiers/friend.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Friend<ept id="p1">](../modifiers/friend.md)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Private<ept id="p1">](../modifiers/private.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Private<ept id="p1">](../modifiers/private.md)</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Access Levels in Visual Basic<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>存取 Visual Basic 中的層級<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/access-levels.md)</ept>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">選擇項。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Can be one of the following:</source>
          <target state="translated">可以是下列其中一項：</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Overloads<ept id="p1">](../modifiers/overloads.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>多載<ept id="p1">](../modifiers/overloads.md)</ept></target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Overrides<ept id="p1">](../modifiers/overrides.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Overrides<ept id="p1">](../modifiers/overrides.md)</ept></target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Overridable<ept id="p1">](../modifiers/overridable.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Overridable<ept id="p1">](../modifiers/overridable.md)</ept></target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>NotOverridable<ept id="p1">](../modifiers/notoverridable.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>NotOverridable<ept id="p1">](../modifiers/notoverridable.md)</ept></target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>MustOverride<ept id="p1">](../modifiers/mustoverride.md)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>MustOverride<ept id="p1">](../modifiers/mustoverride.md)</ept></target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">選擇項。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Shared<ept id="p1">](../modifiers/shared.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>共用<ept id="p1">](../modifiers/shared.md)</ept>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">選擇項。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Shadows<ept id="p1">](../modifiers/shadows.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>陰影<ept id="p1">](../modifiers/shadows.md)</ept>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">選擇項。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Async<ept id="p1">](../modifiers/async.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>非同步<ept id="p1">](../modifiers/async.md)</ept>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必要項。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Name of the procedure.</source>
          <target state="translated">程序的名稱。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Declared Element Names<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>宣告項目名稱<ept id="p1">](../../../visual-basic/programming-guide/language-features/declared-elements/declared-element-names.md)</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>To create a constructor procedure for a class, set the name of a <ph id="ph1">`Sub`</ph> procedure to the <ph id="ph2">`New`</ph> keyword.</source>
          <target state="translated">若要建立類別的建構函式程序，將名稱設定<ph id="ph1">`Sub`</ph>程序<ph id="ph2">`New`</ph>關鍵字。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Object Lifetime: How Objects Are Created and Destroyed<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-lifetime-how-objects-are-created-and-destroyed.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>物件存留期︰ 物件的建立和終結<ept id="p1">](../../../visual-basic/programming-guide/language-features/objects-and-classes/object-lifetime-how-objects-are-created-and-destroyed.md)</ept>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">選擇項。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>List of type parameters for a generic procedure.</source>
          <target state="translated">泛型程序的類型參數的清單。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Type List<ept id="p1">](type-list.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>輸入清單<ept id="p1">](type-list.md)</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">選擇項。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>List of local variable names representing the parameters of this procedure.</source>
          <target state="translated">代表此程序參數的本機變數名稱的清單。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Parameter List<ept id="p1">](parameter-list.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>參數清單<ept id="p1">](parameter-list.md)</ept>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">選擇項。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Indicates that this procedure implements one or more <ph id="ph1">`Sub`</ph> procedures, each one defined in an interface implemented by this procedure's containing class or structure.</source>
          <target state="translated">表示此程序會實作一個或多個<ph id="ph1">`Sub`</ph>程序，每一個定義在此程序包含類別或結構所實作的介面。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Implements Statement<ept id="p1">](implements-statement.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>實作陳述式<ept id="p1">](implements-statement.md)</ept>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Required if <ph id="ph1">`Implements`</ph> is supplied.</source>
          <target state="translated">如果使用 <ph id="ph1">`Implements`</ph>，則為必要項。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>List of <ph id="ph1">`Sub`</ph> procedures being implemented.</source>
          <target state="translated">實作之 <ph id="ph1">`Sub`</ph> 程序的清單。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`implementedprocedure`</ph> has the following syntax and parts:</source>
          <target state="translated">每個 <ph id="ph1">`implementedprocedure`</ph> 都具有下列語法和組件：</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Part</source>
          <target state="translated">組件</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必要項。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Name of an interface implemented by this procedure's containing class or structure.</source>
          <target state="translated">這個程序所實作的介面名稱的包含類別或結構。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必要項。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Name by which the procedure is defined in <ph id="ph1">`interface`</ph>.</source>
          <target state="translated">名稱，據以在 <ph id="ph1">`interface`</ph> 中定義程序。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">選擇項。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Indicates that this procedure can handle one or more specific events.</source>
          <target state="translated">表示此程序可以處理一或多個特定的事件。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>Handles<ept id="p1">](handles-clause.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>處理<ept id="p1">](handles-clause.md)</ept>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Required if <ph id="ph1">`Handles`</ph> is supplied.</source>
          <target state="translated">如果使用 <ph id="ph1">`Handles`</ph>，則為必要項。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>List of events this procedure handles.</source>
          <target state="translated">此程序處理的事件清單。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Each <ph id="ph1">`eventspecifier`</ph> has the following syntax and parts:</source>
          <target state="translated">每個 <ph id="ph1">`eventspecifier`</ph> 都具有下列語法和組件：</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Part</source>
          <target state="translated">組件</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">描述</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必要項。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Object variable declared with the data type of the class or structure that raises the event.</source>
          <target state="translated">宣告的類別或結構，會引發事件的資料類型的物件變數。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Required.</source>
          <target state="translated">必要項。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Name of the event this procedure handles.</source>
          <target state="translated">此程序處理事件的名稱。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">選擇項。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Block of statements to run within this procedure.</source>
          <target state="translated">若要執行此程序內的陳述式區塊。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Terminates the definition of this procedure.</source>
          <target state="translated">結束這個程序的定義。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">備註</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>All executable code must be inside a procedure.</source>
          <target state="translated">所有的可執行程式碼必須在程序。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Use a <ph id="ph1">`Sub`</ph> procedure when you don't want to return a value to the calling code.</source>
          <target state="translated">使用<ph id="ph1">`Sub`</ph>程序時您不想要將值傳回給呼叫程式碼。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Use a <ph id="ph1">`Function`</ph> procedure when you want to return a value.</source>
          <target state="translated">使用<ph id="ph1">`Function`</ph>程序，當您想要傳回的值。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Defining a Sub Procedure</source>
          <target state="translated">定義 Sub 程序</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>You can define a <ph id="ph1">`Sub`</ph> procedure only at the module level.</source>
          <target state="translated">您可以定義<ph id="ph1">`Sub`</ph>只能在模組層級的程序。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The declaration context for a sub procedure must, therefore, be a class, a structure, a module, or an interface and can't be a source file, a namespace, a procedure, or a block.</source>
          <target state="translated">Sub 程序宣告內容，因此，必須類別、 結構、 模組或介面，且不能是原始程式檔、 命名空間、 程序或區塊。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Declaration Contexts and Default Access Levels<ept id="p1">](declaration-contexts-and-default-access-levels.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>宣告內容和預設存取層級<ept id="p1">](declaration-contexts-and-default-access-levels.md)</ept>。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Sub`</ph> procedures default to public access.</source>
          <target state="translated"><ph id="ph1">`Sub`</ph>程序預設為公用存取。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>You can adjust their access levels by using the access modifiers.</source>
          <target state="translated">您可以調整它們的存取層級使用的存取修飾詞。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If the procedure uses the <ph id="ph1">`Implements`</ph> keyword, the containing class or structure must have an <ph id="ph2">`Implements`</ph> statement that immediately follows its <ph id="ph3">`Class`</ph> or <ph id="ph4">`Structure`</ph> statement.</source>
          <target state="translated">如果程序使用<ph id="ph1">`Implements`</ph>關鍵字、 包含類別或結構必須<ph id="ph2">`Implements`</ph>緊接在後面的陳述式其<ph id="ph3">`Class`</ph>或<ph id="ph4">`Structure`</ph>陳述式。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Implements`</ph> statement must include each interface that's specified in <ph id="ph2">`implementslist`</ph>.</source>
          <target state="translated"><ph id="ph1">`Implements`</ph>陳述式必須包含在指定的每個介面<ph id="ph2">`implementslist`</ph>。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>However, the name by which an interface defines the <ph id="ph1">`Sub`</ph> (in <ph id="ph2">`definedname`</ph>) doesn't have to match the name of this procedure (in <ph id="ph3">`name`</ph>).</source>
          <target state="translated">不過，介面定義的名稱<ph id="ph1">`Sub`</ph>(在<ph id="ph2">`definedname`</ph>) 不一定要符合此程序的名稱 (在<ph id="ph3">`name`</ph>)。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Returning from a Sub Procedure</source>
          <target state="translated">從子程序傳回</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>When a <ph id="ph1">`Sub`</ph> procedure returns to the calling code, execution continues with the statement after the statement that called it.</source>
          <target state="translated">當<ph id="ph1">`Sub`</ph>程序會傳回呼叫程式碼，呼叫它的陳述式之後的陳述式繼續執行。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The following example shows a return from a <ph id="ph1">`Sub`</ph> procedure.</source>
          <target state="translated">下列範例示範從傳回<ph id="ph1">`Sub`</ph>程序。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Exit Sub`</ph> and <ph id="ph2">`Return`</ph> statements cause an immediate exit from a <ph id="ph3">`Sub`</ph> procedure.</source>
          <target state="translated"><ph id="ph1">`Exit Sub`</ph>和<ph id="ph2">`Return`</ph>陳述式會造成立即結束<ph id="ph3">`Sub`</ph>程序。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Any number of <ph id="ph1">`Exit Sub`</ph> and <ph id="ph2">`Return`</ph> statements can appear anywhere in the procedure, and you can mix <ph id="ph3">`Exit Sub`</ph> and <ph id="ph4">`Return`</ph> statements.</source>
          <target state="translated">任何數目的<ph id="ph1">`Exit Sub`</ph>和<ph id="ph2">`Return`</ph>陳述式可以出現在任何地方程序，且您可以混合<ph id="ph3">`Exit Sub`</ph>和<ph id="ph4">`Return`</ph>陳述式。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Calling a Sub Procedure</source>
          <target state="translated">呼叫子函數程序</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>You call a <ph id="ph1">`Sub`</ph> procedure by using the procedure name in a statement and then following that name with its argument list in parentheses.</source>
          <target state="translated">您呼叫<ph id="ph1">`Sub`</ph>陳述式中使用的程序名稱，然後遵循和它的引數清單括號括住該名稱的程序。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>You can omit the parentheses only if you don't supply any arguments.</source>
          <target state="translated">只有當您未提供任何引數，您可以省略括號。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>However, your code is more readable if you always include the parentheses.</source>
          <target state="translated">不過，您的程式碼的可讀性您加上括號。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Sub`</ph> procedure and a <ph id="ph2">`Function`</ph> procedure  can have parameters and perform a series of statements.</source>
          <target state="translated">A<ph id="ph1">`Sub`</ph>程序和<ph id="ph2">`Function`</ph>程序可以有參數，並且執行一系列的陳述式。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>However, a <ph id="ph1">`Function`</ph> procedure returns a value, and a <ph id="ph2">`Sub`</ph> procedure doesn't.</source>
          <target state="translated">不過，<ph id="ph1">`Function`</ph>程序傳回的值，以及<ph id="ph2">`Sub`</ph>程序不會。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Therefore, you can't use a <ph id="ph1">`Sub`</ph> procedure in an expression.</source>
          <target state="translated">因此，您無法使用<ph id="ph1">`Sub`</ph>在運算式中的程序。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">`Call`</ph> keyword when you call a <ph id="ph2">`Sub`</ph> procedure, but that keyword isn't recommended for most uses.</source>
          <target state="translated">您可以使用<ph id="ph1">`Call`</ph>關鍵字，當您呼叫<ph id="ph2">`Sub`</ph>程序，但該關鍵字時，不建議用於大部分用途。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Call Statement<ept id="p1">](call-statement.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>Call 陳述式<ept id="p1">](call-statement.md)</ept>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Visual Basic sometimes rearranges arithmetic expressions to increase internal efficiency.</source>
          <target state="translated">Visual Basic 有時會重新排列提高內部效率的算術運算式。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For that reason, if your argument list includes expressions that call other procedures, you shouldn't assume that those expressions will be called in a particular order.</source>
          <target state="translated">基於這個理由，如果引數清單中包含運算式呼叫其他程序，您不應該假設這些運算式，會以特定順序呼叫。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Async Sub Procedures</source>
          <target state="translated">非同步 Sub 程序</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>By using the Async feature, you can invoke asynchronous functions without using explicit callbacks or manually splitting your code across multiple functions or lambda expressions.</source>
          <target state="translated">使用 Async 功能，可以叫用非同步函數，而不使用明確的回呼或手動將您的程式碼分散到多個函式或 lambda 運算式。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>If you mark a procedure with the <bpt id="p1">[</bpt>Async<ept id="p1">](../modifiers/async.md)</ept> modifier, you can use the <bpt id="p2">[</bpt>Await<ept id="p2">](../../../visual-basic/language-reference/operators/await-operator.md)</ept> operator in the procedure.</source>
          <target state="translated">如果您將標示的程序<bpt id="p1">[</bpt>非同步<ept id="p1">](../modifiers/async.md)</ept>修飾詞，您可以使用<bpt id="p2">[</bpt>Await<ept id="p2">](../../../visual-basic/language-reference/operators/await-operator.md)</ept>程序中的運算子。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>When control reaches an <ph id="ph1">`Await`</ph> expression in the <ph id="ph2">`Async`</ph> procedure, control returns to the caller, and progress in the procedure is suspended until the awaited task completes.</source>
          <target state="translated">當控制到達<ph id="ph1">`Await`</ph>中的運算式<ph id="ph2">`Async`</ph>程序中，控制權會回到呼叫端，並在程序的進度會暫停，直到等候的工作完成。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>When the task is complete, execution can resume in the procedure.</source>
          <target state="translated">當工作完成時，可以在程序繼續執行。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`Async`</ph> procedure returns to the caller when either the first awaited object that’s not yet complete is encountered or the end of the <ph id="ph2">`Async`</ph> procedure is reached, whichever occurs first.</source>
          <target state="translated"><ph id="ph1">`Async`</ph>程序傳回至呼叫端發生其中一個第一次的等候的物件尚未完成時或結尾<ph id="ph2">`Async`</ph>達到程序時，何者先發生。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>You can also mark a <bpt id="p1">[</bpt>Function Statement<ept id="p1">](function-statement.md)</ept> with the <ph id="ph1">`Async`</ph> modifier.</source>
          <target state="translated">您也可以將標記<bpt id="p1">[</bpt>Function 陳述式<ept id="p1">](function-statement.md)</ept>與<ph id="ph1">`Async`</ph>修飾詞。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`Async`</ph> function can have a return type of &lt;xref:System.Threading.Tasks.Task%601&gt; or &lt;xref:System.Threading.Tasks.Task&gt;.</source>
          <target state="translated"><ph id="ph1">`Async`</ph>函數可以有傳回型別&lt;xref:System.Threading.Tasks.Task%601&gt;或&lt;xref:System.Threading.Tasks.Task&gt;。&lt;/xref:System.Threading.Tasks.Task&gt; &lt;/xref:System.Threading.Tasks.Task%601&gt;</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>An example later in this topic shows an <ph id="ph1">`Async`</ph> function that has a return type of &lt;xref:System.Threading.Tasks.Task%601&gt;.</source>
          <target state="translated">範例稍後在本主題將說明<ph id="ph1">`Async`</ph> &lt;xref:System.Threading.Tasks.Task%601&gt;.&lt;/xref:System.Threading.Tasks.Task%601&gt;的傳回類型的函式</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`Async`</ph> <ph id="ph2">`Sub`</ph> procedures are primarily used for event handlers, where a value can't be returned.</source>
          <target state="translated"><ph id="ph1">`Async`</ph><ph id="ph2">`Sub`</ph>程序主要用於事件處理常式，無法傳回值的位置。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`Async``Sub`</ph> procedure can't be awaited, and the caller of an <ph id="ph2">`Async``Sub`</ph> procedure can't catch exceptions that the <ph id="ph3">`Sub`</ph> procedure throws.</source>
          <target state="translated"><ph id="ph1">`Async``Sub`</ph>無法等候程序，和呼叫端的<ph id="ph2">`Async``Sub`</ph>程序無法攔截例外狀況，<ph id="ph3">`Sub`</ph>程序則會擲回。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`Async`</ph> procedure can't declare any <bpt id="p1">[</bpt>ByRef<ept id="p1">](../modifiers/byref.md)</ept> parameters.</source>
          <target state="translated"><ph id="ph1">`Async`</ph>程序不可以宣告任何<bpt id="p1">[</bpt>ByRef<ept id="p1">](../modifiers/byref.md)</ept>參數。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>For more information about <ph id="ph1">`Async`</ph> procedures, see <bpt id="p1">[</bpt>Asynchronous Programming with Async and Await<ept id="p1">](../../../visual-basic/programming-guide/concepts/async/index.md)</ept>, <bpt id="p2">[</bpt>Control Flow in Async Programs<ept id="p2">](../../../visual-basic/programming-guide/concepts/async/control-flow-in-async-programs.md)</ept>, and <bpt id="p3">[</bpt>Async Return Types<ept id="p3">](../../../visual-basic/programming-guide/concepts/async/async-return-types.md)</ept>.</source>
          <target state="translated">如需詳細資訊<ph id="ph1">`Async`</ph>程序，請參閱<bpt id="p1">[</bpt>使用 Async 和 Await 進行非同步程式設計<ept id="p1">](../../../visual-basic/programming-guide/concepts/async/index.md)</ept>，<bpt id="p2">[</bpt>非同步程式中的控制流程<ept id="p2">](../../../visual-basic/programming-guide/concepts/async/control-flow-in-async-programs.md)</ept>，和<bpt id="p3">[</bpt>非同步傳回型別<ept id="p3">](../../../visual-basic/programming-guide/concepts/async/async-return-types.md)</ept>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The following example uses the <ph id="ph1">`Sub`</ph> statement to define the name, parameters, and code that form the body of a <ph id="ph2">`Sub`</ph> procedure.</source>
          <target state="translated">下列範例會使用<ph id="ph1">`Sub`</ph>陳述式來定義名稱、 參數和程式碼，構成的主體<ph id="ph2">`Sub`</ph>程序。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements#58<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/sub-statement_1.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>VbVbalrStatements #&amp;58;<ept id="p2">](../../../visual-basic/language-reference/error-messages/codesnippet/VisualBasic/sub-statement_1.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>In the following example, <ph id="ph1">`DelayAsync`</ph> is an an <ph id="ph2">`Async``Function`</ph> that has a return type of &lt;xref:System.Threading.Tasks.Task%601&gt;.</source>
          <target state="translated">在下列範例中，<ph id="ph1">`DelayAsync`</ph>是<ph id="ph2">`Async``Function`</ph>具有&lt;xref:System.Threading.Tasks.Task%601&gt;.&lt;/xref:System.Threading.Tasks.Task%601&gt;的傳回型別</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`DelayAsync`</ph> has a <ph id="ph2">`Return`</ph> statement that returns an integer.</source>
          <target state="translated"><ph id="ph1">`DelayAsync`</ph> 具有傳回整數的 <ph id="ph2">`Return`</ph> 陳述式。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Therefore, the function declaration of <ph id="ph1">`DelayAsync`</ph> must have a return type of <ph id="ph2">`Task(Of Integer)`</ph>.</source>
          <target state="translated">因此，函式宣告的<ph id="ph1">`DelayAsync`</ph>的傳回型別必須<ph id="ph2">`Task(Of Integer)`</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Because the return type is <ph id="ph1">`Task(Of Integer)`</ph>, the evaluation of the <ph id="ph2">`Await`</ph> expression in <ph id="ph3">`DoSomethingAsync`</ph> produces an integer, as the following statement shows: <ph id="ph4">`Dim result As Integer = Await delayTask`</ph>.</source>
          <target state="translated">因為傳回型別是<ph id="ph1">`Task(Of Integer)`</ph>，評估<ph id="ph2">`Await`</ph>中的運算式<ph id="ph3">`DoSomethingAsync`</ph>產生一個整數，下列陳述式所示︰ <ph id="ph4">`Dim result As Integer = Await delayTask`</ph>。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`startButton_Click`</ph> procedure is an example of an <ph id="ph2">`Async Sub`</ph> procedure.</source>
          <target state="translated"><ph id="ph1">`startButton_Click`</ph>程序是範例<ph id="ph2">`Async Sub`</ph>程序。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Because <ph id="ph1">`DoSomethingAsync`</ph> is an <ph id="ph2">`Async`</ph> function, the task for the call to <ph id="ph3">`DoSomethingAsync`</ph> must be awaited, as the following statement shows: <ph id="ph4">`Await DoSomethingAsync()`</ph>.</source>
          <target state="translated">因為<ph id="ph1">`DoSomethingAsync`</ph>是<ph id="ph2">`Async`</ph>函式，呼叫工作<ph id="ph3">`DoSomethingAsync`</ph>必須等候，下列陳述式所示︰ <ph id="ph4">`Await DoSomethingAsync()`</ph>。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`startButton_Click``Sub`</ph> procedure must be defined with the <ph id="ph2">`Async`</ph> modifier because it has an <ph id="ph3">`Await`</ph> expression.</source>
          <target state="translated"><ph id="ph1">`startButton_Click``Sub`</ph>程序都必須定義<ph id="ph2">`Async`</ph>修飾詞因為它有<ph id="ph3">`Await`</ph>運算式。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>csAsyncMethod#1<ept id="p2">](../../../csharp/programming-guide/classes-and-structs/codesnippet/VisualBasic/sub-statement_2.vb)</ept><ept id="p1">]</ept></source>
          <target state="translated"><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>csAsyncMethod&amp;#1;<ept id="p2">](../../../csharp/programming-guide/classes-and-structs/codesnippet/VisualBasic/sub-statement_2.vb)</ept><ept id="p1">]</ept></target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Implements Statement<ept id="p1">](implements-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Implements 陳述式<ept id="p1">](implements-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Function Statement<ept id="p1">](function-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Function 陳述式<ept id="p1">](function-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Parameter List<ept id="p1">](parameter-list.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>參數清單<ept id="p1">](parameter-list.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Dim Statement<ept id="p1">](dim-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Dim 陳述式<ept id="p1">](dim-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Call Statement<ept id="p1">](call-statement.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Call 陳述式<ept id="p1">](call-statement.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Of<ept id="p1">](of-clause.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>Of<ept id="p1">](of-clause.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Parameter Arrays<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/parameter-arrays.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>參數陣列<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/parameter-arrays.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>How to: Use a Generic Class<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/how-to-use-a-generic-class.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>如何︰ 使用泛型類別<ept id="p1">](../../../visual-basic/programming-guide/language-features/data-types/how-to-use-a-generic-class.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Troubleshooting Procedures<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/troubleshooting-procedures.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>疑難排解程序<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/troubleshooting-procedures.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Partial Methods<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/partial-methods.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>部分方法<ept id="p1">](../../../visual-basic/programming-guide/language-features/procedures/partial-methods.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>