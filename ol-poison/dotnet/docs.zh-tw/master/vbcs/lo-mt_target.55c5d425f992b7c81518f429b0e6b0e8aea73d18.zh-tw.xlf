<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-tw">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-317e149" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ccdb87188b924303057d5867dccece937defe74d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\visual-basic\reference\command-line-compiler\target.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">vbcs_lo-mt</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Machine Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9410af692b0477cf13d7747f0c1f53251f463b76</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">aea18e677c5e98f2b9cb9c87feb45b0e2e1cf678</xliffext:olxliffhash>
      <xliffext:poisonError xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Handback file name: lo-mt_target.55c5d425f992b7c81518f429b0e6b0e8aea73d18.zh-tw is different with handoff file name: target.55c5d425f992b7c81518f429b0e6b0e8aea73d18.zh-tw.</xliffext:poisonError>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>/target (Visual Basic) | Microsoft Docs</source>
          <target state="translated">/target (Visual Basic) |Microsoft 文件</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>/target (Visual Basic)</source>
          <target state="translated">/target (Visual Basic)</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Specifies the format of compiler output.</source>
          <target state="translated">指定編譯器輸出格式。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">語法</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Remarks</source>
          <target state="translated">備註</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The following table summarizes the effect of the <ph id="ph1">`/target`</ph> option.</source>
          <target state="translated">下表摘要說明的效果<ph id="ph1">`/target`</ph>選項。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Option<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>選項<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><bpt id="p1">**</bpt>Behavior<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>行為<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Causes the compiler to create an executable console application.</source>
          <target state="translated">讓編譯器將建立可執行的主控台應用程式。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This is the default option when no <ph id="ph1">`/target`</ph> option is specified.</source>
          <target state="translated">這是預設選項，當未<ph id="ph1">`/target`</ph>指定選項。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The executable file is created with an .exe extension.</source>
          <target state="translated">可執行檔會建立副檔名為.exe。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified with the <ph id="ph1">`/out`</ph> option, the output file name takes the name of the input file that contains the <ph id="ph2">`Sub Main`</ph> procedure.</source>
          <target state="translated">除非另有指定<ph id="ph1">`/out`</ph>選項，輸出檔名稱會採用包含的輸入檔名稱<ph id="ph2">`Sub Main`</ph>程序。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Only one <ph id="ph1">`Sub Main`</ph> procedure is required in the source-code files that are compiled into an .exe file.</source>
          <target state="translated">只有一個<ph id="ph1">`Sub Main`</ph>編譯為.exe 檔的原始程式檔中所需的程序。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Use the <ph id="ph1">`/main`</ph> compiler option to specify which class contains the <ph id="ph2">`Sub Main`</ph> procedure.</source>
          <target state="translated">使用<ph id="ph1">`/main`</ph>編譯器選項以指定哪一個類別包含<ph id="ph2">`Sub Main`</ph>程序。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Causes the compiler to create a dynamic-link library (DLL).</source>
          <target state="translated">讓編譯器建立動態連結程式庫 (DLL)。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The dynamic-link library file is created with a .dll extension.</source>
          <target state="translated">動態連結程式庫檔案會建立副檔名為.dll。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified with the <ph id="ph1">`/out`</ph> option, the output file name takes the name of the first input file.</source>
          <target state="translated">除非另有指定<ph id="ph1">`/out`</ph>選項，輸出檔名稱會採用第一個輸入檔的名稱。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>When building a DLL, a <ph id="ph1">`Sub Main`</ph> procedure is not required.</source>
          <target state="translated">當建置 DLL，<ph id="ph1">`Sub Main`</ph>程序就不需要。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Causes the compiler to generate a module that can be added to an assembly.</source>
          <target state="translated">讓編譯器產生的模組，可以加入組件。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The output file is created with an extension of .netmodule.</source>
          <target state="translated">輸出檔會建立副檔名為.netmodule。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The .NET common language runtime cannot load a file that does not have an assembly.</source>
          <target state="translated">.NET common language runtime 無法載入組件沒有的檔案。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>However, you can incorporate such a file into the assembly manifest of an assembly by using <ph id="ph1">`/reference`</ph>.</source>
          <target state="translated">不過，您可以將這類檔案合併組件的組件資訊清單使用<ph id="ph1">`/reference`</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When code in one module references internal types in another module, both modules must be incorporated into an assembly manifest by using <ph id="ph1">`/reference`</ph>.</source>
          <target state="translated">當一個模組中的程式碼參考另一個模組的內部型別時，這兩個模組都必須加入至組件資訊清單使用<ph id="ph1">`/reference`</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">[</bpt>/addmodule<ept id="p1">](../../../visual-basic/reference/command-line-compiler/addmodule.md)</ept> option imports metadata from a module.</source>
          <target state="translated"><bpt id="p1">[</bpt>/Addmodule<ept id="p1">](../../../visual-basic/reference/command-line-compiler/addmodule.md)</ept>選項從模組匯入中繼資料。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Causes the compiler to create an executable Windows-based application.</source>
          <target state="translated">讓編譯器建立的可執行檔的 Windows 架構應用程式。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The executable file is created with an .exe extension.</source>
          <target state="translated">可執行檔會建立副檔名為.exe。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A Windows-based application is one that provides a user interface from either the <ph id="ph1">[!INCLUDE[dnprdnshort](../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph> class library or with the Win32 APIs.</source>
          <target state="translated">Windows 架構應用程式是提供使用者介面，從<ph id="ph1">[!INCLUDE[dnprdnshort](../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph>類別庫或使用 Win32 Api。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified with the <ph id="ph1">`/out`</ph> option, the output file name takes the name of the input file that contains the <ph id="ph2">`Sub Main`</ph> procedure.</source>
          <target state="translated">除非另有指定<ph id="ph1">`/out`</ph>選項，輸出檔名稱會採用包含的輸入檔名稱<ph id="ph2">`Sub Main`</ph>程序。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Only one <ph id="ph1">`Sub Main`</ph> procedure is required in the source-code files that are compiled into an .exe file.</source>
          <target state="translated">只有一個<ph id="ph1">`Sub Main`</ph>編譯為.exe 檔的原始程式檔中所需的程序。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>In cases where your code has more than one class that has a <ph id="ph1">`Sub Main`</ph> procedure, use the <ph id="ph2">`/main`</ph> compiler option to specify which class contains the <ph id="ph3">`Sub Main`</ph> procedure</source>
          <target state="translated">當您的程式碼已有多個類別<ph id="ph1">`Sub Main`</ph>程序中，使用<ph id="ph2">`/main`</ph>編譯器選項以指定哪一個類別包含<ph id="ph3">`Sub Main`</ph>程序</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Causes the compiler to create an executable Windows-based application that must be run in an app container.</source>
          <target state="translated">讓編譯器建立的可執行 Windows 架構應用程式必須執行應用程式容器中。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This setting is designed to be used for <ph id="ph1">[!INCLUDE[win8_appname_long](../../../csharp/includes/win8_appname_long_md.md)]</ph> applications.</source>
          <target state="translated">這個設定設計用於<ph id="ph1">[!INCLUDE[win8_appname_long](../../../csharp/includes/win8_appname_long_md.md)]</ph>應用程式。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">**</bpt>appcontainerexe<ept id="p1">**</ept> setting sets a bit in the Characteristics field of the <bpt id="p2">[</bpt>Portable Executable<ept id="p2">](http://go.microsoft.com/fwlink/p/?LinkId=236960)</ept> file.</source>
          <target state="translated"><bpt id="p1">**</bpt>Appcontainerexe<ept id="p1">**</ept>設定的特性 欄位中設定一個位元<bpt id="p2">[</bpt>可攜式執行檔<ept id="p2">](http://go.microsoft.com/fwlink/p/?LinkId=236960)</ept>檔案。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This bit indicates that the app must be run in an app container.</source>
          <target state="translated">這個位元表示應用程式，必須執行應用程式容器中。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When this bit is set, an error occurs if the <ph id="ph1">`CreateProcess`</ph> method tries to launch the application outside of an app container.</source>
          <target state="translated">當這個位元設定時，如果發生錯誤<ph id="ph1">`CreateProcess`</ph>方法嘗試啟動應用程式容器之外的應用程式。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Aside from this bit setting, <bpt id="p1">**</bpt>/target:appcontainerexe<ept id="p1">**</ept> is equivalent to <bpt id="p2">**</bpt>/target:winexe<ept id="p2">**</ept>.</source>
          <target state="translated">此位元設定，除了<bpt id="p1">**</bpt>/target: appcontainerexe<ept id="p1">**</ept>相當於<bpt id="p2">**</bpt>/target: winexe<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The executable file is created with an .exe extension.</source>
          <target state="translated">可執行檔會建立副檔名為.exe。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Unless you specify otherwise by using the <ph id="ph1">`/out`</ph> option, the output file name takes the name of the input file that contains the <ph id="ph2">`Sub Main`</ph> procedure.</source>
          <target state="translated">除非您另外指定使用<ph id="ph1">`/out`</ph>選項，輸出檔名稱會採用包含的輸入檔名稱<ph id="ph2">`Sub Main`</ph>程序。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Only one <ph id="ph1">`Sub Main`</ph> procedure is required in the source-code files that are compiled into an .exe file.</source>
          <target state="translated">只有一個<ph id="ph1">`Sub Main`</ph>編譯為.exe 檔的原始程式檔中所需的程序。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If your code contains more than one class that has a <ph id="ph1">`Sub Main`</ph> procedure, use the <ph id="ph2">`/main`</ph> compiler option to specify which class contains the <ph id="ph3">`Sub Main`</ph> procedure</source>
          <target state="translated">如果您的程式碼會包含一個以上的類別具有<ph id="ph1">`Sub Main`</ph>程序中，使用<ph id="ph2">`/main`</ph>編譯器選項以指定哪一個類別包含<ph id="ph3">`Sub Main`</ph>程序</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Causes the compiler to create an intermediate file that you can convert to a Windows Runtime binary (.winmd) file.</source>
          <target state="translated">讓編譯器來建立中繼檔案，您可以將它轉換成 Windows 執行階段二進位檔 (.winmd) 檔案。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The .winmd file can be consumed by JavaScript and C++ programs, in addition to managed language programs.</source>
          <target state="translated">JavaScript 和 c + + 程式，除了 managed 的語言程式之外，可以使用.winmd 檔案。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The intermediate file is created with a .winmdobj extension.</source>
          <target state="translated">副檔名為.winmdobj 建立中繼檔案。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Unless you specify otherwise by using the <ph id="ph1">`/out`</ph> option, the output file name takes the name of the first input file.</source>
          <target state="translated">除非您另外指定使用<ph id="ph1">`/out`</ph>選項，輸出檔名稱會採用第一個輸入檔的名稱。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Sub Main`</ph> procedure isn’t required.</source>
          <target state="translated">A<ph id="ph1">`Sub Main`</ph>程序不是必要步驟。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The .winmdobj file is designed to be used as input for the &lt;xref:Microsoft.Build.Tasks.WinMDExp&gt; export tool to produce a Windows metadata (WinMD) file.</source>
          <target state="translated">.Winmdobj 檔案設計來做為輸入，&lt;xref:Microsoft.Build.Tasks.WinMDExp&gt;匯出工具產生 Windows 中繼資料 (WinMD) 檔案。&lt;/xref:Microsoft.Build.Tasks.WinMDExp&gt;</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The WinMD file has a .winmd extension and contains both the code from the original library and the WinMD definitions that JavaScript, C++, and  the Windows Runtime use.</source>
          <target state="translated">WinMD 檔案副檔名.winmd，且包含的程式碼，從原始程式庫和 WinMD 定義該 JavaScript、 c + + 和 Windows 執行階段使用。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Unless you specify <ph id="ph1">`/target:module`</ph>, <ph id="ph2">`/target`</ph> causes a <ph id="ph3">[!INCLUDE[dnprdnshort](../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph> assembly manifest to be added to an output file.</source>
          <target state="translated">除非您指定<ph id="ph1">`/target:module`</ph>，<ph id="ph2">`/target`</ph>造成<ph id="ph3">[!INCLUDE[dnprdnshort](../../../csharp/getting-started/includes/dnprdnshort_md.md)]</ph>可以加入至輸出檔的組件資訊清單。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Each instance of Vbc.exe produces, at most, one output file.</source>
          <target state="translated">Vbc.exe 的每個執行個體，最多一個輸出檔。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If you specify a compiler option such as <ph id="ph1">`/out`</ph> or <ph id="ph2">`/target`</ph> more than one time, the last one the compiler processes is put into effect.</source>
          <target state="translated">如果您指定的編譯器選項，例如<ph id="ph1">`/out`</ph>或<ph id="ph2">`/target`</ph>一次以上，最後一個編譯器處理序會放入效果。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Information about all files in a compilation is added to the manifest.</source>
          <target state="translated">在編譯中的所有檔案的相關資訊會加入至資訊清單。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>All output files except those created with <ph id="ph1">`/target:module`</ph> contain assembly metadata in the manifest.</source>
          <target state="translated">輸出檔案以外建立的所有<ph id="ph1">`/target:module`</ph>包含資訊清單中的組件中繼資料。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Use <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](https://msdn.microsoft.com/library/f7dy01k1)</ept> to view the metadata in an output file.</source>
          <target state="translated">使用<bpt id="p1">[</bpt>Ildasm.exe （IL 反組譯工具）<ept id="p1">](https://msdn.microsoft.com/library/f7dy01k1)</ept>檢視輸出檔中的中繼資料。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The short form of <ph id="ph1">`/target`</ph> is <ph id="ph2">`/t`</ph>.</source>
          <target state="translated">簡短形式<ph id="ph1">`/target`</ph>是<ph id="ph2">`/t`</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>To set /target in the Visual Studio IDE</source>
          <target state="translated">在 Visual Studio IDE 中設定 /target</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Have a project selected in <bpt id="p1">**</bpt>Solution Explorer<ept id="p1">**</ept>.</source>
          <target state="translated">在 <bpt id="p1">**</bpt>方案總管<ept id="p1">**</ept>中選取專案。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>On the <bpt id="p1">**</bpt>Project<ept id="p1">**</ept> menu, click <bpt id="p2">**</bpt>Properties<ept id="p2">**</ept>.</source>
          <target state="translated">在<bpt id="p1">**</bpt>專案<ept id="p1">**</ept>] 功能表上，按一下 [<bpt id="p2">**</bpt>屬性<ept id="p2">**</ept>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Introduction to the Project Designer<ept id="p1">](http://msdn.microsoft.com/en-us/898dd854-c98d-430c-ba1b-a913ce3c73d7)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>專案設計工具簡介<ept id="p1">](http://msdn.microsoft.com/en-us/898dd854-c98d-430c-ba1b-a913ce3c73d7)</ept>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Click the <bpt id="p1">**</bpt>Application<ept id="p1">**</ept> tab.</source>
          <target state="translated">按一下 [應用程式]  索引標籤。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Modify the value in the <bpt id="p1">**</bpt>Application Type<ept id="p1">**</ept> box.</source>
          <target state="translated">修改中的值<bpt id="p1">**</bpt>應用程式類型<ept id="p1">**</ept>方塊。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">範例</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The following code compiles <ph id="ph1">`in.vb`</ph>, creating <ph id="ph2">`in.dll`</ph>:</source>
          <target state="translated">下列程式碼編譯<ph id="ph1">`in.vb`</ph>、 建立<ph id="ph2">`in.dll`</ph>:</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">另請參閱</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><bpt id="p1">[</bpt>Visual Basic Command-Line Compiler<ept id="p1">](../../../visual-basic/reference/command-line-compiler/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Visual Basic 命令列編譯器<ept id="p1">](../../../visual-basic/reference/command-line-compiler/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>/main<ept id="p1">](../../../visual-basic/reference/command-line-compiler/main.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>/main<ept id="p1">](../../../visual-basic/reference/command-line-compiler/main.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>/out (Visual Basic)<ept id="p1">](../../../visual-basic/reference/command-line-compiler/out.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>/out (Visual Basic)<ept id="p1">](../../../visual-basic/reference/command-line-compiler/out.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>/reference (Visual Basic)<ept id="p1">](../../../visual-basic/reference/command-line-compiler/reference.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>/reference (Visual Basic)<ept id="p1">](../../../visual-basic/reference/command-line-compiler/reference.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>/addmodule<ept id="p1">](../../../visual-basic/reference/command-line-compiler/addmodule.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>/addmodule<ept id="p1">](../../../visual-basic/reference/command-line-compiler/addmodule.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>/moduleassemblyname<ept id="p1">](../../../visual-basic/reference/command-line-compiler/moduleassemblyname.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>/moduleassemblyname<ept id="p1">](../../../visual-basic/reference/command-line-compiler/moduleassemblyname.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Assemblies and the Global Assembly Cache<ept id="p1">](../../../visual-basic/programming-guide/concepts/assemblies-gac/index.md)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1"> [</bpt>組件和全域組件快取<ept id="p1">](../../../visual-basic/programming-guide/concepts/assemblies-gac/index.md)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><bpt id="p1"> [</bpt>Sample Compilation Command Lines<ept id="p1">](../../../visual-basic/reference/command-line-compiler/sample-compilation-command-lines.md)</ept></source>
          <target state="translated"><bpt id="p1"> [</bpt>編譯命令列範例<ept id="p1">](../../../visual-basic/reference/command-line-compiler/sample-compilation-command-lines.md)</ept></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>